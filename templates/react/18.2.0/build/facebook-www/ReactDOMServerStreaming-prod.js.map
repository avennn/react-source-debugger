{"version":3,"file":"ReactDOMServerStreaming-prod.js","sources":["../../packages/react-server-dom-relay/src/ReactServerStreamConfigFB.js","../../packages/shared/forks/ReactFeatureFlags.www.js","../../packages/shared/hasOwnProperty.js","../../packages/react-dom/src/shared/DOMProperty.js","../../packages/react-dom/src/shared/CSSProperty.js","../../packages/react-dom/src/server/escapeTextForBrowser.js","../../packages/react-dom/src/shared/hyphenateStyleName.js","../../packages/react-dom/src/shared/sanitizeURL.js","../../packages/shared/isArray.js","../../packages/react-dom/src/server/ReactDOMServerFormatConfig.js","../../packages/shared/assign.js","../../packages/shared/ReactSymbols.www.js","../../packages/shared/ReactSharedInternals.js","../../packages/shared/ReactComponentStackFrame.js","../../packages/shared/checkPropTypes.js","../../packages/react-server/src/ReactFizzContext.js","../../packages/react-server/src/ReactFizzNewContext.js","../../packages/shared/ReactInstanceMap.js","../../packages/react-server/src/ReactFizzClassComponent.js","../../packages/react-server/src/ReactFizzTreeContext.js","../../packages/shared/objectIs.js","../../packages/react-server/src/ReactFizzHooks.js","../../packages/react-server/src/ReactFizzServer.js","../../packages/react-server-dom-relay/src/ReactDOMServerFB.js"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nexport type Destination = {\n  buffer: string,\n  done: boolean,\n  fatal: boolean,\n  error: mixed,\n};\n\nexport type PrecomputedChunk = string;\nexport type Chunk = string;\n\nexport function scheduleWork(callback: () => void) {\n  // We don't schedule work in this model, and instead expect performWork to always be called repeatedly.\n}\n\nexport function flushBuffered(destination: Destination) {}\n\nexport function beginWriting(destination: Destination) {}\n\nexport function writeChunk(\n  destination: Destination,\n  chunk: Chunk | PrecomputedChunk,\n): void {\n  destination.buffer += chunk;\n}\n\nexport function writeChunkAndReturn(\n  destination: Destination,\n  chunk: Chunk | PrecomputedChunk,\n): boolean {\n  destination.buffer += chunk;\n  return true;\n}\n\nexport function completeWriting(destination: Destination) {}\n\nexport function close(destination: Destination) {\n  destination.done = true;\n}\n\nexport function stringToChunk(content: string): Chunk {\n  return content;\n}\n\nexport function stringToPrecomputedChunk(content: string): PrecomputedChunk {\n  return content;\n}\n\nexport function closeWithError(destination: Destination, error: mixed): void {\n  destination.done = true;\n  destination.fatal = true;\n  destination.error = error;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport typeof * as FeatureFlagsType from 'shared/ReactFeatureFlags';\nimport typeof * as ExportsType from './ReactFeatureFlags.www';\nimport typeof * as DynamicFeatureFlags from './ReactFeatureFlags.www-dynamic';\n\n// Re-export dynamic flags from the www version.\nconst dynamicFeatureFlags: DynamicFeatureFlags = require('ReactFeatureFlags');\n\nexport const {\n  disableInputAttributeSyncing,\n  enableTrustedTypesIntegration,\n  disableSchedulerTimeoutBasedOnReactExpirationTime,\n  warnAboutSpreadingKeyToJSX,\n  replayFailedUnitOfWorkWithInvokeGuardedCallback,\n  enableFilterEmptyStringAttributesDOM,\n  enableLegacyFBSupport,\n  deferRenderPhaseUpdateToNextBatch,\n  enableDebugTracing,\n  skipUnmountedBoundaries,\n  createRootStrictEffectsByDefault,\n  enableUseRefAccessWarning,\n  disableNativeComponentFrames,\n  disableSchedulerTimeoutInWorkLoop,\n  enableLazyContextPropagation,\n  enableSyncDefaultUpdates,\n  enableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay,\n  enableClientRenderFallbackOnTextMismatch,\n} = dynamicFeatureFlags;\n\n// On WWW, __EXPERIMENTAL__ is used for a new modern build.\n// It's not used anywhere in production yet.\n\nexport const enableStrictEffects =\n  __DEV__ && dynamicFeatureFlags.enableStrictEffects;\nexport const debugRenderPhaseSideEffectsForStrictMode = __DEV__;\nexport const enableProfilerTimer = __PROFILE__;\nexport const enableProfilerCommitHooks = __PROFILE__;\nexport const enableProfilerNestedUpdatePhase = __PROFILE__;\nexport const enableProfilerNestedUpdateScheduledHook =\n  __PROFILE__ && dynamicFeatureFlags.enableProfilerNestedUpdateScheduledHook;\nexport const enableUpdaterTracking = __PROFILE__;\n\nexport const enableSuspenseLayoutEffectSemantics = true;\nexport const enableSuspenseAvoidThisFallback = true;\nexport const enableSuspenseAvoidThisFallbackFizz = false;\nexport const enableCPUSuspense = true;\n\n// Logs additional User Timing API marks for use with an experimental profiling tool.\nexport const enableSchedulingProfiler =\n  __PROFILE__ && dynamicFeatureFlags.enableSchedulingProfiler;\n\n// Note: we'll want to remove this when we to userland implementation.\n// For now, we'll turn it on for everyone because it's *already* on for everyone in practice.\n// At least this will let us stop shipping <Profiler> implementation to all users.\nexport const enableSchedulerDebugging = true;\nexport const warnAboutDeprecatedLifecycles = true;\nexport const disableLegacyContext = __EXPERIMENTAL__;\nexport const warnAboutStringRefs = false;\nexport const warnAboutDefaultPropsOnFunctionComponents = false;\nexport const enableGetInspectorDataForInstanceInProduction = false;\n\nexport const enableCache = true;\nexport const enableCacheElement = true;\n\nexport const disableJavaScriptURLs = true;\n\n// TODO: www currently relies on this feature. It's disabled in open source.\n// Need to remove it.\nexport const disableCommentsAsDOMContainers = false;\n\nexport const disableModulePatternComponents = true;\n\nexport const enableCreateEventHandleAPI = true;\n\nexport const enableScopeAPI = true;\n\nexport const enableSuspenseCallback = true;\n\nexport const enableLegacyHidden = true;\n\nexport const enableComponentStackLocations = true;\n\nexport const disableTextareaChildren = __EXPERIMENTAL__;\n\n// Enable forked reconciler. Piggy-backing on the \"variant\" global so that we\n// don't have to add another test dimension. The build system will compile this\n// to the correct value.\nexport const enableNewReconciler = __VARIANT__;\n\nexport const allowConcurrentByDefault = true;\n\nexport const deletedTreeCleanUpLevel = 3;\n\nexport const consoleManagedByDevToolsDuringStrictMode = true;\nexport const enableServerContext = true;\n\n// Some www surfaces are still using this. Remove once they have been migrated.\nexport const enableUseMutableSource = true;\n\nexport const enableCustomElementPropertySupport = __EXPERIMENTAL__;\n\nexport const enableTransitionTracing = false;\n\nexport const enableSymbolFallbackForWWW = true;\n// Flow magic to verify the exports of this file match the original version.\n// eslint-disable-next-line no-unused-vars\ntype Check<_X, Y: _X, X: Y = _X> = null;\n// eslint-disable-next-line no-unused-expressions\n(null: Check<ExportsType, FeatureFlagsType>);\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\n\nexport default hasOwnProperty;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport {\n  enableFilterEmptyStringAttributesDOM,\n  enableCustomElementPropertySupport,\n} from 'shared/ReactFeatureFlags';\nimport hasOwnProperty from 'shared/hasOwnProperty';\n\ntype PropertyType = 0 | 1 | 2 | 3 | 4 | 5 | 6;\n\n// A reserved attribute.\n// It is handled by React separately and shouldn't be written to the DOM.\nexport const RESERVED = 0;\n\n// A simple string attribute.\n// Attributes that aren't in the filter are presumed to have this type.\nexport const STRING = 1;\n\n// A string attribute that accepts booleans in React. In HTML, these are called\n// \"enumerated\" attributes with \"true\" and \"false\" as possible values.\n// When true, it should be set to a \"true\" string.\n// When false, it should be set to a \"false\" string.\nexport const BOOLEANISH_STRING = 2;\n\n// A real boolean attribute.\n// When true, it should be present (set either to an empty string or its name).\n// When false, it should be omitted.\nexport const BOOLEAN = 3;\n\n// An attribute that can be used as a flag as well as with a value.\n// When true, it should be present (set either to an empty string or its name).\n// When false, it should be omitted.\n// For any other value, should be present with that value.\nexport const OVERLOADED_BOOLEAN = 4;\n\n// An attribute that must be numeric or parse as a numeric.\n// When falsy, it should be removed.\nexport const NUMERIC = 5;\n\n// An attribute that must be positive numeric or parse as a positive numeric.\n// When falsy, it should be removed.\nexport const POSITIVE_NUMERIC = 6;\n\nexport type PropertyInfo = {|\n  +acceptsBooleans: boolean,\n  +attributeName: string,\n  +attributeNamespace: string | null,\n  +mustUseProperty: boolean,\n  +propertyName: string,\n  +type: PropertyType,\n  +sanitizeURL: boolean,\n  +removeEmptyString: boolean,\n|};\n\n/* eslint-disable max-len */\nexport const ATTRIBUTE_NAME_START_CHAR =\n  ':A-Z_a-z\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD';\n/* eslint-enable max-len */\nexport const ATTRIBUTE_NAME_CHAR =\n  ATTRIBUTE_NAME_START_CHAR + '\\\\-.0-9\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040';\n\nexport const VALID_ATTRIBUTE_NAME_REGEX = new RegExp(\n  '^[' + ATTRIBUTE_NAME_START_CHAR + '][' + ATTRIBUTE_NAME_CHAR + ']*$',\n);\n\nconst illegalAttributeNameCache = {};\nconst validatedAttributeNameCache = {};\n\nexport function isAttributeNameSafe(attributeName: string): boolean {\n  if (hasOwnProperty.call(validatedAttributeNameCache, attributeName)) {\n    return true;\n  }\n  if (hasOwnProperty.call(illegalAttributeNameCache, attributeName)) {\n    return false;\n  }\n  if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)) {\n    validatedAttributeNameCache[attributeName] = true;\n    return true;\n  }\n  illegalAttributeNameCache[attributeName] = true;\n  if (__DEV__) {\n    console.error('Invalid attribute name: `%s`', attributeName);\n  }\n  return false;\n}\n\nexport function shouldIgnoreAttribute(\n  name: string,\n  propertyInfo: PropertyInfo | null,\n  isCustomComponentTag: boolean,\n): boolean {\n  if (propertyInfo !== null) {\n    return propertyInfo.type === RESERVED;\n  }\n  if (isCustomComponentTag) {\n    return false;\n  }\n  if (\n    name.length > 2 &&\n    (name[0] === 'o' || name[0] === 'O') &&\n    (name[1] === 'n' || name[1] === 'N')\n  ) {\n    return true;\n  }\n  return false;\n}\n\nexport function shouldRemoveAttributeWithWarning(\n  name: string,\n  value: mixed,\n  propertyInfo: PropertyInfo | null,\n  isCustomComponentTag: boolean,\n): boolean {\n  if (propertyInfo !== null && propertyInfo.type === RESERVED) {\n    return false;\n  }\n  switch (typeof value) {\n    case 'function':\n    // $FlowIssue symbol is perfectly valid here\n    case 'symbol': // eslint-disable-line\n      return true;\n    case 'boolean': {\n      if (isCustomComponentTag) {\n        return false;\n      }\n      if (propertyInfo !== null) {\n        return !propertyInfo.acceptsBooleans;\n      } else {\n        const prefix = name.toLowerCase().slice(0, 5);\n        return prefix !== 'data-' && prefix !== 'aria-';\n      }\n    }\n    default:\n      return false;\n  }\n}\n\nexport function shouldRemoveAttribute(\n  name: string,\n  value: mixed,\n  propertyInfo: PropertyInfo | null,\n  isCustomComponentTag: boolean,\n): boolean {\n  if (value === null || typeof value === 'undefined') {\n    return true;\n  }\n  if (\n    shouldRemoveAttributeWithWarning(\n      name,\n      value,\n      propertyInfo,\n      isCustomComponentTag,\n    )\n  ) {\n    return true;\n  }\n  if (isCustomComponentTag) {\n    if (enableCustomElementPropertySupport) {\n      if (value === false) {\n        return true;\n      }\n    }\n    return false;\n  }\n  if (propertyInfo !== null) {\n    if (enableFilterEmptyStringAttributesDOM) {\n      if (propertyInfo.removeEmptyString && value === '') {\n        if (__DEV__) {\n          if (name === 'src') {\n            console.error(\n              'An empty string (\"\") was passed to the %s attribute. ' +\n                'This may cause the browser to download the whole page again over the network. ' +\n                'To fix this, either do not render the element at all ' +\n                'or pass null to %s instead of an empty string.',\n              name,\n              name,\n            );\n          } else {\n            console.error(\n              'An empty string (\"\") was passed to the %s attribute. ' +\n                'To fix this, either do not render the element at all ' +\n                'or pass null to %s instead of an empty string.',\n              name,\n              name,\n            );\n          }\n        }\n        return true;\n      }\n    }\n\n    switch (propertyInfo.type) {\n      case BOOLEAN:\n        return !value;\n      case OVERLOADED_BOOLEAN:\n        return value === false;\n      case NUMERIC:\n        return isNaN(value);\n      case POSITIVE_NUMERIC:\n        return isNaN(value) || (value: any) < 1;\n    }\n  }\n  return false;\n}\n\nexport function getPropertyInfo(name: string): PropertyInfo | null {\n  return properties.hasOwnProperty(name) ? properties[name] : null;\n}\n\nfunction PropertyInfoRecord(\n  name: string,\n  type: PropertyType,\n  mustUseProperty: boolean,\n  attributeName: string,\n  attributeNamespace: string | null,\n  sanitizeURL: boolean,\n  removeEmptyString: boolean,\n) {\n  this.acceptsBooleans =\n    type === BOOLEANISH_STRING ||\n    type === BOOLEAN ||\n    type === OVERLOADED_BOOLEAN;\n  this.attributeName = attributeName;\n  this.attributeNamespace = attributeNamespace;\n  this.mustUseProperty = mustUseProperty;\n  this.propertyName = name;\n  this.type = type;\n  this.sanitizeURL = sanitizeURL;\n  this.removeEmptyString = removeEmptyString;\n}\n\n// When adding attributes to this list, be sure to also add them to\n// the `possibleStandardNames` module to ensure casing and incorrect\n// name warnings.\nconst properties = {};\n\n// These props are reserved by React. They shouldn't be written to the DOM.\nconst reservedProps = [\n  'children',\n  'dangerouslySetInnerHTML',\n  // TODO: This prevents the assignment of defaultValue to regular\n  // elements (not just inputs). Now that ReactDOMInput assigns to the\n  // defaultValue property -- do we need this?\n  'defaultValue',\n  'defaultChecked',\n  'innerHTML',\n  'suppressContentEditableWarning',\n  'suppressHydrationWarning',\n  'style',\n];\nif (enableCustomElementPropertySupport) {\n  reservedProps.push('innerText', 'textContent');\n}\n\nreservedProps.forEach(name => {\n  properties[name] = new PropertyInfoRecord(\n    name,\n    RESERVED,\n    false, // mustUseProperty\n    name, // attributeName\n    null, // attributeNamespace\n    false, // sanitizeURL\n    false, // removeEmptyString\n  );\n});\n\n// A few React string attributes have a different name.\n// This is a mapping from React prop names to the attribute names.\n[\n  ['acceptCharset', 'accept-charset'],\n  ['className', 'class'],\n  ['htmlFor', 'for'],\n  ['httpEquiv', 'http-equiv'],\n].forEach(([name, attributeName]) => {\n  properties[name] = new PropertyInfoRecord(\n    name,\n    STRING,\n    false, // mustUseProperty\n    attributeName, // attributeName\n    null, // attributeNamespace\n    false, // sanitizeURL\n    false, // removeEmptyString\n  );\n});\n\n// These are \"enumerated\" HTML attributes that accept \"true\" and \"false\".\n// In React, we let users pass `true` and `false` even though technically\n// these aren't boolean attributes (they are coerced to strings).\n['contentEditable', 'draggable', 'spellCheck', 'value'].forEach(name => {\n  properties[name] = new PropertyInfoRecord(\n    name,\n    BOOLEANISH_STRING,\n    false, // mustUseProperty\n    name.toLowerCase(), // attributeName\n    null, // attributeNamespace\n    false, // sanitizeURL\n    false, // removeEmptyString\n  );\n});\n\n// These are \"enumerated\" SVG attributes that accept \"true\" and \"false\".\n// In React, we let users pass `true` and `false` even though technically\n// these aren't boolean attributes (they are coerced to strings).\n// Since these are SVG attributes, their attribute names are case-sensitive.\n[\n  'autoReverse',\n  'externalResourcesRequired',\n  'focusable',\n  'preserveAlpha',\n].forEach(name => {\n  properties[name] = new PropertyInfoRecord(\n    name,\n    BOOLEANISH_STRING,\n    false, // mustUseProperty\n    name, // attributeName\n    null, // attributeNamespace\n    false, // sanitizeURL\n    false, // removeEmptyString\n  );\n});\n\n// These are HTML boolean attributes.\n[\n  'allowFullScreen',\n  'async',\n  // Note: there is a special case that prevents it from being written to the DOM\n  // on the client side because the browsers are inconsistent. Instead we call focus().\n  'autoFocus',\n  'autoPlay',\n  'controls',\n  'default',\n  'defer',\n  'disabled',\n  'disablePictureInPicture',\n  'disableRemotePlayback',\n  'formNoValidate',\n  'hidden',\n  'loop',\n  'noModule',\n  'noValidate',\n  'open',\n  'playsInline',\n  'readOnly',\n  'required',\n  'reversed',\n  'scoped',\n  'seamless',\n  // Microdata\n  'itemScope',\n].forEach(name => {\n  properties[name] = new PropertyInfoRecord(\n    name,\n    BOOLEAN,\n    false, // mustUseProperty\n    name.toLowerCase(), // attributeName\n    null, // attributeNamespace\n    false, // sanitizeURL\n    false, // removeEmptyString\n  );\n});\n\n// These are the few React props that we set as DOM properties\n// rather than attributes. These are all booleans.\n[\n  'checked',\n  // Note: `option.selected` is not updated if `select.multiple` is\n  // disabled with `removeAttribute`. We have special logic for handling this.\n  'multiple',\n  'muted',\n  'selected',\n\n  // NOTE: if you add a camelCased prop to this list,\n  // you'll need to set attributeName to name.toLowerCase()\n  // instead in the assignment below.\n].forEach(name => {\n  properties[name] = new PropertyInfoRecord(\n    name,\n    BOOLEAN,\n    true, // mustUseProperty\n    name, // attributeName\n    null, // attributeNamespace\n    false, // sanitizeURL\n    false, // removeEmptyString\n  );\n});\n\n// These are HTML attributes that are \"overloaded booleans\": they behave like\n// booleans, but can also accept a string value.\n[\n  'capture',\n  'download',\n\n  // NOTE: if you add a camelCased prop to this list,\n  // you'll need to set attributeName to name.toLowerCase()\n  // instead in the assignment below.\n].forEach(name => {\n  properties[name] = new PropertyInfoRecord(\n    name,\n    OVERLOADED_BOOLEAN,\n    false, // mustUseProperty\n    name, // attributeName\n    null, // attributeNamespace\n    false, // sanitizeURL\n    false, // removeEmptyString\n  );\n});\n\n// These are HTML attributes that must be positive numbers.\n[\n  'cols',\n  'rows',\n  'size',\n  'span',\n\n  // NOTE: if you add a camelCased prop to this list,\n  // you'll need to set attributeName to name.toLowerCase()\n  // instead in the assignment below.\n].forEach(name => {\n  properties[name] = new PropertyInfoRecord(\n    name,\n    POSITIVE_NUMERIC,\n    false, // mustUseProperty\n    name, // attributeName\n    null, // attributeNamespace\n    false, // sanitizeURL\n    false, // removeEmptyString\n  );\n});\n\n// These are HTML attributes that must be numbers.\n['rowSpan', 'start'].forEach(name => {\n  properties[name] = new PropertyInfoRecord(\n    name,\n    NUMERIC,\n    false, // mustUseProperty\n    name.toLowerCase(), // attributeName\n    null, // attributeNamespace\n    false, // sanitizeURL\n    false, // removeEmptyString\n  );\n});\n\nconst CAMELIZE = /[\\-\\:]([a-z])/g;\nconst capitalize = token => token[1].toUpperCase();\n\n// This is a list of all SVG attributes that need special casing, namespacing,\n// or boolean value assignment. Regular attributes that just accept strings\n// and have the same names are omitted, just like in the HTML attribute filter.\n// Some of these attributes can be hard to find. This list was created by\n// scraping the MDN documentation.\n[\n  'accent-height',\n  'alignment-baseline',\n  'arabic-form',\n  'baseline-shift',\n  'cap-height',\n  'clip-path',\n  'clip-rule',\n  'color-interpolation',\n  'color-interpolation-filters',\n  'color-profile',\n  'color-rendering',\n  'dominant-baseline',\n  'enable-background',\n  'fill-opacity',\n  'fill-rule',\n  'flood-color',\n  'flood-opacity',\n  'font-family',\n  'font-size',\n  'font-size-adjust',\n  'font-stretch',\n  'font-style',\n  'font-variant',\n  'font-weight',\n  'glyph-name',\n  'glyph-orientation-horizontal',\n  'glyph-orientation-vertical',\n  'horiz-adv-x',\n  'horiz-origin-x',\n  'image-rendering',\n  'letter-spacing',\n  'lighting-color',\n  'marker-end',\n  'marker-mid',\n  'marker-start',\n  'overline-position',\n  'overline-thickness',\n  'paint-order',\n  'panose-1',\n  'pointer-events',\n  'rendering-intent',\n  'shape-rendering',\n  'stop-color',\n  'stop-opacity',\n  'strikethrough-position',\n  'strikethrough-thickness',\n  'stroke-dasharray',\n  'stroke-dashoffset',\n  'stroke-linecap',\n  'stroke-linejoin',\n  'stroke-miterlimit',\n  'stroke-opacity',\n  'stroke-width',\n  'text-anchor',\n  'text-decoration',\n  'text-rendering',\n  'underline-position',\n  'underline-thickness',\n  'unicode-bidi',\n  'unicode-range',\n  'units-per-em',\n  'v-alphabetic',\n  'v-hanging',\n  'v-ideographic',\n  'v-mathematical',\n  'vector-effect',\n  'vert-adv-y',\n  'vert-origin-x',\n  'vert-origin-y',\n  'word-spacing',\n  'writing-mode',\n  'xmlns:xlink',\n  'x-height',\n\n  // NOTE: if you add a camelCased prop to this list,\n  // you'll need to set attributeName to name.toLowerCase()\n  // instead in the assignment below.\n].forEach(attributeName => {\n  const name = attributeName.replace(CAMELIZE, capitalize);\n  properties[name] = new PropertyInfoRecord(\n    name,\n    STRING,\n    false, // mustUseProperty\n    attributeName,\n    null, // attributeNamespace\n    false, // sanitizeURL\n    false, // removeEmptyString\n  );\n});\n\n// String SVG attributes with the xlink namespace.\n[\n  'xlink:actuate',\n  'xlink:arcrole',\n  'xlink:role',\n  'xlink:show',\n  'xlink:title',\n  'xlink:type',\n\n  // NOTE: if you add a camelCased prop to this list,\n  // you'll need to set attributeName to name.toLowerCase()\n  // instead in the assignment below.\n].forEach(attributeName => {\n  const name = attributeName.replace(CAMELIZE, capitalize);\n  properties[name] = new PropertyInfoRecord(\n    name,\n    STRING,\n    false, // mustUseProperty\n    attributeName,\n    'http://www.w3.org/1999/xlink',\n    false, // sanitizeURL\n    false, // removeEmptyString\n  );\n});\n\n// String SVG attributes with the xml namespace.\n[\n  'xml:base',\n  'xml:lang',\n  'xml:space',\n\n  // NOTE: if you add a camelCased prop to this list,\n  // you'll need to set attributeName to name.toLowerCase()\n  // instead in the assignment below.\n].forEach(attributeName => {\n  const name = attributeName.replace(CAMELIZE, capitalize);\n  properties[name] = new PropertyInfoRecord(\n    name,\n    STRING,\n    false, // mustUseProperty\n    attributeName,\n    'http://www.w3.org/XML/1998/namespace',\n    false, // sanitizeURL\n    false, // removeEmptyString\n  );\n});\n\n// These attribute exists both in HTML and SVG.\n// The attribute name is case-sensitive in SVG so we can't just use\n// the React name like we do for attributes that exist only in HTML.\n['tabIndex', 'crossOrigin'].forEach(attributeName => {\n  properties[attributeName] = new PropertyInfoRecord(\n    attributeName,\n    STRING,\n    false, // mustUseProperty\n    attributeName.toLowerCase(), // attributeName\n    null, // attributeNamespace\n    false, // sanitizeURL\n    false, // removeEmptyString\n  );\n});\n\n// These attributes accept URLs. These must not allow javascript: URLS.\n// These will also need to accept Trusted Types object in the future.\nconst xlinkHref = 'xlinkHref';\nproperties[xlinkHref] = new PropertyInfoRecord(\n  'xlinkHref',\n  STRING,\n  false, // mustUseProperty\n  'xlink:href',\n  'http://www.w3.org/1999/xlink',\n  true, // sanitizeURL\n  false, // removeEmptyString\n);\n\n['src', 'href', 'action', 'formAction'].forEach(attributeName => {\n  properties[attributeName] = new PropertyInfoRecord(\n    attributeName,\n    STRING,\n    false, // mustUseProperty\n    attributeName.toLowerCase(), // attributeName\n    null, // attributeNamespace\n    true, // sanitizeURL\n    true, // removeEmptyString\n  );\n});\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/**\n * CSS properties which accept numbers but are not in units of \"px\".\n */\nexport const isUnitlessNumber = {\n  animationIterationCount: true,\n  aspectRatio: true,\n  borderImageOutset: true,\n  borderImageSlice: true,\n  borderImageWidth: true,\n  boxFlex: true,\n  boxFlexGroup: true,\n  boxOrdinalGroup: true,\n  columnCount: true,\n  columns: true,\n  flex: true,\n  flexGrow: true,\n  flexPositive: true,\n  flexShrink: true,\n  flexNegative: true,\n  flexOrder: true,\n  gridArea: true,\n  gridRow: true,\n  gridRowEnd: true,\n  gridRowSpan: true,\n  gridRowStart: true,\n  gridColumn: true,\n  gridColumnEnd: true,\n  gridColumnSpan: true,\n  gridColumnStart: true,\n  fontWeight: true,\n  lineClamp: true,\n  lineHeight: true,\n  opacity: true,\n  order: true,\n  orphans: true,\n  tabSize: true,\n  widows: true,\n  zIndex: true,\n  zoom: true,\n\n  // SVG-related properties\n  fillOpacity: true,\n  floodOpacity: true,\n  stopOpacity: true,\n  strokeDasharray: true,\n  strokeDashoffset: true,\n  strokeMiterlimit: true,\n  strokeOpacity: true,\n  strokeWidth: true,\n};\n\n/**\n * @param {string} prefix vendor-specific prefix, eg: Webkit\n * @param {string} key style name, eg: transitionDuration\n * @return {string} style name prefixed with `prefix`, properly camelCased, eg:\n * WebkitTransitionDuration\n */\nfunction prefixKey(prefix, key) {\n  return prefix + key.charAt(0).toUpperCase() + key.substring(1);\n}\n\n/**\n * Support style names that may come passed in prefixed by adding permutations\n * of vendor prefixes.\n */\nconst prefixes = ['Webkit', 'ms', 'Moz', 'O'];\n\n// Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an\n// infinite loop, because it iterates over the newly added props too.\nObject.keys(isUnitlessNumber).forEach(function(prop) {\n  prefixes.forEach(function(prefix) {\n    isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];\n  });\n});\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * Based on the escape-html library, which is used under the MIT License below:\n *\n * Copyright (c) 2012-2013 TJ Holowaychuk\n * Copyright (c) 2015 Andreas Lubbe\n * Copyright (c) 2015 Tiancheng \"Timothy\" Gu\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * 'Software'), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\n// code copied and modified from escape-html\n/**\n * Module variables.\n * @private\n */\n\nimport {checkHtmlStringCoercion} from 'shared/CheckStringCoercion';\n\nconst matchHtmlRegExp = /[\"'&<>]/;\n\n/**\n * Escapes special characters and HTML entities in a given html string.\n *\n * @param  {string} string HTML string to escape for later insertion\n * @return {string}\n * @public\n */\n\nfunction escapeHtml(string) {\n  if (__DEV__) {\n    checkHtmlStringCoercion(string);\n  }\n  const str = '' + string;\n  const match = matchHtmlRegExp.exec(str);\n\n  if (!match) {\n    return str;\n  }\n\n  let escape;\n  let html = '';\n  let index;\n  let lastIndex = 0;\n\n  for (index = match.index; index < str.length; index++) {\n    switch (str.charCodeAt(index)) {\n      case 34: // \"\n        escape = '&quot;';\n        break;\n      case 38: // &\n        escape = '&amp;';\n        break;\n      case 39: // '\n        escape = '&#x27;'; // modified from escape-html; used to be '&#39'\n        break;\n      case 60: // <\n        escape = '&lt;';\n        break;\n      case 62: // >\n        escape = '&gt;';\n        break;\n      default:\n        continue;\n    }\n\n    if (lastIndex !== index) {\n      html += str.substring(lastIndex, index);\n    }\n\n    lastIndex = index + 1;\n    html += escape;\n  }\n\n  return lastIndex !== index ? html + str.substring(lastIndex, index) : html;\n}\n// end code copied and modified from escape-html\n\n/**\n * Escapes text to prevent scripting attacks.\n *\n * @param {*} text Text value to escape.\n * @return {string} An escaped string.\n */\nfunction escapeTextForBrowser(text) {\n  if (typeof text === 'boolean' || typeof text === 'number') {\n    // this shortcircuit helps perf for types that we know will never have\n    // special characters, especially given that this function is used often\n    // for numeric dom ids.\n    return '' + text;\n  }\n  return escapeHtml(text);\n}\n\nexport default escapeTextForBrowser;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nconst uppercasePattern = /([A-Z])/g;\nconst msPattern = /^ms-/;\n\n/**\n * Hyphenates a camelcased CSS property name, for example:\n *\n *   > hyphenateStyleName('backgroundColor')\n *   < \"background-color\"\n *   > hyphenateStyleName('MozTransition')\n *   < \"-moz-transition\"\n *   > hyphenateStyleName('msTransition')\n *   < \"-ms-transition\"\n *\n * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix\n * is converted to `-ms-`.\n */\nexport default function hyphenateStyleName(name: string): string {\n  return name\n    .replace(uppercasePattern, '-$1')\n    .toLowerCase()\n    .replace(msPattern, '-ms-');\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport {disableJavaScriptURLs} from 'shared/ReactFeatureFlags';\n\n// A javascript: URL can contain leading C0 control or \\u0020 SPACE,\n// and any newline or tab are filtered out as if they're not part of the URL.\n// https://url.spec.whatwg.org/#url-parsing\n// Tab or newline are defined as \\r\\n\\t:\n// https://infra.spec.whatwg.org/#ascii-tab-or-newline\n// A C0 control is a code point in the range \\u0000 NULL to \\u001F\n// INFORMATION SEPARATOR ONE, inclusive:\n// https://infra.spec.whatwg.org/#c0-control-or-space\n\n/* eslint-disable max-len */\nconst isJavaScriptProtocol = /^[\\u0000-\\u001F ]*j[\\r\\n\\t]*a[\\r\\n\\t]*v[\\r\\n\\t]*a[\\r\\n\\t]*s[\\r\\n\\t]*c[\\r\\n\\t]*r[\\r\\n\\t]*i[\\r\\n\\t]*p[\\r\\n\\t]*t[\\r\\n\\t]*\\:/i;\n\nlet didWarn = false;\n\nfunction sanitizeURL(url: string) {\n  if (disableJavaScriptURLs) {\n    if (isJavaScriptProtocol.test(url)) {\n      throw new Error(\n        'React has blocked a javascript: URL as a security precaution.',\n      );\n    }\n  } else if (__DEV__) {\n    if (!didWarn && isJavaScriptProtocol.test(url)) {\n      didWarn = true;\n      console.error(\n        'A future version of React will block javascript: URLs as a security precaution. ' +\n          'Use event handlers instead if you can. If you need to generate unsafe HTML try ' +\n          'using dangerouslySetInnerHTML instead. React was passed %s.',\n        JSON.stringify(url),\n      );\n    }\n  }\n}\n\nexport default sanitizeURL;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\ndeclare function isArray(a: mixed): boolean %checks(Array.isArray(a));\n\nconst isArrayImpl = Array.isArray;\n\n// eslint-disable-next-line no-redeclare\nfunction isArray(a: mixed): boolean {\n  return isArrayImpl(a);\n}\n\nexport default isArray;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {ReactNodeList} from 'shared/ReactTypes';\n\nimport {\n  checkHtmlStringCoercion,\n  checkCSSPropertyStringCoercion,\n  checkAttributeStringCoercion,\n} from 'shared/CheckStringCoercion';\n\nimport {Children} from 'react';\n\nimport {\n  enableFilterEmptyStringAttributesDOM,\n  enableCustomElementPropertySupport,\n} from 'shared/ReactFeatureFlags';\n\nimport type {\n  Destination,\n  Chunk,\n  PrecomputedChunk,\n} from 'react-server/src/ReactServerStreamConfig';\n\nimport {\n  writeChunk,\n  writeChunkAndReturn,\n  stringToChunk,\n  stringToPrecomputedChunk,\n} from 'react-server/src/ReactServerStreamConfig';\n\nimport {\n  getPropertyInfo,\n  isAttributeNameSafe,\n  BOOLEAN,\n  OVERLOADED_BOOLEAN,\n  NUMERIC,\n  POSITIVE_NUMERIC,\n} from '../shared/DOMProperty';\nimport {isUnitlessNumber} from '../shared/CSSProperty';\n\nimport {checkControlledValueProps} from '../shared/ReactControlledValuePropTypes';\nimport {validateProperties as validateARIAProperties} from '../shared/ReactDOMInvalidARIAHook';\nimport {validateProperties as validateInputProperties} from '../shared/ReactDOMNullInputValuePropHook';\nimport {validateProperties as validateUnknownProperties} from '../shared/ReactDOMUnknownPropertyHook';\nimport warnValidStyle from '../shared/warnValidStyle';\n\nimport escapeTextForBrowser from './escapeTextForBrowser';\nimport hyphenateStyleName from '../shared/hyphenateStyleName';\nimport hasOwnProperty from 'shared/hasOwnProperty';\nimport sanitizeURL from '../shared/sanitizeURL';\nimport isArray from 'shared/isArray';\n\n// Used to distinguish these contexts from ones used in other renderers.\n// E.g. this can be used to distinguish legacy renderers from this modern one.\nexport const isPrimaryRenderer = true;\n\n// Per response, global state that is not contextual to the rendering subtree.\nexport type ResponseState = {\n  bootstrapChunks: Array<Chunk | PrecomputedChunk>,\n  startInlineScript: PrecomputedChunk,\n  placeholderPrefix: PrecomputedChunk,\n  segmentPrefix: PrecomputedChunk,\n  boundaryPrefix: string,\n  idPrefix: string,\n  nextSuspenseID: number,\n  sentCompleteSegmentFunction: boolean,\n  sentCompleteBoundaryFunction: boolean,\n  sentClientRenderFunction: boolean, // We allow the legacy renderer to extend this object.\n  ...\n};\n\nconst startInlineScript = stringToPrecomputedChunk('<script>');\nconst endInlineScript = stringToPrecomputedChunk('</script>');\n\nconst startScriptSrc = stringToPrecomputedChunk('<script src=\"');\nconst startModuleSrc = stringToPrecomputedChunk('<script type=\"module\" src=\"');\nconst endAsyncScript = stringToPrecomputedChunk('\" async=\"\"></script>');\n\n/**\n * This escaping function is designed to work with bootstrapScriptContent only.\n * because we know we are escaping the entire script. We can avoid for instance\n * escaping html comment string sequences that are valid javascript as well because\n * if there are no sebsequent <script sequences the html parser will never enter\n * script data double escaped state (see: https://www.w3.org/TR/html53/syntax.html#script-data-double-escaped-state)\n *\n * While untrusted script content should be made safe before using this api it will\n * ensure that the script cannot be early terminated or never terminated state\n */\nfunction escapeBootstrapScriptContent(scriptText) {\n  if (__DEV__) {\n    checkHtmlStringCoercion(scriptText);\n  }\n  return ('' + scriptText).replace(scriptRegex, scriptReplacer);\n}\nconst scriptRegex = /(<\\/|<)(s)(cript)/gi;\nconst scriptReplacer = (match, prefix, s, suffix) =>\n  `${prefix}${s === 's' ? '\\\\u0073' : '\\\\u0053'}${suffix}`;\n\n// Allows us to keep track of what we've already written so we can refer back to it.\nexport function createResponseState(\n  identifierPrefix: string | void,\n  nonce: string | void,\n  bootstrapScriptContent: string | void,\n  bootstrapScripts: Array<string> | void,\n  bootstrapModules: Array<string> | void,\n): ResponseState {\n  const idPrefix = identifierPrefix === undefined ? '' : identifierPrefix;\n  const inlineScriptWithNonce =\n    nonce === undefined\n      ? startInlineScript\n      : stringToPrecomputedChunk(\n          '<script nonce=\"' + escapeTextForBrowser(nonce) + '\">',\n        );\n  const bootstrapChunks = [];\n  if (bootstrapScriptContent !== undefined) {\n    bootstrapChunks.push(\n      inlineScriptWithNonce,\n      stringToChunk(escapeBootstrapScriptContent(bootstrapScriptContent)),\n      endInlineScript,\n    );\n  }\n  if (bootstrapScripts !== undefined) {\n    for (let i = 0; i < bootstrapScripts.length; i++) {\n      bootstrapChunks.push(\n        startScriptSrc,\n        stringToChunk(escapeTextForBrowser(bootstrapScripts[i])),\n        endAsyncScript,\n      );\n    }\n  }\n  if (bootstrapModules !== undefined) {\n    for (let i = 0; i < bootstrapModules.length; i++) {\n      bootstrapChunks.push(\n        startModuleSrc,\n        stringToChunk(escapeTextForBrowser(bootstrapModules[i])),\n        endAsyncScript,\n      );\n    }\n  }\n  return {\n    bootstrapChunks: bootstrapChunks,\n    startInlineScript: inlineScriptWithNonce,\n    placeholderPrefix: stringToPrecomputedChunk(idPrefix + 'P:'),\n    segmentPrefix: stringToPrecomputedChunk(idPrefix + 'S:'),\n    boundaryPrefix: idPrefix + 'B:',\n    idPrefix: idPrefix,\n    nextSuspenseID: 0,\n    sentCompleteSegmentFunction: false,\n    sentCompleteBoundaryFunction: false,\n    sentClientRenderFunction: false,\n  };\n}\n\n// Constants for the insertion mode we're currently writing in. We don't encode all HTML5 insertion\n// modes. We only include the variants as they matter for the sake of our purposes.\n// We don't actually provide the namespace therefore we use constants instead of the string.\nconst ROOT_HTML_MODE = 0; // Used for the root most element tag.\nexport const HTML_MODE = 1;\nconst SVG_MODE = 2;\nconst MATHML_MODE = 3;\nconst HTML_TABLE_MODE = 4;\nconst HTML_TABLE_BODY_MODE = 5;\nconst HTML_TABLE_ROW_MODE = 6;\nconst HTML_COLGROUP_MODE = 7;\n// We have a greater than HTML_TABLE_MODE check elsewhere. If you add more cases here, make sure it\n// still makes sense\n\ntype InsertionMode = 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7;\n\n// Lets us keep track of contextual state and pick it back up after suspending.\nexport type FormatContext = {\n  insertionMode: InsertionMode, // root/svg/html/mathml/table\n  selectedValue: null | string | Array<string>, // the selected value(s) inside a <select>, or null outside <select>\n};\n\nfunction createFormatContext(\n  insertionMode: InsertionMode,\n  selectedValue: null | string,\n): FormatContext {\n  return {\n    insertionMode,\n    selectedValue,\n  };\n}\n\nexport function createRootFormatContext(namespaceURI?: string): FormatContext {\n  const insertionMode =\n    namespaceURI === 'http://www.w3.org/2000/svg'\n      ? SVG_MODE\n      : namespaceURI === 'http://www.w3.org/1998/Math/MathML'\n      ? MATHML_MODE\n      : ROOT_HTML_MODE;\n  return createFormatContext(insertionMode, null);\n}\n\nexport function getChildFormatContext(\n  parentContext: FormatContext,\n  type: string,\n  props: Object,\n): FormatContext {\n  switch (type) {\n    case 'select':\n      return createFormatContext(\n        HTML_MODE,\n        props.value != null ? props.value : props.defaultValue,\n      );\n    case 'svg':\n      return createFormatContext(SVG_MODE, null);\n    case 'math':\n      return createFormatContext(MATHML_MODE, null);\n    case 'foreignObject':\n      return createFormatContext(HTML_MODE, null);\n    // Table parents are special in that their children can only be created at all if they're\n    // wrapped in a table parent. So we need to encode that we're entering this mode.\n    case 'table':\n      return createFormatContext(HTML_TABLE_MODE, null);\n    case 'thead':\n    case 'tbody':\n    case 'tfoot':\n      return createFormatContext(HTML_TABLE_BODY_MODE, null);\n    case 'colgroup':\n      return createFormatContext(HTML_COLGROUP_MODE, null);\n    case 'tr':\n      return createFormatContext(HTML_TABLE_ROW_MODE, null);\n  }\n  if (parentContext.insertionMode >= HTML_TABLE_MODE) {\n    // Whatever tag this was, it wasn't a table parent or other special parent, so we must have\n    // entered plain HTML again.\n    return createFormatContext(HTML_MODE, null);\n  }\n  if (parentContext.insertionMode === ROOT_HTML_MODE) {\n    // We've emitted the root and is now in plain HTML mode.\n    return createFormatContext(HTML_MODE, null);\n  }\n  return parentContext;\n}\n\nexport type SuspenseBoundaryID = null | PrecomputedChunk;\n\nexport const UNINITIALIZED_SUSPENSE_BOUNDARY_ID: SuspenseBoundaryID = null;\n\nexport function assignSuspenseBoundaryID(\n  responseState: ResponseState,\n): SuspenseBoundaryID {\n  const generatedID = responseState.nextSuspenseID++;\n  return stringToPrecomputedChunk(\n    responseState.boundaryPrefix + generatedID.toString(16),\n  );\n}\n\nexport function makeId(\n  responseState: ResponseState,\n  treeId: string,\n  localId: number,\n): string {\n  const idPrefix = responseState.idPrefix;\n\n  let id = ':' + idPrefix + 'R' + treeId;\n\n  // Unless this is the first id at this level, append a number at the end\n  // that represents the position of this useId hook among all the useId\n  // hooks for this fiber.\n  if (localId > 0) {\n    id += 'H' + localId.toString(32);\n  }\n\n  return id + ':';\n}\n\nfunction encodeHTMLTextNode(text: string): string {\n  return escapeTextForBrowser(text);\n}\n\nconst textSeparator = stringToPrecomputedChunk('<!-- -->');\n\nexport function pushTextInstance(\n  target: Array<Chunk | PrecomputedChunk>,\n  text: string,\n  responseState: ResponseState,\n  textEmbedded: boolean,\n): boolean {\n  if (text === '') {\n    // Empty text doesn't have a DOM node representation and the hydration is aware of this.\n    return textEmbedded;\n  }\n  if (textEmbedded) {\n    target.push(textSeparator);\n  }\n  target.push(stringToChunk(encodeHTMLTextNode(text)));\n  return true;\n}\n\n// Called when Fizz is done with a Segment. Currently the only purpose is to conditionally\n// emit a text separator when we don't know for sure it is safe to omit\nexport function pushSegmentFinale(\n  target: Array<Chunk | PrecomputedChunk>,\n  responseState: ResponseState,\n  lastPushedText: boolean,\n  textEmbedded: boolean,\n): void {\n  if (lastPushedText && textEmbedded) {\n    target.push(textSeparator);\n  }\n}\n\nconst styleNameCache: Map<string, PrecomputedChunk> = new Map();\nfunction processStyleName(styleName: string): PrecomputedChunk {\n  const chunk = styleNameCache.get(styleName);\n  if (chunk !== undefined) {\n    return chunk;\n  }\n  const result = stringToPrecomputedChunk(\n    escapeTextForBrowser(hyphenateStyleName(styleName)),\n  );\n  styleNameCache.set(styleName, result);\n  return result;\n}\n\nconst styleAttributeStart = stringToPrecomputedChunk(' style=\"');\nconst styleAssign = stringToPrecomputedChunk(':');\nconst styleSeparator = stringToPrecomputedChunk(';');\n\nfunction pushStyle(\n  target: Array<Chunk | PrecomputedChunk>,\n  responseState: ResponseState,\n  style: Object,\n): void {\n  if (typeof style !== 'object') {\n    throw new Error(\n      'The `style` prop expects a mapping from style properties to values, ' +\n        \"not a string. For example, style={{marginRight: spacing + 'em'}} when \" +\n        'using JSX.',\n    );\n  }\n\n  let isFirst = true;\n  for (const styleName in style) {\n    if (!hasOwnProperty.call(style, styleName)) {\n      continue;\n    }\n    // If you provide unsafe user data here they can inject arbitrary CSS\n    // which may be problematic (I couldn't repro this):\n    // https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet\n    // http://www.thespanner.co.uk/2007/11/26/ultimate-xss-css-injection/\n    // This is not an XSS hole but instead a potential CSS injection issue\n    // which has lead to a greater discussion about how we're going to\n    // trust URLs moving forward. See #2115901\n    const styleValue = style[styleName];\n    if (\n      styleValue == null ||\n      typeof styleValue === 'boolean' ||\n      styleValue === ''\n    ) {\n      // TODO: We used to set empty string as a style with an empty value. Does that ever make sense?\n      continue;\n    }\n\n    let nameChunk;\n    let valueChunk;\n    const isCustomProperty = styleName.indexOf('--') === 0;\n    if (isCustomProperty) {\n      nameChunk = stringToChunk(escapeTextForBrowser(styleName));\n      if (__DEV__) {\n        checkCSSPropertyStringCoercion(styleValue, styleName);\n      }\n      valueChunk = stringToChunk(\n        escapeTextForBrowser(('' + styleValue).trim()),\n      );\n    } else {\n      if (__DEV__) {\n        warnValidStyle(styleName, styleValue);\n      }\n\n      nameChunk = processStyleName(styleName);\n      if (typeof styleValue === 'number') {\n        if (\n          styleValue !== 0 &&\n          !hasOwnProperty.call(isUnitlessNumber, styleName)\n        ) {\n          valueChunk = stringToChunk(styleValue + 'px'); // Presumes implicit 'px' suffix for unitless numbers\n        } else {\n          valueChunk = stringToChunk('' + styleValue);\n        }\n      } else {\n        if (__DEV__) {\n          checkCSSPropertyStringCoercion(styleValue, styleName);\n        }\n        valueChunk = stringToChunk(\n          escapeTextForBrowser(('' + styleValue).trim()),\n        );\n      }\n    }\n    if (isFirst) {\n      isFirst = false;\n      // If it's first, we don't need any separators prefixed.\n      target.push(styleAttributeStart, nameChunk, styleAssign, valueChunk);\n    } else {\n      target.push(styleSeparator, nameChunk, styleAssign, valueChunk);\n    }\n  }\n  if (!isFirst) {\n    target.push(attributeEnd);\n  }\n}\n\nconst attributeSeparator = stringToPrecomputedChunk(' ');\nconst attributeAssign = stringToPrecomputedChunk('=\"');\nconst attributeEnd = stringToPrecomputedChunk('\"');\nconst attributeEmptyString = stringToPrecomputedChunk('=\"\"');\n\nfunction pushAttribute(\n  target: Array<Chunk | PrecomputedChunk>,\n  responseState: ResponseState,\n  name: string,\n  value: string | boolean | number | Function | Object, // not null or undefined\n): void {\n  switch (name) {\n    case 'style': {\n      pushStyle(target, responseState, value);\n      return;\n    }\n    case 'defaultValue':\n    case 'defaultChecked': // These shouldn't be set as attributes on generic HTML elements.\n    case 'innerHTML': // Must use dangerouslySetInnerHTML instead.\n    case 'suppressContentEditableWarning':\n    case 'suppressHydrationWarning':\n      // Ignored. These are built-in to React on the client.\n      return;\n  }\n  if (\n    // shouldIgnoreAttribute\n    // We have already filtered out null/undefined and reserved words.\n    name.length > 2 &&\n    (name[0] === 'o' || name[0] === 'O') &&\n    (name[1] === 'n' || name[1] === 'N')\n  ) {\n    return;\n  }\n\n  const propertyInfo = getPropertyInfo(name);\n  if (propertyInfo !== null) {\n    // shouldRemoveAttribute\n    switch (typeof value) {\n      case 'function':\n      // $FlowIssue symbol is perfectly valid here\n      case 'symbol': // eslint-disable-line\n        return;\n      case 'boolean': {\n        if (!propertyInfo.acceptsBooleans) {\n          return;\n        }\n      }\n    }\n    if (enableFilterEmptyStringAttributesDOM) {\n      if (propertyInfo.removeEmptyString && value === '') {\n        if (__DEV__) {\n          if (name === 'src') {\n            console.error(\n              'An empty string (\"\") was passed to the %s attribute. ' +\n                'This may cause the browser to download the whole page again over the network. ' +\n                'To fix this, either do not render the element at all ' +\n                'or pass null to %s instead of an empty string.',\n              name,\n              name,\n            );\n          } else {\n            console.error(\n              'An empty string (\"\") was passed to the %s attribute. ' +\n                'To fix this, either do not render the element at all ' +\n                'or pass null to %s instead of an empty string.',\n              name,\n              name,\n            );\n          }\n        }\n        return;\n      }\n    }\n\n    const attributeName = propertyInfo.attributeName;\n    const attributeNameChunk = stringToChunk(attributeName); // TODO: If it's known we can cache the chunk.\n\n    switch (propertyInfo.type) {\n      case BOOLEAN:\n        if (value) {\n          target.push(\n            attributeSeparator,\n            attributeNameChunk,\n            attributeEmptyString,\n          );\n        }\n        return;\n      case OVERLOADED_BOOLEAN:\n        if (value === true) {\n          target.push(\n            attributeSeparator,\n            attributeNameChunk,\n            attributeEmptyString,\n          );\n        } else if (value === false) {\n          // Ignored\n        } else {\n          target.push(\n            attributeSeparator,\n            attributeNameChunk,\n            attributeAssign,\n            stringToChunk(escapeTextForBrowser(value)),\n            attributeEnd,\n          );\n        }\n        return;\n      case NUMERIC:\n        if (!isNaN(value)) {\n          target.push(\n            attributeSeparator,\n            attributeNameChunk,\n            attributeAssign,\n            stringToChunk(escapeTextForBrowser(value)),\n            attributeEnd,\n          );\n        }\n        break;\n      case POSITIVE_NUMERIC:\n        if (!isNaN(value) && (value: any) >= 1) {\n          target.push(\n            attributeSeparator,\n            attributeNameChunk,\n            attributeAssign,\n            stringToChunk(escapeTextForBrowser(value)),\n            attributeEnd,\n          );\n        }\n        break;\n      default:\n        if (propertyInfo.sanitizeURL) {\n          if (__DEV__) {\n            checkAttributeStringCoercion(value, attributeName);\n          }\n          value = '' + (value: any);\n          sanitizeURL(value);\n        }\n        target.push(\n          attributeSeparator,\n          attributeNameChunk,\n          attributeAssign,\n          stringToChunk(escapeTextForBrowser(value)),\n          attributeEnd,\n        );\n    }\n  } else if (isAttributeNameSafe(name)) {\n    // shouldRemoveAttribute\n    switch (typeof value) {\n      case 'function':\n      // $FlowIssue symbol is perfectly valid here\n      case 'symbol': // eslint-disable-line\n        return;\n      case 'boolean': {\n        const prefix = name.toLowerCase().slice(0, 5);\n        if (prefix !== 'data-' && prefix !== 'aria-') {\n          return;\n        }\n      }\n    }\n    target.push(\n      attributeSeparator,\n      stringToChunk(name),\n      attributeAssign,\n      stringToChunk(escapeTextForBrowser(value)),\n      attributeEnd,\n    );\n  }\n}\n\nconst endOfStartTag = stringToPrecomputedChunk('>');\nconst endOfStartTagSelfClosing = stringToPrecomputedChunk('/>');\n\nfunction pushInnerHTML(\n  target: Array<Chunk | PrecomputedChunk>,\n  innerHTML,\n  children,\n) {\n  if (innerHTML != null) {\n    if (children != null) {\n      throw new Error(\n        'Can only set one of `children` or `props.dangerouslySetInnerHTML`.',\n      );\n    }\n\n    if (typeof innerHTML !== 'object' || !('__html' in innerHTML)) {\n      throw new Error(\n        '`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. ' +\n          'Please visit https://reactjs.org/link/dangerously-set-inner-html ' +\n          'for more information.',\n      );\n    }\n\n    const html = innerHTML.__html;\n    if (html !== null && html !== undefined) {\n      if (__DEV__) {\n        checkHtmlStringCoercion(html);\n      }\n      target.push(stringToChunk('' + html));\n    }\n  }\n}\n\n// TODO: Move these to ResponseState so that we warn for every request.\n// It would help debugging in stateful servers (e.g. service worker).\nlet didWarnDefaultInputValue = false;\nlet didWarnDefaultChecked = false;\nlet didWarnDefaultSelectValue = false;\nlet didWarnDefaultTextareaValue = false;\nlet didWarnInvalidOptionChildren = false;\nlet didWarnInvalidOptionInnerHTML = false;\nlet didWarnSelectedSetOnOption = false;\n\nfunction checkSelectProp(props, propName) {\n  if (__DEV__) {\n    const value = props[propName];\n    if (value != null) {\n      const array = isArray(value);\n      if (props.multiple && !array) {\n        console.error(\n          'The `%s` prop supplied to <select> must be an array if ' +\n            '`multiple` is true.',\n          propName,\n        );\n      } else if (!props.multiple && array) {\n        console.error(\n          'The `%s` prop supplied to <select> must be a scalar ' +\n            'value if `multiple` is false.',\n          propName,\n        );\n      }\n    }\n  }\n}\n\nfunction pushStartSelect(\n  target: Array<Chunk | PrecomputedChunk>,\n  props: Object,\n  responseState: ResponseState,\n): ReactNodeList {\n  if (__DEV__) {\n    checkControlledValueProps('select', props);\n\n    checkSelectProp(props, 'value');\n    checkSelectProp(props, 'defaultValue');\n\n    if (\n      props.value !== undefined &&\n      props.defaultValue !== undefined &&\n      !didWarnDefaultSelectValue\n    ) {\n      console.error(\n        'Select elements must be either controlled or uncontrolled ' +\n          '(specify either the value prop, or the defaultValue prop, but not ' +\n          'both). Decide between using a controlled or uncontrolled select ' +\n          'element and remove one of these props. More info: ' +\n          'https://reactjs.org/link/controlled-components',\n      );\n      didWarnDefaultSelectValue = true;\n    }\n  }\n\n  target.push(startChunkForTag('select'));\n\n  let children = null;\n  let innerHTML = null;\n  for (const propKey in props) {\n    if (hasOwnProperty.call(props, propKey)) {\n      const propValue = props[propKey];\n      if (propValue == null) {\n        continue;\n      }\n      switch (propKey) {\n        case 'children':\n          children = propValue;\n          break;\n        case 'dangerouslySetInnerHTML':\n          // TODO: This doesn't really make sense for select since it can't use the controlled\n          // value in the innerHTML.\n          innerHTML = propValue;\n          break;\n        case 'defaultValue':\n        case 'value':\n          // These are set on the Context instead and applied to the nested options.\n          break;\n        default:\n          pushAttribute(target, responseState, propKey, propValue);\n          break;\n      }\n    }\n  }\n\n  target.push(endOfStartTag);\n  pushInnerHTML(target, innerHTML, children);\n  return children;\n}\n\nfunction flattenOptionChildren(children: mixed): string {\n  let content = '';\n  // Flatten children and warn if they aren't strings or numbers;\n  // invalid types are ignored.\n  Children.forEach((children: any), function(child) {\n    if (child == null) {\n      return;\n    }\n    content += (child: any);\n    if (__DEV__) {\n      if (\n        !didWarnInvalidOptionChildren &&\n        typeof child !== 'string' &&\n        typeof child !== 'number'\n      ) {\n        didWarnInvalidOptionChildren = true;\n        console.error(\n          'Cannot infer the option value of complex children. ' +\n            'Pass a `value` prop or use a plain string as children to <option>.',\n        );\n      }\n    }\n  });\n  return content;\n}\n\nconst selectedMarkerAttribute = stringToPrecomputedChunk(' selected=\"\"');\n\nfunction pushStartOption(\n  target: Array<Chunk | PrecomputedChunk>,\n  props: Object,\n  responseState: ResponseState,\n  formatContext: FormatContext,\n): ReactNodeList {\n  const selectedValue = formatContext.selectedValue;\n\n  target.push(startChunkForTag('option'));\n\n  let children = null;\n  let value = null;\n  let selected = null;\n  let innerHTML = null;\n  for (const propKey in props) {\n    if (hasOwnProperty.call(props, propKey)) {\n      const propValue = props[propKey];\n      if (propValue == null) {\n        continue;\n      }\n      switch (propKey) {\n        case 'children':\n          children = propValue;\n          break;\n        case 'selected':\n          // ignore\n          selected = propValue;\n          if (__DEV__) {\n            // TODO: Remove support for `selected` in <option>.\n            if (!didWarnSelectedSetOnOption) {\n              console.error(\n                'Use the `defaultValue` or `value` props on <select> instead of ' +\n                  'setting `selected` on <option>.',\n              );\n              didWarnSelectedSetOnOption = true;\n            }\n          }\n          break;\n        case 'dangerouslySetInnerHTML':\n          innerHTML = propValue;\n          break;\n        // eslint-disable-next-line-no-fallthrough\n        case 'value':\n          value = propValue;\n        // We intentionally fallthrough to also set the attribute on the node.\n        // eslint-disable-next-line-no-fallthrough\n        default:\n          pushAttribute(target, responseState, propKey, propValue);\n          break;\n      }\n    }\n  }\n\n  if (selectedValue != null) {\n    let stringValue;\n    if (value !== null) {\n      if (__DEV__) {\n        checkAttributeStringCoercion(value, 'value');\n      }\n      stringValue = '' + value;\n    } else {\n      if (__DEV__) {\n        if (innerHTML !== null) {\n          if (!didWarnInvalidOptionInnerHTML) {\n            didWarnInvalidOptionInnerHTML = true;\n            console.error(\n              'Pass a `value` prop if you set dangerouslyInnerHTML so React knows ' +\n                'which value should be selected.',\n            );\n          }\n        }\n      }\n      stringValue = flattenOptionChildren(children);\n    }\n    if (isArray(selectedValue)) {\n      // multiple\n      for (let i = 0; i < selectedValue.length; i++) {\n        if (__DEV__) {\n          checkAttributeStringCoercion(selectedValue[i], 'value');\n        }\n        const v = '' + selectedValue[i];\n        if (v === stringValue) {\n          target.push(selectedMarkerAttribute);\n          break;\n        }\n      }\n    } else {\n      if (__DEV__) {\n        checkAttributeStringCoercion(selectedValue, 'select.value');\n      }\n      if ('' + selectedValue === stringValue) {\n        target.push(selectedMarkerAttribute);\n      }\n    }\n  } else if (selected) {\n    target.push(selectedMarkerAttribute);\n  }\n\n  target.push(endOfStartTag);\n  pushInnerHTML(target, innerHTML, children);\n  return children;\n}\n\nfunction pushInput(\n  target: Array<Chunk | PrecomputedChunk>,\n  props: Object,\n  responseState: ResponseState,\n): ReactNodeList {\n  if (__DEV__) {\n    checkControlledValueProps('input', props);\n\n    if (\n      props.checked !== undefined &&\n      props.defaultChecked !== undefined &&\n      !didWarnDefaultChecked\n    ) {\n      console.error(\n        '%s contains an input of type %s with both checked and defaultChecked props. ' +\n          'Input elements must be either controlled or uncontrolled ' +\n          '(specify either the checked prop, or the defaultChecked prop, but not ' +\n          'both). Decide between using a controlled or uncontrolled input ' +\n          'element and remove one of these props. More info: ' +\n          'https://reactjs.org/link/controlled-components',\n        'A component',\n        props.type,\n      );\n      didWarnDefaultChecked = true;\n    }\n    if (\n      props.value !== undefined &&\n      props.defaultValue !== undefined &&\n      !didWarnDefaultInputValue\n    ) {\n      console.error(\n        '%s contains an input of type %s with both value and defaultValue props. ' +\n          'Input elements must be either controlled or uncontrolled ' +\n          '(specify either the value prop, or the defaultValue prop, but not ' +\n          'both). Decide between using a controlled or uncontrolled input ' +\n          'element and remove one of these props. More info: ' +\n          'https://reactjs.org/link/controlled-components',\n        'A component',\n        props.type,\n      );\n      didWarnDefaultInputValue = true;\n    }\n  }\n\n  target.push(startChunkForTag('input'));\n\n  let value = null;\n  let defaultValue = null;\n  let checked = null;\n  let defaultChecked = null;\n\n  for (const propKey in props) {\n    if (hasOwnProperty.call(props, propKey)) {\n      const propValue = props[propKey];\n      if (propValue == null) {\n        continue;\n      }\n      switch (propKey) {\n        case 'children':\n        case 'dangerouslySetInnerHTML':\n          throw new Error(\n            `${'input'} is a self-closing tag and must neither have \\`children\\` nor ` +\n              'use `dangerouslySetInnerHTML`.',\n          );\n        // eslint-disable-next-line-no-fallthrough\n        case 'defaultChecked':\n          defaultChecked = propValue;\n          break;\n        case 'defaultValue':\n          defaultValue = propValue;\n          break;\n        case 'checked':\n          checked = propValue;\n          break;\n        case 'value':\n          value = propValue;\n          break;\n        default:\n          pushAttribute(target, responseState, propKey, propValue);\n          break;\n      }\n    }\n  }\n\n  if (checked !== null) {\n    pushAttribute(target, responseState, 'checked', checked);\n  } else if (defaultChecked !== null) {\n    pushAttribute(target, responseState, 'checked', defaultChecked);\n  }\n  if (value !== null) {\n    pushAttribute(target, responseState, 'value', value);\n  } else if (defaultValue !== null) {\n    pushAttribute(target, responseState, 'value', defaultValue);\n  }\n\n  target.push(endOfStartTagSelfClosing);\n  return null;\n}\n\nfunction pushStartTextArea(\n  target: Array<Chunk | PrecomputedChunk>,\n  props: Object,\n  responseState: ResponseState,\n): ReactNodeList {\n  if (__DEV__) {\n    checkControlledValueProps('textarea', props);\n    if (\n      props.value !== undefined &&\n      props.defaultValue !== undefined &&\n      !didWarnDefaultTextareaValue\n    ) {\n      console.error(\n        'Textarea elements must be either controlled or uncontrolled ' +\n          '(specify either the value prop, or the defaultValue prop, but not ' +\n          'both). Decide between using a controlled or uncontrolled textarea ' +\n          'and remove one of these props. More info: ' +\n          'https://reactjs.org/link/controlled-components',\n      );\n      didWarnDefaultTextareaValue = true;\n    }\n  }\n\n  target.push(startChunkForTag('textarea'));\n\n  let value = null;\n  let defaultValue = null;\n  let children = null;\n  for (const propKey in props) {\n    if (hasOwnProperty.call(props, propKey)) {\n      const propValue = props[propKey];\n      if (propValue == null) {\n        continue;\n      }\n      switch (propKey) {\n        case 'children':\n          children = propValue;\n          break;\n        case 'value':\n          value = propValue;\n          break;\n        case 'defaultValue':\n          defaultValue = propValue;\n          break;\n        case 'dangerouslySetInnerHTML':\n          throw new Error(\n            '`dangerouslySetInnerHTML` does not make sense on <textarea>.',\n          );\n        // eslint-disable-next-line-no-fallthrough\n        default:\n          pushAttribute(target, responseState, propKey, propValue);\n          break;\n      }\n    }\n  }\n  if (value === null && defaultValue !== null) {\n    value = defaultValue;\n  }\n\n  target.push(endOfStartTag);\n\n  // TODO (yungsters): Remove support for children content in <textarea>.\n  if (children != null) {\n    if (__DEV__) {\n      console.error(\n        'Use the `defaultValue` or `value` props instead of setting ' +\n          'children on <textarea>.',\n      );\n    }\n\n    if (value != null) {\n      throw new Error(\n        'If you supply `defaultValue` on a <textarea>, do not pass children.',\n      );\n    }\n\n    if (isArray(children)) {\n      if (children.length > 1) {\n        throw new Error('<textarea> can only have at most one child.');\n      }\n\n      // TODO: remove the coercion and the DEV check below because it will\n      // always be overwritten by the coercion several lines below it. #22309\n      if (__DEV__) {\n        checkHtmlStringCoercion(children[0]);\n      }\n      value = '' + children[0];\n    }\n    if (__DEV__) {\n      checkHtmlStringCoercion(children);\n    }\n    value = '' + children;\n  }\n\n  if (typeof value === 'string' && value[0] === '\\n') {\n    // text/html ignores the first character in these tags if it's a newline\n    // Prefer to break application/xml over text/html (for now) by adding\n    // a newline specifically to get eaten by the parser. (Alternately for\n    // textareas, replacing \"^\\n\" with \"\\r\\n\" doesn't get eaten, and the first\n    // \\r is normalized out by HTMLTextAreaElement#value.)\n    // See: <http://www.w3.org/TR/html-polyglot/#newlines-in-textarea-and-pre>\n    // See: <http://www.w3.org/TR/html5/syntax.html#element-restrictions>\n    // See: <http://www.w3.org/TR/html5/syntax.html#newlines>\n    // See: Parsing of \"textarea\" \"listing\" and \"pre\" elements\n    //  from <http://www.w3.org/TR/html5/syntax.html#parsing-main-inbody>\n    target.push(leadingNewline);\n  }\n\n  // ToString and push directly instead of recurse over children.\n  // We don't really support complex children in the value anyway.\n  // This also currently avoids a trailing comment node which breaks textarea.\n  if (value !== null) {\n    if (__DEV__) {\n      checkAttributeStringCoercion(value, 'value');\n    }\n    target.push(stringToChunk(encodeHTMLTextNode('' + value)));\n  }\n\n  return null;\n}\n\nfunction pushSelfClosing(\n  target: Array<Chunk | PrecomputedChunk>,\n  props: Object,\n  tag: string,\n  responseState: ResponseState,\n): ReactNodeList {\n  target.push(startChunkForTag(tag));\n\n  for (const propKey in props) {\n    if (hasOwnProperty.call(props, propKey)) {\n      const propValue = props[propKey];\n      if (propValue == null) {\n        continue;\n      }\n      switch (propKey) {\n        case 'children':\n        case 'dangerouslySetInnerHTML':\n          throw new Error(\n            `${tag} is a self-closing tag and must neither have \\`children\\` nor ` +\n              'use `dangerouslySetInnerHTML`.',\n          );\n        // eslint-disable-next-line-no-fallthrough\n        default:\n          pushAttribute(target, responseState, propKey, propValue);\n          break;\n      }\n    }\n  }\n\n  target.push(endOfStartTagSelfClosing);\n  return null;\n}\n\nfunction pushStartMenuItem(\n  target: Array<Chunk | PrecomputedChunk>,\n  props: Object,\n  responseState: ResponseState,\n): ReactNodeList {\n  target.push(startChunkForTag('menuitem'));\n\n  for (const propKey in props) {\n    if (hasOwnProperty.call(props, propKey)) {\n      const propValue = props[propKey];\n      if (propValue == null) {\n        continue;\n      }\n      switch (propKey) {\n        case 'children':\n        case 'dangerouslySetInnerHTML':\n          throw new Error(\n            'menuitems cannot have `children` nor `dangerouslySetInnerHTML`.',\n          );\n        // eslint-disable-next-line-no-fallthrough\n        default:\n          pushAttribute(target, responseState, propKey, propValue);\n          break;\n      }\n    }\n  }\n\n  target.push(endOfStartTag);\n  return null;\n}\n\nfunction pushStartTitle(\n  target: Array<Chunk | PrecomputedChunk>,\n  props: Object,\n  responseState: ResponseState,\n): ReactNodeList {\n  target.push(startChunkForTag('title'));\n\n  let children = null;\n  for (const propKey in props) {\n    if (hasOwnProperty.call(props, propKey)) {\n      const propValue = props[propKey];\n      if (propValue == null) {\n        continue;\n      }\n      switch (propKey) {\n        case 'children':\n          children = propValue;\n          break;\n        case 'dangerouslySetInnerHTML':\n          throw new Error(\n            '`dangerouslySetInnerHTML` does not make sense on <title>.',\n          );\n        // eslint-disable-next-line-no-fallthrough\n        default:\n          pushAttribute(target, responseState, propKey, propValue);\n          break;\n      }\n    }\n  }\n  target.push(endOfStartTag);\n\n  if (__DEV__) {\n    const child =\n      Array.isArray(children) && children.length < 2\n        ? children[0] || null\n        : children;\n    if (Array.isArray(children) && children.length > 1) {\n      console.error(\n        'A title element received an array with more than 1 element as children. ' +\n          'In browsers title Elements can only have Text Nodes as children. If ' +\n          'the children being rendered output more than a single text node in aggregate the browser ' +\n          'will display markup and comments as text in the title and hydration will likely fail and ' +\n          'fall back to client rendering',\n      );\n    } else if (child != null && child.$$typeof != null) {\n      console.error(\n        'A title element received a React element for children. ' +\n          'In the browser title Elements can only have Text Nodes as children. If ' +\n          'the children being rendered output more than a single text node in aggregate the browser ' +\n          'will display markup and comments as text in the title and hydration will likely fail and ' +\n          'fall back to client rendering',\n      );\n    } else if (\n      child != null &&\n      typeof child !== 'string' &&\n      typeof child !== 'number'\n    ) {\n      console.error(\n        'A title element received a value that was not a string or number for children. ' +\n          'In the browser title Elements can only have Text Nodes as children. If ' +\n          'the children being rendered output more than a single text node in aggregate the browser ' +\n          'will display markup and comments as text in the title and hydration will likely fail and ' +\n          'fall back to client rendering',\n      );\n    }\n  }\n  return children;\n}\n\nfunction pushStartGenericElement(\n  target: Array<Chunk | PrecomputedChunk>,\n  props: Object,\n  tag: string,\n  responseState: ResponseState,\n): ReactNodeList {\n  target.push(startChunkForTag(tag));\n\n  let children = null;\n  let innerHTML = null;\n  for (const propKey in props) {\n    if (hasOwnProperty.call(props, propKey)) {\n      const propValue = props[propKey];\n      if (propValue == null) {\n        continue;\n      }\n      switch (propKey) {\n        case 'children':\n          children = propValue;\n          break;\n        case 'dangerouslySetInnerHTML':\n          innerHTML = propValue;\n          break;\n        default:\n          pushAttribute(target, responseState, propKey, propValue);\n          break;\n      }\n    }\n  }\n\n  target.push(endOfStartTag);\n  pushInnerHTML(target, innerHTML, children);\n  if (typeof children === 'string') {\n    // Special case children as a string to avoid the unnecessary comment.\n    // TODO: Remove this special case after the general optimization is in place.\n    target.push(stringToChunk(encodeHTMLTextNode(children)));\n    return null;\n  }\n  return children;\n}\n\nfunction pushStartCustomElement(\n  target: Array<Chunk | PrecomputedChunk>,\n  props: Object,\n  tag: string,\n  responseState: ResponseState,\n): ReactNodeList {\n  target.push(startChunkForTag(tag));\n\n  let children = null;\n  let innerHTML = null;\n  for (let propKey in props) {\n    if (hasOwnProperty.call(props, propKey)) {\n      let propValue = props[propKey];\n      if (propValue == null) {\n        continue;\n      }\n      if (\n        enableCustomElementPropertySupport &&\n        (typeof propValue === 'function' || typeof propValue === 'object')\n      ) {\n        // It is normal to render functions and objects on custom elements when\n        // client rendering, but when server rendering the output isn't useful,\n        // so skip it.\n        continue;\n      }\n      if (enableCustomElementPropertySupport && propValue === false) {\n        continue;\n      }\n      if (enableCustomElementPropertySupport && propValue === true) {\n        propValue = '';\n      }\n      if (enableCustomElementPropertySupport && propKey === 'className') {\n        // className gets rendered as class on the client, so it should be\n        // rendered as class on the server.\n        propKey = 'class';\n      }\n      switch (propKey) {\n        case 'children':\n          children = propValue;\n          break;\n        case 'dangerouslySetInnerHTML':\n          innerHTML = propValue;\n          break;\n        case 'style':\n          pushStyle(target, responseState, propValue);\n          break;\n        case 'suppressContentEditableWarning':\n        case 'suppressHydrationWarning':\n          // Ignored. These are built-in to React on the client.\n          break;\n        default:\n          if (\n            isAttributeNameSafe(propKey) &&\n            typeof propValue !== 'function' &&\n            typeof propValue !== 'symbol'\n          ) {\n            target.push(\n              attributeSeparator,\n              stringToChunk(propKey),\n              attributeAssign,\n              stringToChunk(escapeTextForBrowser(propValue)),\n              attributeEnd,\n            );\n          }\n          break;\n      }\n    }\n  }\n\n  target.push(endOfStartTag);\n  pushInnerHTML(target, innerHTML, children);\n  return children;\n}\n\nconst leadingNewline = stringToPrecomputedChunk('\\n');\n\nfunction pushStartPreformattedElement(\n  target: Array<Chunk | PrecomputedChunk>,\n  props: Object,\n  tag: string,\n  responseState: ResponseState,\n): ReactNodeList {\n  target.push(startChunkForTag(tag));\n\n  let children = null;\n  let innerHTML = null;\n  for (const propKey in props) {\n    if (hasOwnProperty.call(props, propKey)) {\n      const propValue = props[propKey];\n      if (propValue == null) {\n        continue;\n      }\n      switch (propKey) {\n        case 'children':\n          children = propValue;\n          break;\n        case 'dangerouslySetInnerHTML':\n          innerHTML = propValue;\n          break;\n        default:\n          pushAttribute(target, responseState, propKey, propValue);\n          break;\n      }\n    }\n  }\n\n  target.push(endOfStartTag);\n\n  // text/html ignores the first character in these tags if it's a newline\n  // Prefer to break application/xml over text/html (for now) by adding\n  // a newline specifically to get eaten by the parser. (Alternately for\n  // textareas, replacing \"^\\n\" with \"\\r\\n\" doesn't get eaten, and the first\n  // \\r is normalized out by HTMLTextAreaElement#value.)\n  // See: <http://www.w3.org/TR/html-polyglot/#newlines-in-textarea-and-pre>\n  // See: <http://www.w3.org/TR/html5/syntax.html#element-restrictions>\n  // See: <http://www.w3.org/TR/html5/syntax.html#newlines>\n  // See: Parsing of \"textarea\" \"listing\" and \"pre\" elements\n  //  from <http://www.w3.org/TR/html5/syntax.html#parsing-main-inbody>\n  // TODO: This doesn't deal with the case where the child is an array\n  // or component that returns a string.\n  if (innerHTML != null) {\n    if (children != null) {\n      throw new Error(\n        'Can only set one of `children` or `props.dangerouslySetInnerHTML`.',\n      );\n    }\n\n    if (typeof innerHTML !== 'object' || !('__html' in innerHTML)) {\n      throw new Error(\n        '`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. ' +\n          'Please visit https://reactjs.org/link/dangerously-set-inner-html ' +\n          'for more information.',\n      );\n    }\n\n    const html = innerHTML.__html;\n    if (html !== null && html !== undefined) {\n      if (typeof html === 'string' && html.length > 0 && html[0] === '\\n') {\n        target.push(leadingNewline, stringToChunk(html));\n      } else {\n        if (__DEV__) {\n          checkHtmlStringCoercion(html);\n        }\n        target.push(stringToChunk('' + html));\n      }\n    }\n  }\n  if (typeof children === 'string' && children[0] === '\\n') {\n    target.push(leadingNewline);\n  }\n  return children;\n}\n\n// We accept any tag to be rendered but since this gets injected into arbitrary\n// HTML, we want to make sure that it's a safe tag.\n// http://www.w3.org/TR/REC-xml/#NT-Name\nconst VALID_TAG_REGEX = /^[a-zA-Z][a-zA-Z:_\\.\\-\\d]*$/; // Simplified subset\nconst validatedTagCache = new Map();\nfunction startChunkForTag(tag: string): PrecomputedChunk {\n  let tagStartChunk = validatedTagCache.get(tag);\n  if (tagStartChunk === undefined) {\n    if (!VALID_TAG_REGEX.test(tag)) {\n      throw new Error(`Invalid tag: ${tag}`);\n    }\n\n    tagStartChunk = stringToPrecomputedChunk('<' + tag);\n    validatedTagCache.set(tag, tagStartChunk);\n  }\n  return tagStartChunk;\n}\n\nconst DOCTYPE: PrecomputedChunk = stringToPrecomputedChunk('<!DOCTYPE html>');\n\nexport function pushStartInstance(\n  target: Array<Chunk | PrecomputedChunk>,\n  type: string,\n  props: Object,\n  responseState: ResponseState,\n  formatContext: FormatContext,\n): ReactNodeList {\n  if (__DEV__) {\n    validateARIAProperties(type, props);\n    validateInputProperties(type, props);\n    validateUnknownProperties(type, props, null);\n\n    if (\n      !props.suppressContentEditableWarning &&\n      props.contentEditable &&\n      props.children != null\n    ) {\n      console.error(\n        'A component is `contentEditable` and contains `children` managed by ' +\n          'React. It is now your responsibility to guarantee that none of ' +\n          'those nodes are unexpectedly modified or duplicated. This is ' +\n          'probably not intentional.',\n      );\n    }\n\n    if (\n      formatContext.insertionMode !== SVG_MODE &&\n      formatContext.insertionMode !== MATHML_MODE\n    ) {\n      if (\n        type.indexOf('-') === -1 &&\n        typeof props.is !== 'string' &&\n        type.toLowerCase() !== type\n      ) {\n        console.error(\n          '<%s /> is using incorrect casing. ' +\n            'Use PascalCase for React components, ' +\n            'or lowercase for HTML elements.',\n          type,\n        );\n      }\n    }\n  }\n\n  switch (type) {\n    // Special tags\n    case 'select':\n      return pushStartSelect(target, props, responseState);\n    case 'option':\n      return pushStartOption(target, props, responseState, formatContext);\n    case 'textarea':\n      return pushStartTextArea(target, props, responseState);\n    case 'input':\n      return pushInput(target, props, responseState);\n    case 'menuitem':\n      return pushStartMenuItem(target, props, responseState);\n    case 'title':\n      return pushStartTitle(target, props, responseState);\n    // Newline eating tags\n    case 'listing':\n    case 'pre': {\n      return pushStartPreformattedElement(target, props, type, responseState);\n    }\n    // Omitted close tags\n    case 'area':\n    case 'base':\n    case 'br':\n    case 'col':\n    case 'embed':\n    case 'hr':\n    case 'img':\n    case 'keygen':\n    case 'link':\n    case 'meta':\n    case 'param':\n    case 'source':\n    case 'track':\n    case 'wbr': {\n      return pushSelfClosing(target, props, type, responseState);\n    }\n    // These are reserved SVG and MathML elements, that are never custom elements.\n    // https://w3c.github.io/webcomponents/spec/custom/#custom-elements-core-concepts\n    case 'annotation-xml':\n    case 'color-profile':\n    case 'font-face':\n    case 'font-face-src':\n    case 'font-face-uri':\n    case 'font-face-format':\n    case 'font-face-name':\n    case 'missing-glyph': {\n      return pushStartGenericElement(target, props, type, responseState);\n    }\n    case 'html': {\n      if (formatContext.insertionMode === ROOT_HTML_MODE) {\n        // If we're rendering the html tag and we're at the root (i.e. not in foreignObject)\n        // then we also emit the DOCTYPE as part of the root content as a convenience for\n        // rendering the whole document.\n        target.push(DOCTYPE);\n      }\n      return pushStartGenericElement(target, props, type, responseState);\n    }\n    default: {\n      if (type.indexOf('-') === -1 && typeof props.is !== 'string') {\n        // Generic element\n        return pushStartGenericElement(target, props, type, responseState);\n      } else {\n        // Custom element\n        return pushStartCustomElement(target, props, type, responseState);\n      }\n    }\n  }\n}\n\nconst endTag1 = stringToPrecomputedChunk('</');\nconst endTag2 = stringToPrecomputedChunk('>');\n\nexport function pushEndInstance(\n  target: Array<Chunk | PrecomputedChunk>,\n  type: string,\n  props: Object,\n): void {\n  switch (type) {\n    // Omitted close tags\n    // TODO: Instead of repeating this switch we could try to pass a flag from above.\n    // That would require returning a tuple. Which might be ok if it gets inlined.\n    case 'area':\n    case 'base':\n    case 'br':\n    case 'col':\n    case 'embed':\n    case 'hr':\n    case 'img':\n    case 'input':\n    case 'keygen':\n    case 'link':\n    case 'meta':\n    case 'param':\n    case 'source':\n    case 'track':\n    case 'wbr': {\n      // No close tag needed.\n      break;\n    }\n    default: {\n      target.push(endTag1, stringToChunk(type), endTag2);\n    }\n  }\n}\n\nexport function writeCompletedRoot(\n  destination: Destination,\n  responseState: ResponseState,\n): boolean {\n  const bootstrapChunks = responseState.bootstrapChunks;\n  let i = 0;\n  for (; i < bootstrapChunks.length - 1; i++) {\n    writeChunk(destination, bootstrapChunks[i]);\n  }\n  if (i < bootstrapChunks.length) {\n    return writeChunkAndReturn(destination, bootstrapChunks[i]);\n  }\n  return true;\n}\n\n// Structural Nodes\n\n// A placeholder is a node inside a hidden partial tree that can be filled in later, but before\n// display. It's never visible to users. We use the template tag because it can be used in every\n// type of parent. <script> tags also work in every other tag except <colgroup>.\nconst placeholder1 = stringToPrecomputedChunk('<template id=\"');\nconst placeholder2 = stringToPrecomputedChunk('\"></template>');\nexport function writePlaceholder(\n  destination: Destination,\n  responseState: ResponseState,\n  id: number,\n): boolean {\n  writeChunk(destination, placeholder1);\n  writeChunk(destination, responseState.placeholderPrefix);\n  const formattedID = stringToChunk(id.toString(16));\n  writeChunk(destination, formattedID);\n  return writeChunkAndReturn(destination, placeholder2);\n}\n\n// Suspense boundaries are encoded as comments.\nconst startCompletedSuspenseBoundary = stringToPrecomputedChunk('<!--$-->');\nconst startPendingSuspenseBoundary1 = stringToPrecomputedChunk(\n  '<!--$?--><template id=\"',\n);\nconst startPendingSuspenseBoundary2 = stringToPrecomputedChunk('\"></template>');\nconst startClientRenderedSuspenseBoundary = stringToPrecomputedChunk(\n  '<!--$!-->',\n);\nconst endSuspenseBoundary = stringToPrecomputedChunk('<!--/$-->');\n\nconst clientRenderedSuspenseBoundaryError1 = stringToPrecomputedChunk(\n  '<template',\n);\nconst clientRenderedSuspenseBoundaryErrorAttrInterstitial = stringToPrecomputedChunk(\n  '\"',\n);\nconst clientRenderedSuspenseBoundaryError1A = stringToPrecomputedChunk(\n  ' data-dgst=\"',\n);\nconst clientRenderedSuspenseBoundaryError1B = stringToPrecomputedChunk(\n  ' data-msg=\"',\n);\nconst clientRenderedSuspenseBoundaryError1C = stringToPrecomputedChunk(\n  ' data-stck=\"',\n);\nconst clientRenderedSuspenseBoundaryError2 = stringToPrecomputedChunk(\n  '></template>',\n);\n\nexport function pushStartCompletedSuspenseBoundary(\n  target: Array<Chunk | PrecomputedChunk>,\n) {\n  target.push(startCompletedSuspenseBoundary);\n}\n\nexport function pushEndCompletedSuspenseBoundary(\n  target: Array<Chunk | PrecomputedChunk>,\n) {\n  target.push(endSuspenseBoundary);\n}\n\nexport function writeStartCompletedSuspenseBoundary(\n  destination: Destination,\n  responseState: ResponseState,\n): boolean {\n  return writeChunkAndReturn(destination, startCompletedSuspenseBoundary);\n}\nexport function writeStartPendingSuspenseBoundary(\n  destination: Destination,\n  responseState: ResponseState,\n  id: SuspenseBoundaryID,\n): boolean {\n  writeChunk(destination, startPendingSuspenseBoundary1);\n\n  if (id === null) {\n    throw new Error(\n      'An ID must have been assigned before we can complete the boundary.',\n    );\n  }\n\n  writeChunk(destination, id);\n  return writeChunkAndReturn(destination, startPendingSuspenseBoundary2);\n}\nexport function writeStartClientRenderedSuspenseBoundary(\n  destination: Destination,\n  responseState: ResponseState,\n  errorDigest: ?string,\n  errorMesssage: ?string,\n  errorComponentStack: ?string,\n): boolean {\n  let result;\n  result = writeChunkAndReturn(\n    destination,\n    startClientRenderedSuspenseBoundary,\n  );\n  writeChunk(destination, clientRenderedSuspenseBoundaryError1);\n  if (errorDigest) {\n    writeChunk(destination, clientRenderedSuspenseBoundaryError1A);\n    writeChunk(destination, stringToChunk(escapeTextForBrowser(errorDigest)));\n    writeChunk(\n      destination,\n      clientRenderedSuspenseBoundaryErrorAttrInterstitial,\n    );\n  }\n  if (__DEV__) {\n    if (errorMesssage) {\n      writeChunk(destination, clientRenderedSuspenseBoundaryError1B);\n      writeChunk(\n        destination,\n        stringToChunk(escapeTextForBrowser(errorMesssage)),\n      );\n      writeChunk(\n        destination,\n        clientRenderedSuspenseBoundaryErrorAttrInterstitial,\n      );\n    }\n    if (errorComponentStack) {\n      writeChunk(destination, clientRenderedSuspenseBoundaryError1C);\n      writeChunk(\n        destination,\n        stringToChunk(escapeTextForBrowser(errorComponentStack)),\n      );\n      writeChunk(\n        destination,\n        clientRenderedSuspenseBoundaryErrorAttrInterstitial,\n      );\n    }\n  }\n  result = writeChunkAndReturn(\n    destination,\n    clientRenderedSuspenseBoundaryError2,\n  );\n  return result;\n}\nexport function writeEndCompletedSuspenseBoundary(\n  destination: Destination,\n  responseState: ResponseState,\n): boolean {\n  return writeChunkAndReturn(destination, endSuspenseBoundary);\n}\nexport function writeEndPendingSuspenseBoundary(\n  destination: Destination,\n  responseState: ResponseState,\n): boolean {\n  return writeChunkAndReturn(destination, endSuspenseBoundary);\n}\nexport function writeEndClientRenderedSuspenseBoundary(\n  destination: Destination,\n  responseState: ResponseState,\n): boolean {\n  return writeChunkAndReturn(destination, endSuspenseBoundary);\n}\n\nconst startSegmentHTML = stringToPrecomputedChunk('<div hidden id=\"');\nconst startSegmentHTML2 = stringToPrecomputedChunk('\">');\nconst endSegmentHTML = stringToPrecomputedChunk('</div>');\n\nconst startSegmentSVG = stringToPrecomputedChunk(\n  '<svg aria-hidden=\"true\" style=\"display:none\" id=\"',\n);\nconst startSegmentSVG2 = stringToPrecomputedChunk('\">');\nconst endSegmentSVG = stringToPrecomputedChunk('</svg>');\n\nconst startSegmentMathML = stringToPrecomputedChunk(\n  '<math aria-hidden=\"true\" style=\"display:none\" id=\"',\n);\nconst startSegmentMathML2 = stringToPrecomputedChunk('\">');\nconst endSegmentMathML = stringToPrecomputedChunk('</math>');\n\nconst startSegmentTable = stringToPrecomputedChunk('<table hidden id=\"');\nconst startSegmentTable2 = stringToPrecomputedChunk('\">');\nconst endSegmentTable = stringToPrecomputedChunk('</table>');\n\nconst startSegmentTableBody = stringToPrecomputedChunk(\n  '<table hidden><tbody id=\"',\n);\nconst startSegmentTableBody2 = stringToPrecomputedChunk('\">');\nconst endSegmentTableBody = stringToPrecomputedChunk('</tbody></table>');\n\nconst startSegmentTableRow = stringToPrecomputedChunk('<table hidden><tr id=\"');\nconst startSegmentTableRow2 = stringToPrecomputedChunk('\">');\nconst endSegmentTableRow = stringToPrecomputedChunk('</tr></table>');\n\nconst startSegmentColGroup = stringToPrecomputedChunk(\n  '<table hidden><colgroup id=\"',\n);\nconst startSegmentColGroup2 = stringToPrecomputedChunk('\">');\nconst endSegmentColGroup = stringToPrecomputedChunk('</colgroup></table>');\n\nexport function writeStartSegment(\n  destination: Destination,\n  responseState: ResponseState,\n  formatContext: FormatContext,\n  id: number,\n): boolean {\n  switch (formatContext.insertionMode) {\n    case ROOT_HTML_MODE:\n    case HTML_MODE: {\n      writeChunk(destination, startSegmentHTML);\n      writeChunk(destination, responseState.segmentPrefix);\n      writeChunk(destination, stringToChunk(id.toString(16)));\n      return writeChunkAndReturn(destination, startSegmentHTML2);\n    }\n    case SVG_MODE: {\n      writeChunk(destination, startSegmentSVG);\n      writeChunk(destination, responseState.segmentPrefix);\n      writeChunk(destination, stringToChunk(id.toString(16)));\n      return writeChunkAndReturn(destination, startSegmentSVG2);\n    }\n    case MATHML_MODE: {\n      writeChunk(destination, startSegmentMathML);\n      writeChunk(destination, responseState.segmentPrefix);\n      writeChunk(destination, stringToChunk(id.toString(16)));\n      return writeChunkAndReturn(destination, startSegmentMathML2);\n    }\n    case HTML_TABLE_MODE: {\n      writeChunk(destination, startSegmentTable);\n      writeChunk(destination, responseState.segmentPrefix);\n      writeChunk(destination, stringToChunk(id.toString(16)));\n      return writeChunkAndReturn(destination, startSegmentTable2);\n    }\n    // TODO: For the rest of these, there will be extra wrapper nodes that never\n    // get deleted from the document. We need to delete the table too as part\n    // of the injected scripts. They are invisible though so it's not too terrible\n    // and it's kind of an edge case to suspend in a table. Totally supported though.\n    case HTML_TABLE_BODY_MODE: {\n      writeChunk(destination, startSegmentTableBody);\n      writeChunk(destination, responseState.segmentPrefix);\n      writeChunk(destination, stringToChunk(id.toString(16)));\n      return writeChunkAndReturn(destination, startSegmentTableBody2);\n    }\n    case HTML_TABLE_ROW_MODE: {\n      writeChunk(destination, startSegmentTableRow);\n      writeChunk(destination, responseState.segmentPrefix);\n      writeChunk(destination, stringToChunk(id.toString(16)));\n      return writeChunkAndReturn(destination, startSegmentTableRow2);\n    }\n    case HTML_COLGROUP_MODE: {\n      writeChunk(destination, startSegmentColGroup);\n      writeChunk(destination, responseState.segmentPrefix);\n      writeChunk(destination, stringToChunk(id.toString(16)));\n      return writeChunkAndReturn(destination, startSegmentColGroup2);\n    }\n    default: {\n      throw new Error('Unknown insertion mode. This is a bug in React.');\n    }\n  }\n}\nexport function writeEndSegment(\n  destination: Destination,\n  formatContext: FormatContext,\n): boolean {\n  switch (formatContext.insertionMode) {\n    case ROOT_HTML_MODE:\n    case HTML_MODE: {\n      return writeChunkAndReturn(destination, endSegmentHTML);\n    }\n    case SVG_MODE: {\n      return writeChunkAndReturn(destination, endSegmentSVG);\n    }\n    case MATHML_MODE: {\n      return writeChunkAndReturn(destination, endSegmentMathML);\n    }\n    case HTML_TABLE_MODE: {\n      return writeChunkAndReturn(destination, endSegmentTable);\n    }\n    case HTML_TABLE_BODY_MODE: {\n      return writeChunkAndReturn(destination, endSegmentTableBody);\n    }\n    case HTML_TABLE_ROW_MODE: {\n      return writeChunkAndReturn(destination, endSegmentTableRow);\n    }\n    case HTML_COLGROUP_MODE: {\n      return writeChunkAndReturn(destination, endSegmentColGroup);\n    }\n    default: {\n      throw new Error('Unknown insertion mode. This is a bug in React.');\n    }\n  }\n}\n\n// Instruction Set\n\n// The following code is the source scripts that we then minify and inline below,\n// with renamed function names that we hope don't collide:\n\n// const COMMENT_NODE = 8;\n// const SUSPENSE_START_DATA = '$';\n// const SUSPENSE_END_DATA = '/$';\n// const SUSPENSE_PENDING_START_DATA = '$?';\n// const SUSPENSE_FALLBACK_START_DATA = '$!';\n//\n// function clientRenderBoundary(suspenseBoundaryID, errorDigest, errorMsg, errorComponentStack) {\n//   // Find the fallback's first element.\n//   const suspenseIdNode = document.getElementById(suspenseBoundaryID);\n//   if (!suspenseIdNode) {\n//     // The user must have already navigated away from this tree.\n//     // E.g. because the parent was hydrated.\n//     return;\n//   }\n//   // Find the boundary around the fallback. This is always the previous node.\n//   const suspenseNode = suspenseIdNode.previousSibling;\n//   // Tag it to be client rendered.\n//   suspenseNode.data = SUSPENSE_FALLBACK_START_DATA;\n//   // assign error metadata to first sibling\n//   let dataset = suspenseIdNode.dataset;\n//   if (errorDigest) dataset.dgst = errorDigest;\n//   if (errorMsg) dataset.msg = errorMsg;\n//   if (errorComponentStack) dataset.stck = errorComponentStack;\n//   // Tell React to retry it if the parent already hydrated.\n//   if (suspenseNode._reactRetry) {\n//     suspenseNode._reactRetry();\n//   }\n// }\n//\n// function completeBoundary(suspenseBoundaryID, contentID) {\n//   // Find the fallback's first element.\n//   const suspenseIdNode = document.getElementById(suspenseBoundaryID);\n//   const contentNode = document.getElementById(contentID);\n//   // We'll detach the content node so that regardless of what happens next we don't leave in the tree.\n//   // This might also help by not causing recalcing each time we move a child from here to the target.\n//   contentNode.parentNode.removeChild(contentNode);\n//   if (!suspenseIdNode) {\n//     // The user must have already navigated away from this tree.\n//     // E.g. because the parent was hydrated. That's fine there's nothing to do\n//     // but we have to make sure that we already deleted the container node.\n//     return;\n//   }\n//   // Find the boundary around the fallback. This is always the previous node.\n//   const suspenseNode = suspenseIdNode.previousSibling;\n//\n//   // Clear all the existing children. This is complicated because\n//   // there can be embedded Suspense boundaries in the fallback.\n//   // This is similar to clearSuspenseBoundary in ReactDOMHostConfig.\n//   // TODO: We could avoid this if we never emitted suspense boundaries in fallback trees.\n//   // They never hydrate anyway. However, currently we support incrementally loading the fallback.\n//   const parentInstance = suspenseNode.parentNode;\n//   let node = suspenseNode.nextSibling;\n//   let depth = 0;\n//   do {\n//     if (node && node.nodeType === COMMENT_NODE) {\n//       const data = node.data;\n//       if (data === SUSPENSE_END_DATA) {\n//         if (depth === 0) {\n//           break;\n//         } else {\n//           depth--;\n//         }\n//       } else if (\n//         data === SUSPENSE_START_DATA ||\n//         data === SUSPENSE_PENDING_START_DATA ||\n//         data === SUSPENSE_FALLBACK_START_DATA\n//       ) {\n//         depth++;\n//       }\n//     }\n//\n//     const nextNode = node.nextSibling;\n//     parentInstance.removeChild(node);\n//     node = nextNode;\n//   } while (node);\n//\n//   const endOfBoundary = node;\n//\n//   // Insert all the children from the contentNode between the start and end of suspense boundary.\n//   while (contentNode.firstChild) {\n//     parentInstance.insertBefore(contentNode.firstChild, endOfBoundary);\n//   }\n\n//   suspenseNode.data = SUSPENSE_START_DATA;\n//   if (suspenseNode._reactRetry) {\n//     suspenseNode._reactRetry();\n//   }\n// }\n//\n// function completeSegment(containerID, placeholderID) {\n//   const segmentContainer = document.getElementById(containerID);\n//   const placeholderNode = document.getElementById(placeholderID);\n//   // We always expect both nodes to exist here because, while we might\n//   // have navigated away from the main tree, we still expect the detached\n//   // tree to exist.\n//   segmentContainer.parentNode.removeChild(segmentContainer);\n//   while (segmentContainer.firstChild) {\n//     placeholderNode.parentNode.insertBefore(\n//       segmentContainer.firstChild,\n//       placeholderNode,\n//     );\n//   }\n//   placeholderNode.parentNode.removeChild(placeholderNode);\n// }\n\nconst completeSegmentFunction =\n  'function $RS(a,b){a=document.getElementById(a);b=document.getElementById(b);for(a.parentNode.removeChild(a);a.firstChild;)b.parentNode.insertBefore(a.firstChild,b);b.parentNode.removeChild(b)}';\nconst completeBoundaryFunction =\n  'function $RC(a,b){a=document.getElementById(a);b=document.getElementById(b);b.parentNode.removeChild(b);if(a){a=a.previousSibling;var f=a.parentNode,c=a.nextSibling,e=0;do{if(c&&8===c.nodeType){var d=c.data;if(\"/$\"===d)if(0===e)break;else e--;else\"$\"!==d&&\"$?\"!==d&&\"$!\"!==d||e++}d=c.nextSibling;f.removeChild(c);c=d}while(c);for(;b.firstChild;)f.insertBefore(b.firstChild,c);a.data=\"$\";a._reactRetry&&a._reactRetry()}}';\nconst clientRenderFunction =\n  'function $RX(b,c,d,e){var a=document.getElementById(b);a&&(b=a.previousSibling,b.data=\"$!\",a=a.dataset,c&&(a.dgst=c),d&&(a.msg=d),e&&(a.stck=e),b._reactRetry&&b._reactRetry())}';\n\nconst completeSegmentScript1Full = stringToPrecomputedChunk(\n  completeSegmentFunction + ';$RS(\"',\n);\nconst completeSegmentScript1Partial = stringToPrecomputedChunk('$RS(\"');\nconst completeSegmentScript2 = stringToPrecomputedChunk('\",\"');\nconst completeSegmentScript3 = stringToPrecomputedChunk('\")</script>');\n\nexport function writeCompletedSegmentInstruction(\n  destination: Destination,\n  responseState: ResponseState,\n  contentSegmentID: number,\n): boolean {\n  writeChunk(destination, responseState.startInlineScript);\n  if (!responseState.sentCompleteSegmentFunction) {\n    // The first time we write this, we'll need to include the full implementation.\n    responseState.sentCompleteSegmentFunction = true;\n    writeChunk(destination, completeSegmentScript1Full);\n  } else {\n    // Future calls can just reuse the same function.\n    writeChunk(destination, completeSegmentScript1Partial);\n  }\n  writeChunk(destination, responseState.segmentPrefix);\n  const formattedID = stringToChunk(contentSegmentID.toString(16));\n  writeChunk(destination, formattedID);\n  writeChunk(destination, completeSegmentScript2);\n  writeChunk(destination, responseState.placeholderPrefix);\n  writeChunk(destination, formattedID);\n  return writeChunkAndReturn(destination, completeSegmentScript3);\n}\n\nconst completeBoundaryScript1Full = stringToPrecomputedChunk(\n  completeBoundaryFunction + ';$RC(\"',\n);\nconst completeBoundaryScript1Partial = stringToPrecomputedChunk('$RC(\"');\nconst completeBoundaryScript2 = stringToPrecomputedChunk('\",\"');\nconst completeBoundaryScript3 = stringToPrecomputedChunk('\")</script>');\n\nexport function writeCompletedBoundaryInstruction(\n  destination: Destination,\n  responseState: ResponseState,\n  boundaryID: SuspenseBoundaryID,\n  contentSegmentID: number,\n): boolean {\n  writeChunk(destination, responseState.startInlineScript);\n  if (!responseState.sentCompleteBoundaryFunction) {\n    // The first time we write this, we'll need to include the full implementation.\n    responseState.sentCompleteBoundaryFunction = true;\n    writeChunk(destination, completeBoundaryScript1Full);\n  } else {\n    // Future calls can just reuse the same function.\n    writeChunk(destination, completeBoundaryScript1Partial);\n  }\n\n  if (boundaryID === null) {\n    throw new Error(\n      'An ID must have been assigned before we can complete the boundary.',\n    );\n  }\n\n  const formattedContentID = stringToChunk(contentSegmentID.toString(16));\n  writeChunk(destination, boundaryID);\n  writeChunk(destination, completeBoundaryScript2);\n  writeChunk(destination, responseState.segmentPrefix);\n  writeChunk(destination, formattedContentID);\n  return writeChunkAndReturn(destination, completeBoundaryScript3);\n}\n\nconst clientRenderScript1Full = stringToPrecomputedChunk(\n  clientRenderFunction + ';$RX(\"',\n);\nconst clientRenderScript1Partial = stringToPrecomputedChunk('$RX(\"');\nconst clientRenderScript1A = stringToPrecomputedChunk('\"');\nconst clientRenderScript2 = stringToPrecomputedChunk(')</script>');\nconst clientRenderErrorScriptArgInterstitial = stringToPrecomputedChunk(',');\n\nexport function writeClientRenderBoundaryInstruction(\n  destination: Destination,\n  responseState: ResponseState,\n  boundaryID: SuspenseBoundaryID,\n  errorDigest: ?string,\n  errorMessage?: string,\n  errorComponentStack?: string,\n): boolean {\n  writeChunk(destination, responseState.startInlineScript);\n  if (!responseState.sentClientRenderFunction) {\n    // The first time we write this, we'll need to include the full implementation.\n    responseState.sentClientRenderFunction = true;\n    writeChunk(destination, clientRenderScript1Full);\n  } else {\n    // Future calls can just reuse the same function.\n    writeChunk(destination, clientRenderScript1Partial);\n  }\n\n  if (boundaryID === null) {\n    throw new Error(\n      'An ID must have been assigned before we can complete the boundary.',\n    );\n  }\n\n  writeChunk(destination, boundaryID);\n  writeChunk(destination, clientRenderScript1A);\n  if (errorDigest || errorMessage || errorComponentStack) {\n    writeChunk(destination, clientRenderErrorScriptArgInterstitial);\n    writeChunk(\n      destination,\n      stringToChunk(escapeJSStringsForInstructionScripts(errorDigest || '')),\n    );\n  }\n  if (errorMessage || errorComponentStack) {\n    writeChunk(destination, clientRenderErrorScriptArgInterstitial);\n    writeChunk(\n      destination,\n      stringToChunk(escapeJSStringsForInstructionScripts(errorMessage || '')),\n    );\n  }\n  if (errorComponentStack) {\n    writeChunk(destination, clientRenderErrorScriptArgInterstitial);\n    writeChunk(\n      destination,\n      stringToChunk(escapeJSStringsForInstructionScripts(errorComponentStack)),\n    );\n  }\n  return writeChunkAndReturn(destination, clientRenderScript2);\n}\n\nconst regexForJSStringsInScripts = /[<\\u2028\\u2029]/g;\nfunction escapeJSStringsForInstructionScripts(input: string): string {\n  const escaped = JSON.stringify(input);\n  return escaped.replace(regexForJSStringsInScripts, match => {\n    switch (match) {\n      // santizing breaking out of strings and script tags\n      case '<':\n        return '\\\\u003c';\n      case '\\u2028':\n        return '\\\\u2028';\n      case '\\u2029':\n        return '\\\\u2029';\n      default: {\n        // eslint-disable-next-line react-internal/prod-error-codes\n        throw new Error(\n          'escapeJSStringsForInstructionScripts encountered a match it does not know how to replace. this means the match regex and the replacement characters are no longer in sync. This is a bug in React',\n        );\n      }\n    }\n  });\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nconst assign = Object.assign;\n\nexport default assign;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\n// ATTENTION\n// When adding new symbols to this file,\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n\nimport {enableSymbolFallbackForWWW} from './ReactFeatureFlags';\n\nconst usePolyfill =\n  enableSymbolFallbackForWWW && (typeof Symbol !== 'function' || !Symbol.for);\n\n// The Symbol used to tag the ReactElement-like types.\nexport const REACT_ELEMENT_TYPE = usePolyfill\n  ? 0xeac7\n  : Symbol.for('react.element');\nexport const REACT_PORTAL_TYPE = usePolyfill\n  ? 0xeaca\n  : Symbol.for('react.portal');\nexport const REACT_FRAGMENT_TYPE = usePolyfill\n  ? 0xeacb\n  : Symbol.for('react.fragment');\nexport const REACT_STRICT_MODE_TYPE = usePolyfill\n  ? 0xeacc\n  : Symbol.for('react.strict_mode');\nexport const REACT_PROFILER_TYPE = usePolyfill\n  ? 0xead2\n  : Symbol.for('react.profiler');\nexport const REACT_PROVIDER_TYPE = usePolyfill\n  ? 0xeacd\n  : Symbol.for('react.provider');\nexport const REACT_CONTEXT_TYPE = usePolyfill\n  ? 0xeace\n  : Symbol.for('react.context');\nexport const REACT_SERVER_CONTEXT_TYPE = usePolyfill\n  ? 0xeae6\n  : Symbol.for('react.server_context');\nexport const REACT_FORWARD_REF_TYPE = usePolyfill\n  ? 0xead0\n  : Symbol.for('react.forward_ref');\nexport const REACT_SUSPENSE_TYPE = usePolyfill\n  ? 0xead1\n  : Symbol.for('react.suspense');\nexport const REACT_SUSPENSE_LIST_TYPE = usePolyfill\n  ? 0xead8\n  : Symbol.for('react.suspense_list');\nexport const REACT_MEMO_TYPE = usePolyfill ? 0xead3 : Symbol.for('react.memo');\nexport const REACT_LAZY_TYPE = usePolyfill ? 0xead4 : Symbol.for('react.lazy');\nexport const REACT_SCOPE_TYPE = usePolyfill\n  ? 0xead7\n  : Symbol.for('react.scope');\nexport const REACT_DEBUG_TRACING_MODE_TYPE = usePolyfill\n  ? 0xeae1\n  : Symbol.for('react.debug_trace_mode');\nexport const REACT_OFFSCREEN_TYPE = usePolyfill\n  ? 0xeae2\n  : Symbol.for('react.offscreen');\nexport const REACT_LEGACY_HIDDEN_TYPE = usePolyfill\n  ? 0xeae3\n  : Symbol.for('react.legacy_hidden');\nexport const REACT_CACHE_TYPE = usePolyfill\n  ? 0xeae4\n  : Symbol.for('react.cache');\nexport const REACT_TRACING_MARKER_TYPE = usePolyfill\n  ? 0xeae5\n  : Symbol.for('react.tracing_marker');\nexport const REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED = usePolyfill\n  ? 0xeae7\n  : Symbol.for('react.default_value');\nconst MAYBE_ITERATOR_SYMBOL = usePolyfill\n  ? typeof Symbol === 'function' && Symbol.iterator\n  : Symbol.iterator;\n\nconst FAUX_ITERATOR_SYMBOL = '@@iterator';\n\nexport function getIteratorFn(maybeIterable: ?any): ?() => ?Iterator<*> {\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\n    return null;\n  }\n  const maybeIterator =\n    (MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL]) ||\n    maybeIterable[FAUX_ITERATOR_SYMBOL];\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n  return null;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport * as React from 'react';\n\nconst ReactSharedInternals =\n  React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n\nexport default ReactSharedInternals;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Source} from 'shared/ReactElementType';\nimport type {LazyComponent} from 'react/src/ReactLazy';\n\nimport {\n  enableComponentStackLocations,\n  disableNativeComponentFrames,\n} from 'shared/ReactFeatureFlags';\n\nimport {\n  REACT_SUSPENSE_TYPE,\n  REACT_SUSPENSE_LIST_TYPE,\n  REACT_FORWARD_REF_TYPE,\n  REACT_MEMO_TYPE,\n  REACT_LAZY_TYPE,\n} from 'shared/ReactSymbols';\n\nimport {disableLogs, reenableLogs} from 'shared/ConsolePatchingDev';\n\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\n\nconst {ReactCurrentDispatcher} = ReactSharedInternals;\n\nlet prefix;\nexport function describeBuiltInComponentFrame(\n  name: string,\n  source: void | null | Source,\n  ownerFn: void | null | Function,\n): string {\n  if (enableComponentStackLocations) {\n    if (prefix === undefined) {\n      // Extract the VM specific prefix used by each line.\n      try {\n        throw Error();\n      } catch (x) {\n        const match = x.stack.trim().match(/\\n( *(at )?)/);\n        prefix = (match && match[1]) || '';\n      }\n    }\n    // We use the prefix to ensure our stacks line up with native stack frames.\n    return '\\n' + prefix + name;\n  } else {\n    let ownerName = null;\n    if (__DEV__ && ownerFn) {\n      ownerName = ownerFn.displayName || ownerFn.name || null;\n    }\n    return describeComponentFrame(name, source, ownerName);\n  }\n}\n\nlet reentry = false;\nlet componentFrameCache;\nif (__DEV__) {\n  const PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\n  componentFrameCache = new PossiblyWeakMap();\n}\n\nexport function describeNativeComponentFrame(\n  fn: Function,\n  construct: boolean,\n): string {\n  // If something asked for a stack inside a fake render, it should get ignored.\n  if (disableNativeComponentFrames || !fn || reentry) {\n    return '';\n  }\n\n  if (__DEV__) {\n    const frame = componentFrameCache.get(fn);\n    if (frame !== undefined) {\n      return frame;\n    }\n  }\n\n  let control;\n\n  reentry = true;\n  const previousPrepareStackTrace = Error.prepareStackTrace;\n  // $FlowFixMe It does accept undefined.\n  Error.prepareStackTrace = undefined;\n  let previousDispatcher;\n  if (__DEV__) {\n    previousDispatcher = ReactCurrentDispatcher.current;\n    // Set the dispatcher in DEV because this might be call in the render function\n    // for warnings.\n    ReactCurrentDispatcher.current = null;\n    disableLogs();\n  }\n  try {\n    // This should throw.\n    if (construct) {\n      // Something should be setting the props in the constructor.\n      const Fake = function() {\n        throw Error();\n      };\n      // $FlowFixMe\n      Object.defineProperty(Fake.prototype, 'props', {\n        set: function() {\n          // We use a throwing setter instead of frozen or non-writable props\n          // because that won't throw in a non-strict mode function.\n          throw Error();\n        },\n      });\n      if (typeof Reflect === 'object' && Reflect.construct) {\n        // We construct a different control for this case to include any extra\n        // frames added by the construct call.\n        try {\n          Reflect.construct(Fake, []);\n        } catch (x) {\n          control = x;\n        }\n        Reflect.construct(fn, [], Fake);\n      } else {\n        try {\n          Fake.call();\n        } catch (x) {\n          control = x;\n        }\n        fn.call(Fake.prototype);\n      }\n    } else {\n      try {\n        throw Error();\n      } catch (x) {\n        control = x;\n      }\n      fn();\n    }\n  } catch (sample) {\n    // This is inlined manually because closure doesn't do it for us.\n    if (sample && control && typeof sample.stack === 'string') {\n      // This extracts the first frame from the sample that isn't also in the control.\n      // Skipping one frame that we assume is the frame that calls the two.\n      const sampleLines = sample.stack.split('\\n');\n      const controlLines = control.stack.split('\\n');\n      let s = sampleLines.length - 1;\n      let c = controlLines.length - 1;\n      while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {\n        // We expect at least one stack frame to be shared.\n        // Typically this will be the root most one. However, stack frames may be\n        // cut off due to maximum stack limits. In this case, one maybe cut off\n        // earlier than the other. We assume that the sample is longer or the same\n        // and there for cut off earlier. So we should find the root most frame in\n        // the sample somewhere in the control.\n        c--;\n      }\n      for (; s >= 1 && c >= 0; s--, c--) {\n        // Next we find the first one that isn't the same which should be the\n        // frame that called our sample function and the control.\n        if (sampleLines[s] !== controlLines[c]) {\n          // In V8, the first line is describing the message but other VMs don't.\n          // If we're about to return the first line, and the control is also on the same\n          // line, that's a pretty good indicator that our sample threw at same line as\n          // the control. I.e. before we entered the sample frame. So we ignore this result.\n          // This can happen if you passed a class to function component, or non-function.\n          if (s !== 1 || c !== 1) {\n            do {\n              s--;\n              c--;\n              // We may still have similar intermediate frames from the construct call.\n              // The next one that isn't the same should be our match though.\n              if (c < 0 || sampleLines[s] !== controlLines[c]) {\n                // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\n                let frame = '\\n' + sampleLines[s].replace(' at new ', ' at ');\n\n                // If our component frame is labeled \"<anonymous>\"\n                // but we have a user-provided \"displayName\"\n                // splice it in to make the stack more readable.\n                if (fn.displayName && frame.includes('<anonymous>')) {\n                  frame = frame.replace('<anonymous>', fn.displayName);\n                }\n\n                if (__DEV__) {\n                  if (typeof fn === 'function') {\n                    componentFrameCache.set(fn, frame);\n                  }\n                }\n                // Return the line we found.\n                return frame;\n              }\n            } while (s >= 1 && c >= 0);\n          }\n          break;\n        }\n      }\n    }\n  } finally {\n    reentry = false;\n    if (__DEV__) {\n      ReactCurrentDispatcher.current = previousDispatcher;\n      reenableLogs();\n    }\n    Error.prepareStackTrace = previousPrepareStackTrace;\n  }\n  // Fallback to just using the name if we couldn't make it throw.\n  const name = fn ? fn.displayName || fn.name : '';\n  const syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';\n  if (__DEV__) {\n    if (typeof fn === 'function') {\n      componentFrameCache.set(fn, syntheticFrame);\n    }\n  }\n  return syntheticFrame;\n}\n\nconst BEFORE_SLASH_RE = /^(.*)[\\\\\\/]/;\n\nfunction describeComponentFrame(\n  name: null | string,\n  source: void | null | Source,\n  ownerName: null | string,\n) {\n  let sourceInfo = '';\n  if (__DEV__ && source) {\n    const path = source.fileName;\n    let fileName = path.replace(BEFORE_SLASH_RE, '');\n    // In DEV, include code for a common special case:\n    // prefer \"folder/index.js\" instead of just \"index.js\".\n    if (/^index\\./.test(fileName)) {\n      const match = path.match(BEFORE_SLASH_RE);\n      if (match) {\n        const pathBeforeSlash = match[1];\n        if (pathBeforeSlash) {\n          const folderName = pathBeforeSlash.replace(BEFORE_SLASH_RE, '');\n          fileName = folderName + '/' + fileName;\n        }\n      }\n    }\n    sourceInfo = ' (at ' + fileName + ':' + source.lineNumber + ')';\n  } else if (ownerName) {\n    sourceInfo = ' (created by ' + ownerName + ')';\n  }\n  return '\\n    in ' + (name || 'Unknown') + sourceInfo;\n}\n\nexport function describeClassComponentFrame(\n  ctor: Function,\n  source: void | null | Source,\n  ownerFn: void | null | Function,\n): string {\n  if (enableComponentStackLocations) {\n    return describeNativeComponentFrame(ctor, true);\n  } else {\n    return describeFunctionComponentFrame(ctor, source, ownerFn);\n  }\n}\n\nexport function describeFunctionComponentFrame(\n  fn: Function,\n  source: void | null | Source,\n  ownerFn: void | null | Function,\n): string {\n  if (enableComponentStackLocations) {\n    return describeNativeComponentFrame(fn, false);\n  } else {\n    if (!fn) {\n      return '';\n    }\n    const name = fn.displayName || fn.name || null;\n    let ownerName = null;\n    if (__DEV__ && ownerFn) {\n      ownerName = ownerFn.displayName || ownerFn.name || null;\n    }\n    return describeComponentFrame(name, source, ownerName);\n  }\n}\n\nfunction shouldConstruct(Component: Function) {\n  const prototype = Component.prototype;\n  return !!(prototype && prototype.isReactComponent);\n}\n\nexport function describeUnknownElementTypeFrameInDEV(\n  type: any,\n  source: void | null | Source,\n  ownerFn: void | null | Function,\n): string {\n  if (!__DEV__) {\n    return '';\n  }\n  if (type == null) {\n    return '';\n  }\n  if (typeof type === 'function') {\n    if (enableComponentStackLocations) {\n      return describeNativeComponentFrame(type, shouldConstruct(type));\n    } else {\n      return describeFunctionComponentFrame(type, source, ownerFn);\n    }\n  }\n  if (typeof type === 'string') {\n    return describeBuiltInComponentFrame(type, source, ownerFn);\n  }\n  switch (type) {\n    case REACT_SUSPENSE_TYPE:\n      return describeBuiltInComponentFrame('Suspense', source, ownerFn);\n    case REACT_SUSPENSE_LIST_TYPE:\n      return describeBuiltInComponentFrame('SuspenseList', source, ownerFn);\n  }\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_FORWARD_REF_TYPE:\n        return describeFunctionComponentFrame(type.render, source, ownerFn);\n      case REACT_MEMO_TYPE:\n        // Memo may contain any component type so we recursively resolve it.\n        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);\n      case REACT_LAZY_TYPE: {\n        const lazyComponent: LazyComponent<any, any> = (type: any);\n        const payload = lazyComponent._payload;\n        const init = lazyComponent._init;\n        try {\n          // Lazy may contain any component type so we recursively resolve it.\n          return describeUnknownElementTypeFrameInDEV(\n            init(payload),\n            source,\n            ownerFn,\n          );\n        } catch (x) {}\n      }\n    }\n  }\n  return '';\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nconst loggedTypeFailures = {};\n\nimport {describeUnknownElementTypeFrameInDEV} from 'shared/ReactComponentStackFrame';\n\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\nimport hasOwnProperty from 'shared/hasOwnProperty';\n\nconst ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n\nfunction setCurrentlyValidatingElement(element) {\n  if (__DEV__) {\n    if (element) {\n      const owner = element._owner;\n      const stack = describeUnknownElementTypeFrameInDEV(\n        element.type,\n        element._source,\n        owner ? owner.type : null,\n      );\n      ReactDebugCurrentFrame.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame.setExtraStackFrame(null);\n    }\n  }\n}\n\nexport default function checkPropTypes(\n  typeSpecs: Object,\n  values: Object,\n  location: string,\n  componentName: ?string,\n  element?: any,\n): void {\n  if (__DEV__) {\n    // $FlowFixMe This is okay but Flow doesn't know it.\n    const has = Function.call.bind(hasOwnProperty);\n    for (const typeSpecName in typeSpecs) {\n      if (has(typeSpecs, typeSpecName)) {\n        let error;\n        // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\n            // eslint-disable-next-line react-internal/prod-error-codes\n            const err = Error(\n              (componentName || 'React class') +\n                ': ' +\n                location +\n                ' type `' +\n                typeSpecName +\n                '` is invalid; ' +\n                'it must be a function, usually from the `prop-types` package, but received `' +\n                typeof typeSpecs[typeSpecName] +\n                '`.' +\n                'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.',\n            );\n            err.name = 'Invariant Violation';\n            throw err;\n          }\n          error = typeSpecs[typeSpecName](\n            values,\n            typeSpecName,\n            componentName,\n            location,\n            null,\n            'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED',\n          );\n        } catch (ex) {\n          error = ex;\n        }\n        if (error && !(error instanceof Error)) {\n          setCurrentlyValidatingElement(element);\n          console.error(\n            '%s: type specification of %s' +\n              ' `%s` is invalid; the type checker ' +\n              'function must return `null` or an `Error` but returned a %s. ' +\n              'You may have forgotten to pass an argument to the type checker ' +\n              'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' +\n              'shape all require an argument).',\n            componentName || 'React class',\n            location,\n            typeSpecName,\n            typeof error,\n          );\n          setCurrentlyValidatingElement(null);\n        }\n        if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error.message] = true;\n          setCurrentlyValidatingElement(element);\n          console.error('Failed %s type: %s', location, error.message);\n          setCurrentlyValidatingElement(null);\n        }\n      }\n    }\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport {disableLegacyContext} from 'shared/ReactFeatureFlags';\nimport getComponentNameFromType from 'shared/getComponentNameFromType';\nimport checkPropTypes from 'shared/checkPropTypes';\n\nlet warnedAboutMissingGetChildContext;\n\nif (__DEV__) {\n  warnedAboutMissingGetChildContext = {};\n}\n\nexport const emptyContextObject = {};\nif (__DEV__) {\n  Object.freeze(emptyContextObject);\n}\n\nexport function getMaskedContext(type: any, unmaskedContext: Object): Object {\n  if (disableLegacyContext) {\n    return emptyContextObject;\n  } else {\n    const contextTypes = type.contextTypes;\n    if (!contextTypes) {\n      return emptyContextObject;\n    }\n\n    const context = {};\n    for (const key in contextTypes) {\n      context[key] = unmaskedContext[key];\n    }\n\n    if (__DEV__) {\n      const name = getComponentNameFromType(type) || 'Unknown';\n      checkPropTypes(contextTypes, context, 'context', name);\n    }\n\n    return context;\n  }\n}\n\nexport function processChildContext(\n  instance: any,\n  type: any,\n  parentContext: Object,\n  childContextTypes: Object,\n): Object {\n  if (disableLegacyContext) {\n    return parentContext;\n  } else {\n    // TODO (bvaughn) Replace this behavior with an invariant() in the future.\n    // It has only been added in Fiber to match the (unintentional) behavior in Stack.\n    if (typeof instance.getChildContext !== 'function') {\n      if (__DEV__) {\n        const componentName = getComponentNameFromType(type) || 'Unknown';\n\n        if (!warnedAboutMissingGetChildContext[componentName]) {\n          warnedAboutMissingGetChildContext[componentName] = true;\n          console.error(\n            '%s.childContextTypes is specified but there is no getChildContext() method ' +\n              'on the instance. You can either define getChildContext() on %s or remove ' +\n              'childContextTypes from it.',\n            componentName,\n            componentName,\n          );\n        }\n      }\n      return parentContext;\n    }\n\n    const childContext = instance.getChildContext();\n    for (const contextKey in childContext) {\n      if (!(contextKey in childContextTypes)) {\n        throw new Error(\n          `${getComponentNameFromType(type) ||\n            'Unknown'}.getChildContext(): key \"${contextKey}\" is not defined in childContextTypes.`,\n        );\n      }\n    }\n    if (__DEV__) {\n      const name = getComponentNameFromType(type) || 'Unknown';\n      checkPropTypes(childContextTypes, childContext, 'child context', name);\n    }\n\n    return {...parentContext, ...childContext};\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {ReactContext} from 'shared/ReactTypes';\n\nimport {REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED} from 'shared/ReactSymbols';\nimport {isPrimaryRenderer} from './ReactServerFormatConfig';\n\nlet rendererSigil;\nif (__DEV__) {\n  // Use this to detect multiple renderers using the same context\n  rendererSigil = {};\n}\n\n// Used to store the parent path of all context overrides in a shared linked list.\n// Forming a reverse tree.\ntype ContextNode<T> = {\n  parent: null | ContextNode<any>,\n  depth: number, // Short hand to compute the depth of the tree at this node.\n  context: ReactContext<T>,\n  parentValue: T,\n  value: T,\n};\n\n// The structure of a context snapshot is an implementation of this file.\n// Currently, it's implemented as tracking the current active node.\nexport opaque type ContextSnapshot = null | ContextNode<any>;\n\nexport const rootContextSnapshot: ContextSnapshot = null;\n\n// We assume that this runtime owns the \"current\" field on all ReactContext instances.\n// This global (actually thread local) state represents what state all those \"current\",\n// fields are currently in.\nlet currentActiveSnapshot: ContextSnapshot = null;\n\nfunction popNode(prev: ContextNode<any>): void {\n  if (isPrimaryRenderer) {\n    prev.context._currentValue = prev.parentValue;\n  } else {\n    prev.context._currentValue2 = prev.parentValue;\n  }\n}\n\nfunction pushNode(next: ContextNode<any>): void {\n  if (isPrimaryRenderer) {\n    next.context._currentValue = next.value;\n  } else {\n    next.context._currentValue2 = next.value;\n  }\n}\n\nfunction popToNearestCommonAncestor(\n  prev: ContextNode<any>,\n  next: ContextNode<any>,\n): void {\n  if (prev === next) {\n    // We've found a shared ancestor. We don't need to pop nor reapply this one or anything above.\n  } else {\n    popNode(prev);\n    const parentPrev = prev.parent;\n    const parentNext = next.parent;\n    if (parentPrev === null) {\n      if (parentNext !== null) {\n        throw new Error(\n          'The stacks must reach the root at the same time. This is a bug in React.',\n        );\n      }\n    } else {\n      if (parentNext === null) {\n        throw new Error(\n          'The stacks must reach the root at the same time. This is a bug in React.',\n        );\n      }\n\n      popToNearestCommonAncestor(parentPrev, parentNext);\n    }\n\n    // On the way back, we push the new ones that weren't common.\n    pushNode(next);\n  }\n}\n\nfunction popAllPrevious(prev: ContextNode<any>): void {\n  popNode(prev);\n  const parentPrev = prev.parent;\n  if (parentPrev !== null) {\n    popAllPrevious(parentPrev);\n  }\n}\n\nfunction pushAllNext(next: ContextNode<any>): void {\n  const parentNext = next.parent;\n  if (parentNext !== null) {\n    pushAllNext(parentNext);\n  }\n  pushNode(next);\n}\n\nfunction popPreviousToCommonLevel(\n  prev: ContextNode<any>,\n  next: ContextNode<any>,\n): void {\n  popNode(prev);\n  const parentPrev = prev.parent;\n\n  if (parentPrev === null) {\n    throw new Error(\n      'The depth must equal at least at zero before reaching the root. This is a bug in React.',\n    );\n  }\n\n  if (parentPrev.depth === next.depth) {\n    // We found the same level. Now we just need to find a shared ancestor.\n    popToNearestCommonAncestor(parentPrev, next);\n  } else {\n    // We must still be deeper.\n    popPreviousToCommonLevel(parentPrev, next);\n  }\n}\n\nfunction popNextToCommonLevel(\n  prev: ContextNode<any>,\n  next: ContextNode<any>,\n): void {\n  const parentNext = next.parent;\n\n  if (parentNext === null) {\n    throw new Error(\n      'The depth must equal at least at zero before reaching the root. This is a bug in React.',\n    );\n  }\n\n  if (prev.depth === parentNext.depth) {\n    // We found the same level. Now we just need to find a shared ancestor.\n    popToNearestCommonAncestor(prev, parentNext);\n  } else {\n    // We must still be deeper.\n    popNextToCommonLevel(prev, parentNext);\n  }\n  pushNode(next);\n}\n\n// Perform context switching to the new snapshot.\n// To make it cheap to read many contexts, while not suspending, we make the switch eagerly by\n// updating all the context's current values. That way reads, always just read the current value.\n// At the cost of updating contexts even if they're never read by this subtree.\nexport function switchContext(newSnapshot: ContextSnapshot): void {\n  // The basic algorithm we need to do is to pop back any contexts that are no longer on the stack.\n  // We also need to update any new contexts that are now on the stack with the deepest value.\n  // The easiest way to update new contexts is to just reapply them in reverse order from the\n  // perspective of the backpointers. To avoid allocating a lot when switching, we use the stack\n  // for that. Therefore this algorithm is recursive.\n  // 1) First we pop which ever snapshot tree was deepest. Popping old contexts as we go.\n  // 2) Then we find the nearest common ancestor from there. Popping old contexts as we go.\n  // 3) Then we reapply new contexts on the way back up the stack.\n  const prev = currentActiveSnapshot;\n  const next = newSnapshot;\n  if (prev !== next) {\n    if (prev === null) {\n      // $FlowFixMe: This has to be non-null since it's not equal to prev.\n      pushAllNext(next);\n    } else if (next === null) {\n      popAllPrevious(prev);\n    } else if (prev.depth === next.depth) {\n      popToNearestCommonAncestor(prev, next);\n    } else if (prev.depth > next.depth) {\n      popPreviousToCommonLevel(prev, next);\n    } else {\n      popNextToCommonLevel(prev, next);\n    }\n    currentActiveSnapshot = next;\n  }\n}\n\nexport function pushProvider<T>(\n  context: ReactContext<T>,\n  nextValue: T,\n): ContextSnapshot {\n  let prevValue;\n  if (isPrimaryRenderer) {\n    prevValue = context._currentValue;\n    context._currentValue = nextValue;\n    if (__DEV__) {\n      if (\n        context._currentRenderer !== undefined &&\n        context._currentRenderer !== null &&\n        context._currentRenderer !== rendererSigil\n      ) {\n        console.error(\n          'Detected multiple renderers concurrently rendering the ' +\n            'same context provider. This is currently unsupported.',\n        );\n      }\n      context._currentRenderer = rendererSigil;\n    }\n  } else {\n    prevValue = context._currentValue2;\n    context._currentValue2 = nextValue;\n    if (__DEV__) {\n      if (\n        context._currentRenderer2 !== undefined &&\n        context._currentRenderer2 !== null &&\n        context._currentRenderer2 !== rendererSigil\n      ) {\n        console.error(\n          'Detected multiple renderers concurrently rendering the ' +\n            'same context provider. This is currently unsupported.',\n        );\n      }\n      context._currentRenderer2 = rendererSigil;\n    }\n  }\n  const prevNode = currentActiveSnapshot;\n  const newNode: ContextNode<T> = {\n    parent: prevNode,\n    depth: prevNode === null ? 0 : prevNode.depth + 1,\n    context: context,\n    parentValue: prevValue,\n    value: nextValue,\n  };\n  currentActiveSnapshot = newNode;\n  return newNode;\n}\n\nexport function popProvider<T>(context: ReactContext<T>): ContextSnapshot {\n  const prevSnapshot = currentActiveSnapshot;\n\n  if (prevSnapshot === null) {\n    throw new Error(\n      'Tried to pop a Context at the root of the app. This is a bug in React.',\n    );\n  }\n\n  if (__DEV__) {\n    if (prevSnapshot.context !== context) {\n      console.error(\n        'The parent context is not the expected context. This is probably a bug in React.',\n      );\n    }\n  }\n  if (isPrimaryRenderer) {\n    const value = prevSnapshot.parentValue;\n    if (value === REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED) {\n      prevSnapshot.context._currentValue = prevSnapshot.context._defaultValue;\n    } else {\n      prevSnapshot.context._currentValue = value;\n    }\n    if (__DEV__) {\n      if (\n        context._currentRenderer !== undefined &&\n        context._currentRenderer !== null &&\n        context._currentRenderer !== rendererSigil\n      ) {\n        console.error(\n          'Detected multiple renderers concurrently rendering the ' +\n            'same context provider. This is currently unsupported.',\n        );\n      }\n      context._currentRenderer = rendererSigil;\n    }\n  } else {\n    const value = prevSnapshot.parentValue;\n    if (value === REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED) {\n      prevSnapshot.context._currentValue2 = prevSnapshot.context._defaultValue;\n    } else {\n      prevSnapshot.context._currentValue2 = value;\n    }\n    if (__DEV__) {\n      if (\n        context._currentRenderer2 !== undefined &&\n        context._currentRenderer2 !== null &&\n        context._currentRenderer2 !== rendererSigil\n      ) {\n        console.error(\n          'Detected multiple renderers concurrently rendering the ' +\n            'same context provider. This is currently unsupported.',\n        );\n      }\n      context._currentRenderer2 = rendererSigil;\n    }\n  }\n  return (currentActiveSnapshot = prevSnapshot.parent);\n}\n\nexport function getActiveContext(): ContextSnapshot {\n  return currentActiveSnapshot;\n}\n\nexport function readContext<T>(context: ReactContext<T>): T {\n  const value = isPrimaryRenderer\n    ? context._currentValue\n    : context._currentValue2;\n  return value;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/**\n * `ReactInstanceMap` maintains a mapping from a public facing stateful\n * instance (key) and the internal representation (value). This allows public\n * methods to accept the user facing instance as an argument and map them back\n * to internal methods.\n *\n * Note that this module is currently shared and assumed to be stateless.\n * If this becomes an actual Map, that will break.\n */\n\n/**\n * This API should be called `delete` but we'd have to make sure to always\n * transform these to strings for IE support. When this transform is fully\n * supported we can rename it.\n */\nexport function remove(key) {\n  key._reactInternals = undefined;\n}\n\nexport function get(key) {\n  return key._reactInternals;\n}\n\nexport function has(key) {\n  return key._reactInternals !== undefined;\n}\n\nexport function set(key, value) {\n  key._reactInternals = value;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport {emptyContextObject} from './ReactFizzContext';\nimport {readContext} from './ReactFizzNewContext';\n\nimport {\n  disableLegacyContext,\n  warnAboutDeprecatedLifecycles,\n} from 'shared/ReactFeatureFlags';\nimport {get as getInstance, set as setInstance} from 'shared/ReactInstanceMap';\nimport getComponentNameFromType from 'shared/getComponentNameFromType';\nimport {REACT_CONTEXT_TYPE, REACT_PROVIDER_TYPE} from 'shared/ReactSymbols';\nimport assign from 'shared/assign';\nimport isArray from 'shared/isArray';\n\nconst didWarnAboutNoopUpdateForComponent = {};\nconst didWarnAboutDeprecatedWillMount = {};\n\nlet didWarnAboutUninitializedState;\nlet didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate;\nlet didWarnAboutLegacyLifecyclesAndDerivedState;\nlet didWarnAboutUndefinedDerivedState;\nlet warnOnUndefinedDerivedState;\nlet warnOnInvalidCallback;\nlet didWarnAboutDirectlyAssigningPropsToState;\nlet didWarnAboutContextTypeAndContextTypes;\nlet didWarnAboutInvalidateContextType;\n\nif (__DEV__) {\n  didWarnAboutUninitializedState = new Set();\n  didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate = new Set();\n  didWarnAboutLegacyLifecyclesAndDerivedState = new Set();\n  didWarnAboutDirectlyAssigningPropsToState = new Set();\n  didWarnAboutUndefinedDerivedState = new Set();\n  didWarnAboutContextTypeAndContextTypes = new Set();\n  didWarnAboutInvalidateContextType = new Set();\n\n  const didWarnOnInvalidCallback = new Set();\n\n  warnOnInvalidCallback = function(callback: mixed, callerName: string) {\n    if (callback === null || typeof callback === 'function') {\n      return;\n    }\n    const key = callerName + '_' + (callback: any);\n    if (!didWarnOnInvalidCallback.has(key)) {\n      didWarnOnInvalidCallback.add(key);\n      console.error(\n        '%s(...): Expected the last optional `callback` argument to be a ' +\n          'function. Instead received: %s.',\n        callerName,\n        callback,\n      );\n    }\n  };\n\n  warnOnUndefinedDerivedState = function(type, partialState) {\n    if (partialState === undefined) {\n      const componentName = getComponentNameFromType(type) || 'Component';\n      if (!didWarnAboutUndefinedDerivedState.has(componentName)) {\n        didWarnAboutUndefinedDerivedState.add(componentName);\n        console.error(\n          '%s.getDerivedStateFromProps(): A valid state object (or null) must be returned. ' +\n            'You have returned undefined.',\n          componentName,\n        );\n      }\n    }\n  };\n}\n\nfunction warnNoop(\n  publicInstance: React$Component<any, any>,\n  callerName: string,\n) {\n  if (__DEV__) {\n    const constructor = publicInstance.constructor;\n    const componentName =\n      (constructor && getComponentNameFromType(constructor)) || 'ReactClass';\n    const warningKey = componentName + '.' + callerName;\n    if (didWarnAboutNoopUpdateForComponent[warningKey]) {\n      return;\n    }\n\n    console.error(\n      '%s(...): Can only update a mounting component. ' +\n        'This usually means you called %s() outside componentWillMount() on the server. ' +\n        'This is a no-op.\\n\\nPlease check the code for the %s component.',\n      callerName,\n      callerName,\n      componentName,\n    );\n    didWarnAboutNoopUpdateForComponent[warningKey] = true;\n  }\n}\n\ntype InternalInstance = {\n  queue: null | Array<Object>,\n  replace: boolean,\n};\n\nconst classComponentUpdater = {\n  isMounted(inst) {\n    return false;\n  },\n  enqueueSetState(inst, payload, callback) {\n    const internals: InternalInstance = getInstance(inst);\n    if (internals.queue === null) {\n      warnNoop(inst, 'setState');\n    } else {\n      internals.queue.push(payload);\n      if (__DEV__) {\n        if (callback !== undefined && callback !== null) {\n          warnOnInvalidCallback(callback, 'setState');\n        }\n      }\n    }\n  },\n  enqueueReplaceState(inst, payload, callback) {\n    const internals: InternalInstance = getInstance(inst);\n    internals.replace = true;\n    internals.queue = [payload];\n    if (__DEV__) {\n      if (callback !== undefined && callback !== null) {\n        warnOnInvalidCallback(callback, 'setState');\n      }\n    }\n  },\n  enqueueForceUpdate(inst, callback) {\n    const internals: InternalInstance = getInstance(inst);\n    if (internals.queue === null) {\n      warnNoop(inst, 'forceUpdate');\n    } else {\n      if (__DEV__) {\n        if (callback !== undefined && callback !== null) {\n          warnOnInvalidCallback(callback, 'setState');\n        }\n      }\n    }\n  },\n};\n\nfunction applyDerivedStateFromProps(\n  instance: any,\n  ctor: any,\n  getDerivedStateFromProps: (props: any, state: any) => any,\n  prevState: any,\n  nextProps: any,\n) {\n  const partialState = getDerivedStateFromProps(nextProps, prevState);\n\n  if (__DEV__) {\n    warnOnUndefinedDerivedState(ctor, partialState);\n  }\n  // Merge the partial state and the previous state.\n  const newState =\n    partialState === null || partialState === undefined\n      ? prevState\n      : assign({}, prevState, partialState);\n  return newState;\n}\n\nexport function constructClassInstance(\n  ctor: any,\n  props: any,\n  maskedLegacyContext: any,\n): any {\n  let context = emptyContextObject;\n  const contextType = ctor.contextType;\n\n  if (__DEV__) {\n    if ('contextType' in ctor) {\n      const isValid =\n        // Allow null for conditional declaration\n        contextType === null ||\n        (contextType !== undefined &&\n          contextType.$$typeof === REACT_CONTEXT_TYPE &&\n          contextType._context === undefined); // Not a <Context.Consumer>\n\n      if (!isValid && !didWarnAboutInvalidateContextType.has(ctor)) {\n        didWarnAboutInvalidateContextType.add(ctor);\n\n        let addendum = '';\n        if (contextType === undefined) {\n          addendum =\n            ' However, it is set to undefined. ' +\n            'This can be caused by a typo or by mixing up named and default imports. ' +\n            'This can also happen due to a circular dependency, so ' +\n            'try moving the createContext() call to a separate file.';\n        } else if (typeof contextType !== 'object') {\n          addendum = ' However, it is set to a ' + typeof contextType + '.';\n        } else if (contextType.$$typeof === REACT_PROVIDER_TYPE) {\n          addendum = ' Did you accidentally pass the Context.Provider instead?';\n        } else if (contextType._context !== undefined) {\n          // <Context.Consumer>\n          addendum = ' Did you accidentally pass the Context.Consumer instead?';\n        } else {\n          addendum =\n            ' However, it is set to an object with keys {' +\n            Object.keys(contextType).join(', ') +\n            '}.';\n        }\n        console.error(\n          '%s defines an invalid contextType. ' +\n            'contextType should point to the Context object returned by React.createContext().%s',\n          getComponentNameFromType(ctor) || 'Component',\n          addendum,\n        );\n      }\n    }\n  }\n\n  if (typeof contextType === 'object' && contextType !== null) {\n    context = readContext((contextType: any));\n  } else if (!disableLegacyContext) {\n    context = maskedLegacyContext;\n  }\n\n  const instance = new ctor(props, context);\n\n  if (__DEV__) {\n    if (\n      typeof ctor.getDerivedStateFromProps === 'function' &&\n      (instance.state === null || instance.state === undefined)\n    ) {\n      const componentName = getComponentNameFromType(ctor) || 'Component';\n      if (!didWarnAboutUninitializedState.has(componentName)) {\n        didWarnAboutUninitializedState.add(componentName);\n        console.error(\n          '`%s` uses `getDerivedStateFromProps` but its initial state is ' +\n            '%s. This is not recommended. Instead, define the initial state by ' +\n            'assigning an object to `this.state` in the constructor of `%s`. ' +\n            'This ensures that `getDerivedStateFromProps` arguments have a consistent shape.',\n          componentName,\n          instance.state === null ? 'null' : 'undefined',\n          componentName,\n        );\n      }\n    }\n\n    // If new component APIs are defined, \"unsafe\" lifecycles won't be called.\n    // Warn about these lifecycles if they are present.\n    // Don't warn about react-lifecycles-compat polyfilled methods though.\n    if (\n      typeof ctor.getDerivedStateFromProps === 'function' ||\n      typeof instance.getSnapshotBeforeUpdate === 'function'\n    ) {\n      let foundWillMountName = null;\n      let foundWillReceivePropsName = null;\n      let foundWillUpdateName = null;\n      if (\n        typeof instance.componentWillMount === 'function' &&\n        instance.componentWillMount.__suppressDeprecationWarning !== true\n      ) {\n        foundWillMountName = 'componentWillMount';\n      } else if (typeof instance.UNSAFE_componentWillMount === 'function') {\n        foundWillMountName = 'UNSAFE_componentWillMount';\n      }\n      if (\n        typeof instance.componentWillReceiveProps === 'function' &&\n        instance.componentWillReceiveProps.__suppressDeprecationWarning !== true\n      ) {\n        foundWillReceivePropsName = 'componentWillReceiveProps';\n      } else if (\n        typeof instance.UNSAFE_componentWillReceiveProps === 'function'\n      ) {\n        foundWillReceivePropsName = 'UNSAFE_componentWillReceiveProps';\n      }\n      if (\n        typeof instance.componentWillUpdate === 'function' &&\n        instance.componentWillUpdate.__suppressDeprecationWarning !== true\n      ) {\n        foundWillUpdateName = 'componentWillUpdate';\n      } else if (typeof instance.UNSAFE_componentWillUpdate === 'function') {\n        foundWillUpdateName = 'UNSAFE_componentWillUpdate';\n      }\n      if (\n        foundWillMountName !== null ||\n        foundWillReceivePropsName !== null ||\n        foundWillUpdateName !== null\n      ) {\n        const componentName = getComponentNameFromType(ctor) || 'Component';\n        const newApiName =\n          typeof ctor.getDerivedStateFromProps === 'function'\n            ? 'getDerivedStateFromProps()'\n            : 'getSnapshotBeforeUpdate()';\n        if (!didWarnAboutLegacyLifecyclesAndDerivedState.has(componentName)) {\n          didWarnAboutLegacyLifecyclesAndDerivedState.add(componentName);\n          console.error(\n            'Unsafe legacy lifecycles will not be called for components using new component APIs.\\n\\n' +\n              '%s uses %s but also contains the following legacy lifecycles:%s%s%s\\n\\n' +\n              'The above lifecycles should be removed. Learn more about this warning here:\\n' +\n              'https://reactjs.org/link/unsafe-component-lifecycles',\n            componentName,\n            newApiName,\n            foundWillMountName !== null ? `\\n  ${foundWillMountName}` : '',\n            foundWillReceivePropsName !== null\n              ? `\\n  ${foundWillReceivePropsName}`\n              : '',\n            foundWillUpdateName !== null ? `\\n  ${foundWillUpdateName}` : '',\n          );\n        }\n      }\n    }\n  }\n\n  return instance;\n}\n\nfunction checkClassInstance(instance: any, ctor: any, newProps: any) {\n  if (__DEV__) {\n    const name = getComponentNameFromType(ctor) || 'Component';\n    const renderPresent = instance.render;\n\n    if (!renderPresent) {\n      if (ctor.prototype && typeof ctor.prototype.render === 'function') {\n        console.error(\n          '%s(...): No `render` method found on the returned component ' +\n            'instance: did you accidentally return an object from the constructor?',\n          name,\n        );\n      } else {\n        console.error(\n          '%s(...): No `render` method found on the returned component ' +\n            'instance: you may have forgotten to define `render`.',\n          name,\n        );\n      }\n    }\n\n    if (\n      instance.getInitialState &&\n      !instance.getInitialState.isReactClassApproved &&\n      !instance.state\n    ) {\n      console.error(\n        'getInitialState was defined on %s, a plain JavaScript class. ' +\n          'This is only supported for classes created using React.createClass. ' +\n          'Did you mean to define a state property instead?',\n        name,\n      );\n    }\n    if (\n      instance.getDefaultProps &&\n      !instance.getDefaultProps.isReactClassApproved\n    ) {\n      console.error(\n        'getDefaultProps was defined on %s, a plain JavaScript class. ' +\n          'This is only supported for classes created using React.createClass. ' +\n          'Use a static property to define defaultProps instead.',\n        name,\n      );\n    }\n    if (instance.propTypes) {\n      console.error(\n        'propTypes was defined as an instance property on %s. Use a static ' +\n          'property to define propTypes instead.',\n        name,\n      );\n    }\n    if (instance.contextType) {\n      console.error(\n        'contextType was defined as an instance property on %s. Use a static ' +\n          'property to define contextType instead.',\n        name,\n      );\n    }\n\n    if (disableLegacyContext) {\n      if (ctor.childContextTypes) {\n        console.error(\n          '%s uses the legacy childContextTypes API which is no longer supported. ' +\n            'Use React.createContext() instead.',\n          name,\n        );\n      }\n      if (ctor.contextTypes) {\n        console.error(\n          '%s uses the legacy contextTypes API which is no longer supported. ' +\n            'Use React.createContext() with static contextType instead.',\n          name,\n        );\n      }\n    } else {\n      if (instance.contextTypes) {\n        console.error(\n          'contextTypes was defined as an instance property on %s. Use a static ' +\n            'property to define contextTypes instead.',\n          name,\n        );\n      }\n\n      if (\n        ctor.contextType &&\n        ctor.contextTypes &&\n        !didWarnAboutContextTypeAndContextTypes.has(ctor)\n      ) {\n        didWarnAboutContextTypeAndContextTypes.add(ctor);\n        console.error(\n          '%s declares both contextTypes and contextType static properties. ' +\n            'The legacy contextTypes property will be ignored.',\n          name,\n        );\n      }\n    }\n\n    if (typeof instance.componentShouldUpdate === 'function') {\n      console.error(\n        '%s has a method called ' +\n          'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' +\n          'The name is phrased as a question because the function is ' +\n          'expected to return a value.',\n        name,\n      );\n    }\n    if (\n      ctor.prototype &&\n      ctor.prototype.isPureReactComponent &&\n      typeof instance.shouldComponentUpdate !== 'undefined'\n    ) {\n      console.error(\n        '%s has a method called shouldComponentUpdate(). ' +\n          'shouldComponentUpdate should not be used when extending React.PureComponent. ' +\n          'Please extend React.Component if shouldComponentUpdate is used.',\n        getComponentNameFromType(ctor) || 'A pure component',\n      );\n    }\n    if (typeof instance.componentDidUnmount === 'function') {\n      console.error(\n        '%s has a method called ' +\n          'componentDidUnmount(). But there is no such lifecycle method. ' +\n          'Did you mean componentWillUnmount()?',\n        name,\n      );\n    }\n    if (typeof instance.componentDidReceiveProps === 'function') {\n      console.error(\n        '%s has a method called ' +\n          'componentDidReceiveProps(). But there is no such lifecycle method. ' +\n          'If you meant to update the state in response to changing props, ' +\n          'use componentWillReceiveProps(). If you meant to fetch data or ' +\n          'run side-effects or mutations after React has updated the UI, use componentDidUpdate().',\n        name,\n      );\n    }\n    if (typeof instance.componentWillRecieveProps === 'function') {\n      console.error(\n        '%s has a method called ' +\n          'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?',\n        name,\n      );\n    }\n    if (typeof instance.UNSAFE_componentWillRecieveProps === 'function') {\n      console.error(\n        '%s has a method called ' +\n          'UNSAFE_componentWillRecieveProps(). Did you mean UNSAFE_componentWillReceiveProps()?',\n        name,\n      );\n    }\n    const hasMutatedProps = instance.props !== newProps;\n    if (instance.props !== undefined && hasMutatedProps) {\n      console.error(\n        '%s(...): When calling super() in `%s`, make sure to pass ' +\n          \"up the same props that your component's constructor was passed.\",\n        name,\n        name,\n      );\n    }\n    if (instance.defaultProps) {\n      console.error(\n        'Setting defaultProps as an instance property on %s is not supported and will be ignored.' +\n          ' Instead, define defaultProps as a static property on %s.',\n        name,\n        name,\n      );\n    }\n\n    if (\n      typeof instance.getSnapshotBeforeUpdate === 'function' &&\n      typeof instance.componentDidUpdate !== 'function' &&\n      !didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.has(ctor)\n    ) {\n      didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.add(ctor);\n      console.error(\n        '%s: getSnapshotBeforeUpdate() should be used with componentDidUpdate(). ' +\n          'This component defines getSnapshotBeforeUpdate() only.',\n        getComponentNameFromType(ctor),\n      );\n    }\n\n    if (typeof instance.getDerivedStateFromProps === 'function') {\n      console.error(\n        '%s: getDerivedStateFromProps() is defined as an instance method ' +\n          'and will be ignored. Instead, declare it as a static method.',\n        name,\n      );\n    }\n    if (typeof instance.getDerivedStateFromError === 'function') {\n      console.error(\n        '%s: getDerivedStateFromError() is defined as an instance method ' +\n          'and will be ignored. Instead, declare it as a static method.',\n        name,\n      );\n    }\n    if (typeof ctor.getSnapshotBeforeUpdate === 'function') {\n      console.error(\n        '%s: getSnapshotBeforeUpdate() is defined as a static method ' +\n          'and will be ignored. Instead, declare it as an instance method.',\n        name,\n      );\n    }\n    const state = instance.state;\n    if (state && (typeof state !== 'object' || isArray(state))) {\n      console.error('%s.state: must be set to an object or null', name);\n    }\n    if (\n      typeof instance.getChildContext === 'function' &&\n      typeof ctor.childContextTypes !== 'object'\n    ) {\n      console.error(\n        '%s.getChildContext(): childContextTypes must be defined in order to ' +\n          'use getChildContext().',\n        name,\n      );\n    }\n  }\n}\n\nfunction callComponentWillMount(type, instance) {\n  const oldState = instance.state;\n\n  if (typeof instance.componentWillMount === 'function') {\n    if (__DEV__) {\n      if (\n        warnAboutDeprecatedLifecycles &&\n        instance.componentWillMount.__suppressDeprecationWarning !== true\n      ) {\n        const componentName = getComponentNameFromType(type) || 'Unknown';\n\n        if (!didWarnAboutDeprecatedWillMount[componentName]) {\n          console.warn(\n            // keep this warning in sync with ReactStrictModeWarning.js\n            'componentWillMount has been renamed, and is not recommended for use. ' +\n              'See https://reactjs.org/link/unsafe-component-lifecycles for details.\\n\\n' +\n              '* Move code from componentWillMount to componentDidMount (preferred in most cases) ' +\n              'or the constructor.\\n' +\n              '\\nPlease update the following components: %s',\n            componentName,\n          );\n          didWarnAboutDeprecatedWillMount[componentName] = true;\n        }\n      }\n    }\n\n    instance.componentWillMount();\n  }\n  if (typeof instance.UNSAFE_componentWillMount === 'function') {\n    instance.UNSAFE_componentWillMount();\n  }\n\n  if (oldState !== instance.state) {\n    if (__DEV__) {\n      console.error(\n        '%s.componentWillMount(): Assigning directly to this.state is ' +\n          \"deprecated (except inside a component's \" +\n          'constructor). Use setState instead.',\n        getComponentNameFromType(type) || 'Component',\n      );\n    }\n    classComponentUpdater.enqueueReplaceState(instance, instance.state, null);\n  }\n}\n\nfunction processUpdateQueue(\n  internalInstance: InternalInstance,\n  inst: any,\n  props: any,\n  maskedLegacyContext: any,\n): void {\n  if (internalInstance.queue !== null && internalInstance.queue.length > 0) {\n    const oldQueue = internalInstance.queue;\n    const oldReplace = internalInstance.replace;\n    internalInstance.queue = null;\n    internalInstance.replace = false;\n\n    if (oldReplace && oldQueue.length === 1) {\n      inst.state = oldQueue[0];\n    } else {\n      let nextState = oldReplace ? oldQueue[0] : inst.state;\n      let dontMutate = true;\n      for (let i = oldReplace ? 1 : 0; i < oldQueue.length; i++) {\n        const partial = oldQueue[i];\n        const partialState =\n          typeof partial === 'function'\n            ? partial.call(inst, nextState, props, maskedLegacyContext)\n            : partial;\n        if (partialState != null) {\n          if (dontMutate) {\n            dontMutate = false;\n            nextState = assign({}, nextState, partialState);\n          } else {\n            assign(nextState, partialState);\n          }\n        }\n      }\n      inst.state = nextState;\n    }\n  } else {\n    internalInstance.queue = null;\n  }\n}\n\n// Invokes the mount life-cycles on a previously never rendered instance.\nexport function mountClassInstance(\n  instance: any,\n  ctor: any,\n  newProps: any,\n  maskedLegacyContext: any,\n): void {\n  if (__DEV__) {\n    checkClassInstance(instance, ctor, newProps);\n  }\n\n  const initialState = instance.state !== undefined ? instance.state : null;\n\n  instance.updater = classComponentUpdater;\n  instance.props = newProps;\n  instance.state = initialState;\n  // We don't bother initializing the refs object on the server, since we're not going to resolve them anyway.\n\n  // The internal instance will be used to manage updates that happen during this mount.\n  const internalInstance: InternalInstance = {\n    queue: [],\n    replace: false,\n  };\n  setInstance(instance, internalInstance);\n\n  const contextType = ctor.contextType;\n  if (typeof contextType === 'object' && contextType !== null) {\n    instance.context = readContext(contextType);\n  } else if (disableLegacyContext) {\n    instance.context = emptyContextObject;\n  } else {\n    instance.context = maskedLegacyContext;\n  }\n\n  if (__DEV__) {\n    if (instance.state === newProps) {\n      const componentName = getComponentNameFromType(ctor) || 'Component';\n      if (!didWarnAboutDirectlyAssigningPropsToState.has(componentName)) {\n        didWarnAboutDirectlyAssigningPropsToState.add(componentName);\n        console.error(\n          '%s: It is not recommended to assign props directly to state ' +\n            \"because updates to props won't be reflected in state. \" +\n            'In most cases, it is better to use props directly.',\n          componentName,\n        );\n      }\n    }\n  }\n\n  const getDerivedStateFromProps = ctor.getDerivedStateFromProps;\n  if (typeof getDerivedStateFromProps === 'function') {\n    instance.state = applyDerivedStateFromProps(\n      instance,\n      ctor,\n      getDerivedStateFromProps,\n      initialState,\n      newProps,\n    );\n  }\n\n  // In order to support react-lifecycles-compat polyfilled components,\n  // Unsafe lifecycles should not be invoked for components using the new APIs.\n  if (\n    typeof ctor.getDerivedStateFromProps !== 'function' &&\n    typeof instance.getSnapshotBeforeUpdate !== 'function' &&\n    (typeof instance.UNSAFE_componentWillMount === 'function' ||\n      typeof instance.componentWillMount === 'function')\n  ) {\n    callComponentWillMount(ctor, instance);\n    // If we had additional state updates during this life-cycle, let's\n    // process them now.\n    processUpdateQueue(\n      internalInstance,\n      instance,\n      newProps,\n      maskedLegacyContext,\n    );\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\n// Ids are base 32 strings whose binary representation corresponds to the\n// position of a node in a tree.\n\n// Every time the tree forks into multiple children, we add additional bits to\n// the left of the sequence that represent the position of the child within the\n// current level of children.\n//\n//      00101       00010001011010101\n//      ╰─┬─╯       ╰───────┬───────╯\n//   Fork 5 of 20       Parent id\n//\n// The leading 0s are important. In the above example, you only need 3 bits to\n// represent slot 5. However, you need 5 bits to represent all the forks at\n// the current level, so we must account for the empty bits at the end.\n//\n// For this same reason, slots are 1-indexed instead of 0-indexed. Otherwise,\n// the zeroth id at a level would be indistinguishable from its parent.\n//\n// If a node has only one child, and does not materialize an id (i.e. does not\n// contain a useId hook), then we don't need to allocate any space in the\n// sequence. It's treated as a transparent indirection. For example, these two\n// trees produce the same ids:\n//\n// <>                          <>\n//   <Indirection>               <A />\n//     <A />                     <B />\n//   </Indirection>            </>\n//   <B />\n// </>\n//\n// However, we cannot skip any node that materializes an id. Otherwise, a parent\n// id that does not fork would be indistinguishable from its child id. For\n// example, this tree does not fork, but the parent and child must have\n// different ids.\n//\n// <Parent>\n//   <Child />\n// </Parent>\n//\n// To handle this scenario, every time we materialize an id, we allocate a\n// new level with a single slot. You can think of this as a fork with only one\n// prong, or an array of children with length 1.\n//\n// It's possible for the size of the sequence to exceed 32 bits, the max\n// size for bitwise operations. When this happens, we make more room by\n// converting the right part of the id to a string and storing it in an overflow\n// variable. We use a base 32 string representation, because 32 is the largest\n// power of 2 that is supported by toString(). We want the base to be large so\n// that the resulting ids are compact, and we want the base to be a power of 2\n// because every log2(base) bits corresponds to a single character, i.e. every\n// log2(32) = 5 bits. That means we can lop bits off the end 5 at a time without\n// affecting the final result.\n\nexport type TreeContext = {\n  +id: number,\n  +overflow: string,\n};\n\nexport const emptyTreeContext = {\n  id: 1,\n  overflow: '',\n};\n\nexport function getTreeId(context: TreeContext): string {\n  const overflow = context.overflow;\n  const idWithLeadingBit = context.id;\n  const id = idWithLeadingBit & ~getLeadingBit(idWithLeadingBit);\n  return id.toString(32) + overflow;\n}\n\nexport function pushTreeContext(\n  baseContext: TreeContext,\n  totalChildren: number,\n  index: number,\n): TreeContext {\n  const baseIdWithLeadingBit = baseContext.id;\n  const baseOverflow = baseContext.overflow;\n\n  // The leftmost 1 marks the end of the sequence, non-inclusive. It's not part\n  // of the id; we use it to account for leading 0s.\n  const baseLength = getBitLength(baseIdWithLeadingBit) - 1;\n  const baseId = baseIdWithLeadingBit & ~(1 << baseLength);\n\n  const slot = index + 1;\n  const length = getBitLength(totalChildren) + baseLength;\n\n  // 30 is the max length we can store without overflowing, taking into\n  // consideration the leading 1 we use to mark the end of the sequence.\n  if (length > 30) {\n    // We overflowed the bitwise-safe range. Fall back to slower algorithm.\n    // This branch assumes the length of the base id is greater than 5; it won't\n    // work for smaller ids, because you need 5 bits per character.\n    //\n    // We encode the id in multiple steps: first the base id, then the\n    // remaining digits.\n    //\n    // Each 5 bit sequence corresponds to a single base 32 character. So for\n    // example, if the current id is 23 bits long, we can convert 20 of those\n    // bits into a string of 4 characters, with 3 bits left over.\n    //\n    // First calculate how many bits in the base id represent a complete\n    // sequence of characters.\n    const numberOfOverflowBits = baseLength - (baseLength % 5);\n\n    // Then create a bitmask that selects only those bits.\n    const newOverflowBits = (1 << numberOfOverflowBits) - 1;\n\n    // Select the bits, and convert them to a base 32 string.\n    const newOverflow = (baseId & newOverflowBits).toString(32);\n\n    // Now we can remove those bits from the base id.\n    const restOfBaseId = baseId >> numberOfOverflowBits;\n    const restOfBaseLength = baseLength - numberOfOverflowBits;\n\n    // Finally, encode the rest of the bits using the normal algorithm. Because\n    // we made more room, this time it won't overflow.\n    const restOfLength = getBitLength(totalChildren) + restOfBaseLength;\n    const restOfNewBits = slot << restOfBaseLength;\n    const id = restOfNewBits | restOfBaseId;\n    const overflow = newOverflow + baseOverflow;\n    return {\n      id: (1 << restOfLength) | id,\n      overflow,\n    };\n  } else {\n    // Normal path\n    const newBits = slot << baseLength;\n    const id = newBits | baseId;\n    const overflow = baseOverflow;\n    return {\n      id: (1 << length) | id,\n      overflow,\n    };\n  }\n}\n\nfunction getBitLength(number: number): number {\n  return 32 - clz32(number);\n}\n\nfunction getLeadingBit(id: number) {\n  return 1 << (getBitLength(id) - 1);\n}\n\n// TODO: Math.clz32 is supported in Node 12+. Maybe we can drop the fallback.\nconst clz32 = Math.clz32 ? Math.clz32 : clz32Fallback;\n\n// Count leading zeros.\n// Based on:\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/clz32\nconst log = Math.log;\nconst LN2 = Math.LN2;\nfunction clz32Fallback(x: number): number {\n  const asUint = x >>> 0;\n  if (asUint === 0) {\n    return 32;\n  }\n  return (31 - ((log(asUint) / LN2) | 0)) | 0;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\n/**\n * inlined Object.is polyfill to avoid requiring consumers ship their own\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n */\nfunction is(x: any, y: any) {\n  return (\n    (x === y && (x !== 0 || 1 / x === 1 / y)) || (x !== x && y !== y) // eslint-disable-line no-self-compare\n  );\n}\n\nconst objectIs: (x: any, y: any) => boolean =\n  typeof Object.is === 'function' ? Object.is : is;\n\nexport default objectIs;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Dispatcher as DispatcherType} from 'react-reconciler/src/ReactInternalTypes';\n\nimport type {\n  MutableSource,\n  MutableSourceGetSnapshotFn,\n  MutableSourceSubscribeFn,\n  ReactContext,\n  StartTransitionOptions,\n} from 'shared/ReactTypes';\n\nimport type {ResponseState} from './ReactServerFormatConfig';\nimport type {Task} from './ReactFizzServer';\n\nimport {readContext as readContextImpl} from './ReactFizzNewContext';\nimport {getTreeId} from './ReactFizzTreeContext';\n\nimport {makeId} from './ReactServerFormatConfig';\n\nimport {enableCache} from 'shared/ReactFeatureFlags';\nimport is from 'shared/objectIs';\n\ntype BasicStateAction<S> = (S => S) | S;\ntype Dispatch<A> = A => void;\n\ntype Update<A> = {|\n  action: A,\n  next: Update<A> | null,\n|};\n\ntype UpdateQueue<A> = {|\n  last: Update<A> | null,\n  dispatch: any,\n|};\n\ntype Hook = {|\n  memoizedState: any,\n  queue: UpdateQueue<any> | null,\n  next: Hook | null,\n|};\n\nlet currentlyRenderingComponent: Object | null = null;\nlet currentlyRenderingTask: Task | null = null;\nlet firstWorkInProgressHook: Hook | null = null;\nlet workInProgressHook: Hook | null = null;\n// Whether the work-in-progress hook is a re-rendered hook\nlet isReRender: boolean = false;\n// Whether an update was scheduled during the currently executing render pass.\nlet didScheduleRenderPhaseUpdate: boolean = false;\n// Counts the number of useId hooks in this component\nlet localIdCounter: number = 0;\n// Lazily created map of render-phase updates\nlet renderPhaseUpdates: Map<UpdateQueue<any>, Update<any>> | null = null;\n// Counter to prevent infinite loops.\nlet numberOfReRenders: number = 0;\nconst RE_RENDER_LIMIT = 25;\n\nlet isInHookUserCodeInDev = false;\n\n// In DEV, this is the name of the currently executing primitive hook\nlet currentHookNameInDev: ?string;\n\nfunction resolveCurrentlyRenderingComponent(): Object {\n  if (currentlyRenderingComponent === null) {\n    throw new Error(\n      'Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for' +\n        ' one of the following reasons:\\n' +\n        '1. You might have mismatching versions of React and the renderer (such as React DOM)\\n' +\n        '2. You might be breaking the Rules of Hooks\\n' +\n        '3. You might have more than one copy of React in the same app\\n' +\n        'See https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.',\n    );\n  }\n\n  if (__DEV__) {\n    if (isInHookUserCodeInDev) {\n      console.error(\n        'Do not call Hooks inside useEffect(...), useMemo(...), or other built-in Hooks. ' +\n          'You can only call Hooks at the top level of your React function. ' +\n          'For more information, see ' +\n          'https://reactjs.org/link/rules-of-hooks',\n      );\n    }\n  }\n  return currentlyRenderingComponent;\n}\n\nfunction areHookInputsEqual(\n  nextDeps: Array<mixed>,\n  prevDeps: Array<mixed> | null,\n) {\n  if (prevDeps === null) {\n    if (__DEV__) {\n      console.error(\n        '%s received a final argument during this render, but not during ' +\n          'the previous render. Even though the final argument is optional, ' +\n          'its type cannot change between renders.',\n        currentHookNameInDev,\n      );\n    }\n    return false;\n  }\n\n  if (__DEV__) {\n    // Don't bother comparing lengths in prod because these arrays should be\n    // passed inline.\n    if (nextDeps.length !== prevDeps.length) {\n      console.error(\n        'The final argument passed to %s changed size between renders. The ' +\n          'order and size of this array must remain constant.\\n\\n' +\n          'Previous: %s\\n' +\n          'Incoming: %s',\n        currentHookNameInDev,\n        `[${nextDeps.join(', ')}]`,\n        `[${prevDeps.join(', ')}]`,\n      );\n    }\n  }\n  for (let i = 0; i < prevDeps.length && i < nextDeps.length; i++) {\n    if (is(nextDeps[i], prevDeps[i])) {\n      continue;\n    }\n    return false;\n  }\n  return true;\n}\n\nfunction createHook(): Hook {\n  if (numberOfReRenders > 0) {\n    throw new Error('Rendered more hooks than during the previous render');\n  }\n  return {\n    memoizedState: null,\n    queue: null,\n    next: null,\n  };\n}\n\nfunction createWorkInProgressHook(): Hook {\n  if (workInProgressHook === null) {\n    // This is the first hook in the list\n    if (firstWorkInProgressHook === null) {\n      isReRender = false;\n      firstWorkInProgressHook = workInProgressHook = createHook();\n    } else {\n      // There's already a work-in-progress. Reuse it.\n      isReRender = true;\n      workInProgressHook = firstWorkInProgressHook;\n    }\n  } else {\n    if (workInProgressHook.next === null) {\n      isReRender = false;\n      // Append to the end of the list\n      workInProgressHook = workInProgressHook.next = createHook();\n    } else {\n      // There's already a work-in-progress. Reuse it.\n      isReRender = true;\n      workInProgressHook = workInProgressHook.next;\n    }\n  }\n  return workInProgressHook;\n}\n\nexport function prepareToUseHooks(task: Task, componentIdentity: Object): void {\n  currentlyRenderingComponent = componentIdentity;\n  currentlyRenderingTask = task;\n  if (__DEV__) {\n    isInHookUserCodeInDev = false;\n  }\n\n  // The following should have already been reset\n  // didScheduleRenderPhaseUpdate = false;\n  // localIdCounter = 0;\n  // firstWorkInProgressHook = null;\n  // numberOfReRenders = 0;\n  // renderPhaseUpdates = null;\n  // workInProgressHook = null;\n\n  localIdCounter = 0;\n}\n\nexport function finishHooks(\n  Component: any,\n  props: any,\n  children: any,\n  refOrContext: any,\n): any {\n  // This must be called after every function component to prevent hooks from\n  // being used in classes.\n\n  while (didScheduleRenderPhaseUpdate) {\n    // Updates were scheduled during the render phase. They are stored in\n    // the `renderPhaseUpdates` map. Call the component again, reusing the\n    // work-in-progress hooks and applying the additional updates on top. Keep\n    // restarting until no more updates are scheduled.\n    didScheduleRenderPhaseUpdate = false;\n    localIdCounter = 0;\n    numberOfReRenders += 1;\n\n    // Start over from the beginning of the list\n    workInProgressHook = null;\n\n    children = Component(props, refOrContext);\n  }\n  resetHooksState();\n  return children;\n}\n\nexport function checkDidRenderIdHook() {\n  // This should be called immediately after every finishHooks call.\n  // Conceptually, it's part of the return value of finishHooks; it's only a\n  // separate function to avoid using an array tuple.\n  const didRenderIdHook = localIdCounter !== 0;\n  return didRenderIdHook;\n}\n\n// Reset the internal hooks state if an error occurs while rendering a component\nexport function resetHooksState(): void {\n  if (__DEV__) {\n    isInHookUserCodeInDev = false;\n  }\n\n  currentlyRenderingComponent = null;\n  currentlyRenderingTask = null;\n  didScheduleRenderPhaseUpdate = false;\n  firstWorkInProgressHook = null;\n  numberOfReRenders = 0;\n  renderPhaseUpdates = null;\n  workInProgressHook = null;\n}\n\nfunction getCacheForType<T>(resourceType: () => T): T {\n  // TODO: This should silently mark this as client rendered since it's not necessarily\n  // considered an error. It needs to work for things like Flight though.\n  throw new Error('Not implemented.');\n}\n\nfunction readContext<T>(context: ReactContext<T>): T {\n  if (__DEV__) {\n    if (isInHookUserCodeInDev) {\n      console.error(\n        'Context can only be read while React is rendering. ' +\n          'In classes, you can read it in the render method or getDerivedStateFromProps. ' +\n          'In function components, you can read it directly in the function body, but not ' +\n          'inside Hooks like useReducer() or useMemo().',\n      );\n    }\n  }\n  return readContextImpl(context);\n}\n\nfunction useContext<T>(context: ReactContext<T>): T {\n  if (__DEV__) {\n    currentHookNameInDev = 'useContext';\n  }\n  resolveCurrentlyRenderingComponent();\n  return readContextImpl(context);\n}\n\nfunction basicStateReducer<S>(state: S, action: BasicStateAction<S>): S {\n  // $FlowFixMe: Flow doesn't like mixed types\n  return typeof action === 'function' ? action(state) : action;\n}\n\nexport function useState<S>(\n  initialState: (() => S) | S,\n): [S, Dispatch<BasicStateAction<S>>] {\n  if (__DEV__) {\n    currentHookNameInDev = 'useState';\n  }\n  return useReducer(\n    basicStateReducer,\n    // useReducer has a special case to support lazy useState initializers\n    (initialState: any),\n  );\n}\n\nexport function useReducer<S, I, A>(\n  reducer: (S, A) => S,\n  initialArg: I,\n  init?: I => S,\n): [S, Dispatch<A>] {\n  if (__DEV__) {\n    if (reducer !== basicStateReducer) {\n      currentHookNameInDev = 'useReducer';\n    }\n  }\n  currentlyRenderingComponent = resolveCurrentlyRenderingComponent();\n  workInProgressHook = createWorkInProgressHook();\n  if (isReRender) {\n    // This is a re-render. Apply the new render phase updates to the previous\n    // current hook.\n    const queue: UpdateQueue<A> = (workInProgressHook.queue: any);\n    const dispatch: Dispatch<A> = (queue.dispatch: any);\n    if (renderPhaseUpdates !== null) {\n      // Render phase updates are stored in a map of queue -> linked list\n      const firstRenderPhaseUpdate = renderPhaseUpdates.get(queue);\n      if (firstRenderPhaseUpdate !== undefined) {\n        renderPhaseUpdates.delete(queue);\n        let newState = workInProgressHook.memoizedState;\n        let update = firstRenderPhaseUpdate;\n        do {\n          // Process this render phase update. We don't have to check the\n          // priority because it will always be the same as the current\n          // render's.\n          const action = update.action;\n          if (__DEV__) {\n            isInHookUserCodeInDev = true;\n          }\n          newState = reducer(newState, action);\n          if (__DEV__) {\n            isInHookUserCodeInDev = false;\n          }\n          update = update.next;\n        } while (update !== null);\n\n        workInProgressHook.memoizedState = newState;\n\n        return [newState, dispatch];\n      }\n    }\n    return [workInProgressHook.memoizedState, dispatch];\n  } else {\n    if (__DEV__) {\n      isInHookUserCodeInDev = true;\n    }\n    let initialState;\n    if (reducer === basicStateReducer) {\n      // Special case for `useState`.\n      initialState =\n        typeof initialArg === 'function'\n          ? ((initialArg: any): () => S)()\n          : ((initialArg: any): S);\n    } else {\n      initialState =\n        init !== undefined ? init(initialArg) : ((initialArg: any): S);\n    }\n    if (__DEV__) {\n      isInHookUserCodeInDev = false;\n    }\n    workInProgressHook.memoizedState = initialState;\n    const queue: UpdateQueue<A> = (workInProgressHook.queue = {\n      last: null,\n      dispatch: null,\n    });\n    const dispatch: Dispatch<A> = (queue.dispatch = (dispatchAction.bind(\n      null,\n      currentlyRenderingComponent,\n      queue,\n    ): any));\n    return [workInProgressHook.memoizedState, dispatch];\n  }\n}\n\nfunction useMemo<T>(nextCreate: () => T, deps: Array<mixed> | void | null): T {\n  currentlyRenderingComponent = resolveCurrentlyRenderingComponent();\n  workInProgressHook = createWorkInProgressHook();\n\n  const nextDeps = deps === undefined ? null : deps;\n\n  if (workInProgressHook !== null) {\n    const prevState = workInProgressHook.memoizedState;\n    if (prevState !== null) {\n      if (nextDeps !== null) {\n        const prevDeps = prevState[1];\n        if (areHookInputsEqual(nextDeps, prevDeps)) {\n          return prevState[0];\n        }\n      }\n    }\n  }\n\n  if (__DEV__) {\n    isInHookUserCodeInDev = true;\n  }\n  const nextValue = nextCreate();\n  if (__DEV__) {\n    isInHookUserCodeInDev = false;\n  }\n  workInProgressHook.memoizedState = [nextValue, nextDeps];\n  return nextValue;\n}\n\nfunction useRef<T>(initialValue: T): {|current: T|} {\n  currentlyRenderingComponent = resolveCurrentlyRenderingComponent();\n  workInProgressHook = createWorkInProgressHook();\n  const previousRef = workInProgressHook.memoizedState;\n  if (previousRef === null) {\n    const ref = {current: initialValue};\n    if (__DEV__) {\n      Object.seal(ref);\n    }\n    workInProgressHook.memoizedState = ref;\n    return ref;\n  } else {\n    return previousRef;\n  }\n}\n\nexport function useLayoutEffect(\n  create: () => (() => void) | void,\n  inputs: Array<mixed> | void | null,\n) {\n  if (__DEV__) {\n    currentHookNameInDev = 'useLayoutEffect';\n    console.error(\n      'useLayoutEffect does nothing on the server, because its effect cannot ' +\n        \"be encoded into the server renderer's output format. This will lead \" +\n        'to a mismatch between the initial, non-hydrated UI and the intended ' +\n        'UI. To avoid this, useLayoutEffect should only be used in ' +\n        'components that render exclusively on the client. ' +\n        'See https://reactjs.org/link/uselayouteffect-ssr for common fixes.',\n    );\n  }\n}\n\nfunction dispatchAction<A>(\n  componentIdentity: Object,\n  queue: UpdateQueue<A>,\n  action: A,\n) {\n  if (numberOfReRenders >= RE_RENDER_LIMIT) {\n    throw new Error(\n      'Too many re-renders. React limits the number of renders to prevent ' +\n        'an infinite loop.',\n    );\n  }\n\n  if (componentIdentity === currentlyRenderingComponent) {\n    // This is a render phase update. Stash it in a lazily-created map of\n    // queue -> linked list of updates. After this render pass, we'll restart\n    // and apply the stashed updates on top of the work-in-progress hook.\n    didScheduleRenderPhaseUpdate = true;\n    const update: Update<A> = {\n      action,\n      next: null,\n    };\n    if (renderPhaseUpdates === null) {\n      renderPhaseUpdates = new Map();\n    }\n    const firstRenderPhaseUpdate = renderPhaseUpdates.get(queue);\n    if (firstRenderPhaseUpdate === undefined) {\n      renderPhaseUpdates.set(queue, update);\n    } else {\n      // Append the update to the end of the list.\n      let lastRenderPhaseUpdate = firstRenderPhaseUpdate;\n      while (lastRenderPhaseUpdate.next !== null) {\n        lastRenderPhaseUpdate = lastRenderPhaseUpdate.next;\n      }\n      lastRenderPhaseUpdate.next = update;\n    }\n  } else {\n    // This means an update has happened after the function component has\n    // returned. On the server this is a no-op. In React Fiber, the update\n    // would be scheduled for a future render.\n  }\n}\n\nexport function useCallback<T>(\n  callback: T,\n  deps: Array<mixed> | void | null,\n): T {\n  return useMemo(() => callback, deps);\n}\n\n// TODO Decide on how to implement this hook for server rendering.\n// If a mutation occurs during render, consider triggering a Suspense boundary\n// and falling back to client rendering.\nfunction useMutableSource<Source, Snapshot>(\n  source: MutableSource<Source>,\n  getSnapshot: MutableSourceGetSnapshotFn<Source, Snapshot>,\n  subscribe: MutableSourceSubscribeFn<Source, Snapshot>,\n): Snapshot {\n  resolveCurrentlyRenderingComponent();\n  return getSnapshot(source._source);\n}\n\nfunction useSyncExternalStore<T>(\n  subscribe: (() => void) => () => void,\n  getSnapshot: () => T,\n  getServerSnapshot?: () => T,\n): T {\n  if (getServerSnapshot === undefined) {\n    throw new Error(\n      'Missing getServerSnapshot, which is required for ' +\n        'server-rendered content. Will revert to client rendering.',\n    );\n  }\n  return getServerSnapshot();\n}\n\nfunction useDeferredValue<T>(value: T): T {\n  resolveCurrentlyRenderingComponent();\n  return value;\n}\n\nfunction unsupportedStartTransition() {\n  throw new Error('startTransition cannot be called during server rendering.');\n}\n\nfunction useTransition(): [\n  boolean,\n  (callback: () => void, options?: StartTransitionOptions) => void,\n] {\n  resolveCurrentlyRenderingComponent();\n  return [false, unsupportedStartTransition];\n}\n\nfunction useId(): string {\n  const task: Task = (currentlyRenderingTask: any);\n  const treeId = getTreeId(task.treeContext);\n\n  const responseState = currentResponseState;\n  if (responseState === null) {\n    throw new Error(\n      'Invalid hook call. Hooks can only be called inside of the body of a function component.',\n    );\n  }\n\n  const localId = localIdCounter++;\n  return makeId(responseState, treeId, localId);\n}\n\nfunction unsupportedRefresh() {\n  throw new Error('Cache cannot be refreshed during server rendering.');\n}\n\nfunction useCacheRefresh(): <T>(?() => T, ?T) => void {\n  return unsupportedRefresh;\n}\n\nfunction noop(): void {}\n\nexport const Dispatcher: DispatcherType = {\n  readContext,\n  useContext,\n  useMemo,\n  useReducer,\n  useRef,\n  useState,\n  useInsertionEffect: noop,\n  useLayoutEffect,\n  useCallback,\n  // useImperativeHandle is not run in the server environment\n  useImperativeHandle: noop,\n  // Effects are not run in the server environment.\n  useEffect: noop,\n  // Debugging effect\n  useDebugValue: noop,\n  useDeferredValue,\n  useTransition,\n  useId,\n  // Subscriptions are not setup in a server environment.\n  useMutableSource,\n  useSyncExternalStore,\n};\n\nif (enableCache) {\n  Dispatcher.getCacheForType = getCacheForType;\n  Dispatcher.useCacheRefresh = useCacheRefresh;\n}\n\nexport let currentResponseState: null | ResponseState = (null: any);\nexport function setCurrentResponseState(\n  responseState: null | ResponseState,\n): void {\n  currentResponseState = responseState;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {\n  Destination,\n  Chunk,\n  PrecomputedChunk,\n} from './ReactServerStreamConfig';\nimport type {\n  ReactNodeList,\n  ReactContext,\n  ReactProviderType,\n} from 'shared/ReactTypes';\nimport type {LazyComponent as LazyComponentType} from 'react/src/ReactLazy';\nimport type {\n  SuspenseBoundaryID,\n  ResponseState,\n  FormatContext,\n} from './ReactServerFormatConfig';\nimport type {ContextSnapshot} from './ReactFizzNewContext';\nimport type {ComponentStackNode} from './ReactFizzComponentStack';\nimport type {TreeContext} from './ReactFizzTreeContext';\n\nimport {\n  scheduleWork,\n  beginWriting,\n  writeChunk,\n  writeChunkAndReturn,\n  completeWriting,\n  flushBuffered,\n  close,\n  closeWithError,\n} from './ReactServerStreamConfig';\nimport {\n  writeCompletedRoot,\n  writePlaceholder,\n  writeStartCompletedSuspenseBoundary,\n  writeStartPendingSuspenseBoundary,\n  writeStartClientRenderedSuspenseBoundary,\n  writeEndCompletedSuspenseBoundary,\n  writeEndPendingSuspenseBoundary,\n  writeEndClientRenderedSuspenseBoundary,\n  writeStartSegment,\n  writeEndSegment,\n  writeClientRenderBoundaryInstruction,\n  writeCompletedBoundaryInstruction,\n  writeCompletedSegmentInstruction,\n  pushTextInstance,\n  pushStartInstance,\n  pushEndInstance,\n  pushStartCompletedSuspenseBoundary,\n  pushEndCompletedSuspenseBoundary,\n  pushSegmentFinale,\n  UNINITIALIZED_SUSPENSE_BOUNDARY_ID,\n  assignSuspenseBoundaryID,\n  getChildFormatContext,\n} from './ReactServerFormatConfig';\nimport {\n  constructClassInstance,\n  mountClassInstance,\n} from './ReactFizzClassComponent';\nimport {\n  getMaskedContext,\n  processChildContext,\n  emptyContextObject,\n} from './ReactFizzContext';\nimport {\n  readContext,\n  rootContextSnapshot,\n  switchContext,\n  getActiveContext,\n  pushProvider,\n  popProvider,\n} from './ReactFizzNewContext';\nimport {\n  prepareToUseHooks,\n  finishHooks,\n  checkDidRenderIdHook,\n  resetHooksState,\n  Dispatcher,\n  currentResponseState,\n  setCurrentResponseState,\n} from './ReactFizzHooks';\nimport {getStackByComponentStackNode} from './ReactFizzComponentStack';\nimport {emptyTreeContext, pushTreeContext} from './ReactFizzTreeContext';\n\nimport {\n  getIteratorFn,\n  REACT_ELEMENT_TYPE,\n  REACT_PORTAL_TYPE,\n  REACT_LAZY_TYPE,\n  REACT_SUSPENSE_TYPE,\n  REACT_LEGACY_HIDDEN_TYPE,\n  REACT_DEBUG_TRACING_MODE_TYPE,\n  REACT_STRICT_MODE_TYPE,\n  REACT_PROFILER_TYPE,\n  REACT_SUSPENSE_LIST_TYPE,\n  REACT_FRAGMENT_TYPE,\n  REACT_FORWARD_REF_TYPE,\n  REACT_MEMO_TYPE,\n  REACT_PROVIDER_TYPE,\n  REACT_CONTEXT_TYPE,\n  REACT_SCOPE_TYPE,\n} from 'shared/ReactSymbols';\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\nimport {\n  disableLegacyContext,\n  disableModulePatternComponents,\n  warnAboutDefaultPropsOnFunctionComponents,\n  enableScopeAPI,\n  enableSuspenseAvoidThisFallbackFizz,\n} from 'shared/ReactFeatureFlags';\n\nimport assign from 'shared/assign';\nimport getComponentNameFromType from 'shared/getComponentNameFromType';\nimport isArray from 'shared/isArray';\n\nconst ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;\nconst ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n\ntype LegacyContext = {\n  [key: string]: any,\n};\n\ntype SuspenseBoundary = {\n  id: SuspenseBoundaryID,\n  rootSegmentID: number,\n  errorDigest: ?string, // the error hash if it errors\n  errorMessage?: string, // the error string if it errors\n  errorComponentStack?: string, // the error component stack if it errors\n  forceClientRender: boolean, // if it errors or infinitely suspends\n  parentFlushed: boolean,\n  pendingTasks: number, // when it reaches zero we can show this boundary's content\n  completedSegments: Array<Segment>, // completed but not yet flushed segments.\n  byteSize: number, // used to determine whether to inline children boundaries.\n  fallbackAbortableTasks: Set<Task>, // used to cancel task on the fallback if the boundary completes or gets canceled.\n};\n\nexport type Task = {\n  node: ReactNodeList,\n  ping: () => void,\n  blockedBoundary: Root | SuspenseBoundary,\n  blockedSegment: Segment, // the segment we'll write to\n  abortSet: Set<Task>, // the abortable set that this task belongs to\n  legacyContext: LegacyContext, // the current legacy context that this task is executing in\n  context: ContextSnapshot, // the current new context that this task is executing in\n  treeContext: TreeContext, // the current tree context that this task is executing in\n  componentStack: null | ComponentStackNode, // DEV-only component stack\n};\n\nconst PENDING = 0;\nconst COMPLETED = 1;\nconst FLUSHED = 2;\nconst ABORTED = 3;\nconst ERRORED = 4;\n\ntype Root = null;\n\ntype Segment = {\n  status: 0 | 1 | 2 | 3 | 4,\n  parentFlushed: boolean, // typically a segment will be flushed by its parent, except if its parent was already flushed\n  id: number, // starts as 0 and is lazily assigned if the parent flushes early\n  +index: number, // the index within the parent's chunks or 0 at the root\n  +chunks: Array<Chunk | PrecomputedChunk>,\n  +children: Array<Segment>,\n  // The context that this segment was created in.\n  formatContext: FormatContext,\n  // If this segment represents a fallback, this is the content that will replace that fallback.\n  +boundary: null | SuspenseBoundary,\n  // used to discern when text separator boundaries are needed\n  lastPushedText: boolean,\n  textEmbedded: boolean,\n};\n\nconst OPEN = 0;\nconst CLOSING = 1;\nconst CLOSED = 2;\n\nexport opaque type Request = {\n  destination: null | Destination,\n  +responseState: ResponseState,\n  +progressiveChunkSize: number,\n  status: 0 | 1 | 2,\n  fatalError: mixed,\n  nextSegmentId: number,\n  allPendingTasks: number, // when it reaches zero, we can close the connection.\n  pendingRootTasks: number, // when this reaches zero, we've finished at least the root boundary.\n  completedRootSegment: null | Segment, // Completed but not yet flushed root segments.\n  abortableTasks: Set<Task>,\n  pingedTasks: Array<Task>,\n  // Queues to flush in order of priority\n  clientRenderedBoundaries: Array<SuspenseBoundary>, // Errored or client rendered but not yet flushed.\n  completedBoundaries: Array<SuspenseBoundary>, // Completed but not yet fully flushed boundaries to show.\n  partialBoundaries: Array<SuspenseBoundary>, // Partially completed boundaries that can flush its segments early.\n  // onError is called when an error happens anywhere in the tree. It might recover.\n  // The return string is used in production  primarily to avoid leaking internals, secondarily to save bytes.\n  // Returning null/undefined will cause a defualt error message in production\n  onError: (error: mixed) => ?string,\n  // onAllReady is called when all pending task is done but it may not have flushed yet.\n  // This is a good time to start writing if you want only HTML and no intermediate steps.\n  onAllReady: () => void,\n  // onShellReady is called when there is at least a root fallback ready to show.\n  // Typically you don't need this callback because it's best practice to always have a\n  // root fallback ready so there's no need to wait.\n  onShellReady: () => void,\n  // onShellError is called when the shell didn't complete. That means you probably want to\n  // emit a different response to the stream instead.\n  onShellError: (error: mixed) => void,\n  onFatalError: (error: mixed) => void,\n};\n\n// This is a default heuristic for how to split up the HTML content into progressive\n// loading. Our goal is to be able to display additional new content about every 500ms.\n// Faster than that is unnecessary and should be throttled on the client. It also\n// adds unnecessary overhead to do more splits. We don't know if it's a higher or lower\n// end device but higher end suffer less from the overhead than lower end does from\n// not getting small enough pieces. We error on the side of low end.\n// We base this on low end 3G speeds which is about 500kbits per second. We assume\n// that there can be a reasonable drop off from max bandwidth which leaves you with\n// as little as 80%. We can receive half of that each 500ms - at best. In practice,\n// a little bandwidth is lost to processing and contention - e.g. CSS and images that\n// are downloaded along with the main content. So we estimate about half of that to be\n// the lower end throughput. In other words, we expect that you can at least show\n// about 12.5kb of content per 500ms. Not counting starting latency for the first\n// paint.\n// 500 * 1024 / 8 * .8 * 0.5 / 2\nconst DEFAULT_PROGRESSIVE_CHUNK_SIZE = 12800;\n\nfunction defaultErrorHandler(error: mixed) {\n  console['error'](error); // Don't transform to our wrapper\n  return null;\n}\n\nfunction noop(): void {}\n\nexport function createRequest(\n  children: ReactNodeList,\n  responseState: ResponseState,\n  rootFormatContext: FormatContext,\n  progressiveChunkSize: void | number,\n  onError: void | ((error: mixed) => ?string),\n  onAllReady: void | (() => void),\n  onShellReady: void | (() => void),\n  onShellError: void | ((error: mixed) => void),\n  onFatalError: void | ((error: mixed) => void),\n): Request {\n  const pingedTasks = [];\n  const abortSet: Set<Task> = new Set();\n  const request = {\n    destination: null,\n    responseState,\n    progressiveChunkSize:\n      progressiveChunkSize === undefined\n        ? DEFAULT_PROGRESSIVE_CHUNK_SIZE\n        : progressiveChunkSize,\n    status: OPEN,\n    fatalError: null,\n    nextSegmentId: 0,\n    allPendingTasks: 0,\n    pendingRootTasks: 0,\n    completedRootSegment: null,\n    abortableTasks: abortSet,\n    pingedTasks: pingedTasks,\n    clientRenderedBoundaries: [],\n    completedBoundaries: [],\n    partialBoundaries: [],\n    onError: onError === undefined ? defaultErrorHandler : onError,\n    onAllReady: onAllReady === undefined ? noop : onAllReady,\n    onShellReady: onShellReady === undefined ? noop : onShellReady,\n    onShellError: onShellError === undefined ? noop : onShellError,\n    onFatalError: onFatalError === undefined ? noop : onFatalError,\n  };\n  // This segment represents the root fallback.\n  const rootSegment = createPendingSegment(\n    request,\n    0,\n    null,\n    rootFormatContext,\n    // Root segments are never embedded in Text on either edge\n    false,\n    false,\n  );\n  // There is no parent so conceptually, we're unblocked to flush this segment.\n  rootSegment.parentFlushed = true;\n  const rootTask = createTask(\n    request,\n    children,\n    null,\n    rootSegment,\n    abortSet,\n    emptyContextObject,\n    rootContextSnapshot,\n    emptyTreeContext,\n  );\n  pingedTasks.push(rootTask);\n  return request;\n}\n\nfunction pingTask(request: Request, task: Task): void {\n  const pingedTasks = request.pingedTasks;\n  pingedTasks.push(task);\n  if (pingedTasks.length === 1) {\n    scheduleWork(() => performWork(request));\n  }\n}\n\nfunction createSuspenseBoundary(\n  request: Request,\n  fallbackAbortableTasks: Set<Task>,\n): SuspenseBoundary {\n  return {\n    id: UNINITIALIZED_SUSPENSE_BOUNDARY_ID,\n    rootSegmentID: -1,\n    parentFlushed: false,\n    pendingTasks: 0,\n    forceClientRender: false,\n    completedSegments: [],\n    byteSize: 0,\n    fallbackAbortableTasks,\n    errorDigest: null,\n  };\n}\n\nfunction createTask(\n  request: Request,\n  node: ReactNodeList,\n  blockedBoundary: Root | SuspenseBoundary,\n  blockedSegment: Segment,\n  abortSet: Set<Task>,\n  legacyContext: LegacyContext,\n  context: ContextSnapshot,\n  treeContext: TreeContext,\n): Task {\n  request.allPendingTasks++;\n  if (blockedBoundary === null) {\n    request.pendingRootTasks++;\n  } else {\n    blockedBoundary.pendingTasks++;\n  }\n  const task: Task = ({\n    node,\n    ping: () => pingTask(request, task),\n    blockedBoundary,\n    blockedSegment,\n    abortSet,\n    legacyContext,\n    context,\n    treeContext,\n  }: any);\n  if (__DEV__) {\n    task.componentStack = null;\n  }\n  abortSet.add(task);\n  return task;\n}\n\nfunction createPendingSegment(\n  request: Request,\n  index: number,\n  boundary: null | SuspenseBoundary,\n  formatContext: FormatContext,\n  lastPushedText: boolean,\n  textEmbedded: boolean,\n): Segment {\n  return {\n    status: PENDING,\n    id: -1, // lazily assigned later\n    index,\n    parentFlushed: false,\n    chunks: [],\n    children: [],\n    formatContext,\n    boundary,\n    lastPushedText,\n    textEmbedded,\n  };\n}\n\n// DEV-only global reference to the currently executing task\nlet currentTaskInDEV: null | Task = null;\nfunction getCurrentStackInDEV(): string {\n  if (__DEV__) {\n    if (currentTaskInDEV === null || currentTaskInDEV.componentStack === null) {\n      return '';\n    }\n    return getStackByComponentStackNode(currentTaskInDEV.componentStack);\n  }\n  return '';\n}\n\nfunction pushBuiltInComponentStackInDEV(task: Task, type: string): void {\n  if (__DEV__) {\n    task.componentStack = {\n      tag: 0,\n      parent: task.componentStack,\n      type,\n    };\n  }\n}\nfunction pushFunctionComponentStackInDEV(task: Task, type: Function): void {\n  if (__DEV__) {\n    task.componentStack = {\n      tag: 1,\n      parent: task.componentStack,\n      type,\n    };\n  }\n}\nfunction pushClassComponentStackInDEV(task: Task, type: Function): void {\n  if (__DEV__) {\n    task.componentStack = {\n      tag: 2,\n      parent: task.componentStack,\n      type,\n    };\n  }\n}\nfunction popComponentStackInDEV(task: Task): void {\n  if (__DEV__) {\n    if (task.componentStack === null) {\n      console.error(\n        'Unexpectedly popped too many stack frames. This is a bug in React.',\n      );\n    } else {\n      task.componentStack = task.componentStack.parent;\n    }\n  }\n}\n\n// stash the component stack of an unwinding error until it is processed\nlet lastBoundaryErrorComponentStackDev: ?string = null;\n\nfunction captureBoundaryErrorDetailsDev(\n  boundary: SuspenseBoundary,\n  error: mixed,\n) {\n  if (__DEV__) {\n    let errorMessage;\n    if (typeof error === 'string') {\n      errorMessage = error;\n    } else if (error && typeof error.message === 'string') {\n      errorMessage = error.message;\n    } else {\n      // eslint-disable-next-line react-internal/safe-string-coercion\n      errorMessage = String(error);\n    }\n\n    const errorComponentStack =\n      lastBoundaryErrorComponentStackDev || getCurrentStackInDEV();\n    lastBoundaryErrorComponentStackDev = null;\n\n    boundary.errorMessage = errorMessage;\n    boundary.errorComponentStack = errorComponentStack;\n  }\n}\n\nfunction logRecoverableError(request: Request, error: any): ?string {\n  // If this callback errors, we intentionally let that error bubble up to become a fatal error\n  // so that someone fixes the error reporting instead of hiding it.\n  const errorDigest = request.onError(error);\n  if (errorDigest != null && typeof errorDigest !== 'string') {\n    // eslint-disable-next-line react-internal/prod-error-codes\n    throw new Error(\n      `onError returned something with a type other than \"string\". onError should return a string and may return null or undefined but must not return anything else. It received something of type \"${typeof errorDigest}\" instead`,\n    );\n  }\n  return errorDigest;\n}\n\nfunction fatalError(request: Request, error: mixed): void {\n  // This is called outside error handling code such as if the root errors outside\n  // a suspense boundary or if the root suspense boundary's fallback errors.\n  // It's also called if React itself or its host configs errors.\n  const onShellError = request.onShellError;\n  onShellError(error);\n  const onFatalError = request.onFatalError;\n  onFatalError(error);\n  if (request.destination !== null) {\n    request.status = CLOSED;\n    closeWithError(request.destination, error);\n  } else {\n    request.status = CLOSING;\n    request.fatalError = error;\n  }\n}\n\nfunction renderSuspenseBoundary(\n  request: Request,\n  task: Task,\n  props: Object,\n): void {\n  pushBuiltInComponentStackInDEV(task, 'Suspense');\n  const parentBoundary = task.blockedBoundary;\n  const parentSegment = task.blockedSegment;\n\n  // Each time we enter a suspense boundary, we split out into a new segment for\n  // the fallback so that we can later replace that segment with the content.\n  // This also lets us split out the main content even if it doesn't suspend,\n  // in case it ends up generating a large subtree of content.\n  const fallback: ReactNodeList = props.fallback;\n  const content: ReactNodeList = props.children;\n\n  const fallbackAbortSet: Set<Task> = new Set();\n  const newBoundary = createSuspenseBoundary(request, fallbackAbortSet);\n  const insertionIndex = parentSegment.chunks.length;\n  // The children of the boundary segment is actually the fallback.\n  const boundarySegment = createPendingSegment(\n    request,\n    insertionIndex,\n    newBoundary,\n    parentSegment.formatContext,\n    // boundaries never require text embedding at their edges because comment nodes bound them\n    false,\n    false,\n  );\n  parentSegment.children.push(boundarySegment);\n  // The parentSegment has a child Segment at this index so we reset the lastPushedText marker on the parent\n  parentSegment.lastPushedText = false;\n\n  // This segment is the actual child content. We can start rendering that immediately.\n  const contentRootSegment = createPendingSegment(\n    request,\n    0,\n    null,\n    parentSegment.formatContext,\n    // boundaries never require text embedding at their edges because comment nodes bound them\n    false,\n    false,\n  );\n  // We mark the root segment as having its parent flushed. It's not really flushed but there is\n  // no parent segment so there's nothing to wait on.\n  contentRootSegment.parentFlushed = true;\n\n  // Currently this is running synchronously. We could instead schedule this to pingedTasks.\n  // I suspect that there might be some efficiency benefits from not creating the suspended task\n  // and instead just using the stack if possible.\n  // TODO: Call this directly instead of messing with saving and restoring contexts.\n\n  // We can reuse the current context and task to render the content immediately without\n  // context switching. We just need to temporarily switch which boundary and which segment\n  // we're writing to. If something suspends, it'll spawn new suspended task with that context.\n  task.blockedBoundary = newBoundary;\n  task.blockedSegment = contentRootSegment;\n  try {\n    // We use the safe form because we don't handle suspending here. Only error handling.\n    renderNode(request, task, content);\n    pushSegmentFinale(\n      contentRootSegment.chunks,\n      request.responseState,\n      contentRootSegment.lastPushedText,\n      contentRootSegment.textEmbedded,\n    );\n    contentRootSegment.status = COMPLETED;\n    queueCompletedSegment(newBoundary, contentRootSegment);\n    if (newBoundary.pendingTasks === 0) {\n      // This must have been the last segment we were waiting on. This boundary is now complete.\n      // Therefore we won't need the fallback. We early return so that we don't have to create\n      // the fallback.\n      popComponentStackInDEV(task);\n      return;\n    }\n  } catch (error) {\n    contentRootSegment.status = ERRORED;\n    newBoundary.forceClientRender = true;\n    newBoundary.errorDigest = logRecoverableError(request, error);\n    if (__DEV__) {\n      captureBoundaryErrorDetailsDev(newBoundary, error);\n    }\n\n    // We don't need to decrement any task numbers because we didn't spawn any new task.\n    // We don't need to schedule any task because we know the parent has written yet.\n    // We do need to fallthrough to create the fallback though.\n  } finally {\n    task.blockedBoundary = parentBoundary;\n    task.blockedSegment = parentSegment;\n  }\n\n  // We create suspended task for the fallback because we don't want to actually work\n  // on it yet in case we finish the main content, so we queue for later.\n  const suspendedFallbackTask = createTask(\n    request,\n    fallback,\n    parentBoundary,\n    boundarySegment,\n    fallbackAbortSet,\n    task.legacyContext,\n    task.context,\n    task.treeContext,\n  );\n  if (__DEV__) {\n    suspendedFallbackTask.componentStack = task.componentStack;\n  }\n  // TODO: This should be queued at a separate lower priority queue so that we only work\n  // on preparing fallbacks if we don't have any more main content to task on.\n  request.pingedTasks.push(suspendedFallbackTask);\n\n  popComponentStackInDEV(task);\n}\n\nfunction renderBackupSuspenseBoundary(\n  request: Request,\n  task: Task,\n  props: Object,\n) {\n  pushBuiltInComponentStackInDEV(task, 'Suspense');\n\n  const content = props.children;\n  const segment = task.blockedSegment;\n\n  pushStartCompletedSuspenseBoundary(segment.chunks);\n  renderNode(request, task, content);\n  pushEndCompletedSuspenseBoundary(segment.chunks);\n\n  popComponentStackInDEV(task);\n}\n\nfunction renderHostElement(\n  request: Request,\n  task: Task,\n  type: string,\n  props: Object,\n): void {\n  pushBuiltInComponentStackInDEV(task, type);\n  const segment = task.blockedSegment;\n  const children = pushStartInstance(\n    segment.chunks,\n    type,\n    props,\n    request.responseState,\n    segment.formatContext,\n  );\n  segment.lastPushedText = false;\n  const prevContext = segment.formatContext;\n  segment.formatContext = getChildFormatContext(prevContext, type, props);\n  // We use the non-destructive form because if something suspends, we still\n  // need to pop back up and finish this subtree of HTML.\n  renderNode(request, task, children);\n\n  // We expect that errors will fatal the whole task and that we don't need\n  // the correct context. Therefore this is not in a finally.\n  segment.formatContext = prevContext;\n  pushEndInstance(segment.chunks, type, props);\n  segment.lastPushedText = false;\n  popComponentStackInDEV(task);\n}\n\nfunction shouldConstruct(Component) {\n  return Component.prototype && Component.prototype.isReactComponent;\n}\n\nfunction renderWithHooks<Props, SecondArg>(\n  request: Request,\n  task: Task,\n  Component: (p: Props, arg: SecondArg) => any,\n  props: Props,\n  secondArg: SecondArg,\n): any {\n  const componentIdentity = {};\n  prepareToUseHooks(task, componentIdentity);\n  const result = Component(props, secondArg);\n  return finishHooks(Component, props, result, secondArg);\n}\n\nfunction finishClassComponent(\n  request: Request,\n  task: Task,\n  instance: any,\n  Component: any,\n  props: any,\n): ReactNodeList {\n  const nextChildren = instance.render();\n\n  if (__DEV__) {\n    if (instance.props !== props) {\n      if (!didWarnAboutReassigningProps) {\n        console.error(\n          'It looks like %s is reassigning its own `this.props` while rendering. ' +\n            'This is not supported and can lead to confusing bugs.',\n          getComponentNameFromType(Component) || 'a component',\n        );\n      }\n      didWarnAboutReassigningProps = true;\n    }\n  }\n\n  if (!disableLegacyContext) {\n    const childContextTypes = Component.childContextTypes;\n    if (childContextTypes !== null && childContextTypes !== undefined) {\n      const previousContext = task.legacyContext;\n      const mergedContext = processChildContext(\n        instance,\n        Component,\n        previousContext,\n        childContextTypes,\n      );\n      task.legacyContext = mergedContext;\n      renderNodeDestructive(request, task, nextChildren);\n      task.legacyContext = previousContext;\n      return;\n    }\n  }\n\n  renderNodeDestructive(request, task, nextChildren);\n}\n\nfunction renderClassComponent(\n  request: Request,\n  task: Task,\n  Component: any,\n  props: any,\n): void {\n  pushClassComponentStackInDEV(task, Component);\n  const maskedContext = !disableLegacyContext\n    ? getMaskedContext(Component, task.legacyContext)\n    : undefined;\n  const instance = constructClassInstance(Component, props, maskedContext);\n  mountClassInstance(instance, Component, props, maskedContext);\n  finishClassComponent(request, task, instance, Component, props);\n  popComponentStackInDEV(task);\n}\n\nconst didWarnAboutBadClass = {};\nconst didWarnAboutModulePatternComponent = {};\nconst didWarnAboutContextTypeOnFunctionComponent = {};\nconst didWarnAboutGetDerivedStateOnFunctionComponent = {};\nlet didWarnAboutReassigningProps = false;\nconst didWarnAboutDefaultPropsOnFunctionComponent = {};\nlet didWarnAboutGenerators = false;\nlet didWarnAboutMaps = false;\nlet hasWarnedAboutUsingContextAsConsumer = false;\n\n// This would typically be a function component but we still support module pattern\n// components for some reason.\nfunction renderIndeterminateComponent(\n  request: Request,\n  task: Task,\n  Component: any,\n  props: any,\n): void {\n  let legacyContext;\n  if (!disableLegacyContext) {\n    legacyContext = getMaskedContext(Component, task.legacyContext);\n  }\n  pushFunctionComponentStackInDEV(task, Component);\n\n  if (__DEV__) {\n    if (\n      Component.prototype &&\n      typeof Component.prototype.render === 'function'\n    ) {\n      const componentName = getComponentNameFromType(Component) || 'Unknown';\n\n      if (!didWarnAboutBadClass[componentName]) {\n        console.error(\n          \"The <%s /> component appears to have a render method, but doesn't extend React.Component. \" +\n            'This is likely to cause errors. Change %s to extend React.Component instead.',\n          componentName,\n          componentName,\n        );\n        didWarnAboutBadClass[componentName] = true;\n      }\n    }\n  }\n\n  const value = renderWithHooks(request, task, Component, props, legacyContext);\n  const hasId = checkDidRenderIdHook();\n\n  if (__DEV__) {\n    // Support for module components is deprecated and is removed behind a flag.\n    // Whether or not it would crash later, we want to show a good message in DEV first.\n    if (\n      typeof value === 'object' &&\n      value !== null &&\n      typeof value.render === 'function' &&\n      value.$$typeof === undefined\n    ) {\n      const componentName = getComponentNameFromType(Component) || 'Unknown';\n      if (!didWarnAboutModulePatternComponent[componentName]) {\n        console.error(\n          'The <%s /> component appears to be a function component that returns a class instance. ' +\n            'Change %s to a class that extends React.Component instead. ' +\n            \"If you can't use a class try assigning the prototype on the function as a workaround. \" +\n            \"`%s.prototype = React.Component.prototype`. Don't use an arrow function since it \" +\n            'cannot be called with `new` by React.',\n          componentName,\n          componentName,\n          componentName,\n        );\n        didWarnAboutModulePatternComponent[componentName] = true;\n      }\n    }\n  }\n\n  if (\n    // Run these checks in production only if the flag is off.\n    // Eventually we'll delete this branch altogether.\n    !disableModulePatternComponents &&\n    typeof value === 'object' &&\n    value !== null &&\n    typeof value.render === 'function' &&\n    value.$$typeof === undefined\n  ) {\n    if (__DEV__) {\n      const componentName = getComponentNameFromType(Component) || 'Unknown';\n      if (!didWarnAboutModulePatternComponent[componentName]) {\n        console.error(\n          'The <%s /> component appears to be a function component that returns a class instance. ' +\n            'Change %s to a class that extends React.Component instead. ' +\n            \"If you can't use a class try assigning the prototype on the function as a workaround. \" +\n            \"`%s.prototype = React.Component.prototype`. Don't use an arrow function since it \" +\n            'cannot be called with `new` by React.',\n          componentName,\n          componentName,\n          componentName,\n        );\n        didWarnAboutModulePatternComponent[componentName] = true;\n      }\n    }\n\n    mountClassInstance(value, Component, props, legacyContext);\n    finishClassComponent(request, task, value, Component, props);\n  } else {\n    // Proceed under the assumption that this is a function component\n    if (__DEV__) {\n      if (disableLegacyContext && Component.contextTypes) {\n        console.error(\n          '%s uses the legacy contextTypes API which is no longer supported. ' +\n            'Use React.createContext() with React.useContext() instead.',\n          getComponentNameFromType(Component) || 'Unknown',\n        );\n      }\n    }\n    if (__DEV__) {\n      validateFunctionComponentInDev(Component);\n    }\n    // We're now successfully past this task, and we don't have to pop back to\n    // the previous task every again, so we can use the destructive recursive form.\n    if (hasId) {\n      // This component materialized an id. We treat this as its own level, with\n      // a single \"child\" slot.\n      const prevTreeContext = task.treeContext;\n      const totalChildren = 1;\n      const index = 0;\n      task.treeContext = pushTreeContext(prevTreeContext, totalChildren, index);\n      try {\n        renderNodeDestructive(request, task, value);\n      } finally {\n        task.treeContext = prevTreeContext;\n      }\n    } else {\n      renderNodeDestructive(request, task, value);\n    }\n  }\n  popComponentStackInDEV(task);\n}\n\nfunction validateFunctionComponentInDev(Component: any): void {\n  if (__DEV__) {\n    if (Component) {\n      if (Component.childContextTypes) {\n        console.error(\n          '%s(...): childContextTypes cannot be defined on a function component.',\n          Component.displayName || Component.name || 'Component',\n        );\n      }\n    }\n\n    if (\n      warnAboutDefaultPropsOnFunctionComponents &&\n      Component.defaultProps !== undefined\n    ) {\n      const componentName = getComponentNameFromType(Component) || 'Unknown';\n\n      if (!didWarnAboutDefaultPropsOnFunctionComponent[componentName]) {\n        console.error(\n          '%s: Support for defaultProps will be removed from function components ' +\n            'in a future major release. Use JavaScript default parameters instead.',\n          componentName,\n        );\n        didWarnAboutDefaultPropsOnFunctionComponent[componentName] = true;\n      }\n    }\n\n    if (typeof Component.getDerivedStateFromProps === 'function') {\n      const componentName = getComponentNameFromType(Component) || 'Unknown';\n\n      if (!didWarnAboutGetDerivedStateOnFunctionComponent[componentName]) {\n        console.error(\n          '%s: Function components do not support getDerivedStateFromProps.',\n          componentName,\n        );\n        didWarnAboutGetDerivedStateOnFunctionComponent[componentName] = true;\n      }\n    }\n\n    if (\n      typeof Component.contextType === 'object' &&\n      Component.contextType !== null\n    ) {\n      const componentName = getComponentNameFromType(Component) || 'Unknown';\n\n      if (!didWarnAboutContextTypeOnFunctionComponent[componentName]) {\n        console.error(\n          '%s: Function components do not support contextType.',\n          componentName,\n        );\n        didWarnAboutContextTypeOnFunctionComponent[componentName] = true;\n      }\n    }\n  }\n}\n\nfunction resolveDefaultProps(Component: any, baseProps: Object): Object {\n  if (Component && Component.defaultProps) {\n    // Resolve default props. Taken from ReactElement\n    const props = assign({}, baseProps);\n    const defaultProps = Component.defaultProps;\n    for (const propName in defaultProps) {\n      if (props[propName] === undefined) {\n        props[propName] = defaultProps[propName];\n      }\n    }\n    return props;\n  }\n  return baseProps;\n}\n\nfunction renderForwardRef(\n  request: Request,\n  task: Task,\n  type: any,\n  props: Object,\n  ref: any,\n): void {\n  pushFunctionComponentStackInDEV(task, type.render);\n  const children = renderWithHooks(request, task, type.render, props, ref);\n  const hasId = checkDidRenderIdHook();\n  if (hasId) {\n    // This component materialized an id. We treat this as its own level, with\n    // a single \"child\" slot.\n    const prevTreeContext = task.treeContext;\n    const totalChildren = 1;\n    const index = 0;\n    task.treeContext = pushTreeContext(prevTreeContext, totalChildren, index);\n    try {\n      renderNodeDestructive(request, task, children);\n    } finally {\n      task.treeContext = prevTreeContext;\n    }\n  } else {\n    renderNodeDestructive(request, task, children);\n  }\n  popComponentStackInDEV(task);\n}\n\nfunction renderMemo(\n  request: Request,\n  task: Task,\n  type: any,\n  props: Object,\n  ref: any,\n): void {\n  const innerType = type.type;\n  const resolvedProps = resolveDefaultProps(innerType, props);\n  renderElement(request, task, innerType, resolvedProps, ref);\n}\n\nfunction renderContextConsumer(\n  request: Request,\n  task: Task,\n  context: ReactContext<any>,\n  props: Object,\n): void {\n  // The logic below for Context differs depending on PROD or DEV mode. In\n  // DEV mode, we create a separate object for Context.Consumer that acts\n  // like a proxy to Context. This proxy object adds unnecessary code in PROD\n  // so we use the old behaviour (Context.Consumer references Context) to\n  // reduce size and overhead. The separate object references context via\n  // a property called \"_context\", which also gives us the ability to check\n  // in DEV mode if this property exists or not and warn if it does not.\n  if (__DEV__) {\n    if ((context: any)._context === undefined) {\n      // This may be because it's a Context (rather than a Consumer).\n      // Or it may be because it's older React where they're the same thing.\n      // We only want to warn if we're sure it's a new React.\n      if (context !== context.Consumer) {\n        if (!hasWarnedAboutUsingContextAsConsumer) {\n          hasWarnedAboutUsingContextAsConsumer = true;\n          console.error(\n            'Rendering <Context> directly is not supported and will be removed in ' +\n              'a future major release. Did you mean to render <Context.Consumer> instead?',\n          );\n        }\n      }\n    } else {\n      context = (context: any)._context;\n    }\n  }\n  const render = props.children;\n\n  if (__DEV__) {\n    if (typeof render !== 'function') {\n      console.error(\n        'A context consumer was rendered with multiple children, or a child ' +\n          \"that isn't a function. A context consumer expects a single child \" +\n          'that is a function. If you did pass a function, make sure there ' +\n          'is no trailing or leading whitespace around it.',\n      );\n    }\n  }\n\n  const newValue = readContext(context);\n  const newChildren = render(newValue);\n\n  renderNodeDestructive(request, task, newChildren);\n}\n\nfunction renderContextProvider(\n  request: Request,\n  task: Task,\n  type: ReactProviderType<any>,\n  props: Object,\n): void {\n  const context = type._context;\n  const value = props.value;\n  const children = props.children;\n  let prevSnapshot;\n  if (__DEV__) {\n    prevSnapshot = task.context;\n  }\n  task.context = pushProvider(context, value);\n  renderNodeDestructive(request, task, children);\n  task.context = popProvider(context);\n  if (__DEV__) {\n    if (prevSnapshot !== task.context) {\n      console.error(\n        'Popping the context provider did not return back to the original snapshot. This is a bug in React.',\n      );\n    }\n  }\n}\n\nfunction renderLazyComponent(\n  request: Request,\n  task: Task,\n  lazyComponent: LazyComponentType<any, any>,\n  props: Object,\n  ref: any,\n): void {\n  pushBuiltInComponentStackInDEV(task, 'Lazy');\n  const payload = lazyComponent._payload;\n  const init = lazyComponent._init;\n  const Component = init(payload);\n  const resolvedProps = resolveDefaultProps(Component, props);\n  renderElement(request, task, Component, resolvedProps, ref);\n  popComponentStackInDEV(task);\n}\n\nfunction renderElement(\n  request: Request,\n  task: Task,\n  type: any,\n  props: Object,\n  ref: any,\n): void {\n  if (typeof type === 'function') {\n    if (shouldConstruct(type)) {\n      renderClassComponent(request, task, type, props);\n      return;\n    } else {\n      renderIndeterminateComponent(request, task, type, props);\n      return;\n    }\n  }\n  if (typeof type === 'string') {\n    renderHostElement(request, task, type, props);\n    return;\n  }\n\n  switch (type) {\n    // TODO: LegacyHidden acts the same as a fragment. This only works\n    // because we currently assume that every instance of LegacyHidden is\n    // accompanied by a host component wrapper. In the hidden mode, the host\n    // component is given a `hidden` attribute, which ensures that the\n    // initial HTML is not visible. To support the use of LegacyHidden as a\n    // true fragment, without an extra DOM node, we would have to hide the\n    // initial HTML in some other way.\n    // TODO: Add REACT_OFFSCREEN_TYPE here too with the same capability.\n    case REACT_LEGACY_HIDDEN_TYPE:\n    case REACT_DEBUG_TRACING_MODE_TYPE:\n    case REACT_STRICT_MODE_TYPE:\n    case REACT_PROFILER_TYPE:\n    case REACT_FRAGMENT_TYPE: {\n      renderNodeDestructive(request, task, props.children);\n      return;\n    }\n    case REACT_SUSPENSE_LIST_TYPE: {\n      pushBuiltInComponentStackInDEV(task, 'SuspenseList');\n      // TODO: SuspenseList should control the boundaries.\n      renderNodeDestructive(request, task, props.children);\n      popComponentStackInDEV(task);\n      return;\n    }\n    case REACT_SCOPE_TYPE: {\n      if (enableScopeAPI) {\n        renderNodeDestructive(request, task, props.children);\n        return;\n      }\n      throw new Error('ReactDOMServer does not yet support scope components.');\n    }\n    // eslint-disable-next-line-no-fallthrough\n    case REACT_SUSPENSE_TYPE: {\n      if (\n        enableSuspenseAvoidThisFallbackFizz &&\n        props.unstable_avoidThisFallback === true\n      ) {\n        renderBackupSuspenseBoundary(request, task, props);\n      } else {\n        renderSuspenseBoundary(request, task, props);\n      }\n      return;\n    }\n  }\n\n  if (typeof type === 'object' && type !== null) {\n    switch (type.$$typeof) {\n      case REACT_FORWARD_REF_TYPE: {\n        renderForwardRef(request, task, type, props, ref);\n        return;\n      }\n      case REACT_MEMO_TYPE: {\n        renderMemo(request, task, type, props, ref);\n        return;\n      }\n      case REACT_PROVIDER_TYPE: {\n        renderContextProvider(request, task, type, props);\n        return;\n      }\n      case REACT_CONTEXT_TYPE: {\n        renderContextConsumer(request, task, type, props);\n        return;\n      }\n      case REACT_LAZY_TYPE: {\n        renderLazyComponent(request, task, type, props);\n        return;\n      }\n    }\n  }\n\n  let info = '';\n  if (__DEV__) {\n    if (\n      type === undefined ||\n      (typeof type === 'object' &&\n        type !== null &&\n        Object.keys(type).length === 0)\n    ) {\n      info +=\n        ' You likely forgot to export your component from the file ' +\n        \"it's defined in, or you might have mixed up default and \" +\n        'named imports.';\n    }\n  }\n\n  throw new Error(\n    'Element type is invalid: expected a string (for built-in ' +\n      'components) or a class/function (for composite components) ' +\n      `but got: ${type == null ? type : typeof type}.${info}`,\n  );\n}\n\nfunction validateIterable(iterable, iteratorFn: Function): void {\n  if (__DEV__) {\n    // We don't support rendering Generators because it's a mutation.\n    // See https://github.com/facebook/react/issues/12995\n    if (\n      typeof Symbol === 'function' &&\n      // $FlowFixMe Flow doesn't know about toStringTag\n      iterable[Symbol.toStringTag] === 'Generator'\n    ) {\n      if (!didWarnAboutGenerators) {\n        console.error(\n          'Using Generators as children is unsupported and will likely yield ' +\n            'unexpected results because enumerating a generator mutates it. ' +\n            'You may convert it to an array with `Array.from()` or the ' +\n            '`[...spread]` operator before rendering. Keep in mind ' +\n            'you might need to polyfill these features for older browsers.',\n        );\n      }\n      didWarnAboutGenerators = true;\n    }\n\n    // Warn about using Maps as children\n    if ((iterable: any).entries === iteratorFn) {\n      if (!didWarnAboutMaps) {\n        console.error(\n          'Using Maps as children is not supported. ' +\n            'Use an array of keyed ReactElements instead.',\n        );\n      }\n      didWarnAboutMaps = true;\n    }\n  }\n}\n\nfunction renderNodeDestructive(\n  request: Request,\n  task: Task,\n  node: ReactNodeList,\n): void {\n  if (__DEV__) {\n    // In Dev we wrap renderNodeDestructiveImpl in a try / catch so we can capture\n    // a component stack at the right place in the tree. We don't do this in renderNode\n    // becuase it is not called at every layer of the tree and we may lose frames\n    try {\n      return renderNodeDestructiveImpl(request, task, node);\n    } catch (x) {\n      if (typeof x === 'object' && x !== null && typeof x.then === 'function') {\n        // This is a Wakable, noop\n      } else {\n        // This is an error, stash the component stack if it is null.\n        lastBoundaryErrorComponentStackDev =\n          lastBoundaryErrorComponentStackDev !== null\n            ? lastBoundaryErrorComponentStackDev\n            : getCurrentStackInDEV();\n      }\n      // rethrow so normal suspense logic can handle thrown value accordingly\n      throw x;\n    }\n  } else {\n    return renderNodeDestructiveImpl(request, task, node);\n  }\n}\n\n// This function by it self renders a node and consumes the task by mutating it\n// to update the current execution state.\nfunction renderNodeDestructiveImpl(\n  request: Request,\n  task: Task,\n  node: ReactNodeList,\n): void {\n  // Stash the node we're working on. We'll pick up from this task in case\n  // something suspends.\n  task.node = node;\n\n  // Handle object types\n  if (typeof node === 'object' && node !== null) {\n    switch ((node: any).$$typeof) {\n      case REACT_ELEMENT_TYPE: {\n        const element: React$Element<any> = (node: any);\n        const type = element.type;\n        const props = element.props;\n        const ref = element.ref;\n        renderElement(request, task, type, props, ref);\n        return;\n      }\n      case REACT_PORTAL_TYPE:\n        throw new Error(\n          'Portals are not currently supported by the server renderer. ' +\n            'Render them conditionally so that they only appear on the client render.',\n        );\n      // eslint-disable-next-line-no-fallthrough\n      case REACT_LAZY_TYPE: {\n        const lazyNode: LazyComponentType<any, any> = (node: any);\n        const payload = lazyNode._payload;\n        const init = lazyNode._init;\n        let resolvedNode;\n        if (__DEV__) {\n          try {\n            resolvedNode = init(payload);\n          } catch (x) {\n            if (\n              typeof x === 'object' &&\n              x !== null &&\n              typeof x.then === 'function'\n            ) {\n              // this Lazy initializer is suspending. push a temporary frame onto the stack so it can be\n              // popped off in spawnNewSuspendedTask. This aligns stack behavior between Lazy in element position\n              // vs Component position. We do not want the frame for Errors so we exclusively do this in\n              // the wakeable branch\n              pushBuiltInComponentStackInDEV(task, 'Lazy');\n            }\n            throw x;\n          }\n        } else {\n          resolvedNode = init(payload);\n        }\n        renderNodeDestructive(request, task, resolvedNode);\n        return;\n      }\n    }\n\n    if (isArray(node)) {\n      renderChildrenArray(request, task, node);\n      return;\n    }\n\n    const iteratorFn = getIteratorFn(node);\n    if (iteratorFn) {\n      if (__DEV__) {\n        validateIterable(node, iteratorFn);\n      }\n      const iterator = iteratorFn.call(node);\n      if (iterator) {\n        // We need to know how many total children are in this set, so that we\n        // can allocate enough id slots to acommodate them. So we must exhaust\n        // the iterator before we start recursively rendering the children.\n        // TODO: This is not great but I think it's inherent to the id\n        // generation algorithm.\n        let step = iterator.next();\n        // If there are not entries, we need to push an empty so we start by checking that.\n        if (!step.done) {\n          const children = [];\n          do {\n            children.push(step.value);\n            step = iterator.next();\n          } while (!step.done);\n          renderChildrenArray(request, task, children);\n          return;\n        }\n        return;\n      }\n    }\n\n    const childString = Object.prototype.toString.call(node);\n\n    throw new Error(\n      `Objects are not valid as a React child (found: ${\n        childString === '[object Object]'\n          ? 'object with keys {' + Object.keys(node).join(', ') + '}'\n          : childString\n      }). ` +\n        'If you meant to render a collection of children, use an array ' +\n        'instead.',\n    );\n  }\n\n  if (typeof node === 'string') {\n    const segment = task.blockedSegment;\n    segment.lastPushedText = pushTextInstance(\n      task.blockedSegment.chunks,\n      node,\n      request.responseState,\n      segment.lastPushedText,\n    );\n    return;\n  }\n\n  if (typeof node === 'number') {\n    const segment = task.blockedSegment;\n    segment.lastPushedText = pushTextInstance(\n      task.blockedSegment.chunks,\n      '' + node,\n      request.responseState,\n      segment.lastPushedText,\n    );\n    return;\n  }\n\n  if (__DEV__) {\n    if (typeof node === 'function') {\n      console.error(\n        'Functions are not valid as a React child. This may happen if ' +\n          'you return a Component instead of <Component /> from render. ' +\n          'Or maybe you meant to call this function rather than return it.',\n      );\n    }\n  }\n}\n\nfunction renderChildrenArray(request, task, children) {\n  const totalChildren = children.length;\n  for (let i = 0; i < totalChildren; i++) {\n    const prevTreeContext = task.treeContext;\n    task.treeContext = pushTreeContext(prevTreeContext, totalChildren, i);\n    try {\n      // We need to use the non-destructive form so that we can safely pop back\n      // up and render the sibling if something suspends.\n      renderNode(request, task, children[i]);\n    } finally {\n      task.treeContext = prevTreeContext;\n    }\n  }\n}\n\nfunction spawnNewSuspendedTask(\n  request: Request,\n  task: Task,\n  x: Promise<any>,\n): void {\n  // Something suspended, we'll need to create a new segment and resolve it later.\n  const segment = task.blockedSegment;\n  const insertionIndex = segment.chunks.length;\n  const newSegment = createPendingSegment(\n    request,\n    insertionIndex,\n    null,\n    segment.formatContext,\n    // Adopt the parent segment's leading text embed\n    segment.lastPushedText,\n    // Assume we are text embedded at the trailing edge\n    true,\n  );\n  segment.children.push(newSegment);\n  // Reset lastPushedText for current Segment since the new Segment \"consumed\" it\n  segment.lastPushedText = false;\n  const newTask = createTask(\n    request,\n    task.node,\n    task.blockedBoundary,\n    newSegment,\n    task.abortSet,\n    task.legacyContext,\n    task.context,\n    task.treeContext,\n  );\n  if (__DEV__) {\n    if (task.componentStack !== null) {\n      // We pop one task off the stack because the node that suspended will be tried again,\n      // which will add it back onto the stack.\n      newTask.componentStack = task.componentStack.parent;\n    }\n  }\n  const ping = newTask.ping;\n  x.then(ping, ping);\n}\n\n// This is a non-destructive form of rendering a node. If it suspends it spawns\n// a new task and restores the context of this task to what it was before.\nfunction renderNode(request: Request, task: Task, node: ReactNodeList): void {\n  // TODO: Store segment.children.length here and reset it in case something\n  // suspended partially through writing something.\n\n  // Snapshot the current context in case something throws to interrupt the\n  // process.\n  const previousFormatContext = task.blockedSegment.formatContext;\n  const previousLegacyContext = task.legacyContext;\n  const previousContext = task.context;\n  let previousComponentStack = null;\n  if (__DEV__) {\n    previousComponentStack = task.componentStack;\n  }\n  try {\n    return renderNodeDestructive(request, task, node);\n  } catch (x) {\n    resetHooksState();\n    if (typeof x === 'object' && x !== null && typeof x.then === 'function') {\n      spawnNewSuspendedTask(request, task, x);\n      // Restore the context. We assume that this will be restored by the inner\n      // functions in case nothing throws so we don't use \"finally\" here.\n      task.blockedSegment.formatContext = previousFormatContext;\n      task.legacyContext = previousLegacyContext;\n      task.context = previousContext;\n      // Restore all active ReactContexts to what they were before.\n      switchContext(previousContext);\n      if (__DEV__) {\n        task.componentStack = previousComponentStack;\n      }\n      return;\n    } else {\n      // Restore the context. We assume that this will be restored by the inner\n      // functions in case nothing throws so we don't use \"finally\" here.\n      task.blockedSegment.formatContext = previousFormatContext;\n      task.legacyContext = previousLegacyContext;\n      task.context = previousContext;\n      // Restore all active ReactContexts to what they were before.\n      switchContext(previousContext);\n      if (__DEV__) {\n        task.componentStack = previousComponentStack;\n      }\n      // We assume that we don't need the correct context.\n      // Let's terminate the rest of the tree and don't render any siblings.\n      throw x;\n    }\n  }\n}\n\nfunction erroredTask(\n  request: Request,\n  boundary: Root | SuspenseBoundary,\n  segment: Segment,\n  error: mixed,\n) {\n  // Report the error to a global handler.\n  const errorDigest = logRecoverableError(request, error);\n  if (boundary === null) {\n    fatalError(request, error);\n  } else {\n    boundary.pendingTasks--;\n    if (!boundary.forceClientRender) {\n      boundary.forceClientRender = true;\n      boundary.errorDigest = errorDigest;\n      if (__DEV__) {\n        captureBoundaryErrorDetailsDev(boundary, error);\n      }\n\n      // Regardless of what happens next, this boundary won't be displayed,\n      // so we can flush it, if the parent already flushed.\n      if (boundary.parentFlushed) {\n        // We don't have a preference where in the queue this goes since it's likely\n        // to error on the client anyway. However, intentionally client-rendered\n        // boundaries should be flushed earlier so that they can start on the client.\n        // We reuse the same queue for errors.\n        request.clientRenderedBoundaries.push(boundary);\n      }\n    }\n  }\n\n  request.allPendingTasks--;\n  if (request.allPendingTasks === 0) {\n    const onAllReady = request.onAllReady;\n    onAllReady();\n  }\n}\n\nfunction abortTaskSoft(task: Task): void {\n  // This aborts task without aborting the parent boundary that it blocks.\n  // It's used for when we didn't need this task to complete the tree.\n  // If task was needed, then it should use abortTask instead.\n  const request: Request = this;\n  const boundary = task.blockedBoundary;\n  const segment = task.blockedSegment;\n  segment.status = ABORTED;\n  finishedTask(request, boundary, segment);\n}\n\nfunction abortTask(task: Task, request: Request, reason: mixed): void {\n  // This aborts the task and aborts the parent that it blocks, putting it into\n  // client rendered mode.\n  const boundary = task.blockedBoundary;\n  const segment = task.blockedSegment;\n  segment.status = ABORTED;\n\n  if (boundary === null) {\n    request.allPendingTasks--;\n    // We didn't complete the root so we have nothing to show. We can close\n    // the request;\n    if (request.status !== CLOSED) {\n      request.status = CLOSED;\n      if (request.destination !== null) {\n        close(request.destination);\n      }\n    }\n  } else {\n    boundary.pendingTasks--;\n\n    if (!boundary.forceClientRender) {\n      boundary.forceClientRender = true;\n      let error =\n        reason === undefined\n          ? new Error('The render was aborted by the server without a reason.')\n          : reason;\n      boundary.errorDigest = request.onError(error);\n      if (__DEV__) {\n        const errorPrefix =\n          'The server did not finish this Suspense boundary: ';\n        if (error && typeof error.message === 'string') {\n          error = errorPrefix + error.message;\n        } else {\n          // eslint-disable-next-line react-internal/safe-string-coercion\n          error = errorPrefix + String(error);\n        }\n        const previousTaskInDev = currentTaskInDEV;\n        currentTaskInDEV = task;\n        try {\n          captureBoundaryErrorDetailsDev(boundary, error);\n        } finally {\n          currentTaskInDEV = previousTaskInDev;\n        }\n      }\n      if (boundary.parentFlushed) {\n        request.clientRenderedBoundaries.push(boundary);\n      }\n    }\n\n    // If this boundary was still pending then we haven't already cancelled its fallbacks.\n    // We'll need to abort the fallbacks, which will also error that parent boundary.\n    boundary.fallbackAbortableTasks.forEach(fallbackTask =>\n      abortTask(fallbackTask, request, reason),\n    );\n    boundary.fallbackAbortableTasks.clear();\n\n    request.allPendingTasks--;\n    if (request.allPendingTasks === 0) {\n      const onAllReady = request.onAllReady;\n      onAllReady();\n    }\n  }\n}\n\nfunction queueCompletedSegment(\n  boundary: SuspenseBoundary,\n  segment: Segment,\n): void {\n  if (\n    segment.chunks.length === 0 &&\n    segment.children.length === 1 &&\n    segment.children[0].boundary === null\n  ) {\n    // This is an empty segment. There's nothing to write, so we can instead transfer the ID\n    // to the child. That way any existing references point to the child.\n    const childSegment = segment.children[0];\n    childSegment.id = segment.id;\n    childSegment.parentFlushed = true;\n    if (childSegment.status === COMPLETED) {\n      queueCompletedSegment(boundary, childSegment);\n    }\n  } else {\n    const completedSegments = boundary.completedSegments;\n    completedSegments.push(segment);\n  }\n}\n\nfunction finishedTask(\n  request: Request,\n  boundary: Root | SuspenseBoundary,\n  segment: Segment,\n) {\n  if (boundary === null) {\n    if (segment.parentFlushed) {\n      if (request.completedRootSegment !== null) {\n        throw new Error(\n          'There can only be one root segment. This is a bug in React.',\n        );\n      }\n\n      request.completedRootSegment = segment;\n    }\n    request.pendingRootTasks--;\n    if (request.pendingRootTasks === 0) {\n      // We have completed the shell so the shell can't error anymore.\n      request.onShellError = noop;\n      const onShellReady = request.onShellReady;\n      onShellReady();\n    }\n  } else {\n    boundary.pendingTasks--;\n    if (boundary.forceClientRender) {\n      // This already errored.\n    } else if (boundary.pendingTasks === 0) {\n      // This must have been the last segment we were waiting on. This boundary is now complete.\n      if (segment.parentFlushed) {\n        // Our parent segment already flushed, so we need to schedule this segment to be emitted.\n        // If it is a segment that was aborted, we'll write other content instead so we don't need\n        // to emit it.\n        if (segment.status === COMPLETED) {\n          queueCompletedSegment(boundary, segment);\n        }\n      }\n      if (boundary.parentFlushed) {\n        // The segment might be part of a segment that didn't flush yet, but if the boundary's\n        // parent flushed, we need to schedule the boundary to be emitted.\n        request.completedBoundaries.push(boundary);\n      }\n      // We can now cancel any pending task on the fallback since we won't need to show it anymore.\n      // This needs to happen after we read the parentFlushed flags because aborting can finish\n      // work which can trigger user code, which can start flushing, which can change those flags.\n      boundary.fallbackAbortableTasks.forEach(abortTaskSoft, request);\n      boundary.fallbackAbortableTasks.clear();\n    } else {\n      if (segment.parentFlushed) {\n        // Our parent already flushed, so we need to schedule this segment to be emitted.\n        // If it is a segment that was aborted, we'll write other content instead so we don't need\n        // to emit it.\n        if (segment.status === COMPLETED) {\n          queueCompletedSegment(boundary, segment);\n          const completedSegments = boundary.completedSegments;\n          if (completedSegments.length === 1) {\n            // This is the first time since we last flushed that we completed anything.\n            // We can schedule this boundary to emit its partially completed segments early\n            // in case the parent has already been flushed.\n            if (boundary.parentFlushed) {\n              request.partialBoundaries.push(boundary);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  request.allPendingTasks--;\n  if (request.allPendingTasks === 0) {\n    // This needs to be called at the very end so that we can synchronously write the result\n    // in the callback if needed.\n    const onAllReady = request.onAllReady;\n    onAllReady();\n  }\n}\n\nfunction retryTask(request: Request, task: Task): void {\n  const segment = task.blockedSegment;\n  if (segment.status !== PENDING) {\n    // We completed this by other means before we had a chance to retry it.\n    return;\n  }\n  // We restore the context to what it was when we suspended.\n  // We don't restore it after we leave because it's likely that we'll end up\n  // needing a very similar context soon again.\n  switchContext(task.context);\n  let prevTaskInDEV = null;\n  if (__DEV__) {\n    prevTaskInDEV = currentTaskInDEV;\n    currentTaskInDEV = task;\n  }\n  try {\n    // We call the destructive form that mutates this task. That way if something\n    // suspends again, we can reuse the same task instead of spawning a new one.\n    renderNodeDestructive(request, task, task.node);\n    pushSegmentFinale(\n      segment.chunks,\n      request.responseState,\n      segment.lastPushedText,\n      segment.textEmbedded,\n    );\n\n    task.abortSet.delete(task);\n    segment.status = COMPLETED;\n    finishedTask(request, task.blockedBoundary, segment);\n  } catch (x) {\n    resetHooksState();\n    if (typeof x === 'object' && x !== null && typeof x.then === 'function') {\n      // Something suspended again, let's pick it back up later.\n      const ping = task.ping;\n      x.then(ping, ping);\n    } else {\n      task.abortSet.delete(task);\n      segment.status = ERRORED;\n      erroredTask(request, task.blockedBoundary, segment, x);\n    }\n  } finally {\n    if (__DEV__) {\n      currentTaskInDEV = prevTaskInDEV;\n    }\n  }\n}\n\nexport function performWork(request: Request): void {\n  if (request.status === CLOSED) {\n    return;\n  }\n  const prevContext = getActiveContext();\n  const prevDispatcher = ReactCurrentDispatcher.current;\n  ReactCurrentDispatcher.current = Dispatcher;\n  let prevGetCurrentStackImpl;\n  if (__DEV__) {\n    prevGetCurrentStackImpl = ReactDebugCurrentFrame.getCurrentStack;\n    ReactDebugCurrentFrame.getCurrentStack = getCurrentStackInDEV;\n  }\n  const prevResponseState = currentResponseState;\n  setCurrentResponseState(request.responseState);\n  try {\n    const pingedTasks = request.pingedTasks;\n    let i;\n    for (i = 0; i < pingedTasks.length; i++) {\n      const task = pingedTasks[i];\n      retryTask(request, task);\n    }\n    pingedTasks.splice(0, i);\n    if (request.destination !== null) {\n      flushCompletedQueues(request, request.destination);\n    }\n  } catch (error) {\n    logRecoverableError(request, error);\n    fatalError(request, error);\n  } finally {\n    setCurrentResponseState(prevResponseState);\n    ReactCurrentDispatcher.current = prevDispatcher;\n    if (__DEV__) {\n      ReactDebugCurrentFrame.getCurrentStack = prevGetCurrentStackImpl;\n    }\n    if (prevDispatcher === Dispatcher) {\n      // This means that we were in a reentrant work loop. This could happen\n      // in a renderer that supports synchronous work like renderToString,\n      // when it's called from within another renderer.\n      // Normally we don't bother switching the contexts to their root/default\n      // values when leaving because we'll likely need the same or similar\n      // context again. However, when we're inside a synchronous loop like this\n      // we'll to restore the context to what it was before returning.\n      switchContext(prevContext);\n    }\n  }\n}\n\nfunction flushSubtree(\n  request: Request,\n  destination: Destination,\n  segment: Segment,\n): boolean {\n  segment.parentFlushed = true;\n  switch (segment.status) {\n    case PENDING: {\n      // We're emitting a placeholder for this segment to be filled in later.\n      // Therefore we'll need to assign it an ID - to refer to it by.\n      const segmentID = (segment.id = request.nextSegmentId++);\n      // When this segment finally completes it won't be embedded in text since it will flush separately\n      segment.lastPushedText = false;\n      segment.textEmbedded = false;\n      return writePlaceholder(destination, request.responseState, segmentID);\n    }\n    case COMPLETED: {\n      segment.status = FLUSHED;\n      let r = true;\n      const chunks = segment.chunks;\n      let chunkIdx = 0;\n      const children = segment.children;\n      for (let childIdx = 0; childIdx < children.length; childIdx++) {\n        const nextChild = children[childIdx];\n        // Write all the chunks up until the next child.\n        for (; chunkIdx < nextChild.index; chunkIdx++) {\n          writeChunk(destination, chunks[chunkIdx]);\n        }\n        r = flushSegment(request, destination, nextChild);\n      }\n      // Finally just write all the remaining chunks\n      for (; chunkIdx < chunks.length - 1; chunkIdx++) {\n        writeChunk(destination, chunks[chunkIdx]);\n      }\n      if (chunkIdx < chunks.length) {\n        r = writeChunkAndReturn(destination, chunks[chunkIdx]);\n      }\n      return r;\n    }\n    default: {\n      throw new Error(\n        'Aborted, errored or already flushed boundaries should not be flushed again. This is a bug in React.',\n      );\n    }\n  }\n}\n\nfunction flushSegment(\n  request: Request,\n  destination,\n  segment: Segment,\n): boolean {\n  const boundary = segment.boundary;\n  if (boundary === null) {\n    // Not a suspense boundary.\n    return flushSubtree(request, destination, segment);\n  }\n  boundary.parentFlushed = true;\n  // This segment is a Suspense boundary. We need to decide whether to\n  // emit the content or the fallback now.\n  if (boundary.forceClientRender) {\n    // Emit a client rendered suspense boundary wrapper.\n    // We never queue the inner boundary so we'll never emit its content or partial segments.\n\n    writeStartClientRenderedSuspenseBoundary(\n      destination,\n      request.responseState,\n      boundary.errorDigest,\n      boundary.errorMessage,\n      boundary.errorComponentStack,\n    );\n    // Flush the fallback.\n    flushSubtree(request, destination, segment);\n\n    return writeEndClientRenderedSuspenseBoundary(\n      destination,\n      request.responseState,\n    );\n  } else if (boundary.pendingTasks > 0) {\n    // This boundary is still loading. Emit a pending suspense boundary wrapper.\n\n    // Assign an ID to refer to the future content by.\n    boundary.rootSegmentID = request.nextSegmentId++;\n    if (boundary.completedSegments.length > 0) {\n      // If this is at least partially complete, we can queue it to be partially emitted early.\n      request.partialBoundaries.push(boundary);\n    }\n\n    /// This is the first time we should have referenced this ID.\n    const id = (boundary.id = assignSuspenseBoundaryID(request.responseState));\n\n    writeStartPendingSuspenseBoundary(destination, request.responseState, id);\n\n    // Flush the fallback.\n    flushSubtree(request, destination, segment);\n\n    return writeEndPendingSuspenseBoundary(destination, request.responseState);\n  } else if (boundary.byteSize > request.progressiveChunkSize) {\n    // This boundary is large and will be emitted separately so that we can progressively show\n    // other content. We add it to the queue during the flush because we have to ensure that\n    // the parent flushes first so that there's something to inject it into.\n    // We also have to make sure that it's emitted into the queue in a deterministic slot.\n    // I.e. we can't insert it here when it completes.\n\n    // Assign an ID to refer to the future content by.\n    boundary.rootSegmentID = request.nextSegmentId++;\n\n    request.completedBoundaries.push(boundary);\n    // Emit a pending rendered suspense boundary wrapper.\n    writeStartPendingSuspenseBoundary(\n      destination,\n      request.responseState,\n      boundary.id,\n    );\n\n    // Flush the fallback.\n    flushSubtree(request, destination, segment);\n\n    return writeEndPendingSuspenseBoundary(destination, request.responseState);\n  } else {\n    // We can inline this boundary's content as a complete boundary.\n    writeStartCompletedSuspenseBoundary(destination, request.responseState);\n\n    const completedSegments = boundary.completedSegments;\n\n    if (completedSegments.length !== 1) {\n      throw new Error(\n        'A previously unvisited boundary must have exactly one root segment. This is a bug in React.',\n      );\n    }\n\n    const contentSegment = completedSegments[0];\n    flushSegment(request, destination, contentSegment);\n\n    return writeEndCompletedSuspenseBoundary(\n      destination,\n      request.responseState,\n    );\n  }\n}\n\nfunction flushClientRenderedBoundary(\n  request: Request,\n  destination: Destination,\n  boundary: SuspenseBoundary,\n): boolean {\n  return writeClientRenderBoundaryInstruction(\n    destination,\n    request.responseState,\n    boundary.id,\n    boundary.errorDigest,\n    boundary.errorMessage,\n    boundary.errorComponentStack,\n  );\n}\n\nfunction flushSegmentContainer(\n  request: Request,\n  destination: Destination,\n  segment: Segment,\n): boolean {\n  writeStartSegment(\n    destination,\n    request.responseState,\n    segment.formatContext,\n    segment.id,\n  );\n  flushSegment(request, destination, segment);\n  return writeEndSegment(destination, segment.formatContext);\n}\n\nfunction flushCompletedBoundary(\n  request: Request,\n  destination: Destination,\n  boundary: SuspenseBoundary,\n): boolean {\n  const completedSegments = boundary.completedSegments;\n  let i = 0;\n  for (; i < completedSegments.length; i++) {\n    const segment = completedSegments[i];\n    flushPartiallyCompletedSegment(request, destination, boundary, segment);\n  }\n  completedSegments.length = 0;\n\n  return writeCompletedBoundaryInstruction(\n    destination,\n    request.responseState,\n    boundary.id,\n    boundary.rootSegmentID,\n  );\n}\n\nfunction flushPartialBoundary(\n  request: Request,\n  destination: Destination,\n  boundary: SuspenseBoundary,\n): boolean {\n  const completedSegments = boundary.completedSegments;\n  let i = 0;\n  for (; i < completedSegments.length; i++) {\n    const segment = completedSegments[i];\n    if (\n      !flushPartiallyCompletedSegment(request, destination, boundary, segment)\n    ) {\n      i++;\n      completedSegments.splice(0, i);\n      // Only write as much as the buffer wants. Something higher priority\n      // might want to write later.\n      return false;\n    }\n  }\n  completedSegments.splice(0, i);\n  return true;\n}\n\nfunction flushPartiallyCompletedSegment(\n  request: Request,\n  destination: Destination,\n  boundary: SuspenseBoundary,\n  segment: Segment,\n): boolean {\n  if (segment.status === FLUSHED) {\n    // We've already flushed this inline.\n    return true;\n  }\n\n  const segmentID = segment.id;\n  if (segmentID === -1) {\n    // This segment wasn't previously referred to. This happens at the root of\n    // a boundary. We make kind of a leap here and assume this is the root.\n    const rootSegmentID = (segment.id = boundary.rootSegmentID);\n\n    if (rootSegmentID === -1) {\n      throw new Error(\n        'A root segment ID must have been assigned by now. This is a bug in React.',\n      );\n    }\n\n    return flushSegmentContainer(request, destination, segment);\n  } else {\n    flushSegmentContainer(request, destination, segment);\n    return writeCompletedSegmentInstruction(\n      destination,\n      request.responseState,\n      segmentID,\n    );\n  }\n}\n\nfunction flushCompletedQueues(\n  request: Request,\n  destination: Destination,\n): void {\n  beginWriting(destination);\n  try {\n    // The structure of this is to go through each queue one by one and write\n    // until the sink tells us to stop. When we should stop, we still finish writing\n    // that item fully and then yield. At that point we remove the already completed\n    // items up until the point we completed them.\n\n    // TODO: Emit preloading.\n\n    // TODO: It's kind of unfortunate to keep checking this array after we've already\n    // emitted the root.\n    const completedRootSegment = request.completedRootSegment;\n    if (completedRootSegment !== null && request.pendingRootTasks === 0) {\n      flushSegment(request, destination, completedRootSegment);\n      request.completedRootSegment = null;\n      writeCompletedRoot(destination, request.responseState);\n    }\n\n    // We emit client rendering instructions for already emitted boundaries first.\n    // This is so that we can signal to the client to start client rendering them as\n    // soon as possible.\n    const clientRenderedBoundaries = request.clientRenderedBoundaries;\n    let i;\n    for (i = 0; i < clientRenderedBoundaries.length; i++) {\n      const boundary = clientRenderedBoundaries[i];\n      if (!flushClientRenderedBoundary(request, destination, boundary)) {\n        request.destination = null;\n        i++;\n        clientRenderedBoundaries.splice(0, i);\n        return;\n      }\n    }\n    clientRenderedBoundaries.splice(0, i);\n\n    // Next we emit any complete boundaries. It's better to favor boundaries\n    // that are completely done since we can actually show them, than it is to emit\n    // any individual segments from a partially complete boundary.\n    const completedBoundaries = request.completedBoundaries;\n    for (i = 0; i < completedBoundaries.length; i++) {\n      const boundary = completedBoundaries[i];\n      if (!flushCompletedBoundary(request, destination, boundary)) {\n        request.destination = null;\n        i++;\n        completedBoundaries.splice(0, i);\n        return;\n      }\n    }\n    completedBoundaries.splice(0, i);\n\n    // Allow anything written so far to flush to the underlying sink before\n    // we continue with lower priorities.\n    completeWriting(destination);\n    beginWriting(destination);\n\n    // TODO: Here we'll emit data used by hydration.\n\n    // Next we emit any segments of any boundaries that are partially complete\n    // but not deeply complete.\n    const partialBoundaries = request.partialBoundaries;\n    for (i = 0; i < partialBoundaries.length; i++) {\n      const boundary = partialBoundaries[i];\n      if (!flushPartialBoundary(request, destination, boundary)) {\n        request.destination = null;\n        i++;\n        partialBoundaries.splice(0, i);\n        return;\n      }\n    }\n    partialBoundaries.splice(0, i);\n\n    // Next we check the completed boundaries again. This may have had\n    // boundaries added to it in case they were too larged to be inlined.\n    // New ones might be added in this loop.\n    const largeBoundaries = request.completedBoundaries;\n    for (i = 0; i < largeBoundaries.length; i++) {\n      const boundary = largeBoundaries[i];\n      if (!flushCompletedBoundary(request, destination, boundary)) {\n        request.destination = null;\n        i++;\n        largeBoundaries.splice(0, i);\n        return;\n      }\n    }\n    largeBoundaries.splice(0, i);\n  } finally {\n    completeWriting(destination);\n    flushBuffered(destination);\n    if (\n      request.allPendingTasks === 0 &&\n      request.pingedTasks.length === 0 &&\n      request.clientRenderedBoundaries.length === 0 &&\n      request.completedBoundaries.length === 0\n      // We don't need to check any partially completed segments because\n      // either they have pending task or they're complete.\n    ) {\n      if (__DEV__) {\n        if (request.abortableTasks.size !== 0) {\n          console.error(\n            'There was still abortable task at the root when we closed. This is a bug in React.',\n          );\n        }\n      }\n      // We're done.\n      close(destination);\n    }\n  }\n}\n\nexport function startWork(request: Request): void {\n  scheduleWork(() => performWork(request));\n}\n\nexport function startFlowing(request: Request, destination: Destination): void {\n  if (request.status === CLOSING) {\n    request.status = CLOSED;\n    closeWithError(destination, request.fatalError);\n    return;\n  }\n  if (request.status === CLOSED) {\n    return;\n  }\n  if (request.destination !== null) {\n    // We're already flowing.\n    return;\n  }\n  request.destination = destination;\n  try {\n    flushCompletedQueues(request, destination);\n  } catch (error) {\n    logRecoverableError(request, error);\n    fatalError(request, error);\n  }\n}\n\n// This is called to early terminate a request. It puts all pending boundaries in client rendered state.\nexport function abort(request: Request, reason: mixed): void {\n  try {\n    const abortableTasks = request.abortableTasks;\n    abortableTasks.forEach(task => abortTask(task, request, reason));\n    abortableTasks.clear();\n    if (request.destination !== null) {\n      flushCompletedQueues(request, request.destination);\n    }\n  } catch (error) {\n    logRecoverableError(request, error);\n    fatalError(request, error);\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {ReactNodeList} from 'shared/ReactTypes';\n\nimport type {Request} from 'react-server/src/ReactFizzServer';\n\nimport type {Destination} from 'react-server/src/ReactServerStreamConfig';\n\nimport {\n  createRequest,\n  startWork,\n  performWork,\n  startFlowing,\n  abort,\n} from 'react-server/src/ReactFizzServer';\n\nimport {\n  createResponseState,\n  createRootFormatContext,\n} from 'react-server/src/ReactServerFormatConfig';\n\ntype Options = {\n  identifierPrefix?: string,\n  bootstrapScriptContent?: string,\n  bootstrapScripts: Array<string>,\n  bootstrapModules: Array<string>,\n  progressiveChunkSize?: number,\n  onError: (error: mixed) => void,\n};\n\nopaque type Stream = {\n  destination: Destination,\n  request: Request,\n};\n\nfunction renderToStream(children: ReactNodeList, options: Options): Stream {\n  const destination = {\n    buffer: '',\n    done: false,\n    fatal: false,\n    error: null,\n  };\n  const request = createRequest(\n    children,\n    createResponseState(\n      options ? options.identifierPrefix : undefined,\n      undefined,\n      options ? options.bootstrapScriptContent : undefined,\n      options ? options.bootstrapScripts : undefined,\n      options ? options.bootstrapModules : undefined,\n    ),\n    createRootFormatContext(undefined),\n    options ? options.progressiveChunkSize : undefined,\n    options.onError,\n    undefined,\n    undefined,\n  );\n  startWork(request);\n  if (destination.fatal) {\n    throw destination.error;\n  }\n  return {\n    destination,\n    request,\n  };\n}\n\nfunction abortStream(stream: Stream): void {\n  abort(stream.request);\n}\n\nfunction renderNextChunk(stream: Stream): string {\n  const {request, destination} = stream;\n  performWork(request);\n  startFlowing(request, destination);\n  if (destination.fatal) {\n    throw destination.error;\n  }\n  const chunk = destination.buffer;\n  destination.buffer = '';\n  return chunk;\n}\n\nfunction hasFinished(stream: Stream): boolean {\n  return stream.destination.done;\n}\n\nfunction debug(stream: Stream): any {\n  // convert to any to silence flow errors from opaque type\n  const request = (stream.request: any);\n  return {\n    pendingRootTasks: request.pendingRootTasks,\n    clientRenderedBoundaries: request.clientRenderedBoundaries.length,\n    completedBoundaries: request.completedBoundaries.length,\n    partialBoundaries: request.partialBoundaries.length,\n    allPendingTasks: request.allPendingTasks,\n    pingedTasks: request.pingedTasks.length,\n  };\n}\n\nexport {renderToStream, renderNextChunk, hasFinished, abortStream, debug};\n"],"names":["beginWriting","destination","writeChunk","chunk","buffer","writeChunkAndReturn","completeWriting","close","done","stringToChunk","content","stringToPrecomputedChunk","closeWithError","error","fatal","dynamicFeatureFlags","require","disableInputAttributeSyncing","enableTrustedTypesIntegration","disableSchedulerTimeoutBasedOnReactExpirationTime","warnAboutSpreadingKeyToJSX","replayFailedUnitOfWorkWithInvokeGuardedCallback","enableFilterEmptyStringAttributesDOM","enableLegacyFBSupport","deferRenderPhaseUpdateToNextBatch","enableDebugTracing","skipUnmountedBoundaries","createRootStrictEffectsByDefault","enableUseRefAccessWarning","disableNativeComponentFrames","disableSchedulerTimeoutInWorkLoop","enableLazyContextPropagation","enableSyncDefaultUpdates","enableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay","enableClientRenderFallbackOnTextMismatch","hasOwnProperty","Object","prototype","RESERVED","STRING","BOOLEANISH_STRING","BOOLEAN","OVERLOADED_BOOLEAN","NUMERIC","POSITIVE_NUMERIC","ATTRIBUTE_NAME_START_CHAR","ATTRIBUTE_NAME_CHAR","VALID_ATTRIBUTE_NAME_REGEX","RegExp","illegalAttributeNameCache","validatedAttributeNameCache","isAttributeNameSafe","attributeName","call","test","getPropertyInfo","name","properties","PropertyInfoRecord","type","mustUseProperty","attributeNamespace","sanitizeURL","removeEmptyString","acceptsBooleans","propertyName","reservedProps","push","forEach","toLowerCase","CAMELIZE","capitalize","token","toUpperCase","replace","xlinkHref","isUnitlessNumber","animationIterationCount","aspectRatio","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","columns","flex","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridArea","gridRow","gridRowEnd","gridRowSpan","gridRowStart","gridColumn","gridColumnEnd","gridColumnSpan","gridColumnStart","fontWeight","lineClamp","lineHeight","opacity","order","orphans","tabSize","widows","zIndex","zoom","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","strokeWidth","prefixKey","prefix","key","charAt","substring","prefixes","keys","prop","matchHtmlRegExp","escapeHtml","string","str","match","exec","escape","html","index","lastIndex","length","charCodeAt","escapeTextForBrowser","text","uppercasePattern","msPattern","hyphenateStyleName","isJavaScriptProtocol","url","Error","isArrayImpl","Array","isArray","a","startInlineScript","endInlineScript","startScriptSrc","startModuleSrc","endAsyncScript","escapeBootstrapScriptContent","scriptText","scriptRegex","scriptReplacer","s","suffix","createResponseState","identifierPrefix","nonce","bootstrapScriptContent","bootstrapScripts","bootstrapModules","idPrefix","undefined","inlineScriptWithNonce","bootstrapChunks","i","placeholderPrefix","segmentPrefix","boundaryPrefix","nextSuspenseID","sentCompleteSegmentFunction","sentCompleteBoundaryFunction","sentClientRenderFunction","ROOT_HTML_MODE","HTML_MODE","SVG_MODE","MATHML_MODE","HTML_TABLE_MODE","HTML_TABLE_BODY_MODE","HTML_TABLE_ROW_MODE","HTML_COLGROUP_MODE","createFormatContext","insertionMode","selectedValue","createRootFormatContext","namespaceURI","getChildFormatContext","parentContext","props","value","defaultValue","UNINITIALIZED_SUSPENSE_BOUNDARY_ID","assignSuspenseBoundaryID","responseState","generatedID","toString","makeId","treeId","localId","id","encodeHTMLTextNode","textSeparator","pushTextInstance","target","textEmbedded","pushSegmentFinale","lastPushedText","styleNameCache","Map","processStyleName","styleName","get","result","set","styleAttributeStart","styleAssign","styleSeparator","pushStyle","style","isFirst","styleValue","nameChunk","valueChunk","isCustomProperty","indexOf","trim","attributeEnd","attributeSeparator","attributeAssign","attributeEmptyString","pushAttribute","propertyInfo","attributeNameChunk","isNaN","slice","endOfStartTag","endOfStartTagSelfClosing","pushInnerHTML","innerHTML","children","__html","pushStartSelect","startChunkForTag","propKey","propValue","flattenOptionChildren","Children","child","selectedMarkerAttribute","pushStartOption","formatContext","selected","stringValue","v","pushInput","checked","defaultChecked","pushStartTextArea","leadingNewline","pushSelfClosing","tag","pushStartMenuItem","pushStartTitle","pushStartGenericElement","pushStartCustomElement","enableCustomElementPropertySupport","pushStartPreformattedElement","VALID_TAG_REGEX","validatedTagCache","tagStartChunk","DOCTYPE","pushStartInstance","is","endTag1","endTag2","pushEndInstance","writeCompletedRoot","placeholder1","placeholder2","writePlaceholder","formattedID","startCompletedSuspenseBoundary","startPendingSuspenseBoundary1","startPendingSuspenseBoundary2","startClientRenderedSuspenseBoundary","endSuspenseBoundary","clientRenderedSuspenseBoundaryError1","clientRenderedSuspenseBoundaryErrorAttrInterstitial","clientRenderedSuspenseBoundaryError1A","clientRenderedSuspenseBoundaryError2","writeStartCompletedSuspenseBoundary","writeStartPendingSuspenseBoundary","writeStartClientRenderedSuspenseBoundary","errorDigest","errorMesssage","errorComponentStack","writeEndCompletedSuspenseBoundary","writeEndPendingSuspenseBoundary","writeEndClientRenderedSuspenseBoundary","startSegmentHTML","startSegmentHTML2","endSegmentHTML","startSegmentSVG","startSegmentSVG2","endSegmentSVG","startSegmentMathML","startSegmentMathML2","endSegmentMathML","startSegmentTable","startSegmentTable2","endSegmentTable","startSegmentTableBody","startSegmentTableBody2","endSegmentTableBody","startSegmentTableRow","startSegmentTableRow2","endSegmentTableRow","startSegmentColGroup","startSegmentColGroup2","endSegmentColGroup","writeStartSegment","writeEndSegment","completeSegmentFunction","completeBoundaryFunction","clientRenderFunction","completeSegmentScript1Full","completeSegmentScript1Partial","completeSegmentScript2","completeSegmentScript3","writeCompletedSegmentInstruction","contentSegmentID","completeBoundaryScript1Full","completeBoundaryScript1Partial","completeBoundaryScript2","completeBoundaryScript3","writeCompletedBoundaryInstruction","boundaryID","formattedContentID","clientRenderScript1Full","clientRenderScript1Partial","clientRenderScript1A","clientRenderScript2","clientRenderErrorScriptArgInterstitial","writeClientRenderBoundaryInstruction","errorMessage","escapeJSStringsForInstructionScripts","regexForJSStringsInScripts","input","escaped","JSON","stringify","assign","usePolyfill","enableSymbolFallbackForWWW","Symbol","for","REACT_ELEMENT_TYPE","REACT_PORTAL_TYPE","REACT_FRAGMENT_TYPE","REACT_STRICT_MODE_TYPE","REACT_PROFILER_TYPE","REACT_PROVIDER_TYPE","REACT_CONTEXT_TYPE","REACT_FORWARD_REF_TYPE","REACT_SUSPENSE_TYPE","REACT_SUSPENSE_LIST_TYPE","REACT_MEMO_TYPE","REACT_LAZY_TYPE","REACT_SCOPE_TYPE","REACT_DEBUG_TRACING_MODE_TYPE","REACT_LEGACY_HIDDEN_TYPE","REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED","MAYBE_ITERATOR_SYMBOL","iterator","FAUX_ITERATOR_SYMBOL","getIteratorFn","maybeIterable","maybeIterator","ReactSharedInternals","React","ReactCurrentDispatcher","ReactDebugCurrentFrame","emptyContextObject","rootContextSnapshot","currentActiveSnapshot","popNode","prev","context","_currentValue","parentValue","pushNode","next","popToNearestCommonAncestor","parentPrev","parent","parentNext","popAllPrevious","pushAllNext","popPreviousToCommonLevel","depth","popNextToCommonLevel","switchContext","newSnapshot","pushProvider","nextValue","prevValue","prevNode","newNode","popProvider","prevSnapshot","_defaultValue","getActiveContext","readContext","isPrimaryRenderer","_reactInternals","classComponentUpdater","isMounted","inst","enqueueSetState","payload","callback","internals","getInstance","queue","enqueueReplaceState","enqueueForceUpdate","applyDerivedStateFromProps","instance","ctor","getDerivedStateFromProps","prevState","nextProps","partialState","newState","constructClassInstance","maskedLegacyContext","contextType","callComponentWillMount","oldState","state","componentWillMount","UNSAFE_componentWillMount","processUpdateQueue","internalInstance","oldQueue","oldReplace","nextState","dontMutate","partial","mountClassInstance","newProps","initialState","updater","setInstance","getSnapshotBeforeUpdate","emptyTreeContext","overflow","getTreeId","idWithLeadingBit","getLeadingBit","pushTreeContext","baseContext","totalChildren","baseIdWithLeadingBit","baseOverflow","baseLength","getBitLength","baseId","slot","numberOfOverflowBits","newOverflowBits","newOverflow","restOfBaseId","restOfBaseLength","restOfLength","restOfNewBits","newBits","number","clz32","Math","clz32Fallback","log","LN2","x","asUint","y","objectIs","currentlyRenderingComponent","currentlyRenderingTask","firstWorkInProgressHook","workInProgressHook","isReRender","didScheduleRenderPhaseUpdate","localIdCounter","renderPhaseUpdates","numberOfReRenders","RE_RENDER_LIMIT","resolveCurrentlyRenderingComponent","areHookInputsEqual","nextDeps","prevDeps","createHook","memoizedState","createWorkInProgressHook","prepareToUseHooks","task","componentIdentity","finishHooks","Component","refOrContext","resetHooksState","checkDidRenderIdHook","didRenderIdHook","getCacheForType","resourceType","readContextImpl","useContext","basicStateReducer","action","useState","useReducer","reducer","initialArg","init","dispatch","firstRenderPhaseUpdate","delete","update","last","dispatchAction","bind","useMemo","nextCreate","deps","useRef","initialValue","previousRef","ref","current","useLayoutEffect","create","inputs","lastRenderPhaseUpdate","useCallback","useMutableSource","source","getSnapshot","subscribe","_source","useSyncExternalStore","getServerSnapshot","useDeferredValue","unsupportedStartTransition","useTransition","useId","treeContext","currentResponseState","unsupportedRefresh","useCacheRefresh","noop","Dispatcher","useInsertionEffect","useImperativeHandle","useEffect","useDebugValue","setCurrentResponseState","PENDING","COMPLETED","FLUSHED","ABORTED","ERRORED","OPEN","CLOSING","CLOSED","DEFAULT_PROGRESSIVE_CHUNK_SIZE","defaultErrorHandler","console","createRequest","rootFormatContext","progressiveChunkSize","onError","onAllReady","onShellReady","onShellError","onFatalError","pingedTasks","abortSet","Set","request","status","fatalError","nextSegmentId","allPendingTasks","pendingRootTasks","completedRootSegment","abortableTasks","clientRenderedBoundaries","completedBoundaries","partialBoundaries","rootSegment","createPendingSegment","parentFlushed","rootTask","createTask","pingTask","createSuspenseBoundary","fallbackAbortableTasks","rootSegmentID","pendingTasks","forceClientRender","completedSegments","byteSize","node","blockedBoundary","blockedSegment","legacyContext","ping","add","boundary","chunks","pushFunctionComponentStackInDEV","popComponentStackInDEV","logRecoverableError","renderSuspenseBoundary","pushBuiltInComponentStackInDEV","parentBoundary","parentSegment","fallback","fallbackAbortSet","newBoundary","insertionIndex","boundarySegment","contentRootSegment","renderNode","queueCompletedSegment","suspendedFallbackTask","renderHostElement","segment","prevContext","shouldConstruct","isReactComponent","renderWithHooks","secondArg","finishClassComponent","nextChildren","render","renderNodeDestructive","renderClassComponent","pushClassComponentStackInDEV","maskedContext","renderIndeterminateComponent","hasId","prevTreeContext","resolveDefaultProps","baseProps","defaultProps","propName","renderForwardRef","renderMemo","innerType","resolvedProps","renderElement","renderContextConsumer","newValue","newChildren","renderContextProvider","_context","renderLazyComponent","lazyComponent","_payload","_init","$$typeof","info","renderNodeDestructiveImpl","element","lazyNode","resolvedNode","renderChildrenArray","iteratorFn","step","childString","join","spawnNewSuspendedTask","newSegment","newTask","then","previousFormatContext","previousLegacyContext","previousContext","erroredTask","abortTaskSoft","finishedTask","abortTask","reason","fallbackTask","clear","childSegment","retryTask","performWork","prevDispatcher","prevResponseState","splice","flushCompletedQueues","flushSubtree","segmentID","r","chunkIdx","childIdx","nextChild","flushSegment","contentSegment","flushClientRenderedBoundary","flushSegmentContainer","flushCompletedBoundary","flushPartiallyCompletedSegment","flushPartialBoundary","largeBoundaries","startFlowing","abort","renderToStream","options","startWork","abortStream","stream","renderNextChunk","hasFinished","debug"],"mappings":"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"}