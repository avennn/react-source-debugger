{"version":3,"file":"SchedulerMock-dev.js","sources":["../../packages/scheduler/src/forks/SchedulerFeatureFlags.www.js","../../packages/scheduler/src/SchedulerMinHeap.js","../../packages/scheduler/src/SchedulerPriorities.js","../../packages/scheduler/src/SchedulerProfiling.js","../../packages/scheduler/src/forks/SchedulerMock.js"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nconst dynamicFeatureFlags = require('SchedulerFeatureFlags');\n\n// Re-export dynamic flags from the www version.\nexport const {\n  enableIsInputPending,\n  enableSchedulerDebugging,\n  enableProfiling: enableProfilingFeatureFlag,\n  enableIsInputPendingContinuous,\n  frameYieldMs,\n  continuousYieldMs,\n  maxYieldMs,\n} = dynamicFeatureFlags;\n\nexport const enableProfiling = __PROFILE__ && enableProfilingFeatureFlag;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n */\n\ntype Heap = Array<Node>;\ntype Node = {|\n  id: number,\n  sortIndex: number,\n|};\n\nexport function push(heap: Heap, node: Node): void {\n  const index = heap.length;\n  heap.push(node);\n  siftUp(heap, node, index);\n}\n\nexport function peek(heap: Heap): Node | null {\n  return heap.length === 0 ? null : heap[0];\n}\n\nexport function pop(heap: Heap): Node | null {\n  if (heap.length === 0) {\n    return null;\n  }\n  const first = heap[0];\n  const last = heap.pop();\n  if (last !== first) {\n    heap[0] = last;\n    siftDown(heap, last, 0);\n  }\n  return first;\n}\n\nfunction siftUp(heap, node, i) {\n  let index = i;\n  while (index > 0) {\n    const parentIndex = (index - 1) >>> 1;\n    const parent = heap[parentIndex];\n    if (compare(parent, node) > 0) {\n      // The parent is larger. Swap positions.\n      heap[parentIndex] = node;\n      heap[index] = parent;\n      index = parentIndex;\n    } else {\n      // The parent is smaller. Exit.\n      return;\n    }\n  }\n}\n\nfunction siftDown(heap, node, i) {\n  let index = i;\n  const length = heap.length;\n  const halfLength = length >>> 1;\n  while (index < halfLength) {\n    const leftIndex = (index + 1) * 2 - 1;\n    const left = heap[leftIndex];\n    const rightIndex = leftIndex + 1;\n    const right = heap[rightIndex];\n\n    // If the left or right node is smaller, swap with the smaller of those.\n    if (compare(left, node) < 0) {\n      if (rightIndex < length && compare(right, left) < 0) {\n        heap[index] = right;\n        heap[rightIndex] = node;\n        index = rightIndex;\n      } else {\n        heap[index] = left;\n        heap[leftIndex] = node;\n        index = leftIndex;\n      }\n    } else if (rightIndex < length && compare(right, node) < 0) {\n      heap[index] = right;\n      heap[rightIndex] = node;\n      index = rightIndex;\n    } else {\n      // Neither child is smaller. Exit.\n      return;\n    }\n  }\n}\n\nfunction compare(a, b) {\n  // Compare sort index first, then task id.\n  const diff = a.sortIndex - b.sortIndex;\n  return diff !== 0 ? diff : a.id - b.id;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nexport type PriorityLevel = 0 | 1 | 2 | 3 | 4 | 5;\n\n// TODO: Use symbols?\nexport const NoPriority = 0;\nexport const ImmediatePriority = 1;\nexport const UserBlockingPriority = 2;\nexport const NormalPriority = 3;\nexport const LowPriority = 4;\nexport const IdlePriority = 5;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {PriorityLevel} from './SchedulerPriorities';\nimport {enableProfiling} from './SchedulerFeatureFlags';\n\nlet runIdCounter: number = 0;\nlet mainThreadIdCounter: number = 0;\n\n// Bytes per element is 4\nconst INITIAL_EVENT_LOG_SIZE = 131072;\nconst MAX_EVENT_LOG_SIZE = 524288; // Equivalent to 2 megabytes\n\nlet eventLogSize = 0;\nlet eventLogBuffer = null;\nlet eventLog = null;\nlet eventLogIndex = 0;\n\nconst TaskStartEvent = 1;\nconst TaskCompleteEvent = 2;\nconst TaskErrorEvent = 3;\nconst TaskCancelEvent = 4;\nconst TaskRunEvent = 5;\nconst TaskYieldEvent = 6;\nconst SchedulerSuspendEvent = 7;\nconst SchedulerResumeEvent = 8;\n\nfunction logEvent(entries) {\n  if (eventLog !== null) {\n    const offset = eventLogIndex;\n    eventLogIndex += entries.length;\n    if (eventLogIndex + 1 > eventLogSize) {\n      eventLogSize *= 2;\n      if (eventLogSize > MAX_EVENT_LOG_SIZE) {\n        // Using console['error'] to evade Babel and ESLint\n        console['error'](\n          \"Scheduler Profiling: Event log exceeded maximum size. Don't \" +\n            'forget to call `stopLoggingProfilingEvents()`.',\n        );\n        stopLoggingProfilingEvents();\n        return;\n      }\n      const newEventLog = new Int32Array(eventLogSize * 4);\n      newEventLog.set(eventLog);\n      eventLogBuffer = newEventLog.buffer;\n      eventLog = newEventLog;\n    }\n    eventLog.set(entries, offset);\n  }\n}\n\nexport function startLoggingProfilingEvents(): void {\n  eventLogSize = INITIAL_EVENT_LOG_SIZE;\n  eventLogBuffer = new ArrayBuffer(eventLogSize * 4);\n  eventLog = new Int32Array(eventLogBuffer);\n  eventLogIndex = 0;\n}\n\nexport function stopLoggingProfilingEvents(): ArrayBuffer | null {\n  const buffer = eventLogBuffer;\n  eventLogSize = 0;\n  eventLogBuffer = null;\n  eventLog = null;\n  eventLogIndex = 0;\n  return buffer;\n}\n\nexport function markTaskStart(\n  task: {\n    id: number,\n    priorityLevel: PriorityLevel,\n    ...\n  },\n  ms: number,\n) {\n  if (enableProfiling) {\n    if (eventLog !== null) {\n      // performance.now returns a float, representing milliseconds. When the\n      // event is logged, it's coerced to an int. Convert to microseconds to\n      // maintain extra degrees of precision.\n      logEvent([TaskStartEvent, ms * 1000, task.id, task.priorityLevel]);\n    }\n  }\n}\n\nexport function markTaskCompleted(\n  task: {\n    id: number,\n    priorityLevel: PriorityLevel,\n    ...\n  },\n  ms: number,\n) {\n  if (enableProfiling) {\n    if (eventLog !== null) {\n      logEvent([TaskCompleteEvent, ms * 1000, task.id]);\n    }\n  }\n}\n\nexport function markTaskCanceled(\n  task: {\n    id: number,\n    priorityLevel: PriorityLevel,\n    ...\n  },\n  ms: number,\n) {\n  if (enableProfiling) {\n    if (eventLog !== null) {\n      logEvent([TaskCancelEvent, ms * 1000, task.id]);\n    }\n  }\n}\n\nexport function markTaskErrored(\n  task: {\n    id: number,\n    priorityLevel: PriorityLevel,\n    ...\n  },\n  ms: number,\n) {\n  if (enableProfiling) {\n    if (eventLog !== null) {\n      logEvent([TaskErrorEvent, ms * 1000, task.id]);\n    }\n  }\n}\n\nexport function markTaskRun(\n  task: {\n    id: number,\n    priorityLevel: PriorityLevel,\n    ...\n  },\n  ms: number,\n) {\n  if (enableProfiling) {\n    runIdCounter++;\n\n    if (eventLog !== null) {\n      logEvent([TaskRunEvent, ms * 1000, task.id, runIdCounter]);\n    }\n  }\n}\n\nexport function markTaskYield(task: {id: number, ...}, ms: number) {\n  if (enableProfiling) {\n    if (eventLog !== null) {\n      logEvent([TaskYieldEvent, ms * 1000, task.id, runIdCounter]);\n    }\n  }\n}\n\nexport function markSchedulerSuspended(ms: number) {\n  if (enableProfiling) {\n    mainThreadIdCounter++;\n\n    if (eventLog !== null) {\n      logEvent([SchedulerSuspendEvent, ms * 1000, mainThreadIdCounter]);\n    }\n  }\n}\n\nexport function markSchedulerUnsuspended(ms: number) {\n  if (enableProfiling) {\n    if (eventLog !== null) {\n      logEvent([SchedulerResumeEvent, ms * 1000, mainThreadIdCounter]);\n    }\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n/* eslint-disable no-var */\n/* eslint-disable react-internal/prod-error-codes */\n\nimport {\n  enableSchedulerDebugging,\n  enableProfiling,\n} from '../SchedulerFeatureFlags';\nimport {push, pop, peek} from '../SchedulerMinHeap';\n\n// TODO: Use symbols?\nimport {\n  ImmediatePriority,\n  UserBlockingPriority,\n  NormalPriority,\n  LowPriority,\n  IdlePriority,\n} from '../SchedulerPriorities';\nimport {\n  markTaskRun,\n  markTaskYield,\n  markTaskCompleted,\n  markTaskCanceled,\n  markTaskErrored,\n  markSchedulerSuspended,\n  markSchedulerUnsuspended,\n  markTaskStart,\n  stopLoggingProfilingEvents,\n  startLoggingProfilingEvents,\n} from '../SchedulerProfiling';\n\n// Max 31 bit integer. The max integer size in V8 for 32-bit systems.\n// Math.pow(2, 30) - 1\n// 0b111111111111111111111111111111\nvar maxSigned31BitInt = 1073741823;\n\n// Times out immediately\nvar IMMEDIATE_PRIORITY_TIMEOUT = -1;\n// Eventually times out\nvar USER_BLOCKING_PRIORITY_TIMEOUT = 250;\nvar NORMAL_PRIORITY_TIMEOUT = 5000;\nvar LOW_PRIORITY_TIMEOUT = 10000;\n// Never times out\nvar IDLE_PRIORITY_TIMEOUT = maxSigned31BitInt;\n\n// Tasks are stored on a min heap\nvar taskQueue = [];\nvar timerQueue = [];\n\n// Incrementing id counter. Used to maintain insertion order.\nvar taskIdCounter = 1;\n\n// Pausing the scheduler is useful for debugging.\nvar isSchedulerPaused = false;\n\nvar currentTask = null;\nvar currentPriorityLevel = NormalPriority;\n\n// This is set while performing work, to prevent re-entrance.\nvar isPerformingWork = false;\n\nvar isHostCallbackScheduled = false;\nvar isHostTimeoutScheduled = false;\n\nlet currentMockTime: number = 0;\nlet scheduledCallback: ((boolean, number) => void) | null = null;\nlet scheduledTimeout: (number => void) | null = null;\nlet timeoutTime: number = -1;\nlet yieldedValues: Array<mixed> | null = null;\nlet expectedNumberOfYields: number = -1;\nlet didStop: boolean = false;\nlet isFlushing: boolean = false;\nlet needsPaint: boolean = false;\nlet shouldYieldForPaint: boolean = false;\n\nvar disableYieldValue = false;\n\nfunction setDisableYieldValue(newValue) {\n  disableYieldValue = newValue;\n}\n\nfunction advanceTimers(currentTime) {\n  // Check for tasks that are no longer delayed and add them to the queue.\n  let timer = peek(timerQueue);\n  while (timer !== null) {\n    if (timer.callback === null) {\n      // Timer was cancelled.\n      pop(timerQueue);\n    } else if (timer.startTime <= currentTime) {\n      // Timer fired. Transfer to the task queue.\n      pop(timerQueue);\n      timer.sortIndex = timer.expirationTime;\n      push(taskQueue, timer);\n      if (enableProfiling) {\n        markTaskStart(timer, currentTime);\n        timer.isQueued = true;\n      }\n    } else {\n      // Remaining timers are pending.\n      return;\n    }\n    timer = peek(timerQueue);\n  }\n}\n\nfunction handleTimeout(currentTime) {\n  isHostTimeoutScheduled = false;\n  advanceTimers(currentTime);\n\n  if (!isHostCallbackScheduled) {\n    if (peek(taskQueue) !== null) {\n      isHostCallbackScheduled = true;\n      requestHostCallback(flushWork);\n    } else {\n      const firstTimer = peek(timerQueue);\n      if (firstTimer !== null) {\n        requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);\n      }\n    }\n  }\n}\n\nfunction flushWork(hasTimeRemaining, initialTime) {\n  if (enableProfiling) {\n    markSchedulerUnsuspended(initialTime);\n  }\n\n  // We'll need a host callback the next time work is scheduled.\n  isHostCallbackScheduled = false;\n  if (isHostTimeoutScheduled) {\n    // We scheduled a timeout but it's no longer needed. Cancel it.\n    isHostTimeoutScheduled = false;\n    cancelHostTimeout();\n  }\n\n  isPerformingWork = true;\n  const previousPriorityLevel = currentPriorityLevel;\n  try {\n    if (enableProfiling) {\n      try {\n        return workLoop(hasTimeRemaining, initialTime);\n      } catch (error) {\n        if (currentTask !== null) {\n          const currentTime = getCurrentTime();\n          markTaskErrored(currentTask, currentTime);\n          currentTask.isQueued = false;\n        }\n        throw error;\n      }\n    } else {\n      // No catch in prod code path.\n      return workLoop(hasTimeRemaining, initialTime);\n    }\n  } finally {\n    currentTask = null;\n    currentPriorityLevel = previousPriorityLevel;\n    isPerformingWork = false;\n    if (enableProfiling) {\n      const currentTime = getCurrentTime();\n      markSchedulerSuspended(currentTime);\n    }\n  }\n}\n\nfunction workLoop(hasTimeRemaining, initialTime) {\n  let currentTime = initialTime;\n  advanceTimers(currentTime);\n  currentTask = peek(taskQueue);\n  while (\n    currentTask !== null &&\n    !(enableSchedulerDebugging && isSchedulerPaused)\n  ) {\n    if (\n      currentTask.expirationTime > currentTime &&\n      (!hasTimeRemaining || shouldYieldToHost())\n    ) {\n      // This currentTask hasn't expired, and we've reached the deadline.\n      break;\n    }\n    const callback = currentTask.callback;\n    if (typeof callback === 'function') {\n      currentTask.callback = null;\n      currentPriorityLevel = currentTask.priorityLevel;\n      const didUserCallbackTimeout = currentTask.expirationTime <= currentTime;\n      if (enableProfiling) {\n        markTaskRun(currentTask, currentTime);\n      }\n      const continuationCallback = callback(didUserCallbackTimeout);\n      currentTime = getCurrentTime();\n      if (typeof continuationCallback === 'function') {\n        currentTask.callback = continuationCallback;\n        if (enableProfiling) {\n          markTaskYield(currentTask, currentTime);\n        }\n      } else {\n        if (enableProfiling) {\n          markTaskCompleted(currentTask, currentTime);\n          currentTask.isQueued = false;\n        }\n        if (currentTask === peek(taskQueue)) {\n          pop(taskQueue);\n        }\n      }\n      advanceTimers(currentTime);\n    } else {\n      pop(taskQueue);\n    }\n    currentTask = peek(taskQueue);\n  }\n  // Return whether there's additional work\n  if (currentTask !== null) {\n    return true;\n  } else {\n    const firstTimer = peek(timerQueue);\n    if (firstTimer !== null) {\n      requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);\n    }\n    return false;\n  }\n}\n\nfunction unstable_runWithPriority(priorityLevel, eventHandler) {\n  switch (priorityLevel) {\n    case ImmediatePriority:\n    case UserBlockingPriority:\n    case NormalPriority:\n    case LowPriority:\n    case IdlePriority:\n      break;\n    default:\n      priorityLevel = NormalPriority;\n  }\n\n  var previousPriorityLevel = currentPriorityLevel;\n  currentPriorityLevel = priorityLevel;\n\n  try {\n    return eventHandler();\n  } finally {\n    currentPriorityLevel = previousPriorityLevel;\n  }\n}\n\nfunction unstable_next(eventHandler) {\n  var priorityLevel;\n  switch (currentPriorityLevel) {\n    case ImmediatePriority:\n    case UserBlockingPriority:\n    case NormalPriority:\n      // Shift down to normal priority\n      priorityLevel = NormalPriority;\n      break;\n    default:\n      // Anything lower than normal priority should remain at the current level.\n      priorityLevel = currentPriorityLevel;\n      break;\n  }\n\n  var previousPriorityLevel = currentPriorityLevel;\n  currentPriorityLevel = priorityLevel;\n\n  try {\n    return eventHandler();\n  } finally {\n    currentPriorityLevel = previousPriorityLevel;\n  }\n}\n\nfunction unstable_wrapCallback(callback) {\n  var parentPriorityLevel = currentPriorityLevel;\n  return function() {\n    // This is a fork of runWithPriority, inlined for performance.\n    var previousPriorityLevel = currentPriorityLevel;\n    currentPriorityLevel = parentPriorityLevel;\n\n    try {\n      return callback.apply(this, arguments);\n    } finally {\n      currentPriorityLevel = previousPriorityLevel;\n    }\n  };\n}\n\nfunction unstable_scheduleCallback(priorityLevel, callback, options) {\n  var currentTime = getCurrentTime();\n\n  var startTime;\n  if (typeof options === 'object' && options !== null) {\n    var delay = options.delay;\n    if (typeof delay === 'number' && delay > 0) {\n      startTime = currentTime + delay;\n    } else {\n      startTime = currentTime;\n    }\n  } else {\n    startTime = currentTime;\n  }\n\n  var timeout;\n  switch (priorityLevel) {\n    case ImmediatePriority:\n      timeout = IMMEDIATE_PRIORITY_TIMEOUT;\n      break;\n    case UserBlockingPriority:\n      timeout = USER_BLOCKING_PRIORITY_TIMEOUT;\n      break;\n    case IdlePriority:\n      timeout = IDLE_PRIORITY_TIMEOUT;\n      break;\n    case LowPriority:\n      timeout = LOW_PRIORITY_TIMEOUT;\n      break;\n    case NormalPriority:\n    default:\n      timeout = NORMAL_PRIORITY_TIMEOUT;\n      break;\n  }\n\n  var expirationTime = startTime + timeout;\n\n  var newTask = {\n    id: taskIdCounter++,\n    callback,\n    priorityLevel,\n    startTime,\n    expirationTime,\n    sortIndex: -1,\n  };\n  if (enableProfiling) {\n    newTask.isQueued = false;\n  }\n\n  if (startTime > currentTime) {\n    // This is a delayed task.\n    newTask.sortIndex = startTime;\n    push(timerQueue, newTask);\n    if (peek(taskQueue) === null && newTask === peek(timerQueue)) {\n      // All tasks are delayed, and this is the task with the earliest delay.\n      if (isHostTimeoutScheduled) {\n        // Cancel an existing timeout.\n        cancelHostTimeout();\n      } else {\n        isHostTimeoutScheduled = true;\n      }\n      // Schedule a timeout.\n      requestHostTimeout(handleTimeout, startTime - currentTime);\n    }\n  } else {\n    newTask.sortIndex = expirationTime;\n    push(taskQueue, newTask);\n    if (enableProfiling) {\n      markTaskStart(newTask, currentTime);\n      newTask.isQueued = true;\n    }\n    // Schedule a host callback, if needed. If we're already performing work,\n    // wait until the next time we yield.\n    if (!isHostCallbackScheduled && !isPerformingWork) {\n      isHostCallbackScheduled = true;\n      requestHostCallback(flushWork);\n    }\n  }\n\n  return newTask;\n}\n\nfunction unstable_pauseExecution() {\n  isSchedulerPaused = true;\n}\n\nfunction unstable_continueExecution() {\n  isSchedulerPaused = false;\n  if (!isHostCallbackScheduled && !isPerformingWork) {\n    isHostCallbackScheduled = true;\n    requestHostCallback(flushWork);\n  }\n}\n\nfunction unstable_getFirstCallbackNode() {\n  return peek(taskQueue);\n}\n\nfunction unstable_cancelCallback(task) {\n  if (enableProfiling) {\n    if (task.isQueued) {\n      const currentTime = getCurrentTime();\n      markTaskCanceled(task, currentTime);\n      task.isQueued = false;\n    }\n  }\n\n  // Null out the callback to indicate the task has been canceled. (Can't\n  // remove from the queue because you can't remove arbitrary nodes from an\n  // array based heap, only the first one.)\n  task.callback = null;\n}\n\nfunction unstable_getCurrentPriorityLevel() {\n  return currentPriorityLevel;\n}\n\nfunction requestHostCallback(callback: boolean => void) {\n  scheduledCallback = callback;\n}\n\nfunction requestHostTimeout(callback: number => void, ms: number) {\n  scheduledTimeout = callback;\n  timeoutTime = currentMockTime + ms;\n}\n\nfunction cancelHostTimeout(): void {\n  scheduledTimeout = null;\n  timeoutTime = -1;\n}\n\nfunction shouldYieldToHost(): boolean {\n  if (\n    (expectedNumberOfYields === 0 && yieldedValues === null) ||\n    (expectedNumberOfYields !== -1 &&\n      yieldedValues !== null &&\n      yieldedValues.length >= expectedNumberOfYields) ||\n    (shouldYieldForPaint && needsPaint)\n  ) {\n    // We yielded at least as many values as expected. Stop flushing.\n    didStop = true;\n    return true;\n  }\n  return false;\n}\n\nfunction getCurrentTime(): number {\n  return currentMockTime;\n}\n\nfunction forceFrameRate() {\n  // No-op\n}\n\nfunction reset() {\n  if (isFlushing) {\n    throw new Error('Cannot reset while already flushing work.');\n  }\n  currentMockTime = 0;\n  scheduledCallback = null;\n  scheduledTimeout = null;\n  timeoutTime = -1;\n  yieldedValues = null;\n  expectedNumberOfYields = -1;\n  didStop = false;\n  isFlushing = false;\n  needsPaint = false;\n}\n\n// Should only be used via an assertion helper that inspects the yielded values.\nfunction unstable_flushNumberOfYields(count: number): void {\n  if (isFlushing) {\n    throw new Error('Already flushing work.');\n  }\n  if (scheduledCallback !== null) {\n    const cb = scheduledCallback;\n    expectedNumberOfYields = count;\n    isFlushing = true;\n    try {\n      let hasMoreWork = true;\n      do {\n        hasMoreWork = cb(true, currentMockTime);\n      } while (hasMoreWork && !didStop);\n      if (!hasMoreWork) {\n        scheduledCallback = null;\n      }\n    } finally {\n      expectedNumberOfYields = -1;\n      didStop = false;\n      isFlushing = false;\n    }\n  }\n}\n\nfunction unstable_flushUntilNextPaint(): void {\n  if (isFlushing) {\n    throw new Error('Already flushing work.');\n  }\n  if (scheduledCallback !== null) {\n    const cb = scheduledCallback;\n    shouldYieldForPaint = true;\n    needsPaint = false;\n    isFlushing = true;\n    try {\n      let hasMoreWork = true;\n      do {\n        hasMoreWork = cb(true, currentMockTime);\n      } while (hasMoreWork && !didStop);\n      if (!hasMoreWork) {\n        scheduledCallback = null;\n      }\n    } finally {\n      shouldYieldForPaint = false;\n      didStop = false;\n      isFlushing = false;\n    }\n  }\n}\n\nfunction unstable_flushExpired() {\n  if (isFlushing) {\n    throw new Error('Already flushing work.');\n  }\n  if (scheduledCallback !== null) {\n    isFlushing = true;\n    try {\n      const hasMoreWork = scheduledCallback(false, currentMockTime);\n      if (!hasMoreWork) {\n        scheduledCallback = null;\n      }\n    } finally {\n      isFlushing = false;\n    }\n  }\n}\n\nfunction unstable_flushAllWithoutAsserting(): boolean {\n  // Returns false if no work was flushed.\n  if (isFlushing) {\n    throw new Error('Already flushing work.');\n  }\n  if (scheduledCallback !== null) {\n    const cb = scheduledCallback;\n    isFlushing = true;\n    try {\n      let hasMoreWork = true;\n      do {\n        hasMoreWork = cb(true, currentMockTime);\n      } while (hasMoreWork);\n      if (!hasMoreWork) {\n        scheduledCallback = null;\n      }\n      return true;\n    } finally {\n      isFlushing = false;\n    }\n  } else {\n    return false;\n  }\n}\n\nfunction unstable_clearYields(): Array<mixed> {\n  if (yieldedValues === null) {\n    return [];\n  }\n  const values = yieldedValues;\n  yieldedValues = null;\n  return values;\n}\n\nfunction unstable_flushAll(): void {\n  if (yieldedValues !== null) {\n    throw new Error(\n      'Log is not empty. Assert on the log of yielded values before ' +\n        'flushing additional work.',\n    );\n  }\n  unstable_flushAllWithoutAsserting();\n  if (yieldedValues !== null) {\n    throw new Error(\n      'While flushing work, something yielded a value. Use an ' +\n        'assertion helper to assert on the log of yielded values, e.g. ' +\n        'expect(Scheduler).toFlushAndYield([...])',\n    );\n  }\n}\n\nfunction unstable_yieldValue(value: mixed): void {\n  // eslint-disable-next-line react-internal/no-production-logging\n  if (console.log.name === 'disabledLog' || disableYieldValue) {\n    // If console.log has been patched, we assume we're in render\n    // replaying and we ignore any values yielding in the second pass.\n    return;\n  }\n  if (yieldedValues === null) {\n    yieldedValues = [value];\n  } else {\n    yieldedValues.push(value);\n  }\n}\n\nfunction unstable_advanceTime(ms: number) {\n  // eslint-disable-next-line react-internal/no-production-logging\n  if (console.log.name === 'disabledLog' || disableYieldValue) {\n    // If console.log has been patched, we assume we're in render\n    // replaying and we ignore any time advancing in the second pass.\n    return;\n  }\n  currentMockTime += ms;\n  if (scheduledTimeout !== null && timeoutTime <= currentMockTime) {\n    scheduledTimeout(currentMockTime);\n    timeoutTime = -1;\n    scheduledTimeout = null;\n  }\n}\n\nfunction requestPaint() {\n  needsPaint = true;\n}\n\nexport {\n  ImmediatePriority as unstable_ImmediatePriority,\n  UserBlockingPriority as unstable_UserBlockingPriority,\n  NormalPriority as unstable_NormalPriority,\n  IdlePriority as unstable_IdlePriority,\n  LowPriority as unstable_LowPriority,\n  unstable_runWithPriority,\n  unstable_next,\n  unstable_scheduleCallback,\n  unstable_cancelCallback,\n  unstable_wrapCallback,\n  unstable_getCurrentPriorityLevel,\n  shouldYieldToHost as unstable_shouldYield,\n  requestPaint as unstable_requestPaint,\n  unstable_continueExecution,\n  unstable_pauseExecution,\n  unstable_getFirstCallbackNode,\n  getCurrentTime as unstable_now,\n  forceFrameRate as unstable_forceFrameRate,\n  unstable_flushAllWithoutAsserting,\n  unstable_flushNumberOfYields,\n  unstable_flushExpired,\n  unstable_clearYields,\n  unstable_flushUntilNextPaint,\n  unstable_flushAll,\n  unstable_yieldValue,\n  unstable_advanceTime,\n  reset,\n  setDisableYieldValue as unstable_setDisableYieldValue,\n};\n\nexport const unstable_Profiling = enableProfiling\n  ? {\n      startLoggingProfilingEvents,\n      stopLoggingProfilingEvents,\n    }\n  : null;\n"],"names":["dynamicFeatureFlags","require","enableIsInputPending","enableSchedulerDebugging","enableProfilingFeatureFlag","enableProfiling","enableIsInputPendingContinuous","frameYieldMs","continuousYieldMs","maxYieldMs","push","heap","node","index","length","siftUp","peek","pop","first","last","siftDown","i","parentIndex","parent","compare","halfLength","leftIndex","left","rightIndex","right","a","b","diff","sortIndex","id","ImmediatePriority","UserBlockingPriority","NormalPriority","LowPriority","IdlePriority","runIdCounter","mainThreadIdCounter","INITIAL_EVENT_LOG_SIZE","MAX_EVENT_LOG_SIZE","eventLogSize","eventLogBuffer","eventLog","eventLogIndex","TaskStartEvent","TaskCompleteEvent","TaskErrorEvent","TaskCancelEvent","TaskRunEvent","TaskYieldEvent","SchedulerSuspendEvent","SchedulerResumeEvent","logEvent","entries","offset","console","stopLoggingProfilingEvents","newEventLog","Int32Array","set","buffer","startLoggingProfilingEvents","ArrayBuffer","markTaskStart","task","ms","priorityLevel","markTaskCompleted","markTaskCanceled","markTaskErrored","markTaskRun","markTaskYield","markSchedulerSuspended","markSchedulerUnsuspended","maxSigned31BitInt","IMMEDIATE_PRIORITY_TIMEOUT","USER_BLOCKING_PRIORITY_TIMEOUT","NORMAL_PRIORITY_TIMEOUT","LOW_PRIORITY_TIMEOUT","IDLE_PRIORITY_TIMEOUT","taskQueue","timerQueue","taskIdCounter","isSchedulerPaused","currentTask","currentPriorityLevel","isPerformingWork","isHostCallbackScheduled","isHostTimeoutScheduled","currentMockTime","scheduledCallback","scheduledTimeout","timeoutTime","yieldedValues","expectedNumberOfYields","didStop","isFlushing","needsPaint","shouldYieldForPaint","disableYieldValue","setDisableYieldValue","newValue","advanceTimers","currentTime","timer","callback","startTime","expirationTime","isQueued","handleTimeout","requestHostCallback","flushWork","firstTimer","requestHostTimeout","hasTimeRemaining","initialTime","cancelHostTimeout","previousPriorityLevel","workLoop","error","getCurrentTime","shouldYieldToHost","didUserCallbackTimeout","continuationCallback","unstable_runWithPriority","eventHandler","unstable_next","unstable_wrapCallback","parentPriorityLevel","apply","arguments","unstable_scheduleCallback","options","delay","timeout","newTask","unstable_pauseExecution","unstable_continueExecution","unstable_getFirstCallbackNode","unstable_cancelCallback","unstable_getCurrentPriorityLevel","forceFrameRate","reset","Error","unstable_flushNumberOfYields","count","cb","hasMoreWork","unstable_flushUntilNextPaint","unstable_flushExpired","unstable_flushAllWithoutAsserting","unstable_clearYields","values","unstable_flushAll","unstable_yieldValue","value","log","name","unstable_advanceTime","requestPaint","unstable_Profiling"],"mappings":"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"}