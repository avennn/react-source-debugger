{"version":3,"file":"react-server-dom-webpack-writer.browser.development.server.js","sources":["../../../../packages/shared/ReactSharedInternals.js","../../../../packages/shared/consoleWithStackDev.js","../../../../packages/react-server/src/ReactServerStreamConfigBrowser.js","../../../../packages/react-server/src/ReactFlightServerConfigStream.js","../../../../packages/react-server-dom-webpack/src/ReactFlightServerWebpackBundlerConfig.js","../../../../packages/shared/ReactSymbols.js","../../../../packages/react-dom/src/shared/DOMProperty.js","../../../../packages/react-dom/src/shared/CSSProperty.js","../../../../packages/shared/isArray.js","../../../../packages/react-dom/src/server/ReactDOMServerFormatConfig.js","../../../../packages/react-server/src/ReactFlightNewContext.js","../../../../packages/react-server/src/ReactFlightHooks.js","../../../../packages/shared/ReactServerContextRegistry.js","../../../../packages/react-server/src/ReactFlightServer.js","../../../../packages/react-server-dom-webpack/src/ReactFlightDOMServerBrowser.js"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport * as React from 'react';\n\nconst ReactSharedInternals =\n  React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n\nexport default ReactSharedInternals;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\n\nlet suppressWarning = false;\nexport function setSuppressWarning(newSuppressWarning) {\n  if (__DEV__) {\n    suppressWarning = newSuppressWarning;\n  }\n}\n\n// In DEV, calls to console.warn and console.error get replaced\n// by calls to these methods by a Babel plugin.\n//\n// In PROD (or in packages without access to React internals),\n// they are left as they are instead.\n\nexport function warn(format, ...args) {\n  if (__DEV__) {\n    if (!suppressWarning) {\n      printWarning('warn', format, args);\n    }\n  }\n}\n\nexport function error(format, ...args) {\n  if (__DEV__) {\n    if (!suppressWarning) {\n      printWarning('error', format, args);\n    }\n  }\n}\n\nfunction printWarning(level, format, args) {\n  // When changing this logic, you might want to also\n  // update consoleWithStackDev.www.js as well.\n  if (__DEV__) {\n    const ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    const stack = ReactDebugCurrentFrame.getStackAddendum();\n    if (stack !== '') {\n      format += '%s';\n      args = args.concat([stack]);\n    }\n\n    // eslint-disable-next-line react-internal/safe-string-coercion\n    const argsWithFormat = args.map(item => String(item));\n    // Careful: RN currently depends on this prefix\n    argsWithFormat.unshift('Warning: ' + format);\n    // We intentionally don't use spread (or .apply) directly because it\n    // breaks IE9: https://github.com/facebook/react/issues/13610\n    // eslint-disable-next-line react-internal/no-production-logging\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nexport type Destination = ReadableStreamController;\n\nexport type PrecomputedChunk = Uint8Array;\nexport type Chunk = Uint8Array;\n\nexport function scheduleWork(callback: () => void) {\n  callback();\n}\n\nexport function flushBuffered(destination: Destination) {\n  // WHATWG Streams do not yet have a way to flush the underlying\n  // transform streams. https://github.com/whatwg/streams/issues/960\n}\n\nconst VIEW_SIZE = 512;\nlet currentView = null;\nlet writtenBytes = 0;\n\nexport function beginWriting(destination: Destination) {\n  currentView = new Uint8Array(VIEW_SIZE);\n  writtenBytes = 0;\n}\n\nexport function writeChunk(\n  destination: Destination,\n  chunk: PrecomputedChunk | Chunk,\n): void {\n  if (chunk.length === 0) {\n    return;\n  }\n\n  if (chunk.length > VIEW_SIZE) {\n    // this chunk may overflow a single view which implies it was not\n    // one that is cached by the streaming renderer. We will enqueu\n    // it directly and expect it is not re-used\n    if (writtenBytes > 0) {\n      destination.enqueue(\n        new Uint8Array(\n          ((currentView: any): Uint8Array).buffer,\n          0,\n          writtenBytes,\n        ),\n      );\n      currentView = new Uint8Array(VIEW_SIZE);\n      writtenBytes = 0;\n    }\n    destination.enqueue(chunk);\n    return;\n  }\n\n  let bytesToWrite = chunk;\n  const allowableBytes = ((currentView: any): Uint8Array).length - writtenBytes;\n  if (allowableBytes < bytesToWrite.length) {\n    // this chunk would overflow the current view. We enqueue a full view\n    // and start a new view with the remaining chunk\n    if (allowableBytes === 0) {\n      // the current view is already full, send it\n      destination.enqueue(currentView);\n    } else {\n      // fill up the current view and apply the remaining chunk bytes\n      // to a new view.\n      ((currentView: any): Uint8Array).set(\n        bytesToWrite.subarray(0, allowableBytes),\n        writtenBytes,\n      );\n      // writtenBytes += allowableBytes; // this can be skipped because we are going to immediately reset the view\n      destination.enqueue(currentView);\n      bytesToWrite = bytesToWrite.subarray(allowableBytes);\n    }\n    currentView = new Uint8Array(VIEW_SIZE);\n    writtenBytes = 0;\n  }\n  ((currentView: any): Uint8Array).set(bytesToWrite, writtenBytes);\n  writtenBytes += bytesToWrite.length;\n}\n\nexport function writeChunkAndReturn(\n  destination: Destination,\n  chunk: PrecomputedChunk | Chunk,\n): boolean {\n  writeChunk(destination, chunk);\n  // in web streams there is no backpressure so we can alwas write more\n  return true;\n}\n\nexport function completeWriting(destination: Destination) {\n  if (currentView && writtenBytes > 0) {\n    destination.enqueue(new Uint8Array(currentView.buffer, 0, writtenBytes));\n    currentView = null;\n    writtenBytes = 0;\n  }\n}\n\nexport function close(destination: Destination) {\n  destination.close();\n}\n\nconst textEncoder = new TextEncoder();\n\nexport function stringToChunk(content: string): Chunk {\n  return textEncoder.encode(content);\n}\n\nexport function stringToPrecomputedChunk(content: string): PrecomputedChunk {\n  return textEncoder.encode(content);\n}\n\nexport function closeWithError(destination: Destination, error: mixed): void {\n  if (typeof destination.error === 'function') {\n    // $FlowFixMe: This is an Error object or the destination accepts other types.\n    destination.error(error);\n  } else {\n    // Earlier implementations doesn't support this method. In that environment you're\n    // supposed to throw from a promise returned but we don't return a promise in our\n    // approach. We could fork this implementation but this is environment is an edge\n    // case to begin with. It's even less common to run this in an older environment.\n    // Even then, this is not where errors are supposed to happen and they get reported\n    // to a global callback in addition to this anyway. So it's fine just to close this.\n    destination.close();\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\n// This file is an intermediate layer to translate between Flight\n// calls to stream output over a binary stream.\n\n/*\nFLIGHT PROTOCOL GRAMMAR\n\nResponse\n- RowSequence\n\nRowSequence\n- Row RowSequence\n- Row\n\nRow\n- \"J\" RowID JSONData\n- \"M\" RowID JSONModuleData\n- \"H\" RowID HTMLData\n- \"B\" RowID BlobData\n- \"U\" RowID URLData\n- \"E\" RowID ErrorData\n\nRowID\n- HexDigits \":\"\n\nHexDigits\n- HexDigit HexDigits\n- HexDigit\n\nHexDigit\n- 0-F\n\nURLData\n- (UTF8 encoded URL) \"\\n\"\n\nErrorData\n- (UTF8 encoded JSON: {message: \"...\", stack: \"...\"}) \"\\n\"\n\nJSONData\n- (UTF8 encoded JSON) \"\\n\"\n  - String values that begin with $ are escaped with a \"$\" prefix.\n  - References to other rows are encoding as JSONReference strings.\n\nJSONReference\n- \"$\" HexDigits\n\nHTMLData\n- ByteSize (UTF8 encoded HTML)\n\nBlobData\n- ByteSize (Binary Data)\n\nByteSize\n- (unsigned 32-bit integer)\n*/\n\n// TODO: Implement HTMLData, BlobData and URLData.\n\nimport type {Request, ReactModel} from 'react-server/src/ReactFlightServer';\n\nimport {stringToChunk} from './ReactServerStreamConfig';\n\nimport type {Chunk} from './ReactServerStreamConfig';\n\nexport type {Destination, Chunk} from './ReactServerStreamConfig';\n\nconst stringify = JSON.stringify;\n\nfunction serializeRowHeader(tag: string, id: number) {\n  return tag + id.toString(16) + ':';\n}\n\nexport function processErrorChunk(\n  request: Request,\n  id: number,\n  message: string,\n  stack: string,\n): Chunk {\n  const errorInfo = {message, stack};\n  const row = serializeRowHeader('E', id) + stringify(errorInfo) + '\\n';\n  return stringToChunk(row);\n}\n\nexport function processModelChunk(\n  request: Request,\n  id: number,\n  model: ReactModel,\n): Chunk {\n  const json = stringify(model, request.toJSON);\n  const row = serializeRowHeader('J', id) + json + '\\n';\n  return stringToChunk(row);\n}\n\nexport function processModuleChunk(\n  request: Request,\n  id: number,\n  moduleMetaData: ReactModel,\n): Chunk {\n  const json = stringify(moduleMetaData);\n  const row = serializeRowHeader('M', id) + json + '\\n';\n  return stringToChunk(row);\n}\n\nexport function processProviderChunk(\n  request: Request,\n  id: number,\n  contextName: string,\n): Chunk {\n  const row = serializeRowHeader('P', id) + contextName + '\\n';\n  return stringToChunk(row);\n}\n\nexport function processSymbolChunk(\n  request: Request,\n  id: number,\n  name: string,\n): Chunk {\n  const json = stringify(name);\n  const row = serializeRowHeader('S', id) + json + '\\n';\n  return stringToChunk(row);\n}\n\nexport {\n  scheduleWork,\n  flushBuffered,\n  beginWriting,\n  writeChunk,\n  writeChunkAndReturn,\n  completeWriting,\n  close,\n  closeWithError,\n} from './ReactServerStreamConfig';\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\ntype WebpackMap = {\n  [filepath: string]: {\n    [name: string]: ModuleMetaData,\n  },\n};\n\nexport type BundlerConfig = WebpackMap;\n\n// eslint-disable-next-line no-unused-vars\nexport type ModuleReference<T> = {\n  $$typeof: Symbol,\n  filepath: string,\n  name: string,\n};\n\nexport type ModuleMetaData = {\n  id: string,\n  chunks: Array<string>,\n  name: string,\n};\n\nexport type ModuleKey = string;\n\nconst MODULE_TAG = Symbol.for('react.module.reference');\n\nexport function getModuleKey(reference: ModuleReference<any>): ModuleKey {\n  return reference.filepath + '#' + reference.name;\n}\n\nexport function isModuleReference(reference: Object): boolean {\n  return reference.$$typeof === MODULE_TAG;\n}\n\nexport function resolveModuleMetaData<T>(\n  config: BundlerConfig,\n  moduleReference: ModuleReference<T>,\n): ModuleMetaData {\n  return config[moduleReference.filepath][moduleReference.name];\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\n// ATTENTION\n// When adding new symbols to this file,\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n\n// The Symbol used to tag the ReactElement-like types.\nexport const REACT_ELEMENT_TYPE = Symbol.for('react.element');\nexport const REACT_PORTAL_TYPE = Symbol.for('react.portal');\nexport const REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');\nexport const REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');\nexport const REACT_PROFILER_TYPE = Symbol.for('react.profiler');\nexport const REACT_PROVIDER_TYPE = Symbol.for('react.provider');\nexport const REACT_CONTEXT_TYPE = Symbol.for('react.context');\nexport const REACT_SERVER_CONTEXT_TYPE = Symbol.for('react.server_context');\nexport const REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');\nexport const REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');\nexport const REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');\nexport const REACT_MEMO_TYPE = Symbol.for('react.memo');\nexport const REACT_LAZY_TYPE = Symbol.for('react.lazy');\nexport const REACT_SCOPE_TYPE = Symbol.for('react.scope');\nexport const REACT_DEBUG_TRACING_MODE_TYPE = Symbol.for(\n  'react.debug_trace_mode',\n);\nexport const REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');\nexport const REACT_LEGACY_HIDDEN_TYPE = Symbol.for('react.legacy_hidden');\nexport const REACT_CACHE_TYPE = Symbol.for('react.cache');\nexport const REACT_TRACING_MARKER_TYPE = Symbol.for('react.tracing_marker');\nexport const REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED = Symbol.for(\n  'react.default_value',\n);\n\nconst MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nconst FAUX_ITERATOR_SYMBOL = '@@iterator';\n\nexport function getIteratorFn(maybeIterable: ?any): ?() => ?Iterator<*> {\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\n    return null;\n  }\n  const maybeIterator =\n    (MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL]) ||\n    maybeIterable[FAUX_ITERATOR_SYMBOL];\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n  return null;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport {\n  enableFilterEmptyStringAttributesDOM,\n  enableCustomElementPropertySupport,\n} from 'shared/ReactFeatureFlags';\nimport hasOwnProperty from 'shared/hasOwnProperty';\n\ntype PropertyType = 0 | 1 | 2 | 3 | 4 | 5 | 6;\n\n// A reserved attribute.\n// It is handled by React separately and shouldn't be written to the DOM.\nexport const RESERVED = 0;\n\n// A simple string attribute.\n// Attributes that aren't in the filter are presumed to have this type.\nexport const STRING = 1;\n\n// A string attribute that accepts booleans in React. In HTML, these are called\n// \"enumerated\" attributes with \"true\" and \"false\" as possible values.\n// When true, it should be set to a \"true\" string.\n// When false, it should be set to a \"false\" string.\nexport const BOOLEANISH_STRING = 2;\n\n// A real boolean attribute.\n// When true, it should be present (set either to an empty string or its name).\n// When false, it should be omitted.\nexport const BOOLEAN = 3;\n\n// An attribute that can be used as a flag as well as with a value.\n// When true, it should be present (set either to an empty string or its name).\n// When false, it should be omitted.\n// For any other value, should be present with that value.\nexport const OVERLOADED_BOOLEAN = 4;\n\n// An attribute that must be numeric or parse as a numeric.\n// When falsy, it should be removed.\nexport const NUMERIC = 5;\n\n// An attribute that must be positive numeric or parse as a positive numeric.\n// When falsy, it should be removed.\nexport const POSITIVE_NUMERIC = 6;\n\nexport type PropertyInfo = {|\n  +acceptsBooleans: boolean,\n  +attributeName: string,\n  +attributeNamespace: string | null,\n  +mustUseProperty: boolean,\n  +propertyName: string,\n  +type: PropertyType,\n  +sanitizeURL: boolean,\n  +removeEmptyString: boolean,\n|};\n\n/* eslint-disable max-len */\nexport const ATTRIBUTE_NAME_START_CHAR =\n  ':A-Z_a-z\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD';\n/* eslint-enable max-len */\nexport const ATTRIBUTE_NAME_CHAR =\n  ATTRIBUTE_NAME_START_CHAR + '\\\\-.0-9\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040';\n\nexport const VALID_ATTRIBUTE_NAME_REGEX = new RegExp(\n  '^[' + ATTRIBUTE_NAME_START_CHAR + '][' + ATTRIBUTE_NAME_CHAR + ']*$',\n);\n\nconst illegalAttributeNameCache = {};\nconst validatedAttributeNameCache = {};\n\nexport function isAttributeNameSafe(attributeName: string): boolean {\n  if (hasOwnProperty.call(validatedAttributeNameCache, attributeName)) {\n    return true;\n  }\n  if (hasOwnProperty.call(illegalAttributeNameCache, attributeName)) {\n    return false;\n  }\n  if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)) {\n    validatedAttributeNameCache[attributeName] = true;\n    return true;\n  }\n  illegalAttributeNameCache[attributeName] = true;\n  if (__DEV__) {\n    console.error('Invalid attribute name: `%s`', attributeName);\n  }\n  return false;\n}\n\nexport function shouldIgnoreAttribute(\n  name: string,\n  propertyInfo: PropertyInfo | null,\n  isCustomComponentTag: boolean,\n): boolean {\n  if (propertyInfo !== null) {\n    return propertyInfo.type === RESERVED;\n  }\n  if (isCustomComponentTag) {\n    return false;\n  }\n  if (\n    name.length > 2 &&\n    (name[0] === 'o' || name[0] === 'O') &&\n    (name[1] === 'n' || name[1] === 'N')\n  ) {\n    return true;\n  }\n  return false;\n}\n\nexport function shouldRemoveAttributeWithWarning(\n  name: string,\n  value: mixed,\n  propertyInfo: PropertyInfo | null,\n  isCustomComponentTag: boolean,\n): boolean {\n  if (propertyInfo !== null && propertyInfo.type === RESERVED) {\n    return false;\n  }\n  switch (typeof value) {\n    case 'function':\n    // $FlowIssue symbol is perfectly valid here\n    case 'symbol': // eslint-disable-line\n      return true;\n    case 'boolean': {\n      if (isCustomComponentTag) {\n        return false;\n      }\n      if (propertyInfo !== null) {\n        return !propertyInfo.acceptsBooleans;\n      } else {\n        const prefix = name.toLowerCase().slice(0, 5);\n        return prefix !== 'data-' && prefix !== 'aria-';\n      }\n    }\n    default:\n      return false;\n  }\n}\n\nexport function shouldRemoveAttribute(\n  name: string,\n  value: mixed,\n  propertyInfo: PropertyInfo | null,\n  isCustomComponentTag: boolean,\n): boolean {\n  if (value === null || typeof value === 'undefined') {\n    return true;\n  }\n  if (\n    shouldRemoveAttributeWithWarning(\n      name,\n      value,\n      propertyInfo,\n      isCustomComponentTag,\n    )\n  ) {\n    return true;\n  }\n  if (isCustomComponentTag) {\n    if (enableCustomElementPropertySupport) {\n      if (value === false) {\n        return true;\n      }\n    }\n    return false;\n  }\n  if (propertyInfo !== null) {\n    if (enableFilterEmptyStringAttributesDOM) {\n      if (propertyInfo.removeEmptyString && value === '') {\n        if (__DEV__) {\n          if (name === 'src') {\n            console.error(\n              'An empty string (\"\") was passed to the %s attribute. ' +\n                'This may cause the browser to download the whole page again over the network. ' +\n                'To fix this, either do not render the element at all ' +\n                'or pass null to %s instead of an empty string.',\n              name,\n              name,\n            );\n          } else {\n            console.error(\n              'An empty string (\"\") was passed to the %s attribute. ' +\n                'To fix this, either do not render the element at all ' +\n                'or pass null to %s instead of an empty string.',\n              name,\n              name,\n            );\n          }\n        }\n        return true;\n      }\n    }\n\n    switch (propertyInfo.type) {\n      case BOOLEAN:\n        return !value;\n      case OVERLOADED_BOOLEAN:\n        return value === false;\n      case NUMERIC:\n        return isNaN(value);\n      case POSITIVE_NUMERIC:\n        return isNaN(value) || (value: any) < 1;\n    }\n  }\n  return false;\n}\n\nexport function getPropertyInfo(name: string): PropertyInfo | null {\n  return properties.hasOwnProperty(name) ? properties[name] : null;\n}\n\nfunction PropertyInfoRecord(\n  name: string,\n  type: PropertyType,\n  mustUseProperty: boolean,\n  attributeName: string,\n  attributeNamespace: string | null,\n  sanitizeURL: boolean,\n  removeEmptyString: boolean,\n) {\n  this.acceptsBooleans =\n    type === BOOLEANISH_STRING ||\n    type === BOOLEAN ||\n    type === OVERLOADED_BOOLEAN;\n  this.attributeName = attributeName;\n  this.attributeNamespace = attributeNamespace;\n  this.mustUseProperty = mustUseProperty;\n  this.propertyName = name;\n  this.type = type;\n  this.sanitizeURL = sanitizeURL;\n  this.removeEmptyString = removeEmptyString;\n}\n\n// When adding attributes to this list, be sure to also add them to\n// the `possibleStandardNames` module to ensure casing and incorrect\n// name warnings.\nconst properties = {};\n\n// These props are reserved by React. They shouldn't be written to the DOM.\nconst reservedProps = [\n  'children',\n  'dangerouslySetInnerHTML',\n  // TODO: This prevents the assignment of defaultValue to regular\n  // elements (not just inputs). Now that ReactDOMInput assigns to the\n  // defaultValue property -- do we need this?\n  'defaultValue',\n  'defaultChecked',\n  'innerHTML',\n  'suppressContentEditableWarning',\n  'suppressHydrationWarning',\n  'style',\n];\nif (enableCustomElementPropertySupport) {\n  reservedProps.push('innerText', 'textContent');\n}\n\nreservedProps.forEach(name => {\n  properties[name] = new PropertyInfoRecord(\n    name,\n    RESERVED,\n    false, // mustUseProperty\n    name, // attributeName\n    null, // attributeNamespace\n    false, // sanitizeURL\n    false, // removeEmptyString\n  );\n});\n\n// A few React string attributes have a different name.\n// This is a mapping from React prop names to the attribute names.\n[\n  ['acceptCharset', 'accept-charset'],\n  ['className', 'class'],\n  ['htmlFor', 'for'],\n  ['httpEquiv', 'http-equiv'],\n].forEach(([name, attributeName]) => {\n  properties[name] = new PropertyInfoRecord(\n    name,\n    STRING,\n    false, // mustUseProperty\n    attributeName, // attributeName\n    null, // attributeNamespace\n    false, // sanitizeURL\n    false, // removeEmptyString\n  );\n});\n\n// These are \"enumerated\" HTML attributes that accept \"true\" and \"false\".\n// In React, we let users pass `true` and `false` even though technically\n// these aren't boolean attributes (they are coerced to strings).\n['contentEditable', 'draggable', 'spellCheck', 'value'].forEach(name => {\n  properties[name] = new PropertyInfoRecord(\n    name,\n    BOOLEANISH_STRING,\n    false, // mustUseProperty\n    name.toLowerCase(), // attributeName\n    null, // attributeNamespace\n    false, // sanitizeURL\n    false, // removeEmptyString\n  );\n});\n\n// These are \"enumerated\" SVG attributes that accept \"true\" and \"false\".\n// In React, we let users pass `true` and `false` even though technically\n// these aren't boolean attributes (they are coerced to strings).\n// Since these are SVG attributes, their attribute names are case-sensitive.\n[\n  'autoReverse',\n  'externalResourcesRequired',\n  'focusable',\n  'preserveAlpha',\n].forEach(name => {\n  properties[name] = new PropertyInfoRecord(\n    name,\n    BOOLEANISH_STRING,\n    false, // mustUseProperty\n    name, // attributeName\n    null, // attributeNamespace\n    false, // sanitizeURL\n    false, // removeEmptyString\n  );\n});\n\n// These are HTML boolean attributes.\n[\n  'allowFullScreen',\n  'async',\n  // Note: there is a special case that prevents it from being written to the DOM\n  // on the client side because the browsers are inconsistent. Instead we call focus().\n  'autoFocus',\n  'autoPlay',\n  'controls',\n  'default',\n  'defer',\n  'disabled',\n  'disablePictureInPicture',\n  'disableRemotePlayback',\n  'formNoValidate',\n  'hidden',\n  'loop',\n  'noModule',\n  'noValidate',\n  'open',\n  'playsInline',\n  'readOnly',\n  'required',\n  'reversed',\n  'scoped',\n  'seamless',\n  // Microdata\n  'itemScope',\n].forEach(name => {\n  properties[name] = new PropertyInfoRecord(\n    name,\n    BOOLEAN,\n    false, // mustUseProperty\n    name.toLowerCase(), // attributeName\n    null, // attributeNamespace\n    false, // sanitizeURL\n    false, // removeEmptyString\n  );\n});\n\n// These are the few React props that we set as DOM properties\n// rather than attributes. These are all booleans.\n[\n  'checked',\n  // Note: `option.selected` is not updated if `select.multiple` is\n  // disabled with `removeAttribute`. We have special logic for handling this.\n  'multiple',\n  'muted',\n  'selected',\n\n  // NOTE: if you add a camelCased prop to this list,\n  // you'll need to set attributeName to name.toLowerCase()\n  // instead in the assignment below.\n].forEach(name => {\n  properties[name] = new PropertyInfoRecord(\n    name,\n    BOOLEAN,\n    true, // mustUseProperty\n    name, // attributeName\n    null, // attributeNamespace\n    false, // sanitizeURL\n    false, // removeEmptyString\n  );\n});\n\n// These are HTML attributes that are \"overloaded booleans\": they behave like\n// booleans, but can also accept a string value.\n[\n  'capture',\n  'download',\n\n  // NOTE: if you add a camelCased prop to this list,\n  // you'll need to set attributeName to name.toLowerCase()\n  // instead in the assignment below.\n].forEach(name => {\n  properties[name] = new PropertyInfoRecord(\n    name,\n    OVERLOADED_BOOLEAN,\n    false, // mustUseProperty\n    name, // attributeName\n    null, // attributeNamespace\n    false, // sanitizeURL\n    false, // removeEmptyString\n  );\n});\n\n// These are HTML attributes that must be positive numbers.\n[\n  'cols',\n  'rows',\n  'size',\n  'span',\n\n  // NOTE: if you add a camelCased prop to this list,\n  // you'll need to set attributeName to name.toLowerCase()\n  // instead in the assignment below.\n].forEach(name => {\n  properties[name] = new PropertyInfoRecord(\n    name,\n    POSITIVE_NUMERIC,\n    false, // mustUseProperty\n    name, // attributeName\n    null, // attributeNamespace\n    false, // sanitizeURL\n    false, // removeEmptyString\n  );\n});\n\n// These are HTML attributes that must be numbers.\n['rowSpan', 'start'].forEach(name => {\n  properties[name] = new PropertyInfoRecord(\n    name,\n    NUMERIC,\n    false, // mustUseProperty\n    name.toLowerCase(), // attributeName\n    null, // attributeNamespace\n    false, // sanitizeURL\n    false, // removeEmptyString\n  );\n});\n\nconst CAMELIZE = /[\\-\\:]([a-z])/g;\nconst capitalize = token => token[1].toUpperCase();\n\n// This is a list of all SVG attributes that need special casing, namespacing,\n// or boolean value assignment. Regular attributes that just accept strings\n// and have the same names are omitted, just like in the HTML attribute filter.\n// Some of these attributes can be hard to find. This list was created by\n// scraping the MDN documentation.\n[\n  'accent-height',\n  'alignment-baseline',\n  'arabic-form',\n  'baseline-shift',\n  'cap-height',\n  'clip-path',\n  'clip-rule',\n  'color-interpolation',\n  'color-interpolation-filters',\n  'color-profile',\n  'color-rendering',\n  'dominant-baseline',\n  'enable-background',\n  'fill-opacity',\n  'fill-rule',\n  'flood-color',\n  'flood-opacity',\n  'font-family',\n  'font-size',\n  'font-size-adjust',\n  'font-stretch',\n  'font-style',\n  'font-variant',\n  'font-weight',\n  'glyph-name',\n  'glyph-orientation-horizontal',\n  'glyph-orientation-vertical',\n  'horiz-adv-x',\n  'horiz-origin-x',\n  'image-rendering',\n  'letter-spacing',\n  'lighting-color',\n  'marker-end',\n  'marker-mid',\n  'marker-start',\n  'overline-position',\n  'overline-thickness',\n  'paint-order',\n  'panose-1',\n  'pointer-events',\n  'rendering-intent',\n  'shape-rendering',\n  'stop-color',\n  'stop-opacity',\n  'strikethrough-position',\n  'strikethrough-thickness',\n  'stroke-dasharray',\n  'stroke-dashoffset',\n  'stroke-linecap',\n  'stroke-linejoin',\n  'stroke-miterlimit',\n  'stroke-opacity',\n  'stroke-width',\n  'text-anchor',\n  'text-decoration',\n  'text-rendering',\n  'underline-position',\n  'underline-thickness',\n  'unicode-bidi',\n  'unicode-range',\n  'units-per-em',\n  'v-alphabetic',\n  'v-hanging',\n  'v-ideographic',\n  'v-mathematical',\n  'vector-effect',\n  'vert-adv-y',\n  'vert-origin-x',\n  'vert-origin-y',\n  'word-spacing',\n  'writing-mode',\n  'xmlns:xlink',\n  'x-height',\n\n  // NOTE: if you add a camelCased prop to this list,\n  // you'll need to set attributeName to name.toLowerCase()\n  // instead in the assignment below.\n].forEach(attributeName => {\n  const name = attributeName.replace(CAMELIZE, capitalize);\n  properties[name] = new PropertyInfoRecord(\n    name,\n    STRING,\n    false, // mustUseProperty\n    attributeName,\n    null, // attributeNamespace\n    false, // sanitizeURL\n    false, // removeEmptyString\n  );\n});\n\n// String SVG attributes with the xlink namespace.\n[\n  'xlink:actuate',\n  'xlink:arcrole',\n  'xlink:role',\n  'xlink:show',\n  'xlink:title',\n  'xlink:type',\n\n  // NOTE: if you add a camelCased prop to this list,\n  // you'll need to set attributeName to name.toLowerCase()\n  // instead in the assignment below.\n].forEach(attributeName => {\n  const name = attributeName.replace(CAMELIZE, capitalize);\n  properties[name] = new PropertyInfoRecord(\n    name,\n    STRING,\n    false, // mustUseProperty\n    attributeName,\n    'http://www.w3.org/1999/xlink',\n    false, // sanitizeURL\n    false, // removeEmptyString\n  );\n});\n\n// String SVG attributes with the xml namespace.\n[\n  'xml:base',\n  'xml:lang',\n  'xml:space',\n\n  // NOTE: if you add a camelCased prop to this list,\n  // you'll need to set attributeName to name.toLowerCase()\n  // instead in the assignment below.\n].forEach(attributeName => {\n  const name = attributeName.replace(CAMELIZE, capitalize);\n  properties[name] = new PropertyInfoRecord(\n    name,\n    STRING,\n    false, // mustUseProperty\n    attributeName,\n    'http://www.w3.org/XML/1998/namespace',\n    false, // sanitizeURL\n    false, // removeEmptyString\n  );\n});\n\n// These attribute exists both in HTML and SVG.\n// The attribute name is case-sensitive in SVG so we can't just use\n// the React name like we do for attributes that exist only in HTML.\n['tabIndex', 'crossOrigin'].forEach(attributeName => {\n  properties[attributeName] = new PropertyInfoRecord(\n    attributeName,\n    STRING,\n    false, // mustUseProperty\n    attributeName.toLowerCase(), // attributeName\n    null, // attributeNamespace\n    false, // sanitizeURL\n    false, // removeEmptyString\n  );\n});\n\n// These attributes accept URLs. These must not allow javascript: URLS.\n// These will also need to accept Trusted Types object in the future.\nconst xlinkHref = 'xlinkHref';\nproperties[xlinkHref] = new PropertyInfoRecord(\n  'xlinkHref',\n  STRING,\n  false, // mustUseProperty\n  'xlink:href',\n  'http://www.w3.org/1999/xlink',\n  true, // sanitizeURL\n  false, // removeEmptyString\n);\n\n['src', 'href', 'action', 'formAction'].forEach(attributeName => {\n  properties[attributeName] = new PropertyInfoRecord(\n    attributeName,\n    STRING,\n    false, // mustUseProperty\n    attributeName.toLowerCase(), // attributeName\n    null, // attributeNamespace\n    true, // sanitizeURL\n    true, // removeEmptyString\n  );\n});\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/**\n * CSS properties which accept numbers but are not in units of \"px\".\n */\nexport const isUnitlessNumber = {\n  animationIterationCount: true,\n  aspectRatio: true,\n  borderImageOutset: true,\n  borderImageSlice: true,\n  borderImageWidth: true,\n  boxFlex: true,\n  boxFlexGroup: true,\n  boxOrdinalGroup: true,\n  columnCount: true,\n  columns: true,\n  flex: true,\n  flexGrow: true,\n  flexPositive: true,\n  flexShrink: true,\n  flexNegative: true,\n  flexOrder: true,\n  gridArea: true,\n  gridRow: true,\n  gridRowEnd: true,\n  gridRowSpan: true,\n  gridRowStart: true,\n  gridColumn: true,\n  gridColumnEnd: true,\n  gridColumnSpan: true,\n  gridColumnStart: true,\n  fontWeight: true,\n  lineClamp: true,\n  lineHeight: true,\n  opacity: true,\n  order: true,\n  orphans: true,\n  tabSize: true,\n  widows: true,\n  zIndex: true,\n  zoom: true,\n\n  // SVG-related properties\n  fillOpacity: true,\n  floodOpacity: true,\n  stopOpacity: true,\n  strokeDasharray: true,\n  strokeDashoffset: true,\n  strokeMiterlimit: true,\n  strokeOpacity: true,\n  strokeWidth: true,\n};\n\n/**\n * @param {string} prefix vendor-specific prefix, eg: Webkit\n * @param {string} key style name, eg: transitionDuration\n * @return {string} style name prefixed with `prefix`, properly camelCased, eg:\n * WebkitTransitionDuration\n */\nfunction prefixKey(prefix, key) {\n  return prefix + key.charAt(0).toUpperCase() + key.substring(1);\n}\n\n/**\n * Support style names that may come passed in prefixed by adding permutations\n * of vendor prefixes.\n */\nconst prefixes = ['Webkit', 'ms', 'Moz', 'O'];\n\n// Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an\n// infinite loop, because it iterates over the newly added props too.\nObject.keys(isUnitlessNumber).forEach(function(prop) {\n  prefixes.forEach(function(prefix) {\n    isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];\n  });\n});\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\ndeclare function isArray(a: mixed): boolean %checks(Array.isArray(a));\n\nconst isArrayImpl = Array.isArray;\n\n// eslint-disable-next-line no-redeclare\nfunction isArray(a: mixed): boolean {\n  return isArrayImpl(a);\n}\n\nexport default isArray;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {ReactNodeList} from 'shared/ReactTypes';\n\nimport {\n  checkHtmlStringCoercion,\n  checkCSSPropertyStringCoercion,\n  checkAttributeStringCoercion,\n} from 'shared/CheckStringCoercion';\n\nimport {Children} from 'react';\n\nimport {\n  enableFilterEmptyStringAttributesDOM,\n  enableCustomElementPropertySupport,\n} from 'shared/ReactFeatureFlags';\n\nimport type {\n  Destination,\n  Chunk,\n  PrecomputedChunk,\n} from 'react-server/src/ReactServerStreamConfig';\n\nimport {\n  writeChunk,\n  writeChunkAndReturn,\n  stringToChunk,\n  stringToPrecomputedChunk,\n} from 'react-server/src/ReactServerStreamConfig';\n\nimport {\n  getPropertyInfo,\n  isAttributeNameSafe,\n  BOOLEAN,\n  OVERLOADED_BOOLEAN,\n  NUMERIC,\n  POSITIVE_NUMERIC,\n} from '../shared/DOMProperty';\nimport {isUnitlessNumber} from '../shared/CSSProperty';\n\nimport {checkControlledValueProps} from '../shared/ReactControlledValuePropTypes';\nimport {validateProperties as validateARIAProperties} from '../shared/ReactDOMInvalidARIAHook';\nimport {validateProperties as validateInputProperties} from '../shared/ReactDOMNullInputValuePropHook';\nimport {validateProperties as validateUnknownProperties} from '../shared/ReactDOMUnknownPropertyHook';\nimport warnValidStyle from '../shared/warnValidStyle';\n\nimport escapeTextForBrowser from './escapeTextForBrowser';\nimport hyphenateStyleName from '../shared/hyphenateStyleName';\nimport hasOwnProperty from 'shared/hasOwnProperty';\nimport sanitizeURL from '../shared/sanitizeURL';\nimport isArray from 'shared/isArray';\n\n// Used to distinguish these contexts from ones used in other renderers.\n// E.g. this can be used to distinguish legacy renderers from this modern one.\nexport const isPrimaryRenderer = true;\n\n// Per response, global state that is not contextual to the rendering subtree.\nexport type ResponseState = {\n  bootstrapChunks: Array<Chunk | PrecomputedChunk>,\n  startInlineScript: PrecomputedChunk,\n  placeholderPrefix: PrecomputedChunk,\n  segmentPrefix: PrecomputedChunk,\n  boundaryPrefix: string,\n  idPrefix: string,\n  nextSuspenseID: number,\n  sentCompleteSegmentFunction: boolean,\n  sentCompleteBoundaryFunction: boolean,\n  sentClientRenderFunction: boolean, // We allow the legacy renderer to extend this object.\n  ...\n};\n\nconst startInlineScript = stringToPrecomputedChunk('<script>');\nconst endInlineScript = stringToPrecomputedChunk('</script>');\n\nconst startScriptSrc = stringToPrecomputedChunk('<script src=\"');\nconst startModuleSrc = stringToPrecomputedChunk('<script type=\"module\" src=\"');\nconst endAsyncScript = stringToPrecomputedChunk('\" async=\"\"></script>');\n\n/**\n * This escaping function is designed to work with bootstrapScriptContent only.\n * because we know we are escaping the entire script. We can avoid for instance\n * escaping html comment string sequences that are valid javascript as well because\n * if there are no sebsequent <script sequences the html parser will never enter\n * script data double escaped state (see: https://www.w3.org/TR/html53/syntax.html#script-data-double-escaped-state)\n *\n * While untrusted script content should be made safe before using this api it will\n * ensure that the script cannot be early terminated or never terminated state\n */\nfunction escapeBootstrapScriptContent(scriptText) {\n  if (__DEV__) {\n    checkHtmlStringCoercion(scriptText);\n  }\n  return ('' + scriptText).replace(scriptRegex, scriptReplacer);\n}\nconst scriptRegex = /(<\\/|<)(s)(cript)/gi;\nconst scriptReplacer = (match, prefix, s, suffix) =>\n  `${prefix}${s === 's' ? '\\\\u0073' : '\\\\u0053'}${suffix}`;\n\n// Allows us to keep track of what we've already written so we can refer back to it.\nexport function createResponseState(\n  identifierPrefix: string | void,\n  nonce: string | void,\n  bootstrapScriptContent: string | void,\n  bootstrapScripts: Array<string> | void,\n  bootstrapModules: Array<string> | void,\n): ResponseState {\n  const idPrefix = identifierPrefix === undefined ? '' : identifierPrefix;\n  const inlineScriptWithNonce =\n    nonce === undefined\n      ? startInlineScript\n      : stringToPrecomputedChunk(\n          '<script nonce=\"' + escapeTextForBrowser(nonce) + '\">',\n        );\n  const bootstrapChunks = [];\n  if (bootstrapScriptContent !== undefined) {\n    bootstrapChunks.push(\n      inlineScriptWithNonce,\n      stringToChunk(escapeBootstrapScriptContent(bootstrapScriptContent)),\n      endInlineScript,\n    );\n  }\n  if (bootstrapScripts !== undefined) {\n    for (let i = 0; i < bootstrapScripts.length; i++) {\n      bootstrapChunks.push(\n        startScriptSrc,\n        stringToChunk(escapeTextForBrowser(bootstrapScripts[i])),\n        endAsyncScript,\n      );\n    }\n  }\n  if (bootstrapModules !== undefined) {\n    for (let i = 0; i < bootstrapModules.length; i++) {\n      bootstrapChunks.push(\n        startModuleSrc,\n        stringToChunk(escapeTextForBrowser(bootstrapModules[i])),\n        endAsyncScript,\n      );\n    }\n  }\n  return {\n    bootstrapChunks: bootstrapChunks,\n    startInlineScript: inlineScriptWithNonce,\n    placeholderPrefix: stringToPrecomputedChunk(idPrefix + 'P:'),\n    segmentPrefix: stringToPrecomputedChunk(idPrefix + 'S:'),\n    boundaryPrefix: idPrefix + 'B:',\n    idPrefix: idPrefix,\n    nextSuspenseID: 0,\n    sentCompleteSegmentFunction: false,\n    sentCompleteBoundaryFunction: false,\n    sentClientRenderFunction: false,\n  };\n}\n\n// Constants for the insertion mode we're currently writing in. We don't encode all HTML5 insertion\n// modes. We only include the variants as they matter for the sake of our purposes.\n// We don't actually provide the namespace therefore we use constants instead of the string.\nconst ROOT_HTML_MODE = 0; // Used for the root most element tag.\nexport const HTML_MODE = 1;\nconst SVG_MODE = 2;\nconst MATHML_MODE = 3;\nconst HTML_TABLE_MODE = 4;\nconst HTML_TABLE_BODY_MODE = 5;\nconst HTML_TABLE_ROW_MODE = 6;\nconst HTML_COLGROUP_MODE = 7;\n// We have a greater than HTML_TABLE_MODE check elsewhere. If you add more cases here, make sure it\n// still makes sense\n\ntype InsertionMode = 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7;\n\n// Lets us keep track of contextual state and pick it back up after suspending.\nexport type FormatContext = {\n  insertionMode: InsertionMode, // root/svg/html/mathml/table\n  selectedValue: null | string | Array<string>, // the selected value(s) inside a <select>, or null outside <select>\n};\n\nfunction createFormatContext(\n  insertionMode: InsertionMode,\n  selectedValue: null | string,\n): FormatContext {\n  return {\n    insertionMode,\n    selectedValue,\n  };\n}\n\nexport function createRootFormatContext(namespaceURI?: string): FormatContext {\n  const insertionMode =\n    namespaceURI === 'http://www.w3.org/2000/svg'\n      ? SVG_MODE\n      : namespaceURI === 'http://www.w3.org/1998/Math/MathML'\n      ? MATHML_MODE\n      : ROOT_HTML_MODE;\n  return createFormatContext(insertionMode, null);\n}\n\nexport function getChildFormatContext(\n  parentContext: FormatContext,\n  type: string,\n  props: Object,\n): FormatContext {\n  switch (type) {\n    case 'select':\n      return createFormatContext(\n        HTML_MODE,\n        props.value != null ? props.value : props.defaultValue,\n      );\n    case 'svg':\n      return createFormatContext(SVG_MODE, null);\n    case 'math':\n      return createFormatContext(MATHML_MODE, null);\n    case 'foreignObject':\n      return createFormatContext(HTML_MODE, null);\n    // Table parents are special in that their children can only be created at all if they're\n    // wrapped in a table parent. So we need to encode that we're entering this mode.\n    case 'table':\n      return createFormatContext(HTML_TABLE_MODE, null);\n    case 'thead':\n    case 'tbody':\n    case 'tfoot':\n      return createFormatContext(HTML_TABLE_BODY_MODE, null);\n    case 'colgroup':\n      return createFormatContext(HTML_COLGROUP_MODE, null);\n    case 'tr':\n      return createFormatContext(HTML_TABLE_ROW_MODE, null);\n  }\n  if (parentContext.insertionMode >= HTML_TABLE_MODE) {\n    // Whatever tag this was, it wasn't a table parent or other special parent, so we must have\n    // entered plain HTML again.\n    return createFormatContext(HTML_MODE, null);\n  }\n  if (parentContext.insertionMode === ROOT_HTML_MODE) {\n    // We've emitted the root and is now in plain HTML mode.\n    return createFormatContext(HTML_MODE, null);\n  }\n  return parentContext;\n}\n\nexport type SuspenseBoundaryID = null | PrecomputedChunk;\n\nexport const UNINITIALIZED_SUSPENSE_BOUNDARY_ID: SuspenseBoundaryID = null;\n\nexport function assignSuspenseBoundaryID(\n  responseState: ResponseState,\n): SuspenseBoundaryID {\n  const generatedID = responseState.nextSuspenseID++;\n  return stringToPrecomputedChunk(\n    responseState.boundaryPrefix + generatedID.toString(16),\n  );\n}\n\nexport function makeId(\n  responseState: ResponseState,\n  treeId: string,\n  localId: number,\n): string {\n  const idPrefix = responseState.idPrefix;\n\n  let id = ':' + idPrefix + 'R' + treeId;\n\n  // Unless this is the first id at this level, append a number at the end\n  // that represents the position of this useId hook among all the useId\n  // hooks for this fiber.\n  if (localId > 0) {\n    id += 'H' + localId.toString(32);\n  }\n\n  return id + ':';\n}\n\nfunction encodeHTMLTextNode(text: string): string {\n  return escapeTextForBrowser(text);\n}\n\nconst textSeparator = stringToPrecomputedChunk('<!-- -->');\n\nexport function pushTextInstance(\n  target: Array<Chunk | PrecomputedChunk>,\n  text: string,\n  responseState: ResponseState,\n  textEmbedded: boolean,\n): boolean {\n  if (text === '') {\n    // Empty text doesn't have a DOM node representation and the hydration is aware of this.\n    return textEmbedded;\n  }\n  if (textEmbedded) {\n    target.push(textSeparator);\n  }\n  target.push(stringToChunk(encodeHTMLTextNode(text)));\n  return true;\n}\n\n// Called when Fizz is done with a Segment. Currently the only purpose is to conditionally\n// emit a text separator when we don't know for sure it is safe to omit\nexport function pushSegmentFinale(\n  target: Array<Chunk | PrecomputedChunk>,\n  responseState: ResponseState,\n  lastPushedText: boolean,\n  textEmbedded: boolean,\n): void {\n  if (lastPushedText && textEmbedded) {\n    target.push(textSeparator);\n  }\n}\n\nconst styleNameCache: Map<string, PrecomputedChunk> = new Map();\nfunction processStyleName(styleName: string): PrecomputedChunk {\n  const chunk = styleNameCache.get(styleName);\n  if (chunk !== undefined) {\n    return chunk;\n  }\n  const result = stringToPrecomputedChunk(\n    escapeTextForBrowser(hyphenateStyleName(styleName)),\n  );\n  styleNameCache.set(styleName, result);\n  return result;\n}\n\nconst styleAttributeStart = stringToPrecomputedChunk(' style=\"');\nconst styleAssign = stringToPrecomputedChunk(':');\nconst styleSeparator = stringToPrecomputedChunk(';');\n\nfunction pushStyle(\n  target: Array<Chunk | PrecomputedChunk>,\n  responseState: ResponseState,\n  style: Object,\n): void {\n  if (typeof style !== 'object') {\n    throw new Error(\n      'The `style` prop expects a mapping from style properties to values, ' +\n        \"not a string. For example, style={{marginRight: spacing + 'em'}} when \" +\n        'using JSX.',\n    );\n  }\n\n  let isFirst = true;\n  for (const styleName in style) {\n    if (!hasOwnProperty.call(style, styleName)) {\n      continue;\n    }\n    // If you provide unsafe user data here they can inject arbitrary CSS\n    // which may be problematic (I couldn't repro this):\n    // https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet\n    // http://www.thespanner.co.uk/2007/11/26/ultimate-xss-css-injection/\n    // This is not an XSS hole but instead a potential CSS injection issue\n    // which has lead to a greater discussion about how we're going to\n    // trust URLs moving forward. See #2115901\n    const styleValue = style[styleName];\n    if (\n      styleValue == null ||\n      typeof styleValue === 'boolean' ||\n      styleValue === ''\n    ) {\n      // TODO: We used to set empty string as a style with an empty value. Does that ever make sense?\n      continue;\n    }\n\n    let nameChunk;\n    let valueChunk;\n    const isCustomProperty = styleName.indexOf('--') === 0;\n    if (isCustomProperty) {\n      nameChunk = stringToChunk(escapeTextForBrowser(styleName));\n      if (__DEV__) {\n        checkCSSPropertyStringCoercion(styleValue, styleName);\n      }\n      valueChunk = stringToChunk(\n        escapeTextForBrowser(('' + styleValue).trim()),\n      );\n    } else {\n      if (__DEV__) {\n        warnValidStyle(styleName, styleValue);\n      }\n\n      nameChunk = processStyleName(styleName);\n      if (typeof styleValue === 'number') {\n        if (\n          styleValue !== 0 &&\n          !hasOwnProperty.call(isUnitlessNumber, styleName)\n        ) {\n          valueChunk = stringToChunk(styleValue + 'px'); // Presumes implicit 'px' suffix for unitless numbers\n        } else {\n          valueChunk = stringToChunk('' + styleValue);\n        }\n      } else {\n        if (__DEV__) {\n          checkCSSPropertyStringCoercion(styleValue, styleName);\n        }\n        valueChunk = stringToChunk(\n          escapeTextForBrowser(('' + styleValue).trim()),\n        );\n      }\n    }\n    if (isFirst) {\n      isFirst = false;\n      // If it's first, we don't need any separators prefixed.\n      target.push(styleAttributeStart, nameChunk, styleAssign, valueChunk);\n    } else {\n      target.push(styleSeparator, nameChunk, styleAssign, valueChunk);\n    }\n  }\n  if (!isFirst) {\n    target.push(attributeEnd);\n  }\n}\n\nconst attributeSeparator = stringToPrecomputedChunk(' ');\nconst attributeAssign = stringToPrecomputedChunk('=\"');\nconst attributeEnd = stringToPrecomputedChunk('\"');\nconst attributeEmptyString = stringToPrecomputedChunk('=\"\"');\n\nfunction pushAttribute(\n  target: Array<Chunk | PrecomputedChunk>,\n  responseState: ResponseState,\n  name: string,\n  value: string | boolean | number | Function | Object, // not null or undefined\n): void {\n  switch (name) {\n    case 'style': {\n      pushStyle(target, responseState, value);\n      return;\n    }\n    case 'defaultValue':\n    case 'defaultChecked': // These shouldn't be set as attributes on generic HTML elements.\n    case 'innerHTML': // Must use dangerouslySetInnerHTML instead.\n    case 'suppressContentEditableWarning':\n    case 'suppressHydrationWarning':\n      // Ignored. These are built-in to React on the client.\n      return;\n  }\n  if (\n    // shouldIgnoreAttribute\n    // We have already filtered out null/undefined and reserved words.\n    name.length > 2 &&\n    (name[0] === 'o' || name[0] === 'O') &&\n    (name[1] === 'n' || name[1] === 'N')\n  ) {\n    return;\n  }\n\n  const propertyInfo = getPropertyInfo(name);\n  if (propertyInfo !== null) {\n    // shouldRemoveAttribute\n    switch (typeof value) {\n      case 'function':\n      // $FlowIssue symbol is perfectly valid here\n      case 'symbol': // eslint-disable-line\n        return;\n      case 'boolean': {\n        if (!propertyInfo.acceptsBooleans) {\n          return;\n        }\n      }\n    }\n    if (enableFilterEmptyStringAttributesDOM) {\n      if (propertyInfo.removeEmptyString && value === '') {\n        if (__DEV__) {\n          if (name === 'src') {\n            console.error(\n              'An empty string (\"\") was passed to the %s attribute. ' +\n                'This may cause the browser to download the whole page again over the network. ' +\n                'To fix this, either do not render the element at all ' +\n                'or pass null to %s instead of an empty string.',\n              name,\n              name,\n            );\n          } else {\n            console.error(\n              'An empty string (\"\") was passed to the %s attribute. ' +\n                'To fix this, either do not render the element at all ' +\n                'or pass null to %s instead of an empty string.',\n              name,\n              name,\n            );\n          }\n        }\n        return;\n      }\n    }\n\n    const attributeName = propertyInfo.attributeName;\n    const attributeNameChunk = stringToChunk(attributeName); // TODO: If it's known we can cache the chunk.\n\n    switch (propertyInfo.type) {\n      case BOOLEAN:\n        if (value) {\n          target.push(\n            attributeSeparator,\n            attributeNameChunk,\n            attributeEmptyString,\n          );\n        }\n        return;\n      case OVERLOADED_BOOLEAN:\n        if (value === true) {\n          target.push(\n            attributeSeparator,\n            attributeNameChunk,\n            attributeEmptyString,\n          );\n        } else if (value === false) {\n          // Ignored\n        } else {\n          target.push(\n            attributeSeparator,\n            attributeNameChunk,\n            attributeAssign,\n            stringToChunk(escapeTextForBrowser(value)),\n            attributeEnd,\n          );\n        }\n        return;\n      case NUMERIC:\n        if (!isNaN(value)) {\n          target.push(\n            attributeSeparator,\n            attributeNameChunk,\n            attributeAssign,\n            stringToChunk(escapeTextForBrowser(value)),\n            attributeEnd,\n          );\n        }\n        break;\n      case POSITIVE_NUMERIC:\n        if (!isNaN(value) && (value: any) >= 1) {\n          target.push(\n            attributeSeparator,\n            attributeNameChunk,\n            attributeAssign,\n            stringToChunk(escapeTextForBrowser(value)),\n            attributeEnd,\n          );\n        }\n        break;\n      default:\n        if (propertyInfo.sanitizeURL) {\n          if (__DEV__) {\n            checkAttributeStringCoercion(value, attributeName);\n          }\n          value = '' + (value: any);\n          sanitizeURL(value);\n        }\n        target.push(\n          attributeSeparator,\n          attributeNameChunk,\n          attributeAssign,\n          stringToChunk(escapeTextForBrowser(value)),\n          attributeEnd,\n        );\n    }\n  } else if (isAttributeNameSafe(name)) {\n    // shouldRemoveAttribute\n    switch (typeof value) {\n      case 'function':\n      // $FlowIssue symbol is perfectly valid here\n      case 'symbol': // eslint-disable-line\n        return;\n      case 'boolean': {\n        const prefix = name.toLowerCase().slice(0, 5);\n        if (prefix !== 'data-' && prefix !== 'aria-') {\n          return;\n        }\n      }\n    }\n    target.push(\n      attributeSeparator,\n      stringToChunk(name),\n      attributeAssign,\n      stringToChunk(escapeTextForBrowser(value)),\n      attributeEnd,\n    );\n  }\n}\n\nconst endOfStartTag = stringToPrecomputedChunk('>');\nconst endOfStartTagSelfClosing = stringToPrecomputedChunk('/>');\n\nfunction pushInnerHTML(\n  target: Array<Chunk | PrecomputedChunk>,\n  innerHTML,\n  children,\n) {\n  if (innerHTML != null) {\n    if (children != null) {\n      throw new Error(\n        'Can only set one of `children` or `props.dangerouslySetInnerHTML`.',\n      );\n    }\n\n    if (typeof innerHTML !== 'object' || !('__html' in innerHTML)) {\n      throw new Error(\n        '`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. ' +\n          'Please visit https://reactjs.org/link/dangerously-set-inner-html ' +\n          'for more information.',\n      );\n    }\n\n    const html = innerHTML.__html;\n    if (html !== null && html !== undefined) {\n      if (__DEV__) {\n        checkHtmlStringCoercion(html);\n      }\n      target.push(stringToChunk('' + html));\n    }\n  }\n}\n\n// TODO: Move these to ResponseState so that we warn for every request.\n// It would help debugging in stateful servers (e.g. service worker).\nlet didWarnDefaultInputValue = false;\nlet didWarnDefaultChecked = false;\nlet didWarnDefaultSelectValue = false;\nlet didWarnDefaultTextareaValue = false;\nlet didWarnInvalidOptionChildren = false;\nlet didWarnInvalidOptionInnerHTML = false;\nlet didWarnSelectedSetOnOption = false;\n\nfunction checkSelectProp(props, propName) {\n  if (__DEV__) {\n    const value = props[propName];\n    if (value != null) {\n      const array = isArray(value);\n      if (props.multiple && !array) {\n        console.error(\n          'The `%s` prop supplied to <select> must be an array if ' +\n            '`multiple` is true.',\n          propName,\n        );\n      } else if (!props.multiple && array) {\n        console.error(\n          'The `%s` prop supplied to <select> must be a scalar ' +\n            'value if `multiple` is false.',\n          propName,\n        );\n      }\n    }\n  }\n}\n\nfunction pushStartSelect(\n  target: Array<Chunk | PrecomputedChunk>,\n  props: Object,\n  responseState: ResponseState,\n): ReactNodeList {\n  if (__DEV__) {\n    checkControlledValueProps('select', props);\n\n    checkSelectProp(props, 'value');\n    checkSelectProp(props, 'defaultValue');\n\n    if (\n      props.value !== undefined &&\n      props.defaultValue !== undefined &&\n      !didWarnDefaultSelectValue\n    ) {\n      console.error(\n        'Select elements must be either controlled or uncontrolled ' +\n          '(specify either the value prop, or the defaultValue prop, but not ' +\n          'both). Decide between using a controlled or uncontrolled select ' +\n          'element and remove one of these props. More info: ' +\n          'https://reactjs.org/link/controlled-components',\n      );\n      didWarnDefaultSelectValue = true;\n    }\n  }\n\n  target.push(startChunkForTag('select'));\n\n  let children = null;\n  let innerHTML = null;\n  for (const propKey in props) {\n    if (hasOwnProperty.call(props, propKey)) {\n      const propValue = props[propKey];\n      if (propValue == null) {\n        continue;\n      }\n      switch (propKey) {\n        case 'children':\n          children = propValue;\n          break;\n        case 'dangerouslySetInnerHTML':\n          // TODO: This doesn't really make sense for select since it can't use the controlled\n          // value in the innerHTML.\n          innerHTML = propValue;\n          break;\n        case 'defaultValue':\n        case 'value':\n          // These are set on the Context instead and applied to the nested options.\n          break;\n        default:\n          pushAttribute(target, responseState, propKey, propValue);\n          break;\n      }\n    }\n  }\n\n  target.push(endOfStartTag);\n  pushInnerHTML(target, innerHTML, children);\n  return children;\n}\n\nfunction flattenOptionChildren(children: mixed): string {\n  let content = '';\n  // Flatten children and warn if they aren't strings or numbers;\n  // invalid types are ignored.\n  Children.forEach((children: any), function(child) {\n    if (child == null) {\n      return;\n    }\n    content += (child: any);\n    if (__DEV__) {\n      if (\n        !didWarnInvalidOptionChildren &&\n        typeof child !== 'string' &&\n        typeof child !== 'number'\n      ) {\n        didWarnInvalidOptionChildren = true;\n        console.error(\n          'Cannot infer the option value of complex children. ' +\n            'Pass a `value` prop or use a plain string as children to <option>.',\n        );\n      }\n    }\n  });\n  return content;\n}\n\nconst selectedMarkerAttribute = stringToPrecomputedChunk(' selected=\"\"');\n\nfunction pushStartOption(\n  target: Array<Chunk | PrecomputedChunk>,\n  props: Object,\n  responseState: ResponseState,\n  formatContext: FormatContext,\n): ReactNodeList {\n  const selectedValue = formatContext.selectedValue;\n\n  target.push(startChunkForTag('option'));\n\n  let children = null;\n  let value = null;\n  let selected = null;\n  let innerHTML = null;\n  for (const propKey in props) {\n    if (hasOwnProperty.call(props, propKey)) {\n      const propValue = props[propKey];\n      if (propValue == null) {\n        continue;\n      }\n      switch (propKey) {\n        case 'children':\n          children = propValue;\n          break;\n        case 'selected':\n          // ignore\n          selected = propValue;\n          if (__DEV__) {\n            // TODO: Remove support for `selected` in <option>.\n            if (!didWarnSelectedSetOnOption) {\n              console.error(\n                'Use the `defaultValue` or `value` props on <select> instead of ' +\n                  'setting `selected` on <option>.',\n              );\n              didWarnSelectedSetOnOption = true;\n            }\n          }\n          break;\n        case 'dangerouslySetInnerHTML':\n          innerHTML = propValue;\n          break;\n        // eslint-disable-next-line-no-fallthrough\n        case 'value':\n          value = propValue;\n        // We intentionally fallthrough to also set the attribute on the node.\n        // eslint-disable-next-line-no-fallthrough\n        default:\n          pushAttribute(target, responseState, propKey, propValue);\n          break;\n      }\n    }\n  }\n\n  if (selectedValue != null) {\n    let stringValue;\n    if (value !== null) {\n      if (__DEV__) {\n        checkAttributeStringCoercion(value, 'value');\n      }\n      stringValue = '' + value;\n    } else {\n      if (__DEV__) {\n        if (innerHTML !== null) {\n          if (!didWarnInvalidOptionInnerHTML) {\n            didWarnInvalidOptionInnerHTML = true;\n            console.error(\n              'Pass a `value` prop if you set dangerouslyInnerHTML so React knows ' +\n                'which value should be selected.',\n            );\n          }\n        }\n      }\n      stringValue = flattenOptionChildren(children);\n    }\n    if (isArray(selectedValue)) {\n      // multiple\n      for (let i = 0; i < selectedValue.length; i++) {\n        if (__DEV__) {\n          checkAttributeStringCoercion(selectedValue[i], 'value');\n        }\n        const v = '' + selectedValue[i];\n        if (v === stringValue) {\n          target.push(selectedMarkerAttribute);\n          break;\n        }\n      }\n    } else {\n      if (__DEV__) {\n        checkAttributeStringCoercion(selectedValue, 'select.value');\n      }\n      if ('' + selectedValue === stringValue) {\n        target.push(selectedMarkerAttribute);\n      }\n    }\n  } else if (selected) {\n    target.push(selectedMarkerAttribute);\n  }\n\n  target.push(endOfStartTag);\n  pushInnerHTML(target, innerHTML, children);\n  return children;\n}\n\nfunction pushInput(\n  target: Array<Chunk | PrecomputedChunk>,\n  props: Object,\n  responseState: ResponseState,\n): ReactNodeList {\n  if (__DEV__) {\n    checkControlledValueProps('input', props);\n\n    if (\n      props.checked !== undefined &&\n      props.defaultChecked !== undefined &&\n      !didWarnDefaultChecked\n    ) {\n      console.error(\n        '%s contains an input of type %s with both checked and defaultChecked props. ' +\n          'Input elements must be either controlled or uncontrolled ' +\n          '(specify either the checked prop, or the defaultChecked prop, but not ' +\n          'both). Decide between using a controlled or uncontrolled input ' +\n          'element and remove one of these props. More info: ' +\n          'https://reactjs.org/link/controlled-components',\n        'A component',\n        props.type,\n      );\n      didWarnDefaultChecked = true;\n    }\n    if (\n      props.value !== undefined &&\n      props.defaultValue !== undefined &&\n      !didWarnDefaultInputValue\n    ) {\n      console.error(\n        '%s contains an input of type %s with both value and defaultValue props. ' +\n          'Input elements must be either controlled or uncontrolled ' +\n          '(specify either the value prop, or the defaultValue prop, but not ' +\n          'both). Decide between using a controlled or uncontrolled input ' +\n          'element and remove one of these props. More info: ' +\n          'https://reactjs.org/link/controlled-components',\n        'A component',\n        props.type,\n      );\n      didWarnDefaultInputValue = true;\n    }\n  }\n\n  target.push(startChunkForTag('input'));\n\n  let value = null;\n  let defaultValue = null;\n  let checked = null;\n  let defaultChecked = null;\n\n  for (const propKey in props) {\n    if (hasOwnProperty.call(props, propKey)) {\n      const propValue = props[propKey];\n      if (propValue == null) {\n        continue;\n      }\n      switch (propKey) {\n        case 'children':\n        case 'dangerouslySetInnerHTML':\n          throw new Error(\n            `${'input'} is a self-closing tag and must neither have \\`children\\` nor ` +\n              'use `dangerouslySetInnerHTML`.',\n          );\n        // eslint-disable-next-line-no-fallthrough\n        case 'defaultChecked':\n          defaultChecked = propValue;\n          break;\n        case 'defaultValue':\n          defaultValue = propValue;\n          break;\n        case 'checked':\n          checked = propValue;\n          break;\n        case 'value':\n          value = propValue;\n          break;\n        default:\n          pushAttribute(target, responseState, propKey, propValue);\n          break;\n      }\n    }\n  }\n\n  if (checked !== null) {\n    pushAttribute(target, responseState, 'checked', checked);\n  } else if (defaultChecked !== null) {\n    pushAttribute(target, responseState, 'checked', defaultChecked);\n  }\n  if (value !== null) {\n    pushAttribute(target, responseState, 'value', value);\n  } else if (defaultValue !== null) {\n    pushAttribute(target, responseState, 'value', defaultValue);\n  }\n\n  target.push(endOfStartTagSelfClosing);\n  return null;\n}\n\nfunction pushStartTextArea(\n  target: Array<Chunk | PrecomputedChunk>,\n  props: Object,\n  responseState: ResponseState,\n): ReactNodeList {\n  if (__DEV__) {\n    checkControlledValueProps('textarea', props);\n    if (\n      props.value !== undefined &&\n      props.defaultValue !== undefined &&\n      !didWarnDefaultTextareaValue\n    ) {\n      console.error(\n        'Textarea elements must be either controlled or uncontrolled ' +\n          '(specify either the value prop, or the defaultValue prop, but not ' +\n          'both). Decide between using a controlled or uncontrolled textarea ' +\n          'and remove one of these props. More info: ' +\n          'https://reactjs.org/link/controlled-components',\n      );\n      didWarnDefaultTextareaValue = true;\n    }\n  }\n\n  target.push(startChunkForTag('textarea'));\n\n  let value = null;\n  let defaultValue = null;\n  let children = null;\n  for (const propKey in props) {\n    if (hasOwnProperty.call(props, propKey)) {\n      const propValue = props[propKey];\n      if (propValue == null) {\n        continue;\n      }\n      switch (propKey) {\n        case 'children':\n          children = propValue;\n          break;\n        case 'value':\n          value = propValue;\n          break;\n        case 'defaultValue':\n          defaultValue = propValue;\n          break;\n        case 'dangerouslySetInnerHTML':\n          throw new Error(\n            '`dangerouslySetInnerHTML` does not make sense on <textarea>.',\n          );\n        // eslint-disable-next-line-no-fallthrough\n        default:\n          pushAttribute(target, responseState, propKey, propValue);\n          break;\n      }\n    }\n  }\n  if (value === null && defaultValue !== null) {\n    value = defaultValue;\n  }\n\n  target.push(endOfStartTag);\n\n  // TODO (yungsters): Remove support for children content in <textarea>.\n  if (children != null) {\n    if (__DEV__) {\n      console.error(\n        'Use the `defaultValue` or `value` props instead of setting ' +\n          'children on <textarea>.',\n      );\n    }\n\n    if (value != null) {\n      throw new Error(\n        'If you supply `defaultValue` on a <textarea>, do not pass children.',\n      );\n    }\n\n    if (isArray(children)) {\n      if (children.length > 1) {\n        throw new Error('<textarea> can only have at most one child.');\n      }\n\n      // TODO: remove the coercion and the DEV check below because it will\n      // always be overwritten by the coercion several lines below it. #22309\n      if (__DEV__) {\n        checkHtmlStringCoercion(children[0]);\n      }\n      value = '' + children[0];\n    }\n    if (__DEV__) {\n      checkHtmlStringCoercion(children);\n    }\n    value = '' + children;\n  }\n\n  if (typeof value === 'string' && value[0] === '\\n') {\n    // text/html ignores the first character in these tags if it's a newline\n    // Prefer to break application/xml over text/html (for now) by adding\n    // a newline specifically to get eaten by the parser. (Alternately for\n    // textareas, replacing \"^\\n\" with \"\\r\\n\" doesn't get eaten, and the first\n    // \\r is normalized out by HTMLTextAreaElement#value.)\n    // See: <http://www.w3.org/TR/html-polyglot/#newlines-in-textarea-and-pre>\n    // See: <http://www.w3.org/TR/html5/syntax.html#element-restrictions>\n    // See: <http://www.w3.org/TR/html5/syntax.html#newlines>\n    // See: Parsing of \"textarea\" \"listing\" and \"pre\" elements\n    //  from <http://www.w3.org/TR/html5/syntax.html#parsing-main-inbody>\n    target.push(leadingNewline);\n  }\n\n  // ToString and push directly instead of recurse over children.\n  // We don't really support complex children in the value anyway.\n  // This also currently avoids a trailing comment node which breaks textarea.\n  if (value !== null) {\n    if (__DEV__) {\n      checkAttributeStringCoercion(value, 'value');\n    }\n    target.push(stringToChunk(encodeHTMLTextNode('' + value)));\n  }\n\n  return null;\n}\n\nfunction pushSelfClosing(\n  target: Array<Chunk | PrecomputedChunk>,\n  props: Object,\n  tag: string,\n  responseState: ResponseState,\n): ReactNodeList {\n  target.push(startChunkForTag(tag));\n\n  for (const propKey in props) {\n    if (hasOwnProperty.call(props, propKey)) {\n      const propValue = props[propKey];\n      if (propValue == null) {\n        continue;\n      }\n      switch (propKey) {\n        case 'children':\n        case 'dangerouslySetInnerHTML':\n          throw new Error(\n            `${tag} is a self-closing tag and must neither have \\`children\\` nor ` +\n              'use `dangerouslySetInnerHTML`.',\n          );\n        // eslint-disable-next-line-no-fallthrough\n        default:\n          pushAttribute(target, responseState, propKey, propValue);\n          break;\n      }\n    }\n  }\n\n  target.push(endOfStartTagSelfClosing);\n  return null;\n}\n\nfunction pushStartMenuItem(\n  target: Array<Chunk | PrecomputedChunk>,\n  props: Object,\n  responseState: ResponseState,\n): ReactNodeList {\n  target.push(startChunkForTag('menuitem'));\n\n  for (const propKey in props) {\n    if (hasOwnProperty.call(props, propKey)) {\n      const propValue = props[propKey];\n      if (propValue == null) {\n        continue;\n      }\n      switch (propKey) {\n        case 'children':\n        case 'dangerouslySetInnerHTML':\n          throw new Error(\n            'menuitems cannot have `children` nor `dangerouslySetInnerHTML`.',\n          );\n        // eslint-disable-next-line-no-fallthrough\n        default:\n          pushAttribute(target, responseState, propKey, propValue);\n          break;\n      }\n    }\n  }\n\n  target.push(endOfStartTag);\n  return null;\n}\n\nfunction pushStartTitle(\n  target: Array<Chunk | PrecomputedChunk>,\n  props: Object,\n  responseState: ResponseState,\n): ReactNodeList {\n  target.push(startChunkForTag('title'));\n\n  let children = null;\n  for (const propKey in props) {\n    if (hasOwnProperty.call(props, propKey)) {\n      const propValue = props[propKey];\n      if (propValue == null) {\n        continue;\n      }\n      switch (propKey) {\n        case 'children':\n          children = propValue;\n          break;\n        case 'dangerouslySetInnerHTML':\n          throw new Error(\n            '`dangerouslySetInnerHTML` does not make sense on <title>.',\n          );\n        // eslint-disable-next-line-no-fallthrough\n        default:\n          pushAttribute(target, responseState, propKey, propValue);\n          break;\n      }\n    }\n  }\n  target.push(endOfStartTag);\n\n  if (__DEV__) {\n    const child =\n      Array.isArray(children) && children.length < 2\n        ? children[0] || null\n        : children;\n    if (Array.isArray(children) && children.length > 1) {\n      console.error(\n        'A title element received an array with more than 1 element as children. ' +\n          'In browsers title Elements can only have Text Nodes as children. If ' +\n          'the children being rendered output more than a single text node in aggregate the browser ' +\n          'will display markup and comments as text in the title and hydration will likely fail and ' +\n          'fall back to client rendering',\n      );\n    } else if (child != null && child.$$typeof != null) {\n      console.error(\n        'A title element received a React element for children. ' +\n          'In the browser title Elements can only have Text Nodes as children. If ' +\n          'the children being rendered output more than a single text node in aggregate the browser ' +\n          'will display markup and comments as text in the title and hydration will likely fail and ' +\n          'fall back to client rendering',\n      );\n    } else if (\n      child != null &&\n      typeof child !== 'string' &&\n      typeof child !== 'number'\n    ) {\n      console.error(\n        'A title element received a value that was not a string or number for children. ' +\n          'In the browser title Elements can only have Text Nodes as children. If ' +\n          'the children being rendered output more than a single text node in aggregate the browser ' +\n          'will display markup and comments as text in the title and hydration will likely fail and ' +\n          'fall back to client rendering',\n      );\n    }\n  }\n  return children;\n}\n\nfunction pushStartGenericElement(\n  target: Array<Chunk | PrecomputedChunk>,\n  props: Object,\n  tag: string,\n  responseState: ResponseState,\n): ReactNodeList {\n  target.push(startChunkForTag(tag));\n\n  let children = null;\n  let innerHTML = null;\n  for (const propKey in props) {\n    if (hasOwnProperty.call(props, propKey)) {\n      const propValue = props[propKey];\n      if (propValue == null) {\n        continue;\n      }\n      switch (propKey) {\n        case 'children':\n          children = propValue;\n          break;\n        case 'dangerouslySetInnerHTML':\n          innerHTML = propValue;\n          break;\n        default:\n          pushAttribute(target, responseState, propKey, propValue);\n          break;\n      }\n    }\n  }\n\n  target.push(endOfStartTag);\n  pushInnerHTML(target, innerHTML, children);\n  if (typeof children === 'string') {\n    // Special case children as a string to avoid the unnecessary comment.\n    // TODO: Remove this special case after the general optimization is in place.\n    target.push(stringToChunk(encodeHTMLTextNode(children)));\n    return null;\n  }\n  return children;\n}\n\nfunction pushStartCustomElement(\n  target: Array<Chunk | PrecomputedChunk>,\n  props: Object,\n  tag: string,\n  responseState: ResponseState,\n): ReactNodeList {\n  target.push(startChunkForTag(tag));\n\n  let children = null;\n  let innerHTML = null;\n  for (let propKey in props) {\n    if (hasOwnProperty.call(props, propKey)) {\n      let propValue = props[propKey];\n      if (propValue == null) {\n        continue;\n      }\n      if (\n        enableCustomElementPropertySupport &&\n        (typeof propValue === 'function' || typeof propValue === 'object')\n      ) {\n        // It is normal to render functions and objects on custom elements when\n        // client rendering, but when server rendering the output isn't useful,\n        // so skip it.\n        continue;\n      }\n      if (enableCustomElementPropertySupport && propValue === false) {\n        continue;\n      }\n      if (enableCustomElementPropertySupport && propValue === true) {\n        propValue = '';\n      }\n      if (enableCustomElementPropertySupport && propKey === 'className') {\n        // className gets rendered as class on the client, so it should be\n        // rendered as class on the server.\n        propKey = 'class';\n      }\n      switch (propKey) {\n        case 'children':\n          children = propValue;\n          break;\n        case 'dangerouslySetInnerHTML':\n          innerHTML = propValue;\n          break;\n        case 'style':\n          pushStyle(target, responseState, propValue);\n          break;\n        case 'suppressContentEditableWarning':\n        case 'suppressHydrationWarning':\n          // Ignored. These are built-in to React on the client.\n          break;\n        default:\n          if (\n            isAttributeNameSafe(propKey) &&\n            typeof propValue !== 'function' &&\n            typeof propValue !== 'symbol'\n          ) {\n            target.push(\n              attributeSeparator,\n              stringToChunk(propKey),\n              attributeAssign,\n              stringToChunk(escapeTextForBrowser(propValue)),\n              attributeEnd,\n            );\n          }\n          break;\n      }\n    }\n  }\n\n  target.push(endOfStartTag);\n  pushInnerHTML(target, innerHTML, children);\n  return children;\n}\n\nconst leadingNewline = stringToPrecomputedChunk('\\n');\n\nfunction pushStartPreformattedElement(\n  target: Array<Chunk | PrecomputedChunk>,\n  props: Object,\n  tag: string,\n  responseState: ResponseState,\n): ReactNodeList {\n  target.push(startChunkForTag(tag));\n\n  let children = null;\n  let innerHTML = null;\n  for (const propKey in props) {\n    if (hasOwnProperty.call(props, propKey)) {\n      const propValue = props[propKey];\n      if (propValue == null) {\n        continue;\n      }\n      switch (propKey) {\n        case 'children':\n          children = propValue;\n          break;\n        case 'dangerouslySetInnerHTML':\n          innerHTML = propValue;\n          break;\n        default:\n          pushAttribute(target, responseState, propKey, propValue);\n          break;\n      }\n    }\n  }\n\n  target.push(endOfStartTag);\n\n  // text/html ignores the first character in these tags if it's a newline\n  // Prefer to break application/xml over text/html (for now) by adding\n  // a newline specifically to get eaten by the parser. (Alternately for\n  // textareas, replacing \"^\\n\" with \"\\r\\n\" doesn't get eaten, and the first\n  // \\r is normalized out by HTMLTextAreaElement#value.)\n  // See: <http://www.w3.org/TR/html-polyglot/#newlines-in-textarea-and-pre>\n  // See: <http://www.w3.org/TR/html5/syntax.html#element-restrictions>\n  // See: <http://www.w3.org/TR/html5/syntax.html#newlines>\n  // See: Parsing of \"textarea\" \"listing\" and \"pre\" elements\n  //  from <http://www.w3.org/TR/html5/syntax.html#parsing-main-inbody>\n  // TODO: This doesn't deal with the case where the child is an array\n  // or component that returns a string.\n  if (innerHTML != null) {\n    if (children != null) {\n      throw new Error(\n        'Can only set one of `children` or `props.dangerouslySetInnerHTML`.',\n      );\n    }\n\n    if (typeof innerHTML !== 'object' || !('__html' in innerHTML)) {\n      throw new Error(\n        '`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. ' +\n          'Please visit https://reactjs.org/link/dangerously-set-inner-html ' +\n          'for more information.',\n      );\n    }\n\n    const html = innerHTML.__html;\n    if (html !== null && html !== undefined) {\n      if (typeof html === 'string' && html.length > 0 && html[0] === '\\n') {\n        target.push(leadingNewline, stringToChunk(html));\n      } else {\n        if (__DEV__) {\n          checkHtmlStringCoercion(html);\n        }\n        target.push(stringToChunk('' + html));\n      }\n    }\n  }\n  if (typeof children === 'string' && children[0] === '\\n') {\n    target.push(leadingNewline);\n  }\n  return children;\n}\n\n// We accept any tag to be rendered but since this gets injected into arbitrary\n// HTML, we want to make sure that it's a safe tag.\n// http://www.w3.org/TR/REC-xml/#NT-Name\nconst VALID_TAG_REGEX = /^[a-zA-Z][a-zA-Z:_\\.\\-\\d]*$/; // Simplified subset\nconst validatedTagCache = new Map();\nfunction startChunkForTag(tag: string): PrecomputedChunk {\n  let tagStartChunk = validatedTagCache.get(tag);\n  if (tagStartChunk === undefined) {\n    if (!VALID_TAG_REGEX.test(tag)) {\n      throw new Error(`Invalid tag: ${tag}`);\n    }\n\n    tagStartChunk = stringToPrecomputedChunk('<' + tag);\n    validatedTagCache.set(tag, tagStartChunk);\n  }\n  return tagStartChunk;\n}\n\nconst DOCTYPE: PrecomputedChunk = stringToPrecomputedChunk('<!DOCTYPE html>');\n\nexport function pushStartInstance(\n  target: Array<Chunk | PrecomputedChunk>,\n  type: string,\n  props: Object,\n  responseState: ResponseState,\n  formatContext: FormatContext,\n): ReactNodeList {\n  if (__DEV__) {\n    validateARIAProperties(type, props);\n    validateInputProperties(type, props);\n    validateUnknownProperties(type, props, null);\n\n    if (\n      !props.suppressContentEditableWarning &&\n      props.contentEditable &&\n      props.children != null\n    ) {\n      console.error(\n        'A component is `contentEditable` and contains `children` managed by ' +\n          'React. It is now your responsibility to guarantee that none of ' +\n          'those nodes are unexpectedly modified or duplicated. This is ' +\n          'probably not intentional.',\n      );\n    }\n\n    if (\n      formatContext.insertionMode !== SVG_MODE &&\n      formatContext.insertionMode !== MATHML_MODE\n    ) {\n      if (\n        type.indexOf('-') === -1 &&\n        typeof props.is !== 'string' &&\n        type.toLowerCase() !== type\n      ) {\n        console.error(\n          '<%s /> is using incorrect casing. ' +\n            'Use PascalCase for React components, ' +\n            'or lowercase for HTML elements.',\n          type,\n        );\n      }\n    }\n  }\n\n  switch (type) {\n    // Special tags\n    case 'select':\n      return pushStartSelect(target, props, responseState);\n    case 'option':\n      return pushStartOption(target, props, responseState, formatContext);\n    case 'textarea':\n      return pushStartTextArea(target, props, responseState);\n    case 'input':\n      return pushInput(target, props, responseState);\n    case 'menuitem':\n      return pushStartMenuItem(target, props, responseState);\n    case 'title':\n      return pushStartTitle(target, props, responseState);\n    // Newline eating tags\n    case 'listing':\n    case 'pre': {\n      return pushStartPreformattedElement(target, props, type, responseState);\n    }\n    // Omitted close tags\n    case 'area':\n    case 'base':\n    case 'br':\n    case 'col':\n    case 'embed':\n    case 'hr':\n    case 'img':\n    case 'keygen':\n    case 'link':\n    case 'meta':\n    case 'param':\n    case 'source':\n    case 'track':\n    case 'wbr': {\n      return pushSelfClosing(target, props, type, responseState);\n    }\n    // These are reserved SVG and MathML elements, that are never custom elements.\n    // https://w3c.github.io/webcomponents/spec/custom/#custom-elements-core-concepts\n    case 'annotation-xml':\n    case 'color-profile':\n    case 'font-face':\n    case 'font-face-src':\n    case 'font-face-uri':\n    case 'font-face-format':\n    case 'font-face-name':\n    case 'missing-glyph': {\n      return pushStartGenericElement(target, props, type, responseState);\n    }\n    case 'html': {\n      if (formatContext.insertionMode === ROOT_HTML_MODE) {\n        // If we're rendering the html tag and we're at the root (i.e. not in foreignObject)\n        // then we also emit the DOCTYPE as part of the root content as a convenience for\n        // rendering the whole document.\n        target.push(DOCTYPE);\n      }\n      return pushStartGenericElement(target, props, type, responseState);\n    }\n    default: {\n      if (type.indexOf('-') === -1 && typeof props.is !== 'string') {\n        // Generic element\n        return pushStartGenericElement(target, props, type, responseState);\n      } else {\n        // Custom element\n        return pushStartCustomElement(target, props, type, responseState);\n      }\n    }\n  }\n}\n\nconst endTag1 = stringToPrecomputedChunk('</');\nconst endTag2 = stringToPrecomputedChunk('>');\n\nexport function pushEndInstance(\n  target: Array<Chunk | PrecomputedChunk>,\n  type: string,\n  props: Object,\n): void {\n  switch (type) {\n    // Omitted close tags\n    // TODO: Instead of repeating this switch we could try to pass a flag from above.\n    // That would require returning a tuple. Which might be ok if it gets inlined.\n    case 'area':\n    case 'base':\n    case 'br':\n    case 'col':\n    case 'embed':\n    case 'hr':\n    case 'img':\n    case 'input':\n    case 'keygen':\n    case 'link':\n    case 'meta':\n    case 'param':\n    case 'source':\n    case 'track':\n    case 'wbr': {\n      // No close tag needed.\n      break;\n    }\n    default: {\n      target.push(endTag1, stringToChunk(type), endTag2);\n    }\n  }\n}\n\nexport function writeCompletedRoot(\n  destination: Destination,\n  responseState: ResponseState,\n): boolean {\n  const bootstrapChunks = responseState.bootstrapChunks;\n  let i = 0;\n  for (; i < bootstrapChunks.length - 1; i++) {\n    writeChunk(destination, bootstrapChunks[i]);\n  }\n  if (i < bootstrapChunks.length) {\n    return writeChunkAndReturn(destination, bootstrapChunks[i]);\n  }\n  return true;\n}\n\n// Structural Nodes\n\n// A placeholder is a node inside a hidden partial tree that can be filled in later, but before\n// display. It's never visible to users. We use the template tag because it can be used in every\n// type of parent. <script> tags also work in every other tag except <colgroup>.\nconst placeholder1 = stringToPrecomputedChunk('<template id=\"');\nconst placeholder2 = stringToPrecomputedChunk('\"></template>');\nexport function writePlaceholder(\n  destination: Destination,\n  responseState: ResponseState,\n  id: number,\n): boolean {\n  writeChunk(destination, placeholder1);\n  writeChunk(destination, responseState.placeholderPrefix);\n  const formattedID = stringToChunk(id.toString(16));\n  writeChunk(destination, formattedID);\n  return writeChunkAndReturn(destination, placeholder2);\n}\n\n// Suspense boundaries are encoded as comments.\nconst startCompletedSuspenseBoundary = stringToPrecomputedChunk('<!--$-->');\nconst startPendingSuspenseBoundary1 = stringToPrecomputedChunk(\n  '<!--$?--><template id=\"',\n);\nconst startPendingSuspenseBoundary2 = stringToPrecomputedChunk('\"></template>');\nconst startClientRenderedSuspenseBoundary = stringToPrecomputedChunk(\n  '<!--$!-->',\n);\nconst endSuspenseBoundary = stringToPrecomputedChunk('<!--/$-->');\n\nconst clientRenderedSuspenseBoundaryError1 = stringToPrecomputedChunk(\n  '<template',\n);\nconst clientRenderedSuspenseBoundaryErrorAttrInterstitial = stringToPrecomputedChunk(\n  '\"',\n);\nconst clientRenderedSuspenseBoundaryError1A = stringToPrecomputedChunk(\n  ' data-dgst=\"',\n);\nconst clientRenderedSuspenseBoundaryError1B = stringToPrecomputedChunk(\n  ' data-msg=\"',\n);\nconst clientRenderedSuspenseBoundaryError1C = stringToPrecomputedChunk(\n  ' data-stck=\"',\n);\nconst clientRenderedSuspenseBoundaryError2 = stringToPrecomputedChunk(\n  '></template>',\n);\n\nexport function pushStartCompletedSuspenseBoundary(\n  target: Array<Chunk | PrecomputedChunk>,\n) {\n  target.push(startCompletedSuspenseBoundary);\n}\n\nexport function pushEndCompletedSuspenseBoundary(\n  target: Array<Chunk | PrecomputedChunk>,\n) {\n  target.push(endSuspenseBoundary);\n}\n\nexport function writeStartCompletedSuspenseBoundary(\n  destination: Destination,\n  responseState: ResponseState,\n): boolean {\n  return writeChunkAndReturn(destination, startCompletedSuspenseBoundary);\n}\nexport function writeStartPendingSuspenseBoundary(\n  destination: Destination,\n  responseState: ResponseState,\n  id: SuspenseBoundaryID,\n): boolean {\n  writeChunk(destination, startPendingSuspenseBoundary1);\n\n  if (id === null) {\n    throw new Error(\n      'An ID must have been assigned before we can complete the boundary.',\n    );\n  }\n\n  writeChunk(destination, id);\n  return writeChunkAndReturn(destination, startPendingSuspenseBoundary2);\n}\nexport function writeStartClientRenderedSuspenseBoundary(\n  destination: Destination,\n  responseState: ResponseState,\n  errorDigest: ?string,\n  errorMesssage: ?string,\n  errorComponentStack: ?string,\n): boolean {\n  let result;\n  result = writeChunkAndReturn(\n    destination,\n    startClientRenderedSuspenseBoundary,\n  );\n  writeChunk(destination, clientRenderedSuspenseBoundaryError1);\n  if (errorDigest) {\n    writeChunk(destination, clientRenderedSuspenseBoundaryError1A);\n    writeChunk(destination, stringToChunk(escapeTextForBrowser(errorDigest)));\n    writeChunk(\n      destination,\n      clientRenderedSuspenseBoundaryErrorAttrInterstitial,\n    );\n  }\n  if (__DEV__) {\n    if (errorMesssage) {\n      writeChunk(destination, clientRenderedSuspenseBoundaryError1B);\n      writeChunk(\n        destination,\n        stringToChunk(escapeTextForBrowser(errorMesssage)),\n      );\n      writeChunk(\n        destination,\n        clientRenderedSuspenseBoundaryErrorAttrInterstitial,\n      );\n    }\n    if (errorComponentStack) {\n      writeChunk(destination, clientRenderedSuspenseBoundaryError1C);\n      writeChunk(\n        destination,\n        stringToChunk(escapeTextForBrowser(errorComponentStack)),\n      );\n      writeChunk(\n        destination,\n        clientRenderedSuspenseBoundaryErrorAttrInterstitial,\n      );\n    }\n  }\n  result = writeChunkAndReturn(\n    destination,\n    clientRenderedSuspenseBoundaryError2,\n  );\n  return result;\n}\nexport function writeEndCompletedSuspenseBoundary(\n  destination: Destination,\n  responseState: ResponseState,\n): boolean {\n  return writeChunkAndReturn(destination, endSuspenseBoundary);\n}\nexport function writeEndPendingSuspenseBoundary(\n  destination: Destination,\n  responseState: ResponseState,\n): boolean {\n  return writeChunkAndReturn(destination, endSuspenseBoundary);\n}\nexport function writeEndClientRenderedSuspenseBoundary(\n  destination: Destination,\n  responseState: ResponseState,\n): boolean {\n  return writeChunkAndReturn(destination, endSuspenseBoundary);\n}\n\nconst startSegmentHTML = stringToPrecomputedChunk('<div hidden id=\"');\nconst startSegmentHTML2 = stringToPrecomputedChunk('\">');\nconst endSegmentHTML = stringToPrecomputedChunk('</div>');\n\nconst startSegmentSVG = stringToPrecomputedChunk(\n  '<svg aria-hidden=\"true\" style=\"display:none\" id=\"',\n);\nconst startSegmentSVG2 = stringToPrecomputedChunk('\">');\nconst endSegmentSVG = stringToPrecomputedChunk('</svg>');\n\nconst startSegmentMathML = stringToPrecomputedChunk(\n  '<math aria-hidden=\"true\" style=\"display:none\" id=\"',\n);\nconst startSegmentMathML2 = stringToPrecomputedChunk('\">');\nconst endSegmentMathML = stringToPrecomputedChunk('</math>');\n\nconst startSegmentTable = stringToPrecomputedChunk('<table hidden id=\"');\nconst startSegmentTable2 = stringToPrecomputedChunk('\">');\nconst endSegmentTable = stringToPrecomputedChunk('</table>');\n\nconst startSegmentTableBody = stringToPrecomputedChunk(\n  '<table hidden><tbody id=\"',\n);\nconst startSegmentTableBody2 = stringToPrecomputedChunk('\">');\nconst endSegmentTableBody = stringToPrecomputedChunk('</tbody></table>');\n\nconst startSegmentTableRow = stringToPrecomputedChunk('<table hidden><tr id=\"');\nconst startSegmentTableRow2 = stringToPrecomputedChunk('\">');\nconst endSegmentTableRow = stringToPrecomputedChunk('</tr></table>');\n\nconst startSegmentColGroup = stringToPrecomputedChunk(\n  '<table hidden><colgroup id=\"',\n);\nconst startSegmentColGroup2 = stringToPrecomputedChunk('\">');\nconst endSegmentColGroup = stringToPrecomputedChunk('</colgroup></table>');\n\nexport function writeStartSegment(\n  destination: Destination,\n  responseState: ResponseState,\n  formatContext: FormatContext,\n  id: number,\n): boolean {\n  switch (formatContext.insertionMode) {\n    case ROOT_HTML_MODE:\n    case HTML_MODE: {\n      writeChunk(destination, startSegmentHTML);\n      writeChunk(destination, responseState.segmentPrefix);\n      writeChunk(destination, stringToChunk(id.toString(16)));\n      return writeChunkAndReturn(destination, startSegmentHTML2);\n    }\n    case SVG_MODE: {\n      writeChunk(destination, startSegmentSVG);\n      writeChunk(destination, responseState.segmentPrefix);\n      writeChunk(destination, stringToChunk(id.toString(16)));\n      return writeChunkAndReturn(destination, startSegmentSVG2);\n    }\n    case MATHML_MODE: {\n      writeChunk(destination, startSegmentMathML);\n      writeChunk(destination, responseState.segmentPrefix);\n      writeChunk(destination, stringToChunk(id.toString(16)));\n      return writeChunkAndReturn(destination, startSegmentMathML2);\n    }\n    case HTML_TABLE_MODE: {\n      writeChunk(destination, startSegmentTable);\n      writeChunk(destination, responseState.segmentPrefix);\n      writeChunk(destination, stringToChunk(id.toString(16)));\n      return writeChunkAndReturn(destination, startSegmentTable2);\n    }\n    // TODO: For the rest of these, there will be extra wrapper nodes that never\n    // get deleted from the document. We need to delete the table too as part\n    // of the injected scripts. They are invisible though so it's not too terrible\n    // and it's kind of an edge case to suspend in a table. Totally supported though.\n    case HTML_TABLE_BODY_MODE: {\n      writeChunk(destination, startSegmentTableBody);\n      writeChunk(destination, responseState.segmentPrefix);\n      writeChunk(destination, stringToChunk(id.toString(16)));\n      return writeChunkAndReturn(destination, startSegmentTableBody2);\n    }\n    case HTML_TABLE_ROW_MODE: {\n      writeChunk(destination, startSegmentTableRow);\n      writeChunk(destination, responseState.segmentPrefix);\n      writeChunk(destination, stringToChunk(id.toString(16)));\n      return writeChunkAndReturn(destination, startSegmentTableRow2);\n    }\n    case HTML_COLGROUP_MODE: {\n      writeChunk(destination, startSegmentColGroup);\n      writeChunk(destination, responseState.segmentPrefix);\n      writeChunk(destination, stringToChunk(id.toString(16)));\n      return writeChunkAndReturn(destination, startSegmentColGroup2);\n    }\n    default: {\n      throw new Error('Unknown insertion mode. This is a bug in React.');\n    }\n  }\n}\nexport function writeEndSegment(\n  destination: Destination,\n  formatContext: FormatContext,\n): boolean {\n  switch (formatContext.insertionMode) {\n    case ROOT_HTML_MODE:\n    case HTML_MODE: {\n      return writeChunkAndReturn(destination, endSegmentHTML);\n    }\n    case SVG_MODE: {\n      return writeChunkAndReturn(destination, endSegmentSVG);\n    }\n    case MATHML_MODE: {\n      return writeChunkAndReturn(destination, endSegmentMathML);\n    }\n    case HTML_TABLE_MODE: {\n      return writeChunkAndReturn(destination, endSegmentTable);\n    }\n    case HTML_TABLE_BODY_MODE: {\n      return writeChunkAndReturn(destination, endSegmentTableBody);\n    }\n    case HTML_TABLE_ROW_MODE: {\n      return writeChunkAndReturn(destination, endSegmentTableRow);\n    }\n    case HTML_COLGROUP_MODE: {\n      return writeChunkAndReturn(destination, endSegmentColGroup);\n    }\n    default: {\n      throw new Error('Unknown insertion mode. This is a bug in React.');\n    }\n  }\n}\n\n// Instruction Set\n\n// The following code is the source scripts that we then minify and inline below,\n// with renamed function names that we hope don't collide:\n\n// const COMMENT_NODE = 8;\n// const SUSPENSE_START_DATA = '$';\n// const SUSPENSE_END_DATA = '/$';\n// const SUSPENSE_PENDING_START_DATA = '$?';\n// const SUSPENSE_FALLBACK_START_DATA = '$!';\n//\n// function clientRenderBoundary(suspenseBoundaryID, errorDigest, errorMsg, errorComponentStack) {\n//   // Find the fallback's first element.\n//   const suspenseIdNode = document.getElementById(suspenseBoundaryID);\n//   if (!suspenseIdNode) {\n//     // The user must have already navigated away from this tree.\n//     // E.g. because the parent was hydrated.\n//     return;\n//   }\n//   // Find the boundary around the fallback. This is always the previous node.\n//   const suspenseNode = suspenseIdNode.previousSibling;\n//   // Tag it to be client rendered.\n//   suspenseNode.data = SUSPENSE_FALLBACK_START_DATA;\n//   // assign error metadata to first sibling\n//   let dataset = suspenseIdNode.dataset;\n//   if (errorDigest) dataset.dgst = errorDigest;\n//   if (errorMsg) dataset.msg = errorMsg;\n//   if (errorComponentStack) dataset.stck = errorComponentStack;\n//   // Tell React to retry it if the parent already hydrated.\n//   if (suspenseNode._reactRetry) {\n//     suspenseNode._reactRetry();\n//   }\n// }\n//\n// function completeBoundary(suspenseBoundaryID, contentID) {\n//   // Find the fallback's first element.\n//   const suspenseIdNode = document.getElementById(suspenseBoundaryID);\n//   const contentNode = document.getElementById(contentID);\n//   // We'll detach the content node so that regardless of what happens next we don't leave in the tree.\n//   // This might also help by not causing recalcing each time we move a child from here to the target.\n//   contentNode.parentNode.removeChild(contentNode);\n//   if (!suspenseIdNode) {\n//     // The user must have already navigated away from this tree.\n//     // E.g. because the parent was hydrated. That's fine there's nothing to do\n//     // but we have to make sure that we already deleted the container node.\n//     return;\n//   }\n//   // Find the boundary around the fallback. This is always the previous node.\n//   const suspenseNode = suspenseIdNode.previousSibling;\n//\n//   // Clear all the existing children. This is complicated because\n//   // there can be embedded Suspense boundaries in the fallback.\n//   // This is similar to clearSuspenseBoundary in ReactDOMHostConfig.\n//   // TODO: We could avoid this if we never emitted suspense boundaries in fallback trees.\n//   // They never hydrate anyway. However, currently we support incrementally loading the fallback.\n//   const parentInstance = suspenseNode.parentNode;\n//   let node = suspenseNode.nextSibling;\n//   let depth = 0;\n//   do {\n//     if (node && node.nodeType === COMMENT_NODE) {\n//       const data = node.data;\n//       if (data === SUSPENSE_END_DATA) {\n//         if (depth === 0) {\n//           break;\n//         } else {\n//           depth--;\n//         }\n//       } else if (\n//         data === SUSPENSE_START_DATA ||\n//         data === SUSPENSE_PENDING_START_DATA ||\n//         data === SUSPENSE_FALLBACK_START_DATA\n//       ) {\n//         depth++;\n//       }\n//     }\n//\n//     const nextNode = node.nextSibling;\n//     parentInstance.removeChild(node);\n//     node = nextNode;\n//   } while (node);\n//\n//   const endOfBoundary = node;\n//\n//   // Insert all the children from the contentNode between the start and end of suspense boundary.\n//   while (contentNode.firstChild) {\n//     parentInstance.insertBefore(contentNode.firstChild, endOfBoundary);\n//   }\n\n//   suspenseNode.data = SUSPENSE_START_DATA;\n//   if (suspenseNode._reactRetry) {\n//     suspenseNode._reactRetry();\n//   }\n// }\n//\n// function completeSegment(containerID, placeholderID) {\n//   const segmentContainer = document.getElementById(containerID);\n//   const placeholderNode = document.getElementById(placeholderID);\n//   // We always expect both nodes to exist here because, while we might\n//   // have navigated away from the main tree, we still expect the detached\n//   // tree to exist.\n//   segmentContainer.parentNode.removeChild(segmentContainer);\n//   while (segmentContainer.firstChild) {\n//     placeholderNode.parentNode.insertBefore(\n//       segmentContainer.firstChild,\n//       placeholderNode,\n//     );\n//   }\n//   placeholderNode.parentNode.removeChild(placeholderNode);\n// }\n\nconst completeSegmentFunction =\n  'function $RS(a,b){a=document.getElementById(a);b=document.getElementById(b);for(a.parentNode.removeChild(a);a.firstChild;)b.parentNode.insertBefore(a.firstChild,b);b.parentNode.removeChild(b)}';\nconst completeBoundaryFunction =\n  'function $RC(a,b){a=document.getElementById(a);b=document.getElementById(b);b.parentNode.removeChild(b);if(a){a=a.previousSibling;var f=a.parentNode,c=a.nextSibling,e=0;do{if(c&&8===c.nodeType){var d=c.data;if(\"/$\"===d)if(0===e)break;else e--;else\"$\"!==d&&\"$?\"!==d&&\"$!\"!==d||e++}d=c.nextSibling;f.removeChild(c);c=d}while(c);for(;b.firstChild;)f.insertBefore(b.firstChild,c);a.data=\"$\";a._reactRetry&&a._reactRetry()}}';\nconst clientRenderFunction =\n  'function $RX(b,c,d,e){var a=document.getElementById(b);a&&(b=a.previousSibling,b.data=\"$!\",a=a.dataset,c&&(a.dgst=c),d&&(a.msg=d),e&&(a.stck=e),b._reactRetry&&b._reactRetry())}';\n\nconst completeSegmentScript1Full = stringToPrecomputedChunk(\n  completeSegmentFunction + ';$RS(\"',\n);\nconst completeSegmentScript1Partial = stringToPrecomputedChunk('$RS(\"');\nconst completeSegmentScript2 = stringToPrecomputedChunk('\",\"');\nconst completeSegmentScript3 = stringToPrecomputedChunk('\")</script>');\n\nexport function writeCompletedSegmentInstruction(\n  destination: Destination,\n  responseState: ResponseState,\n  contentSegmentID: number,\n): boolean {\n  writeChunk(destination, responseState.startInlineScript);\n  if (!responseState.sentCompleteSegmentFunction) {\n    // The first time we write this, we'll need to include the full implementation.\n    responseState.sentCompleteSegmentFunction = true;\n    writeChunk(destination, completeSegmentScript1Full);\n  } else {\n    // Future calls can just reuse the same function.\n    writeChunk(destination, completeSegmentScript1Partial);\n  }\n  writeChunk(destination, responseState.segmentPrefix);\n  const formattedID = stringToChunk(contentSegmentID.toString(16));\n  writeChunk(destination, formattedID);\n  writeChunk(destination, completeSegmentScript2);\n  writeChunk(destination, responseState.placeholderPrefix);\n  writeChunk(destination, formattedID);\n  return writeChunkAndReturn(destination, completeSegmentScript3);\n}\n\nconst completeBoundaryScript1Full = stringToPrecomputedChunk(\n  completeBoundaryFunction + ';$RC(\"',\n);\nconst completeBoundaryScript1Partial = stringToPrecomputedChunk('$RC(\"');\nconst completeBoundaryScript2 = stringToPrecomputedChunk('\",\"');\nconst completeBoundaryScript3 = stringToPrecomputedChunk('\")</script>');\n\nexport function writeCompletedBoundaryInstruction(\n  destination: Destination,\n  responseState: ResponseState,\n  boundaryID: SuspenseBoundaryID,\n  contentSegmentID: number,\n): boolean {\n  writeChunk(destination, responseState.startInlineScript);\n  if (!responseState.sentCompleteBoundaryFunction) {\n    // The first time we write this, we'll need to include the full implementation.\n    responseState.sentCompleteBoundaryFunction = true;\n    writeChunk(destination, completeBoundaryScript1Full);\n  } else {\n    // Future calls can just reuse the same function.\n    writeChunk(destination, completeBoundaryScript1Partial);\n  }\n\n  if (boundaryID === null) {\n    throw new Error(\n      'An ID must have been assigned before we can complete the boundary.',\n    );\n  }\n\n  const formattedContentID = stringToChunk(contentSegmentID.toString(16));\n  writeChunk(destination, boundaryID);\n  writeChunk(destination, completeBoundaryScript2);\n  writeChunk(destination, responseState.segmentPrefix);\n  writeChunk(destination, formattedContentID);\n  return writeChunkAndReturn(destination, completeBoundaryScript3);\n}\n\nconst clientRenderScript1Full = stringToPrecomputedChunk(\n  clientRenderFunction + ';$RX(\"',\n);\nconst clientRenderScript1Partial = stringToPrecomputedChunk('$RX(\"');\nconst clientRenderScript1A = stringToPrecomputedChunk('\"');\nconst clientRenderScript2 = stringToPrecomputedChunk(')</script>');\nconst clientRenderErrorScriptArgInterstitial = stringToPrecomputedChunk(',');\n\nexport function writeClientRenderBoundaryInstruction(\n  destination: Destination,\n  responseState: ResponseState,\n  boundaryID: SuspenseBoundaryID,\n  errorDigest: ?string,\n  errorMessage?: string,\n  errorComponentStack?: string,\n): boolean {\n  writeChunk(destination, responseState.startInlineScript);\n  if (!responseState.sentClientRenderFunction) {\n    // The first time we write this, we'll need to include the full implementation.\n    responseState.sentClientRenderFunction = true;\n    writeChunk(destination, clientRenderScript1Full);\n  } else {\n    // Future calls can just reuse the same function.\n    writeChunk(destination, clientRenderScript1Partial);\n  }\n\n  if (boundaryID === null) {\n    throw new Error(\n      'An ID must have been assigned before we can complete the boundary.',\n    );\n  }\n\n  writeChunk(destination, boundaryID);\n  writeChunk(destination, clientRenderScript1A);\n  if (errorDigest || errorMessage || errorComponentStack) {\n    writeChunk(destination, clientRenderErrorScriptArgInterstitial);\n    writeChunk(\n      destination,\n      stringToChunk(escapeJSStringsForInstructionScripts(errorDigest || '')),\n    );\n  }\n  if (errorMessage || errorComponentStack) {\n    writeChunk(destination, clientRenderErrorScriptArgInterstitial);\n    writeChunk(\n      destination,\n      stringToChunk(escapeJSStringsForInstructionScripts(errorMessage || '')),\n    );\n  }\n  if (errorComponentStack) {\n    writeChunk(destination, clientRenderErrorScriptArgInterstitial);\n    writeChunk(\n      destination,\n      stringToChunk(escapeJSStringsForInstructionScripts(errorComponentStack)),\n    );\n  }\n  return writeChunkAndReturn(destination, clientRenderScript2);\n}\n\nconst regexForJSStringsInScripts = /[<\\u2028\\u2029]/g;\nfunction escapeJSStringsForInstructionScripts(input: string): string {\n  const escaped = JSON.stringify(input);\n  return escaped.replace(regexForJSStringsInScripts, match => {\n    switch (match) {\n      // santizing breaking out of strings and script tags\n      case '<':\n        return '\\\\u003c';\n      case '\\u2028':\n        return '\\\\u2028';\n      case '\\u2029':\n        return '\\\\u2029';\n      default: {\n        // eslint-disable-next-line react-internal/prod-error-codes\n        throw new Error(\n          'escapeJSStringsForInstructionScripts encountered a match it does not know how to replace. this means the match regex and the replacement characters are no longer in sync. This is a bug in React',\n        );\n      }\n    }\n  });\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {\n  ReactServerContext,\n  ServerContextJSONValue,\n} from 'shared/ReactTypes';\n\nimport {REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED} from 'shared/ReactSymbols';\nimport {isPrimaryRenderer} from './ReactServerFormatConfig';\n\nlet rendererSigil;\nif (__DEV__) {\n  // Use this to detect multiple renderers using the same context\n  rendererSigil = {};\n}\n\n// Used to store the parent path of all context overrides in a shared linked list.\n// Forming a reverse tree.\ntype ContextNode<T: ServerContextJSONValue> = {\n  parent: null | ContextNode<any>,\n  depth: number, // Short hand to compute the depth of the tree at this node.\n  context: ReactServerContext<T>,\n  parentValue: T,\n  value: T,\n};\n\n// The structure of a context snapshot is an implementation of this file.\n// Currently, it's implemented as tracking the current active node.\nexport opaque type ContextSnapshot = null | ContextNode<any>;\n\nexport const rootContextSnapshot: ContextSnapshot = null;\n\n// We assume that this runtime owns the \"current\" field on all ReactContext instances.\n// This global (actually thread local) state represents what state all those \"current\",\n// fields are currently in.\nlet currentActiveSnapshot: ContextSnapshot = null;\n\nfunction popNode(prev: ContextNode<any>): void {\n  if (isPrimaryRenderer) {\n    prev.context._currentValue = prev.parentValue;\n  } else {\n    prev.context._currentValue2 = prev.parentValue;\n  }\n}\n\nfunction pushNode(next: ContextNode<any>): void {\n  if (isPrimaryRenderer) {\n    next.context._currentValue = next.value;\n  } else {\n    next.context._currentValue2 = next.value;\n  }\n}\n\nfunction popToNearestCommonAncestor(\n  prev: ContextNode<any>,\n  next: ContextNode<any>,\n): void {\n  if (prev === next) {\n    // We've found a shared ancestor. We don't need to pop nor reapply this one or anything above.\n  } else {\n    popNode(prev);\n    const parentPrev = prev.parent;\n    const parentNext = next.parent;\n    if (parentPrev === null) {\n      if (parentNext !== null) {\n        throw new Error(\n          'The stacks must reach the root at the same time. This is a bug in React.',\n        );\n      }\n    } else {\n      if (parentNext === null) {\n        throw new Error(\n          'The stacks must reach the root at the same time. This is a bug in React.',\n        );\n      }\n\n      popToNearestCommonAncestor(parentPrev, parentNext);\n      // On the way back, we push the new ones that weren't common.\n      pushNode(next);\n    }\n  }\n}\n\nfunction popAllPrevious(prev: ContextNode<any>): void {\n  popNode(prev);\n  const parentPrev = prev.parent;\n  if (parentPrev !== null) {\n    popAllPrevious(parentPrev);\n  }\n}\n\nfunction pushAllNext(next: ContextNode<any>): void {\n  const parentNext = next.parent;\n  if (parentNext !== null) {\n    pushAllNext(parentNext);\n  }\n  pushNode(next);\n}\n\nfunction popPreviousToCommonLevel(\n  prev: ContextNode<any>,\n  next: ContextNode<any>,\n): void {\n  popNode(prev);\n  const parentPrev = prev.parent;\n\n  if (parentPrev === null) {\n    throw new Error(\n      'The depth must equal at least at zero before reaching the root. This is a bug in React.',\n    );\n  }\n\n  if (parentPrev.depth === next.depth) {\n    // We found the same level. Now we just need to find a shared ancestor.\n    popToNearestCommonAncestor(parentPrev, next);\n  } else {\n    // We must still be deeper.\n    popPreviousToCommonLevel(parentPrev, next);\n  }\n}\n\nfunction popNextToCommonLevel(\n  prev: ContextNode<any>,\n  next: ContextNode<any>,\n): void {\n  const parentNext = next.parent;\n\n  if (parentNext === null) {\n    throw new Error(\n      'The depth must equal at least at zero before reaching the root. This is a bug in React.',\n    );\n  }\n\n  if (prev.depth === parentNext.depth) {\n    // We found the same level. Now we just need to find a shared ancestor.\n    popToNearestCommonAncestor(prev, parentNext);\n  } else {\n    // We must still be deeper.\n    popNextToCommonLevel(prev, parentNext);\n  }\n  pushNode(next);\n}\n\n// Perform context switching to the new snapshot.\n// To make it cheap to read many contexts, while not suspending, we make the switch eagerly by\n// updating all the context's current values. That way reads, always just read the current value.\n// At the cost of updating contexts even if they're never read by this subtree.\nexport function switchContext(newSnapshot: ContextSnapshot): void {\n  // The basic algorithm we need to do is to pop back any contexts that are no longer on the stack.\n  // We also need to update any new contexts that are now on the stack with the deepest value.\n  // The easiest way to update new contexts is to just reapply them in reverse order from the\n  // perspective of the backpointers. To avoid allocating a lot when switching, we use the stack\n  // for that. Therefore this algorithm is recursive.\n  // 1) First we pop which ever snapshot tree was deepest. Popping old contexts as we go.\n  // 2) Then we find the nearest common ancestor from there. Popping old contexts as we go.\n  // 3) Then we reapply new contexts on the way back up the stack.\n  const prev = currentActiveSnapshot;\n  const next = newSnapshot;\n  if (prev !== next) {\n    if (prev === null) {\n      // $FlowFixMe: This has to be non-null since it's not equal to prev.\n      pushAllNext(next);\n    } else if (next === null) {\n      popAllPrevious(prev);\n    } else if (prev.depth === next.depth) {\n      popToNearestCommonAncestor(prev, next);\n    } else if (prev.depth > next.depth) {\n      popPreviousToCommonLevel(prev, next);\n    } else {\n      popNextToCommonLevel(prev, next);\n    }\n    currentActiveSnapshot = next;\n  }\n}\n\nexport function pushProvider<T: ServerContextJSONValue>(\n  context: ReactServerContext<T>,\n  nextValue: T,\n): ContextSnapshot {\n  let prevValue;\n  if (isPrimaryRenderer) {\n    prevValue = context._currentValue;\n    context._currentValue = nextValue;\n    if (__DEV__) {\n      if (\n        context._currentRenderer !== undefined &&\n        context._currentRenderer !== null &&\n        context._currentRenderer !== rendererSigil\n      ) {\n        console.error(\n          'Detected multiple renderers concurrently rendering the ' +\n            'same context provider. This is currently unsupported.',\n        );\n      }\n      context._currentRenderer = rendererSigil;\n    }\n  } else {\n    prevValue = context._currentValue2;\n    context._currentValue2 = nextValue;\n    if (__DEV__) {\n      if (\n        context._currentRenderer2 !== undefined &&\n        context._currentRenderer2 !== null &&\n        context._currentRenderer2 !== rendererSigil\n      ) {\n        console.error(\n          'Detected multiple renderers concurrently rendering the ' +\n            'same context provider. This is currently unsupported.',\n        );\n      }\n      context._currentRenderer2 = rendererSigil;\n    }\n  }\n  const prevNode = currentActiveSnapshot;\n  const newNode: ContextNode<T> = {\n    parent: prevNode,\n    depth: prevNode === null ? 0 : prevNode.depth + 1,\n    context: context,\n    parentValue: prevValue,\n    value: nextValue,\n  };\n  currentActiveSnapshot = newNode;\n  return newNode;\n}\n\nexport function popProvider(): ContextSnapshot {\n  const prevSnapshot = currentActiveSnapshot;\n\n  if (prevSnapshot === null) {\n    throw new Error(\n      'Tried to pop a Context at the root of the app. This is a bug in React.',\n    );\n  }\n\n  if (isPrimaryRenderer) {\n    const value = prevSnapshot.parentValue;\n    if (value === REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED) {\n      prevSnapshot.context._currentValue = prevSnapshot.context._defaultValue;\n    } else {\n      prevSnapshot.context._currentValue = value;\n    }\n  } else {\n    const value = prevSnapshot.parentValue;\n    if (value === REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED) {\n      prevSnapshot.context._currentValue2 = prevSnapshot.context._defaultValue;\n    } else {\n      prevSnapshot.context._currentValue2 = value;\n    }\n  }\n  return (currentActiveSnapshot = prevSnapshot.parent);\n}\n\nexport function getActiveContext(): ContextSnapshot {\n  return currentActiveSnapshot;\n}\n\nexport function readContext<T>(context: ReactServerContext<T>): T {\n  const value = isPrimaryRenderer\n    ? context._currentValue\n    : context._currentValue2;\n  return value;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Dispatcher as DispatcherType} from 'react-reconciler/src/ReactInternalTypes';\nimport type {Request} from './ReactFlightServer';\nimport type {ReactServerContext} from 'shared/ReactTypes';\nimport {REACT_SERVER_CONTEXT_TYPE} from 'shared/ReactSymbols';\nimport {readContext as readContextImpl} from './ReactFlightNewContext';\n\nlet currentRequest = null;\n\nexport function prepareToUseHooksForRequest(request: Request) {\n  currentRequest = request;\n}\n\nexport function resetHooksForRequest() {\n  currentRequest = null;\n}\n\nfunction readContext<T>(context: ReactServerContext<T>): T {\n  if (__DEV__) {\n    if (context.$$typeof !== REACT_SERVER_CONTEXT_TYPE) {\n      console.error('Only ServerContext is supported in Flight');\n    }\n    if (currentCache === null) {\n      console.error(\n        'Context can only be read while React is rendering. ' +\n          'In classes, you can read it in the render method or getDerivedStateFromProps. ' +\n          'In function components, you can read it directly in the function body, but not ' +\n          'inside Hooks like useReducer() or useMemo().',\n      );\n    }\n  }\n  return readContextImpl(context);\n}\n\nexport const Dispatcher: DispatcherType = {\n  useMemo<T>(nextCreate: () => T): T {\n    return nextCreate();\n  },\n  useCallback<T>(callback: T): T {\n    return callback;\n  },\n  useDebugValue(): void {},\n  useDeferredValue: (unsupportedHook: any),\n  useTransition: (unsupportedHook: any),\n  getCacheForType<T>(resourceType: () => T): T {\n    if (!currentCache) {\n      throw new Error('Reading the cache is only supported while rendering.');\n    }\n\n    let entry: T | void = (currentCache.get(resourceType): any);\n    if (entry === undefined) {\n      entry = resourceType();\n      // TODO: Warn if undefined?\n      currentCache.set(resourceType, entry);\n    }\n    return entry;\n  },\n  readContext,\n  useContext: readContext,\n  useReducer: (unsupportedHook: any),\n  useRef: (unsupportedHook: any),\n  useState: (unsupportedHook: any),\n  useInsertionEffect: (unsupportedHook: any),\n  useLayoutEffect: (unsupportedHook: any),\n  useImperativeHandle: (unsupportedHook: any),\n  useEffect: (unsupportedHook: any),\n  useId,\n  useMutableSource: (unsupportedHook: any),\n  useSyncExternalStore: (unsupportedHook: any),\n  useCacheRefresh(): <T>(?() => T, ?T) => void {\n    return unsupportedRefresh;\n  },\n};\n\nfunction unsupportedHook(): void {\n  throw new Error('This Hook is not supported in Server Components.');\n}\n\nfunction unsupportedRefresh(): void {\n  if (!currentCache) {\n    throw new Error(\n      'Refreshing the cache is not supported in Server Components.',\n    );\n  }\n}\n\nlet currentCache: Map<Function, mixed> | null = null;\n\nexport function setCurrentCache(cache: Map<Function, mixed> | null) {\n  currentCache = cache;\n  return currentCache;\n}\n\nexport function getCurrentCache() {\n  return currentCache;\n}\n\nfunction useId(): string {\n  if (currentRequest === null) {\n    throw new Error('useId can only be used while React is rendering');\n  }\n  const id = currentRequest.identifierCount++;\n  // use 'S' for Flight components to distinguish from 'R' and 'r' in Fizz/Client\n  return ':' + currentRequest.identifierPrefix + 'S' + id.toString(32) + ':';\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport {REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED} from 'shared/ReactSymbols';\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\nimport {createServerContext} from 'react';\n\nconst ContextRegistry = ReactSharedInternals.ContextRegistry;\n\nexport function getOrCreateServerContext(globalName: string) {\n  if (!ContextRegistry[globalName]) {\n    ContextRegistry[globalName] = createServerContext(\n      globalName,\n      REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED,\n    );\n  }\n  return ContextRegistry[globalName];\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {\n  Destination,\n  Chunk,\n  BundlerConfig,\n  ModuleMetaData,\n  ModuleReference,\n  ModuleKey,\n} from './ReactFlightServerConfig';\nimport type {ContextSnapshot} from './ReactFlightNewContext';\nimport type {\n  ReactProviderType,\n  ServerContextJSONValue,\n} from 'shared/ReactTypes';\n\nimport {\n  scheduleWork,\n  beginWriting,\n  writeChunkAndReturn,\n  completeWriting,\n  flushBuffered,\n  close,\n  closeWithError,\n  processModelChunk,\n  processModuleChunk,\n  processProviderChunk,\n  processSymbolChunk,\n  processErrorChunk,\n  resolveModuleMetaData,\n  getModuleKey,\n  isModuleReference,\n} from './ReactFlightServerConfig';\n\nimport {\n  Dispatcher,\n  getCurrentCache,\n  prepareToUseHooksForRequest,\n  resetHooksForRequest,\n  setCurrentCache,\n} from './ReactFlightHooks';\nimport {\n  pushProvider,\n  popProvider,\n  switchContext,\n  getActiveContext,\n  rootContextSnapshot,\n} from './ReactFlightNewContext';\n\nimport {\n  REACT_ELEMENT_TYPE,\n  REACT_FORWARD_REF_TYPE,\n  REACT_FRAGMENT_TYPE,\n  REACT_LAZY_TYPE,\n  REACT_MEMO_TYPE,\n  REACT_PROVIDER_TYPE,\n} from 'shared/ReactSymbols';\n\nimport {getOrCreateServerContext} from 'shared/ReactServerContextRegistry';\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\nimport isArray from 'shared/isArray';\n\ntype ReactJSONValue =\n  | string\n  | boolean\n  | number\n  | null\n  | $ReadOnlyArray<ReactJSONValue>\n  | ReactModelObject;\n\nexport type ReactModel =\n  | React$Element<any>\n  | string\n  | boolean\n  | number\n  | null\n  | Iterable<ReactModel>\n  | ReactModelObject;\n\ntype ReactModelObject = {+[key: string]: ReactModel};\n\ntype Segment = {\n  id: number,\n  model: ReactModel,\n  ping: () => void,\n  context: ContextSnapshot,\n};\n\nexport type Request = {\n  status: 0 | 1 | 2,\n  fatalError: mixed,\n  destination: null | Destination,\n  bundlerConfig: BundlerConfig,\n  cache: Map<Function, mixed>,\n  nextChunkId: number,\n  pendingChunks: number,\n  pingedSegments: Array<Segment>,\n  completedModuleChunks: Array<Chunk>,\n  completedJSONChunks: Array<Chunk>,\n  completedErrorChunks: Array<Chunk>,\n  writtenSymbols: Map<Symbol, number>,\n  writtenModules: Map<ModuleKey, number>,\n  writtenProviders: Map<string, number>,\n  identifierPrefix: string,\n  identifierCount: number,\n  onError: (error: mixed) => void,\n  toJSON: (key: string, value: ReactModel) => ReactJSONValue,\n};\n\nconst ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;\n\nfunction defaultErrorHandler(error: mixed) {\n  console['error'](error);\n  // Don't transform to our wrapper\n}\n\nconst OPEN = 0;\nconst CLOSING = 1;\nconst CLOSED = 2;\n\nexport function createRequest(\n  model: ReactModel,\n  bundlerConfig: BundlerConfig,\n  onError: void | ((error: mixed) => void),\n  context?: Array<[string, ServerContextJSONValue]>,\n  identifierPrefix?: string,\n): Request {\n  const pingedSegments = [];\n  const request = {\n    status: OPEN,\n    fatalError: null,\n    destination: null,\n    bundlerConfig,\n    cache: new Map(),\n    nextChunkId: 0,\n    pendingChunks: 0,\n    pingedSegments: pingedSegments,\n    completedModuleChunks: [],\n    completedJSONChunks: [],\n    completedErrorChunks: [],\n    writtenSymbols: new Map(),\n    writtenModules: new Map(),\n    writtenProviders: new Map(),\n    identifierPrefix: identifierPrefix || '',\n    identifierCount: 1,\n    onError: onError === undefined ? defaultErrorHandler : onError,\n    toJSON: function(key: string, value: ReactModel): ReactJSONValue {\n      return resolveModelToJSON(request, this, key, value);\n    },\n  };\n  request.pendingChunks++;\n  const rootContext = createRootContext(context);\n  const rootSegment = createSegment(request, model, rootContext);\n  pingedSegments.push(rootSegment);\n  return request;\n}\n\nfunction createRootContext(\n  reqContext?: Array<[string, ServerContextJSONValue]>,\n) {\n  return importServerContexts(reqContext);\n}\n\nconst POP = {};\n\nfunction attemptResolveElement(\n  type: any,\n  key: null | React$Key,\n  ref: mixed,\n  props: any,\n): ReactModel {\n  if (ref !== null && ref !== undefined) {\n    // When the ref moves to the regular props object this will implicitly\n    // throw for functions. We could probably relax it to a DEV warning for other\n    // cases.\n    throw new Error(\n      'Refs cannot be used in server components, nor passed to client components.',\n    );\n  }\n  if (typeof type === 'function') {\n    // This is a server-side component.\n    return type(props);\n  } else if (typeof type === 'string') {\n    // This is a host element. E.g. HTML.\n    return [REACT_ELEMENT_TYPE, type, key, props];\n  } else if (typeof type === 'symbol') {\n    if (type === REACT_FRAGMENT_TYPE) {\n      // For key-less fragments, we add a small optimization to avoid serializing\n      // it as a wrapper.\n      // TODO: If a key is specified, we should propagate its key to any children.\n      // Same as if a server component has a key.\n      return props.children;\n    }\n    // This might be a built-in React component. We'll let the client decide.\n    // Any built-in works as long as its props are serializable.\n    return [REACT_ELEMENT_TYPE, type, key, props];\n  } else if (type != null && typeof type === 'object') {\n    if (isModuleReference(type)) {\n      // This is a reference to a client component.\n      return [REACT_ELEMENT_TYPE, type, key, props];\n    }\n    switch (type.$$typeof) {\n      case REACT_LAZY_TYPE: {\n        const payload = type._payload;\n        const init = type._init;\n        const wrappedType = init(payload);\n        return attemptResolveElement(wrappedType, key, ref, props);\n      }\n      case REACT_FORWARD_REF_TYPE: {\n        const render = type.render;\n        return render(props, undefined);\n      }\n      case REACT_MEMO_TYPE: {\n        return attemptResolveElement(type.type, key, ref, props);\n      }\n      case REACT_PROVIDER_TYPE: {\n        pushProvider(type._context, props.value);\n        if (__DEV__) {\n          const extraKeys = Object.keys(props).filter(value => {\n            if (value === 'children' || value === 'value') {\n              return false;\n            }\n            return true;\n          });\n          if (extraKeys.length !== 0) {\n            console.error(\n              'ServerContext can only have a value prop and children. Found: %s',\n              JSON.stringify(extraKeys),\n            );\n          }\n        }\n        return [\n          REACT_ELEMENT_TYPE,\n          type,\n          key,\n          // Rely on __popProvider being serialized last to pop the provider.\n          {value: props.value, children: props.children, __pop: POP},\n        ];\n      }\n    }\n  }\n  throw new Error(\n    `Unsupported server component type: ${describeValueForErrorMessage(type)}`,\n  );\n}\n\nfunction pingSegment(request: Request, segment: Segment): void {\n  const pingedSegments = request.pingedSegments;\n  pingedSegments.push(segment);\n  if (pingedSegments.length === 1) {\n    scheduleWork(() => performWork(request));\n  }\n}\n\nfunction createSegment(\n  request: Request,\n  model: ReactModel,\n  context: ContextSnapshot,\n): Segment {\n  const id = request.nextChunkId++;\n  const segment = {\n    id,\n    model,\n    context,\n    ping: () => pingSegment(request, segment),\n  };\n  return segment;\n}\n\nfunction serializeByValueID(id: number): string {\n  return '$' + id.toString(16);\n}\n\nfunction serializeByRefID(id: number): string {\n  return '@' + id.toString(16);\n}\n\nfunction escapeStringValue(value: string): string {\n  if (value[0] === '$' || value[0] === '@') {\n    // We need to escape $ or @ prefixed strings since we use those to encode\n    // references to IDs and as special symbol values.\n    return '$' + value;\n  } else {\n    return value;\n  }\n}\n\nfunction isObjectPrototype(object): boolean {\n  if (!object) {\n    return false;\n  }\n  const ObjectPrototype = Object.prototype;\n  if (object === ObjectPrototype) {\n    return true;\n  }\n  // It might be an object from a different Realm which is\n  // still just a plain simple object.\n  if (Object.getPrototypeOf(object)) {\n    return false;\n  }\n  const names = Object.getOwnPropertyNames(object);\n  for (let i = 0; i < names.length; i++) {\n    if (!(names[i] in ObjectPrototype)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction isSimpleObject(object): boolean {\n  if (!isObjectPrototype(Object.getPrototypeOf(object))) {\n    return false;\n  }\n  const names = Object.getOwnPropertyNames(object);\n  for (let i = 0; i < names.length; i++) {\n    const descriptor = Object.getOwnPropertyDescriptor(object, names[i]);\n    if (!descriptor) {\n      return false;\n    }\n    if (!descriptor.enumerable) {\n      if (\n        (names[i] === 'key' || names[i] === 'ref') &&\n        typeof descriptor.get === 'function'\n      ) {\n        // React adds key and ref getters to props objects to issue warnings.\n        // Those getters will not be transferred to the client, but that's ok,\n        // so we'll special case them.\n        continue;\n      }\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction objectName(object): string {\n  const name = Object.prototype.toString.call(object);\n  return name.replace(/^\\[object (.*)\\]$/, function(m, p0) {\n    return p0;\n  });\n}\n\nfunction describeKeyForErrorMessage(key: string): string {\n  const encodedKey = JSON.stringify(key);\n  return '\"' + key + '\"' === encodedKey ? key : encodedKey;\n}\n\nfunction describeValueForErrorMessage(value: ReactModel): string {\n  switch (typeof value) {\n    case 'string': {\n      return JSON.stringify(\n        value.length <= 10 ? value : value.substr(0, 10) + '...',\n      );\n    }\n    case 'object': {\n      if (isArray(value)) {\n        return '[...]';\n      }\n      const name = objectName(value);\n      if (name === 'Object') {\n        return '{...}';\n      }\n      return name;\n    }\n    case 'function':\n      return 'function';\n    default:\n      // eslint-disable-next-line react-internal/safe-string-coercion\n      return String(value);\n  }\n}\n\nfunction describeObjectForErrorMessage(\n  objectOrArray:\n    | {+[key: string | number]: ReactModel}\n    | $ReadOnlyArray<ReactModel>,\n  expandedName?: string,\n): string {\n  if (isArray(objectOrArray)) {\n    let str = '[';\n    const array: $ReadOnlyArray<ReactModel> = objectOrArray;\n    for (let i = 0; i < array.length; i++) {\n      if (i > 0) {\n        str += ', ';\n      }\n      if (i > 6) {\n        str += '...';\n        break;\n      }\n      const value = array[i];\n      if (\n        '' + i === expandedName &&\n        typeof value === 'object' &&\n        value !== null\n      ) {\n        str += describeObjectForErrorMessage(value);\n      } else {\n        str += describeValueForErrorMessage(value);\n      }\n    }\n    str += ']';\n    return str;\n  } else {\n    let str = '{';\n    const object: {+[key: string | number]: ReactModel} = objectOrArray;\n    const names = Object.keys(object);\n    for (let i = 0; i < names.length; i++) {\n      if (i > 0) {\n        str += ', ';\n      }\n      if (i > 6) {\n        str += '...';\n        break;\n      }\n      const name = names[i];\n      str += describeKeyForErrorMessage(name) + ': ';\n      const value = object[name];\n      if (\n        name === expandedName &&\n        typeof value === 'object' &&\n        value !== null\n      ) {\n        str += describeObjectForErrorMessage(value);\n      } else {\n        str += describeValueForErrorMessage(value);\n      }\n    }\n    str += '}';\n    return str;\n  }\n}\n\nlet insideContextProps = null;\nlet isInsideContextValue = false;\n\nexport function resolveModelToJSON(\n  request: Request,\n  parent: {+[key: string | number]: ReactModel} | $ReadOnlyArray<ReactModel>,\n  key: string,\n  value: ReactModel,\n): ReactJSONValue {\n  if (__DEV__) {\n    // $FlowFixMe\n    const originalValue = parent[key];\n    if (typeof originalValue === 'object' && originalValue !== value) {\n      console.error(\n        'Only plain objects can be passed to client components from server components. ' +\n          'Objects with toJSON methods are not supported. Convert it manually ' +\n          'to a simple value before passing it to props. ' +\n          'Remove %s from these props: %s',\n        describeKeyForErrorMessage(key),\n        describeObjectForErrorMessage(parent),\n      );\n    }\n  }\n\n  // Special Symbols\n  switch (value) {\n    case REACT_ELEMENT_TYPE:\n      return '$';\n  }\n\n  if (__DEV__) {\n    if (\n      parent[0] === REACT_ELEMENT_TYPE &&\n      parent[1] &&\n      parent[1].$$typeof === REACT_PROVIDER_TYPE &&\n      key === '3'\n    ) {\n      insideContextProps = value;\n    } else if (insideContextProps === parent && key === 'value') {\n      isInsideContextValue = true;\n    } else if (insideContextProps === parent && key === 'children') {\n      isInsideContextValue = false;\n    }\n  }\n\n  // Resolve server components.\n  while (\n    typeof value === 'object' &&\n    value !== null &&\n    ((value: any).$$typeof === REACT_ELEMENT_TYPE ||\n      (value: any).$$typeof === REACT_LAZY_TYPE)\n  ) {\n    if (__DEV__) {\n      if (isInsideContextValue) {\n        console.error('React elements are not allowed in ServerContext');\n      }\n    }\n\n    try {\n      switch ((value: any).$$typeof) {\n        case REACT_ELEMENT_TYPE: {\n          // TODO: Concatenate keys of parents onto children.\n          const element: React$Element<any> = (value: any);\n          // Attempt to render the server component.\n          value = attemptResolveElement(\n            element.type,\n            element.key,\n            element.ref,\n            element.props,\n          );\n          break;\n        }\n        case REACT_LAZY_TYPE: {\n          const payload = (value: any)._payload;\n          const init = (value: any)._init;\n          value = init(payload);\n          break;\n        }\n      }\n    } catch (x) {\n      if (typeof x === 'object' && x !== null && typeof x.then === 'function') {\n        // Something suspended, we'll need to create a new segment and resolve it later.\n        request.pendingChunks++;\n        const newSegment = createSegment(request, value, getActiveContext());\n        const ping = newSegment.ping;\n        x.then(ping, ping);\n        return serializeByRefID(newSegment.id);\n      } else {\n        logRecoverableError(request, x);\n        // Something errored. We'll still send everything we have up until this point.\n        // We'll replace this element with a lazy reference that throws on the client\n        // once it gets rendered.\n        request.pendingChunks++;\n        const errorId = request.nextChunkId++;\n        emitErrorChunk(request, errorId, x);\n        return serializeByRefID(errorId);\n      }\n    }\n  }\n\n  if (value === null) {\n    return null;\n  }\n\n  if (typeof value === 'object') {\n    if (isModuleReference(value)) {\n      const moduleReference: ModuleReference<any> = (value: any);\n      const moduleKey: ModuleKey = getModuleKey(moduleReference);\n      const writtenModules = request.writtenModules;\n      const existingId = writtenModules.get(moduleKey);\n      if (existingId !== undefined) {\n        if (parent[0] === REACT_ELEMENT_TYPE && key === '1') {\n          // If we're encoding the \"type\" of an element, we can refer\n          // to that by a lazy reference instead of directly since React\n          // knows how to deal with lazy values. This lets us suspend\n          // on this component rather than its parent until the code has\n          // loaded.\n          return serializeByRefID(existingId);\n        }\n        return serializeByValueID(existingId);\n      }\n      try {\n        const moduleMetaData: ModuleMetaData = resolveModuleMetaData(\n          request.bundlerConfig,\n          moduleReference,\n        );\n        request.pendingChunks++;\n        const moduleId = request.nextChunkId++;\n        emitModuleChunk(request, moduleId, moduleMetaData);\n        writtenModules.set(moduleKey, moduleId);\n        if (parent[0] === REACT_ELEMENT_TYPE && key === '1') {\n          // If we're encoding the \"type\" of an element, we can refer\n          // to that by a lazy reference instead of directly since React\n          // knows how to deal with lazy values. This lets us suspend\n          // on this component rather than its parent until the code has\n          // loaded.\n          return serializeByRefID(moduleId);\n        }\n        return serializeByValueID(moduleId);\n      } catch (x) {\n        request.pendingChunks++;\n        const errorId = request.nextChunkId++;\n        emitErrorChunk(request, errorId, x);\n        return serializeByValueID(errorId);\n      }\n    } else if ((value: any).$$typeof === REACT_PROVIDER_TYPE) {\n      const providerKey = ((value: any): ReactProviderType<any>)._context\n        ._globalName;\n      const writtenProviders = request.writtenProviders;\n      let providerId = writtenProviders.get(key);\n      if (providerId === undefined) {\n        request.pendingChunks++;\n        providerId = request.nextChunkId++;\n        writtenProviders.set(providerKey, providerId);\n        emitProviderChunk(request, providerId, providerKey);\n      }\n      return serializeByValueID(providerId);\n    } else if (value === POP) {\n      popProvider();\n      if (__DEV__) {\n        insideContextProps = null;\n        isInsideContextValue = false;\n      }\n      return (undefined: any);\n    }\n\n    if (__DEV__) {\n      if (value !== null && !isArray(value)) {\n        // Verify that this is a simple plain object.\n        if (objectName(value) !== 'Object') {\n          console.error(\n            'Only plain objects can be passed to client components from server components. ' +\n              'Built-ins like %s are not supported. ' +\n              'Remove %s from these props: %s',\n            objectName(value),\n            describeKeyForErrorMessage(key),\n            describeObjectForErrorMessage(parent),\n          );\n        } else if (!isSimpleObject(value)) {\n          console.error(\n            'Only plain objects can be passed to client components from server components. ' +\n              'Classes or other objects with methods are not supported. ' +\n              'Remove %s from these props: %s',\n            describeKeyForErrorMessage(key),\n            describeObjectForErrorMessage(parent, key),\n          );\n        } else if (Object.getOwnPropertySymbols) {\n          const symbols = Object.getOwnPropertySymbols(value);\n          if (symbols.length > 0) {\n            console.error(\n              'Only plain objects can be passed to client components from server components. ' +\n                'Objects with symbol properties like %s are not supported. ' +\n                'Remove %s from these props: %s',\n              symbols[0].description,\n              describeKeyForErrorMessage(key),\n              describeObjectForErrorMessage(parent, key),\n            );\n          }\n        }\n      }\n    }\n\n    return value;\n  }\n\n  if (typeof value === 'string') {\n    return escapeStringValue(value);\n  }\n\n  if (\n    typeof value === 'boolean' ||\n    typeof value === 'number' ||\n    typeof value === 'undefined'\n  ) {\n    return value;\n  }\n\n  if (typeof value === 'function') {\n    if (/^on[A-Z]/.test(key)) {\n      throw new Error(\n        'Event handlers cannot be passed to client component props. ' +\n          `Remove ${describeKeyForErrorMessage(\n            key,\n          )} from these props if possible: ${describeObjectForErrorMessage(\n            parent,\n          )}\n` +\n          'If you need interactivity, consider converting part of this to a client component.',\n      );\n    } else {\n      throw new Error(\n        'Functions cannot be passed directly to client components ' +\n          \"because they're not serializable. \" +\n          `Remove ${describeKeyForErrorMessage(key)} (${value.displayName ||\n            value.name ||\n            'function'}) from this object, or avoid the entire object: ${describeObjectForErrorMessage(\n            parent,\n          )}`,\n      );\n    }\n  }\n\n  if (typeof value === 'symbol') {\n    const writtenSymbols = request.writtenSymbols;\n    const existingId = writtenSymbols.get(value);\n    if (existingId !== undefined) {\n      return serializeByValueID(existingId);\n    }\n    const name = value.description;\n\n    if (Symbol.for(name) !== value) {\n      throw new Error(\n        'Only global symbols received from Symbol.for(...) can be passed to client components. ' +\n          `The symbol Symbol.for(${value.description}) cannot be found among global symbols. ` +\n          `Remove ${describeKeyForErrorMessage(\n            key,\n          )} from this object, or avoid the entire object: ${describeObjectForErrorMessage(\n            parent,\n          )}`,\n      );\n    }\n\n    request.pendingChunks++;\n    const symbolId = request.nextChunkId++;\n    emitSymbolChunk(request, symbolId, name);\n    writtenSymbols.set(value, symbolId);\n    return serializeByValueID(symbolId);\n  }\n\n  // $FlowFixMe: bigint isn't added to Flow yet.\n  if (typeof value === 'bigint') {\n    throw new Error(\n      `BigInt (${value}) is not yet supported in client component props. ` +\n        `Remove ${describeKeyForErrorMessage(\n          key,\n        )} from this object or use a plain number instead: ${describeObjectForErrorMessage(\n          parent,\n        )}`,\n    );\n  }\n\n  throw new Error(\n    `Type ${typeof value} is not supported in client component props. ` +\n      `Remove ${describeKeyForErrorMessage(\n        key,\n      )} from this object, or avoid the entire object: ${describeObjectForErrorMessage(\n        parent,\n      )}`,\n  );\n}\n\nfunction logRecoverableError(request: Request, error: mixed): void {\n  const onError = request.onError;\n  onError(error);\n}\n\nfunction fatalError(request: Request, error: mixed): void {\n  // This is called outside error handling code such as if an error happens in React internals.\n  if (request.destination !== null) {\n    request.status = CLOSED;\n    closeWithError(request.destination, error);\n  } else {\n    request.status = CLOSING;\n    request.fatalError = error;\n  }\n}\n\nfunction emitErrorChunk(request: Request, id: number, error: mixed): void {\n  // TODO: We should not leak error messages to the client in prod.\n  // Give this an error code instead and log on the server.\n  // We can serialize the error in DEV as a convenience.\n  let message;\n  let stack = '';\n  try {\n    if (error instanceof Error) {\n      // eslint-disable-next-line react-internal/safe-string-coercion\n      message = String(error.message);\n      // eslint-disable-next-line react-internal/safe-string-coercion\n      stack = String(error.stack);\n    } else {\n      message = 'Error: ' + (error: any);\n    }\n  } catch (x) {\n    message = 'An error occurred but serializing the error message failed.';\n  }\n\n  const processedChunk = processErrorChunk(request, id, message, stack);\n  request.completedErrorChunks.push(processedChunk);\n}\n\nfunction emitModuleChunk(\n  request: Request,\n  id: number,\n  moduleMetaData: ModuleMetaData,\n): void {\n  const processedChunk = processModuleChunk(request, id, moduleMetaData);\n  request.completedModuleChunks.push(processedChunk);\n}\n\nfunction emitSymbolChunk(request: Request, id: number, name: string): void {\n  const processedChunk = processSymbolChunk(request, id, name);\n  request.completedModuleChunks.push(processedChunk);\n}\n\nfunction emitProviderChunk(\n  request: Request,\n  id: number,\n  contextName: string,\n): void {\n  const processedChunk = processProviderChunk(request, id, contextName);\n  request.completedJSONChunks.push(processedChunk);\n}\n\nfunction retrySegment(request: Request, segment: Segment): void {\n  switchContext(segment.context);\n  try {\n    let value = segment.model;\n    while (\n      typeof value === 'object' &&\n      value !== null &&\n      (value: any).$$typeof === REACT_ELEMENT_TYPE\n    ) {\n      // TODO: Concatenate keys of parents onto children.\n      const element: React$Element<any> = (value: any);\n      // Attempt to render the server component.\n      // Doing this here lets us reuse this same segment if the next component\n      // also suspends.\n      segment.model = value;\n      value = attemptResolveElement(\n        element.type,\n        element.key,\n        element.ref,\n        element.props,\n      );\n    }\n    const processedChunk = processModelChunk(request, segment.id, value);\n    request.completedJSONChunks.push(processedChunk);\n  } catch (x) {\n    if (typeof x === 'object' && x !== null && typeof x.then === 'function') {\n      // Something suspended again, let's pick it back up later.\n      const ping = segment.ping;\n      x.then(ping, ping);\n      return;\n    } else {\n      logRecoverableError(request, x);\n      // This errored, we need to serialize this error to the\n      emitErrorChunk(request, segment.id, x);\n    }\n  }\n}\n\nfunction performWork(request: Request): void {\n  const prevDispatcher = ReactCurrentDispatcher.current;\n  const prevCache = getCurrentCache();\n  ReactCurrentDispatcher.current = Dispatcher;\n  setCurrentCache(request.cache);\n  prepareToUseHooksForRequest(request);\n\n  try {\n    const pingedSegments = request.pingedSegments;\n    request.pingedSegments = [];\n    for (let i = 0; i < pingedSegments.length; i++) {\n      const segment = pingedSegments[i];\n      retrySegment(request, segment);\n    }\n    if (request.destination !== null) {\n      flushCompletedChunks(request, request.destination);\n    }\n  } catch (error) {\n    logRecoverableError(request, error);\n    fatalError(request, error);\n  } finally {\n    ReactCurrentDispatcher.current = prevDispatcher;\n    setCurrentCache(prevCache);\n    resetHooksForRequest();\n  }\n}\n\nfunction flushCompletedChunks(\n  request: Request,\n  destination: Destination,\n): void {\n  beginWriting(destination);\n  try {\n    // We emit module chunks first in the stream so that\n    // they can be preloaded as early as possible.\n    const moduleChunks = request.completedModuleChunks;\n    let i = 0;\n    for (; i < moduleChunks.length; i++) {\n      request.pendingChunks--;\n      const chunk = moduleChunks[i];\n      const keepWriting: boolean = writeChunkAndReturn(destination, chunk);\n      if (!keepWriting) {\n        request.destination = null;\n        i++;\n        break;\n      }\n    }\n    moduleChunks.splice(0, i);\n    // Next comes model data.\n    const jsonChunks = request.completedJSONChunks;\n    i = 0;\n    for (; i < jsonChunks.length; i++) {\n      request.pendingChunks--;\n      const chunk = jsonChunks[i];\n      const keepWriting: boolean = writeChunkAndReturn(destination, chunk);\n      if (!keepWriting) {\n        request.destination = null;\n        i++;\n        break;\n      }\n    }\n    jsonChunks.splice(0, i);\n    // Finally, errors are sent. The idea is that it's ok to delay\n    // any error messages and prioritize display of other parts of\n    // the page.\n    const errorChunks = request.completedErrorChunks;\n    i = 0;\n    for (; i < errorChunks.length; i++) {\n      request.pendingChunks--;\n      const chunk = errorChunks[i];\n      const keepWriting: boolean = writeChunkAndReturn(destination, chunk);\n      if (!keepWriting) {\n        request.destination = null;\n        i++;\n        break;\n      }\n    }\n    errorChunks.splice(0, i);\n  } finally {\n    completeWriting(destination);\n  }\n  flushBuffered(destination);\n  if (request.pendingChunks === 0) {\n    // We're done.\n    close(destination);\n  }\n}\n\nexport function startWork(request: Request): void {\n  scheduleWork(() => performWork(request));\n}\n\nexport function startFlowing(request: Request, destination: Destination): void {\n  if (request.status === CLOSING) {\n    request.status = CLOSED;\n    closeWithError(destination, request.fatalError);\n    return;\n  }\n  if (request.status === CLOSED) {\n    return;\n  }\n  if (request.destination !== null) {\n    // We're already flowing.\n    return;\n  }\n  request.destination = destination;\n  try {\n    flushCompletedChunks(request, destination);\n  } catch (error) {\n    logRecoverableError(request, error);\n    fatalError(request, error);\n  }\n}\n\nfunction importServerContexts(\n  contexts?: Array<[string, ServerContextJSONValue]>,\n) {\n  if (contexts) {\n    const prevContext = getActiveContext();\n    switchContext(rootContextSnapshot);\n    for (let i = 0; i < contexts.length; i++) {\n      const [name, value] = contexts[i];\n      const context = getOrCreateServerContext(name);\n      pushProvider(context, value);\n    }\n    const importedContext = getActiveContext();\n    switchContext(prevContext);\n    return importedContext;\n  }\n  return rootContextSnapshot;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {ReactModel} from 'react-server/src/ReactFlightServer';\nimport type {ServerContextJSONValue} from 'shared/ReactTypes';\nimport type {BundlerConfig} from './ReactFlightServerWebpackBundlerConfig';\n\nimport {\n  createRequest,\n  startWork,\n  startFlowing,\n} from 'react-server/src/ReactFlightServer';\n\ntype Options = {\n  onError?: (error: mixed) => void,\n  context?: Array<[string, ServerContextJSONValue]>,\n  identifierPrefix?: string,\n};\n\nfunction renderToReadableStream(\n  model: ReactModel,\n  webpackMap: BundlerConfig,\n  options?: Options,\n): ReadableStream {\n  const request = createRequest(\n    model,\n    webpackMap,\n    options ? options.onError : undefined,\n    options ? options.context : undefined,\n    options ? options.identifierPrefix : undefined,\n  );\n  const stream = new ReadableStream(\n    {\n      type: 'bytes',\n      start(controller) {\n        startWork(request);\n      },\n      pull(controller) {\n        startFlowing(request, controller);\n      },\n      cancel(reason) {},\n    },\n    // $FlowFixMe size() methods are not allowed on byte streams.\n    {highWaterMark: 0},\n  );\n  return stream;\n}\n\nexport {renderToReadableStream};\n"],"names":["ReactSharedInternals","React","error","format","args","printWarning","level","ReactDebugCurrentFrame","stack","getStackAddendum","concat","argsWithFormat","map","item","String","unshift","Function","prototype","apply","call","console","scheduleWork","callback","VIEW_SIZE","currentView","writtenBytes","beginWriting","destination","Uint8Array","writeChunk","chunk","length","enqueue","buffer","bytesToWrite","allowableBytes","set","subarray","writeChunkAndReturn","completeWriting","close","textEncoder","TextEncoder","stringToChunk","content","encode","stringToPrecomputedChunk","closeWithError","stringify","JSON","serializeRowHeader","tag","id","toString","processErrorChunk","request","message","errorInfo","row","processModelChunk","model","json","toJSON","processModuleChunk","moduleMetaData","processProviderChunk","contextName","processSymbolChunk","name","MODULE_TAG","Symbol","for","getModuleKey","reference","filepath","isModuleReference","$$typeof","resolveModuleMetaData","config","moduleReference","REACT_ELEMENT_TYPE","REACT_FRAGMENT_TYPE","REACT_PROVIDER_TYPE","REACT_SERVER_CONTEXT_TYPE","REACT_FORWARD_REF_TYPE","REACT_MEMO_TYPE","REACT_LAZY_TYPE","REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED","RESERVED","STRING","BOOLEANISH_STRING","BOOLEAN","OVERLOADED_BOOLEAN","NUMERIC","POSITIVE_NUMERIC","PropertyInfoRecord","type","mustUseProperty","attributeName","attributeNamespace","sanitizeURL","removeEmptyString","acceptsBooleans","propertyName","properties","reservedProps","push","forEach","toLowerCase","CAMELIZE","capitalize","token","toUpperCase","replace","xlinkHref","isUnitlessNumber","animationIterationCount","aspectRatio","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","columns","flex","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridArea","gridRow","gridRowEnd","gridRowSpan","gridRowStart","gridColumn","gridColumnEnd","gridColumnSpan","gridColumnStart","fontWeight","lineClamp","lineHeight","opacity","order","orphans","tabSize","widows","zIndex","zoom","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","strokeWidth","prefixKey","prefix","key","charAt","substring","prefixes","Object","keys","prop","isArrayImpl","Array","isArray","a","startInlineScript","endInlineScript","startScriptSrc","startModuleSrc","endAsyncScript","textSeparator","styleAttributeStart","styleAssign","styleSeparator","attributeSeparator","attributeAssign","attributeEnd","attributeEmptyString","endOfStartTag","endOfStartTagSelfClosing","selectedMarkerAttribute","leadingNewline","DOCTYPE","endTag1","endTag2","placeholder1","placeholder2","startCompletedSuspenseBoundary","startPendingSuspenseBoundary1","startPendingSuspenseBoundary2","startClientRenderedSuspenseBoundary","endSuspenseBoundary","clientRenderedSuspenseBoundaryError1","clientRenderedSuspenseBoundaryErrorAttrInterstitial","clientRenderedSuspenseBoundaryError1A","clientRenderedSuspenseBoundaryError1B","clientRenderedSuspenseBoundaryError1C","clientRenderedSuspenseBoundaryError2","startSegmentHTML","startSegmentHTML2","endSegmentHTML","startSegmentSVG","startSegmentSVG2","endSegmentSVG","startSegmentMathML","startSegmentMathML2","endSegmentMathML","startSegmentTable","startSegmentTable2","endSegmentTable","startSegmentTableBody","startSegmentTableBody2","endSegmentTableBody","startSegmentTableRow","startSegmentTableRow2","endSegmentTableRow","startSegmentColGroup","startSegmentColGroup2","endSegmentColGroup","completeSegmentFunction","completeBoundaryFunction","clientRenderFunction","completeSegmentScript1Full","completeSegmentScript1Partial","completeSegmentScript2","completeSegmentScript3","completeBoundaryScript1Full","completeBoundaryScript1Partial","completeBoundaryScript2","completeBoundaryScript3","clientRenderScript1Full","clientRenderScript1Partial","clientRenderScript1A","clientRenderScript2","clientRenderErrorScriptArgInterstitial","rendererSigil","rootContextSnapshot","currentActiveSnapshot","popNode","prev","context","_currentValue","parentValue","pushNode","next","value","popToNearestCommonAncestor","parentPrev","parent","parentNext","Error","popAllPrevious","pushAllNext","popPreviousToCommonLevel","depth","popNextToCommonLevel","switchContext","newSnapshot","pushProvider","nextValue","prevValue","_currentRenderer","undefined","prevNode","newNode","popProvider","prevSnapshot","_defaultValue","getActiveContext","readContext","isPrimaryRenderer","currentRequest","prepareToUseHooksForRequest","resetHooksForRequest","currentCache","readContextImpl","Dispatcher","useMemo","nextCreate","useCallback","useDebugValue","useDeferredValue","unsupportedHook","useTransition","getCacheForType","resourceType","entry","get","useContext","useReducer","useRef","useState","useInsertionEffect","useLayoutEffect","useImperativeHandle","useEffect","useId","useMutableSource","useSyncExternalStore","useCacheRefresh","unsupportedRefresh","setCurrentCache","cache","getCurrentCache","identifierCount","identifierPrefix","ContextRegistry","getOrCreateServerContext","globalName","createServerContext","ReactCurrentDispatcher","defaultErrorHandler","OPEN","CLOSING","CLOSED","createRequest","bundlerConfig","onError","pingedSegments","status","fatalError","Map","nextChunkId","pendingChunks","completedModuleChunks","completedJSONChunks","completedErrorChunks","writtenSymbols","writtenModules","writtenProviders","resolveModelToJSON","rootContext","createRootContext","rootSegment","createSegment","reqContext","importServerContexts","POP","attemptResolveElement","ref","props","children","payload","_payload","init","_init","wrappedType","render","_context","extraKeys","filter","__pop","describeValueForErrorMessage","pingSegment","segment","performWork","ping","serializeByValueID","serializeByRefID","escapeStringValue","isObjectPrototype","object","ObjectPrototype","getPrototypeOf","names","getOwnPropertyNames","i","isSimpleObject","descriptor","getOwnPropertyDescriptor","enumerable","objectName","m","p0","describeKeyForErrorMessage","encodedKey","substr","describeObjectForErrorMessage","objectOrArray","expandedName","str","array","insideContextProps","isInsideContextValue","originalValue","element","x","then","newSegment","logRecoverableError","errorId","emitErrorChunk","moduleKey","existingId","moduleId","emitModuleChunk","providerKey","_globalName","providerId","emitProviderChunk","getOwnPropertySymbols","symbols","description","test","displayName","symbolId","emitSymbolChunk","processedChunk","retrySegment","prevDispatcher","current","prevCache","flushCompletedChunks","moduleChunks","keepWriting","splice","jsonChunks","errorChunks","startWork","startFlowing","contexts","prevContext","importedContext","renderToReadableStream","webpackMap","options","stream","ReadableStream","start","controller","pull","cancel","reason","highWaterMark"],"mappings":"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"}