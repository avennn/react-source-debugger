{"version":3,"file":"react-fs.node.development.server.js","sources":["../../../../packages/shared/ReactSharedInternals.js","../../../../packages/shared/consoleWithStackDev.js","../../../../packages/react-fs/src/ReactFilesystem.js"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport * as React from 'react';\n\nconst ReactSharedInternals =\n  React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n\nexport default ReactSharedInternals;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\n\nlet suppressWarning = false;\nexport function setSuppressWarning(newSuppressWarning) {\n  if (__DEV__) {\n    suppressWarning = newSuppressWarning;\n  }\n}\n\n// In DEV, calls to console.warn and console.error get replaced\n// by calls to these methods by a Babel plugin.\n//\n// In PROD (or in packages without access to React internals),\n// they are left as they are instead.\n\nexport function warn(format, ...args) {\n  if (__DEV__) {\n    if (!suppressWarning) {\n      printWarning('warn', format, args);\n    }\n  }\n}\n\nexport function error(format, ...args) {\n  if (__DEV__) {\n    if (!suppressWarning) {\n      printWarning('error', format, args);\n    }\n  }\n}\n\nfunction printWarning(level, format, args) {\n  // When changing this logic, you might want to also\n  // update consoleWithStackDev.www.js as well.\n  if (__DEV__) {\n    const ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    const stack = ReactDebugCurrentFrame.getStackAddendum();\n    if (stack !== '') {\n      format += '%s';\n      args = args.concat([stack]);\n    }\n\n    // eslint-disable-next-line react-internal/safe-string-coercion\n    const argsWithFormat = args.map(item => String(item));\n    // Careful: RN currently depends on this prefix\n    argsWithFormat.unshift('Warning: ' + format);\n    // We intentionally don't use spread (or .apply) directly because it\n    // breaks IE9: https://github.com/facebook/react/issues/13610\n    // eslint-disable-next-line react-internal/no-production-logging\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Wakeable, Thenable} from 'shared/ReactTypes';\n\nimport {unstable_getCacheForType} from 'react';\nimport * as fs from 'fs/promises';\nimport {isAbsolute, normalize} from 'path';\n\nconst Pending = 0;\nconst Resolved = 1;\nconst Rejected = 2;\n\ntype PendingRecord = {|\n  status: 0,\n  value: Wakeable,\n  cache: null,\n|};\n\ntype ResolvedRecord<T> = {|\n  status: 1,\n  value: T,\n  cache: null | Array<mixed>,\n|};\n\ntype RejectedRecord = {|\n  status: 2,\n  value: mixed,\n  cache: null,\n|};\n\ntype Record<T> = PendingRecord | ResolvedRecord<T> | RejectedRecord;\n\nfunction createRecordFromThenable<T>(thenable: Thenable<T>): Record<T> {\n  const record: Record<T> = {\n    status: Pending,\n    value: thenable,\n    cache: null,\n  };\n  thenable.then(\n    value => {\n      if (record.status === Pending) {\n        const resolvedRecord = ((record: any): ResolvedRecord<T>);\n        resolvedRecord.status = Resolved;\n        resolvedRecord.value = value;\n      }\n    },\n    err => {\n      if (record.status === Pending) {\n        const rejectedRecord = ((record: any): RejectedRecord);\n        rejectedRecord.status = Rejected;\n        rejectedRecord.value = err;\n      }\n    },\n  );\n  return record;\n}\n\nfunction readRecord<T>(record: Record<T>): ResolvedRecord<T> {\n  if (record.status === Resolved) {\n    // This is just a type refinement.\n    return record;\n  } else {\n    throw record.value;\n  }\n}\n\n// We don't want to normalize every path ourselves in production.\n// However, relative or non-normalized paths will lead to cache misses.\n// So we encourage the developer to fix it in DEV and normalize on their end.\nfunction checkPathInDev(path: string) {\n  if (__DEV__) {\n    if (!isAbsolute(path)) {\n      console.error(\n        'The provided path was not absolute: \"%s\". ' +\n          'Convert it to an absolute path first.',\n        path,\n      );\n    } else if (path !== normalize(path)) {\n      console.error(\n        'The provided path was not normalized: \"%s\". ' +\n          'Convert it to a normalized path first.',\n        path,\n      );\n    }\n  }\n}\n\nfunction createAccessMap(): Map<string, Array<number | Record<void>>> {\n  return new Map();\n}\n\nexport function access(path: string, mode?: number): void {\n  checkPathInDev(path);\n  if (mode == null) {\n    mode = 0; // fs.constants.F_OK\n  }\n  const map = unstable_getCacheForType(createAccessMap);\n  let accessCache = map.get(path);\n  if (!accessCache) {\n    accessCache = [];\n    map.set(path, accessCache);\n  }\n  let record;\n  for (let i = 0; i < accessCache.length; i += 2) {\n    const cachedMode: number = (accessCache[i]: any);\n    if (mode === cachedMode) {\n      const cachedRecord: Record<void> = (accessCache[i + 1]: any);\n      record = cachedRecord;\n      break;\n    }\n  }\n  if (!record) {\n    const thenable = fs.access(path, mode);\n    record = createRecordFromThenable(thenable);\n    accessCache.push(mode, record);\n  }\n  readRecord(record); // No return value.\n}\n\nfunction createLstatMap(): Map<string, Array<boolean | Record<mixed>>> {\n  return new Map();\n}\n\nexport function lstat(path: string, options?: {bigint?: boolean}): mixed {\n  checkPathInDev(path);\n  let bigint = false;\n  if (options && options.bigint) {\n    bigint = true;\n  }\n  const map = unstable_getCacheForType(createLstatMap);\n  let lstatCache = map.get(path);\n  if (!lstatCache) {\n    lstatCache = [];\n    map.set(path, lstatCache);\n  }\n  let record;\n  for (let i = 0; i < lstatCache.length; i += 2) {\n    const cachedBigint: boolean = (lstatCache[i]: any);\n    if (bigint === cachedBigint) {\n      const cachedRecord: Record<void> = (lstatCache[i + 1]: any);\n      record = cachedRecord;\n      break;\n    }\n  }\n  if (!record) {\n    const thenable = fs.lstat(path, {bigint});\n    record = createRecordFromThenable(thenable);\n    lstatCache.push(bigint, record);\n  }\n  const stats = readRecord(record).value;\n  return stats;\n}\n\nfunction createReaddirMap(): Map<\n  string,\n  Array<string | boolean | Record<mixed>>,\n> {\n  return new Map();\n}\n\nexport function readdir(\n  path: string,\n  options?: string | {encoding?: string, withFileTypes?: boolean},\n): mixed {\n  checkPathInDev(path);\n  let encoding = 'utf8';\n  let withFileTypes = false;\n  if (typeof options === 'string') {\n    encoding = options;\n  } else if (options != null) {\n    if (options.encoding) {\n      encoding = options.encoding;\n    }\n    if (options.withFileTypes) {\n      withFileTypes = true;\n    }\n  }\n  const map = unstable_getCacheForType(createReaddirMap);\n  let readdirCache = map.get(path);\n  if (!readdirCache) {\n    readdirCache = [];\n    map.set(path, readdirCache);\n  }\n  let record;\n  for (let i = 0; i < readdirCache.length; i += 3) {\n    const cachedEncoding: string = (readdirCache[i]: any);\n    const cachedWithFileTypes: boolean = (readdirCache[i + 1]: any);\n    if (encoding === cachedEncoding && withFileTypes === cachedWithFileTypes) {\n      const cachedRecord: Record<void> = (readdirCache[i + 2]: any);\n      record = cachedRecord;\n      break;\n    }\n  }\n  if (!record) {\n    const thenable = fs.readdir(path, {encoding, withFileTypes});\n    record = createRecordFromThenable(thenable);\n    readdirCache.push(encoding, withFileTypes, record);\n  }\n  const files = readRecord(record).value;\n  return files;\n}\n\nfunction createReadFileMap(): Map<string, Record<Buffer>> {\n  return new Map();\n}\n\nexport function readFile(\n  path: string,\n  options:\n    | string\n    | {\n        encoding?: string | null,\n        // Unsupported:\n        flag?: string, // Doesn't make sense except \"r\"\n        signal?: mixed, // We'll have our own signal\n      },\n): string | Buffer {\n  checkPathInDev(path);\n  const map = unstable_getCacheForType(createReadFileMap);\n  let record = map.get(path);\n  if (!record) {\n    const thenable = fs.readFile(path);\n    record = createRecordFromThenable(thenable);\n    map.set(path, record);\n  }\n  const resolvedRecord = readRecord(record);\n  const buffer: Buffer = resolvedRecord.value;\n  if (!options) {\n    return buffer;\n  }\n  let encoding;\n  if (typeof options === 'string') {\n    encoding = options;\n  } else {\n    const flag = options.flag;\n    if (flag != null && flag !== 'r') {\n      throw Error(\n        'The flag option is not supported, and always defaults to \"r\".',\n      );\n    }\n    if (options.signal) {\n      throw Error('The signal option is not supported.');\n    }\n    encoding = options.encoding;\n  }\n  if (typeof encoding !== 'string') {\n    return buffer;\n  }\n  const textCache = resolvedRecord.cache || (resolvedRecord.cache = []);\n  for (let i = 0; i < textCache.length; i += 2) {\n    if (textCache[i] === encoding) {\n      return (textCache[i + 1]: any);\n    }\n  }\n  const text = buffer.toString((encoding: any));\n  textCache.push(encoding, text);\n  return text;\n}\n\nfunction createReadlinkMap(): Map<string, Array<string | Record<mixed>>> {\n  return new Map();\n}\n\nexport function readlink(\n  path: string,\n  options?: string | {encoding?: string},\n): mixed {\n  checkPathInDev(path);\n  let encoding = 'utf8';\n  if (typeof options === 'string') {\n    encoding = options;\n  } else if (options != null) {\n    if (options.encoding) {\n      encoding = options.encoding;\n    }\n  }\n  const map = unstable_getCacheForType(createReadlinkMap);\n  let readlinkCache = map.get(path);\n  if (!readlinkCache) {\n    readlinkCache = [];\n    map.set(path, readlinkCache);\n  }\n  let record;\n  for (let i = 0; i < readlinkCache.length; i += 2) {\n    const cachedEncoding: string = (readlinkCache[i]: any);\n    if (encoding === cachedEncoding) {\n      const cachedRecord: Record<void> = (readlinkCache[i + 1]: any);\n      record = cachedRecord;\n      break;\n    }\n  }\n  if (!record) {\n    const thenable = fs.readlink(path, {encoding});\n    record = createRecordFromThenable(thenable);\n    readlinkCache.push(encoding, record);\n  }\n  const linkString = readRecord(record).value;\n  return linkString;\n}\n\nfunction createRealpathMap(): Map<string, Array<string | Record<mixed>>> {\n  return new Map();\n}\n\nexport function realpath(\n  path: string,\n  options?: string | {encoding?: string},\n): mixed {\n  checkPathInDev(path);\n  let encoding = 'utf8';\n  if (typeof options === 'string') {\n    encoding = options;\n  } else if (options != null) {\n    if (options.encoding) {\n      encoding = options.encoding;\n    }\n  }\n  const map = unstable_getCacheForType(createRealpathMap);\n  let realpathCache = map.get(path);\n  if (!realpathCache) {\n    realpathCache = [];\n    map.set(path, realpathCache);\n  }\n  let record;\n  for (let i = 0; i < realpathCache.length; i += 2) {\n    const cachedEncoding: string = (realpathCache[i]: any);\n    if (encoding === cachedEncoding) {\n      const cachedRecord: Record<void> = (realpathCache[i + 1]: any);\n      record = cachedRecord;\n      break;\n    }\n  }\n  if (!record) {\n    const thenable = fs.realpath(path, {encoding});\n    record = createRecordFromThenable(thenable);\n    realpathCache.push(encoding, record);\n  }\n  const resolvedPath = readRecord(record).value;\n  return resolvedPath;\n}\n\nfunction createStatMap(): Map<string, Array<boolean | Record<mixed>>> {\n  return new Map();\n}\n\nexport function stat(path: string, options?: {bigint?: boolean}): mixed {\n  checkPathInDev(path);\n  let bigint = false;\n  if (options && options.bigint) {\n    bigint = true;\n  }\n  const map = unstable_getCacheForType(createStatMap);\n  let statCache = map.get(path);\n  if (!statCache) {\n    statCache = [];\n    map.set(path, statCache);\n  }\n  let record;\n  for (let i = 0; i < statCache.length; i += 2) {\n    const cachedBigint: boolean = (statCache[i]: any);\n    if (bigint === cachedBigint) {\n      const cachedRecord: Record<void> = (statCache[i + 1]: any);\n      record = cachedRecord;\n      break;\n    }\n  }\n  if (!record) {\n    const thenable = fs.stat(path, {bigint});\n    record = createRecordFromThenable(thenable);\n    statCache.push(bigint, record);\n  }\n  const stats = readRecord(record).value;\n  return stats;\n}\n"],"names":["ReactSharedInternals","React","error","format","args","printWarning","level","ReactDebugCurrentFrame","stack","getStackAddendum","concat","argsWithFormat","map","item","String","unshift","Function","prototype","apply","call","console","Pending","Resolved","Rejected","createRecordFromThenable","thenable","record","status","value","cache","then","resolvedRecord","err","rejectedRecord","readRecord","checkPathInDev","path","isAbsolute","normalize","createAccessMap","Map","access","mode","unstable_getCacheForType","accessCache","get","set","i","length","cachedMode","cachedRecord","fs","push","createLstatMap","lstat","options","bigint","lstatCache","cachedBigint","stats","createReaddirMap","readdir","encoding","withFileTypes","readdirCache","cachedEncoding","cachedWithFileTypes","files","createReadFileMap","readFile","buffer","flag","Error","signal","textCache","text","toString","createReadlinkMap","readlink","readlinkCache","linkString","createRealpathMap","realpath","realpathCache","resolvedPath","createStatMap","stat","statCache"],"mappings":"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"}