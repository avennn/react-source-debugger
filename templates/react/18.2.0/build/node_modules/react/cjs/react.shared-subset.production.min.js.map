{"version":3,"file":"react.shared-subset.production.min.js","sources":["../../../../packages/shared/ReactVersion.js","../../../../packages/shared/ReactSymbols.js","../../../../packages/shared/formatProdErrorMessage.js","../../../../packages/react/src/ReactNoopUpdateQueue.js","../../../../packages/shared/assign.js","../../../../packages/react/src/ReactBaseClasses.js","../../../../packages/react/src/ReactCreateRef.js","../../../../packages/shared/isArray.js","../../../../packages/shared/hasOwnProperty.js","../../../../packages/react/src/ReactCurrentOwner.js","../../../../packages/react/src/ReactElement.js","../../../../packages/react/src/ReactChildren.js","../../../../packages/react/src/ReactLazy.js","../../../../packages/react/src/ReactForwardRef.js","../../../../packages/react/src/ReactMemo.js","../../../../packages/react/src/ReactCurrentDispatcher.js","../../../../packages/react/src/ReactHooks.js","../../../../packages/react/src/ReactCurrentBatchConfig.js","../../../../packages/react/src/ReactServerContextRegistry.js","../../../../packages/react/src/ReactSharedInternals.js","../../../../packages/react/src/ReactMutableSource.js","../../../../packages/react/src/ReactStartTransition.js","../../../../packages/react/src/React.js"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// TODO: this is special because it gets imported during build.\n//\n// TODO: 18.0.0 has not been released to NPM;\n// It exists as a placeholder so that DevTools can support work tag changes between releases.\n// When we next publish a release, update the matching TODO in backend/renderer.js\n// TODO: This module is used both by the release scripts and to expose a version\n// at runtime. We should instead inject the version number as part of the build\n// process, and use the ReactVersions.js module as the single source of truth.\nexport default '18.1.0';\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\n// ATTENTION\n// When adding new symbols to this file,\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n\n// The Symbol used to tag the ReactElement-like types.\nexport const REACT_ELEMENT_TYPE = Symbol.for('react.element');\nexport const REACT_PORTAL_TYPE = Symbol.for('react.portal');\nexport const REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');\nexport const REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');\nexport const REACT_PROFILER_TYPE = Symbol.for('react.profiler');\nexport const REACT_PROVIDER_TYPE = Symbol.for('react.provider');\nexport const REACT_CONTEXT_TYPE = Symbol.for('react.context');\nexport const REACT_SERVER_CONTEXT_TYPE = Symbol.for('react.server_context');\nexport const REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');\nexport const REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');\nexport const REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');\nexport const REACT_MEMO_TYPE = Symbol.for('react.memo');\nexport const REACT_LAZY_TYPE = Symbol.for('react.lazy');\nexport const REACT_SCOPE_TYPE = Symbol.for('react.scope');\nexport const REACT_DEBUG_TRACING_MODE_TYPE = Symbol.for(\n  'react.debug_trace_mode',\n);\nexport const REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');\nexport const REACT_LEGACY_HIDDEN_TYPE = Symbol.for('react.legacy_hidden');\nexport const REACT_CACHE_TYPE = Symbol.for('react.cache');\nexport const REACT_TRACING_MARKER_TYPE = Symbol.for('react.tracing_marker');\nexport const REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED = Symbol.for(\n  'react.default_value',\n);\n\nconst MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nconst FAUX_ITERATOR_SYMBOL = '@@iterator';\n\nexport function getIteratorFn(maybeIterable: ?any): ?() => ?Iterator<*> {\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\n    return null;\n  }\n  const maybeIterator =\n    (MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL]) ||\n    maybeIterable[FAUX_ITERATOR_SYMBOL];\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n  return null;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n// Do not require this module directly! Use normal `invariant` calls with\n// template literal strings. The messages will be replaced with error codes\n// during build.\n\nfunction formatProdErrorMessage(code) {\n  let url = 'https://reactjs.org/docs/error-decoder.html?invariant=' + code;\n  for (let i = 1; i < arguments.length; i++) {\n    url += '&args[]=' + encodeURIComponent(arguments[i]);\n  }\n  return (\n    `Minified React error #${code}; visit ${url} for the full message or ` +\n    'use the non-minified dev environment for full errors and additional ' +\n    'helpful warnings.'\n  );\n}\n\nexport default formatProdErrorMessage;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst didWarnStateUpdateForUnmountedComponent = {};\n\nfunction warnNoop(publicInstance, callerName) {\n  if (__DEV__) {\n    const constructor = publicInstance.constructor;\n    const componentName =\n      (constructor && (constructor.displayName || constructor.name)) ||\n      'ReactClass';\n    const warningKey = `${componentName}.${callerName}`;\n    if (didWarnStateUpdateForUnmountedComponent[warningKey]) {\n      return;\n    }\n    console.error(\n      \"Can't call %s on a component that is not yet mounted. \" +\n        'This is a no-op, but it might indicate a bug in your application. ' +\n        'Instead, assign to `this.state` directly or define a `state = {};` ' +\n        'class property with the desired state in the %s component.',\n      callerName,\n      componentName,\n    );\n    didWarnStateUpdateForUnmountedComponent[warningKey] = true;\n  }\n}\n\n/**\n * This is the abstract API for an update queue.\n */\nconst ReactNoopUpdateQueue = {\n  /**\n   * Checks whether or not this composite component is mounted.\n   * @param {ReactClass} publicInstance The instance we want to test.\n   * @return {boolean} True if mounted, false otherwise.\n   * @protected\n   * @final\n   */\n  isMounted: function(publicInstance) {\n    return false;\n  },\n\n  /**\n   * Forces an update. This should only be invoked when it is known with\n   * certainty that we are **not** in a DOM transaction.\n   *\n   * You may want to call this when you know that some deeper aspect of the\n   * component's state has changed but `setState` was not called.\n   *\n   * This will not invoke `shouldComponentUpdate`, but it will invoke\n   * `componentWillUpdate` and `componentDidUpdate`.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {?function} callback Called after component is updated.\n   * @param {?string} callerName name of the calling function in the public API.\n   * @internal\n   */\n  enqueueForceUpdate: function(publicInstance, callback, callerName) {\n    warnNoop(publicInstance, 'forceUpdate');\n  },\n\n  /**\n   * Replaces all of the state. Always use this or `setState` to mutate state.\n   * You should treat `this.state` as immutable.\n   *\n   * There is no guarantee that `this.state` will be immediately updated, so\n   * accessing `this.state` after calling this method may return the old value.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} completeState Next state.\n   * @param {?function} callback Called after component is updated.\n   * @param {?string} callerName name of the calling function in the public API.\n   * @internal\n   */\n  enqueueReplaceState: function(\n    publicInstance,\n    completeState,\n    callback,\n    callerName,\n  ) {\n    warnNoop(publicInstance, 'replaceState');\n  },\n\n  /**\n   * Sets a subset of the state. This only exists because _pendingState is\n   * internal. This provides a merging strategy that is not available to deep\n   * properties which is confusing. TODO: Expose pendingState or don't use it\n   * during the merge.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} partialState Next partial state to be merged with state.\n   * @param {?function} callback Called after component is updated.\n   * @param {?string} Name of the calling function in the public API.\n   * @internal\n   */\n  enqueueSetState: function(\n    publicInstance,\n    partialState,\n    callback,\n    callerName,\n  ) {\n    warnNoop(publicInstance, 'setState');\n  },\n};\n\nexport default ReactNoopUpdateQueue;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nconst assign = Object.assign;\n\nexport default assign;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport ReactNoopUpdateQueue from './ReactNoopUpdateQueue';\nimport assign from 'shared/assign';\n\nconst emptyObject = {};\nif (__DEV__) {\n  Object.freeze(emptyObject);\n}\n\n/**\n * Base class helpers for the updating state of a component.\n */\nfunction Component(props, context, updater) {\n  this.props = props;\n  this.context = context;\n  // If a component has string refs, we will assign a different object later.\n  this.refs = emptyObject;\n  // We initialize the default updater but the real one gets injected by the\n  // renderer.\n  this.updater = updater || ReactNoopUpdateQueue;\n}\n\nComponent.prototype.isReactComponent = {};\n\n/**\n * Sets a subset of the state. Always use this to mutate\n * state. You should treat `this.state` as immutable.\n *\n * There is no guarantee that `this.state` will be immediately updated, so\n * accessing `this.state` after calling this method may return the old value.\n *\n * There is no guarantee that calls to `setState` will run synchronously,\n * as they may eventually be batched together.  You can provide an optional\n * callback that will be executed when the call to setState is actually\n * completed.\n *\n * When a function is provided to setState, it will be called at some point in\n * the future (not synchronously). It will be called with the up to date\n * component arguments (state, props, context). These values can be different\n * from this.* because your function may be called after receiveProps but before\n * shouldComponentUpdate, and this new state, props, and context will not yet be\n * assigned to this.\n *\n * @param {object|function} partialState Next partial state or function to\n *        produce next partial state to be merged with current state.\n * @param {?function} callback Called after state is updated.\n * @final\n * @protected\n */\nComponent.prototype.setState = function(partialState, callback) {\n  if (\n    typeof partialState !== 'object' &&\n    typeof partialState !== 'function' &&\n    partialState != null\n  ) {\n    throw new Error(\n      'setState(...): takes an object of state variables to update or a ' +\n        'function which returns an object of state variables.',\n    );\n  }\n\n  this.updater.enqueueSetState(this, partialState, callback, 'setState');\n};\n\n/**\n * Forces an update. This should only be invoked when it is known with\n * certainty that we are **not** in a DOM transaction.\n *\n * You may want to call this when you know that some deeper aspect of the\n * component's state has changed but `setState` was not called.\n *\n * This will not invoke `shouldComponentUpdate`, but it will invoke\n * `componentWillUpdate` and `componentDidUpdate`.\n *\n * @param {?function} callback Called after update is complete.\n * @final\n * @protected\n */\nComponent.prototype.forceUpdate = function(callback) {\n  this.updater.enqueueForceUpdate(this, callback, 'forceUpdate');\n};\n\n/**\n * Deprecated APIs. These APIs used to exist on classic React classes but since\n * we would like to deprecate them, we're not going to move them over to this\n * modern base class. Instead, we define a getter that warns if it's accessed.\n */\nif (__DEV__) {\n  const deprecatedAPIs = {\n    isMounted: [\n      'isMounted',\n      'Instead, make sure to clean up subscriptions and pending requests in ' +\n        'componentWillUnmount to prevent memory leaks.',\n    ],\n    replaceState: [\n      'replaceState',\n      'Refactor your code to use setState instead (see ' +\n        'https://github.com/facebook/react/issues/3236).',\n    ],\n  };\n  const defineDeprecationWarning = function(methodName, info) {\n    Object.defineProperty(Component.prototype, methodName, {\n      get: function() {\n        console.warn(\n          '%s(...) is deprecated in plain JavaScript React classes. %s',\n          info[0],\n          info[1],\n        );\n        return undefined;\n      },\n    });\n  };\n  for (const fnName in deprecatedAPIs) {\n    if (deprecatedAPIs.hasOwnProperty(fnName)) {\n      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);\n    }\n  }\n}\n\nfunction ComponentDummy() {}\nComponentDummy.prototype = Component.prototype;\n\n/**\n * Convenience component with default shallow equality check for sCU.\n */\nfunction PureComponent(props, context, updater) {\n  this.props = props;\n  this.context = context;\n  // If a component has string refs, we will assign a different object later.\n  this.refs = emptyObject;\n  this.updater = updater || ReactNoopUpdateQueue;\n}\n\nconst pureComponentPrototype = (PureComponent.prototype = new ComponentDummy());\npureComponentPrototype.constructor = PureComponent;\n// Avoid an extra prototype jump for these methods.\nassign(pureComponentPrototype, Component.prototype);\npureComponentPrototype.isPureReactComponent = true;\n\nexport {Component, PureComponent};\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n * @flow\n */\n\nimport type {RefObject} from 'shared/ReactTypes';\n\n// an immutable object with a single mutable value\nexport function createRef(): RefObject {\n  const refObject = {\n    current: null,\n  };\n  if (__DEV__) {\n    Object.seal(refObject);\n  }\n  return refObject;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\ndeclare function isArray(a: mixed): boolean %checks(Array.isArray(a));\n\nconst isArrayImpl = Array.isArray;\n\n// eslint-disable-next-line no-redeclare\nfunction isArray(a: mixed): boolean {\n  return isArrayImpl(a);\n}\n\nexport default isArray;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\n\nexport default hasOwnProperty;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from 'react-reconciler/src/ReactInternalTypes';\n\n/**\n * Keeps track of the current owner.\n *\n * The current owner is the component who should own any components that are\n * currently being constructed.\n */\nconst ReactCurrentOwner = {\n  /**\n   * @internal\n   * @type {ReactComponent}\n   */\n  current: (null: null | Fiber),\n};\n\nexport default ReactCurrentOwner;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport getComponentNameFromType from 'shared/getComponentNameFromType';\nimport {REACT_ELEMENT_TYPE} from 'shared/ReactSymbols';\nimport assign from 'shared/assign';\nimport hasOwnProperty from 'shared/hasOwnProperty';\nimport {checkKeyStringCoercion} from 'shared/CheckStringCoercion';\n\nimport ReactCurrentOwner from './ReactCurrentOwner';\n\nconst RESERVED_PROPS = {\n  key: true,\n  ref: true,\n  __self: true,\n  __source: true,\n};\n\nlet specialPropKeyWarningShown,\n  specialPropRefWarningShown,\n  didWarnAboutStringRefs;\n\nif (__DEV__) {\n  didWarnAboutStringRefs = {};\n}\n\nfunction hasValidRef(config) {\n  if (__DEV__) {\n    if (hasOwnProperty.call(config, 'ref')) {\n      const getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n  return config.ref !== undefined;\n}\n\nfunction hasValidKey(config) {\n  if (__DEV__) {\n    if (hasOwnProperty.call(config, 'key')) {\n      const getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n  return config.key !== undefined;\n}\n\nfunction defineKeyPropWarningGetter(props, displayName) {\n  const warnAboutAccessingKey = function() {\n    if (__DEV__) {\n      if (!specialPropKeyWarningShown) {\n        specialPropKeyWarningShown = true;\n        console.error(\n          '%s: `key` is not a prop. Trying to access it will result ' +\n            'in `undefined` being returned. If you need to access the same ' +\n            'value within the child component, you should pass it as a different ' +\n            'prop. (https://reactjs.org/link/special-props)',\n          displayName,\n        );\n      }\n    }\n  };\n  warnAboutAccessingKey.isReactWarning = true;\n  Object.defineProperty(props, 'key', {\n    get: warnAboutAccessingKey,\n    configurable: true,\n  });\n}\n\nfunction defineRefPropWarningGetter(props, displayName) {\n  const warnAboutAccessingRef = function() {\n    if (__DEV__) {\n      if (!specialPropRefWarningShown) {\n        specialPropRefWarningShown = true;\n        console.error(\n          '%s: `ref` is not a prop. Trying to access it will result ' +\n            'in `undefined` being returned. If you need to access the same ' +\n            'value within the child component, you should pass it as a different ' +\n            'prop. (https://reactjs.org/link/special-props)',\n          displayName,\n        );\n      }\n    }\n  };\n  warnAboutAccessingRef.isReactWarning = true;\n  Object.defineProperty(props, 'ref', {\n    get: warnAboutAccessingRef,\n    configurable: true,\n  });\n}\n\nfunction warnIfStringRefCannotBeAutoConverted(config) {\n  if (__DEV__) {\n    if (\n      typeof config.ref === 'string' &&\n      ReactCurrentOwner.current &&\n      config.__self &&\n      ReactCurrentOwner.current.stateNode !== config.__self\n    ) {\n      const componentName = getComponentNameFromType(\n        ReactCurrentOwner.current.type,\n      );\n\n      if (!didWarnAboutStringRefs[componentName]) {\n        console.error(\n          'Component \"%s\" contains the string ref \"%s\". ' +\n            'Support for string refs will be removed in a future major release. ' +\n            'This case cannot be automatically converted to an arrow function. ' +\n            'We ask you to manually fix this case by using useRef() or createRef() instead. ' +\n            'Learn more about using refs safely here: ' +\n            'https://reactjs.org/link/strict-mode-string-ref',\n          componentName,\n          config.ref,\n        );\n        didWarnAboutStringRefs[componentName] = true;\n      }\n    }\n  }\n}\n\n/**\n * Factory method to create a new React element. This no longer adheres to\n * the class pattern, so do not use new to call it. Also, instanceof check\n * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\n * if something is a React Element.\n *\n * @param {*} type\n * @param {*} props\n * @param {*} key\n * @param {string|object} ref\n * @param {*} owner\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @internal\n */\nconst ReactElement = function(type, key, ref, self, source, owner, props) {\n  const element = {\n    // This tag allows us to uniquely identify this as a React Element\n    $$typeof: REACT_ELEMENT_TYPE,\n\n    // Built-in properties that belong on the element\n    type: type,\n    key: key,\n    ref: ref,\n    props: props,\n\n    // Record the component responsible for creating this element.\n    _owner: owner,\n  };\n\n  if (__DEV__) {\n    // The validation flag is currently mutative. We put it on\n    // an external backing store so that we can freeze the whole object.\n    // This can be replaced with a WeakMap once they are implemented in\n    // commonly used development environments.\n    element._store = {};\n\n    // To make comparing ReactElements easier for testing purposes, we make\n    // the validation flag non-enumerable (where possible, which should\n    // include every environment we run tests in), so the test framework\n    // ignores it.\n    Object.defineProperty(element._store, 'validated', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: false,\n    });\n    // self and source are DEV only properties.\n    Object.defineProperty(element, '_self', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: self,\n    });\n    // Two elements created in two different places should be considered\n    // equal for testing purposes and therefore we hide it from enumeration.\n    Object.defineProperty(element, '_source', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: source,\n    });\n    if (Object.freeze) {\n      Object.freeze(element.props);\n      Object.freeze(element);\n    }\n  }\n\n  return element;\n};\n\n/**\n * https://github.com/reactjs/rfcs/pull/107\n * @param {*} type\n * @param {object} props\n * @param {string} key\n */\nexport function jsx(type, config, maybeKey) {\n  let propName;\n\n  // Reserved names are extracted\n  const props = {};\n\n  let key = null;\n  let ref = null;\n\n  // Currently, key can be spread in as a prop. This causes a potential\n  // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\n  // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\n  // but as an intermediary step, we will use jsxDEV for everything except\n  // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\n  // key is explicitly declared to be undefined or not.\n  if (maybeKey !== undefined) {\n    if (__DEV__) {\n      checkKeyStringCoercion(maybeKey);\n    }\n    key = '' + maybeKey;\n  }\n\n  if (hasValidKey(config)) {\n    if (__DEV__) {\n      checkKeyStringCoercion(config.key);\n    }\n    key = '' + config.key;\n  }\n\n  if (hasValidRef(config)) {\n    ref = config.ref;\n  }\n\n  // Remaining properties are added to a new props object\n  for (propName in config) {\n    if (\n      hasOwnProperty.call(config, propName) &&\n      !RESERVED_PROPS.hasOwnProperty(propName)\n    ) {\n      props[propName] = config[propName];\n    }\n  }\n\n  // Resolve default props\n  if (type && type.defaultProps) {\n    const defaultProps = type.defaultProps;\n    for (propName in defaultProps) {\n      if (props[propName] === undefined) {\n        props[propName] = defaultProps[propName];\n      }\n    }\n  }\n\n  return ReactElement(\n    type,\n    key,\n    ref,\n    undefined,\n    undefined,\n    ReactCurrentOwner.current,\n    props,\n  );\n}\n\n/**\n * https://github.com/reactjs/rfcs/pull/107\n * @param {*} type\n * @param {object} props\n * @param {string} key\n */\nexport function jsxDEV(type, config, maybeKey, source, self) {\n  let propName;\n\n  // Reserved names are extracted\n  const props = {};\n\n  let key = null;\n  let ref = null;\n\n  // Currently, key can be spread in as a prop. This causes a potential\n  // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\n  // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\n  // but as an intermediary step, we will use jsxDEV for everything except\n  // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\n  // key is explicitly declared to be undefined or not.\n  if (maybeKey !== undefined) {\n    if (__DEV__) {\n      checkKeyStringCoercion(maybeKey);\n    }\n    key = '' + maybeKey;\n  }\n\n  if (hasValidKey(config)) {\n    if (__DEV__) {\n      checkKeyStringCoercion(config.key);\n    }\n    key = '' + config.key;\n  }\n\n  if (hasValidRef(config)) {\n    ref = config.ref;\n    warnIfStringRefCannotBeAutoConverted(config);\n  }\n\n  // Remaining properties are added to a new props object\n  for (propName in config) {\n    if (\n      hasOwnProperty.call(config, propName) &&\n      !RESERVED_PROPS.hasOwnProperty(propName)\n    ) {\n      props[propName] = config[propName];\n    }\n  }\n\n  // Resolve default props\n  if (type && type.defaultProps) {\n    const defaultProps = type.defaultProps;\n    for (propName in defaultProps) {\n      if (props[propName] === undefined) {\n        props[propName] = defaultProps[propName];\n      }\n    }\n  }\n\n  if (key || ref) {\n    const displayName =\n      typeof type === 'function'\n        ? type.displayName || type.name || 'Unknown'\n        : type;\n    if (key) {\n      defineKeyPropWarningGetter(props, displayName);\n    }\n    if (ref) {\n      defineRefPropWarningGetter(props, displayName);\n    }\n  }\n\n  return ReactElement(\n    type,\n    key,\n    ref,\n    self,\n    source,\n    ReactCurrentOwner.current,\n    props,\n  );\n}\n\n/**\n * Create and return a new ReactElement of the given type.\n * See https://reactjs.org/docs/react-api.html#createelement\n */\nexport function createElement(type, config, children) {\n  let propName;\n\n  // Reserved names are extracted\n  const props = {};\n\n  let key = null;\n  let ref = null;\n  let self = null;\n  let source = null;\n\n  if (config != null) {\n    if (hasValidRef(config)) {\n      ref = config.ref;\n\n      if (__DEV__) {\n        warnIfStringRefCannotBeAutoConverted(config);\n      }\n    }\n    if (hasValidKey(config)) {\n      if (__DEV__) {\n        checkKeyStringCoercion(config.key);\n      }\n      key = '' + config.key;\n    }\n\n    self = config.__self === undefined ? null : config.__self;\n    source = config.__source === undefined ? null : config.__source;\n    // Remaining properties are added to a new props object\n    for (propName in config) {\n      if (\n        hasOwnProperty.call(config, propName) &&\n        !RESERVED_PROPS.hasOwnProperty(propName)\n      ) {\n        props[propName] = config[propName];\n      }\n    }\n  }\n\n  // Children can be more than one argument, and those are transferred onto\n  // the newly allocated props object.\n  const childrenLength = arguments.length - 2;\n  if (childrenLength === 1) {\n    props.children = children;\n  } else if (childrenLength > 1) {\n    const childArray = Array(childrenLength);\n    for (let i = 0; i < childrenLength; i++) {\n      childArray[i] = arguments[i + 2];\n    }\n    if (__DEV__) {\n      if (Object.freeze) {\n        Object.freeze(childArray);\n      }\n    }\n    props.children = childArray;\n  }\n\n  // Resolve default props\n  if (type && type.defaultProps) {\n    const defaultProps = type.defaultProps;\n    for (propName in defaultProps) {\n      if (props[propName] === undefined) {\n        props[propName] = defaultProps[propName];\n      }\n    }\n  }\n  if (__DEV__) {\n    if (key || ref) {\n      const displayName =\n        typeof type === 'function'\n          ? type.displayName || type.name || 'Unknown'\n          : type;\n      if (key) {\n        defineKeyPropWarningGetter(props, displayName);\n      }\n      if (ref) {\n        defineRefPropWarningGetter(props, displayName);\n      }\n    }\n  }\n  return ReactElement(\n    type,\n    key,\n    ref,\n    self,\n    source,\n    ReactCurrentOwner.current,\n    props,\n  );\n}\n\n/**\n * Return a function that produces ReactElements of a given type.\n * See https://reactjs.org/docs/react-api.html#createfactory\n */\nexport function createFactory(type) {\n  const factory = createElement.bind(null, type);\n  // Expose the type on the factory and the prototype so that it can be\n  // easily accessed on elements. E.g. `<Foo />.type === Foo`.\n  // This should not be named `constructor` since this may not be the function\n  // that created the element, and it may not even be a constructor.\n  // Legacy hook: remove it\n  factory.type = type;\n  return factory;\n}\n\nexport function cloneAndReplaceKey(oldElement, newKey) {\n  const newElement = ReactElement(\n    oldElement.type,\n    newKey,\n    oldElement.ref,\n    oldElement._self,\n    oldElement._source,\n    oldElement._owner,\n    oldElement.props,\n  );\n\n  return newElement;\n}\n\n/**\n * Clone and return a new ReactElement using element as the starting point.\n * See https://reactjs.org/docs/react-api.html#cloneelement\n */\nexport function cloneElement(element, config, children) {\n  if (element === null || element === undefined) {\n    throw new Error(\n      `React.cloneElement(...): The argument must be a React element, but you passed ${element}.`,\n    );\n  }\n\n  let propName;\n\n  // Original props are copied\n  const props = assign({}, element.props);\n\n  // Reserved names are extracted\n  let key = element.key;\n  let ref = element.ref;\n  // Self is preserved since the owner is preserved.\n  const self = element._self;\n  // Source is preserved since cloneElement is unlikely to be targeted by a\n  // transpiler, and the original source is probably a better indicator of the\n  // true owner.\n  const source = element._source;\n\n  // Owner will be preserved, unless ref is overridden\n  let owner = element._owner;\n\n  if (config != null) {\n    if (hasValidRef(config)) {\n      // Silently steal the ref from the parent.\n      ref = config.ref;\n      owner = ReactCurrentOwner.current;\n    }\n    if (hasValidKey(config)) {\n      if (__DEV__) {\n        checkKeyStringCoercion(config.key);\n      }\n      key = '' + config.key;\n    }\n\n    // Remaining properties override existing props\n    let defaultProps;\n    if (element.type && element.type.defaultProps) {\n      defaultProps = element.type.defaultProps;\n    }\n    for (propName in config) {\n      if (\n        hasOwnProperty.call(config, propName) &&\n        !RESERVED_PROPS.hasOwnProperty(propName)\n      ) {\n        if (config[propName] === undefined && defaultProps !== undefined) {\n          // Resolve default props\n          props[propName] = defaultProps[propName];\n        } else {\n          props[propName] = config[propName];\n        }\n      }\n    }\n  }\n\n  // Children can be more than one argument, and those are transferred onto\n  // the newly allocated props object.\n  const childrenLength = arguments.length - 2;\n  if (childrenLength === 1) {\n    props.children = children;\n  } else if (childrenLength > 1) {\n    const childArray = Array(childrenLength);\n    for (let i = 0; i < childrenLength; i++) {\n      childArray[i] = arguments[i + 2];\n    }\n    props.children = childArray;\n  }\n\n  return ReactElement(element.type, key, ref, self, source, owner, props);\n}\n\n/**\n * Verifies the object is a ReactElement.\n * See https://reactjs.org/docs/react-api.html#isvalidelement\n * @param {?object} object\n * @return {boolean} True if `object` is a ReactElement.\n * @final\n */\nexport function isValidElement(object) {\n  return (\n    typeof object === 'object' &&\n    object !== null &&\n    object.$$typeof === REACT_ELEMENT_TYPE\n  );\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {ReactNodeList} from 'shared/ReactTypes';\n\nimport isArray from 'shared/isArray';\nimport {\n  getIteratorFn,\n  REACT_ELEMENT_TYPE,\n  REACT_PORTAL_TYPE,\n} from 'shared/ReactSymbols';\nimport {checkKeyStringCoercion} from 'shared/CheckStringCoercion';\n\nimport {isValidElement, cloneAndReplaceKey} from './ReactElement';\n\nconst SEPARATOR = '.';\nconst SUBSEPARATOR = ':';\n\n/**\n * Escape and wrap key so it is safe to use as a reactid\n *\n * @param {string} key to be escaped.\n * @return {string} the escaped key.\n */\nfunction escape(key: string): string {\n  const escapeRegex = /[=:]/g;\n  const escaperLookup = {\n    '=': '=0',\n    ':': '=2',\n  };\n  const escapedString = key.replace(escapeRegex, function(match) {\n    return escaperLookup[match];\n  });\n\n  return '$' + escapedString;\n}\n\n/**\n * TODO: Test that a single child and an array with one item have the same key\n * pattern.\n */\n\nlet didWarnAboutMaps = false;\n\nconst userProvidedKeyEscapeRegex = /\\/+/g;\nfunction escapeUserProvidedKey(text: string): string {\n  return text.replace(userProvidedKeyEscapeRegex, '$&/');\n}\n\n/**\n * Generate a key string that identifies a element within a set.\n *\n * @param {*} element A element that could contain a manual key.\n * @param {number} index Index that is used if a manual key is not provided.\n * @return {string}\n */\nfunction getElementKey(element: any, index: number): string {\n  // Do some typechecking here since we call this blindly. We want to ensure\n  // that we don't block potential future ES APIs.\n  if (typeof element === 'object' && element !== null && element.key != null) {\n    // Explicit key\n    if (__DEV__) {\n      checkKeyStringCoercion(element.key);\n    }\n    return escape('' + element.key);\n  }\n  // Implicit key determined by the index in the set\n  return index.toString(36);\n}\n\nfunction mapIntoArray(\n  children: ?ReactNodeList,\n  array: Array<React$Node>,\n  escapedPrefix: string,\n  nameSoFar: string,\n  callback: (?React$Node) => ?ReactNodeList,\n): number {\n  const type = typeof children;\n\n  if (type === 'undefined' || type === 'boolean') {\n    // All of the above are perceived as null.\n    children = null;\n  }\n\n  let invokeCallback = false;\n\n  if (children === null) {\n    invokeCallback = true;\n  } else {\n    switch (type) {\n      case 'string':\n      case 'number':\n        invokeCallback = true;\n        break;\n      case 'object':\n        switch ((children: any).$$typeof) {\n          case REACT_ELEMENT_TYPE:\n          case REACT_PORTAL_TYPE:\n            invokeCallback = true;\n        }\n    }\n  }\n\n  if (invokeCallback) {\n    const child = children;\n    let mappedChild = callback(child);\n    // If it's the only child, treat the name as if it was wrapped in an array\n    // so that it's consistent if the number of children grows:\n    const childKey =\n      nameSoFar === '' ? SEPARATOR + getElementKey(child, 0) : nameSoFar;\n    if (isArray(mappedChild)) {\n      let escapedChildKey = '';\n      if (childKey != null) {\n        escapedChildKey = escapeUserProvidedKey(childKey) + '/';\n      }\n      mapIntoArray(mappedChild, array, escapedChildKey, '', c => c);\n    } else if (mappedChild != null) {\n      if (isValidElement(mappedChild)) {\n        if (__DEV__) {\n          // The `if` statement here prevents auto-disabling of the safe\n          // coercion ESLint rule, so we must manually disable it below.\n          // $FlowFixMe Flow incorrectly thinks React.Portal doesn't have a key\n          if (mappedChild.key && (!child || child.key !== mappedChild.key)) {\n            checkKeyStringCoercion(mappedChild.key);\n          }\n        }\n        mappedChild = cloneAndReplaceKey(\n          mappedChild,\n          // Keep both the (mapped) and old keys if they differ, just as\n          // traverseAllChildren used to do for objects as children\n          escapedPrefix +\n            // $FlowFixMe Flow incorrectly thinks React.Portal doesn't have a key\n            (mappedChild.key && (!child || child.key !== mappedChild.key)\n              ? // $FlowFixMe Flow incorrectly thinks existing element's key can be a number\n                // eslint-disable-next-line react-internal/safe-string-coercion\n                escapeUserProvidedKey('' + mappedChild.key) + '/'\n              : '') +\n            childKey,\n        );\n      }\n      array.push(mappedChild);\n    }\n    return 1;\n  }\n\n  let child;\n  let nextName;\n  let subtreeCount = 0; // Count of children found in the current subtree.\n  const nextNamePrefix =\n    nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;\n\n  if (isArray(children)) {\n    for (let i = 0; i < children.length; i++) {\n      child = children[i];\n      nextName = nextNamePrefix + getElementKey(child, i);\n      subtreeCount += mapIntoArray(\n        child,\n        array,\n        escapedPrefix,\n        nextName,\n        callback,\n      );\n    }\n  } else {\n    const iteratorFn = getIteratorFn(children);\n    if (typeof iteratorFn === 'function') {\n      const iterableChildren: Iterable<React$Node> & {\n        entries: any,\n      } = (children: any);\n\n      if (__DEV__) {\n        // Warn about using Maps as children\n        if (iteratorFn === iterableChildren.entries) {\n          if (!didWarnAboutMaps) {\n            console.warn(\n              'Using Maps as children is not supported. ' +\n                'Use an array of keyed ReactElements instead.',\n            );\n          }\n          didWarnAboutMaps = true;\n        }\n      }\n\n      const iterator = iteratorFn.call(iterableChildren);\n      let step;\n      let ii = 0;\n      while (!(step = iterator.next()).done) {\n        child = step.value;\n        nextName = nextNamePrefix + getElementKey(child, ii++);\n        subtreeCount += mapIntoArray(\n          child,\n          array,\n          escapedPrefix,\n          nextName,\n          callback,\n        );\n      }\n    } else if (type === 'object') {\n      // eslint-disable-next-line react-internal/safe-string-coercion\n      const childrenString = String((children: any));\n\n      throw new Error(\n        `Objects are not valid as a React child (found: ${\n          childrenString === '[object Object]'\n            ? 'object with keys {' +\n              Object.keys((children: any)).join(', ') +\n              '}'\n            : childrenString\n        }). ` +\n          'If you meant to render a collection of children, use an array ' +\n          'instead.',\n      );\n    }\n  }\n\n  return subtreeCount;\n}\n\ntype MapFunc = (child: ?React$Node) => ?ReactNodeList;\n\n/**\n * Maps children that are typically specified as `props.children`.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrenmap\n *\n * The provided mapFunction(child, index) will be called for each\n * leaf child.\n *\n * @param {?*} children Children tree container.\n * @param {function(*, int)} func The map function.\n * @param {*} context Context for mapFunction.\n * @return {object} Object containing the ordered map of results.\n */\nfunction mapChildren(\n  children: ?ReactNodeList,\n  func: MapFunc,\n  context: mixed,\n): ?Array<React$Node> {\n  if (children == null) {\n    return children;\n  }\n  const result = [];\n  let count = 0;\n  mapIntoArray(children, result, '', '', function(child) {\n    return func.call(context, child, count++);\n  });\n  return result;\n}\n\n/**\n * Count the number of children that are typically specified as\n * `props.children`.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrencount\n *\n * @param {?*} children Children tree container.\n * @return {number} The number of children.\n */\nfunction countChildren(children: ?ReactNodeList): number {\n  let n = 0;\n  mapChildren(children, () => {\n    n++;\n    // Don't return anything\n  });\n  return n;\n}\n\ntype ForEachFunc = (child: ?React$Node) => void;\n\n/**\n * Iterates through children that are typically specified as `props.children`.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrenforeach\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child.\n *\n * @param {?*} children Children tree container.\n * @param {function(*, int)} forEachFunc\n * @param {*} forEachContext Context for forEachContext.\n */\nfunction forEachChildren(\n  children: ?ReactNodeList,\n  forEachFunc: ForEachFunc,\n  forEachContext: mixed,\n): void {\n  mapChildren(\n    children,\n    function() {\n      forEachFunc.apply(this, arguments);\n      // Don't return anything.\n    },\n    forEachContext,\n  );\n}\n\n/**\n * Flatten a children object (typically specified as `props.children`) and\n * return an array with appropriately re-keyed children.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrentoarray\n */\nfunction toArray(children: ?ReactNodeList): Array<React$Node> {\n  return mapChildren(children, child => child) || [];\n}\n\n/**\n * Returns the first child in a collection of children and verifies that there\n * is only one child in the collection.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrenonly\n *\n * The current implementation of this function assumes that a single child gets\n * passed without a wrapper, but the purpose of this helper function is to\n * abstract away the particular structure of children.\n *\n * @param {?object} children Child collection structure.\n * @return {ReactElement} The first and only `ReactElement` contained in the\n * structure.\n */\nfunction onlyChild<T>(children: T): T {\n  if (!isValidElement(children)) {\n    throw new Error(\n      'React.Children.only expected to receive a single React element child.',\n    );\n  }\n\n  return children;\n}\n\nexport {\n  forEachChildren as forEach,\n  mapChildren as map,\n  countChildren as count,\n  onlyChild as only,\n  toArray,\n};\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Wakeable, Thenable} from 'shared/ReactTypes';\n\nimport {REACT_LAZY_TYPE} from 'shared/ReactSymbols';\n\nconst Uninitialized = -1;\nconst Pending = 0;\nconst Resolved = 1;\nconst Rejected = 2;\n\ntype UninitializedPayload<T> = {\n  _status: -1,\n  _result: () => Thenable<{default: T, ...}>,\n};\n\ntype PendingPayload = {\n  _status: 0,\n  _result: Wakeable,\n};\n\ntype ResolvedPayload<T> = {\n  _status: 1,\n  _result: {default: T},\n};\n\ntype RejectedPayload = {\n  _status: 2,\n  _result: mixed,\n};\n\ntype Payload<T> =\n  | UninitializedPayload<T>\n  | PendingPayload\n  | ResolvedPayload<T>\n  | RejectedPayload;\n\nexport type LazyComponent<T, P> = {\n  $$typeof: Symbol | number,\n  _payload: P,\n  _init: (payload: P) => T,\n};\n\nfunction lazyInitializer<T>(payload: Payload<T>): T {\n  if (payload._status === Uninitialized) {\n    const ctor = payload._result;\n    const thenable = ctor();\n    // Transition to the next state.\n    // This might throw either because it's missing or throws. If so, we treat it\n    // as still uninitialized and try again next time. Which is the same as what\n    // happens if the ctor or any wrappers processing the ctor throws. This might\n    // end up fixing it if the resolution was a concurrency bug.\n    thenable.then(\n      moduleObject => {\n        if (payload._status === Pending || payload._status === Uninitialized) {\n          // Transition to the next state.\n          const resolved: ResolvedPayload<T> = (payload: any);\n          resolved._status = Resolved;\n          resolved._result = moduleObject;\n        }\n      },\n      error => {\n        if (payload._status === Pending || payload._status === Uninitialized) {\n          // Transition to the next state.\n          const rejected: RejectedPayload = (payload: any);\n          rejected._status = Rejected;\n          rejected._result = error;\n        }\n      },\n    );\n    if (payload._status === Uninitialized) {\n      // In case, we're still uninitialized, then we're waiting for the thenable\n      // to resolve. Set it as pending in the meantime.\n      const pending: PendingPayload = (payload: any);\n      pending._status = Pending;\n      pending._result = thenable;\n    }\n  }\n  if (payload._status === Resolved) {\n    const moduleObject = payload._result;\n    if (__DEV__) {\n      if (moduleObject === undefined) {\n        console.error(\n          'lazy: Expected the result of a dynamic imp' +\n            'ort() call. ' +\n            'Instead received: %s\\n\\nYour code should look like: \\n  ' +\n            // Break up imports to avoid accidentally parsing them as dependencies.\n            'const MyComponent = lazy(() => imp' +\n            \"ort('./MyComponent'))\\n\\n\" +\n            'Did you accidentally put curly braces around the import?',\n          moduleObject,\n        );\n      }\n    }\n    if (__DEV__) {\n      if (!('default' in moduleObject)) {\n        console.error(\n          'lazy: Expected the result of a dynamic imp' +\n            'ort() call. ' +\n            'Instead received: %s\\n\\nYour code should look like: \\n  ' +\n            // Break up imports to avoid accidentally parsing them as dependencies.\n            'const MyComponent = lazy(() => imp' +\n            \"ort('./MyComponent'))\",\n          moduleObject,\n        );\n      }\n    }\n    return moduleObject.default;\n  } else {\n    throw payload._result;\n  }\n}\n\nexport function lazy<T>(\n  ctor: () => Thenable<{default: T, ...}>,\n): LazyComponent<T, Payload<T>> {\n  const payload: Payload<T> = {\n    // We use these fields to store the result.\n    _status: Uninitialized,\n    _result: ctor,\n  };\n\n  const lazyType: LazyComponent<T, Payload<T>> = {\n    $$typeof: REACT_LAZY_TYPE,\n    _payload: payload,\n    _init: lazyInitializer,\n  };\n\n  if (__DEV__) {\n    // In production, this would just set it on the object.\n    let defaultProps;\n    let propTypes;\n    // $FlowFixMe\n    Object.defineProperties(lazyType, {\n      defaultProps: {\n        configurable: true,\n        get() {\n          return defaultProps;\n        },\n        set(newDefaultProps) {\n          console.error(\n            'React.lazy(...): It is not supported to assign `defaultProps` to ' +\n              'a lazy component import. Either specify them where the component ' +\n              'is defined, or create a wrapping component around it.',\n          );\n          defaultProps = newDefaultProps;\n          // Match production behavior more closely:\n          // $FlowFixMe\n          Object.defineProperty(lazyType, 'defaultProps', {\n            enumerable: true,\n          });\n        },\n      },\n      propTypes: {\n        configurable: true,\n        get() {\n          return propTypes;\n        },\n        set(newPropTypes) {\n          console.error(\n            'React.lazy(...): It is not supported to assign `propTypes` to ' +\n              'a lazy component import. Either specify them where the component ' +\n              'is defined, or create a wrapping component around it.',\n          );\n          propTypes = newPropTypes;\n          // Match production behavior more closely:\n          // $FlowFixMe\n          Object.defineProperty(lazyType, 'propTypes', {\n            enumerable: true,\n          });\n        },\n      },\n    });\n  }\n\n  return lazyType;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {REACT_FORWARD_REF_TYPE, REACT_MEMO_TYPE} from 'shared/ReactSymbols';\n\nexport function forwardRef<Props, ElementType: React$ElementType>(\n  render: (props: Props, ref: React$Ref<ElementType>) => React$Node,\n) {\n  if (__DEV__) {\n    if (render != null && render.$$typeof === REACT_MEMO_TYPE) {\n      console.error(\n        'forwardRef requires a render function but received a `memo` ' +\n          'component. Instead of forwardRef(memo(...)), use ' +\n          'memo(forwardRef(...)).',\n      );\n    } else if (typeof render !== 'function') {\n      console.error(\n        'forwardRef requires a render function but was given %s.',\n        render === null ? 'null' : typeof render,\n      );\n    } else {\n      if (render.length !== 0 && render.length !== 2) {\n        console.error(\n          'forwardRef render functions accept exactly two parameters: props and ref. %s',\n          render.length === 1\n            ? 'Did you forget to use the ref parameter?'\n            : 'Any additional parameter will be undefined.',\n        );\n      }\n    }\n\n    if (render != null) {\n      if (render.defaultProps != null || render.propTypes != null) {\n        console.error(\n          'forwardRef render functions do not support propTypes or defaultProps. ' +\n            'Did you accidentally pass a React component?',\n        );\n      }\n    }\n  }\n\n  const elementType = {\n    $$typeof: REACT_FORWARD_REF_TYPE,\n    render,\n  };\n  if (__DEV__) {\n    let ownName;\n    Object.defineProperty(elementType, 'displayName', {\n      enumerable: false,\n      configurable: true,\n      get: function() {\n        return ownName;\n      },\n      set: function(name) {\n        ownName = name;\n\n        // The inner component shouldn't inherit this display name in most cases,\n        // because the component may be used elsewhere.\n        // But it's nice for anonymous functions to inherit the name,\n        // so that our component-stack generation logic will display their frames.\n        // An anonymous function generally suggests a pattern like:\n        //   React.forwardRef((props, ref) => {...});\n        // This kind of inner function is not used elsewhere so the side effect is okay.\n        if (!render.name && !render.displayName) {\n          render.displayName = name;\n        }\n      },\n    });\n  }\n  return elementType;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {REACT_MEMO_TYPE} from 'shared/ReactSymbols';\n\nimport isValidElementType from 'shared/isValidElementType';\n\nexport function memo<Props>(\n  type: React$ElementType,\n  compare?: (oldProps: Props, newProps: Props) => boolean,\n) {\n  if (__DEV__) {\n    if (!isValidElementType(type)) {\n      console.error(\n        'memo: The first argument must be a component. Instead ' +\n          'received: %s',\n        type === null ? 'null' : typeof type,\n      );\n    }\n  }\n  const elementType = {\n    $$typeof: REACT_MEMO_TYPE,\n    type,\n    compare: compare === undefined ? null : compare,\n  };\n  if (__DEV__) {\n    let ownName;\n    Object.defineProperty(elementType, 'displayName', {\n      enumerable: false,\n      configurable: true,\n      get: function() {\n        return ownName;\n      },\n      set: function(name) {\n        ownName = name;\n\n        // The inner component shouldn't inherit this display name in most cases,\n        // because the component may be used elsewhere.\n        // But it's nice for anonymous functions to inherit the name,\n        // so that our component-stack generation logic will display their frames.\n        // An anonymous function generally suggests a pattern like:\n        //   React.memo((props) => {...});\n        // This kind of inner function is not used elsewhere so the side effect is okay.\n        if (!type.name && !type.displayName) {\n          type.displayName = name;\n        }\n      },\n    });\n  }\n  return elementType;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Dispatcher} from 'react-reconciler/src/ReactInternalTypes';\n\n/**\n * Keeps track of the current dispatcher.\n */\nconst ReactCurrentDispatcher = {\n  /**\n   * @internal\n   * @type {ReactComponent}\n   */\n  current: (null: null | Dispatcher),\n};\n\nexport default ReactCurrentDispatcher;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Dispatcher} from 'react-reconciler/src/ReactInternalTypes';\nimport type {\n  MutableSource,\n  MutableSourceGetSnapshotFn,\n  MutableSourceSubscribeFn,\n  ReactContext,\n  StartTransitionOptions,\n} from 'shared/ReactTypes';\n\nimport ReactCurrentDispatcher from './ReactCurrentDispatcher';\n\ntype BasicStateAction<S> = (S => S) | S;\ntype Dispatch<A> = A => void;\n\nfunction resolveDispatcher() {\n  const dispatcher = ReactCurrentDispatcher.current;\n  if (__DEV__) {\n    if (dispatcher === null) {\n      console.error(\n        'Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for' +\n          ' one of the following reasons:\\n' +\n          '1. You might have mismatching versions of React and the renderer (such as React DOM)\\n' +\n          '2. You might be breaking the Rules of Hooks\\n' +\n          '3. You might have more than one copy of React in the same app\\n' +\n          'See https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.',\n      );\n    }\n  }\n  // Will result in a null access error if accessed outside render phase. We\n  // intentionally don't throw our own error because this is in a hot path.\n  // Also helps ensure this is inlined.\n  return ((dispatcher: any): Dispatcher);\n}\n\nexport function getCacheSignal(): AbortSignal {\n  const dispatcher = resolveDispatcher();\n  // $FlowFixMe This is unstable, thus optional\n  return dispatcher.getCacheSignal();\n}\n\nexport function getCacheForType<T>(resourceType: () => T): T {\n  const dispatcher = resolveDispatcher();\n  // $FlowFixMe This is unstable, thus optional\n  return dispatcher.getCacheForType(resourceType);\n}\n\nexport function useContext<T>(Context: ReactContext<T>): T {\n  const dispatcher = resolveDispatcher();\n  if (__DEV__) {\n    // TODO: add a more generic warning for invalid values.\n    if ((Context: any)._context !== undefined) {\n      const realContext = (Context: any)._context;\n      // Don't deduplicate because this legitimately causes bugs\n      // and nobody should be using this in existing code.\n      if (realContext.Consumer === Context) {\n        console.error(\n          'Calling useContext(Context.Consumer) is not supported, may cause bugs, and will be ' +\n            'removed in a future major release. Did you mean to call useContext(Context) instead?',\n        );\n      } else if (realContext.Provider === Context) {\n        console.error(\n          'Calling useContext(Context.Provider) is not supported. ' +\n            'Did you mean to call useContext(Context) instead?',\n        );\n      }\n    }\n  }\n  return dispatcher.useContext(Context);\n}\n\nexport function useState<S>(\n  initialState: (() => S) | S,\n): [S, Dispatch<BasicStateAction<S>>] {\n  const dispatcher = resolveDispatcher();\n  return dispatcher.useState(initialState);\n}\n\nexport function useReducer<S, I, A>(\n  reducer: (S, A) => S,\n  initialArg: I,\n  init?: I => S,\n): [S, Dispatch<A>] {\n  const dispatcher = resolveDispatcher();\n  return dispatcher.useReducer(reducer, initialArg, init);\n}\n\nexport function useRef<T>(initialValue: T): {|current: T|} {\n  const dispatcher = resolveDispatcher();\n  return dispatcher.useRef(initialValue);\n}\n\nexport function useEffect(\n  create: () => (() => void) | void,\n  deps: Array<mixed> | void | null,\n): void {\n  const dispatcher = resolveDispatcher();\n  return dispatcher.useEffect(create, deps);\n}\n\nexport function useInsertionEffect(\n  create: () => (() => void) | void,\n  deps: Array<mixed> | void | null,\n): void {\n  const dispatcher = resolveDispatcher();\n  return dispatcher.useInsertionEffect(create, deps);\n}\n\nexport function useLayoutEffect(\n  create: () => (() => void) | void,\n  deps: Array<mixed> | void | null,\n): void {\n  const dispatcher = resolveDispatcher();\n  return dispatcher.useLayoutEffect(create, deps);\n}\n\nexport function useCallback<T>(\n  callback: T,\n  deps: Array<mixed> | void | null,\n): T {\n  const dispatcher = resolveDispatcher();\n  return dispatcher.useCallback(callback, deps);\n}\n\nexport function useMemo<T>(\n  create: () => T,\n  deps: Array<mixed> | void | null,\n): T {\n  const dispatcher = resolveDispatcher();\n  return dispatcher.useMemo(create, deps);\n}\n\nexport function useImperativeHandle<T>(\n  ref: {|current: T | null|} | ((inst: T | null) => mixed) | null | void,\n  create: () => T,\n  deps: Array<mixed> | void | null,\n): void {\n  const dispatcher = resolveDispatcher();\n  return dispatcher.useImperativeHandle(ref, create, deps);\n}\n\nexport function useDebugValue<T>(\n  value: T,\n  formatterFn: ?(value: T) => mixed,\n): void {\n  if (__DEV__) {\n    const dispatcher = resolveDispatcher();\n    return dispatcher.useDebugValue(value, formatterFn);\n  }\n}\n\nexport const emptyObject = {};\n\nexport function useTransition(): [\n  boolean,\n  (callback: () => void, options?: StartTransitionOptions) => void,\n] {\n  const dispatcher = resolveDispatcher();\n  return dispatcher.useTransition();\n}\n\nexport function useDeferredValue<T>(value: T): T {\n  const dispatcher = resolveDispatcher();\n  return dispatcher.useDeferredValue(value);\n}\n\nexport function useId(): string {\n  const dispatcher = resolveDispatcher();\n  return dispatcher.useId();\n}\n\nexport function useMutableSource<Source, Snapshot>(\n  source: MutableSource<Source>,\n  getSnapshot: MutableSourceGetSnapshotFn<Source, Snapshot>,\n  subscribe: MutableSourceSubscribeFn<Source, Snapshot>,\n): Snapshot {\n  const dispatcher = resolveDispatcher();\n  return dispatcher.useMutableSource(source, getSnapshot, subscribe);\n}\n\nexport function useSyncExternalStore<T>(\n  subscribe: (() => void) => () => void,\n  getSnapshot: () => T,\n  getServerSnapshot?: () => T,\n): T {\n  const dispatcher = resolveDispatcher();\n  return dispatcher.useSyncExternalStore(\n    subscribe,\n    getSnapshot,\n    getServerSnapshot,\n  );\n}\n\nexport function useCacheRefresh(): <T>(?() => T, ?T) => void {\n  const dispatcher = resolveDispatcher();\n  // $FlowFixMe This is unstable, thus optional\n  return dispatcher.useCacheRefresh();\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {BatchConfigTransition} from 'react-reconciler/src/ReactFiberTracingMarkerComponent.new';\n\ntype BatchConfig = {\n  transition: BatchConfigTransition | null,\n};\n/**\n * Keeps track of the current batch's configuration such as how long an update\n * should suspend for if it needs to.\n */\nconst ReactCurrentBatchConfig: BatchConfig = {\n  transition: null,\n};\n\nexport default ReactCurrentBatchConfig;\n","import type {ReactServerContext} from 'shared/ReactTypes';\n\nexport const ContextRegistry: {\n  [globalName: string]: ReactServerContext<any>,\n} = {};\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport ReactCurrentDispatcher from './ReactCurrentDispatcher';\nimport ReactCurrentBatchConfig from './ReactCurrentBatchConfig';\nimport ReactCurrentActQueue from './ReactCurrentActQueue';\nimport ReactCurrentOwner from './ReactCurrentOwner';\nimport ReactDebugCurrentFrame from './ReactDebugCurrentFrame';\nimport {enableServerContext} from 'shared/ReactFeatureFlags';\nimport {ContextRegistry} from './ReactServerContextRegistry';\n\nconst ReactSharedInternals = {\n  ReactCurrentDispatcher,\n  ReactCurrentBatchConfig,\n  ReactCurrentOwner,\n};\n\nif (__DEV__) {\n  ReactSharedInternals.ReactDebugCurrentFrame = ReactDebugCurrentFrame;\n  ReactSharedInternals.ReactCurrentActQueue = ReactCurrentActQueue;\n}\n\nif (enableServerContext) {\n  ReactSharedInternals.ContextRegistry = ContextRegistry;\n}\n\nexport default ReactSharedInternals;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {MutableSource, MutableSourceGetVersionFn} from 'shared/ReactTypes';\n\nexport function createMutableSource<Source: $NonMaybeType<mixed>>(\n  source: Source,\n  getVersion: MutableSourceGetVersionFn,\n): MutableSource<Source> {\n  const mutableSource: MutableSource<Source> = {\n    _getVersion: getVersion,\n    _source: source,\n    _workInProgressVersionPrimary: null,\n    _workInProgressVersionSecondary: null,\n  };\n\n  if (__DEV__) {\n    mutableSource._currentPrimaryRenderer = null;\n    mutableSource._currentSecondaryRenderer = null;\n\n    // Used to detect side effects that update a mutable source during render.\n    // See https://github.com/facebook/react/issues/19948\n    mutableSource._currentlyRenderingFiber = null;\n    mutableSource._initialVersionAsOfFirstRender = null;\n  }\n\n  return mutableSource;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\nimport type {StartTransitionOptions} from 'shared/ReactTypes';\n\nimport ReactCurrentBatchConfig from './ReactCurrentBatchConfig';\nimport {enableTransitionTracing} from 'shared/ReactFeatureFlags';\n\nexport function startTransition(\n  scope: () => void,\n  options?: StartTransitionOptions,\n) {\n  const prevTransition = ReactCurrentBatchConfig.transition;\n  ReactCurrentBatchConfig.transition = {};\n  const currentTransition = ReactCurrentBatchConfig.transition;\n\n  if (__DEV__) {\n    ReactCurrentBatchConfig.transition._updatedFibers = new Set();\n  }\n\n  if (enableTransitionTracing) {\n    if (options !== undefined && options.name !== undefined) {\n      ReactCurrentBatchConfig.transition.name = options.name;\n      ReactCurrentBatchConfig.transition.startTime = -1;\n    }\n  }\n\n  try {\n    scope();\n  } finally {\n    ReactCurrentBatchConfig.transition = prevTransition;\n\n    if (__DEV__) {\n      if (prevTransition === null && currentTransition._updatedFibers) {\n        const updatedFibersCount = currentTransition._updatedFibers.size;\n        if (updatedFibersCount > 10) {\n          console.warn(\n            'Detected a large number of updates inside startTransition. ' +\n              'If this is due to a subscription please re-write it to use React provided hooks. ' +\n              'Otherwise concurrent mode guarantees are off the table.',\n          );\n        }\n        currentTransition._updatedFibers.clear();\n      }\n    }\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport ReactVersion from 'shared/ReactVersion';\nimport {\n  REACT_FRAGMENT_TYPE,\n  REACT_DEBUG_TRACING_MODE_TYPE,\n  REACT_PROFILER_TYPE,\n  REACT_STRICT_MODE_TYPE,\n  REACT_SUSPENSE_TYPE,\n  REACT_SUSPENSE_LIST_TYPE,\n  REACT_LEGACY_HIDDEN_TYPE,\n  REACT_OFFSCREEN_TYPE,\n  REACT_SCOPE_TYPE,\n  REACT_CACHE_TYPE,\n  REACT_TRACING_MARKER_TYPE,\n} from 'shared/ReactSymbols';\n\nimport {Component, PureComponent} from './ReactBaseClasses';\nimport {createRef} from './ReactCreateRef';\nimport {forEach, map, count, toArray, only} from './ReactChildren';\nimport {\n  createElement as createElementProd,\n  createFactory as createFactoryProd,\n  cloneElement as cloneElementProd,\n  isValidElement,\n} from './ReactElement';\nimport {createContext} from './ReactContext';\nimport {lazy} from './ReactLazy';\nimport {forwardRef} from './ReactForwardRef';\nimport {memo} from './ReactMemo';\nimport {\n  getCacheSignal,\n  getCacheForType,\n  useCallback,\n  useContext,\n  useEffect,\n  useImperativeHandle,\n  useDebugValue,\n  useInsertionEffect,\n  useLayoutEffect,\n  useMemo,\n  useMutableSource,\n  useSyncExternalStore,\n  useReducer,\n  useRef,\n  useState,\n  useTransition,\n  useDeferredValue,\n  useId,\n  useCacheRefresh,\n} from './ReactHooks';\nimport {\n  createElementWithValidation,\n  createFactoryWithValidation,\n  cloneElementWithValidation,\n} from './ReactElementValidator';\nimport {createServerContext} from './ReactServerContext';\nimport {createMutableSource} from './ReactMutableSource';\nimport ReactSharedInternals from './ReactSharedInternals';\nimport {startTransition} from './ReactStartTransition';\nimport {act} from './ReactAct';\n\n// TODO: Move this branching into the other module instead and just re-export.\nconst createElement = __DEV__ ? createElementWithValidation : createElementProd;\nconst cloneElement = __DEV__ ? cloneElementWithValidation : cloneElementProd;\nconst createFactory = __DEV__ ? createFactoryWithValidation : createFactoryProd;\n\nconst Children = {\n  map,\n  forEach,\n  count,\n  toArray,\n  only,\n};\n\nexport {\n  Children,\n  createMutableSource,\n  createRef,\n  Component,\n  PureComponent,\n  createContext,\n  createServerContext,\n  forwardRef,\n  lazy,\n  memo,\n  useCallback,\n  useContext,\n  useEffect,\n  useImperativeHandle,\n  useDebugValue,\n  useInsertionEffect,\n  useLayoutEffect,\n  useMemo,\n  useMutableSource,\n  useSyncExternalStore,\n  useReducer,\n  useRef,\n  useState,\n  REACT_FRAGMENT_TYPE as Fragment,\n  REACT_PROFILER_TYPE as Profiler,\n  REACT_STRICT_MODE_TYPE as StrictMode,\n  REACT_DEBUG_TRACING_MODE_TYPE as unstable_DebugTracingMode,\n  REACT_SUSPENSE_TYPE as Suspense,\n  createElement,\n  cloneElement,\n  isValidElement,\n  ReactVersion as version,\n  ReactSharedInternals as __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,\n  // Deprecated behind disableCreateFactory\n  createFactory,\n  // Concurrent Mode\n  useTransition,\n  startTransition,\n  useDeferredValue,\n  REACT_SUSPENSE_LIST_TYPE as SuspenseList,\n  REACT_LEGACY_HIDDEN_TYPE as unstable_LegacyHidden,\n  REACT_OFFSCREEN_TYPE as unstable_Offscreen,\n  getCacheSignal as unstable_getCacheSignal,\n  getCacheForType as unstable_getCacheForType,\n  useCacheRefresh as unstable_useCacheRefresh,\n  REACT_CACHE_TYPE as unstable_Cache,\n  // enableScopeAPI\n  REACT_SCOPE_TYPE as unstable_Scope,\n  // enableTransitionTracing\n  REACT_TRACING_MARKER_TYPE as unstable_TracingMarker,\n  useId,\n  act,\n};\n"],"names":["REACT_ELEMENT_TYPE","Symbol","for","REACT_PORTAL_TYPE","REACT_FRAGMENT_TYPE","REACT_STRICT_MODE_TYPE","REACT_PROFILER_TYPE","REACT_FORWARD_REF_TYPE","REACT_SUSPENSE_TYPE","REACT_SUSPENSE_LIST_TYPE","REACT_MEMO_TYPE","REACT_LAZY_TYPE","REACT_DEBUG_TRACING_MODE_TYPE","MAYBE_ITERATOR_SYMBOL","iterator","FAUX_ITERATOR_SYMBOL","getIteratorFn","maybeIterable","maybeIterator","formatProdErrorMessage","code","url","i","arguments","length","encodeURIComponent","ReactNoopUpdateQueue","isMounted","publicInstance","enqueueForceUpdate","callback","callerName","warnNoop","enqueueReplaceState","completeState","enqueueSetState","partialState","assign","Object","emptyObject","Component","props","context","updater","refs","prototype","isReactComponent","setState","forceUpdate","ComponentDummy","PureComponent","pureComponentPrototype","constructor","isPureReactComponent","createRef","refObject","current","isArrayImpl","Array","isArray","a","hasOwnProperty","ReactCurrentOwner","RESERVED_PROPS","key","ref","__self","__source","hasValidRef","config","undefined","hasValidKey","ReactElement","type","self","source","owner","element","$$typeof","_owner","createElement","children","propName","call","childrenLength","childArray","defaultProps","cloneAndReplaceKey","oldElement","newKey","newElement","_self","_source","cloneElement","isValidElement","object","SEPARATOR","SUBSEPARATOR","escape","escapeRegex","escaperLookup","escapedString","replace","match","userProvidedKeyEscapeRegex","escapeUserProvidedKey","text","getElementKey","index","toString","mapIntoArray","array","escapedPrefix","nameSoFar","invokeCallback","child","mappedChild","childKey","escapedChildKey","c","push","nextName","subtreeCount","nextNamePrefix","iteratorFn","iterableChildren","step","ii","next","done","value","childrenString","String","keys","join","mapChildren","func","result","count","countChildren","n","forEachChildren","forEachFunc","forEachContext","apply","toArray","onlyChild","Uninitialized","Pending","Resolved","Rejected","lazyInitializer","payload","_status","ctor","_result","thenable","then","moduleObject","resolved","error","rejected","pending","default","lazy","lazyType","_payload","_init","forwardRef","render","elementType","memo","compare","ReactCurrentDispatcher","resolveDispatcher","dispatcher","getCacheSignal","getCacheForType","resourceType","useContext","Context","useCallback","deps","useMemo","create","useDebugValue","formatterFn","useTransition","useDeferredValue","useId","useMutableSource","getSnapshot","subscribe","ReactCurrentBatchConfig","transition","ContextRegistry","ReactSharedInternals","createMutableSource","getVersion","mutableSource","_getVersion","_workInProgressVersionPrimary","_workInProgressVersionSecondary","startTransition","scope","options","prevTransition","__DEV__","createElementProd","cloneElementProd","Children","map","forEach","only"],"mappings":";;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAe,QAAf;;ACNA;AACA;AACA;AAEA;AACA,AAAO,MAAMA,kBAAkB,GAAGC,MAAM,CAACC,GAAP,CAAW,eAAX,CAA3B;AACP,AAAO,MAAMC,iBAAiB,GAAGF,MAAM,CAACC,GAAP,CAAW,cAAX,CAA1B;AACP,MAAaE,mBAAmB,GAAGH,MAAM,CAACC,GAAP,CAAW,gBAAX,CAA5B;AACP,MAAaG,sBAAsB,GAAGJ,MAAM,CAACC,GAAP,CAAW,mBAAX,CAA/B;AACP,MAAaI,mBAAmB,GAAGL,MAAM,CAACC,GAAP,CAAW,gBAAX,CAA5B;AACP,AAGO,MAAMK,sBAAsB,GAAGN,MAAM,CAACC,GAAP,CAAW,mBAAX,CAA/B;AACP,MAAaM,mBAAmB,GAAGP,MAAM,CAACC,GAAP,CAAW,gBAAX,CAA5B;AACP,MAAaO,wBAAwB,GAAGR,MAAM,CAACC,GAAP,CAAW,qBAAX,CAAjC;AACP,AAAO,MAAMQ,eAAe,GAAGT,MAAM,CAACC,GAAP,CAAW,YAAX,CAAxB;AACP,AAAO,MAAMS,eAAe,GAAGV,MAAM,CAACC,GAAP,CAAW,YAAX,CAAxB;AACP,MACaU,6BAA6B,GAAGX,MAAM,CAACC,GAAP,CAC3C,wBAD2C,CAAtC;AAGP,AAQA,MAAMW,qBAAqB,GAAGZ,MAAM,CAACa,QAArC;AACA,MAAMC,oBAAoB,GAAG,YAA7B;AAEA,AAAO,SAASC,aAAT,CAAuBC,aAAvB,EAAiE;AACtE,MAAIA,aAAa,KAAK,IAAlB,IAA0B,OAAOA,aAAP,KAAyB,QAAvD,EAAiE;AAC/D,WAAO,IAAP;AACD;;AACD,QAAMC,aAAa,GAChBL,qBAAqB,IAAII,aAAa,CAACJ,qBAAD,CAAvC,IACAI,aAAa,CAACF,oBAAD,CAFf;;AAGA,MAAI,OAAOG,aAAP,KAAyB,UAA7B,EAAyC;AACvC,WAAOA,aAAP;AACD;;AACD,SAAO,IAAP;AACD;;AC7CD;AACA;AACA;AAEA,SAASC,sBAAT,CAAgCC,IAAhC,EAAsC;AACpC,MAAIC,GAAG,GAAG,2DAA2DD,IAArE;;AACA,OAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,SAAS,CAACC,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;AACzCD,IAAAA,GAAG,IAAI,aAAaI,kBAAkB,CAACF,SAAS,CAACD,CAAD,CAAV,CAAtC;AACD;;AACD,SACE,2BAAyBF,IAAzB,gBAAwCC,GAAxC,iCACA,sEADA,GAEA,mBAHF;AAKD;;ACSD;;;;;AAGA,MAAMK,oBAAoB,GAAG;AAC3B;;;;;;;AAOAC,EAAAA,SAAS,EAAE,UAASC,cAAT,EAAyB;AAClC,WAAO,KAAP;AACD,GAV0B;;AAY3B;;;;;;;;;;;;;;;AAeAC,EAAAA,kBAAkB,EAAE,UAASD,cAAT,EAAyBE,QAAzB,EAAmCC,UAAnC,EAA+C;AACjEC,AACD,GA7B0B;;AA+B3B;;;;;;;;;;;;;AAaAC,EAAAA,mBAAmB,EAAE,UACnBL,cADmB,EAEnBM,aAFmB,EAGnBJ,QAHmB,EAInBC,UAJmB,EAKnB;AACAC,AACD,GAnD0B;;AAqD3B;;;;;;;;;;;;AAYAG,EAAAA,eAAe,EAAE,UACfP,cADe,EAEfQ,YAFe,EAGfN,QAHe,EAIfC,UAJe,EAKf;AACAC,AACD;AAxE0B,CAA7B;;ACzBA,MAAMK,MAAM,GAAGC,MAAM,CAACD,MAAtB;;ACCA,MAAME,WAAW,GAAG,EAApB;AAKA;;;;;AAGA,SAASC,SAAT,CAAmBC,KAAnB,EAA0BC,OAA1B,EAAmCC,OAAnC,EAA4C;AAC1C,OAAKF,KAAL,GAAaA,KAAb;AACA,OAAKC,OAAL,GAAeA,OAAf,CAF0C;;AAI1C,OAAKE,IAAL,GAAYL,WAAZ,CAJ0C;AAM1C;;AACA,OAAKI,OAAL,GAAeA,OAAO,IAAIjB,oBAA1B;AACD;;AAEDc,SAAS,CAACK,SAAV,CAAoBC,gBAApB,GAAuC,EAAvC;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;AAyBAN,SAAS,CAACK,SAAV,CAAoBE,QAApB,GAA+B,UAASX,YAAT,EAAuBN,QAAvB,EAAiC;AAC9D,MACE,OAAOM,YAAP,KAAwB,QAAxB,IACA,OAAOA,YAAP,KAAwB,UADxB,IAEAA,YAAY,IAAI,IAHlB,EAIE;AACA;AAID;;AAED,OAAKO,OAAL,CAAaR,eAAb,CAA6B,IAA7B,EAAmCC,YAAnC,EAAiDN,QAAjD,EAA2D,UAA3D;AACD,CAbD;AAeA;;;;;;;;;;;;;;;;AAcAU,SAAS,CAACK,SAAV,CAAoBG,WAApB,GAAkC,UAASlB,QAAT,EAAmB;AACnD,OAAKa,OAAL,CAAad,kBAAb,CAAgC,IAAhC,EAAsCC,QAAtC,EAAgD,aAAhD;AACD,CAFD;AAIA;AAqCA,SAASmB,cAAT,GAA0B;;AAC1BA,cAAc,CAACJ,SAAf,GAA2BL,SAAS,CAACK,SAArC;AAEA;;;;AAGA,SAASK,aAAT,CAAuBT,KAAvB,EAA8BC,OAA9B,EAAuCC,OAAvC,EAAgD;AAC9C,OAAKF,KAAL,GAAaA,KAAb;AACA,OAAKC,OAAL,GAAeA,OAAf,CAF8C;;AAI9C,OAAKE,IAAL,GAAYL,WAAZ;AACA,OAAKI,OAAL,GAAeA,OAAO,IAAIjB,oBAA1B;AACD;;AAED,MAAMyB,sBAAsB,GAAID,aAAa,CAACL,SAAd,GAA0B,IAAII,cAAJ,EAA1D;AACAE,sBAAsB,CAACC,WAAvB,GAAqCF,aAArC;;AAEAb,MAAM,CAACc,sBAAD,EAAyBX,SAAS,CAACK,SAAnC,CAAN;AACAM,sBAAsB,CAACE,oBAAvB,GAA8C,IAA9C;;ACrIA;AACA,AAAO,SAASC,SAAT,GAAgC;AACrC,QAAMC,SAAS,GAAG;AAChBC,IAAAA,OAAO,EAAE;AADO,GAAlB;;AAMA,SAAOD,SAAP;AACD;;ACRD,MAAME,WAAW,GAAGC,KAAK,CAACC,OAA1B;;AAGA,SAASA,OAAT,CAAiBC,CAAjB,EAAoC;AAClC,SAAOH,WAAW,CAACG,CAAD,CAAlB;AACD;;ACPD,MAAMC,cAAc,GAAGvB,MAAM,CAACO,SAAP,CAAiBgB,cAAxC;;ACEA;;;;;;AAMA,MAAMC,iBAAiB,GAAG;AACxB;;;;AAIAN,EAAAA,OAAO,EAAG;AALc,CAA1B;;ACFA,MAAMO,cAAc,GAAG;AACrBC,EAAAA,GAAG,EAAE,IADgB;AAErBC,EAAAA,GAAG,EAAE,IAFgB;AAGrBC,EAAAA,MAAM,EAAE,IAHa;AAIrBC,EAAAA,QAAQ,EAAE;AAJW,CAAvB;AAOA;AAQA,SAASC,WAAT,CAAqBC,MAArB,EAA6B;AAC3B;AAQA,SAAOA,MAAM,CAACJ,GAAP,KAAeK,SAAtB;AACD;;AAED,SAASC,WAAT,CAAqBF,MAArB,EAA6B;AAC3B;AAQA,SAAOA,MAAM,CAACL,GAAP,KAAeM,SAAtB;AACD;AA2ED;;;;;;;;;;;;;;;;;;;;;;AAoBA,MAAME,YAAY,GAAG,UAASC,IAAT,EAAeT,GAAf,EAAoBC,GAApB,EAAyBS,IAAzB,EAA+BC,MAA/B,EAAuCC,KAAvC,EAA8CnC,KAA9C,EAAqD;AACxE,QAAMoC,OAAO,GAAG;AACd;AACAC,IAAAA,QAAQ,EAAE9E,kBAFI;AAId;AACAyE,IAAAA,IAAI,EAAEA,IALQ;AAMdT,IAAAA,GAAG,EAAEA,GANS;AAOdC,IAAAA,GAAG,EAAEA,GAPS;AAQdxB,IAAAA,KAAK,EAAEA,KARO;AAUd;AACAsC,IAAAA,MAAM,EAAEH;AAXM,GAAhB;;AAoDA,SAAOC,OAAP;AACD,CAtDD;AAwDA,AA0JA;;;;;AAIA,AAAO,SAASG,aAAT,CAAuBP,IAAvB,EAA6BJ,MAA7B,EAAqCY,QAArC,EAA+C;AACpD,MAAIC,QAAJ,CADoD;;AAIpD,QAAMzC,KAAK,GAAG,EAAd;AAEA,MAAIuB,GAAG,GAAG,IAAV;AACA,MAAIC,GAAG,GAAG,IAAV;AACA,MAAIS,IAAI,GAAG,IAAX;AACA,MAAIC,MAAM,GAAG,IAAb;;AAEA,MAAIN,MAAM,IAAI,IAAd,EAAoB;AAClB,QAAID,WAAW,CAACC,MAAD,CAAf,EAAyB;AACvBJ,MAAAA,GAAG,GAAGI,MAAM,CAACJ,GAAb;AAKD;;AACD,QAAIM,WAAW,CAACF,MAAD,CAAf,EAAyB;AACvB;AAGAL,MAAAA,GAAG,GAAG,KAAKK,MAAM,CAACL,GAAlB;AACD;;AAEDU,IAAAA,IAAI,GAAGL,MAAM,CAACH,MAAP,KAAkBI,SAAlB,GAA8B,IAA9B,GAAqCD,MAAM,CAACH,MAAnD;AACAS,IAAAA,MAAM,GAAGN,MAAM,CAACF,QAAP,KAAoBG,SAApB,GAAgC,IAAhC,GAAuCD,MAAM,CAACF,QAAvD,CAhBkB;;AAkBlB,SAAKe,QAAL,IAAiBb,MAAjB,EAAyB;AACvB,UACER,cAAc,CAACsB,IAAf,CAAoBd,MAApB,EAA4Ba,QAA5B,KACA,CAACnB,cAAc,CAACF,cAAf,CAA8BqB,QAA9B,CAFH,EAGE;AACAzC,QAAAA,KAAK,CAACyC,QAAD,CAAL,GAAkBb,MAAM,CAACa,QAAD,CAAxB;AACD;AACF;AACF,GArCmD;AAwCpD;;;AACA,QAAME,cAAc,GAAG7D,SAAS,CAACC,MAAV,GAAmB,CAA1C;;AACA,MAAI4D,cAAc,KAAK,CAAvB,EAA0B;AACxB3C,IAAAA,KAAK,CAACwC,QAAN,GAAiBA,QAAjB;AACD,GAFD,MAEO,IAAIG,cAAc,GAAG,CAArB,EAAwB;AAC7B,UAAMC,UAAU,GAAG3B,KAAK,CAAC0B,cAAD,CAAxB;;AACA,SAAK,IAAI9D,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG8D,cAApB,EAAoC9D,CAAC,EAArC,EAAyC;AACvC+D,MAAAA,UAAU,CAAC/D,CAAD,CAAV,GAAgBC,SAAS,CAACD,CAAC,GAAG,CAAL,CAAzB;AACD;;AAMDmB,IAAAA,KAAK,CAACwC,QAAN,GAAiBI,UAAjB;AACD,GAvDmD;;;AA0DpD,MAAIZ,IAAI,IAAIA,IAAI,CAACa,YAAjB,EAA+B;AAC7B,UAAMA,YAAY,GAAGb,IAAI,CAACa,YAA1B;;AACA,SAAKJ,QAAL,IAAiBI,YAAjB,EAA+B;AAC7B,UAAI7C,KAAK,CAACyC,QAAD,CAAL,KAAoBZ,SAAxB,EAAmC;AACjC7B,QAAAA,KAAK,CAACyC,QAAD,CAAL,GAAkBI,YAAY,CAACJ,QAAD,CAA9B;AACD;AACF;AACF;;AAeD,SAAOV,YAAY,CACjBC,IADiB,EAEjBT,GAFiB,EAGjBC,GAHiB,EAIjBS,IAJiB,EAKjBC,MALiB,EAMjBb,iBAAiB,CAACN,OAND,EAOjBf,KAPiB,CAAnB;AASD;AAED,AAeO,SAAS8C,kBAAT,CAA4BC,UAA5B,EAAwCC,MAAxC,EAAgD;AACrD,QAAMC,UAAU,GAAGlB,YAAY,CAC7BgB,UAAU,CAACf,IADkB,EAE7BgB,MAF6B,EAG7BD,UAAU,CAACvB,GAHkB,EAI7BuB,UAAU,CAACG,KAJkB,EAK7BH,UAAU,CAACI,OALkB,EAM7BJ,UAAU,CAACT,MANkB,EAO7BS,UAAU,CAAC/C,KAPkB,CAA/B;AAUA,SAAOiD,UAAP;AACD;AAED;;;;;AAIA,AAAO,SAASG,YAAT,CAAsBhB,OAAtB,EAA+BR,MAA/B,EAAuCY,QAAvC,EAAiD;AACtD,MAAIJ,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAKP,SAApC,EAA+C;AAC7C,4CACmFO,OADnF;AAGD;;AAED,MAAIK,QAAJ,CAPsD;;AAUtD,QAAMzC,KAAK,GAAGJ,MAAM,CAAC,EAAD,EAAKwC,OAAO,CAACpC,KAAb,CAApB,CAVsD;;AAatD,MAAIuB,GAAG,GAAGa,OAAO,CAACb,GAAlB;AACA,MAAIC,GAAG,GAAGY,OAAO,CAACZ,GAAlB,CAdsD;;AAgBtD,QAAMS,IAAI,GAAGG,OAAO,CAACc,KAArB,CAhBsD;AAkBtD;AACA;;AACA,QAAMhB,MAAM,GAAGE,OAAO,CAACe,OAAvB,CApBsD;;AAuBtD,MAAIhB,KAAK,GAAGC,OAAO,CAACE,MAApB;;AAEA,MAAIV,MAAM,IAAI,IAAd,EAAoB;AAClB,QAAID,WAAW,CAACC,MAAD,CAAf,EAAyB;AACvB;AACAJ,MAAAA,GAAG,GAAGI,MAAM,CAACJ,GAAb;AACAW,MAAAA,KAAK,GAAGd,iBAAiB,CAACN,OAA1B;AACD;;AACD,QAAIe,WAAW,CAACF,MAAD,CAAf,EAAyB;AACvB;AAGAL,MAAAA,GAAG,GAAG,KAAKK,MAAM,CAACL,GAAlB;AACD,KAXiB;;;AAclB,QAAIsB,YAAJ;;AACA,QAAIT,OAAO,CAACJ,IAAR,IAAgBI,OAAO,CAACJ,IAAR,CAAaa,YAAjC,EAA+C;AAC7CA,MAAAA,YAAY,GAAGT,OAAO,CAACJ,IAAR,CAAaa,YAA5B;AACD;;AACD,SAAKJ,QAAL,IAAiBb,MAAjB,EAAyB;AACvB,UACER,cAAc,CAACsB,IAAf,CAAoBd,MAApB,EAA4Ba,QAA5B,KACA,CAACnB,cAAc,CAACF,cAAf,CAA8BqB,QAA9B,CAFH,EAGE;AACA,YAAIb,MAAM,CAACa,QAAD,CAAN,KAAqBZ,SAArB,IAAkCgB,YAAY,KAAKhB,SAAvD,EAAkE;AAChE;AACA7B,UAAAA,KAAK,CAACyC,QAAD,CAAL,GAAkBI,YAAY,CAACJ,QAAD,CAA9B;AACD,SAHD,MAGO;AACLzC,UAAAA,KAAK,CAACyC,QAAD,CAAL,GAAkBb,MAAM,CAACa,QAAD,CAAxB;AACD;AACF;AACF;AACF,GAxDqD;AA2DtD;;;AACA,QAAME,cAAc,GAAG7D,SAAS,CAACC,MAAV,GAAmB,CAA1C;;AACA,MAAI4D,cAAc,KAAK,CAAvB,EAA0B;AACxB3C,IAAAA,KAAK,CAACwC,QAAN,GAAiBA,QAAjB;AACD,GAFD,MAEO,IAAIG,cAAc,GAAG,CAArB,EAAwB;AAC7B,UAAMC,UAAU,GAAG3B,KAAK,CAAC0B,cAAD,CAAxB;;AACA,SAAK,IAAI9D,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG8D,cAApB,EAAoC9D,CAAC,EAArC,EAAyC;AACvC+D,MAAAA,UAAU,CAAC/D,CAAD,CAAV,GAAgBC,SAAS,CAACD,CAAC,GAAG,CAAL,CAAzB;AACD;;AACDmB,IAAAA,KAAK,CAACwC,QAAN,GAAiBI,UAAjB;AACD;;AAED,SAAOb,YAAY,CAACK,OAAO,CAACJ,IAAT,EAAeT,GAAf,EAAoBC,GAApB,EAAyBS,IAAzB,EAA+BC,MAA/B,EAAuCC,KAAvC,EAA8CnC,KAA9C,CAAnB;AACD;AAED;;;;;;;;AAOA,AAAO,SAASqD,cAAT,CAAwBC,MAAxB,EAAgC;AACrC,SACE,OAAOA,MAAP,KAAkB,QAAlB,IACAA,MAAM,KAAK,IADX,IAEAA,MAAM,CAACjB,QAAP,KAAoB9E,kBAHtB;AAKD;;ACviBD,MAAMgG,SAAS,GAAG,GAAlB;AACA,MAAMC,YAAY,GAAG,GAArB;AAEA;;;;;;;AAMA,SAASC,MAAT,CAAgBlC,GAAhB,EAAqC;AACnC,QAAMmC,WAAW,GAAG,OAApB;AACA,QAAMC,aAAa,GAAG;AACpB,SAAK,IADe;AAEpB,SAAK;AAFe,GAAtB;AAIA,QAAMC,aAAa,GAAGrC,GAAG,CAACsC,OAAJ,CAAYH,WAAZ,EAAyB,UAASI,KAAT,EAAgB;AAC7D,WAAOH,aAAa,CAACG,KAAD,CAApB;AACD,GAFqB,CAAtB;AAIA,SAAO,MAAMF,aAAb;AACD;AAED,AAOA,MAAMG,0BAA0B,GAAG,MAAnC;;AACA,SAASC,qBAAT,CAA+BC,IAA/B,EAAqD;AACnD,SAAOA,IAAI,CAACJ,OAAL,CAAaE,0BAAb,EAAyC,KAAzC,CAAP;AACD;AAED;;;;;;;;;AAOA,SAASG,aAAT,CAAuB9B,OAAvB,EAAqC+B,KAArC,EAA4D;AAC1D;AACA;AACA,MAAI,OAAO/B,OAAP,KAAmB,QAAnB,IAA+BA,OAAO,KAAK,IAA3C,IAAmDA,OAAO,CAACb,GAAR,IAAe,IAAtE,EAA4E;AAC1E;AAIA,WAAOkC,MAAM,CAAC,KAAKrB,OAAO,CAACb,GAAd,CAAb;AACD,GATyD;;;AAW1D,SAAO4C,KAAK,CAACC,QAAN,CAAe,EAAf,CAAP;AACD;;AAED,SAASC,YAAT,CACE7B,QADF,EAEE8B,KAFF,EAGEC,aAHF,EAIEC,SAJF,EAKEnF,QALF,EAMU;AACR,QAAM2C,IAAI,GAAG,OAAOQ,QAApB;;AAEA,MAAIR,IAAI,KAAK,WAAT,IAAwBA,IAAI,KAAK,SAArC,EAAgD;AAC9C;AACAQ,IAAAA,QAAQ,GAAG,IAAX;AACD;;AAED,MAAIiC,cAAc,GAAG,KAArB;;AAEA,MAAIjC,QAAQ,KAAK,IAAjB,EAAuB;AACrBiC,IAAAA,cAAc,GAAG,IAAjB;AACD,GAFD,MAEO;AACL,YAAQzC,IAAR;AACE,WAAK,QAAL;AACA,WAAK,QAAL;AACEyC,QAAAA,cAAc,GAAG,IAAjB;AACA;;AACF,WAAK,QAAL;AACE,gBAASjC,QAAD,CAAgBH,QAAxB;AACE,eAAK9E,kBAAL;AACA,eAAKG,iBAAL;AACE+G,YAAAA,cAAc,GAAG,IAAjB;AAHJ;;AANJ;AAYD;;AAED,MAAIA,cAAJ,EAAoB;AAClB,UAAMC,KAAK,GAAGlC,QAAd;AACA,QAAImC,WAAW,GAAGtF,QAAQ,CAACqF,KAAD,CAA1B,CAFkB;AAIlB;;AACA,UAAME,QAAQ,GACZJ,SAAS,KAAK,EAAd,GAAmBjB,SAAS,GAAGW,aAAa,CAACQ,KAAD,EAAQ,CAAR,CAA5C,GAAyDF,SAD3D;;AAEA,QAAItD,OAAO,CAACyD,WAAD,CAAX,EAA0B;AACxB,UAAIE,eAAe,GAAG,EAAtB;;AACA,UAAID,QAAQ,IAAI,IAAhB,EAAsB;AACpBC,QAAAA,eAAe,GAAGb,qBAAqB,CAACY,QAAD,CAArB,GAAkC,GAApD;AACD;;AACDP,MAAAA,YAAY,CAACM,WAAD,EAAcL,KAAd,EAAqBO,eAArB,EAAsC,EAAtC,EAA0CC,CAAC,IAAIA,CAA/C,CAAZ;AACD,KAND,MAMO,IAAIH,WAAW,IAAI,IAAnB,EAAyB;AAC9B,UAAItB,cAAc,CAACsB,WAAD,CAAlB,EAAiC;AAC/B;AAQAA,QAAAA,WAAW,GAAG7B,kBAAkB,CAC9B6B,WAD8B;AAG9B;AACAJ,QAAAA,aAAa;AAEVI,QAAAA,WAAW,CAACpD,GAAZ,KAAoB,CAACmD,KAAD,IAAUA,KAAK,CAACnD,GAAN,KAAcoD,WAAW,CAACpD,GAAxD;AAEG;AACAyC,QAAAA,qBAAqB,CAAC,KAAKW,WAAW,CAACpD,GAAlB,CAArB,GAA8C,GAHjD,GAIG,EANO,CAAb,GAOEqD,QAX4B,CAAhC;AAaD;;AACDN,MAAAA,KAAK,CAACS,IAAN,CAAWJ,WAAX;AACD;;AACD,WAAO,CAAP;AACD;;AAED,MAAID,KAAJ;AACA,MAAIM,QAAJ;AACA,MAAIC,YAAY,GAAG,CAAnB,CAvEQ;;AAwER,QAAMC,cAAc,GAClBV,SAAS,KAAK,EAAd,GAAmBjB,SAAnB,GAA+BiB,SAAS,GAAGhB,YAD7C;;AAGA,MAAItC,OAAO,CAACsB,QAAD,CAAX,EAAuB;AACrB,SAAK,IAAI3D,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG2D,QAAQ,CAACzD,MAA7B,EAAqCF,CAAC,EAAtC,EAA0C;AACxC6F,MAAAA,KAAK,GAAGlC,QAAQ,CAAC3D,CAAD,CAAhB;AACAmG,MAAAA,QAAQ,GAAGE,cAAc,GAAGhB,aAAa,CAACQ,KAAD,EAAQ7F,CAAR,CAAzC;AACAoG,MAAAA,YAAY,IAAIZ,YAAY,CAC1BK,KAD0B,EAE1BJ,KAF0B,EAG1BC,aAH0B,EAI1BS,QAJ0B,EAK1B3F,QAL0B,CAA5B;AAOD;AACF,GAZD,MAYO;AACL,UAAM8F,UAAU,GAAG5G,aAAa,CAACiE,QAAD,CAAhC;;AACA,QAAI,OAAO2C,UAAP,KAAsB,UAA1B,EAAsC;AACpC,YAAMC,gBAEL,GAAI5C,QAFL;;AAiBA,YAAMnE,QAAQ,GAAG8G,UAAU,CAACzC,IAAX,CAAgB0C,gBAAhB,CAAjB;AACA,UAAIC,IAAJ;AACA,UAAIC,EAAE,GAAG,CAAT;;AACA,aAAO,CAAC,CAACD,IAAI,GAAGhH,QAAQ,CAACkH,IAAT,EAAR,EAAyBC,IAAjC,EAAuC;AACrCd,QAAAA,KAAK,GAAGW,IAAI,CAACI,KAAb;AACAT,QAAAA,QAAQ,GAAGE,cAAc,GAAGhB,aAAa,CAACQ,KAAD,EAAQY,EAAE,EAAV,CAAzC;AACAL,QAAAA,YAAY,IAAIZ,YAAY,CAC1BK,KAD0B,EAE1BJ,KAF0B,EAG1BC,aAH0B,EAI1BS,QAJ0B,EAK1B3F,QAL0B,CAA5B;AAOD;AACF,KAhCD,MAgCO,IAAI2C,IAAI,KAAK,QAAb,EAAuB;AAC5B;AACA,YAAM0D,cAAc,GAAGC,MAAM,CAAEnD,QAAF,CAA7B;AAEA,6CAEIkD,cAAc,KAAK,iBAAnB,GACI,uBACA7F,MAAM,CAAC+F,IAAP,CAAapD,QAAb,EAA6BqD,IAA7B,CAAkC,IAAlC,CADA,GAEA,GAHJ,GAIIH,cANR;AAWD;AACF;;AAED,SAAOT,YAAP;AACD;;AAID;;;;;;;;;;;;;AAaA,SAASa,WAAT,CACEtD,QADF,EAEEuD,IAFF,EAGE9F,OAHF,EAIsB;AACpB,MAAIuC,QAAQ,IAAI,IAAhB,EAAsB;AACpB,WAAOA,QAAP;AACD;;AACD,QAAMwD,MAAM,GAAG,EAAf;AACA,MAAIC,KAAK,GAAG,CAAZ;AACA5B,EAAAA,YAAY,CAAC7B,QAAD,EAAWwD,MAAX,EAAmB,EAAnB,EAAuB,EAAvB,EAA2B,UAAStB,KAAT,EAAgB;AACrD,WAAOqB,IAAI,CAACrD,IAAL,CAAUzC,OAAV,EAAmByE,KAAnB,EAA0BuB,KAAK,EAA/B,CAAP;AACD,GAFW,CAAZ;AAGA,SAAOD,MAAP;AACD;AAED;;;;;;;;;;;AASA,SAASE,aAAT,CAAuB1D,QAAvB,EAAyD;AACvD,MAAI2D,CAAC,GAAG,CAAR;AACAL,EAAAA,WAAW,CAACtD,QAAD,EAAW,MAAM;AAC1B2D,IAAAA,CAAC,GADyB;AAG3B,GAHU,CAAX;AAIA,SAAOA,CAAP;AACD;;AAID;;;;;;;;;;;;AAYA,SAASC,eAAT,CACE5D,QADF,EAEE6D,WAFF,EAGEC,cAHF,EAIQ;AACNR,EAAAA,WAAW,CACTtD,QADS,EAET,YAAW;AACT6D,IAAAA,WAAW,CAACE,KAAZ,CAAkB,IAAlB,EAAwBzH,SAAxB,EADS;AAGV,GALQ,EAMTwH,cANS,CAAX;AAQD;AAED;;;;;;;;AAMA,SAASE,OAAT,CAAiBhE,QAAjB,EAA8D;AAC5D,SAAOsD,WAAW,CAACtD,QAAD,EAAWkC,KAAK,IAAIA,KAApB,CAAX,IAAyC,EAAhD;AACD;AAED;;;;;;;;;;;;;;;;AAcA,SAAS+B,SAAT,CAAsBjE,QAAtB,EAAsC;AACpC,MAAI,CAACa,cAAc,CAACb,QAAD,CAAnB,EAA+B;AAC7B;AAGD;;AAED,SAAOA,QAAP;AACD;;ACjUD,MAAMkE,aAAa,GAAG,CAAC,CAAvB;AACA,MAAMC,OAAO,GAAG,CAAhB;AACA,MAAMC,QAAQ,GAAG,CAAjB;AACA,MAAMC,QAAQ,GAAG,CAAjB;;AAkCA,SAASC,eAAT,CAA4BC,OAA5B,EAAoD;AAClD,MAAIA,OAAO,CAACC,OAAR,KAAoBN,aAAxB,EAAuC;AACrC,UAAMO,IAAI,GAAGF,OAAO,CAACG,OAArB;AACA,UAAMC,QAAQ,GAAGF,IAAI,EAArB,CAFqC;AAIrC;AACA;AACA;AACA;;AACAE,IAAAA,QAAQ,CAACC,IAAT,CACEC,YAAY,IAAI;AACd,UAAIN,OAAO,CAACC,OAAR,KAAoBL,OAApB,IAA+BI,OAAO,CAACC,OAAR,KAAoBN,aAAvD,EAAsE;AACpE;AACA,cAAMY,QAA4B,GAAIP,OAAtC;AACAO,QAAAA,QAAQ,CAACN,OAAT,GAAmBJ,QAAnB;AACAU,QAAAA,QAAQ,CAACJ,OAAT,GAAmBG,YAAnB;AACD;AACF,KARH,EASEE,KAAK,IAAI;AACP,UAAIR,OAAO,CAACC,OAAR,KAAoBL,OAApB,IAA+BI,OAAO,CAACC,OAAR,KAAoBN,aAAvD,EAAsE;AACpE;AACA,cAAMc,QAAyB,GAAIT,OAAnC;AACAS,QAAAA,QAAQ,CAACR,OAAT,GAAmBH,QAAnB;AACAW,QAAAA,QAAQ,CAACN,OAAT,GAAmBK,KAAnB;AACD;AACF,KAhBH;;AAkBA,QAAIR,OAAO,CAACC,OAAR,KAAoBN,aAAxB,EAAuC;AACrC;AACA;AACA,YAAMe,OAAuB,GAAIV,OAAjC;AACAU,MAAAA,OAAO,CAACT,OAAR,GAAkBL,OAAlB;AACAc,MAAAA,OAAO,CAACP,OAAR,GAAkBC,QAAlB;AACD;AACF;;AACD,MAAIJ,OAAO,CAACC,OAAR,KAAoBJ,QAAxB,EAAkC;AAChC,UAAMS,YAAY,GAAGN,OAAO,CAACG,OAA7B;;AA4BA,WAAOG,YAAY,CAACK,OAApB;AACD,GA9BD,MA8BO;AACL,UAAMX,OAAO,CAACG,OAAd;AACD;AACF;;AAED,AAAO,SAASS,IAAT,CACLV,IADK,EAEyB;AAC9B,QAAMF,OAAmB,GAAG;AAC1B;AACAC,IAAAA,OAAO,EAAEN,aAFiB;AAG1BQ,IAAAA,OAAO,EAAED;AAHiB,GAA5B;AAMA,QAAMW,QAAsC,GAAG;AAC7CvF,IAAAA,QAAQ,EAAEnE,eADmC;AAE7C2J,IAAAA,QAAQ,EAAEd,OAFmC;AAG7Ce,IAAAA,KAAK,EAAEhB;AAHsC,GAA/C;;AAqDA,SAAOc,QAAP;AACD;;AC9KM,SAASG,UAAT,CACLC,MADK,EAEL;AACA;AAiCA,QAAMC,WAAW,GAAG;AAClB5F,IAAAA,QAAQ,EAAEvE,sBADQ;AAElBkK,IAAAA;AAFkB,GAApB;;AA4BA,SAAOC,WAAP;AACD;;AC/DM,SAASC,IAAT,CACLlG,IADK,EAELmG,OAFK,EAGL;AACA;AASA,QAAMF,WAAW,GAAG;AAClB5F,IAAAA,QAAQ,EAAEpE,eADQ;AAElB+D,IAAAA,IAFkB;AAGlBmG,IAAAA,OAAO,EAAEA,OAAO,KAAKtG,SAAZ,GAAwB,IAAxB,GAA+BsG;AAHtB,GAApB;;AA6BA,SAAOF,WAAP;AACD;;AC3CD;;;AAGA,MAAMG,sBAAsB,GAAG;AAC7B;;;;AAIArH,EAAAA,OAAO,EAAG;AALmB,CAA/B;;ACSA,SAASsH,iBAAT,GAA6B;AAC3B,QAAMC,UAAU,GAAGF,sBAAsB,CAACrH,OAA1C;AAcA;AACA;;;AACA,SAASuH,UAAT;AACD;;AAED,AAAO,SAASC,cAAT,GAAuC;AAC5C,QAAMD,UAAU,GAAGD,iBAAiB,EAApC,CAD4C;;AAG5C,SAAOC,UAAU,CAACC,cAAX,EAAP;AACD;AAED,AAAO,SAASC,eAAT,CAA4BC,YAA5B,EAAsD;AAC3D,QAAMH,UAAU,GAAGD,iBAAiB,EAApC,CAD2D;;AAG3D,SAAOC,UAAU,CAACE,eAAX,CAA2BC,YAA3B,CAAP;AACD;AAED,AAAO,SAASC,UAAT,CAAuBC,OAAvB,EAAoD;AACzD,QAAML,UAAU,GAAGD,iBAAiB,EAApC;;AAoBA,SAAOC,UAAU,CAACI,UAAX,CAAsBC,OAAtB,CAAP;AACD;AAED,AA6CO,SAASC,WAAT,CACLvJ,QADK,EAELwJ,IAFK,EAGF;AACH,QAAMP,UAAU,GAAGD,iBAAiB,EAApC;AACA,SAAOC,UAAU,CAACM,WAAX,CAAuBvJ,QAAvB,EAAiCwJ,IAAjC,CAAP;AACD;AAED,AAAO,SAASC,OAAT,CACLC,MADK,EAELF,IAFK,EAGF;AACH,QAAMP,UAAU,GAAGD,iBAAiB,EAApC;AACA,SAAOC,UAAU,CAACQ,OAAX,CAAmBC,MAAnB,EAA2BF,IAA3B,CAAP;AACD;AAED,AASO,SAASG,aAAT,CACLvD,KADK,EAELwD,WAFK,EAGC;AACN,AAID;AAED,AAEO,SAASC,aAAT,GAGL;AACA,QAAMZ,UAAU,GAAGD,iBAAiB,EAApC;AACA,SAAOC,UAAU,CAACY,aAAX,EAAP;AACD;AAED,AAAO,SAASC,gBAAT,CAA6B1D,KAA7B,EAA0C;AAC/C,QAAM6C,UAAU,GAAGD,iBAAiB,EAApC;AACA,SAAOC,UAAU,CAACa,gBAAX,CAA4B1D,KAA5B,CAAP;AACD;AAED,AAAO,SAAS2D,KAAT,GAAyB;AAC9B,QAAMd,UAAU,GAAGD,iBAAiB,EAApC;AACA,SAAOC,UAAU,CAACc,KAAX,EAAP;AACD;AAED,AAAO,SAASC,gBAAT,CACLnH,MADK,EAELoH,WAFK,EAGLC,SAHK,EAIK;AACV,QAAMjB,UAAU,GAAGD,iBAAiB,EAApC;AACA,SAAOC,UAAU,CAACe,gBAAX,CAA4BnH,MAA5B,EAAoCoH,WAApC,EAAiDC,SAAjD,CAAP;AACD;;AC5KD;;;;AAIA,MAAMC,uBAAoC,GAAG;AAC3CC,EAAAA,UAAU,EAAE;AAD+B,CAA7C;;AChBO,MAAMC,eAEZ,GAAG,EAFG;;ACaP,MAAMC,oBAAoB,GAAG;AAC3BvB,EAAAA,sBAD2B;AAE3BoB,EAAAA,uBAF2B;AAG3BnI,EAAAA;AAH2B,CAA7B;;AAWA,AAAyB;AACvBsI,EAAAA,oBAAoB,CAACD,eAArB,GAAuCA,eAAvC;AACD;;ACjBM,SAASE,mBAAT,CACL1H,MADK,EAEL2H,UAFK,EAGkB;AACvB,QAAMC,aAAoC,GAAG;AAC3CC,IAAAA,WAAW,EAAEF,UAD8B;AAE3C1G,IAAAA,OAAO,EAAEjB,MAFkC;AAG3C8H,IAAAA,6BAA6B,EAAE,IAHY;AAI3CC,IAAAA,+BAA+B,EAAE;AAJU,GAA7C;;AAiBA,SAAOH,aAAP;AACD;;ACpBM,SAASI,eAAT,CACLC,KADK,EAELC,OAFK,EAGL;AACA,QAAMC,cAAc,GAAGb,uBAAuB,CAACC,UAA/C;AACAD,EAAAA,uBAAuB,CAACC,UAAxB,GAAqC,EAArC;AACA;AAaA,MAAI;AACFU,IAAAA,KAAK;AACN,GAFD,SAEU;AACRX,IAAAA,uBAAuB,CAACC,UAAxB,GAAqCY,cAArC;AAeD;AACF;;MCmBK9H,eAAa,GAAG+H,CAAwCC;AAC9D,MAAMnH,cAAY,GAAGkH,CAAuCE;AAC5D,MAEMC,QAAQ,GAAG;AACfC,OAAAA,WADe;AAEfC,WAAAA,eAFe;AAGf1E,SAAAA,aAHe;AAIfO,EAAAA,OAJe;AAKfoE,QAAAA;AALe,CAAjB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}