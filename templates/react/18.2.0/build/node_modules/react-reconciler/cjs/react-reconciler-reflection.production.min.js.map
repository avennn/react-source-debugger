{"version":3,"file":"react-reconciler-reflection.production.min.js","sources":["../../../../packages/shared/formatProdErrorMessage.js","../../../../packages/shared/ReactInstanceMap.js","../../../../packages/shared/ReactSharedInternals.js","../../../../packages/react-reconciler/src/ReactWorkTags.js","../../../../packages/react-reconciler/src/ReactFiberFlags.js","../../../../packages/react-reconciler/src/ReactFiberTreeReflection.js"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n// Do not require this module directly! Use normal `invariant` calls with\n// template literal strings. The messages will be replaced with error codes\n// during build.\n\nfunction formatProdErrorMessage(code) {\n  let url = 'https://reactjs.org/docs/error-decoder.html?invariant=' + code;\n  for (let i = 1; i < arguments.length; i++) {\n    url += '&args[]=' + encodeURIComponent(arguments[i]);\n  }\n  return (\n    `Minified React error #${code}; visit ${url} for the full message or ` +\n    'use the non-minified dev environment for full errors and additional ' +\n    'helpful warnings.'\n  );\n}\n\nexport default formatProdErrorMessage;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/**\n * `ReactInstanceMap` maintains a mapping from a public facing stateful\n * instance (key) and the internal representation (value). This allows public\n * methods to accept the user facing instance as an argument and map them back\n * to internal methods.\n *\n * Note that this module is currently shared and assumed to be stateless.\n * If this becomes an actual Map, that will break.\n */\n\n/**\n * This API should be called `delete` but we'd have to make sure to always\n * transform these to strings for IE support. When this transform is fully\n * supported we can rename it.\n */\nexport function remove(key) {\n  key._reactInternals = undefined;\n}\n\nexport function get(key) {\n  return key._reactInternals;\n}\n\nexport function has(key) {\n  return key._reactInternals !== undefined;\n}\n\nexport function set(key, value) {\n  key._reactInternals = value;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport * as React from 'react';\n\nconst ReactSharedInternals =\n  React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n\nexport default ReactSharedInternals;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nexport type WorkTag =\n  | 0\n  | 1\n  | 2\n  | 3\n  | 4\n  | 5\n  | 6\n  | 7\n  | 8\n  | 9\n  | 10\n  | 11\n  | 12\n  | 13\n  | 14\n  | 15\n  | 16\n  | 17\n  | 18\n  | 19\n  | 20\n  | 21\n  | 22\n  | 23\n  | 24\n  | 25;\n\nexport const FunctionComponent = 0;\nexport const ClassComponent = 1;\nexport const IndeterminateComponent = 2; // Before we know whether it is function or class\nexport const HostRoot = 3; // Root of a host tree. Could be nested inside another node.\nexport const HostPortal = 4; // A subtree. Could be an entry point to a different renderer.\nexport const HostComponent = 5;\nexport const HostText = 6;\nexport const Fragment = 7;\nexport const Mode = 8;\nexport const ContextConsumer = 9;\nexport const ContextProvider = 10;\nexport const ForwardRef = 11;\nexport const Profiler = 12;\nexport const SuspenseComponent = 13;\nexport const MemoComponent = 14;\nexport const SimpleMemoComponent = 15;\nexport const LazyComponent = 16;\nexport const IncompleteClassComponent = 17;\nexport const DehydratedFragment = 18;\nexport const SuspenseListComponent = 19;\nexport const ScopeComponent = 21;\nexport const OffscreenComponent = 22;\nexport const LegacyHiddenComponent = 23;\nexport const CacheComponent = 24;\nexport const TracingMarkerComponent = 25;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport {enableCreateEventHandleAPI} from 'shared/ReactFeatureFlags';\n\nexport type Flags = number;\n\n// Don't change these two values. They're used by React Dev Tools.\nexport const NoFlags = /*                      */ 0b00000000000000000000000000;\nexport const PerformedWork = /*                */ 0b00000000000000000000000001;\n\n// You can change the rest (and add more).\nexport const Placement = /*                    */ 0b00000000000000000000000010;\nexport const Update = /*                       */ 0b00000000000000000000000100;\nexport const Deletion = /*                     */ 0b00000000000000000000001000;\nexport const ChildDeletion = /*                */ 0b00000000000000000000010000;\nexport const ContentReset = /*                 */ 0b00000000000000000000100000;\nexport const Callback = /*                     */ 0b00000000000000000001000000;\nexport const DidCapture = /*                   */ 0b00000000000000000010000000;\nexport const ForceClientRender = /*            */ 0b00000000000000000100000000;\nexport const Ref = /*                          */ 0b00000000000000001000000000;\nexport const Snapshot = /*                     */ 0b00000000000000010000000000;\nexport const Passive = /*                      */ 0b00000000000000100000000000;\nexport const Hydrating = /*                    */ 0b00000000000001000000000000;\nexport const Visibility = /*                   */ 0b00000000000010000000000000;\nexport const StoreConsistency = /*             */ 0b00000000000100000000000000;\n\nexport const LifecycleEffectMask =\n  Passive | Update | Callback | Ref | Snapshot | StoreConsistency;\n\n// Union of all commit flags (flags with the lifetime of a particular commit)\nexport const HostEffectMask = /*               */ 0b00000000000111111111111111;\n\n// These are not really side effects, but we still reuse this field.\nexport const Incomplete = /*                   */ 0b00000000001000000000000000;\nexport const ShouldCapture = /*                */ 0b00000000010000000000000000;\nexport const ForceUpdateForLegacySuspense = /* */ 0b00000000100000000000000000;\nexport const DidPropagateContext = /*          */ 0b00000001000000000000000000;\nexport const NeedsPropagation = /*             */ 0b00000010000000000000000000;\nexport const Forked = /*                       */ 0b00000100000000000000000000;\n\n// Static tags describe aspects of a fiber that are not specific to a render,\n// e.g. a fiber uses a passive effect (even if there are no updates on this particular render).\n// This enables us to defer more work in the unmount case,\n// since we can defer traversing the tree during layout to look for Passive effects,\n// and instead rely on the static flag as a signal that there may be cleanup work.\nexport const RefStatic = /*                    */ 0b00001000000000000000000000;\nexport const LayoutStatic = /*                 */ 0b00010000000000000000000000;\nexport const PassiveStatic = /*                */ 0b00100000000000000000000000;\n\n// These flags allow us to traverse to fibers that have effects on mount\n// without traversing the entire tree after every commit for\n// double invoking\nexport const MountLayoutDev = /*               */ 0b01000000000000000000000000;\nexport const MountPassiveDev = /*              */ 0b10000000000000000000000000;\n\n// Groups of flags that are used in the commit phase to skip over trees that\n// don't contain effects, by checking subtreeFlags.\n\nexport const BeforeMutationMask =\n  // TODO: Remove Update flag from before mutation phase by re-landing Visibility\n  // flag logic (see #20043)\n  Update |\n  Snapshot |\n  (enableCreateEventHandleAPI\n    ? // createEventHandle needs to visit deleted and hidden trees to\n      // fire beforeblur\n      // TODO: Only need to visit Deletions during BeforeMutation phase if an\n      // element is focused.\n      ChildDeletion | Visibility\n    : 0);\n\nexport const MutationMask =\n  Placement |\n  Update |\n  ChildDeletion |\n  ContentReset |\n  Ref |\n  Hydrating |\n  Visibility;\nexport const LayoutMask = Update | Callback | Ref | Visibility;\n\n// TODO: Split into PassiveMountMask and PassiveUnmountMask\nexport const PassiveMask = Passive | ChildDeletion;\n\n// Union of tags that don't get reset on clones.\n// This allows certain concepts to persist without recalculating them,\n// e.g. whether a subtree contains passive effects or portals.\nexport const StaticMask = LayoutStatic | PassiveStatic | RefStatic;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactInternalTypes';\nimport type {Container, SuspenseInstance} from './ReactFiberHostConfig';\nimport type {SuspenseState} from './ReactFiberSuspenseComponent.old';\n\nimport {get as getInstance} from 'shared/ReactInstanceMap';\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\nimport getComponentNameFromFiber from 'react-reconciler/src/getComponentNameFromFiber';\nimport {\n  ClassComponent,\n  HostComponent,\n  HostRoot,\n  HostPortal,\n  HostText,\n  SuspenseComponent,\n} from './ReactWorkTags';\nimport {NoFlags, Placement, Hydrating} from './ReactFiberFlags';\n\nconst ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\n\nexport function getNearestMountedFiber(fiber: Fiber): null | Fiber {\n  let node = fiber;\n  let nearestMounted = fiber;\n  if (!fiber.alternate) {\n    // If there is no alternate, this might be a new tree that isn't inserted\n    // yet. If it is, then it will have a pending insertion effect on it.\n    let nextNode = node;\n    do {\n      node = nextNode;\n      if ((node.flags & (Placement | Hydrating)) !== NoFlags) {\n        // This is an insertion or in-progress hydration. The nearest possible\n        // mounted fiber is the parent but we need to continue to figure out\n        // if that one is still mounted.\n        nearestMounted = node.return;\n      }\n      nextNode = node.return;\n    } while (nextNode);\n  } else {\n    while (node.return) {\n      node = node.return;\n    }\n  }\n  if (node.tag === HostRoot) {\n    // TODO: Check if this was a nested HostRoot when used with\n    // renderContainerIntoSubtree.\n    return nearestMounted;\n  }\n  // If we didn't hit the root, that means that we're in an disconnected tree\n  // that has been unmounted.\n  return null;\n}\n\nexport function getSuspenseInstanceFromFiber(\n  fiber: Fiber,\n): null | SuspenseInstance {\n  if (fiber.tag === SuspenseComponent) {\n    let suspenseState: SuspenseState | null = fiber.memoizedState;\n    if (suspenseState === null) {\n      const current = fiber.alternate;\n      if (current !== null) {\n        suspenseState = current.memoizedState;\n      }\n    }\n    if (suspenseState !== null) {\n      return suspenseState.dehydrated;\n    }\n  }\n  return null;\n}\n\nexport function getContainerFromFiber(fiber: Fiber): null | Container {\n  return fiber.tag === HostRoot\n    ? (fiber.stateNode.containerInfo: Container)\n    : null;\n}\n\nexport function isFiberMounted(fiber: Fiber): boolean {\n  return getNearestMountedFiber(fiber) === fiber;\n}\n\nexport function isMounted(component: React$Component<any, any>): boolean {\n  if (__DEV__) {\n    const owner = (ReactCurrentOwner.current: any);\n    if (owner !== null && owner.tag === ClassComponent) {\n      const ownerFiber: Fiber = owner;\n      const instance = ownerFiber.stateNode;\n      if (!instance._warnedAboutRefsInRender) {\n        console.error(\n          '%s is accessing isMounted inside its render() function. ' +\n            'render() should be a pure function of props and state. It should ' +\n            'never access something that requires stale data from the previous ' +\n            'render, such as refs. Move this logic to componentDidMount and ' +\n            'componentDidUpdate instead.',\n          getComponentNameFromFiber(ownerFiber) || 'A component',\n        );\n      }\n      instance._warnedAboutRefsInRender = true;\n    }\n  }\n\n  const fiber: ?Fiber = getInstance(component);\n  if (!fiber) {\n    return false;\n  }\n  return getNearestMountedFiber(fiber) === fiber;\n}\n\nfunction assertIsMounted(fiber) {\n  if (getNearestMountedFiber(fiber) !== fiber) {\n    throw new Error('Unable to find node on an unmounted component.');\n  }\n}\n\nexport function findCurrentFiberUsingSlowPath(fiber: Fiber): Fiber | null {\n  const alternate = fiber.alternate;\n  if (!alternate) {\n    // If there is no alternate, then we only need to check if it is mounted.\n    const nearestMounted = getNearestMountedFiber(fiber);\n\n    if (nearestMounted === null) {\n      throw new Error('Unable to find node on an unmounted component.');\n    }\n\n    if (nearestMounted !== fiber) {\n      return null;\n    }\n    return fiber;\n  }\n  // If we have two possible branches, we'll walk backwards up to the root\n  // to see what path the root points to. On the way we may hit one of the\n  // special cases and we'll deal with them.\n  let a: Fiber = fiber;\n  let b: Fiber = alternate;\n  while (true) {\n    const parentA = a.return;\n    if (parentA === null) {\n      // We're at the root.\n      break;\n    }\n    const parentB = parentA.alternate;\n    if (parentB === null) {\n      // There is no alternate. This is an unusual case. Currently, it only\n      // happens when a Suspense component is hidden. An extra fragment fiber\n      // is inserted in between the Suspense fiber and its children. Skip\n      // over this extra fragment fiber and proceed to the next parent.\n      const nextParent = parentA.return;\n      if (nextParent !== null) {\n        a = b = nextParent;\n        continue;\n      }\n      // If there's no parent, we're at the root.\n      break;\n    }\n\n    // If both copies of the parent fiber point to the same child, we can\n    // assume that the child is current. This happens when we bailout on low\n    // priority: the bailed out fiber's child reuses the current child.\n    if (parentA.child === parentB.child) {\n      let child = parentA.child;\n      while (child) {\n        if (child === a) {\n          // We've determined that A is the current branch.\n          assertIsMounted(parentA);\n          return fiber;\n        }\n        if (child === b) {\n          // We've determined that B is the current branch.\n          assertIsMounted(parentA);\n          return alternate;\n        }\n        child = child.sibling;\n      }\n\n      // We should never have an alternate for any mounting node. So the only\n      // way this could possibly happen is if this was unmounted, if at all.\n      throw new Error('Unable to find node on an unmounted component.');\n    }\n\n    if (a.return !== b.return) {\n      // The return pointer of A and the return pointer of B point to different\n      // fibers. We assume that return pointers never criss-cross, so A must\n      // belong to the child set of A.return, and B must belong to the child\n      // set of B.return.\n      a = parentA;\n      b = parentB;\n    } else {\n      // The return pointers point to the same fiber. We'll have to use the\n      // default, slow path: scan the child sets of each parent alternate to see\n      // which child belongs to which set.\n      //\n      // Search parent A's child set\n      let didFindChild = false;\n      let child = parentA.child;\n      while (child) {\n        if (child === a) {\n          didFindChild = true;\n          a = parentA;\n          b = parentB;\n          break;\n        }\n        if (child === b) {\n          didFindChild = true;\n          b = parentA;\n          a = parentB;\n          break;\n        }\n        child = child.sibling;\n      }\n      if (!didFindChild) {\n        // Search parent B's child set\n        child = parentB.child;\n        while (child) {\n          if (child === a) {\n            didFindChild = true;\n            a = parentB;\n            b = parentA;\n            break;\n          }\n          if (child === b) {\n            didFindChild = true;\n            b = parentB;\n            a = parentA;\n            break;\n          }\n          child = child.sibling;\n        }\n\n        if (!didFindChild) {\n          throw new Error(\n            'Child was not found in either parent set. This indicates a bug ' +\n              'in React related to the return pointer. Please file an issue.',\n          );\n        }\n      }\n    }\n\n    if (a.alternate !== b) {\n      throw new Error(\n        \"Return fibers should always be each others' alternates. \" +\n          'This error is likely caused by a bug in React. Please file an issue.',\n      );\n    }\n  }\n\n  // If the root is not a host container, we're in a disconnected tree. I.e.\n  // unmounted.\n  if (a.tag !== HostRoot) {\n    throw new Error('Unable to find node on an unmounted component.');\n  }\n\n  if (a.stateNode.current === a) {\n    // We've determined that A is the current branch.\n    return fiber;\n  }\n  // Otherwise B has to be current branch.\n  return alternate;\n}\n\nexport function findCurrentHostFiber(parent: Fiber): Fiber | null {\n  const currentParent = findCurrentFiberUsingSlowPath(parent);\n  return currentParent !== null\n    ? findCurrentHostFiberImpl(currentParent)\n    : null;\n}\n\nfunction findCurrentHostFiberImpl(node: Fiber) {\n  // Next we'll drill down this component to find the first HostComponent/Text.\n  if (node.tag === HostComponent || node.tag === HostText) {\n    return node;\n  }\n\n  let child = node.child;\n  while (child !== null) {\n    const match = findCurrentHostFiberImpl(child);\n    if (match !== null) {\n      return match;\n    }\n    child = child.sibling;\n  }\n\n  return null;\n}\n\nexport function findCurrentHostFiberWithNoPortals(parent: Fiber): Fiber | null {\n  const currentParent = findCurrentFiberUsingSlowPath(parent);\n  return currentParent !== null\n    ? findCurrentHostFiberWithNoPortalsImpl(currentParent)\n    : null;\n}\n\nfunction findCurrentHostFiberWithNoPortalsImpl(node: Fiber) {\n  // Next we'll drill down this component to find the first HostComponent/Text.\n  if (node.tag === HostComponent || node.tag === HostText) {\n    return node;\n  }\n\n  let child = node.child;\n  while (child !== null) {\n    if (child.tag !== HostPortal) {\n      const match = findCurrentHostFiberWithNoPortalsImpl(child);\n      if (match !== null) {\n        return match;\n      }\n    }\n    child = child.sibling;\n  }\n\n  return null;\n}\n\nexport function isFiberSuspenseAndTimedOut(fiber: Fiber): boolean {\n  const memoizedState = fiber.memoizedState;\n  return (\n    fiber.tag === SuspenseComponent &&\n    memoizedState !== null &&\n    memoizedState.dehydrated === null\n  );\n}\n\nexport function doesFiberContain(\n  parentFiber: Fiber,\n  childFiber: Fiber,\n): boolean {\n  let node = childFiber;\n  const parentFiberAlternate = parentFiber.alternate;\n  while (node !== null) {\n    if (node === parentFiber || node === parentFiberAlternate) {\n      return true;\n    }\n    node = node.return;\n  }\n  return false;\n}\n"],"names":["formatProdErrorMessage","code","url","i","arguments","length","encodeURIComponent","get","key","_reactInternals","ReactSharedInternals","React","HostRoot","HostPortal","HostComponent","HostText","SuspenseComponent","NoFlags","Placement","Hydrating","ReactCurrentOwner","getNearestMountedFiber","fiber","node","nearestMounted","alternate","nextNode","flags","return","tag","getSuspenseInstanceFromFiber","suspenseState","memoizedState","current","dehydrated","getContainerFromFiber","stateNode","containerInfo","isFiberMounted","isMounted","component","getInstance","assertIsMounted","findCurrentFiberUsingSlowPath","a","b","parentA","parentB","nextParent","child","sibling","didFindChild","findCurrentHostFiber","parent","currentParent","findCurrentHostFiberImpl","match","findCurrentHostFiberWithNoPortals","findCurrentHostFiberWithNoPortalsImpl","isFiberSuspenseAndTimedOut","doesFiberContain","parentFiber","childFiber","parentFiberAlternate"],"mappings":"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"}