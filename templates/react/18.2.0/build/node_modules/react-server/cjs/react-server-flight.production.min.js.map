{"version":3,"file":"react-server-flight.production.min.js","sources":["../../../../packages/react-server/src/forks/ReactServerStreamConfig.custom.js","../../../../packages/react-server/src/ReactFlightServerConfigStream.js","../../../../packages/react-server/src/ReactFlightServerBundlerConfigCustom.js","../../../../packages/shared/ReactSymbols.js","../../../../packages/react-server/src/forks/ReactServerFormatConfig.custom.js","../../../../packages/react-server/src/ReactFlightNewContext.js","../../../../packages/react-server/src/ReactFlightHooks.js","../../../../packages/shared/ReactSharedInternals.js","../../../../packages/shared/ReactServerContextRegistry.js","../../../../packages/shared/isArray.js","../../../../packages/react-server/src/ReactFlightServer.js"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\n// This is a host config that's used for the `react-server` package on npm.\n// It is only used by third-party renderers.\n//\n// Its API lets you pass the host config as an argument.\n// However, inside the `react-server` we treat host config as a module.\n// This file is a shim between two worlds.\n//\n// It works because the `react-server` bundle is wrapped in something like:\n//\n// module.exports = function ($$$config) {\n//   /* renderer code */\n// }\n//\n// So `$$$config` looks like a global variable, but it's\n// really an argument to a top-level wrapping function.\n\ndeclare var $$$hostConfig: any;\nexport opaque type Destination = mixed; // eslint-disable-line no-undef\n\nexport opaque type PrecomputedChunk = mixed; // eslint-disable-line no-undef\nexport opaque type Chunk = mixed; // eslint-disable-line no-undef\n\nexport const scheduleWork = $$$hostConfig.scheduleWork;\nexport const beginWriting = $$$hostConfig.beginWriting;\nexport const writeChunk = $$$hostConfig.writeChunk;\nexport const writeChunkAndReturn = $$$hostConfig.writeChunkAndReturn;\nexport const completeWriting = $$$hostConfig.completeWriting;\nexport const flushBuffered = $$$hostConfig.flushBuffered;\nexport const close = $$$hostConfig.close;\nexport const closeWithError = $$$hostConfig.closeWithError;\nexport const stringToChunk = $$$hostConfig.stringToChunk;\nexport const stringToPrecomputedChunk = $$$hostConfig.stringToPrecomputedChunk;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\n// This file is an intermediate layer to translate between Flight\n// calls to stream output over a binary stream.\n\n/*\nFLIGHT PROTOCOL GRAMMAR\n\nResponse\n- RowSequence\n\nRowSequence\n- Row RowSequence\n- Row\n\nRow\n- \"J\" RowID JSONData\n- \"M\" RowID JSONModuleData\n- \"H\" RowID HTMLData\n- \"B\" RowID BlobData\n- \"U\" RowID URLData\n- \"E\" RowID ErrorData\n\nRowID\n- HexDigits \":\"\n\nHexDigits\n- HexDigit HexDigits\n- HexDigit\n\nHexDigit\n- 0-F\n\nURLData\n- (UTF8 encoded URL) \"\\n\"\n\nErrorData\n- (UTF8 encoded JSON: {message: \"...\", stack: \"...\"}) \"\\n\"\n\nJSONData\n- (UTF8 encoded JSON) \"\\n\"\n  - String values that begin with $ are escaped with a \"$\" prefix.\n  - References to other rows are encoding as JSONReference strings.\n\nJSONReference\n- \"$\" HexDigits\n\nHTMLData\n- ByteSize (UTF8 encoded HTML)\n\nBlobData\n- ByteSize (Binary Data)\n\nByteSize\n- (unsigned 32-bit integer)\n*/\n\n// TODO: Implement HTMLData, BlobData and URLData.\n\nimport type {Request, ReactModel} from 'react-server/src/ReactFlightServer';\n\nimport {stringToChunk} from './ReactServerStreamConfig';\n\nimport type {Chunk} from './ReactServerStreamConfig';\n\nexport type {Destination, Chunk} from './ReactServerStreamConfig';\n\nconst stringify = JSON.stringify;\n\nfunction serializeRowHeader(tag: string, id: number) {\n  return tag + id.toString(16) + ':';\n}\n\nexport function processErrorChunk(\n  request: Request,\n  id: number,\n  message: string,\n  stack: string,\n): Chunk {\n  const errorInfo = {message, stack};\n  const row = serializeRowHeader('E', id) + stringify(errorInfo) + '\\n';\n  return stringToChunk(row);\n}\n\nexport function processModelChunk(\n  request: Request,\n  id: number,\n  model: ReactModel,\n): Chunk {\n  const json = stringify(model, request.toJSON);\n  const row = serializeRowHeader('J', id) + json + '\\n';\n  return stringToChunk(row);\n}\n\nexport function processModuleChunk(\n  request: Request,\n  id: number,\n  moduleMetaData: ReactModel,\n): Chunk {\n  const json = stringify(moduleMetaData);\n  const row = serializeRowHeader('M', id) + json + '\\n';\n  return stringToChunk(row);\n}\n\nexport function processProviderChunk(\n  request: Request,\n  id: number,\n  contextName: string,\n): Chunk {\n  const row = serializeRowHeader('P', id) + contextName + '\\n';\n  return stringToChunk(row);\n}\n\nexport function processSymbolChunk(\n  request: Request,\n  id: number,\n  name: string,\n): Chunk {\n  const json = stringify(name);\n  const row = serializeRowHeader('S', id) + json + '\\n';\n  return stringToChunk(row);\n}\n\nexport {\n  scheduleWork,\n  flushBuffered,\n  beginWriting,\n  writeChunk,\n  writeChunkAndReturn,\n  completeWriting,\n  close,\n  closeWithError,\n} from './ReactServerStreamConfig';\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\ndeclare var $$$hostConfig: any;\n\nexport opaque type BundlerConfig = mixed; // eslint-disable-line no-undef\nexport opaque type ModuleReference<T> = mixed; // eslint-disable-line no-undef\nexport opaque type ModuleMetaData: any = mixed; // eslint-disable-line no-undef\nexport opaque type ModuleKey: any = mixed; // eslint-disable-line no-undef\nexport const isModuleReference = $$$hostConfig.isModuleReference;\nexport const getModuleKey = $$$hostConfig.getModuleKey;\nexport const resolveModuleMetaData = $$$hostConfig.resolveModuleMetaData;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\n// ATTENTION\n// When adding new symbols to this file,\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n\n// The Symbol used to tag the ReactElement-like types.\nexport const REACT_ELEMENT_TYPE = Symbol.for('react.element');\nexport const REACT_PORTAL_TYPE = Symbol.for('react.portal');\nexport const REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');\nexport const REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');\nexport const REACT_PROFILER_TYPE = Symbol.for('react.profiler');\nexport const REACT_PROVIDER_TYPE = Symbol.for('react.provider');\nexport const REACT_CONTEXT_TYPE = Symbol.for('react.context');\nexport const REACT_SERVER_CONTEXT_TYPE = Symbol.for('react.server_context');\nexport const REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');\nexport const REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');\nexport const REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');\nexport const REACT_MEMO_TYPE = Symbol.for('react.memo');\nexport const REACT_LAZY_TYPE = Symbol.for('react.lazy');\nexport const REACT_SCOPE_TYPE = Symbol.for('react.scope');\nexport const REACT_DEBUG_TRACING_MODE_TYPE = Symbol.for(\n  'react.debug_trace_mode',\n);\nexport const REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');\nexport const REACT_LEGACY_HIDDEN_TYPE = Symbol.for('react.legacy_hidden');\nexport const REACT_CACHE_TYPE = Symbol.for('react.cache');\nexport const REACT_TRACING_MARKER_TYPE = Symbol.for('react.tracing_marker');\nexport const REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED = Symbol.for(\n  'react.default_value',\n);\n\nconst MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nconst FAUX_ITERATOR_SYMBOL = '@@iterator';\n\nexport function getIteratorFn(maybeIterable: ?any): ?() => ?Iterator<*> {\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\n    return null;\n  }\n  const maybeIterator =\n    (MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL]) ||\n    maybeIterable[FAUX_ITERATOR_SYMBOL];\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n  return null;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\n// This is a host config that's used for the `react-server` package on npm.\n// It is only used by third-party renderers.\n//\n// Its API lets you pass the host config as an argument.\n// However, inside the `react-server` we treat host config as a module.\n// This file is a shim between two worlds.\n//\n// It works because the `react-server` bundle is wrapped in something like:\n//\n// module.exports = function ($$$config) {\n//   /* renderer code */\n// }\n//\n// So `$$$config` looks like a global variable, but it's\n// really an argument to a top-level wrapping function.\n\ndeclare var $$$hostConfig: any;\nexport opaque type Destination = mixed; // eslint-disable-line no-undef\nexport opaque type ResponseState = mixed;\nexport opaque type FormatContext = mixed;\nexport opaque type SuspenseBoundaryID = mixed;\n\nexport const isPrimaryRenderer = false;\n\nexport const getChildFormatContext = $$$hostConfig.getChildFormatContext;\nexport const UNINITIALIZED_SUSPENSE_BOUNDARY_ID =\n  $$$hostConfig.UNINITIALIZED_SUSPENSE_BOUNDARY_ID;\nexport const assignSuspenseBoundaryID = $$$hostConfig.assignSuspenseBoundaryID;\nexport const makeId = $$$hostConfig.makeId;\nexport const pushTextInstance = $$$hostConfig.pushTextInstance;\nexport const pushStartInstance = $$$hostConfig.pushStartInstance;\nexport const pushEndInstance = $$$hostConfig.pushEndInstance;\nexport const pushStartCompletedSuspenseBoundary =\n  $$$hostConfig.pushStartCompletedSuspenseBoundary;\nexport const pushEndCompletedSuspenseBoundary =\n  $$$hostConfig.pushEndCompletedSuspenseBoundary;\nexport const pushSegmentFinale = $$$hostConfig.pushSegmentFinale;\nexport const writeCompletedRoot = $$$hostConfig.writeCompletedRoot;\nexport const writePlaceholder = $$$hostConfig.writePlaceholder;\nexport const writeStartCompletedSuspenseBoundary =\n  $$$hostConfig.writeStartCompletedSuspenseBoundary;\nexport const writeStartPendingSuspenseBoundary =\n  $$$hostConfig.writeStartPendingSuspenseBoundary;\nexport const writeStartClientRenderedSuspenseBoundary =\n  $$$hostConfig.writeStartClientRenderedSuspenseBoundary;\nexport const writeEndCompletedSuspenseBoundary =\n  $$$hostConfig.writeEndCompletedSuspenseBoundary;\nexport const writeEndPendingSuspenseBoundary =\n  $$$hostConfig.writeEndPendingSuspenseBoundary;\nexport const writeEndClientRenderedSuspenseBoundary =\n  $$$hostConfig.writeEndClientRenderedSuspenseBoundary;\nexport const writeStartSegment = $$$hostConfig.writeStartSegment;\nexport const writeEndSegment = $$$hostConfig.writeEndSegment;\nexport const writeCompletedSegmentInstruction =\n  $$$hostConfig.writeCompletedSegmentInstruction;\nexport const writeCompletedBoundaryInstruction =\n  $$$hostConfig.writeCompletedBoundaryInstruction;\nexport const writeClientRenderBoundaryInstruction =\n  $$$hostConfig.writeClientRenderBoundaryInstruction;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {\n  ReactServerContext,\n  ServerContextJSONValue,\n} from 'shared/ReactTypes';\n\nimport {REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED} from 'shared/ReactSymbols';\nimport {isPrimaryRenderer} from './ReactServerFormatConfig';\n\nlet rendererSigil;\nif (__DEV__) {\n  // Use this to detect multiple renderers using the same context\n  rendererSigil = {};\n}\n\n// Used to store the parent path of all context overrides in a shared linked list.\n// Forming a reverse tree.\ntype ContextNode<T: ServerContextJSONValue> = {\n  parent: null | ContextNode<any>,\n  depth: number, // Short hand to compute the depth of the tree at this node.\n  context: ReactServerContext<T>,\n  parentValue: T,\n  value: T,\n};\n\n// The structure of a context snapshot is an implementation of this file.\n// Currently, it's implemented as tracking the current active node.\nexport opaque type ContextSnapshot = null | ContextNode<any>;\n\nexport const rootContextSnapshot: ContextSnapshot = null;\n\n// We assume that this runtime owns the \"current\" field on all ReactContext instances.\n// This global (actually thread local) state represents what state all those \"current\",\n// fields are currently in.\nlet currentActiveSnapshot: ContextSnapshot = null;\n\nfunction popNode(prev: ContextNode<any>): void {\n  if (isPrimaryRenderer) {\n    prev.context._currentValue = prev.parentValue;\n  } else {\n    prev.context._currentValue2 = prev.parentValue;\n  }\n}\n\nfunction pushNode(next: ContextNode<any>): void {\n  if (isPrimaryRenderer) {\n    next.context._currentValue = next.value;\n  } else {\n    next.context._currentValue2 = next.value;\n  }\n}\n\nfunction popToNearestCommonAncestor(\n  prev: ContextNode<any>,\n  next: ContextNode<any>,\n): void {\n  if (prev === next) {\n    // We've found a shared ancestor. We don't need to pop nor reapply this one or anything above.\n  } else {\n    popNode(prev);\n    const parentPrev = prev.parent;\n    const parentNext = next.parent;\n    if (parentPrev === null) {\n      if (parentNext !== null) {\n        throw new Error(\n          'The stacks must reach the root at the same time. This is a bug in React.',\n        );\n      }\n    } else {\n      if (parentNext === null) {\n        throw new Error(\n          'The stacks must reach the root at the same time. This is a bug in React.',\n        );\n      }\n\n      popToNearestCommonAncestor(parentPrev, parentNext);\n      // On the way back, we push the new ones that weren't common.\n      pushNode(next);\n    }\n  }\n}\n\nfunction popAllPrevious(prev: ContextNode<any>): void {\n  popNode(prev);\n  const parentPrev = prev.parent;\n  if (parentPrev !== null) {\n    popAllPrevious(parentPrev);\n  }\n}\n\nfunction pushAllNext(next: ContextNode<any>): void {\n  const parentNext = next.parent;\n  if (parentNext !== null) {\n    pushAllNext(parentNext);\n  }\n  pushNode(next);\n}\n\nfunction popPreviousToCommonLevel(\n  prev: ContextNode<any>,\n  next: ContextNode<any>,\n): void {\n  popNode(prev);\n  const parentPrev = prev.parent;\n\n  if (parentPrev === null) {\n    throw new Error(\n      'The depth must equal at least at zero before reaching the root. This is a bug in React.',\n    );\n  }\n\n  if (parentPrev.depth === next.depth) {\n    // We found the same level. Now we just need to find a shared ancestor.\n    popToNearestCommonAncestor(parentPrev, next);\n  } else {\n    // We must still be deeper.\n    popPreviousToCommonLevel(parentPrev, next);\n  }\n}\n\nfunction popNextToCommonLevel(\n  prev: ContextNode<any>,\n  next: ContextNode<any>,\n): void {\n  const parentNext = next.parent;\n\n  if (parentNext === null) {\n    throw new Error(\n      'The depth must equal at least at zero before reaching the root. This is a bug in React.',\n    );\n  }\n\n  if (prev.depth === parentNext.depth) {\n    // We found the same level. Now we just need to find a shared ancestor.\n    popToNearestCommonAncestor(prev, parentNext);\n  } else {\n    // We must still be deeper.\n    popNextToCommonLevel(prev, parentNext);\n  }\n  pushNode(next);\n}\n\n// Perform context switching to the new snapshot.\n// To make it cheap to read many contexts, while not suspending, we make the switch eagerly by\n// updating all the context's current values. That way reads, always just read the current value.\n// At the cost of updating contexts even if they're never read by this subtree.\nexport function switchContext(newSnapshot: ContextSnapshot): void {\n  // The basic algorithm we need to do is to pop back any contexts that are no longer on the stack.\n  // We also need to update any new contexts that are now on the stack with the deepest value.\n  // The easiest way to update new contexts is to just reapply them in reverse order from the\n  // perspective of the backpointers. To avoid allocating a lot when switching, we use the stack\n  // for that. Therefore this algorithm is recursive.\n  // 1) First we pop which ever snapshot tree was deepest. Popping old contexts as we go.\n  // 2) Then we find the nearest common ancestor from there. Popping old contexts as we go.\n  // 3) Then we reapply new contexts on the way back up the stack.\n  const prev = currentActiveSnapshot;\n  const next = newSnapshot;\n  if (prev !== next) {\n    if (prev === null) {\n      // $FlowFixMe: This has to be non-null since it's not equal to prev.\n      pushAllNext(next);\n    } else if (next === null) {\n      popAllPrevious(prev);\n    } else if (prev.depth === next.depth) {\n      popToNearestCommonAncestor(prev, next);\n    } else if (prev.depth > next.depth) {\n      popPreviousToCommonLevel(prev, next);\n    } else {\n      popNextToCommonLevel(prev, next);\n    }\n    currentActiveSnapshot = next;\n  }\n}\n\nexport function pushProvider<T: ServerContextJSONValue>(\n  context: ReactServerContext<T>,\n  nextValue: T,\n): ContextSnapshot {\n  let prevValue;\n  if (isPrimaryRenderer) {\n    prevValue = context._currentValue;\n    context._currentValue = nextValue;\n    if (__DEV__) {\n      if (\n        context._currentRenderer !== undefined &&\n        context._currentRenderer !== null &&\n        context._currentRenderer !== rendererSigil\n      ) {\n        console.error(\n          'Detected multiple renderers concurrently rendering the ' +\n            'same context provider. This is currently unsupported.',\n        );\n      }\n      context._currentRenderer = rendererSigil;\n    }\n  } else {\n    prevValue = context._currentValue2;\n    context._currentValue2 = nextValue;\n    if (__DEV__) {\n      if (\n        context._currentRenderer2 !== undefined &&\n        context._currentRenderer2 !== null &&\n        context._currentRenderer2 !== rendererSigil\n      ) {\n        console.error(\n          'Detected multiple renderers concurrently rendering the ' +\n            'same context provider. This is currently unsupported.',\n        );\n      }\n      context._currentRenderer2 = rendererSigil;\n    }\n  }\n  const prevNode = currentActiveSnapshot;\n  const newNode: ContextNode<T> = {\n    parent: prevNode,\n    depth: prevNode === null ? 0 : prevNode.depth + 1,\n    context: context,\n    parentValue: prevValue,\n    value: nextValue,\n  };\n  currentActiveSnapshot = newNode;\n  return newNode;\n}\n\nexport function popProvider(): ContextSnapshot {\n  const prevSnapshot = currentActiveSnapshot;\n\n  if (prevSnapshot === null) {\n    throw new Error(\n      'Tried to pop a Context at the root of the app. This is a bug in React.',\n    );\n  }\n\n  if (isPrimaryRenderer) {\n    const value = prevSnapshot.parentValue;\n    if (value === REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED) {\n      prevSnapshot.context._currentValue = prevSnapshot.context._defaultValue;\n    } else {\n      prevSnapshot.context._currentValue = value;\n    }\n  } else {\n    const value = prevSnapshot.parentValue;\n    if (value === REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED) {\n      prevSnapshot.context._currentValue2 = prevSnapshot.context._defaultValue;\n    } else {\n      prevSnapshot.context._currentValue2 = value;\n    }\n  }\n  return (currentActiveSnapshot = prevSnapshot.parent);\n}\n\nexport function getActiveContext(): ContextSnapshot {\n  return currentActiveSnapshot;\n}\n\nexport function readContext<T>(context: ReactServerContext<T>): T {\n  const value = isPrimaryRenderer\n    ? context._currentValue\n    : context._currentValue2;\n  return value;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Dispatcher as DispatcherType} from 'react-reconciler/src/ReactInternalTypes';\nimport type {Request} from './ReactFlightServer';\nimport type {ReactServerContext} from 'shared/ReactTypes';\nimport {REACT_SERVER_CONTEXT_TYPE} from 'shared/ReactSymbols';\nimport {readContext as readContextImpl} from './ReactFlightNewContext';\n\nlet currentRequest = null;\n\nexport function prepareToUseHooksForRequest(request: Request) {\n  currentRequest = request;\n}\n\nexport function resetHooksForRequest() {\n  currentRequest = null;\n}\n\nfunction readContext<T>(context: ReactServerContext<T>): T {\n  if (__DEV__) {\n    if (context.$$typeof !== REACT_SERVER_CONTEXT_TYPE) {\n      console.error('Only ServerContext is supported in Flight');\n    }\n    if (currentCache === null) {\n      console.error(\n        'Context can only be read while React is rendering. ' +\n          'In classes, you can read it in the render method or getDerivedStateFromProps. ' +\n          'In function components, you can read it directly in the function body, but not ' +\n          'inside Hooks like useReducer() or useMemo().',\n      );\n    }\n  }\n  return readContextImpl(context);\n}\n\nexport const Dispatcher: DispatcherType = {\n  useMemo<T>(nextCreate: () => T): T {\n    return nextCreate();\n  },\n  useCallback<T>(callback: T): T {\n    return callback;\n  },\n  useDebugValue(): void {},\n  useDeferredValue: (unsupportedHook: any),\n  useTransition: (unsupportedHook: any),\n  getCacheForType<T>(resourceType: () => T): T {\n    if (!currentCache) {\n      throw new Error('Reading the cache is only supported while rendering.');\n    }\n\n    let entry: T | void = (currentCache.get(resourceType): any);\n    if (entry === undefined) {\n      entry = resourceType();\n      // TODO: Warn if undefined?\n      currentCache.set(resourceType, entry);\n    }\n    return entry;\n  },\n  readContext,\n  useContext: readContext,\n  useReducer: (unsupportedHook: any),\n  useRef: (unsupportedHook: any),\n  useState: (unsupportedHook: any),\n  useInsertionEffect: (unsupportedHook: any),\n  useLayoutEffect: (unsupportedHook: any),\n  useImperativeHandle: (unsupportedHook: any),\n  useEffect: (unsupportedHook: any),\n  useId,\n  useMutableSource: (unsupportedHook: any),\n  useSyncExternalStore: (unsupportedHook: any),\n  useCacheRefresh(): <T>(?() => T, ?T) => void {\n    return unsupportedRefresh;\n  },\n};\n\nfunction unsupportedHook(): void {\n  throw new Error('This Hook is not supported in Server Components.');\n}\n\nfunction unsupportedRefresh(): void {\n  if (!currentCache) {\n    throw new Error(\n      'Refreshing the cache is not supported in Server Components.',\n    );\n  }\n}\n\nlet currentCache: Map<Function, mixed> | null = null;\n\nexport function setCurrentCache(cache: Map<Function, mixed> | null) {\n  currentCache = cache;\n  return currentCache;\n}\n\nexport function getCurrentCache() {\n  return currentCache;\n}\n\nfunction useId(): string {\n  if (currentRequest === null) {\n    throw new Error('useId can only be used while React is rendering');\n  }\n  const id = currentRequest.identifierCount++;\n  // use 'S' for Flight components to distinguish from 'R' and 'r' in Fizz/Client\n  return ':' + currentRequest.identifierPrefix + 'S' + id.toString(32) + ':';\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport * as React from 'react';\n\nconst ReactSharedInternals =\n  React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n\nexport default ReactSharedInternals;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport {REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED} from 'shared/ReactSymbols';\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\nimport {createServerContext} from 'react';\n\nconst ContextRegistry = ReactSharedInternals.ContextRegistry;\n\nexport function getOrCreateServerContext(globalName: string) {\n  if (!ContextRegistry[globalName]) {\n    ContextRegistry[globalName] = createServerContext(\n      globalName,\n      REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED,\n    );\n  }\n  return ContextRegistry[globalName];\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\ndeclare function isArray(a: mixed): boolean %checks(Array.isArray(a));\n\nconst isArrayImpl = Array.isArray;\n\n// eslint-disable-next-line no-redeclare\nfunction isArray(a: mixed): boolean {\n  return isArrayImpl(a);\n}\n\nexport default isArray;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {\n  Destination,\n  Chunk,\n  BundlerConfig,\n  ModuleMetaData,\n  ModuleReference,\n  ModuleKey,\n} from './ReactFlightServerConfig';\nimport type {ContextSnapshot} from './ReactFlightNewContext';\nimport type {\n  ReactProviderType,\n  ServerContextJSONValue,\n} from 'shared/ReactTypes';\n\nimport {\n  scheduleWork,\n  beginWriting,\n  writeChunkAndReturn,\n  completeWriting,\n  flushBuffered,\n  close,\n  closeWithError,\n  processModelChunk,\n  processModuleChunk,\n  processProviderChunk,\n  processSymbolChunk,\n  processErrorChunk,\n  resolveModuleMetaData,\n  getModuleKey,\n  isModuleReference,\n} from './ReactFlightServerConfig';\n\nimport {\n  Dispatcher,\n  getCurrentCache,\n  prepareToUseHooksForRequest,\n  resetHooksForRequest,\n  setCurrentCache,\n} from './ReactFlightHooks';\nimport {\n  pushProvider,\n  popProvider,\n  switchContext,\n  getActiveContext,\n  rootContextSnapshot,\n} from './ReactFlightNewContext';\n\nimport {\n  REACT_ELEMENT_TYPE,\n  REACT_FORWARD_REF_TYPE,\n  REACT_FRAGMENT_TYPE,\n  REACT_LAZY_TYPE,\n  REACT_MEMO_TYPE,\n  REACT_PROVIDER_TYPE,\n} from 'shared/ReactSymbols';\n\nimport {getOrCreateServerContext} from 'shared/ReactServerContextRegistry';\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\nimport isArray from 'shared/isArray';\n\ntype ReactJSONValue =\n  | string\n  | boolean\n  | number\n  | null\n  | $ReadOnlyArray<ReactJSONValue>\n  | ReactModelObject;\n\nexport type ReactModel =\n  | React$Element<any>\n  | string\n  | boolean\n  | number\n  | null\n  | Iterable<ReactModel>\n  | ReactModelObject;\n\ntype ReactModelObject = {+[key: string]: ReactModel};\n\ntype Segment = {\n  id: number,\n  model: ReactModel,\n  ping: () => void,\n  context: ContextSnapshot,\n};\n\nexport type Request = {\n  status: 0 | 1 | 2,\n  fatalError: mixed,\n  destination: null | Destination,\n  bundlerConfig: BundlerConfig,\n  cache: Map<Function, mixed>,\n  nextChunkId: number,\n  pendingChunks: number,\n  pingedSegments: Array<Segment>,\n  completedModuleChunks: Array<Chunk>,\n  completedJSONChunks: Array<Chunk>,\n  completedErrorChunks: Array<Chunk>,\n  writtenSymbols: Map<Symbol, number>,\n  writtenModules: Map<ModuleKey, number>,\n  writtenProviders: Map<string, number>,\n  identifierPrefix: string,\n  identifierCount: number,\n  onError: (error: mixed) => void,\n  toJSON: (key: string, value: ReactModel) => ReactJSONValue,\n};\n\nconst ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;\n\nfunction defaultErrorHandler(error: mixed) {\n  console['error'](error);\n  // Don't transform to our wrapper\n}\n\nconst OPEN = 0;\nconst CLOSING = 1;\nconst CLOSED = 2;\n\nexport function createRequest(\n  model: ReactModel,\n  bundlerConfig: BundlerConfig,\n  onError: void | ((error: mixed) => void),\n  context?: Array<[string, ServerContextJSONValue]>,\n  identifierPrefix?: string,\n): Request {\n  const pingedSegments = [];\n  const request = {\n    status: OPEN,\n    fatalError: null,\n    destination: null,\n    bundlerConfig,\n    cache: new Map(),\n    nextChunkId: 0,\n    pendingChunks: 0,\n    pingedSegments: pingedSegments,\n    completedModuleChunks: [],\n    completedJSONChunks: [],\n    completedErrorChunks: [],\n    writtenSymbols: new Map(),\n    writtenModules: new Map(),\n    writtenProviders: new Map(),\n    identifierPrefix: identifierPrefix || '',\n    identifierCount: 1,\n    onError: onError === undefined ? defaultErrorHandler : onError,\n    toJSON: function(key: string, value: ReactModel): ReactJSONValue {\n      return resolveModelToJSON(request, this, key, value);\n    },\n  };\n  request.pendingChunks++;\n  const rootContext = createRootContext(context);\n  const rootSegment = createSegment(request, model, rootContext);\n  pingedSegments.push(rootSegment);\n  return request;\n}\n\nfunction createRootContext(\n  reqContext?: Array<[string, ServerContextJSONValue]>,\n) {\n  return importServerContexts(reqContext);\n}\n\nconst POP = {};\n\nfunction attemptResolveElement(\n  type: any,\n  key: null | React$Key,\n  ref: mixed,\n  props: any,\n): ReactModel {\n  if (ref !== null && ref !== undefined) {\n    // When the ref moves to the regular props object this will implicitly\n    // throw for functions. We could probably relax it to a DEV warning for other\n    // cases.\n    throw new Error(\n      'Refs cannot be used in server components, nor passed to client components.',\n    );\n  }\n  if (typeof type === 'function') {\n    // This is a server-side component.\n    return type(props);\n  } else if (typeof type === 'string') {\n    // This is a host element. E.g. HTML.\n    return [REACT_ELEMENT_TYPE, type, key, props];\n  } else if (typeof type === 'symbol') {\n    if (type === REACT_FRAGMENT_TYPE) {\n      // For key-less fragments, we add a small optimization to avoid serializing\n      // it as a wrapper.\n      // TODO: If a key is specified, we should propagate its key to any children.\n      // Same as if a server component has a key.\n      return props.children;\n    }\n    // This might be a built-in React component. We'll let the client decide.\n    // Any built-in works as long as its props are serializable.\n    return [REACT_ELEMENT_TYPE, type, key, props];\n  } else if (type != null && typeof type === 'object') {\n    if (isModuleReference(type)) {\n      // This is a reference to a client component.\n      return [REACT_ELEMENT_TYPE, type, key, props];\n    }\n    switch (type.$$typeof) {\n      case REACT_LAZY_TYPE: {\n        const payload = type._payload;\n        const init = type._init;\n        const wrappedType = init(payload);\n        return attemptResolveElement(wrappedType, key, ref, props);\n      }\n      case REACT_FORWARD_REF_TYPE: {\n        const render = type.render;\n        return render(props, undefined);\n      }\n      case REACT_MEMO_TYPE: {\n        return attemptResolveElement(type.type, key, ref, props);\n      }\n      case REACT_PROVIDER_TYPE: {\n        pushProvider(type._context, props.value);\n        if (__DEV__) {\n          const extraKeys = Object.keys(props).filter(value => {\n            if (value === 'children' || value === 'value') {\n              return false;\n            }\n            return true;\n          });\n          if (extraKeys.length !== 0) {\n            console.error(\n              'ServerContext can only have a value prop and children. Found: %s',\n              JSON.stringify(extraKeys),\n            );\n          }\n        }\n        return [\n          REACT_ELEMENT_TYPE,\n          type,\n          key,\n          // Rely on __popProvider being serialized last to pop the provider.\n          {value: props.value, children: props.children, __pop: POP},\n        ];\n      }\n    }\n  }\n  throw new Error(\n    `Unsupported server component type: ${describeValueForErrorMessage(type)}`,\n  );\n}\n\nfunction pingSegment(request: Request, segment: Segment): void {\n  const pingedSegments = request.pingedSegments;\n  pingedSegments.push(segment);\n  if (pingedSegments.length === 1) {\n    scheduleWork(() => performWork(request));\n  }\n}\n\nfunction createSegment(\n  request: Request,\n  model: ReactModel,\n  context: ContextSnapshot,\n): Segment {\n  const id = request.nextChunkId++;\n  const segment = {\n    id,\n    model,\n    context,\n    ping: () => pingSegment(request, segment),\n  };\n  return segment;\n}\n\nfunction serializeByValueID(id: number): string {\n  return '$' + id.toString(16);\n}\n\nfunction serializeByRefID(id: number): string {\n  return '@' + id.toString(16);\n}\n\nfunction escapeStringValue(value: string): string {\n  if (value[0] === '$' || value[0] === '@') {\n    // We need to escape $ or @ prefixed strings since we use those to encode\n    // references to IDs and as special symbol values.\n    return '$' + value;\n  } else {\n    return value;\n  }\n}\n\nfunction isObjectPrototype(object): boolean {\n  if (!object) {\n    return false;\n  }\n  const ObjectPrototype = Object.prototype;\n  if (object === ObjectPrototype) {\n    return true;\n  }\n  // It might be an object from a different Realm which is\n  // still just a plain simple object.\n  if (Object.getPrototypeOf(object)) {\n    return false;\n  }\n  const names = Object.getOwnPropertyNames(object);\n  for (let i = 0; i < names.length; i++) {\n    if (!(names[i] in ObjectPrototype)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction isSimpleObject(object): boolean {\n  if (!isObjectPrototype(Object.getPrototypeOf(object))) {\n    return false;\n  }\n  const names = Object.getOwnPropertyNames(object);\n  for (let i = 0; i < names.length; i++) {\n    const descriptor = Object.getOwnPropertyDescriptor(object, names[i]);\n    if (!descriptor) {\n      return false;\n    }\n    if (!descriptor.enumerable) {\n      if (\n        (names[i] === 'key' || names[i] === 'ref') &&\n        typeof descriptor.get === 'function'\n      ) {\n        // React adds key and ref getters to props objects to issue warnings.\n        // Those getters will not be transferred to the client, but that's ok,\n        // so we'll special case them.\n        continue;\n      }\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction objectName(object): string {\n  const name = Object.prototype.toString.call(object);\n  return name.replace(/^\\[object (.*)\\]$/, function(m, p0) {\n    return p0;\n  });\n}\n\nfunction describeKeyForErrorMessage(key: string): string {\n  const encodedKey = JSON.stringify(key);\n  return '\"' + key + '\"' === encodedKey ? key : encodedKey;\n}\n\nfunction describeValueForErrorMessage(value: ReactModel): string {\n  switch (typeof value) {\n    case 'string': {\n      return JSON.stringify(\n        value.length <= 10 ? value : value.substr(0, 10) + '...',\n      );\n    }\n    case 'object': {\n      if (isArray(value)) {\n        return '[...]';\n      }\n      const name = objectName(value);\n      if (name === 'Object') {\n        return '{...}';\n      }\n      return name;\n    }\n    case 'function':\n      return 'function';\n    default:\n      // eslint-disable-next-line react-internal/safe-string-coercion\n      return String(value);\n  }\n}\n\nfunction describeObjectForErrorMessage(\n  objectOrArray:\n    | {+[key: string | number]: ReactModel}\n    | $ReadOnlyArray<ReactModel>,\n  expandedName?: string,\n): string {\n  if (isArray(objectOrArray)) {\n    let str = '[';\n    const array: $ReadOnlyArray<ReactModel> = objectOrArray;\n    for (let i = 0; i < array.length; i++) {\n      if (i > 0) {\n        str += ', ';\n      }\n      if (i > 6) {\n        str += '...';\n        break;\n      }\n      const value = array[i];\n      if (\n        '' + i === expandedName &&\n        typeof value === 'object' &&\n        value !== null\n      ) {\n        str += describeObjectForErrorMessage(value);\n      } else {\n        str += describeValueForErrorMessage(value);\n      }\n    }\n    str += ']';\n    return str;\n  } else {\n    let str = '{';\n    const object: {+[key: string | number]: ReactModel} = objectOrArray;\n    const names = Object.keys(object);\n    for (let i = 0; i < names.length; i++) {\n      if (i > 0) {\n        str += ', ';\n      }\n      if (i > 6) {\n        str += '...';\n        break;\n      }\n      const name = names[i];\n      str += describeKeyForErrorMessage(name) + ': ';\n      const value = object[name];\n      if (\n        name === expandedName &&\n        typeof value === 'object' &&\n        value !== null\n      ) {\n        str += describeObjectForErrorMessage(value);\n      } else {\n        str += describeValueForErrorMessage(value);\n      }\n    }\n    str += '}';\n    return str;\n  }\n}\n\nlet insideContextProps = null;\nlet isInsideContextValue = false;\n\nexport function resolveModelToJSON(\n  request: Request,\n  parent: {+[key: string | number]: ReactModel} | $ReadOnlyArray<ReactModel>,\n  key: string,\n  value: ReactModel,\n): ReactJSONValue {\n  if (__DEV__) {\n    // $FlowFixMe\n    const originalValue = parent[key];\n    if (typeof originalValue === 'object' && originalValue !== value) {\n      console.error(\n        'Only plain objects can be passed to client components from server components. ' +\n          'Objects with toJSON methods are not supported. Convert it manually ' +\n          'to a simple value before passing it to props. ' +\n          'Remove %s from these props: %s',\n        describeKeyForErrorMessage(key),\n        describeObjectForErrorMessage(parent),\n      );\n    }\n  }\n\n  // Special Symbols\n  switch (value) {\n    case REACT_ELEMENT_TYPE:\n      return '$';\n  }\n\n  if (__DEV__) {\n    if (\n      parent[0] === REACT_ELEMENT_TYPE &&\n      parent[1] &&\n      parent[1].$$typeof === REACT_PROVIDER_TYPE &&\n      key === '3'\n    ) {\n      insideContextProps = value;\n    } else if (insideContextProps === parent && key === 'value') {\n      isInsideContextValue = true;\n    } else if (insideContextProps === parent && key === 'children') {\n      isInsideContextValue = false;\n    }\n  }\n\n  // Resolve server components.\n  while (\n    typeof value === 'object' &&\n    value !== null &&\n    ((value: any).$$typeof === REACT_ELEMENT_TYPE ||\n      (value: any).$$typeof === REACT_LAZY_TYPE)\n  ) {\n    if (__DEV__) {\n      if (isInsideContextValue) {\n        console.error('React elements are not allowed in ServerContext');\n      }\n    }\n\n    try {\n      switch ((value: any).$$typeof) {\n        case REACT_ELEMENT_TYPE: {\n          // TODO: Concatenate keys of parents onto children.\n          const element: React$Element<any> = (value: any);\n          // Attempt to render the server component.\n          value = attemptResolveElement(\n            element.type,\n            element.key,\n            element.ref,\n            element.props,\n          );\n          break;\n        }\n        case REACT_LAZY_TYPE: {\n          const payload = (value: any)._payload;\n          const init = (value: any)._init;\n          value = init(payload);\n          break;\n        }\n      }\n    } catch (x) {\n      if (typeof x === 'object' && x !== null && typeof x.then === 'function') {\n        // Something suspended, we'll need to create a new segment and resolve it later.\n        request.pendingChunks++;\n        const newSegment = createSegment(request, value, getActiveContext());\n        const ping = newSegment.ping;\n        x.then(ping, ping);\n        return serializeByRefID(newSegment.id);\n      } else {\n        logRecoverableError(request, x);\n        // Something errored. We'll still send everything we have up until this point.\n        // We'll replace this element with a lazy reference that throws on the client\n        // once it gets rendered.\n        request.pendingChunks++;\n        const errorId = request.nextChunkId++;\n        emitErrorChunk(request, errorId, x);\n        return serializeByRefID(errorId);\n      }\n    }\n  }\n\n  if (value === null) {\n    return null;\n  }\n\n  if (typeof value === 'object') {\n    if (isModuleReference(value)) {\n      const moduleReference: ModuleReference<any> = (value: any);\n      const moduleKey: ModuleKey = getModuleKey(moduleReference);\n      const writtenModules = request.writtenModules;\n      const existingId = writtenModules.get(moduleKey);\n      if (existingId !== undefined) {\n        if (parent[0] === REACT_ELEMENT_TYPE && key === '1') {\n          // If we're encoding the \"type\" of an element, we can refer\n          // to that by a lazy reference instead of directly since React\n          // knows how to deal with lazy values. This lets us suspend\n          // on this component rather than its parent until the code has\n          // loaded.\n          return serializeByRefID(existingId);\n        }\n        return serializeByValueID(existingId);\n      }\n      try {\n        const moduleMetaData: ModuleMetaData = resolveModuleMetaData(\n          request.bundlerConfig,\n          moduleReference,\n        );\n        request.pendingChunks++;\n        const moduleId = request.nextChunkId++;\n        emitModuleChunk(request, moduleId, moduleMetaData);\n        writtenModules.set(moduleKey, moduleId);\n        if (parent[0] === REACT_ELEMENT_TYPE && key === '1') {\n          // If we're encoding the \"type\" of an element, we can refer\n          // to that by a lazy reference instead of directly since React\n          // knows how to deal with lazy values. This lets us suspend\n          // on this component rather than its parent until the code has\n          // loaded.\n          return serializeByRefID(moduleId);\n        }\n        return serializeByValueID(moduleId);\n      } catch (x) {\n        request.pendingChunks++;\n        const errorId = request.nextChunkId++;\n        emitErrorChunk(request, errorId, x);\n        return serializeByValueID(errorId);\n      }\n    } else if ((value: any).$$typeof === REACT_PROVIDER_TYPE) {\n      const providerKey = ((value: any): ReactProviderType<any>)._context\n        ._globalName;\n      const writtenProviders = request.writtenProviders;\n      let providerId = writtenProviders.get(key);\n      if (providerId === undefined) {\n        request.pendingChunks++;\n        providerId = request.nextChunkId++;\n        writtenProviders.set(providerKey, providerId);\n        emitProviderChunk(request, providerId, providerKey);\n      }\n      return serializeByValueID(providerId);\n    } else if (value === POP) {\n      popProvider();\n      if (__DEV__) {\n        insideContextProps = null;\n        isInsideContextValue = false;\n      }\n      return (undefined: any);\n    }\n\n    if (__DEV__) {\n      if (value !== null && !isArray(value)) {\n        // Verify that this is a simple plain object.\n        if (objectName(value) !== 'Object') {\n          console.error(\n            'Only plain objects can be passed to client components from server components. ' +\n              'Built-ins like %s are not supported. ' +\n              'Remove %s from these props: %s',\n            objectName(value),\n            describeKeyForErrorMessage(key),\n            describeObjectForErrorMessage(parent),\n          );\n        } else if (!isSimpleObject(value)) {\n          console.error(\n            'Only plain objects can be passed to client components from server components. ' +\n              'Classes or other objects with methods are not supported. ' +\n              'Remove %s from these props: %s',\n            describeKeyForErrorMessage(key),\n            describeObjectForErrorMessage(parent, key),\n          );\n        } else if (Object.getOwnPropertySymbols) {\n          const symbols = Object.getOwnPropertySymbols(value);\n          if (symbols.length > 0) {\n            console.error(\n              'Only plain objects can be passed to client components from server components. ' +\n                'Objects with symbol properties like %s are not supported. ' +\n                'Remove %s from these props: %s',\n              symbols[0].description,\n              describeKeyForErrorMessage(key),\n              describeObjectForErrorMessage(parent, key),\n            );\n          }\n        }\n      }\n    }\n\n    return value;\n  }\n\n  if (typeof value === 'string') {\n    return escapeStringValue(value);\n  }\n\n  if (\n    typeof value === 'boolean' ||\n    typeof value === 'number' ||\n    typeof value === 'undefined'\n  ) {\n    return value;\n  }\n\n  if (typeof value === 'function') {\n    if (/^on[A-Z]/.test(key)) {\n      throw new Error(\n        'Event handlers cannot be passed to client component props. ' +\n          `Remove ${describeKeyForErrorMessage(\n            key,\n          )} from these props if possible: ${describeObjectForErrorMessage(\n            parent,\n          )}\n` +\n          'If you need interactivity, consider converting part of this to a client component.',\n      );\n    } else {\n      throw new Error(\n        'Functions cannot be passed directly to client components ' +\n          \"because they're not serializable. \" +\n          `Remove ${describeKeyForErrorMessage(key)} (${value.displayName ||\n            value.name ||\n            'function'}) from this object, or avoid the entire object: ${describeObjectForErrorMessage(\n            parent,\n          )}`,\n      );\n    }\n  }\n\n  if (typeof value === 'symbol') {\n    const writtenSymbols = request.writtenSymbols;\n    const existingId = writtenSymbols.get(value);\n    if (existingId !== undefined) {\n      return serializeByValueID(existingId);\n    }\n    const name = value.description;\n\n    if (Symbol.for(name) !== value) {\n      throw new Error(\n        'Only global symbols received from Symbol.for(...) can be passed to client components. ' +\n          `The symbol Symbol.for(${value.description}) cannot be found among global symbols. ` +\n          `Remove ${describeKeyForErrorMessage(\n            key,\n          )} from this object, or avoid the entire object: ${describeObjectForErrorMessage(\n            parent,\n          )}`,\n      );\n    }\n\n    request.pendingChunks++;\n    const symbolId = request.nextChunkId++;\n    emitSymbolChunk(request, symbolId, name);\n    writtenSymbols.set(value, symbolId);\n    return serializeByValueID(symbolId);\n  }\n\n  // $FlowFixMe: bigint isn't added to Flow yet.\n  if (typeof value === 'bigint') {\n    throw new Error(\n      `BigInt (${value}) is not yet supported in client component props. ` +\n        `Remove ${describeKeyForErrorMessage(\n          key,\n        )} from this object or use a plain number instead: ${describeObjectForErrorMessage(\n          parent,\n        )}`,\n    );\n  }\n\n  throw new Error(\n    `Type ${typeof value} is not supported in client component props. ` +\n      `Remove ${describeKeyForErrorMessage(\n        key,\n      )} from this object, or avoid the entire object: ${describeObjectForErrorMessage(\n        parent,\n      )}`,\n  );\n}\n\nfunction logRecoverableError(request: Request, error: mixed): void {\n  const onError = request.onError;\n  onError(error);\n}\n\nfunction fatalError(request: Request, error: mixed): void {\n  // This is called outside error handling code such as if an error happens in React internals.\n  if (request.destination !== null) {\n    request.status = CLOSED;\n    closeWithError(request.destination, error);\n  } else {\n    request.status = CLOSING;\n    request.fatalError = error;\n  }\n}\n\nfunction emitErrorChunk(request: Request, id: number, error: mixed): void {\n  // TODO: We should not leak error messages to the client in prod.\n  // Give this an error code instead and log on the server.\n  // We can serialize the error in DEV as a convenience.\n  let message;\n  let stack = '';\n  try {\n    if (error instanceof Error) {\n      // eslint-disable-next-line react-internal/safe-string-coercion\n      message = String(error.message);\n      // eslint-disable-next-line react-internal/safe-string-coercion\n      stack = String(error.stack);\n    } else {\n      message = 'Error: ' + (error: any);\n    }\n  } catch (x) {\n    message = 'An error occurred but serializing the error message failed.';\n  }\n\n  const processedChunk = processErrorChunk(request, id, message, stack);\n  request.completedErrorChunks.push(processedChunk);\n}\n\nfunction emitModuleChunk(\n  request: Request,\n  id: number,\n  moduleMetaData: ModuleMetaData,\n): void {\n  const processedChunk = processModuleChunk(request, id, moduleMetaData);\n  request.completedModuleChunks.push(processedChunk);\n}\n\nfunction emitSymbolChunk(request: Request, id: number, name: string): void {\n  const processedChunk = processSymbolChunk(request, id, name);\n  request.completedModuleChunks.push(processedChunk);\n}\n\nfunction emitProviderChunk(\n  request: Request,\n  id: number,\n  contextName: string,\n): void {\n  const processedChunk = processProviderChunk(request, id, contextName);\n  request.completedJSONChunks.push(processedChunk);\n}\n\nfunction retrySegment(request: Request, segment: Segment): void {\n  switchContext(segment.context);\n  try {\n    let value = segment.model;\n    while (\n      typeof value === 'object' &&\n      value !== null &&\n      (value: any).$$typeof === REACT_ELEMENT_TYPE\n    ) {\n      // TODO: Concatenate keys of parents onto children.\n      const element: React$Element<any> = (value: any);\n      // Attempt to render the server component.\n      // Doing this here lets us reuse this same segment if the next component\n      // also suspends.\n      segment.model = value;\n      value = attemptResolveElement(\n        element.type,\n        element.key,\n        element.ref,\n        element.props,\n      );\n    }\n    const processedChunk = processModelChunk(request, segment.id, value);\n    request.completedJSONChunks.push(processedChunk);\n  } catch (x) {\n    if (typeof x === 'object' && x !== null && typeof x.then === 'function') {\n      // Something suspended again, let's pick it back up later.\n      const ping = segment.ping;\n      x.then(ping, ping);\n      return;\n    } else {\n      logRecoverableError(request, x);\n      // This errored, we need to serialize this error to the\n      emitErrorChunk(request, segment.id, x);\n    }\n  }\n}\n\nfunction performWork(request: Request): void {\n  const prevDispatcher = ReactCurrentDispatcher.current;\n  const prevCache = getCurrentCache();\n  ReactCurrentDispatcher.current = Dispatcher;\n  setCurrentCache(request.cache);\n  prepareToUseHooksForRequest(request);\n\n  try {\n    const pingedSegments = request.pingedSegments;\n    request.pingedSegments = [];\n    for (let i = 0; i < pingedSegments.length; i++) {\n      const segment = pingedSegments[i];\n      retrySegment(request, segment);\n    }\n    if (request.destination !== null) {\n      flushCompletedChunks(request, request.destination);\n    }\n  } catch (error) {\n    logRecoverableError(request, error);\n    fatalError(request, error);\n  } finally {\n    ReactCurrentDispatcher.current = prevDispatcher;\n    setCurrentCache(prevCache);\n    resetHooksForRequest();\n  }\n}\n\nfunction flushCompletedChunks(\n  request: Request,\n  destination: Destination,\n): void {\n  beginWriting(destination);\n  try {\n    // We emit module chunks first in the stream so that\n    // they can be preloaded as early as possible.\n    const moduleChunks = request.completedModuleChunks;\n    let i = 0;\n    for (; i < moduleChunks.length; i++) {\n      request.pendingChunks--;\n      const chunk = moduleChunks[i];\n      const keepWriting: boolean = writeChunkAndReturn(destination, chunk);\n      if (!keepWriting) {\n        request.destination = null;\n        i++;\n        break;\n      }\n    }\n    moduleChunks.splice(0, i);\n    // Next comes model data.\n    const jsonChunks = request.completedJSONChunks;\n    i = 0;\n    for (; i < jsonChunks.length; i++) {\n      request.pendingChunks--;\n      const chunk = jsonChunks[i];\n      const keepWriting: boolean = writeChunkAndReturn(destination, chunk);\n      if (!keepWriting) {\n        request.destination = null;\n        i++;\n        break;\n      }\n    }\n    jsonChunks.splice(0, i);\n    // Finally, errors are sent. The idea is that it's ok to delay\n    // any error messages and prioritize display of other parts of\n    // the page.\n    const errorChunks = request.completedErrorChunks;\n    i = 0;\n    for (; i < errorChunks.length; i++) {\n      request.pendingChunks--;\n      const chunk = errorChunks[i];\n      const keepWriting: boolean = writeChunkAndReturn(destination, chunk);\n      if (!keepWriting) {\n        request.destination = null;\n        i++;\n        break;\n      }\n    }\n    errorChunks.splice(0, i);\n  } finally {\n    completeWriting(destination);\n  }\n  flushBuffered(destination);\n  if (request.pendingChunks === 0) {\n    // We're done.\n    close(destination);\n  }\n}\n\nexport function startWork(request: Request): void {\n  scheduleWork(() => performWork(request));\n}\n\nexport function startFlowing(request: Request, destination: Destination): void {\n  if (request.status === CLOSING) {\n    request.status = CLOSED;\n    closeWithError(destination, request.fatalError);\n    return;\n  }\n  if (request.status === CLOSED) {\n    return;\n  }\n  if (request.destination !== null) {\n    // We're already flowing.\n    return;\n  }\n  request.destination = destination;\n  try {\n    flushCompletedChunks(request, destination);\n  } catch (error) {\n    logRecoverableError(request, error);\n    fatalError(request, error);\n  }\n}\n\nfunction importServerContexts(\n  contexts?: Array<[string, ServerContextJSONValue]>,\n) {\n  if (contexts) {\n    const prevContext = getActiveContext();\n    switchContext(rootContextSnapshot);\n    for (let i = 0; i < contexts.length; i++) {\n      const [name, value] = contexts[i];\n      const context = getOrCreateServerContext(name);\n      pushProvider(context, value);\n    }\n    const importedContext = getActiveContext();\n    switchContext(prevContext);\n    return importedContext;\n  }\n  return rootContextSnapshot;\n}\n"],"names":["scheduleWork","$$$hostConfig","beginWriting","writeChunk","writeChunkAndReturn","completeWriting","flushBuffered","close","closeWithError","stringToChunk","stringToPrecomputedChunk","stringify","JSON","serializeRowHeader","tag","id","toString","processErrorChunk","request","message","stack","errorInfo","row","processModelChunk","model","json","toJSON","processModuleChunk","moduleMetaData","processProviderChunk","contextName","processSymbolChunk","name","isModuleReference","getModuleKey","resolveModuleMetaData","REACT_ELEMENT_TYPE","Symbol","for","REACT_FRAGMENT_TYPE","REACT_PROVIDER_TYPE","REACT_FORWARD_REF_TYPE","REACT_MEMO_TYPE","REACT_LAZY_TYPE","REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED","getChildFormatContext","UNINITIALIZED_SUSPENSE_BOUNDARY_ID","assignSuspenseBoundaryID","makeId","pushTextInstance","pushStartInstance","pushEndInstance","pushStartCompletedSuspenseBoundary","pushEndCompletedSuspenseBoundary","pushSegmentFinale","writeCompletedRoot","writePlaceholder","writeStartCompletedSuspenseBoundary","writeStartPendingSuspenseBoundary","writeStartClientRenderedSuspenseBoundary","writeEndCompletedSuspenseBoundary","writeEndPendingSuspenseBoundary","writeEndClientRenderedSuspenseBoundary","writeStartSegment","writeEndSegment","writeCompletedSegmentInstruction","writeCompletedBoundaryInstruction","writeClientRenderBoundaryInstruction","rootContextSnapshot","currentActiveSnapshot","popNode","prev","context","_currentValue2","parentValue","pushNode","next","value","popToNearestCommonAncestor","parentPrev","parent","parentNext","Error","popAllPrevious","pushAllNext","popPreviousToCommonLevel","depth","popNextToCommonLevel","switchContext","newSnapshot","pushProvider","nextValue","prevValue","prevNode","newNode","popProvider","prevSnapshot","_defaultValue","getActiveContext","readContext","isPrimaryRenderer","currentRequest","prepareToUseHooksForRequest","resetHooksForRequest","readContextImpl","Dispatcher","useMemo","nextCreate","useCallback","callback","useDebugValue","useDeferredValue","unsupportedHook","useTransition","getCacheForType","resourceType","currentCache","entry","get","undefined","set","useContext","useReducer","useRef","useState","useInsertionEffect","useLayoutEffect","useImperativeHandle","useEffect","useId","useMutableSource","useSyncExternalStore","useCacheRefresh","unsupportedRefresh","setCurrentCache","cache","getCurrentCache","identifierCount","identifierPrefix","ReactSharedInternals","React","ContextRegistry","getOrCreateServerContext","globalName","createServerContext","isArrayImpl","Array","isArray","a","ReactCurrentDispatcher","defaultErrorHandler","error","console","OPEN","CLOSING","CLOSED","createRequest","bundlerConfig","onError","pingedSegments","status","fatalError","destination","Map","nextChunkId","pendingChunks","completedModuleChunks","completedJSONChunks","completedErrorChunks","writtenSymbols","writtenModules","writtenProviders","key","resolveModelToJSON","rootContext","createRootContext","rootSegment","createSegment","push","reqContext","importServerContexts","POP","attemptResolveElement","type","ref","props","children","$$typeof","payload","_payload","init","_init","wrappedType","render","_context","__pop","describeValueForErrorMessage","pingSegment","segment","length","performWork","ping","serializeByValueID","serializeByRefID","escapeStringValue","objectName","object","Object","prototype","call","replace","m","p0","describeKeyForErrorMessage","encodedKey","substr","String","describeObjectForErrorMessage","objectOrArray","expandedName","str","array","i","names","keys","element","x","then","newSegment","logRecoverableError","errorId","emitErrorChunk","moduleReference","moduleKey","existingId","moduleId","emitModuleChunk","providerKey","_globalName","providerId","emitProviderChunk","test","displayName","description","symbolId","emitSymbolChunk","processedChunk","retrySegment","prevDispatcher","current","prevCache","flushCompletedChunks","moduleChunks","chunk","keepWriting","splice","jsonChunks","errorChunks","startWork","startFlowing","contexts","prevContext","importedContext"],"mappings":"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"}