{"version":3,"file":"use-sync-external-store-with-selector.development.js","sources":["../../../../packages/shared/objectIs.js","../../../../packages/use-sync-external-store/src/forks/useSyncExternalStore.forward-to-built-in.js","../../../../packages/use-sync-external-store/src/useSyncExternalStoreWithSelector.js"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\n/**\n * inlined Object.is polyfill to avoid requiring consumers ship their own\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n */\nfunction is(x: any, y: any) {\n  return (\n    (x === y && (x !== 0 || 1 / x === 1 / y)) || (x !== x && y !== y) // eslint-disable-line no-self-compare\n  );\n}\n\nconst objectIs: (x: any, y: any) => boolean =\n  typeof Object.is === 'function' ? Object.is : is;\n\nexport default objectIs;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\n'use strict';\n\n// Intentionally not using named imports because Rollup uses dynamic\n// dispatch for CommonJS interop named imports.\nimport * as React from 'react';\n\nexport const useSyncExternalStore = React.useSyncExternalStore;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport * as React from 'react';\nimport is from 'shared/objectIs';\nimport {useSyncExternalStore} from 'use-sync-external-store/src/useSyncExternalStore';\n\n// Intentionally not using named imports because Rollup uses dynamic dispatch\n// for CommonJS interop.\nconst {useRef, useEffect, useMemo, useDebugValue} = React;\n\n// Same as useSyncExternalStore, but supports selector and isEqual arguments.\nexport function useSyncExternalStoreWithSelector<Snapshot, Selection>(\n  subscribe: (() => void) => () => void,\n  getSnapshot: () => Snapshot,\n  getServerSnapshot: void | null | (() => Snapshot),\n  selector: (snapshot: Snapshot) => Selection,\n  isEqual?: (a: Selection, b: Selection) => boolean,\n): Selection {\n  // Use this to track the rendered snapshot.\n  const instRef = useRef(null);\n  let inst;\n  if (instRef.current === null) {\n    inst = {\n      hasValue: false,\n      value: (null: Selection | null),\n    };\n    instRef.current = inst;\n  } else {\n    inst = instRef.current;\n  }\n\n  const [getSelection, getServerSelection] = useMemo(() => {\n    // Track the memoized state using closure variables that are local to this\n    // memoized instance of a getSnapshot function. Intentionally not using a\n    // useRef hook, because that state would be shared across all concurrent\n    // copies of the hook/component.\n    let hasMemo = false;\n    let memoizedSnapshot;\n    let memoizedSelection;\n    const memoizedSelector = nextSnapshot => {\n      if (!hasMemo) {\n        // The first time the hook is called, there is no memoized result.\n        hasMemo = true;\n        memoizedSnapshot = nextSnapshot;\n        const nextSelection = selector(nextSnapshot);\n        if (isEqual !== undefined) {\n          // Even if the selector has changed, the currently rendered selection\n          // may be equal to the new selection. We should attempt to reuse the\n          // current value if possible, to preserve downstream memoizations.\n          if (inst.hasValue) {\n            const currentSelection = inst.value;\n            if (isEqual(currentSelection, nextSelection)) {\n              memoizedSelection = currentSelection;\n              return currentSelection;\n            }\n          }\n        }\n        memoizedSelection = nextSelection;\n        return nextSelection;\n      }\n\n      // We may be able to reuse the previous invocation's result.\n      const prevSnapshot: Snapshot = (memoizedSnapshot: any);\n      const prevSelection: Selection = (memoizedSelection: any);\n\n      if (is(prevSnapshot, nextSnapshot)) {\n        // The snapshot is the same as last time. Reuse the previous selection.\n        return prevSelection;\n      }\n\n      // The snapshot has changed, so we need to compute a new selection.\n      const nextSelection = selector(nextSnapshot);\n\n      // If a custom isEqual function is provided, use that to check if the data\n      // has changed. If it hasn't, return the previous selection. That signals\n      // to React that the selections are conceptually equal, and we can bail\n      // out of rendering.\n      if (isEqual !== undefined && isEqual(prevSelection, nextSelection)) {\n        return prevSelection;\n      }\n\n      memoizedSnapshot = nextSnapshot;\n      memoizedSelection = nextSelection;\n      return nextSelection;\n    };\n    // Assigning this to a constant so that Flow knows it can't change.\n    const maybeGetServerSnapshot =\n      getServerSnapshot === undefined ? null : getServerSnapshot;\n    const getSnapshotWithSelector = () => memoizedSelector(getSnapshot());\n    const getServerSnapshotWithSelector =\n      maybeGetServerSnapshot === null\n        ? undefined\n        : () => memoizedSelector(maybeGetServerSnapshot());\n    return [getSnapshotWithSelector, getServerSnapshotWithSelector];\n  }, [getSnapshot, getServerSnapshot, selector, isEqual]);\n\n  const value = useSyncExternalStore(\n    subscribe,\n    getSelection,\n    getServerSelection,\n  );\n\n  useEffect(() => {\n    inst.hasValue = true;\n    inst.value = value;\n  }, [value]);\n\n  useDebugValue(value);\n  return value;\n}\n"],"names":["is","x","y","objectIs","Object","useSyncExternalStore","React","useRef","useEffect","useMemo","useDebugValue","useSyncExternalStoreWithSelector","subscribe","getSnapshot","getServerSnapshot","selector","isEqual","instRef","inst","current","hasValue","value","hasMemo","memoizedSnapshot","memoizedSelection","memoizedSelector","nextSnapshot","nextSelection","undefined","currentSelection","prevSnapshot","prevSelection","maybeGetServerSnapshot","getSnapshotWithSelector","getServerSnapshotWithSelector","getSelection","getServerSelection"],"mappings":"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"}