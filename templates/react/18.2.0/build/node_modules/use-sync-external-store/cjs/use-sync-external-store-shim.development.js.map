{"version":3,"file":"use-sync-external-store-shim.development.js","sources":["../../../../packages/shared/ReactSharedInternals.js","../../../../packages/shared/consoleWithStackDev.js","../../../../packages/shared/objectIs.js","../../../../packages/use-sync-external-store/src/useSyncExternalStoreShimClient.js","../../../../packages/use-sync-external-store/src/useSyncExternalStoreShimServer.js","../../../../packages/shared/ExecutionEnvironment.js","../../../../packages/use-sync-external-store/src/isServerEnvironment.js","../../../../packages/use-sync-external-store/src/useSyncExternalStoreShim.js"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport * as React from 'react';\n\nconst ReactSharedInternals =\n  React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n\nexport default ReactSharedInternals;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\n\nlet suppressWarning = false;\nexport function setSuppressWarning(newSuppressWarning) {\n  if (__DEV__) {\n    suppressWarning = newSuppressWarning;\n  }\n}\n\n// In DEV, calls to console.warn and console.error get replaced\n// by calls to these methods by a Babel plugin.\n//\n// In PROD (or in packages without access to React internals),\n// they are left as they are instead.\n\nexport function warn(format, ...args) {\n  if (__DEV__) {\n    if (!suppressWarning) {\n      printWarning('warn', format, args);\n    }\n  }\n}\n\nexport function error(format, ...args) {\n  if (__DEV__) {\n    if (!suppressWarning) {\n      printWarning('error', format, args);\n    }\n  }\n}\n\nfunction printWarning(level, format, args) {\n  // When changing this logic, you might want to also\n  // update consoleWithStackDev.www.js as well.\n  if (__DEV__) {\n    const ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    const stack = ReactDebugCurrentFrame.getStackAddendum();\n    if (stack !== '') {\n      format += '%s';\n      args = args.concat([stack]);\n    }\n\n    // eslint-disable-next-line react-internal/safe-string-coercion\n    const argsWithFormat = args.map(item => String(item));\n    // Careful: RN currently depends on this prefix\n    argsWithFormat.unshift('Warning: ' + format);\n    // We intentionally don't use spread (or .apply) directly because it\n    // breaks IE9: https://github.com/facebook/react/issues/13610\n    // eslint-disable-next-line react-internal/no-production-logging\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\n/**\n * inlined Object.is polyfill to avoid requiring consumers ship their own\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n */\nfunction is(x: any, y: any) {\n  return (\n    (x === y && (x !== 0 || 1 / x === 1 / y)) || (x !== x && y !== y) // eslint-disable-line no-self-compare\n  );\n}\n\nconst objectIs: (x: any, y: any) => boolean =\n  typeof Object.is === 'function' ? Object.is : is;\n\nexport default objectIs;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport * as React from 'react';\nimport is from 'shared/objectIs';\n\n// Intentionally not using named imports because Rollup uses dynamic\n// dispatch for CommonJS interop named imports.\nconst {useState, useEffect, useLayoutEffect, useDebugValue} = React;\n\nlet didWarnOld18Alpha = false;\nlet didWarnUncachedGetSnapshot = false;\n\n// Disclaimer: This shim breaks many of the rules of React, and only works\n// because of a very particular set of implementation details and assumptions\n// -- change any one of them and it will break. The most important assumption\n// is that updates are always synchronous, because concurrent rendering is\n// only available in versions of React that also have a built-in\n// useSyncExternalStore API. And we only use this shim when the built-in API\n// does not exist.\n//\n// Do not assume that the clever hacks used by this hook also work in general.\n// The point of this shim is to replace the need for hacks by other libraries.\nexport function useSyncExternalStore<T>(\n  subscribe: (() => void) => () => void,\n  getSnapshot: () => T,\n  // Note: The shim does not use getServerSnapshot, because pre-18 versions of\n  // React do not expose a way to check if we're hydrating. So users of the shim\n  // will need to track that themselves and return the correct value\n  // from `getSnapshot`.\n  getServerSnapshot?: () => T,\n): T {\n  if (__DEV__) {\n    if (!didWarnOld18Alpha) {\n      if (React.startTransition !== undefined) {\n        didWarnOld18Alpha = true;\n        console.error(\n          'You are using an outdated, pre-release alpha of React 18 that ' +\n            'does not support useSyncExternalStore. The ' +\n            'use-sync-external-store shim will not work correctly. Upgrade ' +\n            'to a newer pre-release.',\n        );\n      }\n    }\n  }\n\n  // Read the current snapshot from the store on every render. Again, this\n  // breaks the rules of React, and only works here because of specific\n  // implementation details, most importantly that updates are\n  // always synchronous.\n  const value = getSnapshot();\n  if (__DEV__) {\n    if (!didWarnUncachedGetSnapshot) {\n      const cachedValue = getSnapshot();\n      if (!is(value, cachedValue)) {\n        console.error(\n          'The result of getSnapshot should be cached to avoid an infinite loop',\n        );\n        didWarnUncachedGetSnapshot = true;\n      }\n    }\n  }\n\n  // Because updates are synchronous, we don't queue them. Instead we force a\n  // re-render whenever the subscribed state changes by updating an some\n  // arbitrary useState hook. Then, during render, we call getSnapshot to read\n  // the current value.\n  //\n  // Because we don't actually use the state returned by the useState hook, we\n  // can save a bit of memory by storing other stuff in that slot.\n  //\n  // To implement the early bailout, we need to track some things on a mutable\n  // object. Usually, we would put that in a useRef hook, but we can stash it in\n  // our useState hook instead.\n  //\n  // To force a re-render, we call forceUpdate({inst}). That works because the\n  // new object always fails an equality check.\n  const [{inst}, forceUpdate] = useState({inst: {value, getSnapshot}});\n\n  // Track the latest getSnapshot function with a ref. This needs to be updated\n  // in the layout phase so we can access it during the tearing check that\n  // happens on subscribe.\n  useLayoutEffect(() => {\n    inst.value = value;\n    inst.getSnapshot = getSnapshot;\n\n    // Whenever getSnapshot or subscribe changes, we need to check in the\n    // commit phase if there was an interleaved mutation. In concurrent mode\n    // this can happen all the time, but even in synchronous mode, an earlier\n    // effect may have mutated the store.\n    if (checkIfSnapshotChanged(inst)) {\n      // Force a re-render.\n      forceUpdate({inst});\n    }\n  }, [subscribe, value, getSnapshot]);\n\n  useEffect(() => {\n    // Check for changes right before subscribing. Subsequent changes will be\n    // detected in the subscription handler.\n    if (checkIfSnapshotChanged(inst)) {\n      // Force a re-render.\n      forceUpdate({inst});\n    }\n    const handleStoreChange = () => {\n      // TODO: Because there is no cross-renderer API for batching updates, it's\n      // up to the consumer of this library to wrap their subscription event\n      // with unstable_batchedUpdates. Should we try to detect when this isn't\n      // the case and print a warning in development?\n\n      // The store changed. Check if the snapshot changed since the last time we\n      // read from the store.\n      if (checkIfSnapshotChanged(inst)) {\n        // Force a re-render.\n        forceUpdate({inst});\n      }\n    };\n    // Subscribe to the store and return a clean-up function.\n    return subscribe(handleStoreChange);\n  }, [subscribe]);\n\n  useDebugValue(value);\n  return value;\n}\n\nfunction checkIfSnapshotChanged(inst) {\n  const latestGetSnapshot = inst.getSnapshot;\n  const prevValue = inst.value;\n  try {\n    const nextValue = latestGetSnapshot();\n    return !is(prevValue, nextValue);\n  } catch (error) {\n    return true;\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nexport function useSyncExternalStore<T>(\n  subscribe: (() => void) => () => void,\n  getSnapshot: () => T,\n  getServerSnapshot?: () => T,\n): T {\n  // Note: The shim does not use getServerSnapshot, because pre-18 versions of\n  // React do not expose a way to check if we're hydrating. So users of the shim\n  // will need to track that themselves and return the correct value\n  // from `getSnapshot`.\n  return getSnapshot();\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nexport const canUseDOM: boolean = !!(\n  typeof window !== 'undefined' &&\n  typeof window.document !== 'undefined' &&\n  typeof window.document.createElement !== 'undefined'\n);\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport {canUseDOM} from 'shared/ExecutionEnvironment';\n\nexport const isServerEnvironment = !canUseDOM;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport {useSyncExternalStore as client} from './useSyncExternalStoreShimClient';\nimport {useSyncExternalStore as server} from './useSyncExternalStoreShimServer';\nimport {isServerEnvironment} from './isServerEnvironment';\nimport {useSyncExternalStore as builtInAPI} from 'react';\n\nconst shim = isServerEnvironment ? server : client;\n\nexport const useSyncExternalStore =\n  builtInAPI !== undefined ? ((builtInAPI: any): typeof shim) : shim;\n"],"names":["ReactSharedInternals","React","error","format","args","printWarning","level","ReactDebugCurrentFrame","stack","getStackAddendum","concat","argsWithFormat","map","item","String","unshift","Function","prototype","apply","call","console","is","x","y","objectIs","Object","useState","useEffect","useLayoutEffect","useDebugValue","didWarnOld18Alpha","didWarnUncachedGetSnapshot","useSyncExternalStore","subscribe","getSnapshot","getServerSnapshot","undefined","value","cachedValue","inst","forceUpdate","checkIfSnapshotChanged","handleStoreChange","latestGetSnapshot","prevValue","nextValue","canUseDOM","window","document","createElement","isServerEnvironment","shim","server","client","builtInAPI"],"mappings":"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"}