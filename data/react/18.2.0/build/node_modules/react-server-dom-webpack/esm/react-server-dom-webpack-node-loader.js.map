{"version":3,"file":"react-server-dom-webpack-node-loader.js","sources":["../../../../packages/shared/ReactSharedInternals.js","../../../../packages/shared/consoleWithStackDev.js","../../../../packages/shared/assign.js","../../../../packages/react-server-dom-webpack/src/ReactFlightWebpackNodeLoader.js"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport * as React from 'react';\n\nconst ReactSharedInternals =\n  React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n\nexport default ReactSharedInternals;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\n\nlet suppressWarning = false;\nexport function setSuppressWarning(newSuppressWarning) {\n  if (__DEV__) {\n    suppressWarning = newSuppressWarning;\n  }\n}\n\n// In DEV, calls to console.warn and console.error get replaced\n// by calls to these methods by a Babel plugin.\n//\n// In PROD (or in packages without access to React internals),\n// they are left as they are instead.\n\nexport function warn(format, ...args) {\n  if (__DEV__) {\n    if (!suppressWarning) {\n      printWarning('warn', format, args);\n    }\n  }\n}\n\nexport function error(format, ...args) {\n  if (__DEV__) {\n    if (!suppressWarning) {\n      printWarning('error', format, args);\n    }\n  }\n}\n\nfunction printWarning(level, format, args) {\n  // When changing this logic, you might want to also\n  // update consoleWithStackDev.www.js as well.\n  if (__DEV__) {\n    const ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    const stack = ReactDebugCurrentFrame.getStackAddendum();\n    if (stack !== '') {\n      format += '%s';\n      args = args.concat([stack]);\n    }\n\n    // eslint-disable-next-line react-internal/safe-string-coercion\n    const argsWithFormat = args.map(item => String(item));\n    // Careful: RN currently depends on this prefix\n    argsWithFormat.unshift('Warning: ' + format);\n    // We intentionally don't use spread (or .apply) directly because it\n    // breaks IE9: https://github.com/facebook/react/issues/13610\n    // eslint-disable-next-line react-internal/no-production-logging\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nconst assign = Object.assign;\n\nexport default assign;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport acorn from 'acorn';\n\ntype ResolveContext = {\n  conditions: Array<string>,\n  parentURL: string | void,\n};\n\ntype ResolveFunction = (\n  string,\n  ResolveContext,\n  ResolveFunction,\n) => {url: string} | Promise<{url: string}>;\n\ntype GetSourceContext = {\n  format: string,\n};\n\ntype GetSourceFunction = (\n  string,\n  GetSourceContext,\n  GetSourceFunction,\n) => Promise<{source: Source}>;\n\ntype TransformSourceContext = {\n  format: string,\n  url: string,\n};\n\ntype TransformSourceFunction = (\n  Source,\n  TransformSourceContext,\n  TransformSourceFunction,\n) => Promise<{source: Source}>;\n\ntype Source = string | ArrayBuffer | Uint8Array;\n\nlet warnedAboutConditionsFlag = false;\n\nlet stashedGetSource: null | GetSourceFunction = null;\nlet stashedResolve: null | ResolveFunction = null;\n\nexport async function resolve(\n  specifier: string,\n  context: ResolveContext,\n  defaultResolve: ResolveFunction,\n): Promise<{url: string}> {\n  // We stash this in case we end up needing to resolve export * statements later.\n  stashedResolve = defaultResolve;\n\n  if (!context.conditions.includes('react-server')) {\n    context = {\n      ...context,\n      conditions: [...context.conditions, 'react-server'],\n    };\n    if (!warnedAboutConditionsFlag) {\n      warnedAboutConditionsFlag = true;\n      // eslint-disable-next-line react-internal/no-production-logging\n      console.warn(\n        'You did not run Node.js with the `--conditions react-server` flag. ' +\n          'Any \"react-server\" override will only work with ESM imports.',\n      );\n    }\n  }\n  const resolved = await defaultResolve(specifier, context, defaultResolve);\n  if (resolved.url.endsWith('.server.js')) {\n    const parentURL = context.parentURL;\n    if (parentURL && !parentURL.endsWith('.server.js')) {\n      let reason;\n      if (specifier.endsWith('.server.js')) {\n        reason = `\"${specifier}\"`;\n      } else {\n        reason = `\"${specifier}\" (which expands to \"${resolved.url}\")`;\n      }\n      throw new Error(\n        `Cannot import ${reason} from \"${parentURL}\". ` +\n          'By react-server convention, .server.js files can only be imported from other .server.js files. ' +\n          'That way nobody accidentally sends these to the client by indirectly importing it.',\n      );\n    }\n  }\n  return resolved;\n}\n\nexport async function getSource(\n  url: string,\n  context: GetSourceContext,\n  defaultGetSource: GetSourceFunction,\n) {\n  // We stash this in case we end up needing to resolve export * statements later.\n  stashedGetSource = defaultGetSource;\n  return defaultGetSource(url, context, defaultGetSource);\n}\n\nfunction addExportNames(names, node) {\n  switch (node.type) {\n    case 'Identifier':\n      names.push(node.name);\n      return;\n    case 'ObjectPattern':\n      for (let i = 0; i < node.properties.length; i++)\n        addExportNames(names, node.properties[i]);\n      return;\n    case 'ArrayPattern':\n      for (let i = 0; i < node.elements.length; i++) {\n        const element = node.elements[i];\n        if (element) addExportNames(names, element);\n      }\n      return;\n    case 'Property':\n      addExportNames(names, node.value);\n      return;\n    case 'AssignmentPattern':\n      addExportNames(names, node.left);\n      return;\n    case 'RestElement':\n      addExportNames(names, node.argument);\n      return;\n    case 'ParenthesizedExpression':\n      addExportNames(names, node.expression);\n      return;\n  }\n}\n\nfunction resolveClientImport(\n  specifier: string,\n  parentURL: string,\n): {url: string} | Promise<{url: string}> {\n  // Resolve an import specifier as if it was loaded by the client. This doesn't use\n  // the overrides that this loader does but instead reverts to the default.\n  // This resolution algorithm will not necessarily have the same configuration\n  // as the actual client loader. It should mostly work and if it doesn't you can\n  // always convert to explicit exported names instead.\n  const conditions = ['node', 'import'];\n  if (stashedResolve === null) {\n    throw new Error(\n      'Expected resolve to have been called before transformSource',\n    );\n  }\n  return stashedResolve(specifier, {conditions, parentURL}, stashedResolve);\n}\n\nasync function loadClientImport(\n  url: string,\n  defaultTransformSource: TransformSourceFunction,\n): Promise<{source: Source}> {\n  if (stashedGetSource === null) {\n    throw new Error(\n      'Expected getSource to have been called before transformSource',\n    );\n  }\n  // TODO: Validate that this is another module by calling getFormat.\n  const {source} = await stashedGetSource(\n    url,\n    {format: 'module'},\n    stashedGetSource,\n  );\n  return defaultTransformSource(\n    source,\n    {format: 'module', url},\n    defaultTransformSource,\n  );\n}\n\nasync function parseExportNamesInto(\n  transformedSource: string,\n  names: Array<string>,\n  parentURL: string,\n  defaultTransformSource,\n): Promise<void> {\n  const {body} = acorn.parse(transformedSource, {\n    ecmaVersion: '2019',\n    sourceType: 'module',\n  });\n  for (let i = 0; i < body.length; i++) {\n    const node = body[i];\n    switch (node.type) {\n      case 'ExportAllDeclaration':\n        if (node.exported) {\n          addExportNames(names, node.exported);\n          continue;\n        } else {\n          const {url} = await resolveClientImport(node.source.value, parentURL);\n          const {source} = await loadClientImport(url, defaultTransformSource);\n          if (typeof source !== 'string') {\n            throw new Error('Expected the transformed source to be a string.');\n          }\n          parseExportNamesInto(source, names, url, defaultTransformSource);\n          continue;\n        }\n      case 'ExportDefaultDeclaration':\n        names.push('default');\n        continue;\n      case 'ExportNamedDeclaration':\n        if (node.declaration) {\n          if (node.declaration.type === 'VariableDeclaration') {\n            const declarations = node.declaration.declarations;\n            for (let j = 0; j < declarations.length; j++) {\n              addExportNames(names, declarations[j].id);\n            }\n          } else {\n            addExportNames(names, node.declaration.id);\n          }\n        }\n        if (node.specifiers) {\n          const specifiers = node.specifiers;\n          for (let j = 0; j < specifiers.length; j++) {\n            addExportNames(names, specifiers[j].exported);\n          }\n        }\n        continue;\n    }\n  }\n}\n\nexport async function transformSource(\n  source: Source,\n  context: TransformSourceContext,\n  defaultTransformSource: TransformSourceFunction,\n): Promise<{source: Source}> {\n  const transformed = await defaultTransformSource(\n    source,\n    context,\n    defaultTransformSource,\n  );\n  if (context.format === 'module' && context.url.endsWith('.client.js')) {\n    const transformedSource = transformed.source;\n    if (typeof transformedSource !== 'string') {\n      throw new Error('Expected source to have been transformed to a string.');\n    }\n\n    const names = [];\n    await parseExportNamesInto(\n      transformedSource,\n      names,\n      context.url,\n      defaultTransformSource,\n    );\n\n    let newSrc =\n      \"const MODULE_REFERENCE = Symbol.for('react.module.reference');\\n\";\n    for (let i = 0; i < names.length; i++) {\n      const name = names[i];\n      if (name === 'default') {\n        newSrc += 'export default ';\n      } else {\n        newSrc += 'export const ' + name + ' = ';\n      }\n      newSrc += '{ $$typeof: MODULE_REFERENCE, filepath: ';\n      newSrc += JSON.stringify(context.url);\n      newSrc += ', name: ';\n      newSrc += JSON.stringify(name);\n      newSrc += '};\\n';\n    }\n\n    return {source: newSrc};\n  }\n  return transformed;\n}\n"],"names":["ReactSharedInternals","React","warn","format","args","printWarning","level","ReactDebugCurrentFrame","stack","getStackAddendum","concat","argsWithFormat","map","item","String","unshift","Function","prototype","apply","call","console","assign","Object","warnedAboutConditionsFlag","stashedGetSource","stashedResolve","resolve","specifier","context","defaultResolve","conditions","includes","resolved","url","endsWith","parentURL","reason","Error","getSource","defaultGetSource","addExportNames","names","node","type","push","name","i","properties","length","elements","element","value","left","argument","expression","resolveClientImport","loadClientImport","defaultTransformSource","source","parseExportNamesInto","transformedSource","acorn","parse","ecmaVersion","sourceType","body","exported","declaration","declarations","j","id","specifiers","transformSource","transformed","newSrc","JSON","stringify"],"mappings":"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"}