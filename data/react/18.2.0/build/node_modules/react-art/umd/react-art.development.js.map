{"version":3,"file":"react-art.development.js","sources":["../../../../packages/shared/ReactVersion.js","../../../../packages/react-reconciler/src/ReactRootTags.js","../../../../packages/shared/ReactSharedInternals.js","../../../../packages/shared/consoleWithStackDev.js","../../../../packages/shared/assign.js","../../../../packages/shared/ReactInstanceMap.js","../../../../packages/shared/ReactFeatureFlags.js","../../../../packages/react-reconciler/src/ReactWorkTags.js","../../../../packages/shared/ReactSymbols.js","../../../../packages/shared/getComponentNameFromType.js","../../../../packages/react-reconciler/src/getComponentNameFromFiber.js","../../../../packages/react-reconciler/src/ReactFiberFlags.js","../../../../packages/react-reconciler/src/ReactFiberTreeReflection.js","../../../../packages/shared/isArray.js","../../../../node_modules/art/core/class.js","../../../../node_modules/art/core/transform.js","../../../../node_modules/art/modes/current.js","../../../../packages/react-art/src/ReactARTInternals.js","../../../../packages/shared/forks/Scheduler.umd.js","../../../../packages/react-reconciler/src/Scheduler.js","../../../../packages/shared/ConsolePatchingDev.js","../../../../packages/react-reconciler/src/ReactFiberDevToolsHook.old.js","../../../../packages/react-reconciler/src/ReactTypeOfMode.js","../../../../packages/react-reconciler/src/clz32.js","../../../../packages/react-reconciler/src/ReactFiberLane.old.js","../../../../packages/react-reconciler/src/ReactEventPriorities.old.js","../../../../packages/react-reconciler/src/ReactFiberHostConfigWithNoHydration.js","../../../../packages/react-art/src/ReactARTHostConfig.js","../../../../packages/shared/ReactComponentStackFrame.js","../../../../packages/shared/hasOwnProperty.js","../../../../packages/shared/checkPropTypes.js","../../../../packages/react-reconciler/src/ReactFiberStack.old.js","../../../../packages/react-reconciler/src/ReactFiberContext.old.js","../../../../packages/shared/objectIs.js","../../../../packages/react-reconciler/src/ReactFiberSyncTaskQueue.old.js","../../../../packages/react-reconciler/src/ReactFiberShellHydration.js","../../../../packages/react-reconciler/src/ReactFiberTreeContext.old.js","../../../../packages/react-reconciler/src/ReactFiberHydrationContext.old.js","../../../../packages/react-reconciler/src/ReactFiberTransition.js","../../../../packages/shared/shallowEqual.js","../../../../packages/react-reconciler/src/ReactFiberComponentStack.js","../../../../packages/react-reconciler/src/ReactCurrentFiber.js","../../../../packages/react-reconciler/src/ReactStrictModeWarnings.old.js","../../../../packages/shared/CheckStringCoercion.js","../../../../packages/react-reconciler/src/ReactFiberLazyComponent.old.js","../../../../packages/react-reconciler/src/ReactFiberNewContext.old.js","../../../../packages/react-reconciler/src/ReactFiberConcurrentUpdates.old.js","../../../../packages/react-reconciler/src/ReactFiberClassUpdateQueue.old.js","../../../../packages/react-reconciler/src/ReactFiberClassComponent.old.js","../../../../packages/react-reconciler/src/ReactChildFiber.old.js","../../../../packages/react-reconciler/src/ReactFiberHostContext.old.js","../../../../packages/react-reconciler/src/ReactFiberSuspenseContext.old.js","../../../../packages/react-reconciler/src/ReactFiberSuspenseComponent.old.js","../../../../packages/react-reconciler/src/ReactHookEffectTags.js","../../../../packages/react-reconciler/src/ReactMutableSource.old.js","../../../../packages/react-reconciler/src/ReactFiberCacheComponent.old.js","../../../../packages/react-reconciler/src/ReactFiberHooks.old.js","../../../../packages/react-reconciler/src/ReactProfilerTimer.old.js","../../../../packages/react-reconciler/src/ReactCapturedValue.js","../../../../packages/react-reconciler/src/ReactFiberErrorDialog.js","../../../../packages/react-reconciler/src/ReactFiberErrorLogger.js","../../../../packages/react-reconciler/src/ReactFiberThrow.old.js","../../../../packages/react-reconciler/src/ReactFiberTransition.old.js","../../../../packages/react-reconciler/src/ReactFiberBeginWork.old.js","../../../../packages/react-reconciler/src/ReactFiberCompleteWork.old.js","../../../../packages/react-reconciler/src/ReactFiberUnwindWork.old.js","../../../../packages/shared/invokeGuardedCallbackImpl.js","../../../../packages/shared/ReactErrorUtils.js","../../../../packages/react-reconciler/src/ReactFiberCommitWork.old.js","../../../../packages/react-reconciler/src/ReactTestSelectors.js","../../../../packages/react-reconciler/src/ReactFiberAct.old.js","../../../../packages/react-reconciler/src/ReactFiberWorkLoop.old.js","../../../../packages/react-reconciler/src/ReactFiberHotReloading.old.js","../../../../packages/react-reconciler/src/ReactFiber.old.js","../../../../packages/react-reconciler/src/ReactFiberRoot.old.js","../../../../packages/react-reconciler/src/ReactFiberReconciler.old.js","../../../../node_modules/art/dom/container.js","../../../../node_modules/art/dom/native.js","../../../../node_modules/art/modes/canvas/surface.js","../../../../node_modules/art/core/path.js","../../../../node_modules/art/modes/canvas/path.js","../../../../node_modules/art/core/color.js","../../../../node_modules/art/dom/dummy.js","../../../../node_modules/art/modes/canvas/node.js","../../../../node_modules/art/modes/canvas/base.js","../../../../node_modules/art/modes/canvas/shape.js","../../../../node_modules/art/modes/canvas/group.js","../../../../node_modules/art/modes/canvas/clippingrectangle.js","../../../../node_modules/art/modes/canvas/text.js","../../../../node_modules/art/modes/vml/dom.js","../../../../node_modules/art/modes/vml/surface.js","../../../../node_modules/art/modes/vml/path.js","../../../../node_modules/art/dom/shadow.js","../../../../node_modules/art/modes/vml/node.js","../../../../node_modules/art/modes/vml/base.js","../../../../node_modules/art/modes/vml/shape.js","../../../../node_modules/art/modes/vml/group.js","../../../../node_modules/art/modes/vml/clippingrectangle.js","../../../../node_modules/art/modes/vml/text.js","../../../../node_modules/art/modes/fast-noSideEffects.js","../../../../packages/react-art/src/ReactART.js"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// TODO: this is special because it gets imported during build.\n//\n// TODO: 18.0.0 has not been released to NPM;\n// It exists as a placeholder so that DevTools can support work tag changes between releases.\n// When we next publish a release, update the matching TODO in backend/renderer.js\n// TODO: This module is used both by the release scripts and to expose a version\n// at runtime. We should instead inject the version number as part of the build\n// process, and use the ReactVersions.js module as the single source of truth.\nexport default '18.1.0';\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nexport type RootTag = 0 | 1;\n\nexport const LegacyRoot = 0;\nexport const ConcurrentRoot = 1;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport * as React from 'react';\n\nconst ReactSharedInternals =\n  React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n\nexport default ReactSharedInternals;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\n\nlet suppressWarning = false;\nexport function setSuppressWarning(newSuppressWarning) {\n  if (__DEV__) {\n    suppressWarning = newSuppressWarning;\n  }\n}\n\n// In DEV, calls to console.warn and console.error get replaced\n// by calls to these methods by a Babel plugin.\n//\n// In PROD (or in packages without access to React internals),\n// they are left as they are instead.\n\nexport function warn(format, ...args) {\n  if (__DEV__) {\n    if (!suppressWarning) {\n      printWarning('warn', format, args);\n    }\n  }\n}\n\nexport function error(format, ...args) {\n  if (__DEV__) {\n    if (!suppressWarning) {\n      printWarning('error', format, args);\n    }\n  }\n}\n\nfunction printWarning(level, format, args) {\n  // When changing this logic, you might want to also\n  // update consoleWithStackDev.www.js as well.\n  if (__DEV__) {\n    const ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    const stack = ReactDebugCurrentFrame.getStackAddendum();\n    if (stack !== '') {\n      format += '%s';\n      args = args.concat([stack]);\n    }\n\n    // eslint-disable-next-line react-internal/safe-string-coercion\n    const argsWithFormat = args.map(item => String(item));\n    // Careful: RN currently depends on this prefix\n    argsWithFormat.unshift('Warning: ' + format);\n    // We intentionally don't use spread (or .apply) directly because it\n    // breaks IE9: https://github.com/facebook/react/issues/13610\n    // eslint-disable-next-line react-internal/no-production-logging\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nconst assign = Object.assign;\n\nexport default assign;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/**\n * `ReactInstanceMap` maintains a mapping from a public facing stateful\n * instance (key) and the internal representation (value). This allows public\n * methods to accept the user facing instance as an argument and map them back\n * to internal methods.\n *\n * Note that this module is currently shared and assumed to be stateless.\n * If this becomes an actual Map, that will break.\n */\n\n/**\n * This API should be called `delete` but we'd have to make sure to always\n * transform these to strings for IE support. When this transform is fully\n * supported we can rename it.\n */\nexport function remove(key) {\n  key._reactInternals = undefined;\n}\n\nexport function get(key) {\n  return key._reactInternals;\n}\n\nexport function has(key) {\n  return key._reactInternals !== undefined;\n}\n\nexport function set(key, value) {\n  key._reactInternals = value;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n */\n\n// -----------------------------------------------------------------------------\n// Land or remove (zero effort)\n//\n// Flags that can likely be deleted or landed without consequences\n// -----------------------------------------------------------------------------\n\nexport const warnAboutDeprecatedLifecycles = true;\nexport const enableComponentStackLocations = true;\nexport const disableSchedulerTimeoutBasedOnReactExpirationTime = false;\n\n// -----------------------------------------------------------------------------\n// Land or remove (moderate effort)\n//\n// Flags that can be probably deleted or landed, but might require extra effort\n// like migrating internal callers or performance testing.\n// -----------------------------------------------------------------------------\n\n// This is blocked on adding a symbol polyfill to www.\nexport const enableSymbolFallbackForWWW = false;\n\n// This rolled out to 10% public in www, so we should be able to land, but some\n// internal tests need to be updated. The open source behavior is correct.\nexport const skipUnmountedBoundaries = true;\n\n// Destroy layout effects for components that are hidden because something\n// suspended in an update and recreate them when they are shown again (after the\n// suspended boundary has resolved). Note that this should be an uncommon use\n// case and can be avoided by using the transition API.\n//\n// TODO: Finish rolling out in www\nexport const enableSuspenseLayoutEffectSemantics = true;\n\n// TODO: Finish rolling out in www\nexport const enableClientRenderFallbackOnTextMismatch = true;\n\n// TODO: Need to review this code one more time before landing\nexport const enableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay = true;\n\n// Recoil still uses useMutableSource in www, need to delete\nexport const enableUseMutableSource = false;\n\n// Not sure if www still uses this. We don't have a replacement but whatever we\n// replace it with will likely be different than what's already there, so we\n// probably should just delete it as long as nothing in www relies on it.\nexport const enableSchedulerDebugging = false;\n\n// Need to remove didTimeout argument from Scheduler before landing\nexport const disableSchedulerTimeoutInWorkLoop = false;\n\n// -----------------------------------------------------------------------------\n// Slated for removal in the future (significant effort)\n//\n// These are experiments that didn't work out, and never shipped, but we can't\n// delete from the codebase until we migrate internal callers.\n// -----------------------------------------------------------------------------\n\n// Add a callback property to suspense to notify which promises are currently\n// in the update queue. This allows reporting and tracing of what is causing\n// the user to see a loading state.\n//\n// Also allows hydration callbacks to fire when a dehydrated boundary gets\n// hydrated or deleted.\n//\n// This will eventually be replaced by the Transition Tracing proposal.\nexport const enableSuspenseCallback = false;\n\n// Experimental Scope support.\nexport const enableScopeAPI = false;\n\n// Experimental Create Event Handle API.\nexport const enableCreateEventHandleAPI = false;\n\n// This controls whether you get the `.old` modules or the `.new` modules in\n// the react-reconciler package.\nexport const enableNewReconciler = false;\n\n// Support legacy Primer support on internal FB www\nexport const enableLegacyFBSupport = false;\n\n// -----------------------------------------------------------------------------\n// Ongoing experiments\n//\n// These are features that we're either actively exploring or are reasonably\n// likely to include in an upcoming release.\n// -----------------------------------------------------------------------------\n\nexport const enableCache = __EXPERIMENTAL__;\nexport const enableCacheElement = __EXPERIMENTAL__;\n\nexport const enableTransitionTracing = false;\n\n// No known bugs, but needs performance testing\nexport const enableLazyContextPropagation = false;\n\n// FB-only usage. The new API has different semantics.\nexport const enableLegacyHidden = false;\n\n// Enables unstable_avoidThisFallback feature in Fiber\nexport const enableSuspenseAvoidThisFallback = false;\n// Enables unstable_avoidThisFallback feature in Fizz\nexport const enableSuspenseAvoidThisFallbackFizz = false;\n\nexport const enableCPUSuspense = __EXPERIMENTAL__;\n\n// When a node is unmounted, recurse into the Fiber subtree and clean out\n// references. Each level cleans up more fiber fields than the previous level.\n// As far as we know, React itself doesn't leak, but because the Fiber contains\n// cycles, even a single leak in product code can cause us to retain large\n// amounts of memory.\n//\n// The long term plan is to remove the cycles, but in the meantime, we clear\n// additional fields to mitigate.\n//\n// It's an enum so that we can experiment with different levels of\n// aggressiveness.\nexport const deletedTreeCleanUpLevel = 3;\n\n// -----------------------------------------------------------------------------\n// Chopping Block\n//\n// Planned feature deprecations and breaking changes. Sorted roughly in order of\n// when we we plan to enable them.\n// -----------------------------------------------------------------------------\n\n// This flag enables Strict Effects by default. We're not turning this on until\n// after 18 because it requires migration work. Recommendation is to use\n// <StrictMode /> to gradually upgrade components.\n// If TRUE, trees rendered with createRoot will be StrictEffectsMode.\n// If FALSE, these trees will be StrictLegacyMode.\nexport const createRootStrictEffectsByDefault = false;\n\nexport const disableModulePatternComponents = false;\n\nexport const disableLegacyContext = false;\n\nexport const enableUseRefAccessWarning = false;\n\n// Enables time slicing for updates that aren't wrapped in startTransition.\nexport const enableSyncDefaultUpdates = true;\n\n// Adds an opt-in to time slicing for updates that aren't wrapped in\n// startTransition. Only relevant when enableSyncDefaultUpdates is disabled.\nexport const allowConcurrentByDefault = false;\n\n// Updates that occur in the render phase are not officially supported. But when\n// they do occur, we defer them to a subsequent render by picking a lane that's\n// not currently rendering. We treat them the same as if they came from an\n// interleaved event. Remove this flag once we have migrated to the\n// new behavior.\n// NOTE: Not sure if we'll end up doing this or not.\nexport const deferRenderPhaseUpdateToNextBatch = false;\n\n// -----------------------------------------------------------------------------\n// React DOM Chopping Block\n//\n// Similar to main Chopping Block but only flags related to React DOM. These are\n// grouped because we will likely batch all of them into a single major release.\n// -----------------------------------------------------------------------------\n\n// Disable support for comment nodes as React DOM containers. Already disabled\n// in open source, but www codebase still relies on it. Need to remove.\nexport const disableCommentsAsDOMContainers = true;\n\n// Disable javascript: URL strings in href for XSS protection.\nexport const disableJavaScriptURLs = false;\n\nexport const enableTrustedTypesIntegration = false;\n\n// Prevent the value and checked attributes from syncing with their related\n// DOM properties\nexport const disableInputAttributeSyncing = false;\n\n// Filter certain DOM attributes (e.g. src, href) if their values are empty\n// strings. This prevents e.g. <img src=\"\"> from making an unnecessary HTTP\n// request for certain browsers.\nexport const enableFilterEmptyStringAttributesDOM = false;\n\n// Changes the behavior for rendering custom elements in both server rendering\n// and client rendering, mostly to allow JSX attributes to apply to the custom\n// element's object properties instead of only HTML attributes.\n// https://github.com/facebook/react/issues/11347\nexport const enableCustomElementPropertySupport = __EXPERIMENTAL__;\n\n// Disables children for <textarea> elements\nexport const disableTextareaChildren = false;\n\n// -----------------------------------------------------------------------------\n// JSX Chopping Block\n//\n// Similar to main Chopping Block but only flags related to JSX. These are\n// grouped because we will likely batch all of them into a single major release.\n// -----------------------------------------------------------------------------\n\n// New API for JSX transforms to target - https://github.com/reactjs/rfcs/pull/107\n\n// Part of the simplification of React.createElement so we can eventually move\n// from React.createElement to React.jsx\n// https://github.com/reactjs/rfcs/blob/createlement-rfc/text/0000-create-element-changes.md\nexport const warnAboutDefaultPropsOnFunctionComponents = false; // deprecate later, not 18.0\n\n// Enables a warning when trying to spread a 'key' to an element;\n// a deprecated pattern we want to get rid of in the future\nexport const warnAboutSpreadingKeyToJSX = false;\n\nexport const warnAboutStringRefs = false;\n\n// -----------------------------------------------------------------------------\n// Debugging and DevTools\n// -----------------------------------------------------------------------------\n\n// Adds user timing marks for e.g. state updates, suspense, and work loop stuff,\n// for an experimental timeline tool.\nexport const enableSchedulingProfiler = __PROFILE__;\n\n// Helps identify side effects in render-phase lifecycle hooks and setState\n// reducers by double invoking them in StrictLegacyMode.\nexport const debugRenderPhaseSideEffectsForStrictMode = __DEV__;\n\n// Helps identify code that is not safe for planned Offscreen API and Suspense semantics;\n// this feature flag only impacts StrictEffectsMode.\nexport const enableStrictEffects = __DEV__;\n\n// To preserve the \"Pause on caught exceptions\" behavior of the debugger, we\n// replay the begin phase of a failed component inside invokeGuardedCallback.\nexport const replayFailedUnitOfWorkWithInvokeGuardedCallback = __DEV__;\n\n// Gather advanced timing metrics for Profiler subtrees.\nexport const enableProfilerTimer = __PROFILE__;\n\n// Record durations for commit and passive effects phases.\nexport const enableProfilerCommitHooks = __PROFILE__;\n\n// Phase param passed to onRender callback differentiates between an \"update\" and a \"cascading-update\".\nexport const enableProfilerNestedUpdatePhase = __PROFILE__;\n\n// Adds verbose console logging for e.g. state updates, suspense, and work loop\n// stuff. Intended to enable React core members to more easily debug scheduling\n// issues in DEV builds.\nexport const enableDebugTracing = false;\n\n// Track which Fiber(s) schedule render work.\nexport const enableUpdaterTracking = __PROFILE__;\n\n// Only enabled in RN, related to enableComponentStackLocations\nexport const disableNativeComponentFrames = false;\nexport const enableServerContext = __EXPERIMENTAL__;\n\n// Internal only.\nexport const enableGetInspectorDataForInstanceInProduction = false;\n\n// Profiler API accepts a function to be called when a nested update is scheduled.\n// This callback accepts the component type (class instance or function) the update is scheduled for.\nexport const enableProfilerNestedUpdateScheduledHook = false;\n\nexport const consoleManagedByDevToolsDuringStrictMode = true;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nexport type WorkTag =\n  | 0\n  | 1\n  | 2\n  | 3\n  | 4\n  | 5\n  | 6\n  | 7\n  | 8\n  | 9\n  | 10\n  | 11\n  | 12\n  | 13\n  | 14\n  | 15\n  | 16\n  | 17\n  | 18\n  | 19\n  | 20\n  | 21\n  | 22\n  | 23\n  | 24\n  | 25;\n\nexport const FunctionComponent = 0;\nexport const ClassComponent = 1;\nexport const IndeterminateComponent = 2; // Before we know whether it is function or class\nexport const HostRoot = 3; // Root of a host tree. Could be nested inside another node.\nexport const HostPortal = 4; // A subtree. Could be an entry point to a different renderer.\nexport const HostComponent = 5;\nexport const HostText = 6;\nexport const Fragment = 7;\nexport const Mode = 8;\nexport const ContextConsumer = 9;\nexport const ContextProvider = 10;\nexport const ForwardRef = 11;\nexport const Profiler = 12;\nexport const SuspenseComponent = 13;\nexport const MemoComponent = 14;\nexport const SimpleMemoComponent = 15;\nexport const LazyComponent = 16;\nexport const IncompleteClassComponent = 17;\nexport const DehydratedFragment = 18;\nexport const SuspenseListComponent = 19;\nexport const ScopeComponent = 21;\nexport const OffscreenComponent = 22;\nexport const LegacyHiddenComponent = 23;\nexport const CacheComponent = 24;\nexport const TracingMarkerComponent = 25;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\n// ATTENTION\n// When adding new symbols to this file,\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n\n// The Symbol used to tag the ReactElement-like types.\nexport const REACT_ELEMENT_TYPE = Symbol.for('react.element');\nexport const REACT_PORTAL_TYPE = Symbol.for('react.portal');\nexport const REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');\nexport const REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');\nexport const REACT_PROFILER_TYPE = Symbol.for('react.profiler');\nexport const REACT_PROVIDER_TYPE = Symbol.for('react.provider');\nexport const REACT_CONTEXT_TYPE = Symbol.for('react.context');\nexport const REACT_SERVER_CONTEXT_TYPE = Symbol.for('react.server_context');\nexport const REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');\nexport const REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');\nexport const REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');\nexport const REACT_MEMO_TYPE = Symbol.for('react.memo');\nexport const REACT_LAZY_TYPE = Symbol.for('react.lazy');\nexport const REACT_SCOPE_TYPE = Symbol.for('react.scope');\nexport const REACT_DEBUG_TRACING_MODE_TYPE = Symbol.for(\n  'react.debug_trace_mode',\n);\nexport const REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');\nexport const REACT_LEGACY_HIDDEN_TYPE = Symbol.for('react.legacy_hidden');\nexport const REACT_CACHE_TYPE = Symbol.for('react.cache');\nexport const REACT_TRACING_MARKER_TYPE = Symbol.for('react.tracing_marker');\nexport const REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED = Symbol.for(\n  'react.default_value',\n);\n\nconst MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nconst FAUX_ITERATOR_SYMBOL = '@@iterator';\n\nexport function getIteratorFn(maybeIterable: ?any): ?() => ?Iterator<*> {\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\n    return null;\n  }\n  const maybeIterator =\n    (MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL]) ||\n    maybeIterable[FAUX_ITERATOR_SYMBOL];\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n  return null;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {LazyComponent} from 'react/src/ReactLazy';\nimport type {ReactContext, ReactProviderType} from 'shared/ReactTypes';\n\nimport {\n  REACT_CONTEXT_TYPE,\n  REACT_FORWARD_REF_TYPE,\n  REACT_FRAGMENT_TYPE,\n  REACT_PORTAL_TYPE,\n  REACT_MEMO_TYPE,\n  REACT_PROFILER_TYPE,\n  REACT_PROVIDER_TYPE,\n  REACT_STRICT_MODE_TYPE,\n  REACT_SUSPENSE_TYPE,\n  REACT_SUSPENSE_LIST_TYPE,\n  REACT_LAZY_TYPE,\n  REACT_CACHE_TYPE,\n  REACT_TRACING_MARKER_TYPE,\n  REACT_SERVER_CONTEXT_TYPE,\n} from 'shared/ReactSymbols';\n\nimport {\n  enableServerContext,\n  enableTransitionTracing,\n  enableCache,\n} from './ReactFeatureFlags';\n\n// Keep in sync with react-reconciler/getComponentNameFromFiber\nfunction getWrappedName(\n  outerType: mixed,\n  innerType: any,\n  wrapperName: string,\n): string {\n  const displayName = (outerType: any).displayName;\n  if (displayName) {\n    return displayName;\n  }\n  const functionName = innerType.displayName || innerType.name || '';\n  return functionName !== '' ? `${wrapperName}(${functionName})` : wrapperName;\n}\n\n// Keep in sync with react-reconciler/getComponentNameFromFiber\nfunction getContextName(type: ReactContext<any>) {\n  return type.displayName || 'Context';\n}\n\n// Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.\nexport default function getComponentNameFromType(type: mixed): string | null {\n  if (type == null) {\n    // Host root, text node or just invalid type.\n    return null;\n  }\n  if (__DEV__) {\n    if (typeof (type: any).tag === 'number') {\n      console.error(\n        'Received an unexpected object in getComponentNameFromType(). ' +\n          'This is likely a bug in React. Please file an issue.',\n      );\n    }\n  }\n  if (typeof type === 'function') {\n    return (type: any).displayName || type.name || null;\n  }\n  if (typeof type === 'string') {\n    return type;\n  }\n  switch (type) {\n    case REACT_FRAGMENT_TYPE:\n      return 'Fragment';\n    case REACT_PORTAL_TYPE:\n      return 'Portal';\n    case REACT_PROFILER_TYPE:\n      return 'Profiler';\n    case REACT_STRICT_MODE_TYPE:\n      return 'StrictMode';\n    case REACT_SUSPENSE_TYPE:\n      return 'Suspense';\n    case REACT_SUSPENSE_LIST_TYPE:\n      return 'SuspenseList';\n    case REACT_CACHE_TYPE:\n      if (enableCache) {\n        return 'Cache';\n      }\n    // eslint-disable-next-line no-fallthrough\n    case REACT_TRACING_MARKER_TYPE:\n      if (enableTransitionTracing) {\n        return 'TracingMarker';\n      }\n  }\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_CONTEXT_TYPE:\n        const context: ReactContext<any> = (type: any);\n        return getContextName(context) + '.Consumer';\n      case REACT_PROVIDER_TYPE:\n        const provider: ReactProviderType<any> = (type: any);\n        return getContextName(provider._context) + '.Provider';\n      case REACT_FORWARD_REF_TYPE:\n        return getWrappedName(type, type.render, 'ForwardRef');\n      case REACT_MEMO_TYPE:\n        const outerName = (type: any).displayName || null;\n        if (outerName !== null) {\n          return outerName;\n        }\n        return getComponentNameFromType(type.type) || 'Memo';\n      case REACT_LAZY_TYPE: {\n        const lazyComponent: LazyComponent<any, any> = (type: any);\n        const payload = lazyComponent._payload;\n        const init = lazyComponent._init;\n        try {\n          return getComponentNameFromType(init(payload));\n        } catch (x) {\n          return null;\n        }\n      }\n      case REACT_SERVER_CONTEXT_TYPE:\n        if (enableServerContext) {\n          const context2 = ((type: any): ReactContext<any>);\n          return (context2.displayName || context2._globalName) + '.Provider';\n        }\n      // eslint-disable-next-line no-fallthrough\n    }\n  }\n  return null;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {ReactContext, ReactProviderType} from 'shared/ReactTypes';\n\nimport {enableLegacyHidden} from 'shared/ReactFeatureFlags';\n\nimport {\n  FunctionComponent,\n  ClassComponent,\n  IndeterminateComponent,\n  HostRoot,\n  HostPortal,\n  HostComponent,\n  HostText,\n  Fragment,\n  Mode,\n  ContextConsumer,\n  ContextProvider,\n  ForwardRef,\n  Profiler,\n  SuspenseComponent,\n  MemoComponent,\n  SimpleMemoComponent,\n  LazyComponent,\n  IncompleteClassComponent,\n  DehydratedFragment,\n  SuspenseListComponent,\n  ScopeComponent,\n  OffscreenComponent,\n  LegacyHiddenComponent,\n  CacheComponent,\n  TracingMarkerComponent,\n} from 'react-reconciler/src/ReactWorkTags';\nimport getComponentNameFromType from 'shared/getComponentNameFromType';\nimport {REACT_STRICT_MODE_TYPE} from 'shared/ReactSymbols';\n\n// Keep in sync with shared/getComponentNameFromType\nfunction getWrappedName(\n  outerType: mixed,\n  innerType: any,\n  wrapperName: string,\n): string {\n  const functionName = innerType.displayName || innerType.name || '';\n  return (\n    (outerType: any).displayName ||\n    (functionName !== '' ? `${wrapperName}(${functionName})` : wrapperName)\n  );\n}\n\n// Keep in sync with shared/getComponentNameFromType\nfunction getContextName(type: ReactContext<any>) {\n  return type.displayName || 'Context';\n}\n\nexport default function getComponentNameFromFiber(fiber: Fiber): string | null {\n  const {tag, type} = fiber;\n  switch (tag) {\n    case CacheComponent:\n      return 'Cache';\n    case ContextConsumer:\n      const context: ReactContext<any> = (type: any);\n      return getContextName(context) + '.Consumer';\n    case ContextProvider:\n      const provider: ReactProviderType<any> = (type: any);\n      return getContextName(provider._context) + '.Provider';\n    case DehydratedFragment:\n      return 'DehydratedFragment';\n    case ForwardRef:\n      return getWrappedName(type, type.render, 'ForwardRef');\n    case Fragment:\n      return 'Fragment';\n    case HostComponent:\n      // Host component type is the display name (e.g. \"div\", \"View\")\n      return type;\n    case HostPortal:\n      return 'Portal';\n    case HostRoot:\n      return 'Root';\n    case HostText:\n      return 'Text';\n    case LazyComponent:\n      // Name comes from the type in this case; we don't have a tag.\n      return getComponentNameFromType(type);\n    case Mode:\n      if (type === REACT_STRICT_MODE_TYPE) {\n        // Don't be less specific than shared/getComponentNameFromType\n        return 'StrictMode';\n      }\n      return 'Mode';\n    case OffscreenComponent:\n      return 'Offscreen';\n    case Profiler:\n      return 'Profiler';\n    case ScopeComponent:\n      return 'Scope';\n    case SuspenseComponent:\n      return 'Suspense';\n    case SuspenseListComponent:\n      return 'SuspenseList';\n    case TracingMarkerComponent:\n      return 'TracingMarker';\n    // The display name for this tags come from the user-provided type:\n    case ClassComponent:\n    case FunctionComponent:\n    case IncompleteClassComponent:\n    case IndeterminateComponent:\n    case MemoComponent:\n    case SimpleMemoComponent:\n      if (typeof type === 'function') {\n        return (type: any).displayName || type.name || null;\n      }\n      if (typeof type === 'string') {\n        return type;\n      }\n      break;\n    case LegacyHiddenComponent:\n      if (enableLegacyHidden) {\n        return 'LegacyHidden';\n      }\n  }\n\n  return null;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport {enableCreateEventHandleAPI} from 'shared/ReactFeatureFlags';\n\nexport type Flags = number;\n\n// Don't change these two values. They're used by React Dev Tools.\nexport const NoFlags = /*                      */ 0b00000000000000000000000000;\nexport const PerformedWork = /*                */ 0b00000000000000000000000001;\n\n// You can change the rest (and add more).\nexport const Placement = /*                    */ 0b00000000000000000000000010;\nexport const Update = /*                       */ 0b00000000000000000000000100;\nexport const Deletion = /*                     */ 0b00000000000000000000001000;\nexport const ChildDeletion = /*                */ 0b00000000000000000000010000;\nexport const ContentReset = /*                 */ 0b00000000000000000000100000;\nexport const Callback = /*                     */ 0b00000000000000000001000000;\nexport const DidCapture = /*                   */ 0b00000000000000000010000000;\nexport const ForceClientRender = /*            */ 0b00000000000000000100000000;\nexport const Ref = /*                          */ 0b00000000000000001000000000;\nexport const Snapshot = /*                     */ 0b00000000000000010000000000;\nexport const Passive = /*                      */ 0b00000000000000100000000000;\nexport const Hydrating = /*                    */ 0b00000000000001000000000000;\nexport const Visibility = /*                   */ 0b00000000000010000000000000;\nexport const StoreConsistency = /*             */ 0b00000000000100000000000000;\n\nexport const LifecycleEffectMask =\n  Passive | Update | Callback | Ref | Snapshot | StoreConsistency;\n\n// Union of all commit flags (flags with the lifetime of a particular commit)\nexport const HostEffectMask = /*               */ 0b00000000000111111111111111;\n\n// These are not really side effects, but we still reuse this field.\nexport const Incomplete = /*                   */ 0b00000000001000000000000000;\nexport const ShouldCapture = /*                */ 0b00000000010000000000000000;\nexport const ForceUpdateForLegacySuspense = /* */ 0b00000000100000000000000000;\nexport const DidPropagateContext = /*          */ 0b00000001000000000000000000;\nexport const NeedsPropagation = /*             */ 0b00000010000000000000000000;\nexport const Forked = /*                       */ 0b00000100000000000000000000;\n\n// Static tags describe aspects of a fiber that are not specific to a render,\n// e.g. a fiber uses a passive effect (even if there are no updates on this particular render).\n// This enables us to defer more work in the unmount case,\n// since we can defer traversing the tree during layout to look for Passive effects,\n// and instead rely on the static flag as a signal that there may be cleanup work.\nexport const RefStatic = /*                    */ 0b00001000000000000000000000;\nexport const LayoutStatic = /*                 */ 0b00010000000000000000000000;\nexport const PassiveStatic = /*                */ 0b00100000000000000000000000;\n\n// These flags allow us to traverse to fibers that have effects on mount\n// without traversing the entire tree after every commit for\n// double invoking\nexport const MountLayoutDev = /*               */ 0b01000000000000000000000000;\nexport const MountPassiveDev = /*              */ 0b10000000000000000000000000;\n\n// Groups of flags that are used in the commit phase to skip over trees that\n// don't contain effects, by checking subtreeFlags.\n\nexport const BeforeMutationMask =\n  // TODO: Remove Update flag from before mutation phase by re-landing Visibility\n  // flag logic (see #20043)\n  Update |\n  Snapshot |\n  (enableCreateEventHandleAPI\n    ? // createEventHandle needs to visit deleted and hidden trees to\n      // fire beforeblur\n      // TODO: Only need to visit Deletions during BeforeMutation phase if an\n      // element is focused.\n      ChildDeletion | Visibility\n    : 0);\n\nexport const MutationMask =\n  Placement |\n  Update |\n  ChildDeletion |\n  ContentReset |\n  Ref |\n  Hydrating |\n  Visibility;\nexport const LayoutMask = Update | Callback | Ref | Visibility;\n\n// TODO: Split into PassiveMountMask and PassiveUnmountMask\nexport const PassiveMask = Passive | ChildDeletion;\n\n// Union of tags that don't get reset on clones.\n// This allows certain concepts to persist without recalculating them,\n// e.g. whether a subtree contains passive effects or portals.\nexport const StaticMask = LayoutStatic | PassiveStatic | RefStatic;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactInternalTypes';\nimport type {Container, SuspenseInstance} from './ReactFiberHostConfig';\nimport type {SuspenseState} from './ReactFiberSuspenseComponent.old';\n\nimport {get as getInstance} from 'shared/ReactInstanceMap';\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\nimport getComponentNameFromFiber from 'react-reconciler/src/getComponentNameFromFiber';\nimport {\n  ClassComponent,\n  HostComponent,\n  HostRoot,\n  HostPortal,\n  HostText,\n  SuspenseComponent,\n} from './ReactWorkTags';\nimport {NoFlags, Placement, Hydrating} from './ReactFiberFlags';\n\nconst ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\n\nexport function getNearestMountedFiber(fiber: Fiber): null | Fiber {\n  let node = fiber;\n  let nearestMounted = fiber;\n  if (!fiber.alternate) {\n    // If there is no alternate, this might be a new tree that isn't inserted\n    // yet. If it is, then it will have a pending insertion effect on it.\n    let nextNode = node;\n    do {\n      node = nextNode;\n      if ((node.flags & (Placement | Hydrating)) !== NoFlags) {\n        // This is an insertion or in-progress hydration. The nearest possible\n        // mounted fiber is the parent but we need to continue to figure out\n        // if that one is still mounted.\n        nearestMounted = node.return;\n      }\n      nextNode = node.return;\n    } while (nextNode);\n  } else {\n    while (node.return) {\n      node = node.return;\n    }\n  }\n  if (node.tag === HostRoot) {\n    // TODO: Check if this was a nested HostRoot when used with\n    // renderContainerIntoSubtree.\n    return nearestMounted;\n  }\n  // If we didn't hit the root, that means that we're in an disconnected tree\n  // that has been unmounted.\n  return null;\n}\n\nexport function getSuspenseInstanceFromFiber(\n  fiber: Fiber,\n): null | SuspenseInstance {\n  if (fiber.tag === SuspenseComponent) {\n    let suspenseState: SuspenseState | null = fiber.memoizedState;\n    if (suspenseState === null) {\n      const current = fiber.alternate;\n      if (current !== null) {\n        suspenseState = current.memoizedState;\n      }\n    }\n    if (suspenseState !== null) {\n      return suspenseState.dehydrated;\n    }\n  }\n  return null;\n}\n\nexport function getContainerFromFiber(fiber: Fiber): null | Container {\n  return fiber.tag === HostRoot\n    ? (fiber.stateNode.containerInfo: Container)\n    : null;\n}\n\nexport function isFiberMounted(fiber: Fiber): boolean {\n  return getNearestMountedFiber(fiber) === fiber;\n}\n\nexport function isMounted(component: React$Component<any, any>): boolean {\n  if (__DEV__) {\n    const owner = (ReactCurrentOwner.current: any);\n    if (owner !== null && owner.tag === ClassComponent) {\n      const ownerFiber: Fiber = owner;\n      const instance = ownerFiber.stateNode;\n      if (!instance._warnedAboutRefsInRender) {\n        console.error(\n          '%s is accessing isMounted inside its render() function. ' +\n            'render() should be a pure function of props and state. It should ' +\n            'never access something that requires stale data from the previous ' +\n            'render, such as refs. Move this logic to componentDidMount and ' +\n            'componentDidUpdate instead.',\n          getComponentNameFromFiber(ownerFiber) || 'A component',\n        );\n      }\n      instance._warnedAboutRefsInRender = true;\n    }\n  }\n\n  const fiber: ?Fiber = getInstance(component);\n  if (!fiber) {\n    return false;\n  }\n  return getNearestMountedFiber(fiber) === fiber;\n}\n\nfunction assertIsMounted(fiber) {\n  if (getNearestMountedFiber(fiber) !== fiber) {\n    throw new Error('Unable to find node on an unmounted component.');\n  }\n}\n\nexport function findCurrentFiberUsingSlowPath(fiber: Fiber): Fiber | null {\n  const alternate = fiber.alternate;\n  if (!alternate) {\n    // If there is no alternate, then we only need to check if it is mounted.\n    const nearestMounted = getNearestMountedFiber(fiber);\n\n    if (nearestMounted === null) {\n      throw new Error('Unable to find node on an unmounted component.');\n    }\n\n    if (nearestMounted !== fiber) {\n      return null;\n    }\n    return fiber;\n  }\n  // If we have two possible branches, we'll walk backwards up to the root\n  // to see what path the root points to. On the way we may hit one of the\n  // special cases and we'll deal with them.\n  let a: Fiber = fiber;\n  let b: Fiber = alternate;\n  while (true) {\n    const parentA = a.return;\n    if (parentA === null) {\n      // We're at the root.\n      break;\n    }\n    const parentB = parentA.alternate;\n    if (parentB === null) {\n      // There is no alternate. This is an unusual case. Currently, it only\n      // happens when a Suspense component is hidden. An extra fragment fiber\n      // is inserted in between the Suspense fiber and its children. Skip\n      // over this extra fragment fiber and proceed to the next parent.\n      const nextParent = parentA.return;\n      if (nextParent !== null) {\n        a = b = nextParent;\n        continue;\n      }\n      // If there's no parent, we're at the root.\n      break;\n    }\n\n    // If both copies of the parent fiber point to the same child, we can\n    // assume that the child is current. This happens when we bailout on low\n    // priority: the bailed out fiber's child reuses the current child.\n    if (parentA.child === parentB.child) {\n      let child = parentA.child;\n      while (child) {\n        if (child === a) {\n          // We've determined that A is the current branch.\n          assertIsMounted(parentA);\n          return fiber;\n        }\n        if (child === b) {\n          // We've determined that B is the current branch.\n          assertIsMounted(parentA);\n          return alternate;\n        }\n        child = child.sibling;\n      }\n\n      // We should never have an alternate for any mounting node. So the only\n      // way this could possibly happen is if this was unmounted, if at all.\n      throw new Error('Unable to find node on an unmounted component.');\n    }\n\n    if (a.return !== b.return) {\n      // The return pointer of A and the return pointer of B point to different\n      // fibers. We assume that return pointers never criss-cross, so A must\n      // belong to the child set of A.return, and B must belong to the child\n      // set of B.return.\n      a = parentA;\n      b = parentB;\n    } else {\n      // The return pointers point to the same fiber. We'll have to use the\n      // default, slow path: scan the child sets of each parent alternate to see\n      // which child belongs to which set.\n      //\n      // Search parent A's child set\n      let didFindChild = false;\n      let child = parentA.child;\n      while (child) {\n        if (child === a) {\n          didFindChild = true;\n          a = parentA;\n          b = parentB;\n          break;\n        }\n        if (child === b) {\n          didFindChild = true;\n          b = parentA;\n          a = parentB;\n          break;\n        }\n        child = child.sibling;\n      }\n      if (!didFindChild) {\n        // Search parent B's child set\n        child = parentB.child;\n        while (child) {\n          if (child === a) {\n            didFindChild = true;\n            a = parentB;\n            b = parentA;\n            break;\n          }\n          if (child === b) {\n            didFindChild = true;\n            b = parentB;\n            a = parentA;\n            break;\n          }\n          child = child.sibling;\n        }\n\n        if (!didFindChild) {\n          throw new Error(\n            'Child was not found in either parent set. This indicates a bug ' +\n              'in React related to the return pointer. Please file an issue.',\n          );\n        }\n      }\n    }\n\n    if (a.alternate !== b) {\n      throw new Error(\n        \"Return fibers should always be each others' alternates. \" +\n          'This error is likely caused by a bug in React. Please file an issue.',\n      );\n    }\n  }\n\n  // If the root is not a host container, we're in a disconnected tree. I.e.\n  // unmounted.\n  if (a.tag !== HostRoot) {\n    throw new Error('Unable to find node on an unmounted component.');\n  }\n\n  if (a.stateNode.current === a) {\n    // We've determined that A is the current branch.\n    return fiber;\n  }\n  // Otherwise B has to be current branch.\n  return alternate;\n}\n\nexport function findCurrentHostFiber(parent: Fiber): Fiber | null {\n  const currentParent = findCurrentFiberUsingSlowPath(parent);\n  return currentParent !== null\n    ? findCurrentHostFiberImpl(currentParent)\n    : null;\n}\n\nfunction findCurrentHostFiberImpl(node: Fiber) {\n  // Next we'll drill down this component to find the first HostComponent/Text.\n  if (node.tag === HostComponent || node.tag === HostText) {\n    return node;\n  }\n\n  let child = node.child;\n  while (child !== null) {\n    const match = findCurrentHostFiberImpl(child);\n    if (match !== null) {\n      return match;\n    }\n    child = child.sibling;\n  }\n\n  return null;\n}\n\nexport function findCurrentHostFiberWithNoPortals(parent: Fiber): Fiber | null {\n  const currentParent = findCurrentFiberUsingSlowPath(parent);\n  return currentParent !== null\n    ? findCurrentHostFiberWithNoPortalsImpl(currentParent)\n    : null;\n}\n\nfunction findCurrentHostFiberWithNoPortalsImpl(node: Fiber) {\n  // Next we'll drill down this component to find the first HostComponent/Text.\n  if (node.tag === HostComponent || node.tag === HostText) {\n    return node;\n  }\n\n  let child = node.child;\n  while (child !== null) {\n    if (child.tag !== HostPortal) {\n      const match = findCurrentHostFiberWithNoPortalsImpl(child);\n      if (match !== null) {\n        return match;\n      }\n    }\n    child = child.sibling;\n  }\n\n  return null;\n}\n\nexport function isFiberSuspenseAndTimedOut(fiber: Fiber): boolean {\n  const memoizedState = fiber.memoizedState;\n  return (\n    fiber.tag === SuspenseComponent &&\n    memoizedState !== null &&\n    memoizedState.dehydrated === null\n  );\n}\n\nexport function doesFiberContain(\n  parentFiber: Fiber,\n  childFiber: Fiber,\n): boolean {\n  let node = childFiber;\n  const parentFiberAlternate = parentFiber.alternate;\n  while (node !== null) {\n    if (node === parentFiber || node === parentFiberAlternate) {\n      return true;\n    }\n    node = node.return;\n  }\n  return false;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\ndeclare function isArray(a: mixed): boolean %checks(Array.isArray(a));\n\nconst isArrayImpl = Array.isArray;\n\n// eslint-disable-next-line no-redeclare\nfunction isArray(a: mixed): boolean {\n  return isArrayImpl(a);\n}\n\nexport default isArray;\n","module.exports = function(mixins){\n\tvar proto = {};\n\tfor (var i = 0, l = arguments.length; i < l; i++){\n\t\tvar mixin = arguments[i];\n\t\tif (typeof mixin == 'function') mixin = mixin.prototype;\n\t\tfor (var key in mixin) proto[key] = mixin[key];\n\t}\n\tif (!proto.initialize) proto.initialize = function(){};\n\tproto.constructor = function(a,b,c,d,e,f,g,h){\n\t\treturn new proto.initialize(a,b,c,d,e,f,g,h);\n\t};\n\tproto.constructor.prototype = proto.initialize.prototype = proto;\n\treturn proto.constructor;\n};\n","var Class = require('./class');\n\nfunction Transform(xx, yx, xy, yy, x, y){\n\tif (xx && typeof xx == 'object'){\n\t\tyx = xx.yx; yy = xx.yy; y = xx.y;\n\t\txy = xx.xy; x = xx.x; xx = xx.xx;\n\t}\n\tthis.xx = xx == null ? 1 : xx;\n\tthis.yx = yx || 0;\n\tthis.xy = xy || 0;\n\tthis.yy = yy == null ? 1 : yy;\n\tthis.x = (x == null ? this.x : x) || 0;\n\tthis.y = (y == null ? this.y : y) || 0;\n\tthis._transform();\n\treturn this;\n};\n\nmodule.exports = Class({\n\n\tinitialize: Transform,\n\n\t_transform: function(){},\n\n\txx: 1, yx: 0, x: 0,\n\txy: 0, yy: 1, y: 0,\n\n\ttransform: function(xx, yx, xy, yy, x, y){\n\t\tvar m = this;\n\t\tif (xx && typeof xx == 'object'){\n\t\t\tyx = xx.yx; yy = xx.yy; y = xx.y;\n\t\t\txy = xx.xy; x = xx.x; xx = xx.xx;\n\t\t}\n\t\tif (!x) x = 0;\n\t\tif (!y) y = 0;\n\t\treturn this.transformTo(\n\t\t\tm.xx * xx + m.xy * yx,\n\t\t\tm.yx * xx + m.yy * yx,\n\t\t\tm.xx * xy + m.xy * yy,\n\t\t\tm.yx * xy + m.yy * yy,\n\t\t\tm.xx * x + m.xy * y + m.x,\n\t\t\tm.yx * x + m.yy * y + m.y\n\t\t);\n\t},\n\n\ttransformTo: Transform,\n\n\ttranslate: function(x, y){\n\t\treturn this.transform(1, 0, 0, 1, x, y);\n\t},\n\n\tmove: function(x, y){\n\t\tthis.x += x || 0;\n\t\tthis.y += y || 0;\n\t\tthis._transform();\n\t\treturn this;\n\t},\n\n\tscale: function(x, y){\n\t\tif (y == null) y = x;\n\t\treturn this.transform(x, 0, 0, y, 0, 0);\n\t},\n\n\trotate: function(deg, x, y){\n\t\tif (x == null || y == null){\n\t\t\tx = (this.left || 0) + (this.width || 0) / 2;\n\t\t\ty = (this.top || 0) + (this.height || 0) / 2;\n\t\t}\n\n\t\tvar rad = deg * Math.PI / 180, sin = Math.sin(rad), cos = Math.cos(rad);\n\n\t\tthis.transform(1, 0, 0, 1, x, y);\n\t\tvar m = this;\n\n\t\treturn this.transformTo(\n\t\t\tcos * m.xx - sin * m.yx,\n\t\t\tsin * m.xx + cos * m.yx,\n\t\t\tcos * m.xy - sin * m.yy,\n\t\t\tsin * m.xy + cos * m.yy,\n\t\t\tm.x,\n\t\t\tm.y\n\t\t).transform(1, 0, 0, 1, -x, -y);\n\t},\n\n\tmoveTo: function(x, y){\n\t\tvar m = this;\n\t\treturn this.transformTo(m.xx, m.yx, m.xy, m.yy, x, y);\n\t},\n\n\trotateTo: function(deg, x, y){\n\t\tvar m = this;\n\t\tvar flip = m.yx / m.xx > m.yy / m.xy ? -1 : 1;\n\t\tif (m.xx < 0 ? m.xy >= 0 : m.xy < 0) flip = -flip;\n\t\treturn this.rotate(deg - Math.atan2(flip * m.yx, flip * m.xx) * 180 / Math.PI, x, y);\n\t},\n\n\tscaleTo: function(x, y){\n\t\t// Normalize\n\t\tvar m = this;\n\n\t\tvar h = Math.sqrt(m.xx * m.xx + m.yx * m.yx);\n\t\tm.xx /= h; m.yx /= h;\n\n\t\th = Math.sqrt(m.yy * m.yy + m.xy * m.xy);\n\t\tm.yy /= h; m.xy /= h;\n\n\t\treturn this.scale(x, y);\n\t},\n\n\tresizeTo: function(width, height){\n\t\tvar w = this.width, h = this.height;\n\t\tif (!w || !h) return this;\n\t\treturn this.scaleTo(width / w, height / h);\n\t},\n\n\t/*\n\tinverse: function(){\n\t\tvar a = this.xx, b = this.yx,\n\t\t\tc = this.xy, d = this.yy,\n\t\t\te = this.x, f = this.y;\n\t\tif (a * d - b * c == 0) return null;\n\t\treturn new Transform(\n\t\t\td/(a * d-b * c), b/(b * c-a * d),\n\t\t\tc/(b * c-a * d), a/(a * d-b * c),\n\t\t\t(d * e-c * f)/(b * c-a * d), (b * e-a * f)/(a * d-b * c)\n\t\t);\n\t},\n\t*/\n\n\tinversePoint: function(x, y){\n\t\tvar a = this.xx, b = this.yx,\n\t\t\tc = this.xy, d = this.yy,\n\t\t\te = this.x, f = this.y;\n\t\tvar det = b * c - a * d;\n\t\tif (det == 0) return null;\n\t\treturn {\n\t\t\tx: (d * (e - x) + c * (y - f)) / det,\n\t\t\ty: (a * (f - y) + b * (x - e)) / det\n\t\t};\n\t},\n\n\tpoint: function(x, y){\n\t\tvar m = this;\n\t\treturn {\n\t\t\tx: m.xx * x + m.xy * y + m.x,\n\t\t\ty: m.yx * x + m.yy * y + m.y\n\t\t};\n\t}\t\n\n});\n","function warning(){\n\tthrow new Error('You must require a mode before requiring anything else.');\n}\n\nexports.Surface = warning;\nexports.Path = warning;\nexports.Shape = warning;\nexports.Group = warning;\nexports.ClippingRectangle = warning;\nexports.Text = warning;\n\nexports.setCurrent = function(mode){\n\tfor (var key in mode){\n\t\texports[key] = mode[key];\n\t}\n};\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport const TYPES = {\n  CLIPPING_RECTANGLE: 'ClippingRectangle',\n  GROUP: 'Group',\n  SHAPE: 'Shape',\n  TEXT: 'Text',\n};\n\nexport const EVENT_TYPES = {\n  onClick: 'click',\n  onMouseMove: 'mousemove',\n  onMouseOver: 'mouseover',\n  onMouseOut: 'mouseout',\n  onMouseUp: 'mouseup',\n  onMouseDown: 'mousedown',\n};\n\nexport function childrenAsString(children) {\n  if (!children) {\n    return '';\n  } else if (typeof children === 'string') {\n    return children;\n  } else if (children.length) {\n    return children.join('');\n  } else {\n    return '';\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport * as React from 'react';\n\nconst ReactInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n\nconst {\n  unstable_cancelCallback,\n  unstable_now,\n  unstable_scheduleCallback,\n  unstable_shouldYield,\n  unstable_requestPaint,\n  unstable_getFirstCallbackNode,\n  unstable_runWithPriority,\n  unstable_next,\n  unstable_continueExecution,\n  unstable_pauseExecution,\n  unstable_getCurrentPriorityLevel,\n  unstable_ImmediatePriority,\n  unstable_UserBlockingPriority,\n  unstable_NormalPriority,\n  unstable_LowPriority,\n  unstable_IdlePriority,\n  unstable_forceFrameRate,\n\n  // this doesn't actually exist on the scheduler, but it *does*\n  // on scheduler/unstable_mock, which we'll need inside act()\n  // and for internal testing\n  unstable_flushAllWithoutAsserting,\n  unstable_yieldValue,\n  unstable_setDisableYieldValue,\n} = ReactInternals.Scheduler;\n\nexport {\n  unstable_cancelCallback,\n  unstable_now,\n  unstable_scheduleCallback,\n  unstable_shouldYield,\n  unstable_requestPaint,\n  unstable_getFirstCallbackNode,\n  unstable_runWithPriority,\n  unstable_next,\n  unstable_continueExecution,\n  unstable_pauseExecution,\n  unstable_getCurrentPriorityLevel,\n  unstable_ImmediatePriority,\n  unstable_UserBlockingPriority,\n  unstable_NormalPriority,\n  unstable_LowPriority,\n  unstable_IdlePriority,\n  unstable_forceFrameRate,\n  unstable_flushAllWithoutAsserting,\n  unstable_yieldValue,\n  unstable_setDisableYieldValue,\n};\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\n// This module only exists as an ESM wrapper around the external CommonJS\n// Scheduler dependency. Notice that we're intentionally not using named imports\n// because Rollup would use dynamic dispatch for CommonJS interop named imports.\n// When we switch to ESM, we can delete this module.\nimport * as Scheduler from 'scheduler';\n\nexport const scheduleCallback = Scheduler.unstable_scheduleCallback;\nexport const cancelCallback = Scheduler.unstable_cancelCallback;\nexport const shouldYield = Scheduler.unstable_shouldYield;\nexport const requestPaint = Scheduler.unstable_requestPaint;\nexport const now = Scheduler.unstable_now;\nexport const getCurrentPriorityLevel =\n  Scheduler.unstable_getCurrentPriorityLevel;\nexport const ImmediatePriority = Scheduler.unstable_ImmediatePriority;\nexport const UserBlockingPriority = Scheduler.unstable_UserBlockingPriority;\nexport const NormalPriority = Scheduler.unstable_NormalPriority;\nexport const LowPriority = Scheduler.unstable_LowPriority;\nexport const IdlePriority = Scheduler.unstable_IdlePriority;\nexport type SchedulerCallback = (isSync: boolean) => SchedulerCallback | null;\n\n// this doesn't actually exist on the scheduler, but it *does*\n// on scheduler/unstable_mock, which we'll need for internal testing\nexport const unstable_yieldValue = Scheduler.unstable_yieldValue;\nexport const unstable_setDisableYieldValue =\n  Scheduler.unstable_setDisableYieldValue;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\n// Helpers to patch console.logs to avoid logging during side-effect free\n// replaying on render function. This currently only patches the object\n// lazily which won't cover if the log function was extracted eagerly.\n// We could also eagerly patch the method.\n\nlet disabledDepth = 0;\nlet prevLog;\nlet prevInfo;\nlet prevWarn;\nlet prevError;\nlet prevGroup;\nlet prevGroupCollapsed;\nlet prevGroupEnd;\n\nfunction disabledLog() {}\ndisabledLog.__reactDisabledLog = true;\n\nexport function disableLogs(): void {\n  if (__DEV__) {\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      prevLog = console.log;\n      prevInfo = console.info;\n      prevWarn = console.warn;\n      prevError = console.error;\n      prevGroup = console.group;\n      prevGroupCollapsed = console.groupCollapsed;\n      prevGroupEnd = console.groupEnd;\n      // https://github.com/facebook/react/issues/19099\n      const props = {\n        configurable: true,\n        enumerable: true,\n        value: disabledLog,\n        writable: true,\n      };\n      // $FlowFixMe Flow thinks console is immutable.\n      Object.defineProperties(console, {\n        info: props,\n        log: props,\n        warn: props,\n        error: props,\n        group: props,\n        groupCollapsed: props,\n        groupEnd: props,\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n    disabledDepth++;\n  }\n}\n\nexport function reenableLogs(): void {\n  if (__DEV__) {\n    disabledDepth--;\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      const props = {\n        configurable: true,\n        enumerable: true,\n        writable: true,\n      };\n      // $FlowFixMe Flow thinks console is immutable.\n      Object.defineProperties(console, {\n        log: {...props, value: prevLog},\n        info: {...props, value: prevInfo},\n        warn: {...props, value: prevWarn},\n        error: {...props, value: prevError},\n        group: {...props, value: prevGroup},\n        groupCollapsed: {...props, value: prevGroupCollapsed},\n        groupEnd: {...props, value: prevGroupEnd},\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n    if (disabledDepth < 0) {\n      console.error(\n        'disabledDepth fell below zero. ' +\n          'This is a bug in React. Please file an issue.',\n      );\n    }\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Lane, Lanes} from './ReactFiberLane.old';\nimport type {Fiber, FiberRoot} from './ReactInternalTypes';\nimport type {ReactNodeList, Wakeable} from 'shared/ReactTypes';\nimport type {EventPriority} from './ReactEventPriorities.old';\n// import type {DevToolsProfilingHooks} from 'react-devtools-shared/src/backend/types';\n// TODO: This import doesn't work because the DevTools depend on the DOM version of React\n// and to properly type check against DOM React we can't also type check again non-DOM\n// React which this hook might be in.\ntype DevToolsProfilingHooks = any;\n\nimport {\n  getLabelForLane,\n  TotalLanes,\n} from 'react-reconciler/src/ReactFiberLane.old';\nimport {DidCapture} from './ReactFiberFlags';\nimport {\n  consoleManagedByDevToolsDuringStrictMode,\n  enableProfilerTimer,\n  enableSchedulingProfiler,\n} from 'shared/ReactFeatureFlags';\nimport {\n  DiscreteEventPriority,\n  ContinuousEventPriority,\n  DefaultEventPriority,\n  IdleEventPriority,\n} from './ReactEventPriorities.old';\nimport {\n  ImmediatePriority as ImmediateSchedulerPriority,\n  UserBlockingPriority as UserBlockingSchedulerPriority,\n  NormalPriority as NormalSchedulerPriority,\n  IdlePriority as IdleSchedulerPriority,\n  unstable_yieldValue,\n  unstable_setDisableYieldValue,\n} from './Scheduler';\nimport {setSuppressWarning} from 'shared/consoleWithStackDev';\nimport {disableLogs, reenableLogs} from 'shared/ConsolePatchingDev';\n\ndeclare var __REACT_DEVTOOLS_GLOBAL_HOOK__: Object | void;\n\nlet rendererID = null;\nlet injectedHook = null;\nlet injectedProfilingHooks: DevToolsProfilingHooks | null = null;\nlet hasLoggedError = false;\n\nexport const isDevToolsPresent =\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined';\n\nexport function injectInternals(internals: Object): boolean {\n  if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {\n    // No DevTools\n    return false;\n  }\n  const hook = __REACT_DEVTOOLS_GLOBAL_HOOK__;\n  if (hook.isDisabled) {\n    // This isn't a real property on the hook, but it can be set to opt out\n    // of DevTools integration and associated warnings and logs.\n    // https://github.com/facebook/react/issues/3877\n    return true;\n  }\n  if (!hook.supportsFiber) {\n    if (__DEV__) {\n      console.error(\n        'The installed version of React DevTools is too old and will not work ' +\n          'with the current version of React. Please update React DevTools. ' +\n          'https://reactjs.org/link/react-devtools',\n      );\n    }\n    // DevTools exists, even though it doesn't support Fiber.\n    return true;\n  }\n  try {\n    if (enableSchedulingProfiler) {\n      // Conditionally inject these hooks only if Timeline profiler is supported by this build.\n      // This gives DevTools a way to feature detect that isn't tied to version number\n      // (since profiling and timeline are controlled by different feature flags).\n      internals = {\n        ...internals,\n        getLaneLabelMap,\n        injectProfilingHooks,\n      };\n    }\n\n    rendererID = hook.inject(internals);\n\n    // We have successfully injected, so now it is safe to set up hooks.\n    injectedHook = hook;\n  } catch (err) {\n    // Catch all errors because it is unsafe to throw during initialization.\n    if (__DEV__) {\n      console.error('React instrumentation encountered an error: %s.', err);\n    }\n  }\n  if (hook.checkDCE) {\n    // This is the real DevTools.\n    return true;\n  } else {\n    // This is likely a hook installed by Fast Refresh runtime.\n    return false;\n  }\n}\n\nexport function onScheduleRoot(root: FiberRoot, children: ReactNodeList) {\n  if (__DEV__) {\n    if (\n      injectedHook &&\n      typeof injectedHook.onScheduleFiberRoot === 'function'\n    ) {\n      try {\n        injectedHook.onScheduleFiberRoot(rendererID, root, children);\n      } catch (err) {\n        if (__DEV__ && !hasLoggedError) {\n          hasLoggedError = true;\n          console.error('React instrumentation encountered an error: %s', err);\n        }\n      }\n    }\n  }\n}\n\nexport function onCommitRoot(root: FiberRoot, eventPriority: EventPriority) {\n  if (injectedHook && typeof injectedHook.onCommitFiberRoot === 'function') {\n    try {\n      const didError = (root.current.flags & DidCapture) === DidCapture;\n      if (enableProfilerTimer) {\n        let schedulerPriority;\n        switch (eventPriority) {\n          case DiscreteEventPriority:\n            schedulerPriority = ImmediateSchedulerPriority;\n            break;\n          case ContinuousEventPriority:\n            schedulerPriority = UserBlockingSchedulerPriority;\n            break;\n          case DefaultEventPriority:\n            schedulerPriority = NormalSchedulerPriority;\n            break;\n          case IdleEventPriority:\n            schedulerPriority = IdleSchedulerPriority;\n            break;\n          default:\n            schedulerPriority = NormalSchedulerPriority;\n            break;\n        }\n        injectedHook.onCommitFiberRoot(\n          rendererID,\n          root,\n          schedulerPriority,\n          didError,\n        );\n      } else {\n        injectedHook.onCommitFiberRoot(rendererID, root, undefined, didError);\n      }\n    } catch (err) {\n      if (__DEV__) {\n        if (!hasLoggedError) {\n          hasLoggedError = true;\n          console.error('React instrumentation encountered an error: %s', err);\n        }\n      }\n    }\n  }\n}\n\nexport function onPostCommitRoot(root: FiberRoot) {\n  if (\n    injectedHook &&\n    typeof injectedHook.onPostCommitFiberRoot === 'function'\n  ) {\n    try {\n      injectedHook.onPostCommitFiberRoot(rendererID, root);\n    } catch (err) {\n      if (__DEV__) {\n        if (!hasLoggedError) {\n          hasLoggedError = true;\n          console.error('React instrumentation encountered an error: %s', err);\n        }\n      }\n    }\n  }\n}\n\nexport function onCommitUnmount(fiber: Fiber) {\n  if (injectedHook && typeof injectedHook.onCommitFiberUnmount === 'function') {\n    try {\n      injectedHook.onCommitFiberUnmount(rendererID, fiber);\n    } catch (err) {\n      if (__DEV__) {\n        if (!hasLoggedError) {\n          hasLoggedError = true;\n          console.error('React instrumentation encountered an error: %s', err);\n        }\n      }\n    }\n  }\n}\n\nexport function setIsStrictModeForDevtools(newIsStrictMode: boolean) {\n  if (consoleManagedByDevToolsDuringStrictMode) {\n    if (typeof unstable_yieldValue === 'function') {\n      // We're in a test because Scheduler.unstable_yieldValue only exists\n      // in SchedulerMock. To reduce the noise in strict mode tests,\n      // suppress warnings and disable scheduler yielding during the double render\n      unstable_setDisableYieldValue(newIsStrictMode);\n      setSuppressWarning(newIsStrictMode);\n    }\n\n    if (injectedHook && typeof injectedHook.setStrictMode === 'function') {\n      try {\n        injectedHook.setStrictMode(rendererID, newIsStrictMode);\n      } catch (err) {\n        if (__DEV__) {\n          if (!hasLoggedError) {\n            hasLoggedError = true;\n            console.error(\n              'React instrumentation encountered an error: %s',\n              err,\n            );\n          }\n        }\n      }\n    }\n  } else {\n    if (newIsStrictMode) {\n      disableLogs();\n    } else {\n      reenableLogs();\n    }\n  }\n}\n\n// Profiler API hooks\n\nfunction injectProfilingHooks(profilingHooks: DevToolsProfilingHooks): void {\n  injectedProfilingHooks = profilingHooks;\n}\n\nfunction getLaneLabelMap(): Map<Lane, string> | null {\n  if (enableSchedulingProfiler) {\n    const map: Map<Lane, string> = new Map();\n\n    let lane = 1;\n    for (let index = 0; index < TotalLanes; index++) {\n      const label = ((getLabelForLane(lane): any): string);\n      map.set(lane, label);\n      lane *= 2;\n    }\n\n    return map;\n  } else {\n    return null;\n  }\n}\n\nexport function markCommitStarted(lanes: Lanes): void {\n  if (enableSchedulingProfiler) {\n    if (\n      injectedProfilingHooks !== null &&\n      typeof injectedProfilingHooks.markCommitStarted === 'function'\n    ) {\n      injectedProfilingHooks.markCommitStarted(lanes);\n    }\n  }\n}\n\nexport function markCommitStopped(): void {\n  if (enableSchedulingProfiler) {\n    if (\n      injectedProfilingHooks !== null &&\n      typeof injectedProfilingHooks.markCommitStopped === 'function'\n    ) {\n      injectedProfilingHooks.markCommitStopped();\n    }\n  }\n}\n\nexport function markComponentRenderStarted(fiber: Fiber): void {\n  if (enableSchedulingProfiler) {\n    if (\n      injectedProfilingHooks !== null &&\n      typeof injectedProfilingHooks.markComponentRenderStarted === 'function'\n    ) {\n      injectedProfilingHooks.markComponentRenderStarted(fiber);\n    }\n  }\n}\n\nexport function markComponentRenderStopped(): void {\n  if (enableSchedulingProfiler) {\n    if (\n      injectedProfilingHooks !== null &&\n      typeof injectedProfilingHooks.markComponentRenderStopped === 'function'\n    ) {\n      injectedProfilingHooks.markComponentRenderStopped();\n    }\n  }\n}\n\nexport function markComponentPassiveEffectMountStarted(fiber: Fiber): void {\n  if (enableSchedulingProfiler) {\n    if (\n      injectedProfilingHooks !== null &&\n      typeof injectedProfilingHooks.markComponentPassiveEffectMountStarted ===\n        'function'\n    ) {\n      injectedProfilingHooks.markComponentPassiveEffectMountStarted(fiber);\n    }\n  }\n}\n\nexport function markComponentPassiveEffectMountStopped(): void {\n  if (enableSchedulingProfiler) {\n    if (\n      injectedProfilingHooks !== null &&\n      typeof injectedProfilingHooks.markComponentPassiveEffectMountStopped ===\n        'function'\n    ) {\n      injectedProfilingHooks.markComponentPassiveEffectMountStopped();\n    }\n  }\n}\n\nexport function markComponentPassiveEffectUnmountStarted(fiber: Fiber): void {\n  if (enableSchedulingProfiler) {\n    if (\n      injectedProfilingHooks !== null &&\n      typeof injectedProfilingHooks.markComponentPassiveEffectUnmountStarted ===\n        'function'\n    ) {\n      injectedProfilingHooks.markComponentPassiveEffectUnmountStarted(fiber);\n    }\n  }\n}\n\nexport function markComponentPassiveEffectUnmountStopped(): void {\n  if (enableSchedulingProfiler) {\n    if (\n      injectedProfilingHooks !== null &&\n      typeof injectedProfilingHooks.markComponentPassiveEffectUnmountStopped ===\n        'function'\n    ) {\n      injectedProfilingHooks.markComponentPassiveEffectUnmountStopped();\n    }\n  }\n}\n\nexport function markComponentLayoutEffectMountStarted(fiber: Fiber): void {\n  if (enableSchedulingProfiler) {\n    if (\n      injectedProfilingHooks !== null &&\n      typeof injectedProfilingHooks.markComponentLayoutEffectMountStarted ===\n        'function'\n    ) {\n      injectedProfilingHooks.markComponentLayoutEffectMountStarted(fiber);\n    }\n  }\n}\n\nexport function markComponentLayoutEffectMountStopped(): void {\n  if (enableSchedulingProfiler) {\n    if (\n      injectedProfilingHooks !== null &&\n      typeof injectedProfilingHooks.markComponentLayoutEffectMountStopped ===\n        'function'\n    ) {\n      injectedProfilingHooks.markComponentLayoutEffectMountStopped();\n    }\n  }\n}\n\nexport function markComponentLayoutEffectUnmountStarted(fiber: Fiber): void {\n  if (enableSchedulingProfiler) {\n    if (\n      injectedProfilingHooks !== null &&\n      typeof injectedProfilingHooks.markComponentLayoutEffectUnmountStarted ===\n        'function'\n    ) {\n      injectedProfilingHooks.markComponentLayoutEffectUnmountStarted(fiber);\n    }\n  }\n}\n\nexport function markComponentLayoutEffectUnmountStopped(): void {\n  if (enableSchedulingProfiler) {\n    if (\n      injectedProfilingHooks !== null &&\n      typeof injectedProfilingHooks.markComponentLayoutEffectUnmountStopped ===\n        'function'\n    ) {\n      injectedProfilingHooks.markComponentLayoutEffectUnmountStopped();\n    }\n  }\n}\n\nexport function markComponentErrored(\n  fiber: Fiber,\n  thrownValue: mixed,\n  lanes: Lanes,\n): void {\n  if (enableSchedulingProfiler) {\n    if (\n      injectedProfilingHooks !== null &&\n      typeof injectedProfilingHooks.markComponentErrored === 'function'\n    ) {\n      injectedProfilingHooks.markComponentErrored(fiber, thrownValue, lanes);\n    }\n  }\n}\n\nexport function markComponentSuspended(\n  fiber: Fiber,\n  wakeable: Wakeable,\n  lanes: Lanes,\n): void {\n  if (enableSchedulingProfiler) {\n    if (\n      injectedProfilingHooks !== null &&\n      typeof injectedProfilingHooks.markComponentSuspended === 'function'\n    ) {\n      injectedProfilingHooks.markComponentSuspended(fiber, wakeable, lanes);\n    }\n  }\n}\n\nexport function markLayoutEffectsStarted(lanes: Lanes): void {\n  if (enableSchedulingProfiler) {\n    if (\n      injectedProfilingHooks !== null &&\n      typeof injectedProfilingHooks.markLayoutEffectsStarted === 'function'\n    ) {\n      injectedProfilingHooks.markLayoutEffectsStarted(lanes);\n    }\n  }\n}\n\nexport function markLayoutEffectsStopped(): void {\n  if (enableSchedulingProfiler) {\n    if (\n      injectedProfilingHooks !== null &&\n      typeof injectedProfilingHooks.markLayoutEffectsStopped === 'function'\n    ) {\n      injectedProfilingHooks.markLayoutEffectsStopped();\n    }\n  }\n}\n\nexport function markPassiveEffectsStarted(lanes: Lanes): void {\n  if (enableSchedulingProfiler) {\n    if (\n      injectedProfilingHooks !== null &&\n      typeof injectedProfilingHooks.markPassiveEffectsStarted === 'function'\n    ) {\n      injectedProfilingHooks.markPassiveEffectsStarted(lanes);\n    }\n  }\n}\n\nexport function markPassiveEffectsStopped(): void {\n  if (enableSchedulingProfiler) {\n    if (\n      injectedProfilingHooks !== null &&\n      typeof injectedProfilingHooks.markPassiveEffectsStopped === 'function'\n    ) {\n      injectedProfilingHooks.markPassiveEffectsStopped();\n    }\n  }\n}\n\nexport function markRenderStarted(lanes: Lanes): void {\n  if (enableSchedulingProfiler) {\n    if (\n      injectedProfilingHooks !== null &&\n      typeof injectedProfilingHooks.markRenderStarted === 'function'\n    ) {\n      injectedProfilingHooks.markRenderStarted(lanes);\n    }\n  }\n}\n\nexport function markRenderYielded(): void {\n  if (enableSchedulingProfiler) {\n    if (\n      injectedProfilingHooks !== null &&\n      typeof injectedProfilingHooks.markRenderYielded === 'function'\n    ) {\n      injectedProfilingHooks.markRenderYielded();\n    }\n  }\n}\n\nexport function markRenderStopped(): void {\n  if (enableSchedulingProfiler) {\n    if (\n      injectedProfilingHooks !== null &&\n      typeof injectedProfilingHooks.markRenderStopped === 'function'\n    ) {\n      injectedProfilingHooks.markRenderStopped();\n    }\n  }\n}\n\nexport function markRenderScheduled(lane: Lane): void {\n  if (enableSchedulingProfiler) {\n    if (\n      injectedProfilingHooks !== null &&\n      typeof injectedProfilingHooks.markRenderScheduled === 'function'\n    ) {\n      injectedProfilingHooks.markRenderScheduled(lane);\n    }\n  }\n}\n\nexport function markForceUpdateScheduled(fiber: Fiber, lane: Lane): void {\n  if (enableSchedulingProfiler) {\n    if (\n      injectedProfilingHooks !== null &&\n      typeof injectedProfilingHooks.markForceUpdateScheduled === 'function'\n    ) {\n      injectedProfilingHooks.markForceUpdateScheduled(fiber, lane);\n    }\n  }\n}\n\nexport function markStateUpdateScheduled(fiber: Fiber, lane: Lane): void {\n  if (enableSchedulingProfiler) {\n    if (\n      injectedProfilingHooks !== null &&\n      typeof injectedProfilingHooks.markStateUpdateScheduled === 'function'\n    ) {\n      injectedProfilingHooks.markStateUpdateScheduled(fiber, lane);\n    }\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nexport type TypeOfMode = number;\n\nexport const NoMode = /*                         */ 0b000000;\n// TODO: Remove ConcurrentMode by reading from the root tag instead\nexport const ConcurrentMode = /*                 */ 0b000001;\nexport const ProfileMode = /*                    */ 0b000010;\nexport const DebugTracingMode = /*               */ 0b000100;\nexport const StrictLegacyMode = /*               */ 0b001000;\nexport const StrictEffectsMode = /*              */ 0b010000;\nexport const ConcurrentUpdatesByDefaultMode = /* */ 0b100000;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\n// TODO: This is pretty well supported by browsers. Maybe we can drop it.\n\nexport const clz32 = Math.clz32 ? Math.clz32 : clz32Fallback;\n\n// Count leading zeros.\n// Based on:\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/clz32\nconst log = Math.log;\nconst LN2 = Math.LN2;\nfunction clz32Fallback(x: number): number {\n  const asUint = x >>> 0;\n  if (asUint === 0) {\n    return 32;\n  }\n  return (31 - ((log(asUint) / LN2) | 0)) | 0;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {FiberRoot} from './ReactInternalTypes';\nimport type {Transition} from './ReactFiberTracingMarkerComponent.old';\n\n// TODO: Ideally these types would be opaque but that doesn't work well with\n// our reconciler fork infra, since these leak into non-reconciler packages.\n\nexport type Lanes = number;\nexport type Lane = number;\nexport type LaneMap<T> = Array<T>;\n\nimport {\n  enableSchedulingProfiler,\n  enableUpdaterTracking,\n  allowConcurrentByDefault,\n  enableTransitionTracing,\n} from 'shared/ReactFeatureFlags';\nimport {isDevToolsPresent} from './ReactFiberDevToolsHook.old';\nimport {ConcurrentUpdatesByDefaultMode, NoMode} from './ReactTypeOfMode';\nimport {clz32} from './clz32';\n\n// Lane values below should be kept in sync with getLabelForLane(), used by react-devtools-timeline.\n// If those values are changed that package should be rebuilt and redeployed.\n\nexport const TotalLanes = 31;\n\nexport const NoLanes: Lanes = /*                        */ 0b0000000000000000000000000000000;\nexport const NoLane: Lane = /*                          */ 0b0000000000000000000000000000000;\n\nexport const SyncLane: Lane = /*                        */ 0b0000000000000000000000000000001;\n\nexport const InputContinuousHydrationLane: Lane = /*    */ 0b0000000000000000000000000000010;\nexport const InputContinuousLane: Lane = /*             */ 0b0000000000000000000000000000100;\n\nexport const DefaultHydrationLane: Lane = /*            */ 0b0000000000000000000000000001000;\nexport const DefaultLane: Lane = /*                     */ 0b0000000000000000000000000010000;\n\nconst TransitionHydrationLane: Lane = /*                */ 0b0000000000000000000000000100000;\nconst TransitionLanes: Lanes = /*                       */ 0b0000000001111111111111111000000;\nconst TransitionLane1: Lane = /*                        */ 0b0000000000000000000000001000000;\nconst TransitionLane2: Lane = /*                        */ 0b0000000000000000000000010000000;\nconst TransitionLane3: Lane = /*                        */ 0b0000000000000000000000100000000;\nconst TransitionLane4: Lane = /*                        */ 0b0000000000000000000001000000000;\nconst TransitionLane5: Lane = /*                        */ 0b0000000000000000000010000000000;\nconst TransitionLane6: Lane = /*                        */ 0b0000000000000000000100000000000;\nconst TransitionLane7: Lane = /*                        */ 0b0000000000000000001000000000000;\nconst TransitionLane8: Lane = /*                        */ 0b0000000000000000010000000000000;\nconst TransitionLane9: Lane = /*                        */ 0b0000000000000000100000000000000;\nconst TransitionLane10: Lane = /*                       */ 0b0000000000000001000000000000000;\nconst TransitionLane11: Lane = /*                       */ 0b0000000000000010000000000000000;\nconst TransitionLane12: Lane = /*                       */ 0b0000000000000100000000000000000;\nconst TransitionLane13: Lane = /*                       */ 0b0000000000001000000000000000000;\nconst TransitionLane14: Lane = /*                       */ 0b0000000000010000000000000000000;\nconst TransitionLane15: Lane = /*                       */ 0b0000000000100000000000000000000;\nconst TransitionLane16: Lane = /*                       */ 0b0000000001000000000000000000000;\n\nconst RetryLanes: Lanes = /*                            */ 0b0000111110000000000000000000000;\nconst RetryLane1: Lane = /*                             */ 0b0000000010000000000000000000000;\nconst RetryLane2: Lane = /*                             */ 0b0000000100000000000000000000000;\nconst RetryLane3: Lane = /*                             */ 0b0000001000000000000000000000000;\nconst RetryLane4: Lane = /*                             */ 0b0000010000000000000000000000000;\nconst RetryLane5: Lane = /*                             */ 0b0000100000000000000000000000000;\n\nexport const SomeRetryLane: Lane = RetryLane1;\n\nexport const SelectiveHydrationLane: Lane = /*          */ 0b0001000000000000000000000000000;\n\nconst NonIdleLanes: Lanes = /*                          */ 0b0001111111111111111111111111111;\n\nexport const IdleHydrationLane: Lane = /*               */ 0b0010000000000000000000000000000;\nexport const IdleLane: Lane = /*                        */ 0b0100000000000000000000000000000;\n\nexport const OffscreenLane: Lane = /*                   */ 0b1000000000000000000000000000000;\n\n// This function is used for the experimental timeline (react-devtools-timeline)\n// It should be kept in sync with the Lanes values above.\nexport function getLabelForLane(lane: Lane): string | void {\n  if (enableSchedulingProfiler) {\n    if (lane & SyncLane) {\n      return 'Sync';\n    }\n    if (lane & InputContinuousHydrationLane) {\n      return 'InputContinuousHydration';\n    }\n    if (lane & InputContinuousLane) {\n      return 'InputContinuous';\n    }\n    if (lane & DefaultHydrationLane) {\n      return 'DefaultHydration';\n    }\n    if (lane & DefaultLane) {\n      return 'Default';\n    }\n    if (lane & TransitionHydrationLane) {\n      return 'TransitionHydration';\n    }\n    if (lane & TransitionLanes) {\n      return 'Transition';\n    }\n    if (lane & RetryLanes) {\n      return 'Retry';\n    }\n    if (lane & SelectiveHydrationLane) {\n      return 'SelectiveHydration';\n    }\n    if (lane & IdleHydrationLane) {\n      return 'IdleHydration';\n    }\n    if (lane & IdleLane) {\n      return 'Idle';\n    }\n    if (lane & OffscreenLane) {\n      return 'Offscreen';\n    }\n  }\n}\n\nexport const NoTimestamp = -1;\n\nlet nextTransitionLane: Lane = TransitionLane1;\nlet nextRetryLane: Lane = RetryLane1;\n\nfunction getHighestPriorityLanes(lanes: Lanes | Lane): Lanes {\n  switch (getHighestPriorityLane(lanes)) {\n    case SyncLane:\n      return SyncLane;\n    case InputContinuousHydrationLane:\n      return InputContinuousHydrationLane;\n    case InputContinuousLane:\n      return InputContinuousLane;\n    case DefaultHydrationLane:\n      return DefaultHydrationLane;\n    case DefaultLane:\n      return DefaultLane;\n    case TransitionHydrationLane:\n      return TransitionHydrationLane;\n    case TransitionLane1:\n    case TransitionLane2:\n    case TransitionLane3:\n    case TransitionLane4:\n    case TransitionLane5:\n    case TransitionLane6:\n    case TransitionLane7:\n    case TransitionLane8:\n    case TransitionLane9:\n    case TransitionLane10:\n    case TransitionLane11:\n    case TransitionLane12:\n    case TransitionLane13:\n    case TransitionLane14:\n    case TransitionLane15:\n    case TransitionLane16:\n      return lanes & TransitionLanes;\n    case RetryLane1:\n    case RetryLane2:\n    case RetryLane3:\n    case RetryLane4:\n    case RetryLane5:\n      return lanes & RetryLanes;\n    case SelectiveHydrationLane:\n      return SelectiveHydrationLane;\n    case IdleHydrationLane:\n      return IdleHydrationLane;\n    case IdleLane:\n      return IdleLane;\n    case OffscreenLane:\n      return OffscreenLane;\n    default:\n      if (__DEV__) {\n        console.error(\n          'Should have found matching lanes. This is a bug in React.',\n        );\n      }\n      // This shouldn't be reachable, but as a fallback, return the entire bitmask.\n      return lanes;\n  }\n}\n\nexport function getNextLanes(root: FiberRoot, wipLanes: Lanes): Lanes {\n  // Early bailout if there's no pending work left.\n  const pendingLanes = root.pendingLanes;\n  if (pendingLanes === NoLanes) {\n    return NoLanes;\n  }\n\n  let nextLanes = NoLanes;\n\n  const suspendedLanes = root.suspendedLanes;\n  const pingedLanes = root.pingedLanes;\n\n  // Do not work on any idle work until all the non-idle work has finished,\n  // even if the work is suspended.\n  const nonIdlePendingLanes = pendingLanes & NonIdleLanes;\n  if (nonIdlePendingLanes !== NoLanes) {\n    const nonIdleUnblockedLanes = nonIdlePendingLanes & ~suspendedLanes;\n    if (nonIdleUnblockedLanes !== NoLanes) {\n      nextLanes = getHighestPriorityLanes(nonIdleUnblockedLanes);\n    } else {\n      const nonIdlePingedLanes = nonIdlePendingLanes & pingedLanes;\n      if (nonIdlePingedLanes !== NoLanes) {\n        nextLanes = getHighestPriorityLanes(nonIdlePingedLanes);\n      }\n    }\n  } else {\n    // The only remaining work is Idle.\n    const unblockedLanes = pendingLanes & ~suspendedLanes;\n    if (unblockedLanes !== NoLanes) {\n      nextLanes = getHighestPriorityLanes(unblockedLanes);\n    } else {\n      if (pingedLanes !== NoLanes) {\n        nextLanes = getHighestPriorityLanes(pingedLanes);\n      }\n    }\n  }\n\n  if (nextLanes === NoLanes) {\n    // This should only be reachable if we're suspended\n    // TODO: Consider warning in this path if a fallback timer is not scheduled.\n    return NoLanes;\n  }\n\n  // If we're already in the middle of a render, switching lanes will interrupt\n  // it and we'll lose our progress. We should only do this if the new lanes are\n  // higher priority.\n  if (\n    wipLanes !== NoLanes &&\n    wipLanes !== nextLanes &&\n    // If we already suspended with a delay, then interrupting is fine. Don't\n    // bother waiting until the root is complete.\n    (wipLanes & suspendedLanes) === NoLanes\n  ) {\n    const nextLane = getHighestPriorityLane(nextLanes);\n    const wipLane = getHighestPriorityLane(wipLanes);\n    if (\n      // Tests whether the next lane is equal or lower priority than the wip\n      // one. This works because the bits decrease in priority as you go left.\n      nextLane >= wipLane ||\n      // Default priority updates should not interrupt transition updates. The\n      // only difference between default updates and transition updates is that\n      // default updates do not support refresh transitions.\n      (nextLane === DefaultLane && (wipLane & TransitionLanes) !== NoLanes)\n    ) {\n      // Keep working on the existing in-progress tree. Do not interrupt.\n      return wipLanes;\n    }\n  }\n\n  if (\n    allowConcurrentByDefault &&\n    (root.current.mode & ConcurrentUpdatesByDefaultMode) !== NoMode\n  ) {\n    // Do nothing, use the lanes as they were assigned.\n  } else if ((nextLanes & InputContinuousLane) !== NoLanes) {\n    // When updates are sync by default, we entangle continuous priority updates\n    // and default updates, so they render in the same batch. The only reason\n    // they use separate lanes is because continuous updates should interrupt\n    // transitions, but default updates should not.\n    nextLanes |= pendingLanes & DefaultLane;\n  }\n\n  // Check for entangled lanes and add them to the batch.\n  //\n  // A lane is said to be entangled with another when it's not allowed to render\n  // in a batch that does not also include the other lane. Typically we do this\n  // when multiple updates have the same source, and we only want to respond to\n  // the most recent event from that source.\n  //\n  // Note that we apply entanglements *after* checking for partial work above.\n  // This means that if a lane is entangled during an interleaved event while\n  // it's already rendering, we won't interrupt it. This is intentional, since\n  // entanglement is usually \"best effort\": we'll try our best to render the\n  // lanes in the same batch, but it's not worth throwing out partially\n  // completed work in order to do it.\n  // TODO: Reconsider this. The counter-argument is that the partial work\n  // represents an intermediate state, which we don't want to show to the user.\n  // And by spending extra time finishing it, we're increasing the amount of\n  // time it takes to show the final state, which is what they are actually\n  // waiting for.\n  //\n  // For those exceptions where entanglement is semantically important, like\n  // useMutableSource, we should ensure that there is no partial work at the\n  // time we apply the entanglement.\n  const entangledLanes = root.entangledLanes;\n  if (entangledLanes !== NoLanes) {\n    const entanglements = root.entanglements;\n    let lanes = nextLanes & entangledLanes;\n    while (lanes > 0) {\n      const index = pickArbitraryLaneIndex(lanes);\n      const lane = 1 << index;\n\n      nextLanes |= entanglements[index];\n\n      lanes &= ~lane;\n    }\n  }\n\n  return nextLanes;\n}\n\nexport function getMostRecentEventTime(root: FiberRoot, lanes: Lanes): number {\n  const eventTimes = root.eventTimes;\n\n  let mostRecentEventTime = NoTimestamp;\n  while (lanes > 0) {\n    const index = pickArbitraryLaneIndex(lanes);\n    const lane = 1 << index;\n\n    const eventTime = eventTimes[index];\n    if (eventTime > mostRecentEventTime) {\n      mostRecentEventTime = eventTime;\n    }\n\n    lanes &= ~lane;\n  }\n\n  return mostRecentEventTime;\n}\n\nfunction computeExpirationTime(lane: Lane, currentTime: number) {\n  switch (lane) {\n    case SyncLane:\n    case InputContinuousHydrationLane:\n    case InputContinuousLane:\n      // User interactions should expire slightly more quickly.\n      //\n      // NOTE: This is set to the corresponding constant as in Scheduler.js.\n      // When we made it larger, a product metric in www regressed, suggesting\n      // there's a user interaction that's being starved by a series of\n      // synchronous updates. If that theory is correct, the proper solution is\n      // to fix the starvation. However, this scenario supports the idea that\n      // expiration times are an important safeguard when starvation\n      // does happen.\n      return currentTime + 250;\n    case DefaultHydrationLane:\n    case DefaultLane:\n    case TransitionHydrationLane:\n    case TransitionLane1:\n    case TransitionLane2:\n    case TransitionLane3:\n    case TransitionLane4:\n    case TransitionLane5:\n    case TransitionLane6:\n    case TransitionLane7:\n    case TransitionLane8:\n    case TransitionLane9:\n    case TransitionLane10:\n    case TransitionLane11:\n    case TransitionLane12:\n    case TransitionLane13:\n    case TransitionLane14:\n    case TransitionLane15:\n    case TransitionLane16:\n      return currentTime + 5000;\n    case RetryLane1:\n    case RetryLane2:\n    case RetryLane3:\n    case RetryLane4:\n    case RetryLane5:\n      // TODO: Retries should be allowed to expire if they are CPU bound for\n      // too long, but when I made this change it caused a spike in browser\n      // crashes. There must be some other underlying bug; not super urgent but\n      // ideally should figure out why and fix it. Unfortunately we don't have\n      // a repro for the crashes, only detected via production metrics.\n      return NoTimestamp;\n    case SelectiveHydrationLane:\n    case IdleHydrationLane:\n    case IdleLane:\n    case OffscreenLane:\n      // Anything idle priority or lower should never expire.\n      return NoTimestamp;\n    default:\n      if (__DEV__) {\n        console.error(\n          'Should have found matching lanes. This is a bug in React.',\n        );\n      }\n      return NoTimestamp;\n  }\n}\n\nexport function markStarvedLanesAsExpired(\n  root: FiberRoot,\n  currentTime: number,\n): void {\n  // TODO: This gets called every time we yield. We can optimize by storing\n  // the earliest expiration time on the root. Then use that to quickly bail out\n  // of this function.\n\n  const pendingLanes = root.pendingLanes;\n  const suspendedLanes = root.suspendedLanes;\n  const pingedLanes = root.pingedLanes;\n  const expirationTimes = root.expirationTimes;\n\n  // Iterate through the pending lanes and check if we've reached their\n  // expiration time. If so, we'll assume the update is being starved and mark\n  // it as expired to force it to finish.\n  let lanes = pendingLanes;\n  while (lanes > 0) {\n    const index = pickArbitraryLaneIndex(lanes);\n    const lane = 1 << index;\n\n    const expirationTime = expirationTimes[index];\n    if (expirationTime === NoTimestamp) {\n      // Found a pending lane with no expiration time. If it's not suspended, or\n      // if it's pinged, assume it's CPU-bound. Compute a new expiration time\n      // using the current time.\n      if (\n        (lane & suspendedLanes) === NoLanes ||\n        (lane & pingedLanes) !== NoLanes\n      ) {\n        // Assumes timestamps are monotonically increasing.\n        expirationTimes[index] = computeExpirationTime(lane, currentTime);\n      }\n    } else if (expirationTime <= currentTime) {\n      // This lane expired\n      root.expiredLanes |= lane;\n    }\n\n    lanes &= ~lane;\n  }\n}\n\n// This returns the highest priority pending lanes regardless of whether they\n// are suspended.\nexport function getHighestPriorityPendingLanes(root: FiberRoot) {\n  return getHighestPriorityLanes(root.pendingLanes);\n}\n\nexport function getLanesToRetrySynchronouslyOnError(root: FiberRoot): Lanes {\n  const everythingButOffscreen = root.pendingLanes & ~OffscreenLane;\n  if (everythingButOffscreen !== NoLanes) {\n    return everythingButOffscreen;\n  }\n  if (everythingButOffscreen & OffscreenLane) {\n    return OffscreenLane;\n  }\n  return NoLanes;\n}\n\nexport function includesSyncLane(lanes: Lanes) {\n  return (lanes & SyncLane) !== NoLanes;\n}\n\nexport function includesNonIdleWork(lanes: Lanes) {\n  return (lanes & NonIdleLanes) !== NoLanes;\n}\nexport function includesOnlyRetries(lanes: Lanes) {\n  return (lanes & RetryLanes) === lanes;\n}\nexport function includesOnlyNonUrgentLanes(lanes: Lanes) {\n  const UrgentLanes = SyncLane | InputContinuousLane | DefaultLane;\n  return (lanes & UrgentLanes) === NoLanes;\n}\nexport function includesOnlyTransitions(lanes: Lanes) {\n  return (lanes & TransitionLanes) === lanes;\n}\n\nexport function includesBlockingLane(root: FiberRoot, lanes: Lanes) {\n  if (\n    allowConcurrentByDefault &&\n    (root.current.mode & ConcurrentUpdatesByDefaultMode) !== NoMode\n  ) {\n    // Concurrent updates by default always use time slicing.\n    return false;\n  }\n  const SyncDefaultLanes =\n    InputContinuousHydrationLane |\n    InputContinuousLane |\n    DefaultHydrationLane |\n    DefaultLane;\n  return (lanes & SyncDefaultLanes) !== NoLanes;\n}\n\nexport function includesExpiredLane(root: FiberRoot, lanes: Lanes) {\n  // This is a separate check from includesBlockingLane because a lane can\n  // expire after a render has already started.\n  return (lanes & root.expiredLanes) !== NoLanes;\n}\n\nexport function isTransitionLane(lane: Lane) {\n  return (lane & TransitionLanes) !== NoLanes;\n}\n\nexport function claimNextTransitionLane(): Lane {\n  // Cycle through the lanes, assigning each new transition to the next lane.\n  // In most cases, this means every transition gets its own lane, until we\n  // run out of lanes and cycle back to the beginning.\n  const lane = nextTransitionLane;\n  nextTransitionLane <<= 1;\n  if ((nextTransitionLane & TransitionLanes) === NoLanes) {\n    nextTransitionLane = TransitionLane1;\n  }\n  return lane;\n}\n\nexport function claimNextRetryLane(): Lane {\n  const lane = nextRetryLane;\n  nextRetryLane <<= 1;\n  if ((nextRetryLane & RetryLanes) === NoLanes) {\n    nextRetryLane = RetryLane1;\n  }\n  return lane;\n}\n\nexport function getHighestPriorityLane(lanes: Lanes): Lane {\n  return lanes & -lanes;\n}\n\nexport function pickArbitraryLane(lanes: Lanes): Lane {\n  // This wrapper function gets inlined. Only exists so to communicate that it\n  // doesn't matter which bit is selected; you can pick any bit without\n  // affecting the algorithms where its used. Here I'm using\n  // getHighestPriorityLane because it requires the fewest operations.\n  return getHighestPriorityLane(lanes);\n}\n\nfunction pickArbitraryLaneIndex(lanes: Lanes) {\n  return 31 - clz32(lanes);\n}\n\nfunction laneToIndex(lane: Lane) {\n  return pickArbitraryLaneIndex(lane);\n}\n\nexport function includesSomeLane(a: Lanes | Lane, b: Lanes | Lane) {\n  return (a & b) !== NoLanes;\n}\n\nexport function isSubsetOfLanes(set: Lanes, subset: Lanes | Lane) {\n  return (set & subset) === subset;\n}\n\nexport function mergeLanes(a: Lanes | Lane, b: Lanes | Lane): Lanes {\n  return a | b;\n}\n\nexport function removeLanes(set: Lanes, subset: Lanes | Lane): Lanes {\n  return set & ~subset;\n}\n\nexport function intersectLanes(a: Lanes | Lane, b: Lanes | Lane): Lanes {\n  return a & b;\n}\n\n// Seems redundant, but it changes the type from a single lane (used for\n// updates) to a group of lanes (used for flushing work).\nexport function laneToLanes(lane: Lane): Lanes {\n  return lane;\n}\n\nexport function higherPriorityLane(a: Lane, b: Lane) {\n  // This works because the bit ranges decrease in priority as you go left.\n  return a !== NoLane && a < b ? a : b;\n}\n\nexport function createLaneMap<T>(initial: T): LaneMap<T> {\n  // Intentionally pushing one by one.\n  // https://v8.dev/blog/elements-kinds#avoid-creating-holes\n  const laneMap = [];\n  for (let i = 0; i < TotalLanes; i++) {\n    laneMap.push(initial);\n  }\n  return laneMap;\n}\n\nexport function markRootUpdated(\n  root: FiberRoot,\n  updateLane: Lane,\n  eventTime: number,\n) {\n  root.pendingLanes |= updateLane;\n\n  // If there are any suspended transitions, it's possible this new update\n  // could unblock them. Clear the suspended lanes so that we can try rendering\n  // them again.\n  //\n  // TODO: We really only need to unsuspend only lanes that are in the\n  // `subtreeLanes` of the updated fiber, or the update lanes of the return\n  // path. This would exclude suspended updates in an unrelated sibling tree,\n  // since there's no way for this update to unblock it.\n  //\n  // We don't do this if the incoming update is idle, because we never process\n  // idle updates until after all the regular updates have finished; there's no\n  // way it could unblock a transition.\n  if (updateLane !== IdleLane) {\n    root.suspendedLanes = NoLanes;\n    root.pingedLanes = NoLanes;\n  }\n\n  const eventTimes = root.eventTimes;\n  const index = laneToIndex(updateLane);\n  // We can always overwrite an existing timestamp because we prefer the most\n  // recent event, and we assume time is monotonically increasing.\n  eventTimes[index] = eventTime;\n}\n\nexport function markRootSuspended(root: FiberRoot, suspendedLanes: Lanes) {\n  root.suspendedLanes |= suspendedLanes;\n  root.pingedLanes &= ~suspendedLanes;\n\n  // The suspended lanes are no longer CPU-bound. Clear their expiration times.\n  const expirationTimes = root.expirationTimes;\n  let lanes = suspendedLanes;\n  while (lanes > 0) {\n    const index = pickArbitraryLaneIndex(lanes);\n    const lane = 1 << index;\n\n    expirationTimes[index] = NoTimestamp;\n\n    lanes &= ~lane;\n  }\n}\n\nexport function markRootPinged(\n  root: FiberRoot,\n  pingedLanes: Lanes,\n  eventTime: number,\n) {\n  root.pingedLanes |= root.suspendedLanes & pingedLanes;\n}\n\nexport function markRootMutableRead(root: FiberRoot, updateLane: Lane) {\n  root.mutableReadLanes |= updateLane & root.pendingLanes;\n}\n\nexport function markRootFinished(root: FiberRoot, remainingLanes: Lanes) {\n  const noLongerPendingLanes = root.pendingLanes & ~remainingLanes;\n\n  root.pendingLanes = remainingLanes;\n\n  // Let's try everything again\n  root.suspendedLanes = NoLanes;\n  root.pingedLanes = NoLanes;\n\n  root.expiredLanes &= remainingLanes;\n  root.mutableReadLanes &= remainingLanes;\n\n  root.entangledLanes &= remainingLanes;\n\n  const entanglements = root.entanglements;\n  const eventTimes = root.eventTimes;\n  const expirationTimes = root.expirationTimes;\n\n  // Clear the lanes that no longer have pending work\n  let lanes = noLongerPendingLanes;\n  while (lanes > 0) {\n    const index = pickArbitraryLaneIndex(lanes);\n    const lane = 1 << index;\n\n    entanglements[index] = NoLanes;\n    eventTimes[index] = NoTimestamp;\n    expirationTimes[index] = NoTimestamp;\n\n    lanes &= ~lane;\n  }\n}\n\nexport function markRootEntangled(root: FiberRoot, entangledLanes: Lanes) {\n  // In addition to entangling each of the given lanes with each other, we also\n  // have to consider _transitive_ entanglements. For each lane that is already\n  // entangled with *any* of the given lanes, that lane is now transitively\n  // entangled with *all* the given lanes.\n  //\n  // Translated: If C is entangled with A, then entangling A with B also\n  // entangles C with B.\n  //\n  // If this is hard to grasp, it might help to intentionally break this\n  // function and look at the tests that fail in ReactTransition-test.js. Try\n  // commenting out one of the conditions below.\n\n  const rootEntangledLanes = (root.entangledLanes |= entangledLanes);\n  const entanglements = root.entanglements;\n  let lanes = rootEntangledLanes;\n  while (lanes) {\n    const index = pickArbitraryLaneIndex(lanes);\n    const lane = 1 << index;\n    if (\n      // Is this one of the newly entangled lanes?\n      (lane & entangledLanes) |\n      // Is this lane transitively entangled with the newly entangled lanes?\n      (entanglements[index] & entangledLanes)\n    ) {\n      entanglements[index] |= entangledLanes;\n    }\n    lanes &= ~lane;\n  }\n}\n\nexport function getBumpedLaneForHydration(\n  root: FiberRoot,\n  renderLanes: Lanes,\n): Lane {\n  const renderLane = getHighestPriorityLane(renderLanes);\n\n  let lane;\n  switch (renderLane) {\n    case InputContinuousLane:\n      lane = InputContinuousHydrationLane;\n      break;\n    case DefaultLane:\n      lane = DefaultHydrationLane;\n      break;\n    case TransitionLane1:\n    case TransitionLane2:\n    case TransitionLane3:\n    case TransitionLane4:\n    case TransitionLane5:\n    case TransitionLane6:\n    case TransitionLane7:\n    case TransitionLane8:\n    case TransitionLane9:\n    case TransitionLane10:\n    case TransitionLane11:\n    case TransitionLane12:\n    case TransitionLane13:\n    case TransitionLane14:\n    case TransitionLane15:\n    case TransitionLane16:\n    case RetryLane1:\n    case RetryLane2:\n    case RetryLane3:\n    case RetryLane4:\n    case RetryLane5:\n      lane = TransitionHydrationLane;\n      break;\n    case IdleLane:\n      lane = IdleHydrationLane;\n      break;\n    default:\n      // Everything else is already either a hydration lane, or shouldn't\n      // be retried at a hydration lane.\n      lane = NoLane;\n      break;\n  }\n\n  // Check if the lane we chose is suspended. If so, that indicates that we\n  // already attempted and failed to hydrate at that level. Also check if we're\n  // already rendering that lane, which is rare but could happen.\n  if ((lane & (root.suspendedLanes | renderLanes)) !== NoLane) {\n    // Give up trying to hydrate and fall back to client render.\n    return NoLane;\n  }\n\n  return lane;\n}\n\nexport function addFiberToLanesMap(\n  root: FiberRoot,\n  fiber: Fiber,\n  lanes: Lanes | Lane,\n) {\n  if (!enableUpdaterTracking) {\n    return;\n  }\n  if (!isDevToolsPresent) {\n    return;\n  }\n  const pendingUpdatersLaneMap = root.pendingUpdatersLaneMap;\n  while (lanes > 0) {\n    const index = laneToIndex(lanes);\n    const lane = 1 << index;\n\n    const updaters = pendingUpdatersLaneMap[index];\n    updaters.add(fiber);\n\n    lanes &= ~lane;\n  }\n}\n\nexport function movePendingFibersToMemoized(root: FiberRoot, lanes: Lanes) {\n  if (!enableUpdaterTracking) {\n    return;\n  }\n  if (!isDevToolsPresent) {\n    return;\n  }\n  const pendingUpdatersLaneMap = root.pendingUpdatersLaneMap;\n  const memoizedUpdaters = root.memoizedUpdaters;\n  while (lanes > 0) {\n    const index = laneToIndex(lanes);\n    const lane = 1 << index;\n\n    const updaters = pendingUpdatersLaneMap[index];\n    if (updaters.size > 0) {\n      updaters.forEach(fiber => {\n        const alternate = fiber.alternate;\n        if (alternate === null || !memoizedUpdaters.has(alternate)) {\n          memoizedUpdaters.add(fiber);\n        }\n      });\n      updaters.clear();\n    }\n\n    lanes &= ~lane;\n  }\n}\n\nexport function addTransitionToLanesMap(\n  root: FiberRoot,\n  transition: Transition,\n  lane: Lane,\n) {\n  if (enableTransitionTracing) {\n    const transitionLanesMap = root.transitionLanes;\n    const index = laneToIndex(lane);\n    let transitions = transitionLanesMap[index];\n    if (transitions === null) {\n      transitions = [];\n    }\n    transitions.push(transition);\n\n    transitionLanesMap[index] = transitions;\n  }\n}\n\nexport function getTransitionsForLanes(\n  root: FiberRoot,\n  lanes: Lane | Lanes,\n): Array<Transition> | null {\n  if (!enableTransitionTracing) {\n    return null;\n  }\n\n  const transitionsForLanes = [];\n  while (lanes > 0) {\n    const index = laneToIndex(lanes);\n    const lane = 1 << index;\n    const transitions = root.transitionLanes[index];\n    if (transitions !== null) {\n      transitions.forEach(transition => {\n        transitionsForLanes.push(transition);\n      });\n    }\n\n    lanes &= ~lane;\n  }\n\n  if (transitionsForLanes.length === 0) {\n    return null;\n  }\n\n  return transitionsForLanes;\n}\n\nexport function clearTransitionsForLanes(root: FiberRoot, lanes: Lane | Lanes) {\n  if (!enableTransitionTracing) {\n    return;\n  }\n\n  while (lanes > 0) {\n    const index = laneToIndex(lanes);\n    const lane = 1 << index;\n\n    const transitions = root.transitionLanes[index];\n    if (transitions !== null) {\n      root.transitionLanes[index] = null;\n    }\n\n    lanes &= ~lane;\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Lane, Lanes} from './ReactFiberLane.old';\n\nimport {\n  NoLane,\n  SyncLane,\n  InputContinuousLane,\n  DefaultLane,\n  IdleLane,\n  getHighestPriorityLane,\n  includesNonIdleWork,\n} from './ReactFiberLane.old';\n\nexport opaque type EventPriority = Lane;\n\nexport const DiscreteEventPriority: EventPriority = SyncLane;\nexport const ContinuousEventPriority: EventPriority = InputContinuousLane;\nexport const DefaultEventPriority: EventPriority = DefaultLane;\nexport const IdleEventPriority: EventPriority = IdleLane;\n\nlet currentUpdatePriority: EventPriority = NoLane;\n\nexport function getCurrentUpdatePriority(): EventPriority {\n  return currentUpdatePriority;\n}\n\nexport function setCurrentUpdatePriority(newPriority: EventPriority) {\n  currentUpdatePriority = newPriority;\n}\n\nexport function runWithPriority<T>(priority: EventPriority, fn: () => T): T {\n  const previousPriority = currentUpdatePriority;\n  try {\n    currentUpdatePriority = priority;\n    return fn();\n  } finally {\n    currentUpdatePriority = previousPriority;\n  }\n}\n\nexport function higherEventPriority(\n  a: EventPriority,\n  b: EventPriority,\n): EventPriority {\n  return a !== 0 && a < b ? a : b;\n}\n\nexport function lowerEventPriority(\n  a: EventPriority,\n  b: EventPriority,\n): EventPriority {\n  return a === 0 || a > b ? a : b;\n}\n\nexport function isHigherEventPriority(\n  a: EventPriority,\n  b: EventPriority,\n): boolean {\n  return a !== 0 && a < b;\n}\n\nexport function lanesToEventPriority(lanes: Lanes): EventPriority {\n  const lane = getHighestPriorityLane(lanes);\n  if (!isHigherEventPriority(DiscreteEventPriority, lane)) {\n    return DiscreteEventPriority;\n  }\n  if (!isHigherEventPriority(ContinuousEventPriority, lane)) {\n    return ContinuousEventPriority;\n  }\n  if (includesNonIdleWork(lane)) {\n    return DefaultEventPriority;\n  }\n  return IdleEventPriority;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\n// Renderers that don't support hydration\n// can re-export everything from this module.\n\nfunction shim(...args: any) {\n  throw new Error(\n    'The current renderer does not support hydration. ' +\n      'This error is likely caused by a bug in React. ' +\n      'Please file an issue.',\n  );\n}\n\n// Hydration (when unsupported)\nexport type SuspenseInstance = mixed;\nexport const supportsHydration = false;\nexport const canHydrateInstance = shim;\nexport const canHydrateTextInstance = shim;\nexport const canHydrateSuspenseInstance = shim;\nexport const isSuspenseInstancePending = shim;\nexport const isSuspenseInstanceFallback = shim;\nexport const getSuspenseInstanceFallbackErrorDetails = shim;\nexport const registerSuspenseInstanceRetry = shim;\nexport const getNextHydratableSibling = shim;\nexport const getFirstHydratableChild = shim;\nexport const getFirstHydratableChildWithinContainer = shim;\nexport const getFirstHydratableChildWithinSuspenseInstance = shim;\nexport const hydrateInstance = shim;\nexport const hydrateTextInstance = shim;\nexport const hydrateSuspenseInstance = shim;\nexport const getNextHydratableInstanceAfterSuspenseInstance = shim;\nexport const commitHydratedContainer = shim;\nexport const commitHydratedSuspenseInstance = shim;\nexport const clearSuspenseBoundary = shim;\nexport const clearSuspenseBoundaryFromContainer = shim;\nexport const shouldDeleteUnhydratedTailInstances = shim;\nexport const didNotMatchHydratedContainerTextInstance = shim;\nexport const didNotMatchHydratedTextInstance = shim;\nexport const didNotHydrateInstanceWithinContainer = shim;\nexport const didNotHydrateInstanceWithinSuspenseInstance = shim;\nexport const didNotHydrateInstance = shim;\nexport const didNotFindHydratableInstanceWithinContainer = shim;\nexport const didNotFindHydratableTextInstanceWithinContainer = shim;\nexport const didNotFindHydratableSuspenseInstanceWithinContainer = shim;\nexport const didNotFindHydratableInstanceWithinSuspenseInstance = shim;\nexport const didNotFindHydratableTextInstanceWithinSuspenseInstance = shim;\nexport const didNotFindHydratableSuspenseInstanceWithinSuspenseInstance = shim;\nexport const didNotFindHydratableInstance = shim;\nexport const didNotFindHydratableTextInstance = shim;\nexport const didNotFindHydratableSuspenseInstance = shim;\nexport const errorHydratingContainer = shim;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport Transform from 'art/core/transform';\nimport Mode from 'art/modes/current';\n\nimport {TYPES, EVENT_TYPES, childrenAsString} from './ReactARTInternals';\n\nimport {DefaultEventPriority} from 'react-reconciler/src/ReactEventPriorities';\n\nconst pooledTransform = new Transform();\n\nconst NO_CONTEXT = {};\nconst UPDATE_SIGNAL = {};\nif (__DEV__) {\n  Object.freeze(NO_CONTEXT);\n  Object.freeze(UPDATE_SIGNAL);\n}\n\n/** Helper Methods */\n\nfunction addEventListeners(instance, type, listener) {\n  // We need to explicitly unregister before unmount.\n  // For this reason we need to track subscriptions.\n  if (!instance._listeners) {\n    instance._listeners = {};\n    instance._subscriptions = {};\n  }\n\n  instance._listeners[type] = listener;\n\n  if (listener) {\n    if (!instance._subscriptions[type]) {\n      instance._subscriptions[type] = instance.subscribe(\n        type,\n        createEventHandler(instance),\n        instance,\n      );\n    }\n  } else {\n    if (instance._subscriptions[type]) {\n      instance._subscriptions[type]();\n      delete instance._subscriptions[type];\n    }\n  }\n}\n\nfunction createEventHandler(instance) {\n  return function handleEvent(event) {\n    const listener = instance._listeners[event.type];\n\n    if (!listener) {\n      // Noop\n    } else if (typeof listener === 'function') {\n      listener.call(instance, event);\n    } else if (listener.handleEvent) {\n      listener.handleEvent(event);\n    }\n  };\n}\n\nfunction destroyEventListeners(instance) {\n  if (instance._subscriptions) {\n    for (const type in instance._subscriptions) {\n      instance._subscriptions[type]();\n    }\n  }\n\n  instance._subscriptions = null;\n  instance._listeners = null;\n}\n\nfunction getScaleX(props) {\n  if (props.scaleX != null) {\n    return props.scaleX;\n  } else if (props.scale != null) {\n    return props.scale;\n  } else {\n    return 1;\n  }\n}\n\nfunction getScaleY(props) {\n  if (props.scaleY != null) {\n    return props.scaleY;\n  } else if (props.scale != null) {\n    return props.scale;\n  } else {\n    return 1;\n  }\n}\n\nfunction isSameFont(oldFont, newFont) {\n  if (oldFont === newFont) {\n    return true;\n  } else if (typeof newFont === 'string' || typeof oldFont === 'string') {\n    return false;\n  } else {\n    return (\n      newFont.fontSize === oldFont.fontSize &&\n      newFont.fontStyle === oldFont.fontStyle &&\n      newFont.fontVariant === oldFont.fontVariant &&\n      newFont.fontWeight === oldFont.fontWeight &&\n      newFont.fontFamily === oldFont.fontFamily\n    );\n  }\n}\n\n/** Render Methods */\n\nfunction applyClippingRectangleProps(instance, props, prevProps = {}) {\n  applyNodeProps(instance, props, prevProps);\n\n  instance.width = props.width;\n  instance.height = props.height;\n}\n\nfunction applyGroupProps(instance, props, prevProps = {}) {\n  applyNodeProps(instance, props, prevProps);\n\n  instance.width = props.width;\n  instance.height = props.height;\n}\n\nfunction applyNodeProps(instance, props, prevProps = {}) {\n  const scaleX = getScaleX(props);\n  const scaleY = getScaleY(props);\n\n  pooledTransform\n    .transformTo(1, 0, 0, 1, 0, 0)\n    .move(props.x || 0, props.y || 0)\n    .rotate(props.rotation || 0, props.originX, props.originY)\n    .scale(scaleX, scaleY, props.originX, props.originY);\n\n  if (props.transform != null) {\n    pooledTransform.transform(props.transform);\n  }\n\n  if (\n    instance.xx !== pooledTransform.xx ||\n    instance.yx !== pooledTransform.yx ||\n    instance.xy !== pooledTransform.xy ||\n    instance.yy !== pooledTransform.yy ||\n    instance.x !== pooledTransform.x ||\n    instance.y !== pooledTransform.y\n  ) {\n    instance.transformTo(pooledTransform);\n  }\n\n  if (props.cursor !== prevProps.cursor || props.title !== prevProps.title) {\n    instance.indicate(props.cursor, props.title);\n  }\n\n  if (instance.blend && props.opacity !== prevProps.opacity) {\n    instance.blend(props.opacity == null ? 1 : props.opacity);\n  }\n\n  if (props.visible !== prevProps.visible) {\n    if (props.visible == null || props.visible) {\n      instance.show();\n    } else {\n      instance.hide();\n    }\n  }\n\n  for (const type in EVENT_TYPES) {\n    addEventListeners(instance, EVENT_TYPES[type], props[type]);\n  }\n}\n\nfunction applyRenderableNodeProps(instance, props, prevProps = {}) {\n  applyNodeProps(instance, props, prevProps);\n\n  if (prevProps.fill !== props.fill) {\n    if (props.fill && props.fill.applyFill) {\n      props.fill.applyFill(instance);\n    } else {\n      instance.fill(props.fill);\n    }\n  }\n  if (\n    prevProps.stroke !== props.stroke ||\n    prevProps.strokeWidth !== props.strokeWidth ||\n    prevProps.strokeCap !== props.strokeCap ||\n    prevProps.strokeJoin !== props.strokeJoin ||\n    // TODO: Consider deep check of stokeDash; may benefit VML in IE.\n    prevProps.strokeDash !== props.strokeDash\n  ) {\n    instance.stroke(\n      props.stroke,\n      props.strokeWidth,\n      props.strokeCap,\n      props.strokeJoin,\n      props.strokeDash,\n    );\n  }\n}\n\nfunction applyShapeProps(instance, props, prevProps = {}) {\n  applyRenderableNodeProps(instance, props, prevProps);\n\n  const path = props.d || childrenAsString(props.children);\n\n  const prevDelta = instance._prevDelta;\n  const prevPath = instance._prevPath;\n\n  if (\n    path !== prevPath ||\n    path.delta !== prevDelta ||\n    prevProps.height !== props.height ||\n    prevProps.width !== props.width\n  ) {\n    instance.draw(path, props.width, props.height);\n\n    instance._prevDelta = path.delta;\n    instance._prevPath = path;\n  }\n}\n\nfunction applyTextProps(instance, props, prevProps = {}) {\n  applyRenderableNodeProps(instance, props, prevProps);\n\n  const string = props.children;\n\n  if (\n    instance._currentString !== string ||\n    !isSameFont(props.font, prevProps.font) ||\n    props.alignment !== prevProps.alignment ||\n    props.path !== prevProps.path\n  ) {\n    instance.draw(string, props.font, props.alignment, props.path);\n\n    instance._currentString = string;\n  }\n}\n\nexport * from 'react-reconciler/src/ReactFiberHostConfigWithNoPersistence';\nexport * from 'react-reconciler/src/ReactFiberHostConfigWithNoHydration';\nexport * from 'react-reconciler/src/ReactFiberHostConfigWithNoScopes';\nexport * from 'react-reconciler/src/ReactFiberHostConfigWithNoTestSelectors';\nexport * from 'react-reconciler/src/ReactFiberHostConfigWithNoMicrotasks';\n\nexport function appendInitialChild(parentInstance, child) {\n  if (typeof child === 'string') {\n    // Noop for string children of Text (eg <Text>{'foo'}{'bar'}</Text>)\n    throw new Error('Text children should already be flattened.');\n  }\n\n  child.inject(parentInstance);\n}\n\nexport function createInstance(type, props, internalInstanceHandle) {\n  let instance;\n\n  switch (type) {\n    case TYPES.CLIPPING_RECTANGLE:\n      instance = Mode.ClippingRectangle();\n      instance._applyProps = applyClippingRectangleProps;\n      break;\n    case TYPES.GROUP:\n      instance = Mode.Group();\n      instance._applyProps = applyGroupProps;\n      break;\n    case TYPES.SHAPE:\n      instance = Mode.Shape();\n      instance._applyProps = applyShapeProps;\n      break;\n    case TYPES.TEXT:\n      instance = Mode.Text(\n        props.children,\n        props.font,\n        props.alignment,\n        props.path,\n      );\n      instance._applyProps = applyTextProps;\n      break;\n  }\n\n  if (!instance) {\n    throw new Error(`ReactART does not support the type \"${type}\"`);\n  }\n\n  instance._applyProps(instance, props);\n\n  return instance;\n}\n\nexport function createTextInstance(\n  text,\n  rootContainerInstance,\n  internalInstanceHandle,\n) {\n  return text;\n}\n\nexport function finalizeInitialChildren(domElement, type, props) {\n  return false;\n}\n\nexport function getPublicInstance(instance) {\n  return instance;\n}\n\nexport function prepareForCommit() {\n  // Noop\n  return null;\n}\n\nexport function prepareUpdate(domElement, type, oldProps, newProps) {\n  return UPDATE_SIGNAL;\n}\n\nexport function resetAfterCommit() {\n  // Noop\n}\n\nexport function resetTextContent(domElement) {\n  // Noop\n}\n\nexport function getRootHostContext() {\n  return NO_CONTEXT;\n}\n\nexport function getChildHostContext() {\n  return NO_CONTEXT;\n}\n\nexport const scheduleTimeout = setTimeout;\nexport const cancelTimeout = clearTimeout;\nexport const noTimeout = -1;\n\nexport function shouldSetTextContent(type, props) {\n  return (\n    typeof props.children === 'string' || typeof props.children === 'number'\n  );\n}\n\nexport function getCurrentEventPriority() {\n  return DefaultEventPriority;\n}\n\n// The ART renderer is secondary to the React DOM renderer.\nexport const isPrimaryRenderer = false;\n\n// The ART renderer shouldn't trigger missing act() warnings\nexport const warnsIfNotActing = false;\n\nexport const supportsMutation = true;\n\nexport function appendChild(parentInstance, child) {\n  if (child.parentNode === parentInstance) {\n    child.eject();\n  }\n  child.inject(parentInstance);\n}\n\nexport function appendChildToContainer(parentInstance, child) {\n  if (child.parentNode === parentInstance) {\n    child.eject();\n  }\n  child.inject(parentInstance);\n}\n\nexport function insertBefore(parentInstance, child, beforeChild) {\n  if (child === beforeChild) {\n    throw new Error('ReactART: Can not insert node before itself');\n  }\n\n  child.injectBefore(beforeChild);\n}\n\nexport function insertInContainerBefore(parentInstance, child, beforeChild) {\n  if (child === beforeChild) {\n    throw new Error('ReactART: Can not insert node before itself');\n  }\n\n  child.injectBefore(beforeChild);\n}\n\nexport function removeChild(parentInstance, child) {\n  destroyEventListeners(child);\n  child.eject();\n}\n\nexport function removeChildFromContainer(parentInstance, child) {\n  destroyEventListeners(child);\n  child.eject();\n}\n\nexport function commitTextUpdate(textInstance, oldText, newText) {\n  // Noop\n}\n\nexport function commitMount(instance, type, newProps) {\n  // Noop\n}\n\nexport function commitUpdate(\n  instance,\n  updatePayload,\n  type,\n  oldProps,\n  newProps,\n) {\n  instance._applyProps(instance, newProps, oldProps);\n}\n\nexport function hideInstance(instance) {\n  instance.hide();\n}\n\nexport function hideTextInstance(textInstance) {\n  // Noop\n}\n\nexport function unhideInstance(instance, props) {\n  if (props.visible == null || props.visible) {\n    instance.show();\n  }\n}\n\nexport function unhideTextInstance(textInstance, text): void {\n  // Noop\n}\n\nexport function clearContainer(container) {\n  // TODO Implement this\n}\n\nexport function getInstanceFromNode(node) {\n  throw new Error('Not implemented.');\n}\n\nexport function beforeActiveInstanceBlur(internalInstanceHandle: Object) {\n  // noop\n}\n\nexport function afterActiveInstanceBlur() {\n  // noop\n}\n\nexport function preparePortalMount(portalInstance: any): void {\n  // noop\n}\n\nexport function detachDeletedInstance(node: Instance): void {\n  // noop\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Source} from 'shared/ReactElementType';\nimport type {LazyComponent} from 'react/src/ReactLazy';\n\nimport {\n  enableComponentStackLocations,\n  disableNativeComponentFrames,\n} from 'shared/ReactFeatureFlags';\n\nimport {\n  REACT_SUSPENSE_TYPE,\n  REACT_SUSPENSE_LIST_TYPE,\n  REACT_FORWARD_REF_TYPE,\n  REACT_MEMO_TYPE,\n  REACT_LAZY_TYPE,\n} from 'shared/ReactSymbols';\n\nimport {disableLogs, reenableLogs} from 'shared/ConsolePatchingDev';\n\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\n\nconst {ReactCurrentDispatcher} = ReactSharedInternals;\n\nlet prefix;\nexport function describeBuiltInComponentFrame(\n  name: string,\n  source: void | null | Source,\n  ownerFn: void | null | Function,\n): string {\n  if (enableComponentStackLocations) {\n    if (prefix === undefined) {\n      // Extract the VM specific prefix used by each line.\n      try {\n        throw Error();\n      } catch (x) {\n        const match = x.stack.trim().match(/\\n( *(at )?)/);\n        prefix = (match && match[1]) || '';\n      }\n    }\n    // We use the prefix to ensure our stacks line up with native stack frames.\n    return '\\n' + prefix + name;\n  } else {\n    let ownerName = null;\n    if (__DEV__ && ownerFn) {\n      ownerName = ownerFn.displayName || ownerFn.name || null;\n    }\n    return describeComponentFrame(name, source, ownerName);\n  }\n}\n\nlet reentry = false;\nlet componentFrameCache;\nif (__DEV__) {\n  const PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\n  componentFrameCache = new PossiblyWeakMap();\n}\n\nexport function describeNativeComponentFrame(\n  fn: Function,\n  construct: boolean,\n): string {\n  // If something asked for a stack inside a fake render, it should get ignored.\n  if (disableNativeComponentFrames || !fn || reentry) {\n    return '';\n  }\n\n  if (__DEV__) {\n    const frame = componentFrameCache.get(fn);\n    if (frame !== undefined) {\n      return frame;\n    }\n  }\n\n  let control;\n\n  reentry = true;\n  const previousPrepareStackTrace = Error.prepareStackTrace;\n  // $FlowFixMe It does accept undefined.\n  Error.prepareStackTrace = undefined;\n  let previousDispatcher;\n  if (__DEV__) {\n    previousDispatcher = ReactCurrentDispatcher.current;\n    // Set the dispatcher in DEV because this might be call in the render function\n    // for warnings.\n    ReactCurrentDispatcher.current = null;\n    disableLogs();\n  }\n  try {\n    // This should throw.\n    if (construct) {\n      // Something should be setting the props in the constructor.\n      const Fake = function() {\n        throw Error();\n      };\n      // $FlowFixMe\n      Object.defineProperty(Fake.prototype, 'props', {\n        set: function() {\n          // We use a throwing setter instead of frozen or non-writable props\n          // because that won't throw in a non-strict mode function.\n          throw Error();\n        },\n      });\n      if (typeof Reflect === 'object' && Reflect.construct) {\n        // We construct a different control for this case to include any extra\n        // frames added by the construct call.\n        try {\n          Reflect.construct(Fake, []);\n        } catch (x) {\n          control = x;\n        }\n        Reflect.construct(fn, [], Fake);\n      } else {\n        try {\n          Fake.call();\n        } catch (x) {\n          control = x;\n        }\n        fn.call(Fake.prototype);\n      }\n    } else {\n      try {\n        throw Error();\n      } catch (x) {\n        control = x;\n      }\n      fn();\n    }\n  } catch (sample) {\n    // This is inlined manually because closure doesn't do it for us.\n    if (sample && control && typeof sample.stack === 'string') {\n      // This extracts the first frame from the sample that isn't also in the control.\n      // Skipping one frame that we assume is the frame that calls the two.\n      const sampleLines = sample.stack.split('\\n');\n      const controlLines = control.stack.split('\\n');\n      let s = sampleLines.length - 1;\n      let c = controlLines.length - 1;\n      while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {\n        // We expect at least one stack frame to be shared.\n        // Typically this will be the root most one. However, stack frames may be\n        // cut off due to maximum stack limits. In this case, one maybe cut off\n        // earlier than the other. We assume that the sample is longer or the same\n        // and there for cut off earlier. So we should find the root most frame in\n        // the sample somewhere in the control.\n        c--;\n      }\n      for (; s >= 1 && c >= 0; s--, c--) {\n        // Next we find the first one that isn't the same which should be the\n        // frame that called our sample function and the control.\n        if (sampleLines[s] !== controlLines[c]) {\n          // In V8, the first line is describing the message but other VMs don't.\n          // If we're about to return the first line, and the control is also on the same\n          // line, that's a pretty good indicator that our sample threw at same line as\n          // the control. I.e. before we entered the sample frame. So we ignore this result.\n          // This can happen if you passed a class to function component, or non-function.\n          if (s !== 1 || c !== 1) {\n            do {\n              s--;\n              c--;\n              // We may still have similar intermediate frames from the construct call.\n              // The next one that isn't the same should be our match though.\n              if (c < 0 || sampleLines[s] !== controlLines[c]) {\n                // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\n                let frame = '\\n' + sampleLines[s].replace(' at new ', ' at ');\n\n                // If our component frame is labeled \"<anonymous>\"\n                // but we have a user-provided \"displayName\"\n                // splice it in to make the stack more readable.\n                if (fn.displayName && frame.includes('<anonymous>')) {\n                  frame = frame.replace('<anonymous>', fn.displayName);\n                }\n\n                if (__DEV__) {\n                  if (typeof fn === 'function') {\n                    componentFrameCache.set(fn, frame);\n                  }\n                }\n                // Return the line we found.\n                return frame;\n              }\n            } while (s >= 1 && c >= 0);\n          }\n          break;\n        }\n      }\n    }\n  } finally {\n    reentry = false;\n    if (__DEV__) {\n      ReactCurrentDispatcher.current = previousDispatcher;\n      reenableLogs();\n    }\n    Error.prepareStackTrace = previousPrepareStackTrace;\n  }\n  // Fallback to just using the name if we couldn't make it throw.\n  const name = fn ? fn.displayName || fn.name : '';\n  const syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';\n  if (__DEV__) {\n    if (typeof fn === 'function') {\n      componentFrameCache.set(fn, syntheticFrame);\n    }\n  }\n  return syntheticFrame;\n}\n\nconst BEFORE_SLASH_RE = /^(.*)[\\\\\\/]/;\n\nfunction describeComponentFrame(\n  name: null | string,\n  source: void | null | Source,\n  ownerName: null | string,\n) {\n  let sourceInfo = '';\n  if (__DEV__ && source) {\n    const path = source.fileName;\n    let fileName = path.replace(BEFORE_SLASH_RE, '');\n    // In DEV, include code for a common special case:\n    // prefer \"folder/index.js\" instead of just \"index.js\".\n    if (/^index\\./.test(fileName)) {\n      const match = path.match(BEFORE_SLASH_RE);\n      if (match) {\n        const pathBeforeSlash = match[1];\n        if (pathBeforeSlash) {\n          const folderName = pathBeforeSlash.replace(BEFORE_SLASH_RE, '');\n          fileName = folderName + '/' + fileName;\n        }\n      }\n    }\n    sourceInfo = ' (at ' + fileName + ':' + source.lineNumber + ')';\n  } else if (ownerName) {\n    sourceInfo = ' (created by ' + ownerName + ')';\n  }\n  return '\\n    in ' + (name || 'Unknown') + sourceInfo;\n}\n\nexport function describeClassComponentFrame(\n  ctor: Function,\n  source: void | null | Source,\n  ownerFn: void | null | Function,\n): string {\n  if (enableComponentStackLocations) {\n    return describeNativeComponentFrame(ctor, true);\n  } else {\n    return describeFunctionComponentFrame(ctor, source, ownerFn);\n  }\n}\n\nexport function describeFunctionComponentFrame(\n  fn: Function,\n  source: void | null | Source,\n  ownerFn: void | null | Function,\n): string {\n  if (enableComponentStackLocations) {\n    return describeNativeComponentFrame(fn, false);\n  } else {\n    if (!fn) {\n      return '';\n    }\n    const name = fn.displayName || fn.name || null;\n    let ownerName = null;\n    if (__DEV__ && ownerFn) {\n      ownerName = ownerFn.displayName || ownerFn.name || null;\n    }\n    return describeComponentFrame(name, source, ownerName);\n  }\n}\n\nfunction shouldConstruct(Component: Function) {\n  const prototype = Component.prototype;\n  return !!(prototype && prototype.isReactComponent);\n}\n\nexport function describeUnknownElementTypeFrameInDEV(\n  type: any,\n  source: void | null | Source,\n  ownerFn: void | null | Function,\n): string {\n  if (!__DEV__) {\n    return '';\n  }\n  if (type == null) {\n    return '';\n  }\n  if (typeof type === 'function') {\n    if (enableComponentStackLocations) {\n      return describeNativeComponentFrame(type, shouldConstruct(type));\n    } else {\n      return describeFunctionComponentFrame(type, source, ownerFn);\n    }\n  }\n  if (typeof type === 'string') {\n    return describeBuiltInComponentFrame(type, source, ownerFn);\n  }\n  switch (type) {\n    case REACT_SUSPENSE_TYPE:\n      return describeBuiltInComponentFrame('Suspense', source, ownerFn);\n    case REACT_SUSPENSE_LIST_TYPE:\n      return describeBuiltInComponentFrame('SuspenseList', source, ownerFn);\n  }\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_FORWARD_REF_TYPE:\n        return describeFunctionComponentFrame(type.render, source, ownerFn);\n      case REACT_MEMO_TYPE:\n        // Memo may contain any component type so we recursively resolve it.\n        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);\n      case REACT_LAZY_TYPE: {\n        const lazyComponent: LazyComponent<any, any> = (type: any);\n        const payload = lazyComponent._payload;\n        const init = lazyComponent._init;\n        try {\n          // Lazy may contain any component type so we recursively resolve it.\n          return describeUnknownElementTypeFrameInDEV(\n            init(payload),\n            source,\n            ownerFn,\n          );\n        } catch (x) {}\n      }\n    }\n  }\n  return '';\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\n\nexport default hasOwnProperty;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nconst loggedTypeFailures = {};\n\nimport {describeUnknownElementTypeFrameInDEV} from 'shared/ReactComponentStackFrame';\n\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\nimport hasOwnProperty from 'shared/hasOwnProperty';\n\nconst ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n\nfunction setCurrentlyValidatingElement(element) {\n  if (__DEV__) {\n    if (element) {\n      const owner = element._owner;\n      const stack = describeUnknownElementTypeFrameInDEV(\n        element.type,\n        element._source,\n        owner ? owner.type : null,\n      );\n      ReactDebugCurrentFrame.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame.setExtraStackFrame(null);\n    }\n  }\n}\n\nexport default function checkPropTypes(\n  typeSpecs: Object,\n  values: Object,\n  location: string,\n  componentName: ?string,\n  element?: any,\n): void {\n  if (__DEV__) {\n    // $FlowFixMe This is okay but Flow doesn't know it.\n    const has = Function.call.bind(hasOwnProperty);\n    for (const typeSpecName in typeSpecs) {\n      if (has(typeSpecs, typeSpecName)) {\n        let error;\n        // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\n            // eslint-disable-next-line react-internal/prod-error-codes\n            const err = Error(\n              (componentName || 'React class') +\n                ': ' +\n                location +\n                ' type `' +\n                typeSpecName +\n                '` is invalid; ' +\n                'it must be a function, usually from the `prop-types` package, but received `' +\n                typeof typeSpecs[typeSpecName] +\n                '`.' +\n                'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.',\n            );\n            err.name = 'Invariant Violation';\n            throw err;\n          }\n          error = typeSpecs[typeSpecName](\n            values,\n            typeSpecName,\n            componentName,\n            location,\n            null,\n            'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED',\n          );\n        } catch (ex) {\n          error = ex;\n        }\n        if (error && !(error instanceof Error)) {\n          setCurrentlyValidatingElement(element);\n          console.error(\n            '%s: type specification of %s' +\n              ' `%s` is invalid; the type checker ' +\n              'function must return `null` or an `Error` but returned a %s. ' +\n              'You may have forgotten to pass an argument to the type checker ' +\n              'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' +\n              'shape all require an argument).',\n            componentName || 'React class',\n            location,\n            typeSpecName,\n            typeof error,\n          );\n          setCurrentlyValidatingElement(null);\n        }\n        if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error.message] = true;\n          setCurrentlyValidatingElement(element);\n          console.error('Failed %s type: %s', location, error.message);\n          setCurrentlyValidatingElement(null);\n        }\n      }\n    }\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactInternalTypes';\n\nexport type StackCursor<T> = {|current: T|};\n\nconst valueStack: Array<any> = [];\n\nlet fiberStack: Array<Fiber | null>;\n\nif (__DEV__) {\n  fiberStack = [];\n}\n\nlet index = -1;\n\nfunction createCursor<T>(defaultValue: T): StackCursor<T> {\n  return {\n    current: defaultValue,\n  };\n}\n\nfunction isEmpty(): boolean {\n  return index === -1;\n}\n\nfunction pop<T>(cursor: StackCursor<T>, fiber: Fiber): void {\n  if (index < 0) {\n    if (__DEV__) {\n      console.error('Unexpected pop.');\n    }\n    return;\n  }\n\n  if (__DEV__) {\n    if (fiber !== fiberStack[index]) {\n      console.error('Unexpected Fiber popped.');\n    }\n  }\n\n  cursor.current = valueStack[index];\n\n  valueStack[index] = null;\n\n  if (__DEV__) {\n    fiberStack[index] = null;\n  }\n\n  index--;\n}\n\nfunction push<T>(cursor: StackCursor<T>, value: T, fiber: Fiber): void {\n  index++;\n\n  valueStack[index] = cursor.current;\n\n  if (__DEV__) {\n    fiberStack[index] = fiber;\n  }\n\n  cursor.current = value;\n}\n\nfunction checkThatStackIsEmpty() {\n  if (__DEV__) {\n    if (index !== -1) {\n      console.error(\n        'Expected an empty stack. Something was not reset properly.',\n      );\n    }\n  }\n}\n\nfunction resetStackAfterFatalErrorInDev() {\n  if (__DEV__) {\n    index = -1;\n    valueStack.length = 0;\n    fiberStack.length = 0;\n  }\n}\n\nexport {\n  createCursor,\n  isEmpty,\n  pop,\n  push,\n  // DEV only:\n  checkThatStackIsEmpty,\n  resetStackAfterFatalErrorInDev,\n};\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactInternalTypes';\nimport type {StackCursor} from './ReactFiberStack.old';\n\nimport {isFiberMounted} from './ReactFiberTreeReflection';\nimport {disableLegacyContext} from 'shared/ReactFeatureFlags';\nimport {ClassComponent, HostRoot} from './ReactWorkTags';\nimport getComponentNameFromFiber from 'react-reconciler/src/getComponentNameFromFiber';\nimport checkPropTypes from 'shared/checkPropTypes';\n\nimport {createCursor, push, pop} from './ReactFiberStack.old';\n\nlet warnedAboutMissingGetChildContext;\n\nif (__DEV__) {\n  warnedAboutMissingGetChildContext = {};\n}\n\nexport const emptyContextObject = {};\nif (__DEV__) {\n  Object.freeze(emptyContextObject);\n}\n\n// A cursor to the current merged context object on the stack.\nconst contextStackCursor: StackCursor<Object> = createCursor(\n  emptyContextObject,\n);\n// A cursor to a boolean indicating whether the context has changed.\nconst didPerformWorkStackCursor: StackCursor<boolean> = createCursor(false);\n// Keep track of the previous context object that was on the stack.\n// We use this to get access to the parent context after we have already\n// pushed the next context provider, and now need to merge their contexts.\nlet previousContext: Object = emptyContextObject;\n\nfunction getUnmaskedContext(\n  workInProgress: Fiber,\n  Component: Function,\n  didPushOwnContextIfProvider: boolean,\n): Object {\n  if (disableLegacyContext) {\n    return emptyContextObject;\n  } else {\n    if (didPushOwnContextIfProvider && isContextProvider(Component)) {\n      // If the fiber is a context provider itself, when we read its context\n      // we may have already pushed its own child context on the stack. A context\n      // provider should not \"see\" its own child context. Therefore we read the\n      // previous (parent) context instead for a context provider.\n      return previousContext;\n    }\n    return contextStackCursor.current;\n  }\n}\n\nfunction cacheContext(\n  workInProgress: Fiber,\n  unmaskedContext: Object,\n  maskedContext: Object,\n): void {\n  if (disableLegacyContext) {\n    return;\n  } else {\n    const instance = workInProgress.stateNode;\n    instance.__reactInternalMemoizedUnmaskedChildContext = unmaskedContext;\n    instance.__reactInternalMemoizedMaskedChildContext = maskedContext;\n  }\n}\n\nfunction getMaskedContext(\n  workInProgress: Fiber,\n  unmaskedContext: Object,\n): Object {\n  if (disableLegacyContext) {\n    return emptyContextObject;\n  } else {\n    const type = workInProgress.type;\n    const contextTypes = type.contextTypes;\n    if (!contextTypes) {\n      return emptyContextObject;\n    }\n\n    // Avoid recreating masked context unless unmasked context has changed.\n    // Failing to do this will result in unnecessary calls to componentWillReceiveProps.\n    // This may trigger infinite loops if componentWillReceiveProps calls setState.\n    const instance = workInProgress.stateNode;\n    if (\n      instance &&\n      instance.__reactInternalMemoizedUnmaskedChildContext === unmaskedContext\n    ) {\n      return instance.__reactInternalMemoizedMaskedChildContext;\n    }\n\n    const context = {};\n    for (const key in contextTypes) {\n      context[key] = unmaskedContext[key];\n    }\n\n    if (__DEV__) {\n      const name = getComponentNameFromFiber(workInProgress) || 'Unknown';\n      checkPropTypes(contextTypes, context, 'context', name);\n    }\n\n    // Cache unmasked context so we can avoid recreating masked context unless necessary.\n    // Context is created before the class component is instantiated so check for instance.\n    if (instance) {\n      cacheContext(workInProgress, unmaskedContext, context);\n    }\n\n    return context;\n  }\n}\n\nfunction hasContextChanged(): boolean {\n  if (disableLegacyContext) {\n    return false;\n  } else {\n    return didPerformWorkStackCursor.current;\n  }\n}\n\nfunction isContextProvider(type: Function): boolean {\n  if (disableLegacyContext) {\n    return false;\n  } else {\n    const childContextTypes = type.childContextTypes;\n    return childContextTypes !== null && childContextTypes !== undefined;\n  }\n}\n\nfunction popContext(fiber: Fiber): void {\n  if (disableLegacyContext) {\n    return;\n  } else {\n    pop(didPerformWorkStackCursor, fiber);\n    pop(contextStackCursor, fiber);\n  }\n}\n\nfunction popTopLevelContextObject(fiber: Fiber): void {\n  if (disableLegacyContext) {\n    return;\n  } else {\n    pop(didPerformWorkStackCursor, fiber);\n    pop(contextStackCursor, fiber);\n  }\n}\n\nfunction pushTopLevelContextObject(\n  fiber: Fiber,\n  context: Object,\n  didChange: boolean,\n): void {\n  if (disableLegacyContext) {\n    return;\n  } else {\n    if (contextStackCursor.current !== emptyContextObject) {\n      throw new Error(\n        'Unexpected context found on stack. ' +\n          'This error is likely caused by a bug in React. Please file an issue.',\n      );\n    }\n\n    push(contextStackCursor, context, fiber);\n    push(didPerformWorkStackCursor, didChange, fiber);\n  }\n}\n\nfunction processChildContext(\n  fiber: Fiber,\n  type: any,\n  parentContext: Object,\n): Object {\n  if (disableLegacyContext) {\n    return parentContext;\n  } else {\n    const instance = fiber.stateNode;\n    const childContextTypes = type.childContextTypes;\n\n    // TODO (bvaughn) Replace this behavior with an invariant() in the future.\n    // It has only been added in Fiber to match the (unintentional) behavior in Stack.\n    if (typeof instance.getChildContext !== 'function') {\n      if (__DEV__) {\n        const componentName = getComponentNameFromFiber(fiber) || 'Unknown';\n\n        if (!warnedAboutMissingGetChildContext[componentName]) {\n          warnedAboutMissingGetChildContext[componentName] = true;\n          console.error(\n            '%s.childContextTypes is specified but there is no getChildContext() method ' +\n              'on the instance. You can either define getChildContext() on %s or remove ' +\n              'childContextTypes from it.',\n            componentName,\n            componentName,\n          );\n        }\n      }\n      return parentContext;\n    }\n\n    const childContext = instance.getChildContext();\n    for (const contextKey in childContext) {\n      if (!(contextKey in childContextTypes)) {\n        throw new Error(\n          `${getComponentNameFromFiber(fiber) ||\n            'Unknown'}.getChildContext(): key \"${contextKey}\" is not defined in childContextTypes.`,\n        );\n      }\n    }\n    if (__DEV__) {\n      const name = getComponentNameFromFiber(fiber) || 'Unknown';\n      checkPropTypes(childContextTypes, childContext, 'child context', name);\n    }\n\n    return {...parentContext, ...childContext};\n  }\n}\n\nfunction pushContextProvider(workInProgress: Fiber): boolean {\n  if (disableLegacyContext) {\n    return false;\n  } else {\n    const instance = workInProgress.stateNode;\n    // We push the context as early as possible to ensure stack integrity.\n    // If the instance does not exist yet, we will push null at first,\n    // and replace it on the stack later when invalidating the context.\n    const memoizedMergedChildContext =\n      (instance && instance.__reactInternalMemoizedMergedChildContext) ||\n      emptyContextObject;\n\n    // Remember the parent context so we can merge with it later.\n    // Inherit the parent's did-perform-work value to avoid inadvertently blocking updates.\n    previousContext = contextStackCursor.current;\n    push(contextStackCursor, memoizedMergedChildContext, workInProgress);\n    push(\n      didPerformWorkStackCursor,\n      didPerformWorkStackCursor.current,\n      workInProgress,\n    );\n\n    return true;\n  }\n}\n\nfunction invalidateContextProvider(\n  workInProgress: Fiber,\n  type: any,\n  didChange: boolean,\n): void {\n  if (disableLegacyContext) {\n    return;\n  } else {\n    const instance = workInProgress.stateNode;\n\n    if (!instance) {\n      throw new Error(\n        'Expected to have an instance by this point. ' +\n          'This error is likely caused by a bug in React. Please file an issue.',\n      );\n    }\n\n    if (didChange) {\n      // Merge parent and own context.\n      // Skip this if we're not updating due to sCU.\n      // This avoids unnecessarily recomputing memoized values.\n      const mergedContext = processChildContext(\n        workInProgress,\n        type,\n        previousContext,\n      );\n      instance.__reactInternalMemoizedMergedChildContext = mergedContext;\n\n      // Replace the old (or empty) context with the new one.\n      // It is important to unwind the context in the reverse order.\n      pop(didPerformWorkStackCursor, workInProgress);\n      pop(contextStackCursor, workInProgress);\n      // Now push the new context and mark that it has changed.\n      push(contextStackCursor, mergedContext, workInProgress);\n      push(didPerformWorkStackCursor, didChange, workInProgress);\n    } else {\n      pop(didPerformWorkStackCursor, workInProgress);\n      push(didPerformWorkStackCursor, didChange, workInProgress);\n    }\n  }\n}\n\nfunction findCurrentUnmaskedContext(fiber: Fiber): Object {\n  if (disableLegacyContext) {\n    return emptyContextObject;\n  } else {\n    // Currently this is only used with renderSubtreeIntoContainer; not sure if it\n    // makes sense elsewhere\n    if (!isFiberMounted(fiber) || fiber.tag !== ClassComponent) {\n      throw new Error(\n        'Expected subtree parent to be a mounted class component. ' +\n          'This error is likely caused by a bug in React. Please file an issue.',\n      );\n    }\n\n    let node = fiber;\n    do {\n      switch (node.tag) {\n        case HostRoot:\n          return node.stateNode.context;\n        case ClassComponent: {\n          const Component = node.type;\n          if (isContextProvider(Component)) {\n            return node.stateNode.__reactInternalMemoizedMergedChildContext;\n          }\n          break;\n        }\n      }\n      node = node.return;\n    } while (node !== null);\n\n    throw new Error(\n      'Found unexpected detached subtree parent. ' +\n        'This error is likely caused by a bug in React. Please file an issue.',\n    );\n  }\n}\n\nexport {\n  getUnmaskedContext,\n  cacheContext,\n  getMaskedContext,\n  hasContextChanged,\n  popContext,\n  popTopLevelContextObject,\n  pushTopLevelContextObject,\n  processChildContext,\n  isContextProvider,\n  pushContextProvider,\n  invalidateContextProvider,\n  findCurrentUnmaskedContext,\n};\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\n/**\n * inlined Object.is polyfill to avoid requiring consumers ship their own\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n */\nfunction is(x: any, y: any) {\n  return (\n    (x === y && (x !== 0 || 1 / x === 1 / y)) || (x !== x && y !== y) // eslint-disable-line no-self-compare\n  );\n}\n\nconst objectIs: (x: any, y: any) => boolean =\n  typeof Object.is === 'function' ? Object.is : is;\n\nexport default objectIs;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {SchedulerCallback} from './Scheduler';\n\nimport {\n  DiscreteEventPriority,\n  getCurrentUpdatePriority,\n  setCurrentUpdatePriority,\n} from './ReactEventPriorities.old';\nimport {ImmediatePriority, scheduleCallback} from './Scheduler';\n\nlet syncQueue: Array<SchedulerCallback> | null = null;\nlet includesLegacySyncCallbacks: boolean = false;\nlet isFlushingSyncQueue: boolean = false;\n\nexport function scheduleSyncCallback(callback: SchedulerCallback) {\n  // Push this callback into an internal queue. We'll flush these either in\n  // the next tick, or earlier if something calls `flushSyncCallbackQueue`.\n  if (syncQueue === null) {\n    syncQueue = [callback];\n  } else {\n    // Push onto existing queue. Don't need to schedule a callback because\n    // we already scheduled one when we created the queue.\n    syncQueue.push(callback);\n  }\n}\n\nexport function scheduleLegacySyncCallback(callback: SchedulerCallback) {\n  includesLegacySyncCallbacks = true;\n  scheduleSyncCallback(callback);\n}\n\nexport function flushSyncCallbacksOnlyInLegacyMode() {\n  // Only flushes the queue if there's a legacy sync callback scheduled.\n  // TODO: There's only a single type of callback: performSyncOnWorkOnRoot. So\n  // it might make more sense for the queue to be a list of roots instead of a\n  // list of generic callbacks. Then we can have two: one for legacy roots, one\n  // for concurrent roots. And this method would only flush the legacy ones.\n  if (includesLegacySyncCallbacks) {\n    flushSyncCallbacks();\n  }\n}\n\nexport function flushSyncCallbacks() {\n  if (!isFlushingSyncQueue && syncQueue !== null) {\n    // Prevent re-entrance.\n    isFlushingSyncQueue = true;\n    let i = 0;\n    const previousUpdatePriority = getCurrentUpdatePriority();\n    try {\n      const isSync = true;\n      const queue = syncQueue;\n      // TODO: Is this necessary anymore? The only user code that runs in this\n      // queue is in the render or commit phases.\n      setCurrentUpdatePriority(DiscreteEventPriority);\n      for (; i < queue.length; i++) {\n        let callback = queue[i];\n        do {\n          callback = callback(isSync);\n        } while (callback !== null);\n      }\n      syncQueue = null;\n      includesLegacySyncCallbacks = false;\n    } catch (error) {\n      // If something throws, leave the remaining callbacks on the queue.\n      if (syncQueue !== null) {\n        syncQueue = syncQueue.slice(i + 1);\n      }\n      // Resume flushing in the next tick\n      scheduleCallback(ImmediatePriority, flushSyncCallbacks);\n      throw error;\n    } finally {\n      setCurrentUpdatePriority(previousUpdatePriority);\n      isFlushingSyncQueue = false;\n    }\n  }\n  return null;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {FiberRoot} from './ReactInternalTypes';\nimport type {RootState} from './ReactFiberRoot.new';\n\n// This is imported by the event replaying implementation in React DOM. It's\n// in a separate file to break a circular dependency between the renderer and\n// the reconciler.\nexport function isRootDehydrated(root: FiberRoot) {\n  const currentState: RootState = root.current.memoizedState;\n  return currentState.isDehydrated;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\n// Ids are base 32 strings whose binary representation corresponds to the\n// position of a node in a tree.\n\n// Every time the tree forks into multiple children, we add additional bits to\n// the left of the sequence that represent the position of the child within the\n// current level of children.\n//\n//      00101       00010001011010101\n//      ╰─┬─╯       ╰───────┬───────╯\n//   Fork 5 of 20       Parent id\n//\n// The leading 0s are important. In the above example, you only need 3 bits to\n// represent slot 5. However, you need 5 bits to represent all the forks at\n// the current level, so we must account for the empty bits at the end.\n//\n// For this same reason, slots are 1-indexed instead of 0-indexed. Otherwise,\n// the zeroth id at a level would be indistinguishable from its parent.\n//\n// If a node has only one child, and does not materialize an id (i.e. does not\n// contain a useId hook), then we don't need to allocate any space in the\n// sequence. It's treated as a transparent indirection. For example, these two\n// trees produce the same ids:\n//\n// <>                          <>\n//   <Indirection>               <A />\n//     <A />                     <B />\n//   </Indirection>            </>\n//   <B />\n// </>\n//\n// However, we cannot skip any node that materializes an id. Otherwise, a parent\n// id that does not fork would be indistinguishable from its child id. For\n// example, this tree does not fork, but the parent and child must have\n// different ids.\n//\n// <Parent>\n//   <Child />\n// </Parent>\n//\n// To handle this scenario, every time we materialize an id, we allocate a\n// new level with a single slot. You can think of this as a fork with only one\n// prong, or an array of children with length 1.\n//\n// It's possible for the size of the sequence to exceed 32 bits, the max\n// size for bitwise operations. When this happens, we make more room by\n// converting the right part of the id to a string and storing it in an overflow\n// variable. We use a base 32 string representation, because 32 is the largest\n// power of 2 that is supported by toString(). We want the base to be large so\n// that the resulting ids are compact, and we want the base to be a power of 2\n// because every log2(base) bits corresponds to a single character, i.e. every\n// log2(32) = 5 bits. That means we can lop bits off the end 5 at a time without\n// affecting the final result.\n\nimport {getIsHydrating} from './ReactFiberHydrationContext.old';\nimport {clz32} from './clz32';\nimport {Forked, NoFlags} from './ReactFiberFlags';\n\nexport type TreeContext = {\n  id: number,\n  overflow: string,\n};\n\n// TODO: Use the unified fiber stack module instead of this local one?\n// Intentionally not using it yet to derisk the initial implementation, because\n// the way we push/pop these values is a bit unusual. If there's a mistake, I'd\n// rather the ids be wrong than crash the whole reconciler.\nconst forkStack: Array<any> = [];\nlet forkStackIndex: number = 0;\nlet treeForkProvider: Fiber | null = null;\nlet treeForkCount: number = 0;\n\nconst idStack: Array<any> = [];\nlet idStackIndex: number = 0;\nlet treeContextProvider: Fiber | null = null;\nlet treeContextId: number = 1;\nlet treeContextOverflow: string = '';\n\nexport function isForkedChild(workInProgress: Fiber): boolean {\n  warnIfNotHydrating();\n  return (workInProgress.flags & Forked) !== NoFlags;\n}\n\nexport function getForksAtLevel(workInProgress: Fiber): number {\n  warnIfNotHydrating();\n  return treeForkCount;\n}\n\nexport function getTreeId(): string {\n  const overflow = treeContextOverflow;\n  const idWithLeadingBit = treeContextId;\n  const id = idWithLeadingBit & ~getLeadingBit(idWithLeadingBit);\n  return id.toString(32) + overflow;\n}\n\nexport function pushTreeFork(\n  workInProgress: Fiber,\n  totalChildren: number,\n): void {\n  // This is called right after we reconcile an array (or iterator) of child\n  // fibers, because that's the only place where we know how many children in\n  // the whole set without doing extra work later, or storing addtional\n  // information on the fiber.\n  //\n  // That's why this function is separate from pushTreeId — it's called during\n  // the render phase of the fork parent, not the child, which is where we push\n  // the other context values.\n  //\n  // In the Fizz implementation this is much simpler because the child is\n  // rendered in the same callstack as the parent.\n  //\n  // It might be better to just add a `forks` field to the Fiber type. It would\n  // make this module simpler.\n\n  warnIfNotHydrating();\n\n  forkStack[forkStackIndex++] = treeForkCount;\n  forkStack[forkStackIndex++] = treeForkProvider;\n\n  treeForkProvider = workInProgress;\n  treeForkCount = totalChildren;\n}\n\nexport function pushTreeId(\n  workInProgress: Fiber,\n  totalChildren: number,\n  index: number,\n) {\n  warnIfNotHydrating();\n\n  idStack[idStackIndex++] = treeContextId;\n  idStack[idStackIndex++] = treeContextOverflow;\n  idStack[idStackIndex++] = treeContextProvider;\n\n  treeContextProvider = workInProgress;\n\n  const baseIdWithLeadingBit = treeContextId;\n  const baseOverflow = treeContextOverflow;\n\n  // The leftmost 1 marks the end of the sequence, non-inclusive. It's not part\n  // of the id; we use it to account for leading 0s.\n  const baseLength = getBitLength(baseIdWithLeadingBit) - 1;\n  const baseId = baseIdWithLeadingBit & ~(1 << baseLength);\n\n  const slot = index + 1;\n  const length = getBitLength(totalChildren) + baseLength;\n\n  // 30 is the max length we can store without overflowing, taking into\n  // consideration the leading 1 we use to mark the end of the sequence.\n  if (length > 30) {\n    // We overflowed the bitwise-safe range. Fall back to slower algorithm.\n    // This branch assumes the length of the base id is greater than 5; it won't\n    // work for smaller ids, because you need 5 bits per character.\n    //\n    // We encode the id in multiple steps: first the base id, then the\n    // remaining digits.\n    //\n    // Each 5 bit sequence corresponds to a single base 32 character. So for\n    // example, if the current id is 23 bits long, we can convert 20 of those\n    // bits into a string of 4 characters, with 3 bits left over.\n    //\n    // First calculate how many bits in the base id represent a complete\n    // sequence of characters.\n    const numberOfOverflowBits = baseLength - (baseLength % 5);\n\n    // Then create a bitmask that selects only those bits.\n    const newOverflowBits = (1 << numberOfOverflowBits) - 1;\n\n    // Select the bits, and convert them to a base 32 string.\n    const newOverflow = (baseId & newOverflowBits).toString(32);\n\n    // Now we can remove those bits from the base id.\n    const restOfBaseId = baseId >> numberOfOverflowBits;\n    const restOfBaseLength = baseLength - numberOfOverflowBits;\n\n    // Finally, encode the rest of the bits using the normal algorithm. Because\n    // we made more room, this time it won't overflow.\n    const restOfLength = getBitLength(totalChildren) + restOfBaseLength;\n    const restOfNewBits = slot << restOfBaseLength;\n    const id = restOfNewBits | restOfBaseId;\n    const overflow = newOverflow + baseOverflow;\n\n    treeContextId = (1 << restOfLength) | id;\n    treeContextOverflow = overflow;\n  } else {\n    // Normal path\n    const newBits = slot << baseLength;\n    const id = newBits | baseId;\n    const overflow = baseOverflow;\n\n    treeContextId = (1 << length) | id;\n    treeContextOverflow = overflow;\n  }\n}\n\nexport function pushMaterializedTreeId(workInProgress: Fiber) {\n  warnIfNotHydrating();\n\n  // This component materialized an id. This will affect any ids that appear\n  // in its children.\n  const returnFiber = workInProgress.return;\n  if (returnFiber !== null) {\n    const numberOfForks = 1;\n    const slotIndex = 0;\n    pushTreeFork(workInProgress, numberOfForks);\n    pushTreeId(workInProgress, numberOfForks, slotIndex);\n  }\n}\n\nfunction getBitLength(number: number): number {\n  return 32 - clz32(number);\n}\n\nfunction getLeadingBit(id: number) {\n  return 1 << (getBitLength(id) - 1);\n}\n\nexport function popTreeContext(workInProgress: Fiber) {\n  // Restore the previous values.\n\n  // This is a bit more complicated than other context-like modules in Fiber\n  // because the same Fiber may appear on the stack multiple times and for\n  // different reasons. We have to keep popping until the work-in-progress is\n  // no longer at the top of the stack.\n\n  while (workInProgress === treeForkProvider) {\n    treeForkProvider = forkStack[--forkStackIndex];\n    forkStack[forkStackIndex] = null;\n    treeForkCount = forkStack[--forkStackIndex];\n    forkStack[forkStackIndex] = null;\n  }\n\n  while (workInProgress === treeContextProvider) {\n    treeContextProvider = idStack[--idStackIndex];\n    idStack[idStackIndex] = null;\n    treeContextOverflow = idStack[--idStackIndex];\n    idStack[idStackIndex] = null;\n    treeContextId = idStack[--idStackIndex];\n    idStack[idStackIndex] = null;\n  }\n}\n\nexport function getSuspendedTreeContext(): TreeContext | null {\n  warnIfNotHydrating();\n  if (treeContextProvider !== null) {\n    return {\n      id: treeContextId,\n      overflow: treeContextOverflow,\n    };\n  } else {\n    return null;\n  }\n}\n\nexport function restoreSuspendedTreeContext(\n  workInProgress: Fiber,\n  suspendedContext: TreeContext,\n) {\n  warnIfNotHydrating();\n\n  idStack[idStackIndex++] = treeContextId;\n  idStack[idStackIndex++] = treeContextOverflow;\n  idStack[idStackIndex++] = treeContextProvider;\n\n  treeContextId = suspendedContext.id;\n  treeContextOverflow = suspendedContext.overflow;\n  treeContextProvider = workInProgress;\n}\n\nfunction warnIfNotHydrating() {\n  if (__DEV__) {\n    if (!getIsHydrating()) {\n      console.error(\n        'Expected to be hydrating. This is a bug in React. Please file ' +\n          'an issue.',\n      );\n    }\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactInternalTypes';\nimport {NoMode, ConcurrentMode} from './ReactTypeOfMode';\nimport type {\n  Instance,\n  TextInstance,\n  HydratableInstance,\n  SuspenseInstance,\n  Container,\n  HostContext,\n} from './ReactFiberHostConfig';\nimport type {SuspenseState} from './ReactFiberSuspenseComponent.old';\nimport type {TreeContext} from './ReactFiberTreeContext.old';\nimport type {CapturedValue} from './ReactCapturedValue';\n\nimport {\n  HostComponent,\n  HostText,\n  HostRoot,\n  SuspenseComponent,\n} from './ReactWorkTags';\nimport {\n  ChildDeletion,\n  Placement,\n  Hydrating,\n  NoFlags,\n  DidCapture,\n} from './ReactFiberFlags';\n\nimport {\n  createFiberFromHostInstanceForDeletion,\n  createFiberFromDehydratedFragment,\n} from './ReactFiber.old';\nimport {\n  shouldSetTextContent,\n  supportsHydration,\n  canHydrateInstance,\n  canHydrateTextInstance,\n  canHydrateSuspenseInstance,\n  getNextHydratableSibling,\n  getFirstHydratableChild,\n  getFirstHydratableChildWithinContainer,\n  getFirstHydratableChildWithinSuspenseInstance,\n  hydrateInstance,\n  hydrateTextInstance,\n  hydrateSuspenseInstance,\n  getNextHydratableInstanceAfterSuspenseInstance,\n  shouldDeleteUnhydratedTailInstances,\n  didNotMatchHydratedContainerTextInstance,\n  didNotMatchHydratedTextInstance,\n  didNotHydrateInstanceWithinContainer,\n  didNotHydrateInstanceWithinSuspenseInstance,\n  didNotHydrateInstance,\n  didNotFindHydratableInstanceWithinContainer,\n  didNotFindHydratableTextInstanceWithinContainer,\n  didNotFindHydratableSuspenseInstanceWithinContainer,\n  didNotFindHydratableInstanceWithinSuspenseInstance,\n  didNotFindHydratableTextInstanceWithinSuspenseInstance,\n  didNotFindHydratableSuspenseInstanceWithinSuspenseInstance,\n  didNotFindHydratableInstance,\n  didNotFindHydratableTextInstance,\n  didNotFindHydratableSuspenseInstance,\n} from './ReactFiberHostConfig';\nimport {OffscreenLane} from './ReactFiberLane.old';\nimport {\n  getSuspendedTreeContext,\n  restoreSuspendedTreeContext,\n} from './ReactFiberTreeContext.old';\nimport {queueRecoverableErrors} from './ReactFiberWorkLoop.old';\n\n// The deepest Fiber on the stack involved in a hydration context.\n// This may have been an insertion or a hydration.\nlet hydrationParentFiber: null | Fiber = null;\nlet nextHydratableInstance: null | HydratableInstance = null;\nlet isHydrating: boolean = false;\n\n// This flag allows for warning supression when we expect there to be mismatches\n// due to earlier mismatches or a suspended fiber.\nlet didSuspendOrErrorDEV: boolean = false;\n\n// Hydration errors that were thrown inside this boundary\nlet hydrationErrors: Array<CapturedValue<mixed>> | null = null;\n\nfunction warnIfHydrating() {\n  if (__DEV__) {\n    if (isHydrating) {\n      console.error(\n        'We should not be hydrating here. This is a bug in React. Please file a bug.',\n      );\n    }\n  }\n}\n\nexport function markDidThrowWhileHydratingDEV() {\n  if (__DEV__) {\n    didSuspendOrErrorDEV = true;\n  }\n}\n\nexport function didSuspendOrErrorWhileHydratingDEV() {\n  if (__DEV__) {\n    return didSuspendOrErrorDEV;\n  }\n  return false;\n}\n\nfunction enterHydrationState(fiber: Fiber): boolean {\n  if (!supportsHydration) {\n    return false;\n  }\n\n  const parentInstance: Container = fiber.stateNode.containerInfo;\n  nextHydratableInstance = getFirstHydratableChildWithinContainer(\n    parentInstance,\n  );\n  hydrationParentFiber = fiber;\n  isHydrating = true;\n  hydrationErrors = null;\n  didSuspendOrErrorDEV = false;\n  return true;\n}\n\nfunction reenterHydrationStateFromDehydratedSuspenseInstance(\n  fiber: Fiber,\n  suspenseInstance: SuspenseInstance,\n  treeContext: TreeContext | null,\n): boolean {\n  if (!supportsHydration) {\n    return false;\n  }\n  nextHydratableInstance = getFirstHydratableChildWithinSuspenseInstance(\n    suspenseInstance,\n  );\n  hydrationParentFiber = fiber;\n  isHydrating = true;\n  hydrationErrors = null;\n  didSuspendOrErrorDEV = false;\n  if (treeContext !== null) {\n    restoreSuspendedTreeContext(fiber, treeContext);\n  }\n  return true;\n}\n\nfunction warnUnhydratedInstance(\n  returnFiber: Fiber,\n  instance: HydratableInstance,\n) {\n  if (__DEV__) {\n    switch (returnFiber.tag) {\n      case HostRoot: {\n        didNotHydrateInstanceWithinContainer(\n          returnFiber.stateNode.containerInfo,\n          instance,\n        );\n        break;\n      }\n      case HostComponent: {\n        const isConcurrentMode = (returnFiber.mode & ConcurrentMode) !== NoMode;\n        didNotHydrateInstance(\n          returnFiber.type,\n          returnFiber.memoizedProps,\n          returnFiber.stateNode,\n          instance,\n          // TODO: Delete this argument when we remove the legacy root API.\n          isConcurrentMode,\n        );\n        break;\n      }\n      case SuspenseComponent: {\n        const suspenseState: SuspenseState = returnFiber.memoizedState;\n        if (suspenseState.dehydrated !== null)\n          didNotHydrateInstanceWithinSuspenseInstance(\n            suspenseState.dehydrated,\n            instance,\n          );\n        break;\n      }\n    }\n  }\n}\n\nfunction deleteHydratableInstance(\n  returnFiber: Fiber,\n  instance: HydratableInstance,\n) {\n  warnUnhydratedInstance(returnFiber, instance);\n  const childToDelete = createFiberFromHostInstanceForDeletion();\n  childToDelete.stateNode = instance;\n  childToDelete.return = returnFiber;\n\n  const deletions = returnFiber.deletions;\n  if (deletions === null) {\n    returnFiber.deletions = [childToDelete];\n    returnFiber.flags |= ChildDeletion;\n  } else {\n    deletions.push(childToDelete);\n  }\n}\n\nfunction warnNonhydratedInstance(returnFiber: Fiber, fiber: Fiber) {\n  if (__DEV__) {\n    if (didSuspendOrErrorDEV) {\n      // Inside a boundary that already suspended. We're currently rendering the\n      // siblings of a suspended node. The mismatch may be due to the missing\n      // data, so it's probably a false positive.\n      return;\n    }\n\n    switch (returnFiber.tag) {\n      case HostRoot: {\n        const parentContainer = returnFiber.stateNode.containerInfo;\n        switch (fiber.tag) {\n          case HostComponent:\n            const type = fiber.type;\n            const props = fiber.pendingProps;\n            didNotFindHydratableInstanceWithinContainer(\n              parentContainer,\n              type,\n              props,\n            );\n            break;\n          case HostText:\n            const text = fiber.pendingProps;\n            didNotFindHydratableTextInstanceWithinContainer(\n              parentContainer,\n              text,\n            );\n            break;\n          case SuspenseComponent:\n            didNotFindHydratableSuspenseInstanceWithinContainer(\n              parentContainer,\n            );\n            break;\n        }\n        break;\n      }\n      case HostComponent: {\n        const parentType = returnFiber.type;\n        const parentProps = returnFiber.memoizedProps;\n        const parentInstance = returnFiber.stateNode;\n        switch (fiber.tag) {\n          case HostComponent: {\n            const type = fiber.type;\n            const props = fiber.pendingProps;\n            const isConcurrentMode =\n              (returnFiber.mode & ConcurrentMode) !== NoMode;\n            didNotFindHydratableInstance(\n              parentType,\n              parentProps,\n              parentInstance,\n              type,\n              props,\n              // TODO: Delete this argument when we remove the legacy root API.\n              isConcurrentMode,\n            );\n            break;\n          }\n          case HostText: {\n            const text = fiber.pendingProps;\n            const isConcurrentMode =\n              (returnFiber.mode & ConcurrentMode) !== NoMode;\n            didNotFindHydratableTextInstance(\n              parentType,\n              parentProps,\n              parentInstance,\n              text,\n              // TODO: Delete this argument when we remove the legacy root API.\n              isConcurrentMode,\n            );\n            break;\n          }\n          case SuspenseComponent: {\n            didNotFindHydratableSuspenseInstance(\n              parentType,\n              parentProps,\n              parentInstance,\n            );\n            break;\n          }\n        }\n        break;\n      }\n      case SuspenseComponent: {\n        const suspenseState: SuspenseState = returnFiber.memoizedState;\n        const parentInstance = suspenseState.dehydrated;\n        if (parentInstance !== null)\n          switch (fiber.tag) {\n            case HostComponent:\n              const type = fiber.type;\n              const props = fiber.pendingProps;\n              didNotFindHydratableInstanceWithinSuspenseInstance(\n                parentInstance,\n                type,\n                props,\n              );\n              break;\n            case HostText:\n              const text = fiber.pendingProps;\n              didNotFindHydratableTextInstanceWithinSuspenseInstance(\n                parentInstance,\n                text,\n              );\n              break;\n            case SuspenseComponent:\n              didNotFindHydratableSuspenseInstanceWithinSuspenseInstance(\n                parentInstance,\n              );\n              break;\n          }\n        break;\n      }\n      default:\n        return;\n    }\n  }\n}\nfunction insertNonHydratedInstance(returnFiber: Fiber, fiber: Fiber) {\n  fiber.flags = (fiber.flags & ~Hydrating) | Placement;\n  warnNonhydratedInstance(returnFiber, fiber);\n}\n\nfunction tryHydrate(fiber, nextInstance) {\n  switch (fiber.tag) {\n    case HostComponent: {\n      const type = fiber.type;\n      const props = fiber.pendingProps;\n      const instance = canHydrateInstance(nextInstance, type, props);\n      if (instance !== null) {\n        fiber.stateNode = (instance: Instance);\n        hydrationParentFiber = fiber;\n        nextHydratableInstance = getFirstHydratableChild(instance);\n        return true;\n      }\n      return false;\n    }\n    case HostText: {\n      const text = fiber.pendingProps;\n      const textInstance = canHydrateTextInstance(nextInstance, text);\n      if (textInstance !== null) {\n        fiber.stateNode = (textInstance: TextInstance);\n        hydrationParentFiber = fiber;\n        // Text Instances don't have children so there's nothing to hydrate.\n        nextHydratableInstance = null;\n        return true;\n      }\n      return false;\n    }\n    case SuspenseComponent: {\n      const suspenseInstance: null | SuspenseInstance = canHydrateSuspenseInstance(\n        nextInstance,\n      );\n      if (suspenseInstance !== null) {\n        const suspenseState: SuspenseState = {\n          dehydrated: suspenseInstance,\n          treeContext: getSuspendedTreeContext(),\n          retryLane: OffscreenLane,\n        };\n        fiber.memoizedState = suspenseState;\n        // Store the dehydrated fragment as a child fiber.\n        // This simplifies the code for getHostSibling and deleting nodes,\n        // since it doesn't have to consider all Suspense boundaries and\n        // check if they're dehydrated ones or not.\n        const dehydratedFragment = createFiberFromDehydratedFragment(\n          suspenseInstance,\n        );\n        dehydratedFragment.return = fiber;\n        fiber.child = dehydratedFragment;\n        hydrationParentFiber = fiber;\n        // While a Suspense Instance does have children, we won't step into\n        // it during the first pass. Instead, we'll reenter it later.\n        nextHydratableInstance = null;\n        return true;\n      }\n      return false;\n    }\n    default:\n      return false;\n  }\n}\n\nfunction shouldClientRenderOnMismatch(fiber: Fiber) {\n  return (\n    (fiber.mode & ConcurrentMode) !== NoMode &&\n    (fiber.flags & DidCapture) === NoFlags\n  );\n}\n\nfunction throwOnHydrationMismatch(fiber: Fiber) {\n  throw new Error(\n    'Hydration failed because the initial UI does not match what was ' +\n      'rendered on the server.',\n  );\n}\n\nfunction tryToClaimNextHydratableInstance(fiber: Fiber): void {\n  if (!isHydrating) {\n    return;\n  }\n  let nextInstance = nextHydratableInstance;\n  if (!nextInstance) {\n    if (shouldClientRenderOnMismatch(fiber)) {\n      warnNonhydratedInstance((hydrationParentFiber: any), fiber);\n      throwOnHydrationMismatch(fiber);\n    }\n    // Nothing to hydrate. Make it an insertion.\n    insertNonHydratedInstance((hydrationParentFiber: any), fiber);\n    isHydrating = false;\n    hydrationParentFiber = fiber;\n    return;\n  }\n  const firstAttemptedInstance = nextInstance;\n  if (!tryHydrate(fiber, nextInstance)) {\n    if (shouldClientRenderOnMismatch(fiber)) {\n      warnNonhydratedInstance((hydrationParentFiber: any), fiber);\n      throwOnHydrationMismatch(fiber);\n    }\n    // If we can't hydrate this instance let's try the next one.\n    // We use this as a heuristic. It's based on intuition and not data so it\n    // might be flawed or unnecessary.\n    nextInstance = getNextHydratableSibling(firstAttemptedInstance);\n    const prevHydrationParentFiber: Fiber = (hydrationParentFiber: any);\n    if (!nextInstance || !tryHydrate(fiber, nextInstance)) {\n      // Nothing to hydrate. Make it an insertion.\n      insertNonHydratedInstance((hydrationParentFiber: any), fiber);\n      isHydrating = false;\n      hydrationParentFiber = fiber;\n      return;\n    }\n    // We matched the next one, we'll now assume that the first one was\n    // superfluous and we'll delete it. Since we can't eagerly delete it\n    // we'll have to schedule a deletion. To do that, this node needs a dummy\n    // fiber associated with it.\n    deleteHydratableInstance(prevHydrationParentFiber, firstAttemptedInstance);\n  }\n}\n\nfunction prepareToHydrateHostInstance(\n  fiber: Fiber,\n  rootContainerInstance: Container,\n  hostContext: HostContext,\n): boolean {\n  if (!supportsHydration) {\n    throw new Error(\n      'Expected prepareToHydrateHostInstance() to never be called. ' +\n        'This error is likely caused by a bug in React. Please file an issue.',\n    );\n  }\n\n  const instance: Instance = fiber.stateNode;\n  const shouldWarnIfMismatchDev = !didSuspendOrErrorDEV;\n  const updatePayload = hydrateInstance(\n    instance,\n    fiber.type,\n    fiber.memoizedProps,\n    rootContainerInstance,\n    hostContext,\n    fiber,\n    shouldWarnIfMismatchDev,\n  );\n  // TODO: Type this specific to this type of component.\n  fiber.updateQueue = (updatePayload: any);\n  // If the update payload indicates that there is a change or if there\n  // is a new ref we mark this as an update.\n  if (updatePayload !== null) {\n    return true;\n  }\n  return false;\n}\n\nfunction prepareToHydrateHostTextInstance(fiber: Fiber): boolean {\n  if (!supportsHydration) {\n    throw new Error(\n      'Expected prepareToHydrateHostTextInstance() to never be called. ' +\n        'This error is likely caused by a bug in React. Please file an issue.',\n    );\n  }\n\n  const textInstance: TextInstance = fiber.stateNode;\n  const textContent: string = fiber.memoizedProps;\n  const shouldWarnIfMismatchDev = !didSuspendOrErrorDEV;\n  const shouldUpdate = hydrateTextInstance(\n    textInstance,\n    textContent,\n    fiber,\n    shouldWarnIfMismatchDev,\n  );\n  if (shouldUpdate) {\n    // We assume that prepareToHydrateHostTextInstance is called in a context where the\n    // hydration parent is the parent host component of this host text.\n    const returnFiber = hydrationParentFiber;\n    if (returnFiber !== null) {\n      switch (returnFiber.tag) {\n        case HostRoot: {\n          const parentContainer = returnFiber.stateNode.containerInfo;\n          const isConcurrentMode =\n            (returnFiber.mode & ConcurrentMode) !== NoMode;\n          didNotMatchHydratedContainerTextInstance(\n            parentContainer,\n            textInstance,\n            textContent,\n            // TODO: Delete this argument when we remove the legacy root API.\n            isConcurrentMode,\n          );\n          break;\n        }\n        case HostComponent: {\n          const parentType = returnFiber.type;\n          const parentProps = returnFiber.memoizedProps;\n          const parentInstance = returnFiber.stateNode;\n          const isConcurrentMode =\n            (returnFiber.mode & ConcurrentMode) !== NoMode;\n          didNotMatchHydratedTextInstance(\n            parentType,\n            parentProps,\n            parentInstance,\n            textInstance,\n            textContent,\n            // TODO: Delete this argument when we remove the legacy root API.\n            isConcurrentMode,\n          );\n          break;\n        }\n      }\n    }\n  }\n  return shouldUpdate;\n}\n\nfunction prepareToHydrateHostSuspenseInstance(fiber: Fiber): void {\n  if (!supportsHydration) {\n    throw new Error(\n      'Expected prepareToHydrateHostSuspenseInstance() to never be called. ' +\n        'This error is likely caused by a bug in React. Please file an issue.',\n    );\n  }\n\n  const suspenseState: null | SuspenseState = fiber.memoizedState;\n  const suspenseInstance: null | SuspenseInstance =\n    suspenseState !== null ? suspenseState.dehydrated : null;\n\n  if (!suspenseInstance) {\n    throw new Error(\n      'Expected to have a hydrated suspense instance. ' +\n        'This error is likely caused by a bug in React. Please file an issue.',\n    );\n  }\n\n  hydrateSuspenseInstance(suspenseInstance, fiber);\n}\n\nfunction skipPastDehydratedSuspenseInstance(\n  fiber: Fiber,\n): null | HydratableInstance {\n  if (!supportsHydration) {\n    throw new Error(\n      'Expected skipPastDehydratedSuspenseInstance() to never be called. ' +\n        'This error is likely caused by a bug in React. Please file an issue.',\n    );\n  }\n  const suspenseState: null | SuspenseState = fiber.memoizedState;\n  const suspenseInstance: null | SuspenseInstance =\n    suspenseState !== null ? suspenseState.dehydrated : null;\n\n  if (!suspenseInstance) {\n    throw new Error(\n      'Expected to have a hydrated suspense instance. ' +\n        'This error is likely caused by a bug in React. Please file an issue.',\n    );\n  }\n\n  return getNextHydratableInstanceAfterSuspenseInstance(suspenseInstance);\n}\n\nfunction popToNextHostParent(fiber: Fiber): void {\n  let parent = fiber.return;\n  while (\n    parent !== null &&\n    parent.tag !== HostComponent &&\n    parent.tag !== HostRoot &&\n    parent.tag !== SuspenseComponent\n  ) {\n    parent = parent.return;\n  }\n  hydrationParentFiber = parent;\n}\n\nfunction popHydrationState(fiber: Fiber): boolean {\n  if (!supportsHydration) {\n    return false;\n  }\n  if (fiber !== hydrationParentFiber) {\n    // We're deeper than the current hydration context, inside an inserted\n    // tree.\n    return false;\n  }\n  if (!isHydrating) {\n    // If we're not currently hydrating but we're in a hydration context, then\n    // we were an insertion and now need to pop up reenter hydration of our\n    // siblings.\n    popToNextHostParent(fiber);\n    isHydrating = true;\n    return false;\n  }\n\n  // If we have any remaining hydratable nodes, we need to delete them now.\n  // We only do this deeper than head and body since they tend to have random\n  // other nodes in them. We also ignore components with pure text content in\n  // side of them. We also don't delete anything inside the root container.\n  if (\n    fiber.tag !== HostRoot &&\n    (fiber.tag !== HostComponent ||\n      (shouldDeleteUnhydratedTailInstances(fiber.type) &&\n        !shouldSetTextContent(fiber.type, fiber.memoizedProps)))\n  ) {\n    let nextInstance = nextHydratableInstance;\n    if (nextInstance) {\n      if (shouldClientRenderOnMismatch(fiber)) {\n        warnIfUnhydratedTailNodes(fiber);\n        throwOnHydrationMismatch(fiber);\n      } else {\n        while (nextInstance) {\n          deleteHydratableInstance(fiber, nextInstance);\n          nextInstance = getNextHydratableSibling(nextInstance);\n        }\n      }\n    }\n  }\n  popToNextHostParent(fiber);\n  if (fiber.tag === SuspenseComponent) {\n    nextHydratableInstance = skipPastDehydratedSuspenseInstance(fiber);\n  } else {\n    nextHydratableInstance = hydrationParentFiber\n      ? getNextHydratableSibling(fiber.stateNode)\n      : null;\n  }\n  return true;\n}\n\nfunction hasUnhydratedTailNodes() {\n  return isHydrating && nextHydratableInstance !== null;\n}\n\nfunction warnIfUnhydratedTailNodes(fiber: Fiber) {\n  let nextInstance = nextHydratableInstance;\n  while (nextInstance) {\n    warnUnhydratedInstance(fiber, nextInstance);\n    nextInstance = getNextHydratableSibling(nextInstance);\n  }\n}\n\nfunction resetHydrationState(): void {\n  if (!supportsHydration) {\n    return;\n  }\n\n  hydrationParentFiber = null;\n  nextHydratableInstance = null;\n  isHydrating = false;\n  didSuspendOrErrorDEV = false;\n}\n\nexport function upgradeHydrationErrorsToRecoverable(): void {\n  if (hydrationErrors !== null) {\n    // Successfully completed a forced client render. The errors that occurred\n    // during the hydration attempt are now recovered. We will log them in\n    // commit phase, once the entire tree has finished.\n    queueRecoverableErrors(hydrationErrors);\n    hydrationErrors = null;\n  }\n}\n\nfunction getIsHydrating(): boolean {\n  return isHydrating;\n}\n\nexport function queueHydrationError(error: CapturedValue<mixed>): void {\n  if (hydrationErrors === null) {\n    hydrationErrors = [error];\n  } else {\n    hydrationErrors.push(error);\n  }\n}\n\nexport {\n  warnIfHydrating,\n  enterHydrationState,\n  getIsHydrating,\n  reenterHydrationStateFromDehydratedSuspenseInstance,\n  resetHydrationState,\n  tryToClaimNextHydratableInstance,\n  prepareToHydrateHostInstance,\n  prepareToHydrateHostTextInstance,\n  prepareToHydrateHostSuspenseInstance,\n  popHydrationState,\n  hasUnhydratedTailNodes,\n  warnIfUnhydratedTailNodes,\n};\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\nimport type {Transition} from './ReactFiberTracingMarkerComponent.new';\n\nconst {ReactCurrentBatchConfig} = ReactSharedInternals;\n\nexport const NoTransition = null;\n\nexport function requestCurrentTransition(): Transition | null {\n  return ReactCurrentBatchConfig.transition;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport is from './objectIs';\nimport hasOwnProperty from './hasOwnProperty';\n\n/**\n * Performs equality by iterating through keys on an object and returning false\n * when any key has values which are not strictly equal between the arguments.\n * Returns true when the values of all keys are strictly equal.\n */\nfunction shallowEqual(objA: mixed, objB: mixed): boolean {\n  if (is(objA, objB)) {\n    return true;\n  }\n\n  if (\n    typeof objA !== 'object' ||\n    objA === null ||\n    typeof objB !== 'object' ||\n    objB === null\n  ) {\n    return false;\n  }\n\n  const keysA = Object.keys(objA);\n  const keysB = Object.keys(objB);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  }\n\n  // Test for A's keys different from B.\n  for (let i = 0; i < keysA.length; i++) {\n    const currentKey = keysA[i];\n    if (\n      !hasOwnProperty.call(objB, currentKey) ||\n      !is(objA[currentKey], objB[currentKey])\n    ) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport default shallowEqual;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactInternalTypes';\n\nimport {\n  HostComponent,\n  LazyComponent,\n  SuspenseComponent,\n  SuspenseListComponent,\n  FunctionComponent,\n  IndeterminateComponent,\n  ForwardRef,\n  SimpleMemoComponent,\n  ClassComponent,\n} from './ReactWorkTags';\nimport {\n  describeBuiltInComponentFrame,\n  describeFunctionComponentFrame,\n  describeClassComponentFrame,\n} from 'shared/ReactComponentStackFrame';\n\nfunction describeFiber(fiber: Fiber): string {\n  const owner: null | Function = __DEV__\n    ? fiber._debugOwner\n      ? fiber._debugOwner.type\n      : null\n    : null;\n  const source = __DEV__ ? fiber._debugSource : null;\n  switch (fiber.tag) {\n    case HostComponent:\n      return describeBuiltInComponentFrame(fiber.type, source, owner);\n    case LazyComponent:\n      return describeBuiltInComponentFrame('Lazy', source, owner);\n    case SuspenseComponent:\n      return describeBuiltInComponentFrame('Suspense', source, owner);\n    case SuspenseListComponent:\n      return describeBuiltInComponentFrame('SuspenseList', source, owner);\n    case FunctionComponent:\n    case IndeterminateComponent:\n    case SimpleMemoComponent:\n      return describeFunctionComponentFrame(fiber.type, source, owner);\n    case ForwardRef:\n      return describeFunctionComponentFrame(fiber.type.render, source, owner);\n    case ClassComponent:\n      return describeClassComponentFrame(fiber.type, source, owner);\n    default:\n      return '';\n  }\n}\n\nexport function getStackByFiberInDevAndProd(workInProgress: Fiber): string {\n  try {\n    let info = '';\n    let node = workInProgress;\n    do {\n      info += describeFiber(node);\n      node = node.return;\n    } while (node);\n    return info;\n  } catch (x) {\n    return '\\nError generating stack: ' + x.message + '\\n' + x.stack;\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactInternalTypes';\n\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\nimport {getStackByFiberInDevAndProd} from './ReactFiberComponentStack';\nimport getComponentNameFromFiber from 'react-reconciler/src/getComponentNameFromFiber';\n\nconst ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n\nexport let current: Fiber | null = null;\nexport let isRendering: boolean = false;\n\nexport function getCurrentFiberOwnerNameInDevOrNull(): string | null {\n  if (__DEV__) {\n    if (current === null) {\n      return null;\n    }\n    const owner = current._debugOwner;\n    if (owner !== null && typeof owner !== 'undefined') {\n      return getComponentNameFromFiber(owner);\n    }\n  }\n  return null;\n}\n\nfunction getCurrentFiberStackInDev(): string {\n  if (__DEV__) {\n    if (current === null) {\n      return '';\n    }\n    // Safe because if current fiber exists, we are reconciling,\n    // and it is guaranteed to be the work-in-progress version.\n    return getStackByFiberInDevAndProd(current);\n  }\n  return '';\n}\n\nexport function resetCurrentFiber() {\n  if (__DEV__) {\n    ReactDebugCurrentFrame.getCurrentStack = null;\n    current = null;\n    isRendering = false;\n  }\n}\n\nexport function setCurrentFiber(fiber: Fiber | null) {\n  if (__DEV__) {\n    ReactDebugCurrentFrame.getCurrentStack =\n      fiber === null ? null : getCurrentFiberStackInDev;\n    current = fiber;\n    isRendering = false;\n  }\n}\n\nexport function getCurrentFiber(): Fiber | null {\n  if (__DEV__) {\n    return current;\n  }\n  return null;\n}\n\nexport function setIsRendering(rendering: boolean) {\n  if (__DEV__) {\n    isRendering = rendering;\n  }\n}\n\nexport function getIsRendering() {\n  if (__DEV__) {\n    return isRendering;\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactInternalTypes';\n\nimport {\n  resetCurrentFiber as resetCurrentDebugFiberInDEV,\n  setCurrentFiber as setCurrentDebugFiberInDEV,\n} from './ReactCurrentFiber';\nimport getComponentNameFromFiber from 'react-reconciler/src/getComponentNameFromFiber';\nimport {StrictLegacyMode} from './ReactTypeOfMode';\n\ntype FiberArray = Array<Fiber>;\ntype FiberToFiberComponentsMap = Map<Fiber, FiberArray>;\n\nconst ReactStrictModeWarnings = {\n  recordUnsafeLifecycleWarnings(fiber: Fiber, instance: any): void {},\n  flushPendingUnsafeLifecycleWarnings(): void {},\n  recordLegacyContextWarning(fiber: Fiber, instance: any): void {},\n  flushLegacyContextWarning(): void {},\n  discardPendingWarnings(): void {},\n};\n\nif (__DEV__) {\n  const findStrictRoot = (fiber: Fiber): Fiber | null => {\n    let maybeStrictRoot = null;\n\n    let node = fiber;\n    while (node !== null) {\n      if (node.mode & StrictLegacyMode) {\n        maybeStrictRoot = node;\n      }\n      node = node.return;\n    }\n\n    return maybeStrictRoot;\n  };\n\n  const setToSortedString = set => {\n    const array = [];\n    set.forEach(value => {\n      array.push(value);\n    });\n    return array.sort().join(', ');\n  };\n\n  let pendingComponentWillMountWarnings: Array<Fiber> = [];\n  let pendingUNSAFE_ComponentWillMountWarnings: Array<Fiber> = [];\n  let pendingComponentWillReceivePropsWarnings: Array<Fiber> = [];\n  let pendingUNSAFE_ComponentWillReceivePropsWarnings: Array<Fiber> = [];\n  let pendingComponentWillUpdateWarnings: Array<Fiber> = [];\n  let pendingUNSAFE_ComponentWillUpdateWarnings: Array<Fiber> = [];\n\n  // Tracks components we have already warned about.\n  const didWarnAboutUnsafeLifecycles = new Set();\n\n  ReactStrictModeWarnings.recordUnsafeLifecycleWarnings = (\n    fiber: Fiber,\n    instance: any,\n  ) => {\n    // Dedupe strategy: Warn once per component.\n    if (didWarnAboutUnsafeLifecycles.has(fiber.type)) {\n      return;\n    }\n\n    if (\n      typeof instance.componentWillMount === 'function' &&\n      // Don't warn about react-lifecycles-compat polyfilled components.\n      instance.componentWillMount.__suppressDeprecationWarning !== true\n    ) {\n      pendingComponentWillMountWarnings.push(fiber);\n    }\n\n    if (\n      fiber.mode & StrictLegacyMode &&\n      typeof instance.UNSAFE_componentWillMount === 'function'\n    ) {\n      pendingUNSAFE_ComponentWillMountWarnings.push(fiber);\n    }\n\n    if (\n      typeof instance.componentWillReceiveProps === 'function' &&\n      instance.componentWillReceiveProps.__suppressDeprecationWarning !== true\n    ) {\n      pendingComponentWillReceivePropsWarnings.push(fiber);\n    }\n\n    if (\n      fiber.mode & StrictLegacyMode &&\n      typeof instance.UNSAFE_componentWillReceiveProps === 'function'\n    ) {\n      pendingUNSAFE_ComponentWillReceivePropsWarnings.push(fiber);\n    }\n\n    if (\n      typeof instance.componentWillUpdate === 'function' &&\n      instance.componentWillUpdate.__suppressDeprecationWarning !== true\n    ) {\n      pendingComponentWillUpdateWarnings.push(fiber);\n    }\n\n    if (\n      fiber.mode & StrictLegacyMode &&\n      typeof instance.UNSAFE_componentWillUpdate === 'function'\n    ) {\n      pendingUNSAFE_ComponentWillUpdateWarnings.push(fiber);\n    }\n  };\n\n  ReactStrictModeWarnings.flushPendingUnsafeLifecycleWarnings = () => {\n    // We do an initial pass to gather component names\n    const componentWillMountUniqueNames = new Set();\n    if (pendingComponentWillMountWarnings.length > 0) {\n      pendingComponentWillMountWarnings.forEach(fiber => {\n        componentWillMountUniqueNames.add(\n          getComponentNameFromFiber(fiber) || 'Component',\n        );\n        didWarnAboutUnsafeLifecycles.add(fiber.type);\n      });\n      pendingComponentWillMountWarnings = [];\n    }\n\n    const UNSAFE_componentWillMountUniqueNames = new Set();\n    if (pendingUNSAFE_ComponentWillMountWarnings.length > 0) {\n      pendingUNSAFE_ComponentWillMountWarnings.forEach(fiber => {\n        UNSAFE_componentWillMountUniqueNames.add(\n          getComponentNameFromFiber(fiber) || 'Component',\n        );\n        didWarnAboutUnsafeLifecycles.add(fiber.type);\n      });\n      pendingUNSAFE_ComponentWillMountWarnings = [];\n    }\n\n    const componentWillReceivePropsUniqueNames = new Set();\n    if (pendingComponentWillReceivePropsWarnings.length > 0) {\n      pendingComponentWillReceivePropsWarnings.forEach(fiber => {\n        componentWillReceivePropsUniqueNames.add(\n          getComponentNameFromFiber(fiber) || 'Component',\n        );\n        didWarnAboutUnsafeLifecycles.add(fiber.type);\n      });\n\n      pendingComponentWillReceivePropsWarnings = [];\n    }\n\n    const UNSAFE_componentWillReceivePropsUniqueNames = new Set();\n    if (pendingUNSAFE_ComponentWillReceivePropsWarnings.length > 0) {\n      pendingUNSAFE_ComponentWillReceivePropsWarnings.forEach(fiber => {\n        UNSAFE_componentWillReceivePropsUniqueNames.add(\n          getComponentNameFromFiber(fiber) || 'Component',\n        );\n        didWarnAboutUnsafeLifecycles.add(fiber.type);\n      });\n\n      pendingUNSAFE_ComponentWillReceivePropsWarnings = [];\n    }\n\n    const componentWillUpdateUniqueNames = new Set();\n    if (pendingComponentWillUpdateWarnings.length > 0) {\n      pendingComponentWillUpdateWarnings.forEach(fiber => {\n        componentWillUpdateUniqueNames.add(\n          getComponentNameFromFiber(fiber) || 'Component',\n        );\n        didWarnAboutUnsafeLifecycles.add(fiber.type);\n      });\n\n      pendingComponentWillUpdateWarnings = [];\n    }\n\n    const UNSAFE_componentWillUpdateUniqueNames = new Set();\n    if (pendingUNSAFE_ComponentWillUpdateWarnings.length > 0) {\n      pendingUNSAFE_ComponentWillUpdateWarnings.forEach(fiber => {\n        UNSAFE_componentWillUpdateUniqueNames.add(\n          getComponentNameFromFiber(fiber) || 'Component',\n        );\n        didWarnAboutUnsafeLifecycles.add(fiber.type);\n      });\n\n      pendingUNSAFE_ComponentWillUpdateWarnings = [];\n    }\n\n    // Finally, we flush all the warnings\n    // UNSAFE_ ones before the deprecated ones, since they'll be 'louder'\n    if (UNSAFE_componentWillMountUniqueNames.size > 0) {\n      const sortedNames = setToSortedString(\n        UNSAFE_componentWillMountUniqueNames,\n      );\n      console.error(\n        'Using UNSAFE_componentWillMount in strict mode is not recommended and may indicate bugs in your code. ' +\n          'See https://reactjs.org/link/unsafe-component-lifecycles for details.\\n\\n' +\n          '* Move code with side effects to componentDidMount, and set initial state in the constructor.\\n' +\n          '\\nPlease update the following components: %s',\n        sortedNames,\n      );\n    }\n\n    if (UNSAFE_componentWillReceivePropsUniqueNames.size > 0) {\n      const sortedNames = setToSortedString(\n        UNSAFE_componentWillReceivePropsUniqueNames,\n      );\n      console.error(\n        'Using UNSAFE_componentWillReceiveProps in strict mode is not recommended ' +\n          'and may indicate bugs in your code. ' +\n          'See https://reactjs.org/link/unsafe-component-lifecycles for details.\\n\\n' +\n          '* Move data fetching code or side effects to componentDidUpdate.\\n' +\n          \"* If you're updating state whenever props change, \" +\n          'refactor your code to use memoization techniques or move it to ' +\n          'static getDerivedStateFromProps. Learn more at: https://reactjs.org/link/derived-state\\n' +\n          '\\nPlease update the following components: %s',\n        sortedNames,\n      );\n    }\n\n    if (UNSAFE_componentWillUpdateUniqueNames.size > 0) {\n      const sortedNames = setToSortedString(\n        UNSAFE_componentWillUpdateUniqueNames,\n      );\n      console.error(\n        'Using UNSAFE_componentWillUpdate in strict mode is not recommended ' +\n          'and may indicate bugs in your code. ' +\n          'See https://reactjs.org/link/unsafe-component-lifecycles for details.\\n\\n' +\n          '* Move data fetching code or side effects to componentDidUpdate.\\n' +\n          '\\nPlease update the following components: %s',\n        sortedNames,\n      );\n    }\n\n    if (componentWillMountUniqueNames.size > 0) {\n      const sortedNames = setToSortedString(componentWillMountUniqueNames);\n\n      console.warn(\n        'componentWillMount has been renamed, and is not recommended for use. ' +\n          'See https://reactjs.org/link/unsafe-component-lifecycles for details.\\n\\n' +\n          '* Move code with side effects to componentDidMount, and set initial state in the constructor.\\n' +\n          '* Rename componentWillMount to UNSAFE_componentWillMount to suppress ' +\n          'this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. ' +\n          'To rename all deprecated lifecycles to their new names, you can run ' +\n          '`npx react-codemod rename-unsafe-lifecycles` in your project source folder.\\n' +\n          '\\nPlease update the following components: %s',\n        sortedNames,\n      );\n    }\n\n    if (componentWillReceivePropsUniqueNames.size > 0) {\n      const sortedNames = setToSortedString(\n        componentWillReceivePropsUniqueNames,\n      );\n\n      console.warn(\n        'componentWillReceiveProps has been renamed, and is not recommended for use. ' +\n          'See https://reactjs.org/link/unsafe-component-lifecycles for details.\\n\\n' +\n          '* Move data fetching code or side effects to componentDidUpdate.\\n' +\n          \"* If you're updating state whenever props change, refactor your \" +\n          'code to use memoization techniques or move it to ' +\n          'static getDerivedStateFromProps. Learn more at: https://reactjs.org/link/derived-state\\n' +\n          '* Rename componentWillReceiveProps to UNSAFE_componentWillReceiveProps to suppress ' +\n          'this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. ' +\n          'To rename all deprecated lifecycles to their new names, you can run ' +\n          '`npx react-codemod rename-unsafe-lifecycles` in your project source folder.\\n' +\n          '\\nPlease update the following components: %s',\n        sortedNames,\n      );\n    }\n\n    if (componentWillUpdateUniqueNames.size > 0) {\n      const sortedNames = setToSortedString(componentWillUpdateUniqueNames);\n\n      console.warn(\n        'componentWillUpdate has been renamed, and is not recommended for use. ' +\n          'See https://reactjs.org/link/unsafe-component-lifecycles for details.\\n\\n' +\n          '* Move data fetching code or side effects to componentDidUpdate.\\n' +\n          '* Rename componentWillUpdate to UNSAFE_componentWillUpdate to suppress ' +\n          'this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. ' +\n          'To rename all deprecated lifecycles to their new names, you can run ' +\n          '`npx react-codemod rename-unsafe-lifecycles` in your project source folder.\\n' +\n          '\\nPlease update the following components: %s',\n        sortedNames,\n      );\n    }\n  };\n\n  let pendingLegacyContextWarning: FiberToFiberComponentsMap = new Map();\n\n  // Tracks components we have already warned about.\n  const didWarnAboutLegacyContext = new Set();\n\n  ReactStrictModeWarnings.recordLegacyContextWarning = (\n    fiber: Fiber,\n    instance: any,\n  ) => {\n    const strictRoot = findStrictRoot(fiber);\n    if (strictRoot === null) {\n      console.error(\n        'Expected to find a StrictMode component in a strict mode tree. ' +\n          'This error is likely caused by a bug in React. Please file an issue.',\n      );\n      return;\n    }\n\n    // Dedup strategy: Warn once per component.\n    if (didWarnAboutLegacyContext.has(fiber.type)) {\n      return;\n    }\n\n    let warningsForRoot = pendingLegacyContextWarning.get(strictRoot);\n\n    if (\n      fiber.type.contextTypes != null ||\n      fiber.type.childContextTypes != null ||\n      (instance !== null && typeof instance.getChildContext === 'function')\n    ) {\n      if (warningsForRoot === undefined) {\n        warningsForRoot = [];\n        pendingLegacyContextWarning.set(strictRoot, warningsForRoot);\n      }\n      warningsForRoot.push(fiber);\n    }\n  };\n\n  ReactStrictModeWarnings.flushLegacyContextWarning = () => {\n    ((pendingLegacyContextWarning: any): FiberToFiberComponentsMap).forEach(\n      (fiberArray: FiberArray, strictRoot) => {\n        if (fiberArray.length === 0) {\n          return;\n        }\n        const firstFiber = fiberArray[0];\n\n        const uniqueNames = new Set();\n        fiberArray.forEach(fiber => {\n          uniqueNames.add(getComponentNameFromFiber(fiber) || 'Component');\n          didWarnAboutLegacyContext.add(fiber.type);\n        });\n\n        const sortedNames = setToSortedString(uniqueNames);\n\n        try {\n          setCurrentDebugFiberInDEV(firstFiber);\n          console.error(\n            'Legacy context API has been detected within a strict-mode tree.' +\n              '\\n\\nThe old API will be supported in all 16.x releases, but applications ' +\n              'using it should migrate to the new version.' +\n              '\\n\\nPlease update the following components: %s' +\n              '\\n\\nLearn more about this warning here: https://reactjs.org/link/legacy-context',\n            sortedNames,\n          );\n        } finally {\n          resetCurrentDebugFiberInDEV();\n        }\n      },\n    );\n  };\n\n  ReactStrictModeWarnings.discardPendingWarnings = () => {\n    pendingComponentWillMountWarnings = [];\n    pendingUNSAFE_ComponentWillMountWarnings = [];\n    pendingComponentWillReceivePropsWarnings = [];\n    pendingUNSAFE_ComponentWillReceivePropsWarnings = [];\n    pendingComponentWillUpdateWarnings = [];\n    pendingUNSAFE_ComponentWillUpdateWarnings = [];\n    pendingLegacyContextWarning = new Map();\n  };\n}\n\nexport default ReactStrictModeWarnings;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\n/*\n * The `'' + value` pattern (used in in perf-sensitive code) throws for Symbol\n * and Temporal.* types. See https://github.com/facebook/react/pull/22064.\n *\n * The functions in this module will throw an easier-to-understand,\n * easier-to-debug exception with a clear errors message message explaining the\n * problem. (Instead of a confusing exception thrown inside the implementation\n * of the `value` object).\n */\n\n// $FlowFixMe only called in DEV, so void return is not possible.\nfunction typeName(value: mixed): string {\n  if (__DEV__) {\n    // toStringTag is needed for namespaced types like Temporal.Instant\n    const hasToStringTag = typeof Symbol === 'function' && Symbol.toStringTag;\n    const type =\n      (hasToStringTag && (value: any)[Symbol.toStringTag]) ||\n      (value: any).constructor.name ||\n      'Object';\n    return type;\n  }\n}\n\n// $FlowFixMe only called in DEV, so void return is not possible.\nfunction willCoercionThrow(value: mixed): boolean {\n  if (__DEV__) {\n    try {\n      testStringCoercion(value);\n      return false;\n    } catch (e) {\n      return true;\n    }\n  }\n}\n\nfunction testStringCoercion(value: mixed) {\n  // If you ended up here by following an exception call stack, here's what's\n  // happened: you supplied an object or symbol value to React (as a prop, key,\n  // DOM attribute, CSS property, string ref, etc.) and when React tried to\n  // coerce it to a string using `'' + value`, an exception was thrown.\n  //\n  // The most common types that will cause this exception are `Symbol` instances\n  // and Temporal objects like `Temporal.Instant`. But any object that has a\n  // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this\n  // exception. (Library authors do this to prevent users from using built-in\n  // numeric operators like `+` or comparison operators like `>=` because custom\n  // methods are needed to perform accurate arithmetic or comparison.)\n  //\n  // To fix the problem, coerce this object or symbol value to a string before\n  // passing it to React. The most reliable way is usually `String(value)`.\n  //\n  // To find which value is throwing, check the browser or debugger console.\n  // Before this exception was thrown, there should be `console.error` output\n  // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the\n  // problem and how that type was used: key, atrribute, input value prop, etc.\n  // In most cases, this console output also shows the component and its\n  // ancestor components where the exception happened.\n  //\n  // eslint-disable-next-line react-internal/safe-string-coercion\n  return '' + (value: any);\n}\n\nexport function checkAttributeStringCoercion(\n  value: mixed,\n  attributeName: string,\n) {\n  if (__DEV__) {\n    if (willCoercionThrow(value)) {\n      console.error(\n        'The provided `%s` attribute is an unsupported type %s.' +\n          ' This value must be coerced to a string before before using it here.',\n        attributeName,\n        typeName(value),\n      );\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n    }\n  }\n}\n\nexport function checkKeyStringCoercion(value: mixed) {\n  if (__DEV__) {\n    if (willCoercionThrow(value)) {\n      console.error(\n        'The provided key is an unsupported type %s.' +\n          ' This value must be coerced to a string before before using it here.',\n        typeName(value),\n      );\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n    }\n  }\n}\n\nexport function checkPropStringCoercion(value: mixed, propName: string) {\n  if (__DEV__) {\n    if (willCoercionThrow(value)) {\n      console.error(\n        'The provided `%s` prop is an unsupported type %s.' +\n          ' This value must be coerced to a string before before using it here.',\n        propName,\n        typeName(value),\n      );\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n    }\n  }\n}\n\nexport function checkCSSPropertyStringCoercion(value: mixed, propName: string) {\n  if (__DEV__) {\n    if (willCoercionThrow(value)) {\n      console.error(\n        'The provided `%s` CSS property is an unsupported type %s.' +\n          ' This value must be coerced to a string before before using it here.',\n        propName,\n        typeName(value),\n      );\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n    }\n  }\n}\n\nexport function checkHtmlStringCoercion(value: mixed) {\n  if (__DEV__) {\n    if (willCoercionThrow(value)) {\n      console.error(\n        'The provided HTML markup uses a value of unsupported type %s.' +\n          ' This value must be coerced to a string before before using it here.',\n        typeName(value),\n      );\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n    }\n  }\n}\n\nexport function checkFormFieldValueStringCoercion(value: mixed) {\n  if (__DEV__) {\n    if (willCoercionThrow(value)) {\n      console.error(\n        'Form field values (value, checked, defaultValue, or defaultChecked props)' +\n          ' must be strings, not %s.' +\n          ' This value must be coerced to a string before before using it here.',\n        typeName(value),\n      );\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n    }\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport assign from 'shared/assign';\n\nexport function resolveDefaultProps(Component: any, baseProps: Object): Object {\n  if (Component && Component.defaultProps) {\n    // Resolve default props. Taken from ReactElement\n    const props = assign({}, baseProps);\n    const defaultProps = Component.defaultProps;\n    for (const propName in defaultProps) {\n      if (props[propName] === undefined) {\n        props[propName] = defaultProps[propName];\n      }\n    }\n    return props;\n  }\n  return baseProps;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {ReactContext, ReactProviderType} from 'shared/ReactTypes';\nimport type {\n  Fiber,\n  ContextDependency,\n  Dependencies,\n} from './ReactInternalTypes';\nimport type {StackCursor} from './ReactFiberStack.old';\nimport type {Lanes} from './ReactFiberLane.old';\nimport type {SharedQueue} from './ReactFiberClassUpdateQueue.old';\n\nimport {isPrimaryRenderer} from './ReactFiberHostConfig';\nimport {createCursor, push, pop} from './ReactFiberStack.old';\nimport {\n  ContextProvider,\n  ClassComponent,\n  DehydratedFragment,\n} from './ReactWorkTags';\nimport {\n  NoLanes,\n  NoTimestamp,\n  isSubsetOfLanes,\n  includesSomeLane,\n  mergeLanes,\n  pickArbitraryLane,\n} from './ReactFiberLane.old';\nimport {\n  NoFlags,\n  DidPropagateContext,\n  NeedsPropagation,\n} from './ReactFiberFlags';\n\nimport is from 'shared/objectIs';\nimport {createUpdate, ForceUpdate} from './ReactFiberClassUpdateQueue.old';\nimport {markWorkInProgressReceivedUpdate} from './ReactFiberBeginWork.old';\nimport {\n  enableLazyContextPropagation,\n  enableServerContext,\n} from 'shared/ReactFeatureFlags';\nimport {REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED} from 'shared/ReactSymbols';\n\nconst valueCursor: StackCursor<mixed> = createCursor(null);\n\nlet rendererSigil;\nif (__DEV__) {\n  // Use this to detect multiple renderers using the same context\n  rendererSigil = {};\n}\n\nlet currentlyRenderingFiber: Fiber | null = null;\nlet lastContextDependency: ContextDependency<mixed> | null = null;\nlet lastFullyObservedContext: ReactContext<any> | null = null;\n\nlet isDisallowedContextReadInDEV: boolean = false;\n\nexport function resetContextDependencies(): void {\n  // This is called right before React yields execution, to ensure `readContext`\n  // cannot be called outside the render phase.\n  currentlyRenderingFiber = null;\n  lastContextDependency = null;\n  lastFullyObservedContext = null;\n  if (__DEV__) {\n    isDisallowedContextReadInDEV = false;\n  }\n}\n\nexport function enterDisallowedContextReadInDEV(): void {\n  if (__DEV__) {\n    isDisallowedContextReadInDEV = true;\n  }\n}\n\nexport function exitDisallowedContextReadInDEV(): void {\n  if (__DEV__) {\n    isDisallowedContextReadInDEV = false;\n  }\n}\n\nexport function pushProvider<T>(\n  providerFiber: Fiber,\n  context: ReactContext<T>,\n  nextValue: T,\n): void {\n  if (isPrimaryRenderer) {\n    push(valueCursor, context._currentValue, providerFiber);\n\n    context._currentValue = nextValue;\n    if (__DEV__) {\n      if (\n        context._currentRenderer !== undefined &&\n        context._currentRenderer !== null &&\n        context._currentRenderer !== rendererSigil\n      ) {\n        console.error(\n          'Detected multiple renderers concurrently rendering the ' +\n            'same context provider. This is currently unsupported.',\n        );\n      }\n      context._currentRenderer = rendererSigil;\n    }\n  } else {\n    push(valueCursor, context._currentValue2, providerFiber);\n\n    context._currentValue2 = nextValue;\n    if (__DEV__) {\n      if (\n        context._currentRenderer2 !== undefined &&\n        context._currentRenderer2 !== null &&\n        context._currentRenderer2 !== rendererSigil\n      ) {\n        console.error(\n          'Detected multiple renderers concurrently rendering the ' +\n            'same context provider. This is currently unsupported.',\n        );\n      }\n      context._currentRenderer2 = rendererSigil;\n    }\n  }\n}\n\nexport function popProvider(\n  context: ReactContext<any>,\n  providerFiber: Fiber,\n): void {\n  const currentValue = valueCursor.current;\n  pop(valueCursor, providerFiber);\n  if (isPrimaryRenderer) {\n    if (\n      enableServerContext &&\n      currentValue === REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED\n    ) {\n      context._currentValue = context._defaultValue;\n    } else {\n      context._currentValue = currentValue;\n    }\n  } else {\n    if (\n      enableServerContext &&\n      currentValue === REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED\n    ) {\n      context._currentValue2 = context._defaultValue;\n    } else {\n      context._currentValue2 = currentValue;\n    }\n  }\n}\n\nexport function scheduleContextWorkOnParentPath(\n  parent: Fiber | null,\n  renderLanes: Lanes,\n  propagationRoot: Fiber,\n) {\n  // Update the child lanes of all the ancestors, including the alternates.\n  let node = parent;\n  while (node !== null) {\n    const alternate = node.alternate;\n    if (!isSubsetOfLanes(node.childLanes, renderLanes)) {\n      node.childLanes = mergeLanes(node.childLanes, renderLanes);\n      if (alternate !== null) {\n        alternate.childLanes = mergeLanes(alternate.childLanes, renderLanes);\n      }\n    } else if (\n      alternate !== null &&\n      !isSubsetOfLanes(alternate.childLanes, renderLanes)\n    ) {\n      alternate.childLanes = mergeLanes(alternate.childLanes, renderLanes);\n    } else {\n      // Neither alternate was updated.\n      // Normally, this would mean that the rest of the\n      // ancestor path already has sufficient priority.\n      // However, this is not necessarily true inside offscreen\n      // or fallback trees because childLanes may be inconsistent\n      // with the surroundings. This is why we continue the loop.\n    }\n    if (node === propagationRoot) {\n      break;\n    }\n    node = node.return;\n  }\n  if (__DEV__) {\n    if (node !== propagationRoot) {\n      console.error(\n        'Expected to find the propagation root when scheduling context work. ' +\n          'This error is likely caused by a bug in React. Please file an issue.',\n      );\n    }\n  }\n}\n\nexport function propagateContextChange<T>(\n  workInProgress: Fiber,\n  context: ReactContext<T>,\n  renderLanes: Lanes,\n): void {\n  if (enableLazyContextPropagation) {\n    // TODO: This path is only used by Cache components. Update\n    // lazilyPropagateParentContextChanges to look for Cache components so they\n    // can take advantage of lazy propagation.\n    const forcePropagateEntireTree = true;\n    propagateContextChanges(\n      workInProgress,\n      [context],\n      renderLanes,\n      forcePropagateEntireTree,\n    );\n  } else {\n    propagateContextChange_eager(workInProgress, context, renderLanes);\n  }\n}\n\nfunction propagateContextChange_eager<T>(\n  workInProgress: Fiber,\n  context: ReactContext<T>,\n  renderLanes: Lanes,\n): void {\n  // Only used by eager implementation\n  if (enableLazyContextPropagation) {\n    return;\n  }\n  let fiber = workInProgress.child;\n  if (fiber !== null) {\n    // Set the return pointer of the child to the work-in-progress fiber.\n    fiber.return = workInProgress;\n  }\n  while (fiber !== null) {\n    let nextFiber;\n\n    // Visit this fiber.\n    const list = fiber.dependencies;\n    if (list !== null) {\n      nextFiber = fiber.child;\n\n      let dependency = list.firstContext;\n      while (dependency !== null) {\n        // Check if the context matches.\n        if (dependency.context === context) {\n          // Match! Schedule an update on this fiber.\n          if (fiber.tag === ClassComponent) {\n            // Schedule a force update on the work-in-progress.\n            const lane = pickArbitraryLane(renderLanes);\n            const update = createUpdate(NoTimestamp, lane);\n            update.tag = ForceUpdate;\n            // TODO: Because we don't have a work-in-progress, this will add the\n            // update to the current fiber, too, which means it will persist even if\n            // this render is thrown away. Since it's a race condition, not sure it's\n            // worth fixing.\n\n            // Inlined `enqueueUpdate` to remove interleaved update check\n            const updateQueue = fiber.updateQueue;\n            if (updateQueue === null) {\n              // Only occurs if the fiber has been unmounted.\n            } else {\n              const sharedQueue: SharedQueue<any> = (updateQueue: any).shared;\n              const pending = sharedQueue.pending;\n              if (pending === null) {\n                // This is the first update. Create a circular list.\n                update.next = update;\n              } else {\n                update.next = pending.next;\n                pending.next = update;\n              }\n              sharedQueue.pending = update;\n            }\n          }\n\n          fiber.lanes = mergeLanes(fiber.lanes, renderLanes);\n          const alternate = fiber.alternate;\n          if (alternate !== null) {\n            alternate.lanes = mergeLanes(alternate.lanes, renderLanes);\n          }\n          scheduleContextWorkOnParentPath(\n            fiber.return,\n            renderLanes,\n            workInProgress,\n          );\n\n          // Mark the updated lanes on the list, too.\n          list.lanes = mergeLanes(list.lanes, renderLanes);\n\n          // Since we already found a match, we can stop traversing the\n          // dependency list.\n          break;\n        }\n        dependency = dependency.next;\n      }\n    } else if (fiber.tag === ContextProvider) {\n      // Don't scan deeper if this is a matching provider\n      nextFiber = fiber.type === workInProgress.type ? null : fiber.child;\n    } else if (fiber.tag === DehydratedFragment) {\n      // If a dehydrated suspense boundary is in this subtree, we don't know\n      // if it will have any context consumers in it. The best we can do is\n      // mark it as having updates.\n      const parentSuspense = fiber.return;\n\n      if (parentSuspense === null) {\n        throw new Error(\n          'We just came from a parent so we must have had a parent. This is a bug in React.',\n        );\n      }\n\n      parentSuspense.lanes = mergeLanes(parentSuspense.lanes, renderLanes);\n      const alternate = parentSuspense.alternate;\n      if (alternate !== null) {\n        alternate.lanes = mergeLanes(alternate.lanes, renderLanes);\n      }\n      // This is intentionally passing this fiber as the parent\n      // because we want to schedule this fiber as having work\n      // on its children. We'll use the childLanes on\n      // this fiber to indicate that a context has changed.\n      scheduleContextWorkOnParentPath(\n        parentSuspense,\n        renderLanes,\n        workInProgress,\n      );\n      nextFiber = fiber.sibling;\n    } else {\n      // Traverse down.\n      nextFiber = fiber.child;\n    }\n\n    if (nextFiber !== null) {\n      // Set the return pointer of the child to the work-in-progress fiber.\n      nextFiber.return = fiber;\n    } else {\n      // No child. Traverse to next sibling.\n      nextFiber = fiber;\n      while (nextFiber !== null) {\n        if (nextFiber === workInProgress) {\n          // We're back to the root of this subtree. Exit.\n          nextFiber = null;\n          break;\n        }\n        const sibling = nextFiber.sibling;\n        if (sibling !== null) {\n          // Set the return pointer of the sibling to the work-in-progress fiber.\n          sibling.return = nextFiber.return;\n          nextFiber = sibling;\n          break;\n        }\n        // No more siblings. Traverse up.\n        nextFiber = nextFiber.return;\n      }\n    }\n    fiber = nextFiber;\n  }\n}\n\nfunction propagateContextChanges<T>(\n  workInProgress: Fiber,\n  contexts: Array<any>,\n  renderLanes: Lanes,\n  forcePropagateEntireTree: boolean,\n): void {\n  // Only used by lazy implementation\n  if (!enableLazyContextPropagation) {\n    return;\n  }\n  let fiber = workInProgress.child;\n  if (fiber !== null) {\n    // Set the return pointer of the child to the work-in-progress fiber.\n    fiber.return = workInProgress;\n  }\n  while (fiber !== null) {\n    let nextFiber;\n\n    // Visit this fiber.\n    const list = fiber.dependencies;\n    if (list !== null) {\n      nextFiber = fiber.child;\n\n      let dep = list.firstContext;\n      findChangedDep: while (dep !== null) {\n        // Assigning these to constants to help Flow\n        const dependency = dep;\n        const consumer = fiber;\n        findContext: for (let i = 0; i < contexts.length; i++) {\n          const context: ReactContext<T> = contexts[i];\n          // Check if the context matches.\n          // TODO: Compare selected values to bail out early.\n          if (dependency.context === context) {\n            // Match! Schedule an update on this fiber.\n\n            // In the lazy implementation, don't mark a dirty flag on the\n            // dependency itself. Not all changes are propagated, so we can't\n            // rely on the propagation function alone to determine whether\n            // something has changed; the consumer will check. In the future, we\n            // could add back a dirty flag as an optimization to avoid double\n            // checking, but until we have selectors it's not really worth\n            // the trouble.\n            consumer.lanes = mergeLanes(consumer.lanes, renderLanes);\n            const alternate = consumer.alternate;\n            if (alternate !== null) {\n              alternate.lanes = mergeLanes(alternate.lanes, renderLanes);\n            }\n            scheduleContextWorkOnParentPath(\n              consumer.return,\n              renderLanes,\n              workInProgress,\n            );\n\n            if (!forcePropagateEntireTree) {\n              // During lazy propagation, when we find a match, we can defer\n              // propagating changes to the children, because we're going to\n              // visit them during render. We should continue propagating the\n              // siblings, though\n              nextFiber = null;\n            }\n\n            // Since we already found a match, we can stop traversing the\n            // dependency list.\n            break findChangedDep;\n          }\n        }\n        dep = dependency.next;\n      }\n    } else if (fiber.tag === DehydratedFragment) {\n      // If a dehydrated suspense boundary is in this subtree, we don't know\n      // if it will have any context consumers in it. The best we can do is\n      // mark it as having updates.\n      const parentSuspense = fiber.return;\n\n      if (parentSuspense === null) {\n        throw new Error(\n          'We just came from a parent so we must have had a parent. This is a bug in React.',\n        );\n      }\n\n      parentSuspense.lanes = mergeLanes(parentSuspense.lanes, renderLanes);\n      const alternate = parentSuspense.alternate;\n      if (alternate !== null) {\n        alternate.lanes = mergeLanes(alternate.lanes, renderLanes);\n      }\n      // This is intentionally passing this fiber as the parent\n      // because we want to schedule this fiber as having work\n      // on its children. We'll use the childLanes on\n      // this fiber to indicate that a context has changed.\n      scheduleContextWorkOnParentPath(\n        parentSuspense,\n        renderLanes,\n        workInProgress,\n      );\n      nextFiber = null;\n    } else {\n      // Traverse down.\n      nextFiber = fiber.child;\n    }\n\n    if (nextFiber !== null) {\n      // Set the return pointer of the child to the work-in-progress fiber.\n      nextFiber.return = fiber;\n    } else {\n      // No child. Traverse to next sibling.\n      nextFiber = fiber;\n      while (nextFiber !== null) {\n        if (nextFiber === workInProgress) {\n          // We're back to the root of this subtree. Exit.\n          nextFiber = null;\n          break;\n        }\n        const sibling = nextFiber.sibling;\n        if (sibling !== null) {\n          // Set the return pointer of the sibling to the work-in-progress fiber.\n          sibling.return = nextFiber.return;\n          nextFiber = sibling;\n          break;\n        }\n        // No more siblings. Traverse up.\n        nextFiber = nextFiber.return;\n      }\n    }\n    fiber = nextFiber;\n  }\n}\n\nexport function lazilyPropagateParentContextChanges(\n  current: Fiber,\n  workInProgress: Fiber,\n  renderLanes: Lanes,\n) {\n  const forcePropagateEntireTree = false;\n  propagateParentContextChanges(\n    current,\n    workInProgress,\n    renderLanes,\n    forcePropagateEntireTree,\n  );\n}\n\n// Used for propagating a deferred tree (Suspense, Offscreen). We must propagate\n// to the entire subtree, because we won't revisit it until after the current\n// render has completed, at which point we'll have lost track of which providers\n// have changed.\nexport function propagateParentContextChangesToDeferredTree(\n  current: Fiber,\n  workInProgress: Fiber,\n  renderLanes: Lanes,\n) {\n  const forcePropagateEntireTree = true;\n  propagateParentContextChanges(\n    current,\n    workInProgress,\n    renderLanes,\n    forcePropagateEntireTree,\n  );\n}\n\nfunction propagateParentContextChanges(\n  current: Fiber,\n  workInProgress: Fiber,\n  renderLanes: Lanes,\n  forcePropagateEntireTree: boolean,\n) {\n  if (!enableLazyContextPropagation) {\n    return;\n  }\n\n  // Collect all the parent providers that changed. Since this is usually small\n  // number, we use an Array instead of Set.\n  let contexts = null;\n  let parent = workInProgress;\n  let isInsidePropagationBailout = false;\n  while (parent !== null) {\n    if (!isInsidePropagationBailout) {\n      if ((parent.flags & NeedsPropagation) !== NoFlags) {\n        isInsidePropagationBailout = true;\n      } else if ((parent.flags & DidPropagateContext) !== NoFlags) {\n        break;\n      }\n    }\n\n    if (parent.tag === ContextProvider) {\n      const currentParent = parent.alternate;\n\n      if (currentParent === null) {\n        throw new Error('Should have a current fiber. This is a bug in React.');\n      }\n\n      const oldProps = currentParent.memoizedProps;\n      if (oldProps !== null) {\n        const providerType: ReactProviderType<any> = parent.type;\n        const context: ReactContext<any> = providerType._context;\n\n        const newProps = parent.pendingProps;\n        const newValue = newProps.value;\n\n        const oldValue = oldProps.value;\n\n        if (!is(newValue, oldValue)) {\n          if (contexts !== null) {\n            contexts.push(context);\n          } else {\n            contexts = [context];\n          }\n        }\n      }\n    }\n    parent = parent.return;\n  }\n\n  if (contexts !== null) {\n    // If there were any changed providers, search through the children and\n    // propagate their changes.\n    propagateContextChanges(\n      workInProgress,\n      contexts,\n      renderLanes,\n      forcePropagateEntireTree,\n    );\n  }\n\n  // This is an optimization so that we only propagate once per subtree. If a\n  // deeply nested child bails out, and it calls this propagation function, it\n  // uses this flag to know that the remaining ancestor providers have already\n  // been propagated.\n  //\n  // NOTE: This optimization is only necessary because we sometimes enter the\n  // begin phase of nodes that don't have any work scheduled on them —\n  // specifically, the siblings of a node that _does_ have scheduled work. The\n  // siblings will bail out and call this function again, even though we already\n  // propagated content changes to it and its subtree. So we use this flag to\n  // mark that the parent providers already propagated.\n  //\n  // Unfortunately, though, we need to ignore this flag when we're inside a\n  // tree whose context propagation was deferred — that's what the\n  // `NeedsPropagation` flag is for.\n  //\n  // If we could instead bail out before entering the siblings' begin phase,\n  // then we could remove both `DidPropagateContext` and `NeedsPropagation`.\n  // Consider this as part of the next refactor to the fiber tree structure.\n  workInProgress.flags |= DidPropagateContext;\n}\n\nexport function checkIfContextChanged(currentDependencies: Dependencies) {\n  if (!enableLazyContextPropagation) {\n    return false;\n  }\n  // Iterate over the current dependencies to see if something changed. This\n  // only gets called if props and state has already bailed out, so it's a\n  // relatively uncommon path, except at the root of a changed subtree.\n  // Alternatively, we could move these comparisons into `readContext`, but\n  // that's a much hotter path, so I think this is an appropriate trade off.\n  let dependency = currentDependencies.firstContext;\n  while (dependency !== null) {\n    const context = dependency.context;\n    const newValue = isPrimaryRenderer\n      ? context._currentValue\n      : context._currentValue2;\n    const oldValue = dependency.memoizedValue;\n    if (!is(newValue, oldValue)) {\n      return true;\n    }\n    dependency = dependency.next;\n  }\n  return false;\n}\n\nexport function prepareToReadContext(\n  workInProgress: Fiber,\n  renderLanes: Lanes,\n): void {\n  currentlyRenderingFiber = workInProgress;\n  lastContextDependency = null;\n  lastFullyObservedContext = null;\n\n  const dependencies = workInProgress.dependencies;\n  if (dependencies !== null) {\n    if (enableLazyContextPropagation) {\n      // Reset the work-in-progress list\n      dependencies.firstContext = null;\n    } else {\n      const firstContext = dependencies.firstContext;\n      if (firstContext !== null) {\n        if (includesSomeLane(dependencies.lanes, renderLanes)) {\n          // Context list has a pending update. Mark that this fiber performed work.\n          markWorkInProgressReceivedUpdate();\n        }\n        // Reset the work-in-progress list\n        dependencies.firstContext = null;\n      }\n    }\n  }\n}\n\nexport function readContext<T>(context: ReactContext<T>): T {\n  if (__DEV__) {\n    // This warning would fire if you read context inside a Hook like useMemo.\n    // Unlike the class check below, it's not enforced in production for perf.\n    if (isDisallowedContextReadInDEV) {\n      console.error(\n        'Context can only be read while React is rendering. ' +\n          'In classes, you can read it in the render method or getDerivedStateFromProps. ' +\n          'In function components, you can read it directly in the function body, but not ' +\n          'inside Hooks like useReducer() or useMemo().',\n      );\n    }\n  }\n\n  const value = isPrimaryRenderer\n    ? context._currentValue\n    : context._currentValue2;\n\n  if (lastFullyObservedContext === context) {\n    // Nothing to do. We already observe everything in this context.\n  } else {\n    const contextItem = {\n      context: ((context: any): ReactContext<mixed>),\n      memoizedValue: value,\n      next: null,\n    };\n\n    if (lastContextDependency === null) {\n      if (currentlyRenderingFiber === null) {\n        throw new Error(\n          'Context can only be read while React is rendering. ' +\n            'In classes, you can read it in the render method or getDerivedStateFromProps. ' +\n            'In function components, you can read it directly in the function body, but not ' +\n            'inside Hooks like useReducer() or useMemo().',\n        );\n      }\n\n      // This is the first dependency for this component. Create a new list.\n      lastContextDependency = contextItem;\n      currentlyRenderingFiber.dependencies = {\n        lanes: NoLanes,\n        firstContext: contextItem,\n      };\n      if (enableLazyContextPropagation) {\n        currentlyRenderingFiber.flags |= NeedsPropagation;\n      }\n    } else {\n      // Append a new context item.\n      lastContextDependency = lastContextDependency.next = contextItem;\n    }\n  }\n  return value;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {FiberRoot} from './ReactInternalTypes';\nimport type {\n  UpdateQueue as HookQueue,\n  Update as HookUpdate,\n} from './ReactFiberHooks.old';\nimport type {\n  SharedQueue as ClassQueue,\n  Update as ClassUpdate,\n} from './ReactFiberClassUpdateQueue.old';\nimport type {Lane} from './ReactFiberLane.old';\n\nimport {warnAboutUpdateOnNotYetMountedFiberInDEV} from './ReactFiberWorkLoop.old';\nimport {mergeLanes} from './ReactFiberLane.old';\nimport {NoFlags, Placement, Hydrating} from './ReactFiberFlags';\nimport {HostRoot} from './ReactWorkTags';\n\n// An array of all update queues that received updates during the current\n// render. When this render exits, either because it finishes or because it is\n// interrupted, the interleaved updates will be transferred onto the main part\n// of the queue.\nlet concurrentQueues: Array<\n  HookQueue<any, any> | ClassQueue<any>,\n> | null = null;\n\nexport function pushConcurrentUpdateQueue(\n  queue: HookQueue<any, any> | ClassQueue<any>,\n) {\n  if (concurrentQueues === null) {\n    concurrentQueues = [queue];\n  } else {\n    concurrentQueues.push(queue);\n  }\n}\n\nexport function finishQueueingConcurrentUpdates() {\n  // Transfer the interleaved updates onto the main queue. Each queue has a\n  // `pending` field and an `interleaved` field. When they are not null, they\n  // point to the last node in a circular linked list. We need to append the\n  // interleaved list to the end of the pending list by joining them into a\n  // single, circular list.\n  if (concurrentQueues !== null) {\n    for (let i = 0; i < concurrentQueues.length; i++) {\n      const queue = concurrentQueues[i];\n      const lastInterleavedUpdate = queue.interleaved;\n      if (lastInterleavedUpdate !== null) {\n        queue.interleaved = null;\n        const firstInterleavedUpdate = lastInterleavedUpdate.next;\n        const lastPendingUpdate = queue.pending;\n        if (lastPendingUpdate !== null) {\n          const firstPendingUpdate = lastPendingUpdate.next;\n          lastPendingUpdate.next = (firstInterleavedUpdate: any);\n          lastInterleavedUpdate.next = (firstPendingUpdate: any);\n        }\n        queue.pending = (lastInterleavedUpdate: any);\n      }\n    }\n    concurrentQueues = null;\n  }\n}\n\nexport function enqueueConcurrentHookUpdate<S, A>(\n  fiber: Fiber,\n  queue: HookQueue<S, A>,\n  update: HookUpdate<S, A>,\n  lane: Lane,\n) {\n  const interleaved = queue.interleaved;\n  if (interleaved === null) {\n    // This is the first update. Create a circular list.\n    update.next = update;\n    // At the end of the current render, this queue's interleaved updates will\n    // be transferred to the pending queue.\n    pushConcurrentUpdateQueue(queue);\n  } else {\n    update.next = interleaved.next;\n    interleaved.next = update;\n  }\n  queue.interleaved = update;\n\n  return markUpdateLaneFromFiberToRoot(fiber, lane);\n}\n\nexport function enqueueConcurrentHookUpdateAndEagerlyBailout<S, A>(\n  fiber: Fiber,\n  queue: HookQueue<S, A>,\n  update: HookUpdate<S, A>,\n  lane: Lane,\n): void {\n  const interleaved = queue.interleaved;\n  if (interleaved === null) {\n    // This is the first update. Create a circular list.\n    update.next = update;\n    // At the end of the current render, this queue's interleaved updates will\n    // be transferred to the pending queue.\n    pushConcurrentUpdateQueue(queue);\n  } else {\n    update.next = interleaved.next;\n    interleaved.next = update;\n  }\n  queue.interleaved = update;\n}\n\nexport function enqueueConcurrentClassUpdate<State>(\n  fiber: Fiber,\n  queue: ClassQueue<State>,\n  update: ClassUpdate<State>,\n  lane: Lane,\n) {\n  const interleaved = queue.interleaved;\n  if (interleaved === null) {\n    // This is the first update. Create a circular list.\n    update.next = update;\n    // At the end of the current render, this queue's interleaved updates will\n    // be transferred to the pending queue.\n    pushConcurrentUpdateQueue(queue);\n  } else {\n    update.next = interleaved.next;\n    interleaved.next = update;\n  }\n  queue.interleaved = update;\n\n  return markUpdateLaneFromFiberToRoot(fiber, lane);\n}\n\nexport function enqueueConcurrentRenderForLane(fiber: Fiber, lane: Lane) {\n  return markUpdateLaneFromFiberToRoot(fiber, lane);\n}\n\n// Calling this function outside this module should only be done for backwards\n// compatibility and should always be accompanied by a warning.\nexport const unsafe_markUpdateLaneFromFiberToRoot = markUpdateLaneFromFiberToRoot;\n\nfunction markUpdateLaneFromFiberToRoot(\n  sourceFiber: Fiber,\n  lane: Lane,\n): FiberRoot | null {\n  // Update the source fiber's lanes\n  sourceFiber.lanes = mergeLanes(sourceFiber.lanes, lane);\n  let alternate = sourceFiber.alternate;\n  if (alternate !== null) {\n    alternate.lanes = mergeLanes(alternate.lanes, lane);\n  }\n  if (__DEV__) {\n    if (\n      alternate === null &&\n      (sourceFiber.flags & (Placement | Hydrating)) !== NoFlags\n    ) {\n      warnAboutUpdateOnNotYetMountedFiberInDEV(sourceFiber);\n    }\n  }\n  // Walk the parent path to the root and update the child lanes.\n  let node = sourceFiber;\n  let parent = sourceFiber.return;\n  while (parent !== null) {\n    parent.childLanes = mergeLanes(parent.childLanes, lane);\n    alternate = parent.alternate;\n    if (alternate !== null) {\n      alternate.childLanes = mergeLanes(alternate.childLanes, lane);\n    } else {\n      if (__DEV__) {\n        if ((parent.flags & (Placement | Hydrating)) !== NoFlags) {\n          warnAboutUpdateOnNotYetMountedFiberInDEV(sourceFiber);\n        }\n      }\n    }\n    node = parent;\n    parent = parent.return;\n  }\n  if (node.tag === HostRoot) {\n    const root: FiberRoot = node.stateNode;\n    return root;\n  } else {\n    return null;\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\n// UpdateQueue is a linked list of prioritized updates.\n//\n// Like fibers, update queues come in pairs: a current queue, which represents\n// the visible state of the screen, and a work-in-progress queue, which can be\n// mutated and processed asynchronously before it is committed — a form of\n// double buffering. If a work-in-progress render is discarded before finishing,\n// we create a new work-in-progress by cloning the current queue.\n//\n// Both queues share a persistent, singly-linked list structure. To schedule an\n// update, we append it to the end of both queues. Each queue maintains a\n// pointer to first update in the persistent list that hasn't been processed.\n// The work-in-progress pointer always has a position equal to or greater than\n// the current queue, since we always work on that one. The current queue's\n// pointer is only updated during the commit phase, when we swap in the\n// work-in-progress.\n//\n// For example:\n//\n//   Current pointer:           A - B - C - D - E - F\n//   Work-in-progress pointer:              D - E - F\n//                                          ^\n//                                          The work-in-progress queue has\n//                                          processed more updates than current.\n//\n// The reason we append to both queues is because otherwise we might drop\n// updates without ever processing them. For example, if we only add updates to\n// the work-in-progress queue, some updates could be lost whenever a work-in\n// -progress render restarts by cloning from current. Similarly, if we only add\n// updates to the current queue, the updates will be lost whenever an already\n// in-progress queue commits and swaps with the current queue. However, by\n// adding to both queues, we guarantee that the update will be part of the next\n// work-in-progress. (And because the work-in-progress queue becomes the\n// current queue once it commits, there's no danger of applying the same\n// update twice.)\n//\n// Prioritization\n// --------------\n//\n// Updates are not sorted by priority, but by insertion; new updates are always\n// appended to the end of the list.\n//\n// The priority is still important, though. When processing the update queue\n// during the render phase, only the updates with sufficient priority are\n// included in the result. If we skip an update because it has insufficient\n// priority, it remains in the queue to be processed later, during a lower\n// priority render. Crucially, all updates subsequent to a skipped update also\n// remain in the queue *regardless of their priority*. That means high priority\n// updates are sometimes processed twice, at two separate priorities. We also\n// keep track of a base state, that represents the state before the first\n// update in the queue is applied.\n//\n// For example:\n//\n//   Given a base state of '', and the following queue of updates\n//\n//     A1 - B2 - C1 - D2\n//\n//   where the number indicates the priority, and the update is applied to the\n//   previous state by appending a letter, React will process these updates as\n//   two separate renders, one per distinct priority level:\n//\n//   First render, at priority 1:\n//     Base state: ''\n//     Updates: [A1, C1]\n//     Result state: 'AC'\n//\n//   Second render, at priority 2:\n//     Base state: 'A'            <-  The base state does not include C1,\n//                                    because B2 was skipped.\n//     Updates: [B2, C1, D2]      <-  C1 was rebased on top of B2\n//     Result state: 'ABCD'\n//\n// Because we process updates in insertion order, and rebase high priority\n// updates when preceding updates are skipped, the final result is deterministic\n// regardless of priority. Intermediate state may vary according to system\n// resources, but the final state is always the same.\n\nimport type {Fiber, FiberRoot} from './ReactInternalTypes';\nimport type {Lanes, Lane} from './ReactFiberLane.old';\n\nimport {\n  NoLane,\n  NoLanes,\n  isSubsetOfLanes,\n  mergeLanes,\n  isTransitionLane,\n  intersectLanes,\n  markRootEntangled,\n} from './ReactFiberLane.old';\nimport {\n  enterDisallowedContextReadInDEV,\n  exitDisallowedContextReadInDEV,\n} from './ReactFiberNewContext.old';\nimport {Callback, ShouldCapture, DidCapture} from './ReactFiberFlags';\n\nimport {debugRenderPhaseSideEffectsForStrictMode} from 'shared/ReactFeatureFlags';\n\nimport {StrictLegacyMode} from './ReactTypeOfMode';\nimport {\n  markSkippedUpdateLanes,\n  isUnsafeClassRenderPhaseUpdate,\n} from './ReactFiberWorkLoop.old';\nimport {\n  enqueueConcurrentClassUpdate,\n  unsafe_markUpdateLaneFromFiberToRoot,\n} from './ReactFiberConcurrentUpdates.old';\nimport {setIsStrictModeForDevtools} from './ReactFiberDevToolsHook.old';\n\nimport assign from 'shared/assign';\n\nexport type Update<State> = {|\n  // TODO: Temporary field. Will remove this by storing a map of\n  // transition -> event time on the root.\n  eventTime: number,\n  lane: Lane,\n\n  tag: 0 | 1 | 2 | 3,\n  payload: any,\n  callback: (() => mixed) | null,\n\n  next: Update<State> | null,\n|};\n\nexport type SharedQueue<State> = {|\n  pending: Update<State> | null,\n  interleaved: Update<State> | null,\n  lanes: Lanes,\n|};\n\nexport type UpdateQueue<State> = {|\n  baseState: State,\n  firstBaseUpdate: Update<State> | null,\n  lastBaseUpdate: Update<State> | null,\n  shared: SharedQueue<State>,\n  effects: Array<Update<State>> | null,\n|};\n\nexport const UpdateState = 0;\nexport const ReplaceState = 1;\nexport const ForceUpdate = 2;\nexport const CaptureUpdate = 3;\n\n// Global state that is reset at the beginning of calling `processUpdateQueue`.\n// It should only be read right after calling `processUpdateQueue`, via\n// `checkHasForceUpdateAfterProcessing`.\nlet hasForceUpdate = false;\n\nlet didWarnUpdateInsideUpdate;\nlet currentlyProcessingQueue;\nexport let resetCurrentlyProcessingQueue;\nif (__DEV__) {\n  didWarnUpdateInsideUpdate = false;\n  currentlyProcessingQueue = null;\n  resetCurrentlyProcessingQueue = () => {\n    currentlyProcessingQueue = null;\n  };\n}\n\nexport function initializeUpdateQueue<State>(fiber: Fiber): void {\n  const queue: UpdateQueue<State> = {\n    baseState: fiber.memoizedState,\n    firstBaseUpdate: null,\n    lastBaseUpdate: null,\n    shared: {\n      pending: null,\n      interleaved: null,\n      lanes: NoLanes,\n    },\n    effects: null,\n  };\n  fiber.updateQueue = queue;\n}\n\nexport function cloneUpdateQueue<State>(\n  current: Fiber,\n  workInProgress: Fiber,\n): void {\n  // Clone the update queue from current. Unless it's already a clone.\n  const queue: UpdateQueue<State> = (workInProgress.updateQueue: any);\n  const currentQueue: UpdateQueue<State> = (current.updateQueue: any);\n  if (queue === currentQueue) {\n    const clone: UpdateQueue<State> = {\n      baseState: currentQueue.baseState,\n      firstBaseUpdate: currentQueue.firstBaseUpdate,\n      lastBaseUpdate: currentQueue.lastBaseUpdate,\n      shared: currentQueue.shared,\n      effects: currentQueue.effects,\n    };\n    workInProgress.updateQueue = clone;\n  }\n}\n\nexport function createUpdate(eventTime: number, lane: Lane): Update<*> {\n  const update: Update<*> = {\n    eventTime,\n    lane,\n\n    tag: UpdateState,\n    payload: null,\n    callback: null,\n\n    next: null,\n  };\n  return update;\n}\n\nexport function enqueueUpdate<State>(\n  fiber: Fiber,\n  update: Update<State>,\n  lane: Lane,\n): FiberRoot | null {\n  const updateQueue = fiber.updateQueue;\n  if (updateQueue === null) {\n    // Only occurs if the fiber has been unmounted.\n    return null;\n  }\n\n  const sharedQueue: SharedQueue<State> = (updateQueue: any).shared;\n\n  if (__DEV__) {\n    if (\n      currentlyProcessingQueue === sharedQueue &&\n      !didWarnUpdateInsideUpdate\n    ) {\n      console.error(\n        'An update (setState, replaceState, or forceUpdate) was scheduled ' +\n          'from inside an update function. Update functions should be pure, ' +\n          'with zero side-effects. Consider using componentDidUpdate or a ' +\n          'callback.',\n      );\n      didWarnUpdateInsideUpdate = true;\n    }\n  }\n\n  if (isUnsafeClassRenderPhaseUpdate(fiber)) {\n    // This is an unsafe render phase update. Add directly to the update\n    // queue so we can process it immediately during the current render.\n    const pending = sharedQueue.pending;\n    if (pending === null) {\n      // This is the first update. Create a circular list.\n      update.next = update;\n    } else {\n      update.next = pending.next;\n      pending.next = update;\n    }\n    sharedQueue.pending = update;\n\n    // Update the childLanes even though we're most likely already rendering\n    // this fiber. This is for backwards compatibility in the case where you\n    // update a different component during render phase than the one that is\n    // currently renderings (a pattern that is accompanied by a warning).\n    return unsafe_markUpdateLaneFromFiberToRoot(fiber, lane);\n  } else {\n    return enqueueConcurrentClassUpdate(fiber, sharedQueue, update, lane);\n  }\n}\n\nexport function entangleTransitions(root: FiberRoot, fiber: Fiber, lane: Lane) {\n  const updateQueue = fiber.updateQueue;\n  if (updateQueue === null) {\n    // Only occurs if the fiber has been unmounted.\n    return;\n  }\n\n  const sharedQueue: SharedQueue<mixed> = (updateQueue: any).shared;\n  if (isTransitionLane(lane)) {\n    let queueLanes = sharedQueue.lanes;\n\n    // If any entangled lanes are no longer pending on the root, then they must\n    // have finished. We can remove them from the shared queue, which represents\n    // a superset of the actually pending lanes. In some cases we may entangle\n    // more than we need to, but that's OK. In fact it's worse if we *don't*\n    // entangle when we should.\n    queueLanes = intersectLanes(queueLanes, root.pendingLanes);\n\n    // Entangle the new transition lane with the other transition lanes.\n    const newQueueLanes = mergeLanes(queueLanes, lane);\n    sharedQueue.lanes = newQueueLanes;\n    // Even if queue.lanes already include lane, we don't know for certain if\n    // the lane finished since the last time we entangled it. So we need to\n    // entangle it again, just to be sure.\n    markRootEntangled(root, newQueueLanes);\n  }\n}\n\nexport function enqueueCapturedUpdate<State>(\n  workInProgress: Fiber,\n  capturedUpdate: Update<State>,\n) {\n  // Captured updates are updates that are thrown by a child during the render\n  // phase. They should be discarded if the render is aborted. Therefore,\n  // we should only put them on the work-in-progress queue, not the current one.\n  let queue: UpdateQueue<State> = (workInProgress.updateQueue: any);\n\n  // Check if the work-in-progress queue is a clone.\n  const current = workInProgress.alternate;\n  if (current !== null) {\n    const currentQueue: UpdateQueue<State> = (current.updateQueue: any);\n    if (queue === currentQueue) {\n      // The work-in-progress queue is the same as current. This happens when\n      // we bail out on a parent fiber that then captures an error thrown by\n      // a child. Since we want to append the update only to the work-in\n      // -progress queue, we need to clone the updates. We usually clone during\n      // processUpdateQueue, but that didn't happen in this case because we\n      // skipped over the parent when we bailed out.\n      let newFirst = null;\n      let newLast = null;\n      const firstBaseUpdate = queue.firstBaseUpdate;\n      if (firstBaseUpdate !== null) {\n        // Loop through the updates and clone them.\n        let update = firstBaseUpdate;\n        do {\n          const clone: Update<State> = {\n            eventTime: update.eventTime,\n            lane: update.lane,\n\n            tag: update.tag,\n            payload: update.payload,\n            callback: update.callback,\n\n            next: null,\n          };\n          if (newLast === null) {\n            newFirst = newLast = clone;\n          } else {\n            newLast.next = clone;\n            newLast = clone;\n          }\n          update = update.next;\n        } while (update !== null);\n\n        // Append the captured update the end of the cloned list.\n        if (newLast === null) {\n          newFirst = newLast = capturedUpdate;\n        } else {\n          newLast.next = capturedUpdate;\n          newLast = capturedUpdate;\n        }\n      } else {\n        // There are no base updates.\n        newFirst = newLast = capturedUpdate;\n      }\n      queue = {\n        baseState: currentQueue.baseState,\n        firstBaseUpdate: newFirst,\n        lastBaseUpdate: newLast,\n        shared: currentQueue.shared,\n        effects: currentQueue.effects,\n      };\n      workInProgress.updateQueue = queue;\n      return;\n    }\n  }\n\n  // Append the update to the end of the list.\n  const lastBaseUpdate = queue.lastBaseUpdate;\n  if (lastBaseUpdate === null) {\n    queue.firstBaseUpdate = capturedUpdate;\n  } else {\n    lastBaseUpdate.next = capturedUpdate;\n  }\n  queue.lastBaseUpdate = capturedUpdate;\n}\n\nfunction getStateFromUpdate<State>(\n  workInProgress: Fiber,\n  queue: UpdateQueue<State>,\n  update: Update<State>,\n  prevState: State,\n  nextProps: any,\n  instance: any,\n): any {\n  switch (update.tag) {\n    case ReplaceState: {\n      const payload = update.payload;\n      if (typeof payload === 'function') {\n        // Updater function\n        if (__DEV__) {\n          enterDisallowedContextReadInDEV();\n        }\n        const nextState = payload.call(instance, prevState, nextProps);\n        if (__DEV__) {\n          if (\n            debugRenderPhaseSideEffectsForStrictMode &&\n            workInProgress.mode & StrictLegacyMode\n          ) {\n            setIsStrictModeForDevtools(true);\n            try {\n              payload.call(instance, prevState, nextProps);\n            } finally {\n              setIsStrictModeForDevtools(false);\n            }\n          }\n          exitDisallowedContextReadInDEV();\n        }\n        return nextState;\n      }\n      // State object\n      return payload;\n    }\n    case CaptureUpdate: {\n      workInProgress.flags =\n        (workInProgress.flags & ~ShouldCapture) | DidCapture;\n    }\n    // Intentional fallthrough\n    case UpdateState: {\n      const payload = update.payload;\n      let partialState;\n      if (typeof payload === 'function') {\n        // Updater function\n        if (__DEV__) {\n          enterDisallowedContextReadInDEV();\n        }\n        partialState = payload.call(instance, prevState, nextProps);\n        if (__DEV__) {\n          if (\n            debugRenderPhaseSideEffectsForStrictMode &&\n            workInProgress.mode & StrictLegacyMode\n          ) {\n            setIsStrictModeForDevtools(true);\n            try {\n              payload.call(instance, prevState, nextProps);\n            } finally {\n              setIsStrictModeForDevtools(false);\n            }\n          }\n          exitDisallowedContextReadInDEV();\n        }\n      } else {\n        // Partial state object\n        partialState = payload;\n      }\n      if (partialState === null || partialState === undefined) {\n        // Null and undefined are treated as no-ops.\n        return prevState;\n      }\n      // Merge the partial state and the previous state.\n      return assign({}, prevState, partialState);\n    }\n    case ForceUpdate: {\n      hasForceUpdate = true;\n      return prevState;\n    }\n  }\n  return prevState;\n}\n\nexport function processUpdateQueue<State>(\n  workInProgress: Fiber,\n  props: any,\n  instance: any,\n  renderLanes: Lanes,\n): void {\n  // This is always non-null on a ClassComponent or HostRoot\n  const queue: UpdateQueue<State> = (workInProgress.updateQueue: any);\n\n  hasForceUpdate = false;\n\n  if (__DEV__) {\n    currentlyProcessingQueue = queue.shared;\n  }\n\n  let firstBaseUpdate = queue.firstBaseUpdate;\n  let lastBaseUpdate = queue.lastBaseUpdate;\n\n  // Check if there are pending updates. If so, transfer them to the base queue.\n  let pendingQueue = queue.shared.pending;\n  if (pendingQueue !== null) {\n    queue.shared.pending = null;\n\n    // The pending queue is circular. Disconnect the pointer between first\n    // and last so that it's non-circular.\n    const lastPendingUpdate = pendingQueue;\n    const firstPendingUpdate = lastPendingUpdate.next;\n    lastPendingUpdate.next = null;\n    // Append pending updates to base queue\n    if (lastBaseUpdate === null) {\n      firstBaseUpdate = firstPendingUpdate;\n    } else {\n      lastBaseUpdate.next = firstPendingUpdate;\n    }\n    lastBaseUpdate = lastPendingUpdate;\n\n    // If there's a current queue, and it's different from the base queue, then\n    // we need to transfer the updates to that queue, too. Because the base\n    // queue is a singly-linked list with no cycles, we can append to both\n    // lists and take advantage of structural sharing.\n    // TODO: Pass `current` as argument\n    const current = workInProgress.alternate;\n    if (current !== null) {\n      // This is always non-null on a ClassComponent or HostRoot\n      const currentQueue: UpdateQueue<State> = (current.updateQueue: any);\n      const currentLastBaseUpdate = currentQueue.lastBaseUpdate;\n      if (currentLastBaseUpdate !== lastBaseUpdate) {\n        if (currentLastBaseUpdate === null) {\n          currentQueue.firstBaseUpdate = firstPendingUpdate;\n        } else {\n          currentLastBaseUpdate.next = firstPendingUpdate;\n        }\n        currentQueue.lastBaseUpdate = lastPendingUpdate;\n      }\n    }\n  }\n\n  // These values may change as we process the queue.\n  if (firstBaseUpdate !== null) {\n    // Iterate through the list of updates to compute the result.\n    let newState = queue.baseState;\n    // TODO: Don't need to accumulate this. Instead, we can remove renderLanes\n    // from the original lanes.\n    let newLanes = NoLanes;\n\n    let newBaseState = null;\n    let newFirstBaseUpdate = null;\n    let newLastBaseUpdate = null;\n\n    let update = firstBaseUpdate;\n    do {\n      const updateLane = update.lane;\n      const updateEventTime = update.eventTime;\n      if (!isSubsetOfLanes(renderLanes, updateLane)) {\n        // Priority is insufficient. Skip this update. If this is the first\n        // skipped update, the previous update/state is the new base\n        // update/state.\n        const clone: Update<State> = {\n          eventTime: updateEventTime,\n          lane: updateLane,\n\n          tag: update.tag,\n          payload: update.payload,\n          callback: update.callback,\n\n          next: null,\n        };\n        if (newLastBaseUpdate === null) {\n          newFirstBaseUpdate = newLastBaseUpdate = clone;\n          newBaseState = newState;\n        } else {\n          newLastBaseUpdate = newLastBaseUpdate.next = clone;\n        }\n        // Update the remaining priority in the queue.\n        newLanes = mergeLanes(newLanes, updateLane);\n      } else {\n        // This update does have sufficient priority.\n\n        if (newLastBaseUpdate !== null) {\n          const clone: Update<State> = {\n            eventTime: updateEventTime,\n            // This update is going to be committed so we never want uncommit\n            // it. Using NoLane works because 0 is a subset of all bitmasks, so\n            // this will never be skipped by the check above.\n            lane: NoLane,\n\n            tag: update.tag,\n            payload: update.payload,\n            callback: update.callback,\n\n            next: null,\n          };\n          newLastBaseUpdate = newLastBaseUpdate.next = clone;\n        }\n\n        // Process this update.\n        newState = getStateFromUpdate(\n          workInProgress,\n          queue,\n          update,\n          newState,\n          props,\n          instance,\n        );\n        const callback = update.callback;\n        if (\n          callback !== null &&\n          // If the update was already committed, we should not queue its\n          // callback again.\n          update.lane !== NoLane\n        ) {\n          workInProgress.flags |= Callback;\n          const effects = queue.effects;\n          if (effects === null) {\n            queue.effects = [update];\n          } else {\n            effects.push(update);\n          }\n        }\n      }\n      update = update.next;\n      if (update === null) {\n        pendingQueue = queue.shared.pending;\n        if (pendingQueue === null) {\n          break;\n        } else {\n          // An update was scheduled from inside a reducer. Add the new\n          // pending updates to the end of the list and keep processing.\n          const lastPendingUpdate = pendingQueue;\n          // Intentionally unsound. Pending updates form a circular list, but we\n          // unravel them when transferring them to the base queue.\n          const firstPendingUpdate = ((lastPendingUpdate.next: any): Update<State>);\n          lastPendingUpdate.next = null;\n          update = firstPendingUpdate;\n          queue.lastBaseUpdate = lastPendingUpdate;\n          queue.shared.pending = null;\n        }\n      }\n    } while (true);\n\n    if (newLastBaseUpdate === null) {\n      newBaseState = newState;\n    }\n\n    queue.baseState = ((newBaseState: any): State);\n    queue.firstBaseUpdate = newFirstBaseUpdate;\n    queue.lastBaseUpdate = newLastBaseUpdate;\n\n    // Interleaved updates are stored on a separate queue. We aren't going to\n    // process them during this render, but we do need to track which lanes\n    // are remaining.\n    const lastInterleaved = queue.shared.interleaved;\n    if (lastInterleaved !== null) {\n      let interleaved = lastInterleaved;\n      do {\n        newLanes = mergeLanes(newLanes, interleaved.lane);\n        interleaved = ((interleaved: any).next: Update<State>);\n      } while (interleaved !== lastInterleaved);\n    } else if (firstBaseUpdate === null) {\n      // `queue.lanes` is used for entangling transitions. We can set it back to\n      // zero once the queue is empty.\n      queue.shared.lanes = NoLanes;\n    }\n\n    // Set the remaining expiration time to be whatever is remaining in the queue.\n    // This should be fine because the only two other things that contribute to\n    // expiration time are props and context. We're already in the middle of the\n    // begin phase by the time we start processing the queue, so we've already\n    // dealt with the props. Context in components that specify\n    // shouldComponentUpdate is tricky; but we'll have to account for\n    // that regardless.\n    markSkippedUpdateLanes(newLanes);\n    workInProgress.lanes = newLanes;\n    workInProgress.memoizedState = newState;\n  }\n\n  if (__DEV__) {\n    currentlyProcessingQueue = null;\n  }\n}\n\nfunction callCallback(callback, context) {\n  if (typeof callback !== 'function') {\n    throw new Error(\n      'Invalid argument passed as callback. Expected a function. Instead ' +\n        `received: ${callback}`,\n    );\n  }\n\n  callback.call(context);\n}\n\nexport function resetHasForceUpdateBeforeProcessing() {\n  hasForceUpdate = false;\n}\n\nexport function checkHasForceUpdateAfterProcessing(): boolean {\n  return hasForceUpdate;\n}\n\nexport function commitUpdateQueue<State>(\n  finishedWork: Fiber,\n  finishedQueue: UpdateQueue<State>,\n  instance: any,\n): void {\n  // Commit the effects\n  const effects = finishedQueue.effects;\n  finishedQueue.effects = null;\n  if (effects !== null) {\n    for (let i = 0; i < effects.length; i++) {\n      const effect = effects[i];\n      const callback = effect.callback;\n      if (callback !== null) {\n        effect.callback = null;\n        callCallback(callback, instance);\n      }\n    }\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactInternalTypes';\nimport type {Lanes} from './ReactFiberLane.old';\nimport type {UpdateQueue} from './ReactFiberClassUpdateQueue.old';\nimport type {Flags} from './ReactFiberFlags';\n\nimport * as React from 'react';\nimport {\n  LayoutStatic,\n  MountLayoutDev,\n  Update,\n  Snapshot,\n} from './ReactFiberFlags';\nimport {\n  debugRenderPhaseSideEffectsForStrictMode,\n  disableLegacyContext,\n  enableDebugTracing,\n  enableSchedulingProfiler,\n  warnAboutDeprecatedLifecycles,\n  enableStrictEffects,\n  enableLazyContextPropagation,\n  enableSuspenseLayoutEffectSemantics,\n} from 'shared/ReactFeatureFlags';\nimport ReactStrictModeWarnings from './ReactStrictModeWarnings.old';\nimport {isMounted} from './ReactFiberTreeReflection';\nimport {get as getInstance, set as setInstance} from 'shared/ReactInstanceMap';\nimport shallowEqual from 'shared/shallowEqual';\nimport getComponentNameFromFiber from 'react-reconciler/src/getComponentNameFromFiber';\nimport getComponentNameFromType from 'shared/getComponentNameFromType';\nimport assign from 'shared/assign';\nimport isArray from 'shared/isArray';\nimport {REACT_CONTEXT_TYPE, REACT_PROVIDER_TYPE} from 'shared/ReactSymbols';\n\nimport {resolveDefaultProps} from './ReactFiberLazyComponent.old';\nimport {\n  DebugTracingMode,\n  NoMode,\n  StrictLegacyMode,\n  StrictEffectsMode,\n} from './ReactTypeOfMode';\n\nimport {\n  enqueueUpdate,\n  entangleTransitions,\n  processUpdateQueue,\n  checkHasForceUpdateAfterProcessing,\n  resetHasForceUpdateBeforeProcessing,\n  createUpdate,\n  ReplaceState,\n  ForceUpdate,\n  initializeUpdateQueue,\n  cloneUpdateQueue,\n} from './ReactFiberClassUpdateQueue.old';\nimport {NoLanes} from './ReactFiberLane.old';\nimport {\n  cacheContext,\n  getMaskedContext,\n  getUnmaskedContext,\n  hasContextChanged,\n  emptyContextObject,\n} from './ReactFiberContext.old';\nimport {readContext, checkIfContextChanged} from './ReactFiberNewContext.old';\nimport {\n  requestEventTime,\n  requestUpdateLane,\n  scheduleUpdateOnFiber,\n} from './ReactFiberWorkLoop.old';\nimport {logForceUpdateScheduled, logStateUpdateScheduled} from './DebugTracing';\nimport {\n  markForceUpdateScheduled,\n  markStateUpdateScheduled,\n  setIsStrictModeForDevtools,\n} from './ReactFiberDevToolsHook.old';\n\nconst fakeInternalInstance = {};\n\n// React.Component uses a shared frozen object by default.\n// We'll use it to determine whether we need to initialize legacy refs.\nexport const emptyRefsObject = new React.Component().refs;\n\nlet didWarnAboutStateAssignmentForComponent;\nlet didWarnAboutUninitializedState;\nlet didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate;\nlet didWarnAboutLegacyLifecyclesAndDerivedState;\nlet didWarnAboutUndefinedDerivedState;\nlet warnOnUndefinedDerivedState;\nlet warnOnInvalidCallback;\nlet didWarnAboutDirectlyAssigningPropsToState;\nlet didWarnAboutContextTypeAndContextTypes;\nlet didWarnAboutInvalidateContextType;\n\nif (__DEV__) {\n  didWarnAboutStateAssignmentForComponent = new Set();\n  didWarnAboutUninitializedState = new Set();\n  didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate = new Set();\n  didWarnAboutLegacyLifecyclesAndDerivedState = new Set();\n  didWarnAboutDirectlyAssigningPropsToState = new Set();\n  didWarnAboutUndefinedDerivedState = new Set();\n  didWarnAboutContextTypeAndContextTypes = new Set();\n  didWarnAboutInvalidateContextType = new Set();\n\n  const didWarnOnInvalidCallback = new Set();\n\n  warnOnInvalidCallback = function(callback: mixed, callerName: string) {\n    if (callback === null || typeof callback === 'function') {\n      return;\n    }\n    const key = callerName + '_' + (callback: any);\n    if (!didWarnOnInvalidCallback.has(key)) {\n      didWarnOnInvalidCallback.add(key);\n      console.error(\n        '%s(...): Expected the last optional `callback` argument to be a ' +\n          'function. Instead received: %s.',\n        callerName,\n        callback,\n      );\n    }\n  };\n\n  warnOnUndefinedDerivedState = function(type, partialState) {\n    if (partialState === undefined) {\n      const componentName = getComponentNameFromType(type) || 'Component';\n      if (!didWarnAboutUndefinedDerivedState.has(componentName)) {\n        didWarnAboutUndefinedDerivedState.add(componentName);\n        console.error(\n          '%s.getDerivedStateFromProps(): A valid state object (or null) must be returned. ' +\n            'You have returned undefined.',\n          componentName,\n        );\n      }\n    }\n  };\n\n  // This is so gross but it's at least non-critical and can be removed if\n  // it causes problems. This is meant to give a nicer error message for\n  // ReactDOM15.unstable_renderSubtreeIntoContainer(reactDOM16Component,\n  // ...)) which otherwise throws a \"_processChildContext is not a function\"\n  // exception.\n  Object.defineProperty(fakeInternalInstance, '_processChildContext', {\n    enumerable: false,\n    value: function() {\n      throw new Error(\n        '_processChildContext is not available in React 16+. This likely ' +\n          'means you have multiple copies of React and are attempting to nest ' +\n          'a React 15 tree inside a React 16 tree using ' +\n          \"unstable_renderSubtreeIntoContainer, which isn't supported. Try \" +\n          'to make sure you have only one copy of React (and ideally, switch ' +\n          'to ReactDOM.createPortal).',\n      );\n    },\n  });\n  Object.freeze(fakeInternalInstance);\n}\n\nfunction applyDerivedStateFromProps(\n  workInProgress: Fiber,\n  ctor: any,\n  getDerivedStateFromProps: (props: any, state: any) => any,\n  nextProps: any,\n) {\n  const prevState = workInProgress.memoizedState;\n  let partialState = getDerivedStateFromProps(nextProps, prevState);\n  if (__DEV__) {\n    if (\n      debugRenderPhaseSideEffectsForStrictMode &&\n      workInProgress.mode & StrictLegacyMode\n    ) {\n      setIsStrictModeForDevtools(true);\n      try {\n        // Invoke the function an extra time to help detect side-effects.\n        partialState = getDerivedStateFromProps(nextProps, prevState);\n      } finally {\n        setIsStrictModeForDevtools(false);\n      }\n    }\n    warnOnUndefinedDerivedState(ctor, partialState);\n  }\n  // Merge the partial state and the previous state.\n  const memoizedState =\n    partialState === null || partialState === undefined\n      ? prevState\n      : assign({}, prevState, partialState);\n  workInProgress.memoizedState = memoizedState;\n\n  // Once the update queue is empty, persist the derived state onto the\n  // base state.\n  if (workInProgress.lanes === NoLanes) {\n    // Queue is always non-null for classes\n    const updateQueue: UpdateQueue<any> = (workInProgress.updateQueue: any);\n    updateQueue.baseState = memoizedState;\n  }\n}\n\nconst classComponentUpdater = {\n  isMounted,\n  enqueueSetState(inst, payload, callback) {\n    const fiber = getInstance(inst);\n    const eventTime = requestEventTime();\n    const lane = requestUpdateLane(fiber);\n\n    const update = createUpdate(eventTime, lane);\n    update.payload = payload;\n    if (callback !== undefined && callback !== null) {\n      if (__DEV__) {\n        warnOnInvalidCallback(callback, 'setState');\n      }\n      update.callback = callback;\n    }\n\n    const root = enqueueUpdate(fiber, update, lane);\n    if (root !== null) {\n      scheduleUpdateOnFiber(root, fiber, lane, eventTime);\n      entangleTransitions(root, fiber, lane);\n    }\n\n    if (__DEV__) {\n      if (enableDebugTracing) {\n        if (fiber.mode & DebugTracingMode) {\n          const name = getComponentNameFromFiber(fiber) || 'Unknown';\n          logStateUpdateScheduled(name, lane, payload);\n        }\n      }\n    }\n\n    if (enableSchedulingProfiler) {\n      markStateUpdateScheduled(fiber, lane);\n    }\n  },\n  enqueueReplaceState(inst, payload, callback) {\n    const fiber = getInstance(inst);\n    const eventTime = requestEventTime();\n    const lane = requestUpdateLane(fiber);\n\n    const update = createUpdate(eventTime, lane);\n    update.tag = ReplaceState;\n    update.payload = payload;\n\n    if (callback !== undefined && callback !== null) {\n      if (__DEV__) {\n        warnOnInvalidCallback(callback, 'replaceState');\n      }\n      update.callback = callback;\n    }\n\n    const root = enqueueUpdate(fiber, update, lane);\n    if (root !== null) {\n      scheduleUpdateOnFiber(root, fiber, lane, eventTime);\n      entangleTransitions(root, fiber, lane);\n    }\n\n    if (__DEV__) {\n      if (enableDebugTracing) {\n        if (fiber.mode & DebugTracingMode) {\n          const name = getComponentNameFromFiber(fiber) || 'Unknown';\n          logStateUpdateScheduled(name, lane, payload);\n        }\n      }\n    }\n\n    if (enableSchedulingProfiler) {\n      markStateUpdateScheduled(fiber, lane);\n    }\n  },\n  enqueueForceUpdate(inst, callback) {\n    const fiber = getInstance(inst);\n    const eventTime = requestEventTime();\n    const lane = requestUpdateLane(fiber);\n\n    const update = createUpdate(eventTime, lane);\n    update.tag = ForceUpdate;\n\n    if (callback !== undefined && callback !== null) {\n      if (__DEV__) {\n        warnOnInvalidCallback(callback, 'forceUpdate');\n      }\n      update.callback = callback;\n    }\n\n    const root = enqueueUpdate(fiber, update, lane);\n    if (root !== null) {\n      scheduleUpdateOnFiber(root, fiber, lane, eventTime);\n      entangleTransitions(root, fiber, lane);\n    }\n\n    if (__DEV__) {\n      if (enableDebugTracing) {\n        if (fiber.mode & DebugTracingMode) {\n          const name = getComponentNameFromFiber(fiber) || 'Unknown';\n          logForceUpdateScheduled(name, lane);\n        }\n      }\n    }\n\n    if (enableSchedulingProfiler) {\n      markForceUpdateScheduled(fiber, lane);\n    }\n  },\n};\n\nfunction checkShouldComponentUpdate(\n  workInProgress,\n  ctor,\n  oldProps,\n  newProps,\n  oldState,\n  newState,\n  nextContext,\n) {\n  const instance = workInProgress.stateNode;\n  if (typeof instance.shouldComponentUpdate === 'function') {\n    let shouldUpdate = instance.shouldComponentUpdate(\n      newProps,\n      newState,\n      nextContext,\n    );\n    if (__DEV__) {\n      if (\n        debugRenderPhaseSideEffectsForStrictMode &&\n        workInProgress.mode & StrictLegacyMode\n      ) {\n        setIsStrictModeForDevtools(true);\n        try {\n          // Invoke the function an extra time to help detect side-effects.\n          shouldUpdate = instance.shouldComponentUpdate(\n            newProps,\n            newState,\n            nextContext,\n          );\n        } finally {\n          setIsStrictModeForDevtools(false);\n        }\n      }\n      if (shouldUpdate === undefined) {\n        console.error(\n          '%s.shouldComponentUpdate(): Returned undefined instead of a ' +\n            'boolean value. Make sure to return true or false.',\n          getComponentNameFromType(ctor) || 'Component',\n        );\n      }\n    }\n\n    return shouldUpdate;\n  }\n\n  if (ctor.prototype && ctor.prototype.isPureReactComponent) {\n    return (\n      !shallowEqual(oldProps, newProps) || !shallowEqual(oldState, newState)\n    );\n  }\n\n  return true;\n}\n\nfunction checkClassInstance(workInProgress: Fiber, ctor: any, newProps: any) {\n  const instance = workInProgress.stateNode;\n  if (__DEV__) {\n    const name = getComponentNameFromType(ctor) || 'Component';\n    const renderPresent = instance.render;\n\n    if (!renderPresent) {\n      if (ctor.prototype && typeof ctor.prototype.render === 'function') {\n        console.error(\n          '%s(...): No `render` method found on the returned component ' +\n            'instance: did you accidentally return an object from the constructor?',\n          name,\n        );\n      } else {\n        console.error(\n          '%s(...): No `render` method found on the returned component ' +\n            'instance: you may have forgotten to define `render`.',\n          name,\n        );\n      }\n    }\n\n    if (\n      instance.getInitialState &&\n      !instance.getInitialState.isReactClassApproved &&\n      !instance.state\n    ) {\n      console.error(\n        'getInitialState was defined on %s, a plain JavaScript class. ' +\n          'This is only supported for classes created using React.createClass. ' +\n          'Did you mean to define a state property instead?',\n        name,\n      );\n    }\n    if (\n      instance.getDefaultProps &&\n      !instance.getDefaultProps.isReactClassApproved\n    ) {\n      console.error(\n        'getDefaultProps was defined on %s, a plain JavaScript class. ' +\n          'This is only supported for classes created using React.createClass. ' +\n          'Use a static property to define defaultProps instead.',\n        name,\n      );\n    }\n    if (instance.propTypes) {\n      console.error(\n        'propTypes was defined as an instance property on %s. Use a static ' +\n          'property to define propTypes instead.',\n        name,\n      );\n    }\n    if (instance.contextType) {\n      console.error(\n        'contextType was defined as an instance property on %s. Use a static ' +\n          'property to define contextType instead.',\n        name,\n      );\n    }\n\n    if (disableLegacyContext) {\n      if (ctor.childContextTypes) {\n        console.error(\n          '%s uses the legacy childContextTypes API which is no longer supported. ' +\n            'Use React.createContext() instead.',\n          name,\n        );\n      }\n      if (ctor.contextTypes) {\n        console.error(\n          '%s uses the legacy contextTypes API which is no longer supported. ' +\n            'Use React.createContext() with static contextType instead.',\n          name,\n        );\n      }\n    } else {\n      if (instance.contextTypes) {\n        console.error(\n          'contextTypes was defined as an instance property on %s. Use a static ' +\n            'property to define contextTypes instead.',\n          name,\n        );\n      }\n\n      if (\n        ctor.contextType &&\n        ctor.contextTypes &&\n        !didWarnAboutContextTypeAndContextTypes.has(ctor)\n      ) {\n        didWarnAboutContextTypeAndContextTypes.add(ctor);\n        console.error(\n          '%s declares both contextTypes and contextType static properties. ' +\n            'The legacy contextTypes property will be ignored.',\n          name,\n        );\n      }\n    }\n\n    if (typeof instance.componentShouldUpdate === 'function') {\n      console.error(\n        '%s has a method called ' +\n          'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' +\n          'The name is phrased as a question because the function is ' +\n          'expected to return a value.',\n        name,\n      );\n    }\n    if (\n      ctor.prototype &&\n      ctor.prototype.isPureReactComponent &&\n      typeof instance.shouldComponentUpdate !== 'undefined'\n    ) {\n      console.error(\n        '%s has a method called shouldComponentUpdate(). ' +\n          'shouldComponentUpdate should not be used when extending React.PureComponent. ' +\n          'Please extend React.Component if shouldComponentUpdate is used.',\n        getComponentNameFromType(ctor) || 'A pure component',\n      );\n    }\n    if (typeof instance.componentDidUnmount === 'function') {\n      console.error(\n        '%s has a method called ' +\n          'componentDidUnmount(). But there is no such lifecycle method. ' +\n          'Did you mean componentWillUnmount()?',\n        name,\n      );\n    }\n    if (typeof instance.componentDidReceiveProps === 'function') {\n      console.error(\n        '%s has a method called ' +\n          'componentDidReceiveProps(). But there is no such lifecycle method. ' +\n          'If you meant to update the state in response to changing props, ' +\n          'use componentWillReceiveProps(). If you meant to fetch data or ' +\n          'run side-effects or mutations after React has updated the UI, use componentDidUpdate().',\n        name,\n      );\n    }\n    if (typeof instance.componentWillRecieveProps === 'function') {\n      console.error(\n        '%s has a method called ' +\n          'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?',\n        name,\n      );\n    }\n    if (typeof instance.UNSAFE_componentWillRecieveProps === 'function') {\n      console.error(\n        '%s has a method called ' +\n          'UNSAFE_componentWillRecieveProps(). Did you mean UNSAFE_componentWillReceiveProps()?',\n        name,\n      );\n    }\n    const hasMutatedProps = instance.props !== newProps;\n    if (instance.props !== undefined && hasMutatedProps) {\n      console.error(\n        '%s(...): When calling super() in `%s`, make sure to pass ' +\n          \"up the same props that your component's constructor was passed.\",\n        name,\n        name,\n      );\n    }\n    if (instance.defaultProps) {\n      console.error(\n        'Setting defaultProps as an instance property on %s is not supported and will be ignored.' +\n          ' Instead, define defaultProps as a static property on %s.',\n        name,\n        name,\n      );\n    }\n\n    if (\n      typeof instance.getSnapshotBeforeUpdate === 'function' &&\n      typeof instance.componentDidUpdate !== 'function' &&\n      !didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.has(ctor)\n    ) {\n      didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.add(ctor);\n      console.error(\n        '%s: getSnapshotBeforeUpdate() should be used with componentDidUpdate(). ' +\n          'This component defines getSnapshotBeforeUpdate() only.',\n        getComponentNameFromType(ctor),\n      );\n    }\n\n    if (typeof instance.getDerivedStateFromProps === 'function') {\n      console.error(\n        '%s: getDerivedStateFromProps() is defined as an instance method ' +\n          'and will be ignored. Instead, declare it as a static method.',\n        name,\n      );\n    }\n    if (typeof instance.getDerivedStateFromError === 'function') {\n      console.error(\n        '%s: getDerivedStateFromError() is defined as an instance method ' +\n          'and will be ignored. Instead, declare it as a static method.',\n        name,\n      );\n    }\n    if (typeof ctor.getSnapshotBeforeUpdate === 'function') {\n      console.error(\n        '%s: getSnapshotBeforeUpdate() is defined as a static method ' +\n          'and will be ignored. Instead, declare it as an instance method.',\n        name,\n      );\n    }\n    const state = instance.state;\n    if (state && (typeof state !== 'object' || isArray(state))) {\n      console.error('%s.state: must be set to an object or null', name);\n    }\n    if (\n      typeof instance.getChildContext === 'function' &&\n      typeof ctor.childContextTypes !== 'object'\n    ) {\n      console.error(\n        '%s.getChildContext(): childContextTypes must be defined in order to ' +\n          'use getChildContext().',\n        name,\n      );\n    }\n  }\n}\n\nfunction adoptClassInstance(workInProgress: Fiber, instance: any): void {\n  instance.updater = classComponentUpdater;\n  workInProgress.stateNode = instance;\n  // The instance needs access to the fiber so that it can schedule updates\n  setInstance(instance, workInProgress);\n  if (__DEV__) {\n    instance._reactInternalInstance = fakeInternalInstance;\n  }\n}\n\nfunction constructClassInstance(\n  workInProgress: Fiber,\n  ctor: any,\n  props: any,\n): any {\n  let isLegacyContextConsumer = false;\n  let unmaskedContext = emptyContextObject;\n  let context = emptyContextObject;\n  const contextType = ctor.contextType;\n\n  if (__DEV__) {\n    if ('contextType' in ctor) {\n      const isValid =\n        // Allow null for conditional declaration\n        contextType === null ||\n        (contextType !== undefined &&\n          contextType.$$typeof === REACT_CONTEXT_TYPE &&\n          contextType._context === undefined); // Not a <Context.Consumer>\n\n      if (!isValid && !didWarnAboutInvalidateContextType.has(ctor)) {\n        didWarnAboutInvalidateContextType.add(ctor);\n\n        let addendum = '';\n        if (contextType === undefined) {\n          addendum =\n            ' However, it is set to undefined. ' +\n            'This can be caused by a typo or by mixing up named and default imports. ' +\n            'This can also happen due to a circular dependency, so ' +\n            'try moving the createContext() call to a separate file.';\n        } else if (typeof contextType !== 'object') {\n          addendum = ' However, it is set to a ' + typeof contextType + '.';\n        } else if (contextType.$$typeof === REACT_PROVIDER_TYPE) {\n          addendum = ' Did you accidentally pass the Context.Provider instead?';\n        } else if (contextType._context !== undefined) {\n          // <Context.Consumer>\n          addendum = ' Did you accidentally pass the Context.Consumer instead?';\n        } else {\n          addendum =\n            ' However, it is set to an object with keys {' +\n            Object.keys(contextType).join(', ') +\n            '}.';\n        }\n        console.error(\n          '%s defines an invalid contextType. ' +\n            'contextType should point to the Context object returned by React.createContext().%s',\n          getComponentNameFromType(ctor) || 'Component',\n          addendum,\n        );\n      }\n    }\n  }\n\n  if (typeof contextType === 'object' && contextType !== null) {\n    context = readContext((contextType: any));\n  } else if (!disableLegacyContext) {\n    unmaskedContext = getUnmaskedContext(workInProgress, ctor, true);\n    const contextTypes = ctor.contextTypes;\n    isLegacyContextConsumer =\n      contextTypes !== null && contextTypes !== undefined;\n    context = isLegacyContextConsumer\n      ? getMaskedContext(workInProgress, unmaskedContext)\n      : emptyContextObject;\n  }\n\n  let instance = new ctor(props, context);\n  // Instantiate twice to help detect side-effects.\n  if (__DEV__) {\n    if (\n      debugRenderPhaseSideEffectsForStrictMode &&\n      workInProgress.mode & StrictLegacyMode\n    ) {\n      setIsStrictModeForDevtools(true);\n      try {\n        instance = new ctor(props, context); // eslint-disable-line no-new\n      } finally {\n        setIsStrictModeForDevtools(false);\n      }\n    }\n  }\n\n  const state = (workInProgress.memoizedState =\n    instance.state !== null && instance.state !== undefined\n      ? instance.state\n      : null);\n  adoptClassInstance(workInProgress, instance);\n\n  if (__DEV__) {\n    if (typeof ctor.getDerivedStateFromProps === 'function' && state === null) {\n      const componentName = getComponentNameFromType(ctor) || 'Component';\n      if (!didWarnAboutUninitializedState.has(componentName)) {\n        didWarnAboutUninitializedState.add(componentName);\n        console.error(\n          '`%s` uses `getDerivedStateFromProps` but its initial state is ' +\n            '%s. This is not recommended. Instead, define the initial state by ' +\n            'assigning an object to `this.state` in the constructor of `%s`. ' +\n            'This ensures that `getDerivedStateFromProps` arguments have a consistent shape.',\n          componentName,\n          instance.state === null ? 'null' : 'undefined',\n          componentName,\n        );\n      }\n    }\n\n    // If new component APIs are defined, \"unsafe\" lifecycles won't be called.\n    // Warn about these lifecycles if they are present.\n    // Don't warn about react-lifecycles-compat polyfilled methods though.\n    if (\n      typeof ctor.getDerivedStateFromProps === 'function' ||\n      typeof instance.getSnapshotBeforeUpdate === 'function'\n    ) {\n      let foundWillMountName = null;\n      let foundWillReceivePropsName = null;\n      let foundWillUpdateName = null;\n      if (\n        typeof instance.componentWillMount === 'function' &&\n        instance.componentWillMount.__suppressDeprecationWarning !== true\n      ) {\n        foundWillMountName = 'componentWillMount';\n      } else if (typeof instance.UNSAFE_componentWillMount === 'function') {\n        foundWillMountName = 'UNSAFE_componentWillMount';\n      }\n      if (\n        typeof instance.componentWillReceiveProps === 'function' &&\n        instance.componentWillReceiveProps.__suppressDeprecationWarning !== true\n      ) {\n        foundWillReceivePropsName = 'componentWillReceiveProps';\n      } else if (\n        typeof instance.UNSAFE_componentWillReceiveProps === 'function'\n      ) {\n        foundWillReceivePropsName = 'UNSAFE_componentWillReceiveProps';\n      }\n      if (\n        typeof instance.componentWillUpdate === 'function' &&\n        instance.componentWillUpdate.__suppressDeprecationWarning !== true\n      ) {\n        foundWillUpdateName = 'componentWillUpdate';\n      } else if (typeof instance.UNSAFE_componentWillUpdate === 'function') {\n        foundWillUpdateName = 'UNSAFE_componentWillUpdate';\n      }\n      if (\n        foundWillMountName !== null ||\n        foundWillReceivePropsName !== null ||\n        foundWillUpdateName !== null\n      ) {\n        const componentName = getComponentNameFromType(ctor) || 'Component';\n        const newApiName =\n          typeof ctor.getDerivedStateFromProps === 'function'\n            ? 'getDerivedStateFromProps()'\n            : 'getSnapshotBeforeUpdate()';\n        if (!didWarnAboutLegacyLifecyclesAndDerivedState.has(componentName)) {\n          didWarnAboutLegacyLifecyclesAndDerivedState.add(componentName);\n          console.error(\n            'Unsafe legacy lifecycles will not be called for components using new component APIs.\\n\\n' +\n              '%s uses %s but also contains the following legacy lifecycles:%s%s%s\\n\\n' +\n              'The above lifecycles should be removed. Learn more about this warning here:\\n' +\n              'https://reactjs.org/link/unsafe-component-lifecycles',\n            componentName,\n            newApiName,\n            foundWillMountName !== null ? `\\n  ${foundWillMountName}` : '',\n            foundWillReceivePropsName !== null\n              ? `\\n  ${foundWillReceivePropsName}`\n              : '',\n            foundWillUpdateName !== null ? `\\n  ${foundWillUpdateName}` : '',\n          );\n        }\n      }\n    }\n  }\n\n  // Cache unmasked context so we can avoid recreating masked context unless necessary.\n  // ReactFiberContext usually updates this cache but can't for newly-created instances.\n  if (isLegacyContextConsumer) {\n    cacheContext(workInProgress, unmaskedContext, context);\n  }\n\n  return instance;\n}\n\nfunction callComponentWillMount(workInProgress, instance) {\n  const oldState = instance.state;\n\n  if (typeof instance.componentWillMount === 'function') {\n    instance.componentWillMount();\n  }\n  if (typeof instance.UNSAFE_componentWillMount === 'function') {\n    instance.UNSAFE_componentWillMount();\n  }\n\n  if (oldState !== instance.state) {\n    if (__DEV__) {\n      console.error(\n        '%s.componentWillMount(): Assigning directly to this.state is ' +\n          \"deprecated (except inside a component's \" +\n          'constructor). Use setState instead.',\n        getComponentNameFromFiber(workInProgress) || 'Component',\n      );\n    }\n    classComponentUpdater.enqueueReplaceState(instance, instance.state, null);\n  }\n}\n\nfunction callComponentWillReceiveProps(\n  workInProgress,\n  instance,\n  newProps,\n  nextContext,\n) {\n  const oldState = instance.state;\n  if (typeof instance.componentWillReceiveProps === 'function') {\n    instance.componentWillReceiveProps(newProps, nextContext);\n  }\n  if (typeof instance.UNSAFE_componentWillReceiveProps === 'function') {\n    instance.UNSAFE_componentWillReceiveProps(newProps, nextContext);\n  }\n\n  if (instance.state !== oldState) {\n    if (__DEV__) {\n      const componentName =\n        getComponentNameFromFiber(workInProgress) || 'Component';\n      if (!didWarnAboutStateAssignmentForComponent.has(componentName)) {\n        didWarnAboutStateAssignmentForComponent.add(componentName);\n        console.error(\n          '%s.componentWillReceiveProps(): Assigning directly to ' +\n            \"this.state is deprecated (except inside a component's \" +\n            'constructor). Use setState instead.',\n          componentName,\n        );\n      }\n    }\n    classComponentUpdater.enqueueReplaceState(instance, instance.state, null);\n  }\n}\n\n// Invokes the mount life-cycles on a previously never rendered instance.\nfunction mountClassInstance(\n  workInProgress: Fiber,\n  ctor: any,\n  newProps: any,\n  renderLanes: Lanes,\n): void {\n  if (__DEV__) {\n    checkClassInstance(workInProgress, ctor, newProps);\n  }\n\n  const instance = workInProgress.stateNode;\n  instance.props = newProps;\n  instance.state = workInProgress.memoizedState;\n  instance.refs = emptyRefsObject;\n\n  initializeUpdateQueue(workInProgress);\n\n  const contextType = ctor.contextType;\n  if (typeof contextType === 'object' && contextType !== null) {\n    instance.context = readContext(contextType);\n  } else if (disableLegacyContext) {\n    instance.context = emptyContextObject;\n  } else {\n    const unmaskedContext = getUnmaskedContext(workInProgress, ctor, true);\n    instance.context = getMaskedContext(workInProgress, unmaskedContext);\n  }\n\n  if (__DEV__) {\n    if (instance.state === newProps) {\n      const componentName = getComponentNameFromType(ctor) || 'Component';\n      if (!didWarnAboutDirectlyAssigningPropsToState.has(componentName)) {\n        didWarnAboutDirectlyAssigningPropsToState.add(componentName);\n        console.error(\n          '%s: It is not recommended to assign props directly to state ' +\n            \"because updates to props won't be reflected in state. \" +\n            'In most cases, it is better to use props directly.',\n          componentName,\n        );\n      }\n    }\n\n    if (workInProgress.mode & StrictLegacyMode) {\n      ReactStrictModeWarnings.recordLegacyContextWarning(\n        workInProgress,\n        instance,\n      );\n    }\n\n    if (warnAboutDeprecatedLifecycles) {\n      ReactStrictModeWarnings.recordUnsafeLifecycleWarnings(\n        workInProgress,\n        instance,\n      );\n    }\n  }\n\n  instance.state = workInProgress.memoizedState;\n\n  const getDerivedStateFromProps = ctor.getDerivedStateFromProps;\n  if (typeof getDerivedStateFromProps === 'function') {\n    applyDerivedStateFromProps(\n      workInProgress,\n      ctor,\n      getDerivedStateFromProps,\n      newProps,\n    );\n    instance.state = workInProgress.memoizedState;\n  }\n\n  // In order to support react-lifecycles-compat polyfilled components,\n  // Unsafe lifecycles should not be invoked for components using the new APIs.\n  if (\n    typeof ctor.getDerivedStateFromProps !== 'function' &&\n    typeof instance.getSnapshotBeforeUpdate !== 'function' &&\n    (typeof instance.UNSAFE_componentWillMount === 'function' ||\n      typeof instance.componentWillMount === 'function')\n  ) {\n    callComponentWillMount(workInProgress, instance);\n    // If we had additional state updates during this life-cycle, let's\n    // process them now.\n    processUpdateQueue(workInProgress, newProps, instance, renderLanes);\n    instance.state = workInProgress.memoizedState;\n  }\n\n  if (typeof instance.componentDidMount === 'function') {\n    let fiberFlags: Flags = Update;\n    if (enableSuspenseLayoutEffectSemantics) {\n      fiberFlags |= LayoutStatic;\n    }\n    if (\n      __DEV__ &&\n      enableStrictEffects &&\n      (workInProgress.mode & StrictEffectsMode) !== NoMode\n    ) {\n      fiberFlags |= MountLayoutDev;\n    }\n    workInProgress.flags |= fiberFlags;\n  }\n}\n\nfunction resumeMountClassInstance(\n  workInProgress: Fiber,\n  ctor: any,\n  newProps: any,\n  renderLanes: Lanes,\n): boolean {\n  const instance = workInProgress.stateNode;\n\n  const oldProps = workInProgress.memoizedProps;\n  instance.props = oldProps;\n\n  const oldContext = instance.context;\n  const contextType = ctor.contextType;\n  let nextContext = emptyContextObject;\n  if (typeof contextType === 'object' && contextType !== null) {\n    nextContext = readContext(contextType);\n  } else if (!disableLegacyContext) {\n    const nextLegacyUnmaskedContext = getUnmaskedContext(\n      workInProgress,\n      ctor,\n      true,\n    );\n    nextContext = getMaskedContext(workInProgress, nextLegacyUnmaskedContext);\n  }\n\n  const getDerivedStateFromProps = ctor.getDerivedStateFromProps;\n  const hasNewLifecycles =\n    typeof getDerivedStateFromProps === 'function' ||\n    typeof instance.getSnapshotBeforeUpdate === 'function';\n\n  // Note: During these life-cycles, instance.props/instance.state are what\n  // ever the previously attempted to render - not the \"current\". However,\n  // during componentDidUpdate we pass the \"current\" props.\n\n  // In order to support react-lifecycles-compat polyfilled components,\n  // Unsafe lifecycles should not be invoked for components using the new APIs.\n  if (\n    !hasNewLifecycles &&\n    (typeof instance.UNSAFE_componentWillReceiveProps === 'function' ||\n      typeof instance.componentWillReceiveProps === 'function')\n  ) {\n    if (oldProps !== newProps || oldContext !== nextContext) {\n      callComponentWillReceiveProps(\n        workInProgress,\n        instance,\n        newProps,\n        nextContext,\n      );\n    }\n  }\n\n  resetHasForceUpdateBeforeProcessing();\n\n  const oldState = workInProgress.memoizedState;\n  let newState = (instance.state = oldState);\n  processUpdateQueue(workInProgress, newProps, instance, renderLanes);\n  newState = workInProgress.memoizedState;\n  if (\n    oldProps === newProps &&\n    oldState === newState &&\n    !hasContextChanged() &&\n    !checkHasForceUpdateAfterProcessing()\n  ) {\n    // If an update was already in progress, we should schedule an Update\n    // effect even though we're bailing out, so that cWU/cDU are called.\n    if (typeof instance.componentDidMount === 'function') {\n      let fiberFlags: Flags = Update;\n      if (enableSuspenseLayoutEffectSemantics) {\n        fiberFlags |= LayoutStatic;\n      }\n      if (\n        __DEV__ &&\n        enableStrictEffects &&\n        (workInProgress.mode & StrictEffectsMode) !== NoMode\n      ) {\n        fiberFlags |= MountLayoutDev;\n      }\n      workInProgress.flags |= fiberFlags;\n    }\n    return false;\n  }\n\n  if (typeof getDerivedStateFromProps === 'function') {\n    applyDerivedStateFromProps(\n      workInProgress,\n      ctor,\n      getDerivedStateFromProps,\n      newProps,\n    );\n    newState = workInProgress.memoizedState;\n  }\n\n  const shouldUpdate =\n    checkHasForceUpdateAfterProcessing() ||\n    checkShouldComponentUpdate(\n      workInProgress,\n      ctor,\n      oldProps,\n      newProps,\n      oldState,\n      newState,\n      nextContext,\n    );\n\n  if (shouldUpdate) {\n    // In order to support react-lifecycles-compat polyfilled components,\n    // Unsafe lifecycles should not be invoked for components using the new APIs.\n    if (\n      !hasNewLifecycles &&\n      (typeof instance.UNSAFE_componentWillMount === 'function' ||\n        typeof instance.componentWillMount === 'function')\n    ) {\n      if (typeof instance.componentWillMount === 'function') {\n        instance.componentWillMount();\n      }\n      if (typeof instance.UNSAFE_componentWillMount === 'function') {\n        instance.UNSAFE_componentWillMount();\n      }\n    }\n    if (typeof instance.componentDidMount === 'function') {\n      let fiberFlags: Flags = Update;\n      if (enableSuspenseLayoutEffectSemantics) {\n        fiberFlags |= LayoutStatic;\n      }\n      if (\n        __DEV__ &&\n        enableStrictEffects &&\n        (workInProgress.mode & StrictEffectsMode) !== NoMode\n      ) {\n        fiberFlags |= MountLayoutDev;\n      }\n      workInProgress.flags |= fiberFlags;\n    }\n  } else {\n    // If an update was already in progress, we should schedule an Update\n    // effect even though we're bailing out, so that cWU/cDU are called.\n    if (typeof instance.componentDidMount === 'function') {\n      let fiberFlags: Flags = Update;\n      if (enableSuspenseLayoutEffectSemantics) {\n        fiberFlags |= LayoutStatic;\n      }\n      if (\n        __DEV__ &&\n        enableStrictEffects &&\n        (workInProgress.mode & StrictEffectsMode) !== NoMode\n      ) {\n        fiberFlags |= MountLayoutDev;\n      }\n      workInProgress.flags |= fiberFlags;\n    }\n\n    // If shouldComponentUpdate returned false, we should still update the\n    // memoized state to indicate that this work can be reused.\n    workInProgress.memoizedProps = newProps;\n    workInProgress.memoizedState = newState;\n  }\n\n  // Update the existing instance's state, props, and context pointers even\n  // if shouldComponentUpdate returns false.\n  instance.props = newProps;\n  instance.state = newState;\n  instance.context = nextContext;\n\n  return shouldUpdate;\n}\n\n// Invokes the update life-cycles and returns false if it shouldn't rerender.\nfunction updateClassInstance(\n  current: Fiber,\n  workInProgress: Fiber,\n  ctor: any,\n  newProps: any,\n  renderLanes: Lanes,\n): boolean {\n  const instance = workInProgress.stateNode;\n\n  cloneUpdateQueue(current, workInProgress);\n\n  const unresolvedOldProps = workInProgress.memoizedProps;\n  const oldProps =\n    workInProgress.type === workInProgress.elementType\n      ? unresolvedOldProps\n      : resolveDefaultProps(workInProgress.type, unresolvedOldProps);\n  instance.props = oldProps;\n  const unresolvedNewProps = workInProgress.pendingProps;\n\n  const oldContext = instance.context;\n  const contextType = ctor.contextType;\n  let nextContext = emptyContextObject;\n  if (typeof contextType === 'object' && contextType !== null) {\n    nextContext = readContext(contextType);\n  } else if (!disableLegacyContext) {\n    const nextUnmaskedContext = getUnmaskedContext(workInProgress, ctor, true);\n    nextContext = getMaskedContext(workInProgress, nextUnmaskedContext);\n  }\n\n  const getDerivedStateFromProps = ctor.getDerivedStateFromProps;\n  const hasNewLifecycles =\n    typeof getDerivedStateFromProps === 'function' ||\n    typeof instance.getSnapshotBeforeUpdate === 'function';\n\n  // Note: During these life-cycles, instance.props/instance.state are what\n  // ever the previously attempted to render - not the \"current\". However,\n  // during componentDidUpdate we pass the \"current\" props.\n\n  // In order to support react-lifecycles-compat polyfilled components,\n  // Unsafe lifecycles should not be invoked for components using the new APIs.\n  if (\n    !hasNewLifecycles &&\n    (typeof instance.UNSAFE_componentWillReceiveProps === 'function' ||\n      typeof instance.componentWillReceiveProps === 'function')\n  ) {\n    if (\n      unresolvedOldProps !== unresolvedNewProps ||\n      oldContext !== nextContext\n    ) {\n      callComponentWillReceiveProps(\n        workInProgress,\n        instance,\n        newProps,\n        nextContext,\n      );\n    }\n  }\n\n  resetHasForceUpdateBeforeProcessing();\n\n  const oldState = workInProgress.memoizedState;\n  let newState = (instance.state = oldState);\n  processUpdateQueue(workInProgress, newProps, instance, renderLanes);\n  newState = workInProgress.memoizedState;\n\n  if (\n    unresolvedOldProps === unresolvedNewProps &&\n    oldState === newState &&\n    !hasContextChanged() &&\n    !checkHasForceUpdateAfterProcessing() &&\n    !(\n      enableLazyContextPropagation &&\n      current !== null &&\n      current.dependencies !== null &&\n      checkIfContextChanged(current.dependencies)\n    )\n  ) {\n    // If an update was already in progress, we should schedule an Update\n    // effect even though we're bailing out, so that cWU/cDU are called.\n    if (typeof instance.componentDidUpdate === 'function') {\n      if (\n        unresolvedOldProps !== current.memoizedProps ||\n        oldState !== current.memoizedState\n      ) {\n        workInProgress.flags |= Update;\n      }\n    }\n    if (typeof instance.getSnapshotBeforeUpdate === 'function') {\n      if (\n        unresolvedOldProps !== current.memoizedProps ||\n        oldState !== current.memoizedState\n      ) {\n        workInProgress.flags |= Snapshot;\n      }\n    }\n    return false;\n  }\n\n  if (typeof getDerivedStateFromProps === 'function') {\n    applyDerivedStateFromProps(\n      workInProgress,\n      ctor,\n      getDerivedStateFromProps,\n      newProps,\n    );\n    newState = workInProgress.memoizedState;\n  }\n\n  const shouldUpdate =\n    checkHasForceUpdateAfterProcessing() ||\n    checkShouldComponentUpdate(\n      workInProgress,\n      ctor,\n      oldProps,\n      newProps,\n      oldState,\n      newState,\n      nextContext,\n    ) ||\n    // TODO: In some cases, we'll end up checking if context has changed twice,\n    // both before and after `shouldComponentUpdate` has been called. Not ideal,\n    // but I'm loath to refactor this function. This only happens for memoized\n    // components so it's not that common.\n    (enableLazyContextPropagation &&\n      current !== null &&\n      current.dependencies !== null &&\n      checkIfContextChanged(current.dependencies));\n\n  if (shouldUpdate) {\n    // In order to support react-lifecycles-compat polyfilled components,\n    // Unsafe lifecycles should not be invoked for components using the new APIs.\n    if (\n      !hasNewLifecycles &&\n      (typeof instance.UNSAFE_componentWillUpdate === 'function' ||\n        typeof instance.componentWillUpdate === 'function')\n    ) {\n      if (typeof instance.componentWillUpdate === 'function') {\n        instance.componentWillUpdate(newProps, newState, nextContext);\n      }\n      if (typeof instance.UNSAFE_componentWillUpdate === 'function') {\n        instance.UNSAFE_componentWillUpdate(newProps, newState, nextContext);\n      }\n    }\n    if (typeof instance.componentDidUpdate === 'function') {\n      workInProgress.flags |= Update;\n    }\n    if (typeof instance.getSnapshotBeforeUpdate === 'function') {\n      workInProgress.flags |= Snapshot;\n    }\n  } else {\n    // If an update was already in progress, we should schedule an Update\n    // effect even though we're bailing out, so that cWU/cDU are called.\n    if (typeof instance.componentDidUpdate === 'function') {\n      if (\n        unresolvedOldProps !== current.memoizedProps ||\n        oldState !== current.memoizedState\n      ) {\n        workInProgress.flags |= Update;\n      }\n    }\n    if (typeof instance.getSnapshotBeforeUpdate === 'function') {\n      if (\n        unresolvedOldProps !== current.memoizedProps ||\n        oldState !== current.memoizedState\n      ) {\n        workInProgress.flags |= Snapshot;\n      }\n    }\n\n    // If shouldComponentUpdate returned false, we should still update the\n    // memoized props/state to indicate that this work can be reused.\n    workInProgress.memoizedProps = newProps;\n    workInProgress.memoizedState = newState;\n  }\n\n  // Update the existing instance's state, props, and context pointers even\n  // if shouldComponentUpdate returns false.\n  instance.props = newProps;\n  instance.state = newState;\n  instance.context = nextContext;\n\n  return shouldUpdate;\n}\n\nexport {\n  adoptClassInstance,\n  constructClassInstance,\n  mountClassInstance,\n  resumeMountClassInstance,\n  updateClassInstance,\n};\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {ReactElement} from 'shared/ReactElementType';\nimport type {ReactPortal} from 'shared/ReactTypes';\nimport type {Fiber} from './ReactInternalTypes';\nimport type {Lanes} from './ReactFiberLane.old';\n\nimport getComponentNameFromFiber from 'react-reconciler/src/getComponentNameFromFiber';\nimport {Placement, ChildDeletion, Forked} from './ReactFiberFlags';\nimport {\n  getIteratorFn,\n  REACT_ELEMENT_TYPE,\n  REACT_FRAGMENT_TYPE,\n  REACT_PORTAL_TYPE,\n  REACT_LAZY_TYPE,\n} from 'shared/ReactSymbols';\nimport {ClassComponent, HostText, HostPortal, Fragment} from './ReactWorkTags';\nimport isArray from 'shared/isArray';\nimport {warnAboutStringRefs} from 'shared/ReactFeatureFlags';\nimport {checkPropStringCoercion} from 'shared/CheckStringCoercion';\n\nimport {\n  createWorkInProgress,\n  resetWorkInProgress,\n  createFiberFromElement,\n  createFiberFromFragment,\n  createFiberFromText,\n  createFiberFromPortal,\n} from './ReactFiber.old';\nimport {emptyRefsObject} from './ReactFiberClassComponent.old';\nimport {isCompatibleFamilyForHotReloading} from './ReactFiberHotReloading.old';\nimport {StrictLegacyMode} from './ReactTypeOfMode';\nimport {getIsHydrating} from './ReactFiberHydrationContext.old';\nimport {pushTreeFork} from './ReactFiberTreeContext.old';\n\nlet didWarnAboutMaps;\nlet didWarnAboutGenerators;\nlet didWarnAboutStringRefs;\nlet ownerHasKeyUseWarning;\nlet ownerHasFunctionTypeWarning;\nlet warnForMissingKey = (child: mixed, returnFiber: Fiber) => {};\n\nif (__DEV__) {\n  didWarnAboutMaps = false;\n  didWarnAboutGenerators = false;\n  didWarnAboutStringRefs = {};\n\n  /**\n   * Warn if there's no key explicitly set on dynamic arrays of children or\n   * object keys are not valid. This allows us to keep track of children between\n   * updates.\n   */\n  ownerHasKeyUseWarning = {};\n  ownerHasFunctionTypeWarning = {};\n\n  warnForMissingKey = (child: mixed, returnFiber: Fiber) => {\n    if (child === null || typeof child !== 'object') {\n      return;\n    }\n    if (!child._store || child._store.validated || child.key != null) {\n      return;\n    }\n\n    if (typeof child._store !== 'object') {\n      throw new Error(\n        'React Component in warnForMissingKey should have a _store. ' +\n          'This error is likely caused by a bug in React. Please file an issue.',\n      );\n    }\n\n    child._store.validated = true;\n\n    const componentName = getComponentNameFromFiber(returnFiber) || 'Component';\n\n    if (ownerHasKeyUseWarning[componentName]) {\n      return;\n    }\n    ownerHasKeyUseWarning[componentName] = true;\n\n    console.error(\n      'Each child in a list should have a unique ' +\n        '\"key\" prop. See https://reactjs.org/link/warning-keys for ' +\n        'more information.',\n    );\n  };\n}\n\nfunction coerceRef(\n  returnFiber: Fiber,\n  current: Fiber | null,\n  element: ReactElement,\n) {\n  const mixedRef = element.ref;\n  if (\n    mixedRef !== null &&\n    typeof mixedRef !== 'function' &&\n    typeof mixedRef !== 'object'\n  ) {\n    if (__DEV__) {\n      // TODO: Clean this up once we turn on the string ref warning for\n      // everyone, because the strict mode case will no longer be relevant\n      if (\n        (returnFiber.mode & StrictLegacyMode || warnAboutStringRefs) &&\n        // We warn in ReactElement.js if owner and self are equal for string refs\n        // because these cannot be automatically converted to an arrow function\n        // using a codemod. Therefore, we don't have to warn about string refs again.\n        !(\n          element._owner &&\n          element._self &&\n          element._owner.stateNode !== element._self\n        )\n      ) {\n        const componentName =\n          getComponentNameFromFiber(returnFiber) || 'Component';\n        if (!didWarnAboutStringRefs[componentName]) {\n          if (warnAboutStringRefs) {\n            console.error(\n              'Component \"%s\" contains the string ref \"%s\". Support for string refs ' +\n                'will be removed in a future major release. We recommend using ' +\n                'useRef() or createRef() instead. ' +\n                'Learn more about using refs safely here: ' +\n                'https://reactjs.org/link/strict-mode-string-ref',\n              componentName,\n              mixedRef,\n            );\n          } else {\n            console.error(\n              'A string ref, \"%s\", has been found within a strict mode tree. ' +\n                'String refs are a source of potential bugs and should be avoided. ' +\n                'We recommend using useRef() or createRef() instead. ' +\n                'Learn more about using refs safely here: ' +\n                'https://reactjs.org/link/strict-mode-string-ref',\n              mixedRef,\n            );\n          }\n          didWarnAboutStringRefs[componentName] = true;\n        }\n      }\n    }\n\n    if (element._owner) {\n      const owner: ?Fiber = (element._owner: any);\n      let inst;\n      if (owner) {\n        const ownerFiber = ((owner: any): Fiber);\n\n        if (ownerFiber.tag !== ClassComponent) {\n          throw new Error(\n            'Function components cannot have string refs. ' +\n              'We recommend using useRef() instead. ' +\n              'Learn more about using refs safely here: ' +\n              'https://reactjs.org/link/strict-mode-string-ref',\n          );\n        }\n\n        inst = ownerFiber.stateNode;\n      }\n\n      if (!inst) {\n        throw new Error(\n          `Missing owner for string ref ${mixedRef}. This error is likely caused by a ` +\n            'bug in React. Please file an issue.',\n        );\n      }\n      // Assigning this to a const so Flow knows it won't change in the closure\n      const resolvedInst = inst;\n\n      if (__DEV__) {\n        checkPropStringCoercion(mixedRef, 'ref');\n      }\n      const stringRef = '' + mixedRef;\n      // Check if previous string ref matches new string ref\n      if (\n        current !== null &&\n        current.ref !== null &&\n        typeof current.ref === 'function' &&\n        current.ref._stringRef === stringRef\n      ) {\n        return current.ref;\n      }\n      const ref = function(value) {\n        let refs = resolvedInst.refs;\n        if (refs === emptyRefsObject) {\n          // This is a lazy pooled frozen object, so we need to initialize.\n          refs = resolvedInst.refs = {};\n        }\n        if (value === null) {\n          delete refs[stringRef];\n        } else {\n          refs[stringRef] = value;\n        }\n      };\n      ref._stringRef = stringRef;\n      return ref;\n    } else {\n      if (typeof mixedRef !== 'string') {\n        throw new Error(\n          'Expected ref to be a function, a string, an object returned by React.createRef(), or null.',\n        );\n      }\n\n      if (!element._owner) {\n        throw new Error(\n          `Element ref was specified as a string (${mixedRef}) but no owner was set. This could happen for one of` +\n            ' the following reasons:\\n' +\n            '1. You may be adding a ref to a function component\\n' +\n            \"2. You may be adding a ref to a component that was not created inside a component's render method\\n\" +\n            '3. You have multiple copies of React loaded\\n' +\n            'See https://reactjs.org/link/refs-must-have-owner for more information.',\n        );\n      }\n    }\n  }\n  return mixedRef;\n}\n\nfunction throwOnInvalidObjectType(returnFiber: Fiber, newChild: Object) {\n  const childString = Object.prototype.toString.call(newChild);\n\n  throw new Error(\n    `Objects are not valid as a React child (found: ${\n      childString === '[object Object]'\n        ? 'object with keys {' + Object.keys(newChild).join(', ') + '}'\n        : childString\n    }). ` +\n      'If you meant to render a collection of children, use an array ' +\n      'instead.',\n  );\n}\n\nfunction warnOnFunctionType(returnFiber: Fiber) {\n  if (__DEV__) {\n    const componentName = getComponentNameFromFiber(returnFiber) || 'Component';\n\n    if (ownerHasFunctionTypeWarning[componentName]) {\n      return;\n    }\n    ownerHasFunctionTypeWarning[componentName] = true;\n\n    console.error(\n      'Functions are not valid as a React child. This may happen if ' +\n        'you return a Component instead of <Component /> from render. ' +\n        'Or maybe you meant to call this function rather than return it.',\n    );\n  }\n}\n\nfunction resolveLazy(lazyType) {\n  const payload = lazyType._payload;\n  const init = lazyType._init;\n  return init(payload);\n}\n\n// This wrapper function exists because I expect to clone the code in each path\n// to be able to optimize each path individually by branching early. This needs\n// a compiler or we can do it manually. Helpers that don't need this branching\n// live outside of this function.\nfunction ChildReconciler(shouldTrackSideEffects) {\n  function deleteChild(returnFiber: Fiber, childToDelete: Fiber): void {\n    if (!shouldTrackSideEffects) {\n      // Noop.\n      return;\n    }\n    const deletions = returnFiber.deletions;\n    if (deletions === null) {\n      returnFiber.deletions = [childToDelete];\n      returnFiber.flags |= ChildDeletion;\n    } else {\n      deletions.push(childToDelete);\n    }\n  }\n\n  function deleteRemainingChildren(\n    returnFiber: Fiber,\n    currentFirstChild: Fiber | null,\n  ): null {\n    if (!shouldTrackSideEffects) {\n      // Noop.\n      return null;\n    }\n\n    // TODO: For the shouldClone case, this could be micro-optimized a bit by\n    // assuming that after the first child we've already added everything.\n    let childToDelete = currentFirstChild;\n    while (childToDelete !== null) {\n      deleteChild(returnFiber, childToDelete);\n      childToDelete = childToDelete.sibling;\n    }\n    return null;\n  }\n\n  function mapRemainingChildren(\n    returnFiber: Fiber,\n    currentFirstChild: Fiber,\n  ): Map<string | number, Fiber> {\n    // Add the remaining children to a temporary map so that we can find them by\n    // keys quickly. Implicit (null) keys get added to this set with their index\n    // instead.\n    const existingChildren: Map<string | number, Fiber> = new Map();\n\n    let existingChild = currentFirstChild;\n    while (existingChild !== null) {\n      if (existingChild.key !== null) {\n        existingChildren.set(existingChild.key, existingChild);\n      } else {\n        existingChildren.set(existingChild.index, existingChild);\n      }\n      existingChild = existingChild.sibling;\n    }\n    return existingChildren;\n  }\n\n  function useFiber(fiber: Fiber, pendingProps: mixed): Fiber {\n    // We currently set sibling to null and index to 0 here because it is easy\n    // to forget to do before returning it. E.g. for the single child case.\n    const clone = createWorkInProgress(fiber, pendingProps);\n    clone.index = 0;\n    clone.sibling = null;\n    return clone;\n  }\n\n  function placeChild(\n    newFiber: Fiber,\n    lastPlacedIndex: number,\n    newIndex: number,\n  ): number {\n    newFiber.index = newIndex;\n    if (!shouldTrackSideEffects) {\n      // During hydration, the useId algorithm needs to know which fibers are\n      // part of a list of children (arrays, iterators).\n      newFiber.flags |= Forked;\n      return lastPlacedIndex;\n    }\n    const current = newFiber.alternate;\n    if (current !== null) {\n      const oldIndex = current.index;\n      if (oldIndex < lastPlacedIndex) {\n        // This is a move.\n        newFiber.flags |= Placement;\n        return lastPlacedIndex;\n      } else {\n        // This item can stay in place.\n        return oldIndex;\n      }\n    } else {\n      // This is an insertion.\n      newFiber.flags |= Placement;\n      return lastPlacedIndex;\n    }\n  }\n\n  function placeSingleChild(newFiber: Fiber): Fiber {\n    // This is simpler for the single child case. We only need to do a\n    // placement for inserting new children.\n    if (shouldTrackSideEffects && newFiber.alternate === null) {\n      newFiber.flags |= Placement;\n    }\n    return newFiber;\n  }\n\n  function updateTextNode(\n    returnFiber: Fiber,\n    current: Fiber | null,\n    textContent: string,\n    lanes: Lanes,\n  ) {\n    if (current === null || current.tag !== HostText) {\n      // Insert\n      const created = createFiberFromText(textContent, returnFiber.mode, lanes);\n      created.return = returnFiber;\n      return created;\n    } else {\n      // Update\n      const existing = useFiber(current, textContent);\n      existing.return = returnFiber;\n      return existing;\n    }\n  }\n\n  function updateElement(\n    returnFiber: Fiber,\n    current: Fiber | null,\n    element: ReactElement,\n    lanes: Lanes,\n  ): Fiber {\n    const elementType = element.type;\n    if (elementType === REACT_FRAGMENT_TYPE) {\n      return updateFragment(\n        returnFiber,\n        current,\n        element.props.children,\n        lanes,\n        element.key,\n      );\n    }\n    if (current !== null) {\n      if (\n        current.elementType === elementType ||\n        // Keep this check inline so it only runs on the false path:\n        (__DEV__\n          ? isCompatibleFamilyForHotReloading(current, element)\n          : false) ||\n        // Lazy types should reconcile their resolved type.\n        // We need to do this after the Hot Reloading check above,\n        // because hot reloading has different semantics than prod because\n        // it doesn't resuspend. So we can't let the call below suspend.\n        (typeof elementType === 'object' &&\n          elementType !== null &&\n          elementType.$$typeof === REACT_LAZY_TYPE &&\n          resolveLazy(elementType) === current.type)\n      ) {\n        // Move based on index\n        const existing = useFiber(current, element.props);\n        existing.ref = coerceRef(returnFiber, current, element);\n        existing.return = returnFiber;\n        if (__DEV__) {\n          existing._debugSource = element._source;\n          existing._debugOwner = element._owner;\n        }\n        return existing;\n      }\n    }\n    // Insert\n    const created = createFiberFromElement(element, returnFiber.mode, lanes);\n    created.ref = coerceRef(returnFiber, current, element);\n    created.return = returnFiber;\n    return created;\n  }\n\n  function updatePortal(\n    returnFiber: Fiber,\n    current: Fiber | null,\n    portal: ReactPortal,\n    lanes: Lanes,\n  ): Fiber {\n    if (\n      current === null ||\n      current.tag !== HostPortal ||\n      current.stateNode.containerInfo !== portal.containerInfo ||\n      current.stateNode.implementation !== portal.implementation\n    ) {\n      // Insert\n      const created = createFiberFromPortal(portal, returnFiber.mode, lanes);\n      created.return = returnFiber;\n      return created;\n    } else {\n      // Update\n      const existing = useFiber(current, portal.children || []);\n      existing.return = returnFiber;\n      return existing;\n    }\n  }\n\n  function updateFragment(\n    returnFiber: Fiber,\n    current: Fiber | null,\n    fragment: Iterable<*>,\n    lanes: Lanes,\n    key: null | string,\n  ): Fiber {\n    if (current === null || current.tag !== Fragment) {\n      // Insert\n      const created = createFiberFromFragment(\n        fragment,\n        returnFiber.mode,\n        lanes,\n        key,\n      );\n      created.return = returnFiber;\n      return created;\n    } else {\n      // Update\n      const existing = useFiber(current, fragment);\n      existing.return = returnFiber;\n      return existing;\n    }\n  }\n\n  function createChild(\n    returnFiber: Fiber,\n    newChild: any,\n    lanes: Lanes,\n  ): Fiber | null {\n    if (\n      (typeof newChild === 'string' && newChild !== '') ||\n      typeof newChild === 'number'\n    ) {\n      // Text nodes don't have keys. If the previous node is implicitly keyed\n      // we can continue to replace it without aborting even if it is not a text\n      // node.\n      const created = createFiberFromText(\n        '' + newChild,\n        returnFiber.mode,\n        lanes,\n      );\n      created.return = returnFiber;\n      return created;\n    }\n\n    if (typeof newChild === 'object' && newChild !== null) {\n      switch (newChild.$$typeof) {\n        case REACT_ELEMENT_TYPE: {\n          const created = createFiberFromElement(\n            newChild,\n            returnFiber.mode,\n            lanes,\n          );\n          created.ref = coerceRef(returnFiber, null, newChild);\n          created.return = returnFiber;\n          return created;\n        }\n        case REACT_PORTAL_TYPE: {\n          const created = createFiberFromPortal(\n            newChild,\n            returnFiber.mode,\n            lanes,\n          );\n          created.return = returnFiber;\n          return created;\n        }\n        case REACT_LAZY_TYPE: {\n          const payload = newChild._payload;\n          const init = newChild._init;\n          return createChild(returnFiber, init(payload), lanes);\n        }\n      }\n\n      if (isArray(newChild) || getIteratorFn(newChild)) {\n        const created = createFiberFromFragment(\n          newChild,\n          returnFiber.mode,\n          lanes,\n          null,\n        );\n        created.return = returnFiber;\n        return created;\n      }\n\n      throwOnInvalidObjectType(returnFiber, newChild);\n    }\n\n    if (__DEV__) {\n      if (typeof newChild === 'function') {\n        warnOnFunctionType(returnFiber);\n      }\n    }\n\n    return null;\n  }\n\n  function updateSlot(\n    returnFiber: Fiber,\n    oldFiber: Fiber | null,\n    newChild: any,\n    lanes: Lanes,\n  ): Fiber | null {\n    // Update the fiber if the keys match, otherwise return null.\n\n    const key = oldFiber !== null ? oldFiber.key : null;\n\n    if (\n      (typeof newChild === 'string' && newChild !== '') ||\n      typeof newChild === 'number'\n    ) {\n      // Text nodes don't have keys. If the previous node is implicitly keyed\n      // we can continue to replace it without aborting even if it is not a text\n      // node.\n      if (key !== null) {\n        return null;\n      }\n      return updateTextNode(returnFiber, oldFiber, '' + newChild, lanes);\n    }\n\n    if (typeof newChild === 'object' && newChild !== null) {\n      switch (newChild.$$typeof) {\n        case REACT_ELEMENT_TYPE: {\n          if (newChild.key === key) {\n            return updateElement(returnFiber, oldFiber, newChild, lanes);\n          } else {\n            return null;\n          }\n        }\n        case REACT_PORTAL_TYPE: {\n          if (newChild.key === key) {\n            return updatePortal(returnFiber, oldFiber, newChild, lanes);\n          } else {\n            return null;\n          }\n        }\n        case REACT_LAZY_TYPE: {\n          const payload = newChild._payload;\n          const init = newChild._init;\n          return updateSlot(returnFiber, oldFiber, init(payload), lanes);\n        }\n      }\n\n      if (isArray(newChild) || getIteratorFn(newChild)) {\n        if (key !== null) {\n          return null;\n        }\n\n        return updateFragment(returnFiber, oldFiber, newChild, lanes, null);\n      }\n\n      throwOnInvalidObjectType(returnFiber, newChild);\n    }\n\n    if (__DEV__) {\n      if (typeof newChild === 'function') {\n        warnOnFunctionType(returnFiber);\n      }\n    }\n\n    return null;\n  }\n\n  function updateFromMap(\n    existingChildren: Map<string | number, Fiber>,\n    returnFiber: Fiber,\n    newIdx: number,\n    newChild: any,\n    lanes: Lanes,\n  ): Fiber | null {\n    if (\n      (typeof newChild === 'string' && newChild !== '') ||\n      typeof newChild === 'number'\n    ) {\n      // Text nodes don't have keys, so we neither have to check the old nor\n      // new node for the key. If both are text nodes, they match.\n      const matchedFiber = existingChildren.get(newIdx) || null;\n      return updateTextNode(returnFiber, matchedFiber, '' + newChild, lanes);\n    }\n\n    if (typeof newChild === 'object' && newChild !== null) {\n      switch (newChild.$$typeof) {\n        case REACT_ELEMENT_TYPE: {\n          const matchedFiber =\n            existingChildren.get(\n              newChild.key === null ? newIdx : newChild.key,\n            ) || null;\n          return updateElement(returnFiber, matchedFiber, newChild, lanes);\n        }\n        case REACT_PORTAL_TYPE: {\n          const matchedFiber =\n            existingChildren.get(\n              newChild.key === null ? newIdx : newChild.key,\n            ) || null;\n          return updatePortal(returnFiber, matchedFiber, newChild, lanes);\n        }\n        case REACT_LAZY_TYPE:\n          const payload = newChild._payload;\n          const init = newChild._init;\n          return updateFromMap(\n            existingChildren,\n            returnFiber,\n            newIdx,\n            init(payload),\n            lanes,\n          );\n      }\n\n      if (isArray(newChild) || getIteratorFn(newChild)) {\n        const matchedFiber = existingChildren.get(newIdx) || null;\n        return updateFragment(returnFiber, matchedFiber, newChild, lanes, null);\n      }\n\n      throwOnInvalidObjectType(returnFiber, newChild);\n    }\n\n    if (__DEV__) {\n      if (typeof newChild === 'function') {\n        warnOnFunctionType(returnFiber);\n      }\n    }\n\n    return null;\n  }\n\n  /**\n   * Warns if there is a duplicate or missing key\n   */\n  function warnOnInvalidKey(\n    child: mixed,\n    knownKeys: Set<string> | null,\n    returnFiber: Fiber,\n  ): Set<string> | null {\n    if (__DEV__) {\n      if (typeof child !== 'object' || child === null) {\n        return knownKeys;\n      }\n      switch (child.$$typeof) {\n        case REACT_ELEMENT_TYPE:\n        case REACT_PORTAL_TYPE:\n          warnForMissingKey(child, returnFiber);\n          const key = child.key;\n          if (typeof key !== 'string') {\n            break;\n          }\n          if (knownKeys === null) {\n            knownKeys = new Set();\n            knownKeys.add(key);\n            break;\n          }\n          if (!knownKeys.has(key)) {\n            knownKeys.add(key);\n            break;\n          }\n          console.error(\n            'Encountered two children with the same key, `%s`. ' +\n              'Keys should be unique so that components maintain their identity ' +\n              'across updates. Non-unique keys may cause children to be ' +\n              'duplicated and/or omitted — the behavior is unsupported and ' +\n              'could change in a future version.',\n            key,\n          );\n          break;\n        case REACT_LAZY_TYPE:\n          const payload = child._payload;\n          const init = (child._init: any);\n          warnOnInvalidKey(init(payload), knownKeys, returnFiber);\n          break;\n        default:\n          break;\n      }\n    }\n    return knownKeys;\n  }\n\n  function reconcileChildrenArray(\n    returnFiber: Fiber,\n    currentFirstChild: Fiber | null,\n    newChildren: Array<*>,\n    lanes: Lanes,\n  ): Fiber | null {\n    // This algorithm can't optimize by searching from both ends since we\n    // don't have backpointers on fibers. I'm trying to see how far we can get\n    // with that model. If it ends up not being worth the tradeoffs, we can\n    // add it later.\n\n    // Even with a two ended optimization, we'd want to optimize for the case\n    // where there are few changes and brute force the comparison instead of\n    // going for the Map. It'd like to explore hitting that path first in\n    // forward-only mode and only go for the Map once we notice that we need\n    // lots of look ahead. This doesn't handle reversal as well as two ended\n    // search but that's unusual. Besides, for the two ended optimization to\n    // work on Iterables, we'd need to copy the whole set.\n\n    // In this first iteration, we'll just live with hitting the bad case\n    // (adding everything to a Map) in for every insert/move.\n\n    // If you change this code, also update reconcileChildrenIterator() which\n    // uses the same algorithm.\n\n    if (__DEV__) {\n      // First, validate keys.\n      let knownKeys = null;\n      for (let i = 0; i < newChildren.length; i++) {\n        const child = newChildren[i];\n        knownKeys = warnOnInvalidKey(child, knownKeys, returnFiber);\n      }\n    }\n\n    let resultingFirstChild: Fiber | null = null;\n    let previousNewFiber: Fiber | null = null;\n\n    let oldFiber = currentFirstChild;\n    let lastPlacedIndex = 0;\n    let newIdx = 0;\n    let nextOldFiber = null;\n    for (; oldFiber !== null && newIdx < newChildren.length; newIdx++) {\n      if (oldFiber.index > newIdx) {\n        nextOldFiber = oldFiber;\n        oldFiber = null;\n      } else {\n        nextOldFiber = oldFiber.sibling;\n      }\n      const newFiber = updateSlot(\n        returnFiber,\n        oldFiber,\n        newChildren[newIdx],\n        lanes,\n      );\n      if (newFiber === null) {\n        // TODO: This breaks on empty slots like null children. That's\n        // unfortunate because it triggers the slow path all the time. We need\n        // a better way to communicate whether this was a miss or null,\n        // boolean, undefined, etc.\n        if (oldFiber === null) {\n          oldFiber = nextOldFiber;\n        }\n        break;\n      }\n      if (shouldTrackSideEffects) {\n        if (oldFiber && newFiber.alternate === null) {\n          // We matched the slot, but we didn't reuse the existing fiber, so we\n          // need to delete the existing child.\n          deleteChild(returnFiber, oldFiber);\n        }\n      }\n      lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);\n      if (previousNewFiber === null) {\n        // TODO: Move out of the loop. This only happens for the first run.\n        resultingFirstChild = newFiber;\n      } else {\n        // TODO: Defer siblings if we're not at the right index for this slot.\n        // I.e. if we had null values before, then we want to defer this\n        // for each null value. However, we also don't want to call updateSlot\n        // with the previous one.\n        previousNewFiber.sibling = newFiber;\n      }\n      previousNewFiber = newFiber;\n      oldFiber = nextOldFiber;\n    }\n\n    if (newIdx === newChildren.length) {\n      // We've reached the end of the new children. We can delete the rest.\n      deleteRemainingChildren(returnFiber, oldFiber);\n      if (getIsHydrating()) {\n        const numberOfForks = newIdx;\n        pushTreeFork(returnFiber, numberOfForks);\n      }\n      return resultingFirstChild;\n    }\n\n    if (oldFiber === null) {\n      // If we don't have any more existing children we can choose a fast path\n      // since the rest will all be insertions.\n      for (; newIdx < newChildren.length; newIdx++) {\n        const newFiber = createChild(returnFiber, newChildren[newIdx], lanes);\n        if (newFiber === null) {\n          continue;\n        }\n        lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);\n        if (previousNewFiber === null) {\n          // TODO: Move out of the loop. This only happens for the first run.\n          resultingFirstChild = newFiber;\n        } else {\n          previousNewFiber.sibling = newFiber;\n        }\n        previousNewFiber = newFiber;\n      }\n      if (getIsHydrating()) {\n        const numberOfForks = newIdx;\n        pushTreeFork(returnFiber, numberOfForks);\n      }\n      return resultingFirstChild;\n    }\n\n    // Add all children to a key map for quick lookups.\n    const existingChildren = mapRemainingChildren(returnFiber, oldFiber);\n\n    // Keep scanning and use the map to restore deleted items as moves.\n    for (; newIdx < newChildren.length; newIdx++) {\n      const newFiber = updateFromMap(\n        existingChildren,\n        returnFiber,\n        newIdx,\n        newChildren[newIdx],\n        lanes,\n      );\n      if (newFiber !== null) {\n        if (shouldTrackSideEffects) {\n          if (newFiber.alternate !== null) {\n            // The new fiber is a work in progress, but if there exists a\n            // current, that means that we reused the fiber. We need to delete\n            // it from the child list so that we don't add it to the deletion\n            // list.\n            existingChildren.delete(\n              newFiber.key === null ? newIdx : newFiber.key,\n            );\n          }\n        }\n        lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);\n        if (previousNewFiber === null) {\n          resultingFirstChild = newFiber;\n        } else {\n          previousNewFiber.sibling = newFiber;\n        }\n        previousNewFiber = newFiber;\n      }\n    }\n\n    if (shouldTrackSideEffects) {\n      // Any existing children that weren't consumed above were deleted. We need\n      // to add them to the deletion list.\n      existingChildren.forEach(child => deleteChild(returnFiber, child));\n    }\n\n    if (getIsHydrating()) {\n      const numberOfForks = newIdx;\n      pushTreeFork(returnFiber, numberOfForks);\n    }\n    return resultingFirstChild;\n  }\n\n  function reconcileChildrenIterator(\n    returnFiber: Fiber,\n    currentFirstChild: Fiber | null,\n    newChildrenIterable: Iterable<*>,\n    lanes: Lanes,\n  ): Fiber | null {\n    // This is the same implementation as reconcileChildrenArray(),\n    // but using the iterator instead.\n\n    const iteratorFn = getIteratorFn(newChildrenIterable);\n\n    if (typeof iteratorFn !== 'function') {\n      throw new Error(\n        'An object is not an iterable. This error is likely caused by a bug in ' +\n          'React. Please file an issue.',\n      );\n    }\n\n    if (__DEV__) {\n      // We don't support rendering Generators because it's a mutation.\n      // See https://github.com/facebook/react/issues/12995\n      if (\n        typeof Symbol === 'function' &&\n        // $FlowFixMe Flow doesn't know about toStringTag\n        newChildrenIterable[Symbol.toStringTag] === 'Generator'\n      ) {\n        if (!didWarnAboutGenerators) {\n          console.error(\n            'Using Generators as children is unsupported and will likely yield ' +\n              'unexpected results because enumerating a generator mutates it. ' +\n              'You may convert it to an array with `Array.from()` or the ' +\n              '`[...spread]` operator before rendering. Keep in mind ' +\n              'you might need to polyfill these features for older browsers.',\n          );\n        }\n        didWarnAboutGenerators = true;\n      }\n\n      // Warn about using Maps as children\n      if ((newChildrenIterable: any).entries === iteratorFn) {\n        if (!didWarnAboutMaps) {\n          console.error(\n            'Using Maps as children is not supported. ' +\n              'Use an array of keyed ReactElements instead.',\n          );\n        }\n        didWarnAboutMaps = true;\n      }\n\n      // First, validate keys.\n      // We'll get a different iterator later for the main pass.\n      const newChildren = iteratorFn.call(newChildrenIterable);\n      if (newChildren) {\n        let knownKeys = null;\n        let step = newChildren.next();\n        for (; !step.done; step = newChildren.next()) {\n          const child = step.value;\n          knownKeys = warnOnInvalidKey(child, knownKeys, returnFiber);\n        }\n      }\n    }\n\n    const newChildren = iteratorFn.call(newChildrenIterable);\n\n    if (newChildren == null) {\n      throw new Error('An iterable object provided no iterator.');\n    }\n\n    let resultingFirstChild: Fiber | null = null;\n    let previousNewFiber: Fiber | null = null;\n\n    let oldFiber = currentFirstChild;\n    let lastPlacedIndex = 0;\n    let newIdx = 0;\n    let nextOldFiber = null;\n\n    let step = newChildren.next();\n    for (\n      ;\n      oldFiber !== null && !step.done;\n      newIdx++, step = newChildren.next()\n    ) {\n      if (oldFiber.index > newIdx) {\n        nextOldFiber = oldFiber;\n        oldFiber = null;\n      } else {\n        nextOldFiber = oldFiber.sibling;\n      }\n      const newFiber = updateSlot(returnFiber, oldFiber, step.value, lanes);\n      if (newFiber === null) {\n        // TODO: This breaks on empty slots like null children. That's\n        // unfortunate because it triggers the slow path all the time. We need\n        // a better way to communicate whether this was a miss or null,\n        // boolean, undefined, etc.\n        if (oldFiber === null) {\n          oldFiber = nextOldFiber;\n        }\n        break;\n      }\n      if (shouldTrackSideEffects) {\n        if (oldFiber && newFiber.alternate === null) {\n          // We matched the slot, but we didn't reuse the existing fiber, so we\n          // need to delete the existing child.\n          deleteChild(returnFiber, oldFiber);\n        }\n      }\n      lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);\n      if (previousNewFiber === null) {\n        // TODO: Move out of the loop. This only happens for the first run.\n        resultingFirstChild = newFiber;\n      } else {\n        // TODO: Defer siblings if we're not at the right index for this slot.\n        // I.e. if we had null values before, then we want to defer this\n        // for each null value. However, we also don't want to call updateSlot\n        // with the previous one.\n        previousNewFiber.sibling = newFiber;\n      }\n      previousNewFiber = newFiber;\n      oldFiber = nextOldFiber;\n    }\n\n    if (step.done) {\n      // We've reached the end of the new children. We can delete the rest.\n      deleteRemainingChildren(returnFiber, oldFiber);\n      if (getIsHydrating()) {\n        const numberOfForks = newIdx;\n        pushTreeFork(returnFiber, numberOfForks);\n      }\n      return resultingFirstChild;\n    }\n\n    if (oldFiber === null) {\n      // If we don't have any more existing children we can choose a fast path\n      // since the rest will all be insertions.\n      for (; !step.done; newIdx++, step = newChildren.next()) {\n        const newFiber = createChild(returnFiber, step.value, lanes);\n        if (newFiber === null) {\n          continue;\n        }\n        lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);\n        if (previousNewFiber === null) {\n          // TODO: Move out of the loop. This only happens for the first run.\n          resultingFirstChild = newFiber;\n        } else {\n          previousNewFiber.sibling = newFiber;\n        }\n        previousNewFiber = newFiber;\n      }\n      if (getIsHydrating()) {\n        const numberOfForks = newIdx;\n        pushTreeFork(returnFiber, numberOfForks);\n      }\n      return resultingFirstChild;\n    }\n\n    // Add all children to a key map for quick lookups.\n    const existingChildren = mapRemainingChildren(returnFiber, oldFiber);\n\n    // Keep scanning and use the map to restore deleted items as moves.\n    for (; !step.done; newIdx++, step = newChildren.next()) {\n      const newFiber = updateFromMap(\n        existingChildren,\n        returnFiber,\n        newIdx,\n        step.value,\n        lanes,\n      );\n      if (newFiber !== null) {\n        if (shouldTrackSideEffects) {\n          if (newFiber.alternate !== null) {\n            // The new fiber is a work in progress, but if there exists a\n            // current, that means that we reused the fiber. We need to delete\n            // it from the child list so that we don't add it to the deletion\n            // list.\n            existingChildren.delete(\n              newFiber.key === null ? newIdx : newFiber.key,\n            );\n          }\n        }\n        lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);\n        if (previousNewFiber === null) {\n          resultingFirstChild = newFiber;\n        } else {\n          previousNewFiber.sibling = newFiber;\n        }\n        previousNewFiber = newFiber;\n      }\n    }\n\n    if (shouldTrackSideEffects) {\n      // Any existing children that weren't consumed above were deleted. We need\n      // to add them to the deletion list.\n      existingChildren.forEach(child => deleteChild(returnFiber, child));\n    }\n\n    if (getIsHydrating()) {\n      const numberOfForks = newIdx;\n      pushTreeFork(returnFiber, numberOfForks);\n    }\n    return resultingFirstChild;\n  }\n\n  function reconcileSingleTextNode(\n    returnFiber: Fiber,\n    currentFirstChild: Fiber | null,\n    textContent: string,\n    lanes: Lanes,\n  ): Fiber {\n    // There's no need to check for keys on text nodes since we don't have a\n    // way to define them.\n    if (currentFirstChild !== null && currentFirstChild.tag === HostText) {\n      // We already have an existing node so let's just update it and delete\n      // the rest.\n      deleteRemainingChildren(returnFiber, currentFirstChild.sibling);\n      const existing = useFiber(currentFirstChild, textContent);\n      existing.return = returnFiber;\n      return existing;\n    }\n    // The existing first child is not a text node so we need to create one\n    // and delete the existing ones.\n    deleteRemainingChildren(returnFiber, currentFirstChild);\n    const created = createFiberFromText(textContent, returnFiber.mode, lanes);\n    created.return = returnFiber;\n    return created;\n  }\n\n  function reconcileSingleElement(\n    returnFiber: Fiber,\n    currentFirstChild: Fiber | null,\n    element: ReactElement,\n    lanes: Lanes,\n  ): Fiber {\n    const key = element.key;\n    let child = currentFirstChild;\n    while (child !== null) {\n      // TODO: If key === null and child.key === null, then this only applies to\n      // the first item in the list.\n      if (child.key === key) {\n        const elementType = element.type;\n        if (elementType === REACT_FRAGMENT_TYPE) {\n          if (child.tag === Fragment) {\n            deleteRemainingChildren(returnFiber, child.sibling);\n            const existing = useFiber(child, element.props.children);\n            existing.return = returnFiber;\n            if (__DEV__) {\n              existing._debugSource = element._source;\n              existing._debugOwner = element._owner;\n            }\n            return existing;\n          }\n        } else {\n          if (\n            child.elementType === elementType ||\n            // Keep this check inline so it only runs on the false path:\n            (__DEV__\n              ? isCompatibleFamilyForHotReloading(child, element)\n              : false) ||\n            // Lazy types should reconcile their resolved type.\n            // We need to do this after the Hot Reloading check above,\n            // because hot reloading has different semantics than prod because\n            // it doesn't resuspend. So we can't let the call below suspend.\n            (typeof elementType === 'object' &&\n              elementType !== null &&\n              elementType.$$typeof === REACT_LAZY_TYPE &&\n              resolveLazy(elementType) === child.type)\n          ) {\n            deleteRemainingChildren(returnFiber, child.sibling);\n            const existing = useFiber(child, element.props);\n            existing.ref = coerceRef(returnFiber, child, element);\n            existing.return = returnFiber;\n            if (__DEV__) {\n              existing._debugSource = element._source;\n              existing._debugOwner = element._owner;\n            }\n            return existing;\n          }\n        }\n        // Didn't match.\n        deleteRemainingChildren(returnFiber, child);\n        break;\n      } else {\n        deleteChild(returnFiber, child);\n      }\n      child = child.sibling;\n    }\n\n    if (element.type === REACT_FRAGMENT_TYPE) {\n      const created = createFiberFromFragment(\n        element.props.children,\n        returnFiber.mode,\n        lanes,\n        element.key,\n      );\n      created.return = returnFiber;\n      return created;\n    } else {\n      const created = createFiberFromElement(element, returnFiber.mode, lanes);\n      created.ref = coerceRef(returnFiber, currentFirstChild, element);\n      created.return = returnFiber;\n      return created;\n    }\n  }\n\n  function reconcileSinglePortal(\n    returnFiber: Fiber,\n    currentFirstChild: Fiber | null,\n    portal: ReactPortal,\n    lanes: Lanes,\n  ): Fiber {\n    const key = portal.key;\n    let child = currentFirstChild;\n    while (child !== null) {\n      // TODO: If key === null and child.key === null, then this only applies to\n      // the first item in the list.\n      if (child.key === key) {\n        if (\n          child.tag === HostPortal &&\n          child.stateNode.containerInfo === portal.containerInfo &&\n          child.stateNode.implementation === portal.implementation\n        ) {\n          deleteRemainingChildren(returnFiber, child.sibling);\n          const existing = useFiber(child, portal.children || []);\n          existing.return = returnFiber;\n          return existing;\n        } else {\n          deleteRemainingChildren(returnFiber, child);\n          break;\n        }\n      } else {\n        deleteChild(returnFiber, child);\n      }\n      child = child.sibling;\n    }\n\n    const created = createFiberFromPortal(portal, returnFiber.mode, lanes);\n    created.return = returnFiber;\n    return created;\n  }\n\n  // This API will tag the children with the side-effect of the reconciliation\n  // itself. They will be added to the side-effect list as we pass through the\n  // children and the parent.\n  function reconcileChildFibers(\n    returnFiber: Fiber,\n    currentFirstChild: Fiber | null,\n    newChild: any,\n    lanes: Lanes,\n  ): Fiber | null {\n    // This function is not recursive.\n    // If the top level item is an array, we treat it as a set of children,\n    // not as a fragment. Nested arrays on the other hand will be treated as\n    // fragment nodes. Recursion happens at the normal flow.\n\n    // Handle top level unkeyed fragments as if they were arrays.\n    // This leads to an ambiguity between <>{[...]}</> and <>...</>.\n    // We treat the ambiguous cases above the same.\n    const isUnkeyedTopLevelFragment =\n      typeof newChild === 'object' &&\n      newChild !== null &&\n      newChild.type === REACT_FRAGMENT_TYPE &&\n      newChild.key === null;\n    if (isUnkeyedTopLevelFragment) {\n      newChild = newChild.props.children;\n    }\n\n    // Handle object types\n    if (typeof newChild === 'object' && newChild !== null) {\n      switch (newChild.$$typeof) {\n        case REACT_ELEMENT_TYPE:\n          return placeSingleChild(\n            reconcileSingleElement(\n              returnFiber,\n              currentFirstChild,\n              newChild,\n              lanes,\n            ),\n          );\n        case REACT_PORTAL_TYPE:\n          return placeSingleChild(\n            reconcileSinglePortal(\n              returnFiber,\n              currentFirstChild,\n              newChild,\n              lanes,\n            ),\n          );\n        case REACT_LAZY_TYPE:\n          const payload = newChild._payload;\n          const init = newChild._init;\n          // TODO: This function is supposed to be non-recursive.\n          return reconcileChildFibers(\n            returnFiber,\n            currentFirstChild,\n            init(payload),\n            lanes,\n          );\n      }\n\n      if (isArray(newChild)) {\n        return reconcileChildrenArray(\n          returnFiber,\n          currentFirstChild,\n          newChild,\n          lanes,\n        );\n      }\n\n      if (getIteratorFn(newChild)) {\n        return reconcileChildrenIterator(\n          returnFiber,\n          currentFirstChild,\n          newChild,\n          lanes,\n        );\n      }\n\n      throwOnInvalidObjectType(returnFiber, newChild);\n    }\n\n    if (\n      (typeof newChild === 'string' && newChild !== '') ||\n      typeof newChild === 'number'\n    ) {\n      return placeSingleChild(\n        reconcileSingleTextNode(\n          returnFiber,\n          currentFirstChild,\n          '' + newChild,\n          lanes,\n        ),\n      );\n    }\n\n    if (__DEV__) {\n      if (typeof newChild === 'function') {\n        warnOnFunctionType(returnFiber);\n      }\n    }\n\n    // Remaining cases are all treated as empty.\n    return deleteRemainingChildren(returnFiber, currentFirstChild);\n  }\n\n  return reconcileChildFibers;\n}\n\nexport const reconcileChildFibers = ChildReconciler(true);\nexport const mountChildFibers = ChildReconciler(false);\n\nexport function cloneChildFibers(\n  current: Fiber | null,\n  workInProgress: Fiber,\n): void {\n  if (current !== null && workInProgress.child !== current.child) {\n    throw new Error('Resuming work not yet implemented.');\n  }\n\n  if (workInProgress.child === null) {\n    return;\n  }\n\n  let currentChild = workInProgress.child;\n  let newChild = createWorkInProgress(currentChild, currentChild.pendingProps);\n  workInProgress.child = newChild;\n\n  newChild.return = workInProgress;\n  while (currentChild.sibling !== null) {\n    currentChild = currentChild.sibling;\n    newChild = newChild.sibling = createWorkInProgress(\n      currentChild,\n      currentChild.pendingProps,\n    );\n    newChild.return = workInProgress;\n  }\n  newChild.sibling = null;\n}\n\n// Reset a workInProgress child set to prepare it for a second pass.\nexport function resetChildFibers(workInProgress: Fiber, lanes: Lanes): void {\n  let child = workInProgress.child;\n  while (child !== null) {\n    resetWorkInProgress(child, lanes);\n    child = child.sibling;\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactInternalTypes';\nimport type {StackCursor} from './ReactFiberStack.old';\nimport type {Container, HostContext} from './ReactFiberHostConfig';\n\nimport {getChildHostContext, getRootHostContext} from './ReactFiberHostConfig';\nimport {createCursor, push, pop} from './ReactFiberStack.old';\n\ndeclare class NoContextT {}\nconst NO_CONTEXT: NoContextT = ({}: any);\n\nconst contextStackCursor: StackCursor<HostContext | NoContextT> = createCursor(\n  NO_CONTEXT,\n);\nconst contextFiberStackCursor: StackCursor<Fiber | NoContextT> = createCursor(\n  NO_CONTEXT,\n);\nconst rootInstanceStackCursor: StackCursor<\n  Container | NoContextT,\n> = createCursor(NO_CONTEXT);\n\nfunction requiredContext<Value>(c: Value | NoContextT): Value {\n  if (c === NO_CONTEXT) {\n    throw new Error(\n      'Expected host context to exist. This error is likely caused by a bug ' +\n        'in React. Please file an issue.',\n    );\n  }\n\n  return (c: any);\n}\n\nfunction getRootHostContainer(): Container {\n  const rootInstance = requiredContext(rootInstanceStackCursor.current);\n  return rootInstance;\n}\n\nfunction pushHostContainer(fiber: Fiber, nextRootInstance: Container) {\n  // Push current root instance onto the stack;\n  // This allows us to reset root when portals are popped.\n  push(rootInstanceStackCursor, nextRootInstance, fiber);\n  // Track the context and the Fiber that provided it.\n  // This enables us to pop only Fibers that provide unique contexts.\n  push(contextFiberStackCursor, fiber, fiber);\n\n  // Finally, we need to push the host context to the stack.\n  // However, we can't just call getRootHostContext() and push it because\n  // we'd have a different number of entries on the stack depending on\n  // whether getRootHostContext() throws somewhere in renderer code or not.\n  // So we push an empty value first. This lets us safely unwind on errors.\n  push(contextStackCursor, NO_CONTEXT, fiber);\n  const nextRootContext = getRootHostContext(nextRootInstance);\n  // Now that we know this function doesn't throw, replace it.\n  pop(contextStackCursor, fiber);\n  push(contextStackCursor, nextRootContext, fiber);\n}\n\nfunction popHostContainer(fiber: Fiber) {\n  pop(contextStackCursor, fiber);\n  pop(contextFiberStackCursor, fiber);\n  pop(rootInstanceStackCursor, fiber);\n}\n\nfunction getHostContext(): HostContext {\n  const context = requiredContext(contextStackCursor.current);\n  return context;\n}\n\nfunction pushHostContext(fiber: Fiber): void {\n  const rootInstance: Container = requiredContext(\n    rootInstanceStackCursor.current,\n  );\n  const context: HostContext = requiredContext(contextStackCursor.current);\n  const nextContext = getChildHostContext(context, fiber.type, rootInstance);\n\n  // Don't push this Fiber's context unless it's unique.\n  if (context === nextContext) {\n    return;\n  }\n\n  // Track the context and the Fiber that provided it.\n  // This enables us to pop only Fibers that provide unique contexts.\n  push(contextFiberStackCursor, fiber, fiber);\n  push(contextStackCursor, nextContext, fiber);\n}\n\nfunction popHostContext(fiber: Fiber): void {\n  // Do not pop unless this Fiber provided the current context.\n  // pushHostContext() only pushes Fibers that provide unique contexts.\n  if (contextFiberStackCursor.current !== fiber) {\n    return;\n  }\n\n  pop(contextStackCursor, fiber);\n  pop(contextFiberStackCursor, fiber);\n}\n\nexport {\n  getHostContext,\n  getRootHostContainer,\n  popHostContainer,\n  popHostContext,\n  pushHostContainer,\n  pushHostContext,\n};\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactInternalTypes';\nimport type {StackCursor} from './ReactFiberStack.old';\n\nimport {createCursor, push, pop} from './ReactFiberStack.old';\n\nexport opaque type SuspenseContext = number;\nexport opaque type SubtreeSuspenseContext: SuspenseContext = number;\nexport opaque type ShallowSuspenseContext: SuspenseContext = number;\n\nconst DefaultSuspenseContext: SuspenseContext = 0b00;\n\n// The Suspense Context is split into two parts. The lower bits is\n// inherited deeply down the subtree. The upper bits only affect\n// this immediate suspense boundary and gets reset each new\n// boundary or suspense list.\nconst SubtreeSuspenseContextMask: SuspenseContext = 0b01;\n\n// Subtree Flags:\n\n// InvisibleParentSuspenseContext indicates that one of our parent Suspense\n// boundaries is not currently showing visible main content.\n// Either because it is already showing a fallback or is not mounted at all.\n// We can use this to determine if it is desirable to trigger a fallback at\n// the parent. If not, then we might need to trigger undesirable boundaries\n// and/or suspend the commit to avoid hiding the parent content.\nexport const InvisibleParentSuspenseContext: SubtreeSuspenseContext = 0b01;\n\n// Shallow Flags:\n\n// ForceSuspenseFallback can be used by SuspenseList to force newly added\n// items into their fallback state during one of the render passes.\nexport const ForceSuspenseFallback: ShallowSuspenseContext = 0b10;\n\nexport const suspenseStackCursor: StackCursor<SuspenseContext> = createCursor(\n  DefaultSuspenseContext,\n);\n\nexport function hasSuspenseContext(\n  parentContext: SuspenseContext,\n  flag: SuspenseContext,\n): boolean {\n  return (parentContext & flag) !== 0;\n}\n\nexport function setDefaultShallowSuspenseContext(\n  parentContext: SuspenseContext,\n): SuspenseContext {\n  return parentContext & SubtreeSuspenseContextMask;\n}\n\nexport function setShallowSuspenseContext(\n  parentContext: SuspenseContext,\n  shallowContext: ShallowSuspenseContext,\n): SuspenseContext {\n  return (parentContext & SubtreeSuspenseContextMask) | shallowContext;\n}\n\nexport function addSubtreeSuspenseContext(\n  parentContext: SuspenseContext,\n  subtreeContext: SubtreeSuspenseContext,\n): SuspenseContext {\n  return parentContext | subtreeContext;\n}\n\nexport function pushSuspenseContext(\n  fiber: Fiber,\n  newContext: SuspenseContext,\n): void {\n  push(suspenseStackCursor, newContext, fiber);\n}\n\nexport function popSuspenseContext(fiber: Fiber): void {\n  pop(suspenseStackCursor, fiber);\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {ReactNodeList, Wakeable} from 'shared/ReactTypes';\nimport type {Fiber} from './ReactInternalTypes';\nimport type {SuspenseInstance} from './ReactFiberHostConfig';\nimport type {Lane} from './ReactFiberLane.old';\nimport type {TreeContext} from './ReactFiberTreeContext.old';\n\nimport {enableSuspenseAvoidThisFallback} from 'shared/ReactFeatureFlags';\nimport {SuspenseComponent, SuspenseListComponent} from './ReactWorkTags';\nimport {NoFlags, DidCapture} from './ReactFiberFlags';\nimport {\n  isSuspenseInstancePending,\n  isSuspenseInstanceFallback,\n} from './ReactFiberHostConfig';\n\nexport type SuspenseProps = {|\n  children?: ReactNodeList,\n  fallback?: ReactNodeList,\n\n  // TODO: Add \"unstable_\" prefix?\n  suspenseCallback?: (Set<Wakeable> | null) => mixed,\n\n  unstable_expectedLoadTime?: number,\n  unstable_name?: string,\n|};\n\n// A null SuspenseState represents an unsuspended normal Suspense boundary.\n// A non-null SuspenseState means that it is blocked for one reason or another.\n// - A non-null dehydrated field means it's blocked pending hydration.\n//   - A non-null dehydrated field can use isSuspenseInstancePending or\n//     isSuspenseInstanceFallback to query the reason for being dehydrated.\n// - A null dehydrated field means it's blocked by something suspending and\n//   we're currently showing a fallback instead.\nexport type SuspenseState = {|\n  // If this boundary is still dehydrated, we store the SuspenseInstance\n  // here to indicate that it is dehydrated (flag) and for quick access\n  // to check things like isSuspenseInstancePending.\n  dehydrated: null | SuspenseInstance,\n  treeContext: null | TreeContext,\n  // Represents the lane we should attempt to hydrate a dehydrated boundary at.\n  // OffscreenLane is the default for dehydrated boundaries.\n  // NoLane is the default for normal boundaries, which turns into \"normal\" pri.\n  retryLane: Lane,\n|};\n\nexport type SuspenseListTailMode = 'collapsed' | 'hidden' | void;\n\nexport type SuspenseListRenderState = {|\n  isBackwards: boolean,\n  // The currently rendering tail row.\n  rendering: null | Fiber,\n  // The absolute time when we started rendering the most recent tail row.\n  renderingStartTime: number,\n  // The last of the already rendered children.\n  last: null | Fiber,\n  // Remaining rows on the tail of the list.\n  tail: null | Fiber,\n  // Tail insertions setting.\n  tailMode: SuspenseListTailMode,\n|};\n\nexport function shouldCaptureSuspense(\n  workInProgress: Fiber,\n  hasInvisibleParent: boolean,\n): boolean {\n  // If it was the primary children that just suspended, capture and render the\n  // fallback. Otherwise, don't capture and bubble to the next boundary.\n  const nextState: SuspenseState | null = workInProgress.memoizedState;\n  if (nextState !== null) {\n    if (nextState.dehydrated !== null) {\n      // A dehydrated boundary always captures.\n      return true;\n    }\n    return false;\n  }\n  const props = workInProgress.memoizedProps;\n  // Regular boundaries always capture.\n  if (\n    !enableSuspenseAvoidThisFallback ||\n    props.unstable_avoidThisFallback !== true\n  ) {\n    return true;\n  }\n  // If it's a boundary we should avoid, then we prefer to bubble up to the\n  // parent boundary if it is currently invisible.\n  if (hasInvisibleParent) {\n    return false;\n  }\n  // If the parent is not able to handle it, we must handle it.\n  return true;\n}\n\nexport function findFirstSuspended(row: Fiber): null | Fiber {\n  let node = row;\n  while (node !== null) {\n    if (node.tag === SuspenseComponent) {\n      const state: SuspenseState | null = node.memoizedState;\n      if (state !== null) {\n        const dehydrated: null | SuspenseInstance = state.dehydrated;\n        if (\n          dehydrated === null ||\n          isSuspenseInstancePending(dehydrated) ||\n          isSuspenseInstanceFallback(dehydrated)\n        ) {\n          return node;\n        }\n      }\n    } else if (\n      node.tag === SuspenseListComponent &&\n      // revealOrder undefined can't be trusted because it don't\n      // keep track of whether it suspended or not.\n      node.memoizedProps.revealOrder !== undefined\n    ) {\n      const didSuspend = (node.flags & DidCapture) !== NoFlags;\n      if (didSuspend) {\n        return node;\n      }\n    } else if (node.child !== null) {\n      node.child.return = node;\n      node = node.child;\n      continue;\n    }\n    if (node === row) {\n      return null;\n    }\n    while (node.sibling === null) {\n      if (node.return === null || node.return === row) {\n        return null;\n      }\n      node = node.return;\n    }\n    node.sibling.return = node.return;\n    node = node.sibling;\n  }\n  return null;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nexport type HookFlags = number;\n\nexport const NoFlags = /*   */ 0b0000;\n\n// Represents whether effect should fire.\nexport const HasEffect = /* */ 0b0001;\n\n// Represents the phase in which the effect (not the clean-up) fires.\nexport const Insertion = /*  */ 0b0010;\nexport const Layout = /*    */ 0b0100;\nexport const Passive = /*   */ 0b1000;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {MutableSource, MutableSourceVersion} from 'shared/ReactTypes';\nimport type {FiberRoot} from './ReactInternalTypes';\n\nimport {isPrimaryRenderer} from './ReactFiberHostConfig';\n\n// Work in progress version numbers only apply to a single render,\n// and should be reset before starting a new render.\n// This tracks which mutable sources need to be reset after a render.\nconst workInProgressSources: Array<MutableSource<any>> = [];\n\nlet rendererSigil;\nif (__DEV__) {\n  // Used to detect multiple renderers using the same mutable source.\n  rendererSigil = {};\n}\n\nexport function markSourceAsDirty(mutableSource: MutableSource<any>): void {\n  workInProgressSources.push(mutableSource);\n}\n\nexport function resetWorkInProgressVersions(): void {\n  for (let i = 0; i < workInProgressSources.length; i++) {\n    const mutableSource = workInProgressSources[i];\n    if (isPrimaryRenderer) {\n      mutableSource._workInProgressVersionPrimary = null;\n    } else {\n      mutableSource._workInProgressVersionSecondary = null;\n    }\n  }\n  workInProgressSources.length = 0;\n}\n\nexport function getWorkInProgressVersion(\n  mutableSource: MutableSource<any>,\n): null | MutableSourceVersion {\n  if (isPrimaryRenderer) {\n    return mutableSource._workInProgressVersionPrimary;\n  } else {\n    return mutableSource._workInProgressVersionSecondary;\n  }\n}\n\nexport function setWorkInProgressVersion(\n  mutableSource: MutableSource<any>,\n  version: MutableSourceVersion,\n): void {\n  if (isPrimaryRenderer) {\n    mutableSource._workInProgressVersionPrimary = version;\n  } else {\n    mutableSource._workInProgressVersionSecondary = version;\n  }\n  workInProgressSources.push(mutableSource);\n}\n\nexport function warnAboutMultipleRenderersDEV(\n  mutableSource: MutableSource<any>,\n): void {\n  if (__DEV__) {\n    if (isPrimaryRenderer) {\n      if (mutableSource._currentPrimaryRenderer == null) {\n        mutableSource._currentPrimaryRenderer = rendererSigil;\n      } else if (mutableSource._currentPrimaryRenderer !== rendererSigil) {\n        console.error(\n          'Detected multiple renderers concurrently rendering the ' +\n            'same mutable source. This is currently unsupported.',\n        );\n      }\n    } else {\n      if (mutableSource._currentSecondaryRenderer == null) {\n        mutableSource._currentSecondaryRenderer = rendererSigil;\n      } else if (mutableSource._currentSecondaryRenderer !== rendererSigil) {\n        console.error(\n          'Detected multiple renderers concurrently rendering the ' +\n            'same mutable source. This is currently unsupported.',\n        );\n      }\n    }\n  }\n}\n\n// Eager reads the version of a mutable source and stores it on the root.\n// This ensures that the version used for server rendering matches the one\n// that is eventually read during hydration.\n// If they don't match there's a potential tear and a full deopt render is required.\nexport function registerMutableSourceForHydration(\n  root: FiberRoot,\n  mutableSource: MutableSource<any>,\n): void {\n  const getVersion = mutableSource._getVersion;\n  const version = getVersion(mutableSource._source);\n\n  // TODO Clear this data once all pending hydration work is finished.\n  // Retaining it forever may interfere with GC.\n  if (root.mutableSourceEagerHydrationData == null) {\n    root.mutableSourceEagerHydrationData = [mutableSource, version];\n  } else {\n    root.mutableSourceEagerHydrationData.push(mutableSource, version);\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {ReactContext} from 'shared/ReactTypes';\n\nimport {enableCache} from 'shared/ReactFeatureFlags';\nimport {REACT_CONTEXT_TYPE} from 'shared/ReactSymbols';\n\nimport {pushProvider, popProvider} from './ReactFiberNewContext.old';\nimport * as Scheduler from 'scheduler';\n\n// In environments without AbortController (e.g. tests)\n// replace it with a lightweight shim that only has the features we use.\nconst AbortControllerLocal = enableCache\n  ? typeof AbortController !== 'undefined'\n    ? AbortController\n    : (function AbortControllerShim() {\n        const listeners = [];\n        const signal = (this.signal = {\n          aborted: false,\n          addEventListener: (type, listener) => {\n            listeners.push(listener);\n          },\n        });\n\n        this.abort = () => {\n          signal.aborted = true;\n          listeners.forEach(listener => listener());\n        };\n      }: AbortController)\n  : (null: any);\n\nexport type Cache = {|\n  controller: AbortControllerLocal,\n  data: Map<() => mixed, mixed>,\n  refCount: number,\n|};\n\nexport type CacheComponentState = {|\n  +parent: Cache,\n  +cache: Cache,\n|};\n\nexport type SpawnedCachePool = {|\n  +parent: Cache,\n  +pool: Cache,\n|};\n\n// Intentionally not named imports because Rollup would\n// use dynamic dispatch for CommonJS interop named imports.\nconst {\n  unstable_scheduleCallback: scheduleCallback,\n  unstable_NormalPriority: NormalPriority,\n} = Scheduler;\n\nexport const CacheContext: ReactContext<Cache> = enableCache\n  ? {\n      $$typeof: REACT_CONTEXT_TYPE,\n      // We don't use Consumer/Provider for Cache components. So we'll cheat.\n      Consumer: (null: any),\n      Provider: (null: any),\n      // We'll initialize these at the root.\n      _currentValue: (null: any),\n      _currentValue2: (null: any),\n      _threadCount: 0,\n      _defaultValue: (null: any),\n      _globalName: (null: any),\n    }\n  : (null: any);\n\nif (__DEV__ && enableCache) {\n  CacheContext._currentRenderer = null;\n  CacheContext._currentRenderer2 = null;\n}\n\n// Creates a new empty Cache instance with a ref-count of 0. The caller is responsible\n// for retaining the cache once it is in use (retainCache), and releasing the cache\n// once it is no longer needed (releaseCache).\nexport function createCache(): Cache {\n  if (!enableCache) {\n    return (null: any);\n  }\n  const cache: Cache = {\n    controller: new AbortControllerLocal(),\n    data: new Map(),\n    refCount: 0,\n  };\n\n  return cache;\n}\n\nexport function retainCache(cache: Cache) {\n  if (!enableCache) {\n    return;\n  }\n  if (__DEV__) {\n    if (cache.controller.signal.aborted) {\n      console.warn(\n        'A cache instance was retained after it was already freed. ' +\n          'This likely indicates a bug in React.',\n      );\n    }\n  }\n  cache.refCount++;\n}\n\n// Cleanup a cache instance, potentially freeing it if there are no more references\nexport function releaseCache(cache: Cache) {\n  if (!enableCache) {\n    return;\n  }\n  cache.refCount--;\n  if (__DEV__) {\n    if (cache.refCount < 0) {\n      console.warn(\n        'A cache instance was released after it was already freed. ' +\n          'This likely indicates a bug in React.',\n      );\n    }\n  }\n  if (cache.refCount === 0) {\n    scheduleCallback(NormalPriority, () => {\n      cache.controller.abort();\n    });\n  }\n}\n\nexport function pushCacheProvider(workInProgress: Fiber, cache: Cache) {\n  if (!enableCache) {\n    return;\n  }\n  pushProvider(workInProgress, CacheContext, cache);\n}\n\nexport function popCacheProvider(workInProgress: Fiber, cache: Cache) {\n  if (!enableCache) {\n    return;\n  }\n  popProvider(CacheContext, workInProgress);\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {\n  MutableSource,\n  MutableSourceGetSnapshotFn,\n  MutableSourceSubscribeFn,\n  ReactContext,\n  StartTransitionOptions,\n} from 'shared/ReactTypes';\nimport type {Fiber, Dispatcher, HookType} from './ReactInternalTypes';\nimport type {Lanes, Lane} from './ReactFiberLane.old';\nimport type {HookFlags} from './ReactHookEffectTags';\nimport type {FiberRoot} from './ReactInternalTypes';\nimport type {Cache} from './ReactFiberCacheComponent.old';\nimport type {Flags} from './ReactFiberFlags';\n\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\nimport {\n  enableDebugTracing,\n  enableSchedulingProfiler,\n  enableNewReconciler,\n  enableCache,\n  enableUseRefAccessWarning,\n  enableStrictEffects,\n  enableLazyContextPropagation,\n  enableSuspenseLayoutEffectSemantics,\n  enableUseMutableSource,\n  enableTransitionTracing,\n} from 'shared/ReactFeatureFlags';\n\nimport {\n  NoMode,\n  ConcurrentMode,\n  DebugTracingMode,\n  StrictEffectsMode,\n} from './ReactTypeOfMode';\nimport {\n  NoLane,\n  SyncLane,\n  NoLanes,\n  isSubsetOfLanes,\n  includesBlockingLane,\n  includesOnlyNonUrgentLanes,\n  claimNextTransitionLane,\n  mergeLanes,\n  removeLanes,\n  intersectLanes,\n  isTransitionLane,\n  markRootEntangled,\n  markRootMutableRead,\n  NoTimestamp,\n} from './ReactFiberLane.old';\nimport {\n  ContinuousEventPriority,\n  getCurrentUpdatePriority,\n  setCurrentUpdatePriority,\n  higherEventPriority,\n} from './ReactEventPriorities.old';\nimport {readContext, checkIfContextChanged} from './ReactFiberNewContext.old';\nimport {HostRoot, CacheComponent} from './ReactWorkTags';\nimport {\n  LayoutStatic as LayoutStaticEffect,\n  MountLayoutDev as MountLayoutDevEffect,\n  MountPassiveDev as MountPassiveDevEffect,\n  Passive as PassiveEffect,\n  PassiveStatic as PassiveStaticEffect,\n  StaticMask as StaticMaskEffect,\n  Update as UpdateEffect,\n  StoreConsistency,\n} from './ReactFiberFlags';\nimport {\n  HasEffect as HookHasEffect,\n  Layout as HookLayout,\n  Passive as HookPassive,\n  Insertion as HookInsertion,\n} from './ReactHookEffectTags';\nimport {\n  getWorkInProgressRoot,\n  scheduleUpdateOnFiber,\n  requestUpdateLane,\n  requestEventTime,\n  markSkippedUpdateLanes,\n} from './ReactFiberWorkLoop.old';\n\nimport getComponentNameFromFiber from 'react-reconciler/src/getComponentNameFromFiber';\nimport is from 'shared/objectIs';\nimport isArray from 'shared/isArray';\nimport {\n  markWorkInProgressReceivedUpdate,\n  checkIfWorkInProgressReceivedUpdate,\n} from './ReactFiberBeginWork.old';\nimport {getIsHydrating} from './ReactFiberHydrationContext.old';\nimport {\n  getWorkInProgressVersion,\n  markSourceAsDirty,\n  setWorkInProgressVersion,\n  warnAboutMultipleRenderersDEV,\n} from './ReactMutableSource.old';\nimport {logStateUpdateScheduled} from './DebugTracing';\nimport {markStateUpdateScheduled} from './ReactFiberDevToolsHook.old';\nimport {createCache, CacheContext} from './ReactFiberCacheComponent.old';\nimport {\n  createUpdate as createLegacyQueueUpdate,\n  enqueueUpdate as enqueueLegacyQueueUpdate,\n  entangleTransitions as entangleLegacyQueueTransitions,\n} from './ReactFiberClassUpdateQueue.old';\nimport {\n  enqueueConcurrentHookUpdate,\n  enqueueConcurrentHookUpdateAndEagerlyBailout,\n  enqueueConcurrentRenderForLane,\n} from './ReactFiberConcurrentUpdates.old';\nimport {getTreeId} from './ReactFiberTreeContext.old';\nimport {now} from './Scheduler';\n\nconst {ReactCurrentDispatcher, ReactCurrentBatchConfig} = ReactSharedInternals;\n\nexport type Update<S, A> = {|\n  lane: Lane,\n  action: A,\n  hasEagerState: boolean,\n  eagerState: S | null,\n  next: Update<S, A>,\n|};\n\nexport type UpdateQueue<S, A> = {|\n  pending: Update<S, A> | null,\n  interleaved: Update<S, A> | null,\n  lanes: Lanes,\n  dispatch: (A => mixed) | null,\n  lastRenderedReducer: ((S, A) => S) | null,\n  lastRenderedState: S | null,\n|};\n\nlet didWarnAboutMismatchedHooksForComponent;\nlet didWarnUncachedGetSnapshot;\nif (__DEV__) {\n  didWarnAboutMismatchedHooksForComponent = new Set();\n}\n\nexport type Hook = {|\n  memoizedState: any,\n  baseState: any,\n  baseQueue: Update<any, any> | null,\n  queue: any,\n  next: Hook | null,\n|};\n\nexport type Effect = {|\n  tag: HookFlags,\n  create: () => (() => void) | void,\n  destroy: (() => void) | void,\n  deps: Array<mixed> | null,\n  next: Effect,\n|};\n\ntype StoreInstance<T> = {|\n  value: T,\n  getSnapshot: () => T,\n|};\n\ntype StoreConsistencyCheck<T> = {|\n  value: T,\n  getSnapshot: () => T,\n|};\n\nexport type FunctionComponentUpdateQueue = {|\n  lastEffect: Effect | null,\n  stores: Array<StoreConsistencyCheck<any>> | null,\n|};\n\ntype BasicStateAction<S> = (S => S) | S;\n\ntype Dispatch<A> = A => void;\n\n// These are set right before calling the component.\nlet renderLanes: Lanes = NoLanes;\n// The work-in-progress fiber. I've named it differently to distinguish it from\n// the work-in-progress hook.\nlet currentlyRenderingFiber: Fiber = (null: any);\n\n// Hooks are stored as a linked list on the fiber's memoizedState field. The\n// current hook list is the list that belongs to the current fiber. The\n// work-in-progress hook list is a new list that will be added to the\n// work-in-progress fiber.\nlet currentHook: Hook | null = null;\nlet workInProgressHook: Hook | null = null;\n\n// Whether an update was scheduled at any point during the render phase. This\n// does not get reset if we do another render pass; only when we're completely\n// finished evaluating this component. This is an optimization so we know\n// whether we need to clear render phase updates after a throw.\nlet didScheduleRenderPhaseUpdate: boolean = false;\n// Where an update was scheduled only during the current render pass. This\n// gets reset after each attempt.\n// TODO: Maybe there's some way to consolidate this with\n// `didScheduleRenderPhaseUpdate`. Or with `numberOfReRenders`.\nlet didScheduleRenderPhaseUpdateDuringThisPass: boolean = false;\n// Counts the number of useId hooks in this component.\nlet localIdCounter: number = 0;\n// Used for ids that are generated completely client-side (i.e. not during\n// hydration). This counter is global, so client ids are not stable across\n// render attempts.\nlet globalClientIdCounter: number = 0;\n\nconst RE_RENDER_LIMIT = 25;\n\n// In DEV, this is the name of the currently executing primitive hook\nlet currentHookNameInDev: ?HookType = null;\n\n// In DEV, this list ensures that hooks are called in the same order between renders.\n// The list stores the order of hooks used during the initial render (mount).\n// Subsequent renders (updates) reference this list.\nlet hookTypesDev: Array<HookType> | null = null;\nlet hookTypesUpdateIndexDev: number = -1;\n\n// In DEV, this tracks whether currently rendering component needs to ignore\n// the dependencies for Hooks that need them (e.g. useEffect or useMemo).\n// When true, such Hooks will always be \"remounted\". Only used during hot reload.\nlet ignorePreviousDependencies: boolean = false;\n\nfunction mountHookTypesDev() {\n  if (__DEV__) {\n    const hookName = ((currentHookNameInDev: any): HookType);\n\n    if (hookTypesDev === null) {\n      hookTypesDev = [hookName];\n    } else {\n      hookTypesDev.push(hookName);\n    }\n  }\n}\n\nfunction updateHookTypesDev() {\n  if (__DEV__) {\n    const hookName = ((currentHookNameInDev: any): HookType);\n\n    if (hookTypesDev !== null) {\n      hookTypesUpdateIndexDev++;\n      if (hookTypesDev[hookTypesUpdateIndexDev] !== hookName) {\n        warnOnHookMismatchInDev(hookName);\n      }\n    }\n  }\n}\n\nfunction checkDepsAreArrayDev(deps: mixed) {\n  if (__DEV__) {\n    if (deps !== undefined && deps !== null && !isArray(deps)) {\n      // Verify deps, but only on mount to avoid extra checks.\n      // It's unlikely their type would change as usually you define them inline.\n      console.error(\n        '%s received a final argument that is not an array (instead, received `%s`). When ' +\n          'specified, the final argument must be an array.',\n        currentHookNameInDev,\n        typeof deps,\n      );\n    }\n  }\n}\n\nfunction warnOnHookMismatchInDev(currentHookName: HookType) {\n  if (__DEV__) {\n    const componentName = getComponentNameFromFiber(currentlyRenderingFiber);\n    if (!didWarnAboutMismatchedHooksForComponent.has(componentName)) {\n      didWarnAboutMismatchedHooksForComponent.add(componentName);\n\n      if (hookTypesDev !== null) {\n        let table = '';\n\n        const secondColumnStart = 30;\n\n        for (let i = 0; i <= ((hookTypesUpdateIndexDev: any): number); i++) {\n          const oldHookName = hookTypesDev[i];\n          const newHookName =\n            i === ((hookTypesUpdateIndexDev: any): number)\n              ? currentHookName\n              : oldHookName;\n\n          let row = `${i + 1}. ${oldHookName}`;\n\n          // Extra space so second column lines up\n          // lol @ IE not supporting String#repeat\n          while (row.length < secondColumnStart) {\n            row += ' ';\n          }\n\n          row += newHookName + '\\n';\n\n          table += row;\n        }\n\n        console.error(\n          'React has detected a change in the order of Hooks called by %s. ' +\n            'This will lead to bugs and errors if not fixed. ' +\n            'For more information, read the Rules of Hooks: https://reactjs.org/link/rules-of-hooks\\n\\n' +\n            '   Previous render            Next render\\n' +\n            '   ------------------------------------------------------\\n' +\n            '%s' +\n            '   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n',\n          componentName,\n          table,\n        );\n      }\n    }\n  }\n}\n\nfunction throwInvalidHookError() {\n  throw new Error(\n    'Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for' +\n      ' one of the following reasons:\\n' +\n      '1. You might have mismatching versions of React and the renderer (such as React DOM)\\n' +\n      '2. You might be breaking the Rules of Hooks\\n' +\n      '3. You might have more than one copy of React in the same app\\n' +\n      'See https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.',\n  );\n}\n\nfunction areHookInputsEqual(\n  nextDeps: Array<mixed>,\n  prevDeps: Array<mixed> | null,\n) {\n  if (__DEV__) {\n    if (ignorePreviousDependencies) {\n      // Only true when this component is being hot reloaded.\n      return false;\n    }\n  }\n\n  if (prevDeps === null) {\n    if (__DEV__) {\n      console.error(\n        '%s received a final argument during this render, but not during ' +\n          'the previous render. Even though the final argument is optional, ' +\n          'its type cannot change between renders.',\n        currentHookNameInDev,\n      );\n    }\n    return false;\n  }\n\n  if (__DEV__) {\n    // Don't bother comparing lengths in prod because these arrays should be\n    // passed inline.\n    if (nextDeps.length !== prevDeps.length) {\n      console.error(\n        'The final argument passed to %s changed size between renders. The ' +\n          'order and size of this array must remain constant.\\n\\n' +\n          'Previous: %s\\n' +\n          'Incoming: %s',\n        currentHookNameInDev,\n        `[${prevDeps.join(', ')}]`,\n        `[${nextDeps.join(', ')}]`,\n      );\n    }\n  }\n  for (let i = 0; i < prevDeps.length && i < nextDeps.length; i++) {\n    if (is(nextDeps[i], prevDeps[i])) {\n      continue;\n    }\n    return false;\n  }\n  return true;\n}\n\nexport function renderWithHooks<Props, SecondArg>(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  Component: (p: Props, arg: SecondArg) => any,\n  props: Props,\n  secondArg: SecondArg,\n  nextRenderLanes: Lanes,\n): any {\n  renderLanes = nextRenderLanes;\n  currentlyRenderingFiber = workInProgress;\n\n  if (__DEV__) {\n    hookTypesDev =\n      current !== null\n        ? ((current._debugHookTypes: any): Array<HookType>)\n        : null;\n    hookTypesUpdateIndexDev = -1;\n    // Used for hot reloading:\n    ignorePreviousDependencies =\n      current !== null && current.type !== workInProgress.type;\n  }\n\n  workInProgress.memoizedState = null;\n  workInProgress.updateQueue = null;\n  workInProgress.lanes = NoLanes;\n\n  // The following should have already been reset\n  // currentHook = null;\n  // workInProgressHook = null;\n\n  // didScheduleRenderPhaseUpdate = false;\n  // localIdCounter = 0;\n\n  // TODO Warn if no hooks are used at all during mount, then some are used during update.\n  // Currently we will identify the update render as a mount because memoizedState === null.\n  // This is tricky because it's valid for certain types of components (e.g. React.lazy)\n\n  // Using memoizedState to differentiate between mount/update only works if at least one stateful hook is used.\n  // Non-stateful hooks (e.g. context) don't get added to memoizedState,\n  // so memoizedState would be null during updates and mounts.\n  if (__DEV__) {\n    if (current !== null && current.memoizedState !== null) {\n      ReactCurrentDispatcher.current = HooksDispatcherOnUpdateInDEV;\n    } else if (hookTypesDev !== null) {\n      // This dispatcher handles an edge case where a component is updating,\n      // but no stateful hooks have been used.\n      // We want to match the production code behavior (which will use HooksDispatcherOnMount),\n      // but with the extra DEV validation to ensure hooks ordering hasn't changed.\n      // This dispatcher does that.\n      ReactCurrentDispatcher.current = HooksDispatcherOnMountWithHookTypesInDEV;\n    } else {\n      ReactCurrentDispatcher.current = HooksDispatcherOnMountInDEV;\n    }\n  } else {\n    ReactCurrentDispatcher.current =\n      current === null || current.memoizedState === null\n        ? HooksDispatcherOnMount\n        : HooksDispatcherOnUpdate;\n  }\n\n  let children = Component(props, secondArg);\n\n  // Check if there was a render phase update\n  if (didScheduleRenderPhaseUpdateDuringThisPass) {\n    // Keep rendering in a loop for as long as render phase updates continue to\n    // be scheduled. Use a counter to prevent infinite loops.\n    let numberOfReRenders: number = 0;\n    do {\n      didScheduleRenderPhaseUpdateDuringThisPass = false;\n      localIdCounter = 0;\n\n      if (numberOfReRenders >= RE_RENDER_LIMIT) {\n        throw new Error(\n          'Too many re-renders. React limits the number of renders to prevent ' +\n            'an infinite loop.',\n        );\n      }\n\n      numberOfReRenders += 1;\n      if (__DEV__) {\n        // Even when hot reloading, allow dependencies to stabilize\n        // after first render to prevent infinite render phase updates.\n        ignorePreviousDependencies = false;\n      }\n\n      // Start over from the beginning of the list\n      currentHook = null;\n      workInProgressHook = null;\n\n      workInProgress.updateQueue = null;\n\n      if (__DEV__) {\n        // Also validate hook order for cascading updates.\n        hookTypesUpdateIndexDev = -1;\n      }\n\n      ReactCurrentDispatcher.current = __DEV__\n        ? HooksDispatcherOnRerenderInDEV\n        : HooksDispatcherOnRerender;\n\n      children = Component(props, secondArg);\n    } while (didScheduleRenderPhaseUpdateDuringThisPass);\n  }\n\n  // We can assume the previous dispatcher is always this one, since we set it\n  // at the beginning of the render phase and there's no re-entrance.\n  ReactCurrentDispatcher.current = ContextOnlyDispatcher;\n\n  if (__DEV__) {\n    workInProgress._debugHookTypes = hookTypesDev;\n  }\n\n  // This check uses currentHook so that it works the same in DEV and prod bundles.\n  // hookTypesDev could catch more cases (e.g. context) but only in DEV bundles.\n  const didRenderTooFewHooks =\n    currentHook !== null && currentHook.next !== null;\n\n  renderLanes = NoLanes;\n  currentlyRenderingFiber = (null: any);\n\n  currentHook = null;\n  workInProgressHook = null;\n\n  if (__DEV__) {\n    currentHookNameInDev = null;\n    hookTypesDev = null;\n    hookTypesUpdateIndexDev = -1;\n\n    // Confirm that a static flag was not added or removed since the last\n    // render. If this fires, it suggests that we incorrectly reset the static\n    // flags in some other part of the codebase. This has happened before, for\n    // example, in the SuspenseList implementation.\n    if (\n      current !== null &&\n      (current.flags & StaticMaskEffect) !==\n        (workInProgress.flags & StaticMaskEffect) &&\n      // Disable this warning in legacy mode, because legacy Suspense is weird\n      // and creates false positives. To make this work in legacy mode, we'd\n      // need to mark fibers that commit in an incomplete state, somehow. For\n      // now I'll disable the warning that most of the bugs that would trigger\n      // it are either exclusive to concurrent mode or exist in both.\n      (current.mode & ConcurrentMode) !== NoMode\n    ) {\n      console.error(\n        'Internal React error: Expected static flag was missing. Please ' +\n          'notify the React team.',\n      );\n    }\n  }\n\n  didScheduleRenderPhaseUpdate = false;\n  // This is reset by checkDidRenderIdHook\n  // localIdCounter = 0;\n\n  if (didRenderTooFewHooks) {\n    throw new Error(\n      'Rendered fewer hooks than expected. This may be caused by an accidental ' +\n        'early return statement.',\n    );\n  }\n\n  if (enableLazyContextPropagation) {\n    if (current !== null) {\n      if (!checkIfWorkInProgressReceivedUpdate()) {\n        // If there were no changes to props or state, we need to check if there\n        // was a context change. We didn't already do this because there's no\n        // 1:1 correspondence between dependencies and hooks. Although, because\n        // there almost always is in the common case (`readContext` is an\n        // internal API), we could compare in there. OTOH, we only hit this case\n        // if everything else bails out, so on the whole it might be better to\n        // keep the comparison out of the common path.\n        const currentDependencies = current.dependencies;\n        if (\n          currentDependencies !== null &&\n          checkIfContextChanged(currentDependencies)\n        ) {\n          markWorkInProgressReceivedUpdate();\n        }\n      }\n    }\n  }\n  return children;\n}\n\nexport function checkDidRenderIdHook() {\n  // This should be called immediately after every renderWithHooks call.\n  // Conceptually, it's part of the return value of renderWithHooks; it's only a\n  // separate function to avoid using an array tuple.\n  const didRenderIdHook = localIdCounter !== 0;\n  localIdCounter = 0;\n  return didRenderIdHook;\n}\n\nexport function bailoutHooks(\n  current: Fiber,\n  workInProgress: Fiber,\n  lanes: Lanes,\n) {\n  workInProgress.updateQueue = current.updateQueue;\n  // TODO: Don't need to reset the flags here, because they're reset in the\n  // complete phase (bubbleProperties).\n  if (\n    __DEV__ &&\n    enableStrictEffects &&\n    (workInProgress.mode & StrictEffectsMode) !== NoMode\n  ) {\n    workInProgress.flags &= ~(\n      MountPassiveDevEffect |\n      MountLayoutDevEffect |\n      PassiveEffect |\n      UpdateEffect\n    );\n  } else {\n    workInProgress.flags &= ~(PassiveEffect | UpdateEffect);\n  }\n  current.lanes = removeLanes(current.lanes, lanes);\n}\n\nexport function resetHooksAfterThrow(): void {\n  // We can assume the previous dispatcher is always this one, since we set it\n  // at the beginning of the render phase and there's no re-entrance.\n  ReactCurrentDispatcher.current = ContextOnlyDispatcher;\n\n  if (didScheduleRenderPhaseUpdate) {\n    // There were render phase updates. These are only valid for this render\n    // phase, which we are now aborting. Remove the updates from the queues so\n    // they do not persist to the next render. Do not remove updates from hooks\n    // that weren't processed.\n    //\n    // Only reset the updates from the queue if it has a clone. If it does\n    // not have a clone, that means it wasn't processed, and the updates were\n    // scheduled before we entered the render phase.\n    let hook: Hook | null = currentlyRenderingFiber.memoizedState;\n    while (hook !== null) {\n      const queue = hook.queue;\n      if (queue !== null) {\n        queue.pending = null;\n      }\n      hook = hook.next;\n    }\n    didScheduleRenderPhaseUpdate = false;\n  }\n\n  renderLanes = NoLanes;\n  currentlyRenderingFiber = (null: any);\n\n  currentHook = null;\n  workInProgressHook = null;\n\n  if (__DEV__) {\n    hookTypesDev = null;\n    hookTypesUpdateIndexDev = -1;\n\n    currentHookNameInDev = null;\n\n    isUpdatingOpaqueValueInRenderPhase = false;\n  }\n\n  didScheduleRenderPhaseUpdateDuringThisPass = false;\n  localIdCounter = 0;\n}\n\nfunction mountWorkInProgressHook(): Hook {\n  const hook: Hook = {\n    memoizedState: null,\n\n    baseState: null,\n    baseQueue: null,\n    queue: null,\n\n    next: null,\n  };\n\n  if (workInProgressHook === null) {\n    // This is the first hook in the list\n    currentlyRenderingFiber.memoizedState = workInProgressHook = hook;\n  } else {\n    // Append to the end of the list\n    workInProgressHook = workInProgressHook.next = hook;\n  }\n  return workInProgressHook;\n}\n\nfunction updateWorkInProgressHook(): Hook {\n  // This function is used both for updates and for re-renders triggered by a\n  // render phase update. It assumes there is either a current hook we can\n  // clone, or a work-in-progress hook from a previous render pass that we can\n  // use as a base. When we reach the end of the base list, we must switch to\n  // the dispatcher used for mounts.\n  let nextCurrentHook: null | Hook;\n  if (currentHook === null) {\n    const current = currentlyRenderingFiber.alternate;\n    if (current !== null) {\n      nextCurrentHook = current.memoizedState;\n    } else {\n      nextCurrentHook = null;\n    }\n  } else {\n    nextCurrentHook = currentHook.next;\n  }\n\n  let nextWorkInProgressHook: null | Hook;\n  if (workInProgressHook === null) {\n    nextWorkInProgressHook = currentlyRenderingFiber.memoizedState;\n  } else {\n    nextWorkInProgressHook = workInProgressHook.next;\n  }\n\n  if (nextWorkInProgressHook !== null) {\n    // There's already a work-in-progress. Reuse it.\n    workInProgressHook = nextWorkInProgressHook;\n    nextWorkInProgressHook = workInProgressHook.next;\n\n    currentHook = nextCurrentHook;\n  } else {\n    // Clone from the current hook.\n\n    if (nextCurrentHook === null) {\n      throw new Error('Rendered more hooks than during the previous render.');\n    }\n\n    currentHook = nextCurrentHook;\n\n    const newHook: Hook = {\n      memoizedState: currentHook.memoizedState,\n\n      baseState: currentHook.baseState,\n      baseQueue: currentHook.baseQueue,\n      queue: currentHook.queue,\n\n      next: null,\n    };\n\n    if (workInProgressHook === null) {\n      // This is the first hook in the list.\n      currentlyRenderingFiber.memoizedState = workInProgressHook = newHook;\n    } else {\n      // Append to the end of the list.\n      workInProgressHook = workInProgressHook.next = newHook;\n    }\n  }\n  return workInProgressHook;\n}\n\nfunction createFunctionComponentUpdateQueue(): FunctionComponentUpdateQueue {\n  return {\n    lastEffect: null,\n    stores: null,\n  };\n}\n\nfunction basicStateReducer<S>(state: S, action: BasicStateAction<S>): S {\n  // $FlowFixMe: Flow doesn't like mixed types\n  return typeof action === 'function' ? action(state) : action;\n}\n\nfunction mountReducer<S, I, A>(\n  reducer: (S, A) => S,\n  initialArg: I,\n  init?: I => S,\n): [S, Dispatch<A>] {\n  const hook = mountWorkInProgressHook();\n  let initialState;\n  if (init !== undefined) {\n    initialState = init(initialArg);\n  } else {\n    initialState = ((initialArg: any): S);\n  }\n  hook.memoizedState = hook.baseState = initialState;\n  const queue: UpdateQueue<S, A> = {\n    pending: null,\n    interleaved: null,\n    lanes: NoLanes,\n    dispatch: null,\n    lastRenderedReducer: reducer,\n    lastRenderedState: (initialState: any),\n  };\n  hook.queue = queue;\n  const dispatch: Dispatch<A> = (queue.dispatch = (dispatchReducerAction.bind(\n    null,\n    currentlyRenderingFiber,\n    queue,\n  ): any));\n  return [hook.memoizedState, dispatch];\n}\n\nfunction updateReducer<S, I, A>(\n  reducer: (S, A) => S,\n  initialArg: I,\n  init?: I => S,\n): [S, Dispatch<A>] {\n  const hook = updateWorkInProgressHook();\n  const queue = hook.queue;\n\n  if (queue === null) {\n    throw new Error(\n      'Should have a queue. This is likely a bug in React. Please file an issue.',\n    );\n  }\n\n  queue.lastRenderedReducer = reducer;\n\n  const current: Hook = (currentHook: any);\n\n  // The last rebase update that is NOT part of the base state.\n  let baseQueue = current.baseQueue;\n\n  // The last pending update that hasn't been processed yet.\n  const pendingQueue = queue.pending;\n  if (pendingQueue !== null) {\n    // We have new updates that haven't been processed yet.\n    // We'll add them to the base queue.\n    if (baseQueue !== null) {\n      // Merge the pending queue and the base queue.\n      const baseFirst = baseQueue.next;\n      const pendingFirst = pendingQueue.next;\n      baseQueue.next = pendingFirst;\n      pendingQueue.next = baseFirst;\n    }\n    if (__DEV__) {\n      if (current.baseQueue !== baseQueue) {\n        // Internal invariant that should never happen, but feasibly could in\n        // the future if we implement resuming, or some form of that.\n        console.error(\n          'Internal error: Expected work-in-progress queue to be a clone. ' +\n            'This is a bug in React.',\n        );\n      }\n    }\n    current.baseQueue = baseQueue = pendingQueue;\n    queue.pending = null;\n  }\n\n  if (baseQueue !== null) {\n    // We have a queue to process.\n    const first = baseQueue.next;\n    let newState = current.baseState;\n\n    let newBaseState = null;\n    let newBaseQueueFirst = null;\n    let newBaseQueueLast = null;\n    let update = first;\n    do {\n      const updateLane = update.lane;\n      if (!isSubsetOfLanes(renderLanes, updateLane)) {\n        // Priority is insufficient. Skip this update. If this is the first\n        // skipped update, the previous update/state is the new base\n        // update/state.\n        const clone: Update<S, A> = {\n          lane: updateLane,\n          action: update.action,\n          hasEagerState: update.hasEagerState,\n          eagerState: update.eagerState,\n          next: (null: any),\n        };\n        if (newBaseQueueLast === null) {\n          newBaseQueueFirst = newBaseQueueLast = clone;\n          newBaseState = newState;\n        } else {\n          newBaseQueueLast = newBaseQueueLast.next = clone;\n        }\n        // Update the remaining priority in the queue.\n        // TODO: Don't need to accumulate this. Instead, we can remove\n        // renderLanes from the original lanes.\n        currentlyRenderingFiber.lanes = mergeLanes(\n          currentlyRenderingFiber.lanes,\n          updateLane,\n        );\n        markSkippedUpdateLanes(updateLane);\n      } else {\n        // This update does have sufficient priority.\n\n        if (newBaseQueueLast !== null) {\n          const clone: Update<S, A> = {\n            // This update is going to be committed so we never want uncommit\n            // it. Using NoLane works because 0 is a subset of all bitmasks, so\n            // this will never be skipped by the check above.\n            lane: NoLane,\n            action: update.action,\n            hasEagerState: update.hasEagerState,\n            eagerState: update.eagerState,\n            next: (null: any),\n          };\n          newBaseQueueLast = newBaseQueueLast.next = clone;\n        }\n\n        // Process this update.\n        if (update.hasEagerState) {\n          // If this update is a state update (not a reducer) and was processed eagerly,\n          // we can use the eagerly computed state\n          newState = ((update.eagerState: any): S);\n        } else {\n          const action = update.action;\n          newState = reducer(newState, action);\n        }\n      }\n      update = update.next;\n    } while (update !== null && update !== first);\n\n    if (newBaseQueueLast === null) {\n      newBaseState = newState;\n    } else {\n      newBaseQueueLast.next = (newBaseQueueFirst: any);\n    }\n\n    // Mark that the fiber performed work, but only if the new state is\n    // different from the current state.\n    if (!is(newState, hook.memoizedState)) {\n      markWorkInProgressReceivedUpdate();\n    }\n\n    hook.memoizedState = newState;\n    hook.baseState = newBaseState;\n    hook.baseQueue = newBaseQueueLast;\n\n    queue.lastRenderedState = newState;\n  }\n\n  // Interleaved updates are stored on a separate queue. We aren't going to\n  // process them during this render, but we do need to track which lanes\n  // are remaining.\n  const lastInterleaved = queue.interleaved;\n  if (lastInterleaved !== null) {\n    let interleaved = lastInterleaved;\n    do {\n      const interleavedLane = interleaved.lane;\n      currentlyRenderingFiber.lanes = mergeLanes(\n        currentlyRenderingFiber.lanes,\n        interleavedLane,\n      );\n      markSkippedUpdateLanes(interleavedLane);\n      interleaved = ((interleaved: any).next: Update<S, A>);\n    } while (interleaved !== lastInterleaved);\n  } else if (baseQueue === null) {\n    // `queue.lanes` is used for entangling transitions. We can set it back to\n    // zero once the queue is empty.\n    queue.lanes = NoLanes;\n  }\n\n  const dispatch: Dispatch<A> = (queue.dispatch: any);\n  return [hook.memoizedState, dispatch];\n}\n\nfunction rerenderReducer<S, I, A>(\n  reducer: (S, A) => S,\n  initialArg: I,\n  init?: I => S,\n): [S, Dispatch<A>] {\n  const hook = updateWorkInProgressHook();\n  const queue = hook.queue;\n\n  if (queue === null) {\n    throw new Error(\n      'Should have a queue. This is likely a bug in React. Please file an issue.',\n    );\n  }\n\n  queue.lastRenderedReducer = reducer;\n\n  // This is a re-render. Apply the new render phase updates to the previous\n  // work-in-progress hook.\n  const dispatch: Dispatch<A> = (queue.dispatch: any);\n  const lastRenderPhaseUpdate = queue.pending;\n  let newState = hook.memoizedState;\n  if (lastRenderPhaseUpdate !== null) {\n    // The queue doesn't persist past this render pass.\n    queue.pending = null;\n\n    const firstRenderPhaseUpdate = lastRenderPhaseUpdate.next;\n    let update = firstRenderPhaseUpdate;\n    do {\n      // Process this render phase update. We don't have to check the\n      // priority because it will always be the same as the current\n      // render's.\n      const action = update.action;\n      newState = reducer(newState, action);\n      update = update.next;\n    } while (update !== firstRenderPhaseUpdate);\n\n    // Mark that the fiber performed work, but only if the new state is\n    // different from the current state.\n    if (!is(newState, hook.memoizedState)) {\n      markWorkInProgressReceivedUpdate();\n    }\n\n    hook.memoizedState = newState;\n    // Don't persist the state accumulated from the render phase updates to\n    // the base state unless the queue is empty.\n    // TODO: Not sure if this is the desired semantics, but it's what we\n    // do for gDSFP. I can't remember why.\n    if (hook.baseQueue === null) {\n      hook.baseState = newState;\n    }\n\n    queue.lastRenderedState = newState;\n  }\n  return [newState, dispatch];\n}\n\ntype MutableSourceMemoizedState<Source, Snapshot> = {|\n  refs: {\n    getSnapshot: MutableSourceGetSnapshotFn<Source, Snapshot>,\n    setSnapshot: Snapshot => void,\n  },\n  source: MutableSource<any>,\n  subscribe: MutableSourceSubscribeFn<Source, Snapshot>,\n|};\n\nfunction readFromUnsubscribedMutableSource<Source, Snapshot>(\n  root: FiberRoot,\n  source: MutableSource<Source>,\n  getSnapshot: MutableSourceGetSnapshotFn<Source, Snapshot>,\n): Snapshot {\n  if (__DEV__) {\n    warnAboutMultipleRenderersDEV(source);\n  }\n\n  const getVersion = source._getVersion;\n  const version = getVersion(source._source);\n\n  // Is it safe for this component to read from this source during the current render?\n  let isSafeToReadFromSource = false;\n\n  // Check the version first.\n  // If this render has already been started with a specific version,\n  // we can use it alone to determine if we can safely read from the source.\n  const currentRenderVersion = getWorkInProgressVersion(source);\n  if (currentRenderVersion !== null) {\n    // It's safe to read if the store hasn't been mutated since the last time\n    // we read something.\n    isSafeToReadFromSource = currentRenderVersion === version;\n  } else {\n    // If there's no version, then this is the first time we've read from the\n    // source during the current render pass, so we need to do a bit more work.\n    // What we need to determine is if there are any hooks that already\n    // subscribed to the source, and if so, whether there are any pending\n    // mutations that haven't been synchronized yet.\n    //\n    // If there are no pending mutations, then `root.mutableReadLanes` will be\n    // empty, and we know we can safely read.\n    //\n    // If there *are* pending mutations, we may still be able to safely read\n    // if the currently rendering lanes are inclusive of the pending mutation\n    // lanes, since that guarantees that the value we're about to read from\n    // the source is consistent with the values that we read during the most\n    // recent mutation.\n    isSafeToReadFromSource = isSubsetOfLanes(\n      renderLanes,\n      root.mutableReadLanes,\n    );\n\n    if (isSafeToReadFromSource) {\n      // If it's safe to read from this source during the current render,\n      // store the version in case other components read from it.\n      // A changed version number will let those components know to throw and restart the render.\n      setWorkInProgressVersion(source, version);\n    }\n  }\n\n  if (isSafeToReadFromSource) {\n    const snapshot = getSnapshot(source._source);\n    if (__DEV__) {\n      if (typeof snapshot === 'function') {\n        console.error(\n          'Mutable source should not return a function as the snapshot value. ' +\n            'Functions may close over mutable values and cause tearing.',\n        );\n      }\n    }\n    return snapshot;\n  } else {\n    // This handles the special case of a mutable source being shared between renderers.\n    // In that case, if the source is mutated between the first and second renderer,\n    // The second renderer don't know that it needs to reset the WIP version during unwind,\n    // (because the hook only marks sources as dirty if it's written to their WIP version).\n    // That would cause this tear check to throw again and eventually be visible to the user.\n    // We can avoid this infinite loop by explicitly marking the source as dirty.\n    //\n    // This can lead to tearing in the first renderer when it resumes,\n    // but there's nothing we can do about that (short of throwing here and refusing to continue the render).\n    markSourceAsDirty(source);\n\n    // Intentioally throw an error to force React to retry synchronously. During\n    // the synchronous retry, it will block interleaved mutations, so we should\n    // get a consistent read. Therefore, the following error should never be\n    // visible to the user.\n\n    // We expect this error not to be thrown during the synchronous retry,\n    // because we blocked interleaved mutations.\n    throw new Error(\n      'Cannot read from mutable source during the current render without tearing. This may be a bug in React. Please file an issue.',\n    );\n  }\n}\n\nfunction useMutableSource<Source, Snapshot>(\n  hook: Hook,\n  source: MutableSource<Source>,\n  getSnapshot: MutableSourceGetSnapshotFn<Source, Snapshot>,\n  subscribe: MutableSourceSubscribeFn<Source, Snapshot>,\n): Snapshot {\n  if (!enableUseMutableSource) {\n    return (undefined: any);\n  }\n\n  const root = ((getWorkInProgressRoot(): any): FiberRoot);\n\n  if (root === null) {\n    throw new Error(\n      'Expected a work-in-progress root. This is a bug in React. Please file an issue.',\n    );\n  }\n\n  const getVersion = source._getVersion;\n  const version = getVersion(source._source);\n\n  const dispatcher = ReactCurrentDispatcher.current;\n\n  // eslint-disable-next-line prefer-const\n  let [currentSnapshot, setSnapshot] = dispatcher.useState(() =>\n    readFromUnsubscribedMutableSource(root, source, getSnapshot),\n  );\n  let snapshot = currentSnapshot;\n\n  // Grab a handle to the state hook as well.\n  // We use it to clear the pending update queue if we have a new source.\n  const stateHook = ((workInProgressHook: any): Hook);\n\n  const memoizedState = ((hook.memoizedState: any): MutableSourceMemoizedState<\n    Source,\n    Snapshot,\n  >);\n  const refs = memoizedState.refs;\n  const prevGetSnapshot = refs.getSnapshot;\n  const prevSource = memoizedState.source;\n  const prevSubscribe = memoizedState.subscribe;\n\n  const fiber = currentlyRenderingFiber;\n\n  hook.memoizedState = ({\n    refs,\n    source,\n    subscribe,\n  }: MutableSourceMemoizedState<Source, Snapshot>);\n\n  // Sync the values needed by our subscription handler after each commit.\n  dispatcher.useEffect(() => {\n    refs.getSnapshot = getSnapshot;\n\n    // Normally the dispatch function for a state hook never changes,\n    // but this hook recreates the queue in certain cases  to avoid updates from stale sources.\n    // handleChange() below needs to reference the dispatch function without re-subscribing,\n    // so we use a ref to ensure that it always has the latest version.\n    refs.setSnapshot = setSnapshot;\n\n    // Check for a possible change between when we last rendered now.\n    const maybeNewVersion = getVersion(source._source);\n    if (!is(version, maybeNewVersion)) {\n      const maybeNewSnapshot = getSnapshot(source._source);\n      if (__DEV__) {\n        if (typeof maybeNewSnapshot === 'function') {\n          console.error(\n            'Mutable source should not return a function as the snapshot value. ' +\n              'Functions may close over mutable values and cause tearing.',\n          );\n        }\n      }\n\n      if (!is(snapshot, maybeNewSnapshot)) {\n        setSnapshot(maybeNewSnapshot);\n\n        const lane = requestUpdateLane(fiber);\n        markRootMutableRead(root, lane);\n      }\n      // If the source mutated between render and now,\n      // there may be state updates already scheduled from the old source.\n      // Entangle the updates so that they render in the same batch.\n      markRootEntangled(root, root.mutableReadLanes);\n    }\n  }, [getSnapshot, source, subscribe]);\n\n  // If we got a new source or subscribe function, re-subscribe in a passive effect.\n  dispatcher.useEffect(() => {\n    const handleChange = () => {\n      const latestGetSnapshot = refs.getSnapshot;\n      const latestSetSnapshot = refs.setSnapshot;\n\n      try {\n        latestSetSnapshot(latestGetSnapshot(source._source));\n\n        // Record a pending mutable source update with the same expiration time.\n        const lane = requestUpdateLane(fiber);\n\n        markRootMutableRead(root, lane);\n      } catch (error) {\n        // A selector might throw after a source mutation.\n        // e.g. it might try to read from a part of the store that no longer exists.\n        // In this case we should still schedule an update with React.\n        // Worst case the selector will throw again and then an error boundary will handle it.\n        latestSetSnapshot(\n          (() => {\n            throw error;\n          }: any),\n        );\n      }\n    };\n\n    const unsubscribe = subscribe(source._source, handleChange);\n    if (__DEV__) {\n      if (typeof unsubscribe !== 'function') {\n        console.error(\n          'Mutable source subscribe function must return an unsubscribe function.',\n        );\n      }\n    }\n\n    return unsubscribe;\n  }, [source, subscribe]);\n\n  // If any of the inputs to useMutableSource change, reading is potentially unsafe.\n  //\n  // If either the source or the subscription have changed we can't can't trust the update queue.\n  // Maybe the source changed in a way that the old subscription ignored but the new one depends on.\n  //\n  // If the getSnapshot function changed, we also shouldn't rely on the update queue.\n  // It's possible that the underlying source was mutated between the when the last \"change\" event fired,\n  // and when the current render (with the new getSnapshot function) is processed.\n  //\n  // In both cases, we need to throw away pending updates (since they are no longer relevant)\n  // and treat reading from the source as we do in the mount case.\n  if (\n    !is(prevGetSnapshot, getSnapshot) ||\n    !is(prevSource, source) ||\n    !is(prevSubscribe, subscribe)\n  ) {\n    // Create a new queue and setState method,\n    // So if there are interleaved updates, they get pushed to the older queue.\n    // When this becomes current, the previous queue and dispatch method will be discarded,\n    // including any interleaving updates that occur.\n    const newQueue: UpdateQueue<Snapshot, BasicStateAction<Snapshot>> = {\n      pending: null,\n      interleaved: null,\n      lanes: NoLanes,\n      dispatch: null,\n      lastRenderedReducer: basicStateReducer,\n      lastRenderedState: snapshot,\n    };\n    newQueue.dispatch = setSnapshot = (dispatchSetState.bind(\n      null,\n      currentlyRenderingFiber,\n      newQueue,\n    ): any);\n    stateHook.queue = newQueue;\n    stateHook.baseQueue = null;\n    snapshot = readFromUnsubscribedMutableSource(root, source, getSnapshot);\n    stateHook.memoizedState = stateHook.baseState = snapshot;\n  }\n\n  return snapshot;\n}\n\nfunction mountMutableSource<Source, Snapshot>(\n  source: MutableSource<Source>,\n  getSnapshot: MutableSourceGetSnapshotFn<Source, Snapshot>,\n  subscribe: MutableSourceSubscribeFn<Source, Snapshot>,\n): Snapshot {\n  if (!enableUseMutableSource) {\n    return (undefined: any);\n  }\n\n  const hook = mountWorkInProgressHook();\n  hook.memoizedState = ({\n    refs: {\n      getSnapshot,\n      setSnapshot: (null: any),\n    },\n    source,\n    subscribe,\n  }: MutableSourceMemoizedState<Source, Snapshot>);\n  return useMutableSource(hook, source, getSnapshot, subscribe);\n}\n\nfunction updateMutableSource<Source, Snapshot>(\n  source: MutableSource<Source>,\n  getSnapshot: MutableSourceGetSnapshotFn<Source, Snapshot>,\n  subscribe: MutableSourceSubscribeFn<Source, Snapshot>,\n): Snapshot {\n  if (!enableUseMutableSource) {\n    return (undefined: any);\n  }\n\n  const hook = updateWorkInProgressHook();\n  return useMutableSource(hook, source, getSnapshot, subscribe);\n}\n\nfunction mountSyncExternalStore<T>(\n  subscribe: (() => void) => () => void,\n  getSnapshot: () => T,\n  getServerSnapshot?: () => T,\n): T {\n  const fiber = currentlyRenderingFiber;\n  const hook = mountWorkInProgressHook();\n\n  let nextSnapshot;\n  const isHydrating = getIsHydrating();\n  if (isHydrating) {\n    if (getServerSnapshot === undefined) {\n      throw new Error(\n        'Missing getServerSnapshot, which is required for ' +\n          'server-rendered content. Will revert to client rendering.',\n      );\n    }\n    nextSnapshot = getServerSnapshot();\n    if (__DEV__) {\n      if (!didWarnUncachedGetSnapshot) {\n        if (nextSnapshot !== getServerSnapshot()) {\n          console.error(\n            'The result of getServerSnapshot should be cached to avoid an infinite loop',\n          );\n          didWarnUncachedGetSnapshot = true;\n        }\n      }\n    }\n  } else {\n    nextSnapshot = getSnapshot();\n    if (__DEV__) {\n      if (!didWarnUncachedGetSnapshot) {\n        const cachedSnapshot = getSnapshot();\n        if (!is(nextSnapshot, cachedSnapshot)) {\n          console.error(\n            'The result of getSnapshot should be cached to avoid an infinite loop',\n          );\n          didWarnUncachedGetSnapshot = true;\n        }\n      }\n    }\n    // Unless we're rendering a blocking lane, schedule a consistency check.\n    // Right before committing, we will walk the tree and check if any of the\n    // stores were mutated.\n    //\n    // We won't do this if we're hydrating server-rendered content, because if\n    // the content is stale, it's already visible anyway. Instead we'll patch\n    // it up in a passive effect.\n    const root: FiberRoot | null = getWorkInProgressRoot();\n\n    if (root === null) {\n      throw new Error(\n        'Expected a work-in-progress root. This is a bug in React. Please file an issue.',\n      );\n    }\n\n    if (!includesBlockingLane(root, renderLanes)) {\n      pushStoreConsistencyCheck(fiber, getSnapshot, nextSnapshot);\n    }\n  }\n\n  // Read the current snapshot from the store on every render. This breaks the\n  // normal rules of React, and only works because store updates are\n  // always synchronous.\n  hook.memoizedState = nextSnapshot;\n  const inst: StoreInstance<T> = {\n    value: nextSnapshot,\n    getSnapshot,\n  };\n  hook.queue = inst;\n\n  // Schedule an effect to subscribe to the store.\n  mountEffect(subscribeToStore.bind(null, fiber, inst, subscribe), [subscribe]);\n\n  // Schedule an effect to update the mutable instance fields. We will update\n  // this whenever subscribe, getSnapshot, or value changes. Because there's no\n  // clean-up function, and we track the deps correctly, we can call pushEffect\n  // directly, without storing any additional state. For the same reason, we\n  // don't need to set a static flag, either.\n  // TODO: We can move this to the passive phase once we add a pre-commit\n  // consistency check. See the next comment.\n  fiber.flags |= PassiveEffect;\n  pushEffect(\n    HookHasEffect | HookPassive,\n    updateStoreInstance.bind(null, fiber, inst, nextSnapshot, getSnapshot),\n    undefined,\n    null,\n  );\n\n  return nextSnapshot;\n}\n\nfunction updateSyncExternalStore<T>(\n  subscribe: (() => void) => () => void,\n  getSnapshot: () => T,\n  getServerSnapshot?: () => T,\n): T {\n  const fiber = currentlyRenderingFiber;\n  const hook = updateWorkInProgressHook();\n  // Read the current snapshot from the store on every render. This breaks the\n  // normal rules of React, and only works because store updates are\n  // always synchronous.\n  const nextSnapshot = getSnapshot();\n  if (__DEV__) {\n    if (!didWarnUncachedGetSnapshot) {\n      const cachedSnapshot = getSnapshot();\n      if (!is(nextSnapshot, cachedSnapshot)) {\n        console.error(\n          'The result of getSnapshot should be cached to avoid an infinite loop',\n        );\n        didWarnUncachedGetSnapshot = true;\n      }\n    }\n  }\n  const prevSnapshot = hook.memoizedState;\n  const snapshotChanged = !is(prevSnapshot, nextSnapshot);\n  if (snapshotChanged) {\n    hook.memoizedState = nextSnapshot;\n    markWorkInProgressReceivedUpdate();\n  }\n  const inst = hook.queue;\n\n  updateEffect(subscribeToStore.bind(null, fiber, inst, subscribe), [\n    subscribe,\n  ]);\n\n  // Whenever getSnapshot or subscribe changes, we need to check in the\n  // commit phase if there was an interleaved mutation. In concurrent mode\n  // this can happen all the time, but even in synchronous mode, an earlier\n  // effect may have mutated the store.\n  if (\n    inst.getSnapshot !== getSnapshot ||\n    snapshotChanged ||\n    // Check if the susbcribe function changed. We can save some memory by\n    // checking whether we scheduled a subscription effect above.\n    (workInProgressHook !== null &&\n      workInProgressHook.memoizedState.tag & HookHasEffect)\n  ) {\n    fiber.flags |= PassiveEffect;\n    pushEffect(\n      HookHasEffect | HookPassive,\n      updateStoreInstance.bind(null, fiber, inst, nextSnapshot, getSnapshot),\n      undefined,\n      null,\n    );\n\n    // Unless we're rendering a blocking lane, schedule a consistency check.\n    // Right before committing, we will walk the tree and check if any of the\n    // stores were mutated.\n    const root: FiberRoot | null = getWorkInProgressRoot();\n\n    if (root === null) {\n      throw new Error(\n        'Expected a work-in-progress root. This is a bug in React. Please file an issue.',\n      );\n    }\n\n    if (!includesBlockingLane(root, renderLanes)) {\n      pushStoreConsistencyCheck(fiber, getSnapshot, nextSnapshot);\n    }\n  }\n\n  return nextSnapshot;\n}\n\nfunction pushStoreConsistencyCheck<T>(\n  fiber: Fiber,\n  getSnapshot: () => T,\n  renderedSnapshot: T,\n) {\n  fiber.flags |= StoreConsistency;\n  const check: StoreConsistencyCheck<T> = {\n    getSnapshot,\n    value: renderedSnapshot,\n  };\n  let componentUpdateQueue: null | FunctionComponentUpdateQueue = (currentlyRenderingFiber.updateQueue: any);\n  if (componentUpdateQueue === null) {\n    componentUpdateQueue = createFunctionComponentUpdateQueue();\n    currentlyRenderingFiber.updateQueue = (componentUpdateQueue: any);\n    componentUpdateQueue.stores = [check];\n  } else {\n    const stores = componentUpdateQueue.stores;\n    if (stores === null) {\n      componentUpdateQueue.stores = [check];\n    } else {\n      stores.push(check);\n    }\n  }\n}\n\nfunction updateStoreInstance<T>(\n  fiber: Fiber,\n  inst: StoreInstance<T>,\n  nextSnapshot: T,\n  getSnapshot: () => T,\n) {\n  // These are updated in the passive phase\n  inst.value = nextSnapshot;\n  inst.getSnapshot = getSnapshot;\n\n  // Something may have been mutated in between render and commit. This could\n  // have been in an event that fired before the passive effects, or it could\n  // have been in a layout effect. In that case, we would have used the old\n  // snapsho and getSnapshot values to bail out. We need to check one more time.\n  if (checkIfSnapshotChanged(inst)) {\n    // Force a re-render.\n    forceStoreRerender(fiber);\n  }\n}\n\nfunction subscribeToStore(fiber, inst, subscribe) {\n  const handleStoreChange = () => {\n    // The store changed. Check if the snapshot changed since the last time we\n    // read from the store.\n    if (checkIfSnapshotChanged(inst)) {\n      // Force a re-render.\n      forceStoreRerender(fiber);\n    }\n  };\n  // Subscribe to the store and return a clean-up function.\n  return subscribe(handleStoreChange);\n}\n\nfunction checkIfSnapshotChanged(inst) {\n  const latestGetSnapshot = inst.getSnapshot;\n  const prevValue = inst.value;\n  try {\n    const nextValue = latestGetSnapshot();\n    return !is(prevValue, nextValue);\n  } catch (error) {\n    return true;\n  }\n}\n\nfunction forceStoreRerender(fiber) {\n  const root = enqueueConcurrentRenderForLane(fiber, SyncLane);\n  if (root !== null) {\n    scheduleUpdateOnFiber(root, fiber, SyncLane, NoTimestamp);\n  }\n}\n\nfunction mountState<S>(\n  initialState: (() => S) | S,\n): [S, Dispatch<BasicStateAction<S>>] {\n  const hook = mountWorkInProgressHook();\n  if (typeof initialState === 'function') {\n    // $FlowFixMe: Flow doesn't like mixed types\n    initialState = initialState();\n  }\n  hook.memoizedState = hook.baseState = initialState;\n  const queue: UpdateQueue<S, BasicStateAction<S>> = {\n    pending: null,\n    interleaved: null,\n    lanes: NoLanes,\n    dispatch: null,\n    lastRenderedReducer: basicStateReducer,\n    lastRenderedState: (initialState: any),\n  };\n  hook.queue = queue;\n  const dispatch: Dispatch<\n    BasicStateAction<S>,\n  > = (queue.dispatch = (dispatchSetState.bind(\n    null,\n    currentlyRenderingFiber,\n    queue,\n  ): any));\n  return [hook.memoizedState, dispatch];\n}\n\nfunction updateState<S>(\n  initialState: (() => S) | S,\n): [S, Dispatch<BasicStateAction<S>>] {\n  return updateReducer(basicStateReducer, (initialState: any));\n}\n\nfunction rerenderState<S>(\n  initialState: (() => S) | S,\n): [S, Dispatch<BasicStateAction<S>>] {\n  return rerenderReducer(basicStateReducer, (initialState: any));\n}\n\nfunction pushEffect(tag, create, destroy, deps) {\n  const effect: Effect = {\n    tag,\n    create,\n    destroy,\n    deps,\n    // Circular\n    next: (null: any),\n  };\n  let componentUpdateQueue: null | FunctionComponentUpdateQueue = (currentlyRenderingFiber.updateQueue: any);\n  if (componentUpdateQueue === null) {\n    componentUpdateQueue = createFunctionComponentUpdateQueue();\n    currentlyRenderingFiber.updateQueue = (componentUpdateQueue: any);\n    componentUpdateQueue.lastEffect = effect.next = effect;\n  } else {\n    const lastEffect = componentUpdateQueue.lastEffect;\n    if (lastEffect === null) {\n      componentUpdateQueue.lastEffect = effect.next = effect;\n    } else {\n      const firstEffect = lastEffect.next;\n      lastEffect.next = effect;\n      effect.next = firstEffect;\n      componentUpdateQueue.lastEffect = effect;\n    }\n  }\n  return effect;\n}\n\nlet stackContainsErrorMessage: boolean | null = null;\n\nfunction getCallerStackFrame(): string {\n  // eslint-disable-next-line react-internal/prod-error-codes\n  const stackFrames = new Error('Error message').stack.split('\\n');\n\n  // Some browsers (e.g. Chrome) include the error message in the stack\n  // but others (e.g. Firefox) do not.\n  if (stackContainsErrorMessage === null) {\n    stackContainsErrorMessage = stackFrames[0].includes('Error message');\n  }\n\n  return stackContainsErrorMessage\n    ? stackFrames.slice(3, 4).join('\\n')\n    : stackFrames.slice(2, 3).join('\\n');\n}\n\nfunction mountRef<T>(initialValue: T): {|current: T|} {\n  const hook = mountWorkInProgressHook();\n  if (enableUseRefAccessWarning) {\n    if (__DEV__) {\n      // Support lazy initialization pattern shown in docs.\n      // We need to store the caller stack frame so that we don't warn on subsequent renders.\n      let hasBeenInitialized = initialValue != null;\n      let lazyInitGetterStack = null;\n      let didCheckForLazyInit = false;\n\n      // Only warn once per component+hook.\n      let didWarnAboutRead = false;\n      let didWarnAboutWrite = false;\n\n      let current = initialValue;\n      const ref = {\n        get current() {\n          if (!hasBeenInitialized) {\n            didCheckForLazyInit = true;\n            lazyInitGetterStack = getCallerStackFrame();\n          } else if (currentlyRenderingFiber !== null && !didWarnAboutRead) {\n            if (\n              lazyInitGetterStack === null ||\n              lazyInitGetterStack !== getCallerStackFrame()\n            ) {\n              didWarnAboutRead = true;\n              console.warn(\n                '%s: Unsafe read of a mutable value during render.\\n\\n' +\n                  'Reading from a ref during render is only safe if:\\n' +\n                  '1. The ref value has not been updated, or\\n' +\n                  '2. The ref holds a lazily-initialized value that is only set once.\\n',\n                getComponentNameFromFiber(currentlyRenderingFiber) || 'Unknown',\n              );\n            }\n          }\n          return current;\n        },\n        set current(value) {\n          if (currentlyRenderingFiber !== null && !didWarnAboutWrite) {\n            if (hasBeenInitialized || !didCheckForLazyInit) {\n              didWarnAboutWrite = true;\n              console.warn(\n                '%s: Unsafe write of a mutable value during render.\\n\\n' +\n                  'Writing to a ref during render is only safe if the ref holds ' +\n                  'a lazily-initialized value that is only set once.\\n',\n                getComponentNameFromFiber(currentlyRenderingFiber) || 'Unknown',\n              );\n            }\n          }\n\n          hasBeenInitialized = true;\n          current = value;\n        },\n      };\n      Object.seal(ref);\n      hook.memoizedState = ref;\n      return ref;\n    } else {\n      const ref = {current: initialValue};\n      hook.memoizedState = ref;\n      return ref;\n    }\n  } else {\n    const ref = {current: initialValue};\n    hook.memoizedState = ref;\n    return ref;\n  }\n}\n\nfunction updateRef<T>(initialValue: T): {|current: T|} {\n  const hook = updateWorkInProgressHook();\n  return hook.memoizedState;\n}\n\nfunction mountEffectImpl(fiberFlags, hookFlags, create, deps): void {\n  const hook = mountWorkInProgressHook();\n  const nextDeps = deps === undefined ? null : deps;\n  currentlyRenderingFiber.flags |= fiberFlags;\n  hook.memoizedState = pushEffect(\n    HookHasEffect | hookFlags,\n    create,\n    undefined,\n    nextDeps,\n  );\n}\n\nfunction updateEffectImpl(fiberFlags, hookFlags, create, deps): void {\n  const hook = updateWorkInProgressHook();\n  const nextDeps = deps === undefined ? null : deps;\n  let destroy = undefined;\n\n  if (currentHook !== null) {\n    const prevEffect = currentHook.memoizedState;\n    destroy = prevEffect.destroy;\n    if (nextDeps !== null) {\n      const prevDeps = prevEffect.deps;\n      if (areHookInputsEqual(nextDeps, prevDeps)) {\n        hook.memoizedState = pushEffect(hookFlags, create, destroy, nextDeps);\n        return;\n      }\n    }\n  }\n\n  currentlyRenderingFiber.flags |= fiberFlags;\n\n  hook.memoizedState = pushEffect(\n    HookHasEffect | hookFlags,\n    create,\n    destroy,\n    nextDeps,\n  );\n}\n\nfunction mountEffect(\n  create: () => (() => void) | void,\n  deps: Array<mixed> | void | null,\n): void {\n  if (\n    __DEV__ &&\n    enableStrictEffects &&\n    (currentlyRenderingFiber.mode & StrictEffectsMode) !== NoMode\n  ) {\n    return mountEffectImpl(\n      MountPassiveDevEffect | PassiveEffect | PassiveStaticEffect,\n      HookPassive,\n      create,\n      deps,\n    );\n  } else {\n    return mountEffectImpl(\n      PassiveEffect | PassiveStaticEffect,\n      HookPassive,\n      create,\n      deps,\n    );\n  }\n}\n\nfunction updateEffect(\n  create: () => (() => void) | void,\n  deps: Array<mixed> | void | null,\n): void {\n  return updateEffectImpl(PassiveEffect, HookPassive, create, deps);\n}\n\nfunction mountInsertionEffect(\n  create: () => (() => void) | void,\n  deps: Array<mixed> | void | null,\n): void {\n  return mountEffectImpl(UpdateEffect, HookInsertion, create, deps);\n}\n\nfunction updateInsertionEffect(\n  create: () => (() => void) | void,\n  deps: Array<mixed> | void | null,\n): void {\n  return updateEffectImpl(UpdateEffect, HookInsertion, create, deps);\n}\n\nfunction mountLayoutEffect(\n  create: () => (() => void) | void,\n  deps: Array<mixed> | void | null,\n): void {\n  let fiberFlags: Flags = UpdateEffect;\n  if (enableSuspenseLayoutEffectSemantics) {\n    fiberFlags |= LayoutStaticEffect;\n  }\n  if (\n    __DEV__ &&\n    enableStrictEffects &&\n    (currentlyRenderingFiber.mode & StrictEffectsMode) !== NoMode\n  ) {\n    fiberFlags |= MountLayoutDevEffect;\n  }\n  return mountEffectImpl(fiberFlags, HookLayout, create, deps);\n}\n\nfunction updateLayoutEffect(\n  create: () => (() => void) | void,\n  deps: Array<mixed> | void | null,\n): void {\n  return updateEffectImpl(UpdateEffect, HookLayout, create, deps);\n}\n\nfunction imperativeHandleEffect<T>(\n  create: () => T,\n  ref: {|current: T | null|} | ((inst: T | null) => mixed) | null | void,\n) {\n  if (typeof ref === 'function') {\n    const refCallback = ref;\n    const inst = create();\n    refCallback(inst);\n    return () => {\n      refCallback(null);\n    };\n  } else if (ref !== null && ref !== undefined) {\n    const refObject = ref;\n    if (__DEV__) {\n      if (!refObject.hasOwnProperty('current')) {\n        console.error(\n          'Expected useImperativeHandle() first argument to either be a ' +\n            'ref callback or React.createRef() object. Instead received: %s.',\n          'an object with keys {' + Object.keys(refObject).join(', ') + '}',\n        );\n      }\n    }\n    const inst = create();\n    refObject.current = inst;\n    return () => {\n      refObject.current = null;\n    };\n  }\n}\n\nfunction mountImperativeHandle<T>(\n  ref: {|current: T | null|} | ((inst: T | null) => mixed) | null | void,\n  create: () => T,\n  deps: Array<mixed> | void | null,\n): void {\n  if (__DEV__) {\n    if (typeof create !== 'function') {\n      console.error(\n        'Expected useImperativeHandle() second argument to be a function ' +\n          'that creates a handle. Instead received: %s.',\n        create !== null ? typeof create : 'null',\n      );\n    }\n  }\n\n  // TODO: If deps are provided, should we skip comparing the ref itself?\n  const effectDeps =\n    deps !== null && deps !== undefined ? deps.concat([ref]) : null;\n\n  let fiberFlags: Flags = UpdateEffect;\n  if (enableSuspenseLayoutEffectSemantics) {\n    fiberFlags |= LayoutStaticEffect;\n  }\n  if (\n    __DEV__ &&\n    enableStrictEffects &&\n    (currentlyRenderingFiber.mode & StrictEffectsMode) !== NoMode\n  ) {\n    fiberFlags |= MountLayoutDevEffect;\n  }\n  return mountEffectImpl(\n    fiberFlags,\n    HookLayout,\n    imperativeHandleEffect.bind(null, create, ref),\n    effectDeps,\n  );\n}\n\nfunction updateImperativeHandle<T>(\n  ref: {|current: T | null|} | ((inst: T | null) => mixed) | null | void,\n  create: () => T,\n  deps: Array<mixed> | void | null,\n): void {\n  if (__DEV__) {\n    if (typeof create !== 'function') {\n      console.error(\n        'Expected useImperativeHandle() second argument to be a function ' +\n          'that creates a handle. Instead received: %s.',\n        create !== null ? typeof create : 'null',\n      );\n    }\n  }\n\n  // TODO: If deps are provided, should we skip comparing the ref itself?\n  const effectDeps =\n    deps !== null && deps !== undefined ? deps.concat([ref]) : null;\n\n  return updateEffectImpl(\n    UpdateEffect,\n    HookLayout,\n    imperativeHandleEffect.bind(null, create, ref),\n    effectDeps,\n  );\n}\n\nfunction mountDebugValue<T>(value: T, formatterFn: ?(value: T) => mixed): void {\n  // This hook is normally a no-op.\n  // The react-debug-hooks package injects its own implementation\n  // so that e.g. DevTools can display custom hook values.\n}\n\nconst updateDebugValue = mountDebugValue;\n\nfunction mountCallback<T>(callback: T, deps: Array<mixed> | void | null): T {\n  const hook = mountWorkInProgressHook();\n  const nextDeps = deps === undefined ? null : deps;\n  hook.memoizedState = [callback, nextDeps];\n  return callback;\n}\n\nfunction updateCallback<T>(callback: T, deps: Array<mixed> | void | null): T {\n  const hook = updateWorkInProgressHook();\n  const nextDeps = deps === undefined ? null : deps;\n  const prevState = hook.memoizedState;\n  if (prevState !== null) {\n    if (nextDeps !== null) {\n      const prevDeps: Array<mixed> | null = prevState[1];\n      if (areHookInputsEqual(nextDeps, prevDeps)) {\n        return prevState[0];\n      }\n    }\n  }\n  hook.memoizedState = [callback, nextDeps];\n  return callback;\n}\n\nfunction mountMemo<T>(\n  nextCreate: () => T,\n  deps: Array<mixed> | void | null,\n): T {\n  const hook = mountWorkInProgressHook();\n  const nextDeps = deps === undefined ? null : deps;\n  const nextValue = nextCreate();\n  hook.memoizedState = [nextValue, nextDeps];\n  return nextValue;\n}\n\nfunction updateMemo<T>(\n  nextCreate: () => T,\n  deps: Array<mixed> | void | null,\n): T {\n  const hook = updateWorkInProgressHook();\n  const nextDeps = deps === undefined ? null : deps;\n  const prevState = hook.memoizedState;\n  if (prevState !== null) {\n    // Assume these are defined. If they're not, areHookInputsEqual will warn.\n    if (nextDeps !== null) {\n      const prevDeps: Array<mixed> | null = prevState[1];\n      if (areHookInputsEqual(nextDeps, prevDeps)) {\n        return prevState[0];\n      }\n    }\n  }\n  const nextValue = nextCreate();\n  hook.memoizedState = [nextValue, nextDeps];\n  return nextValue;\n}\n\nfunction mountDeferredValue<T>(value: T): T {\n  const hook = mountWorkInProgressHook();\n  hook.memoizedState = value;\n  return value;\n}\n\nfunction updateDeferredValue<T>(value: T): T {\n  const hook = updateWorkInProgressHook();\n  const resolvedCurrentHook: Hook = (currentHook: any);\n  const prevValue: T = resolvedCurrentHook.memoizedState;\n  return updateDeferredValueImpl(hook, prevValue, value);\n}\n\nfunction rerenderDeferredValue<T>(value: T): T {\n  const hook = updateWorkInProgressHook();\n  if (currentHook === null) {\n    // This is a rerender during a mount.\n    hook.memoizedState = value;\n    return value;\n  } else {\n    // This is a rerender during an update.\n    const prevValue: T = currentHook.memoizedState;\n    return updateDeferredValueImpl(hook, prevValue, value);\n  }\n}\n\nfunction updateDeferredValueImpl<T>(hook: Hook, prevValue: T, value: T): T {\n  const shouldDeferValue = !includesOnlyNonUrgentLanes(renderLanes);\n  if (shouldDeferValue) {\n    // This is an urgent update. If the value has changed, keep using the\n    // previous value and spawn a deferred render to update it later.\n\n    if (!is(value, prevValue)) {\n      // Schedule a deferred render\n      const deferredLane = claimNextTransitionLane();\n      currentlyRenderingFiber.lanes = mergeLanes(\n        currentlyRenderingFiber.lanes,\n        deferredLane,\n      );\n      markSkippedUpdateLanes(deferredLane);\n\n      // Set this to true to indicate that the rendered value is inconsistent\n      // from the latest value. The name \"baseState\" doesn't really match how we\n      // use it because we're reusing a state hook field instead of creating a\n      // new one.\n      hook.baseState = true;\n    }\n\n    // Reuse the previous value\n    return prevValue;\n  } else {\n    // This is not an urgent update, so we can use the latest value regardless\n    // of what it is. No need to defer it.\n\n    // However, if we're currently inside a spawned render, then we need to mark\n    // this as an update to prevent the fiber from bailing out.\n    //\n    // `baseState` is true when the current value is different from the rendered\n    // value. The name doesn't really match how we use it because we're reusing\n    // a state hook field instead of creating a new one.\n    if (hook.baseState) {\n      // Flip this back to false.\n      hook.baseState = false;\n      markWorkInProgressReceivedUpdate();\n    }\n\n    hook.memoizedState = value;\n    return value;\n  }\n}\n\nfunction startTransition(setPending, callback, options) {\n  const previousPriority = getCurrentUpdatePriority();\n  setCurrentUpdatePriority(\n    higherEventPriority(previousPriority, ContinuousEventPriority),\n  );\n\n  setPending(true);\n\n  const prevTransition = ReactCurrentBatchConfig.transition;\n  ReactCurrentBatchConfig.transition = {};\n  const currentTransition = ReactCurrentBatchConfig.transition;\n\n  if (enableTransitionTracing) {\n    if (options !== undefined && options.name !== undefined) {\n      ReactCurrentBatchConfig.transition.name = options.name;\n      ReactCurrentBatchConfig.transition.startTime = now();\n    }\n  }\n\n  if (__DEV__) {\n    ReactCurrentBatchConfig.transition._updatedFibers = new Set();\n  }\n\n  try {\n    setPending(false);\n    callback();\n  } finally {\n    setCurrentUpdatePriority(previousPriority);\n\n    ReactCurrentBatchConfig.transition = prevTransition;\n\n    if (__DEV__) {\n      if (prevTransition === null && currentTransition._updatedFibers) {\n        const updatedFibersCount = currentTransition._updatedFibers.size;\n        if (updatedFibersCount > 10) {\n          console.warn(\n            'Detected a large number of updates inside startTransition. ' +\n              'If this is due to a subscription please re-write it to use React provided hooks. ' +\n              'Otherwise concurrent mode guarantees are off the table.',\n          );\n        }\n        currentTransition._updatedFibers.clear();\n      }\n    }\n  }\n}\n\nfunction mountTransition(): [\n  boolean,\n  (callback: () => void, options?: StartTransitionOptions) => void,\n] {\n  const [isPending, setPending] = mountState(false);\n  // The `start` method never changes.\n  const start = startTransition.bind(null, setPending);\n  const hook = mountWorkInProgressHook();\n  hook.memoizedState = start;\n  return [isPending, start];\n}\n\nfunction updateTransition(): [\n  boolean,\n  (callback: () => void, options?: StartTransitionOptions) => void,\n] {\n  const [isPending] = updateState(false);\n  const hook = updateWorkInProgressHook();\n  const start = hook.memoizedState;\n  return [isPending, start];\n}\n\nfunction rerenderTransition(): [\n  boolean,\n  (callback: () => void, options?: StartTransitionOptions) => void,\n] {\n  const [isPending] = rerenderState(false);\n  const hook = updateWorkInProgressHook();\n  const start = hook.memoizedState;\n  return [isPending, start];\n}\n\nlet isUpdatingOpaqueValueInRenderPhase = false;\nexport function getIsUpdatingOpaqueValueInRenderPhaseInDEV(): boolean | void {\n  if (__DEV__) {\n    return isUpdatingOpaqueValueInRenderPhase;\n  }\n}\n\nfunction mountId(): string {\n  const hook = mountWorkInProgressHook();\n\n  const root = ((getWorkInProgressRoot(): any): FiberRoot);\n  // TODO: In Fizz, id generation is specific to each server config. Maybe we\n  // should do this in Fiber, too? Deferring this decision for now because\n  // there's no other place to store the prefix except for an internal field on\n  // the public createRoot object, which the fiber tree does not currently have\n  // a reference to.\n  const identifierPrefix = root.identifierPrefix;\n\n  let id;\n  if (getIsHydrating()) {\n    const treeId = getTreeId();\n\n    // Use a captial R prefix for server-generated ids.\n    id = ':' + identifierPrefix + 'R' + treeId;\n\n    // Unless this is the first id at this level, append a number at the end\n    // that represents the position of this useId hook among all the useId\n    // hooks for this fiber.\n    const localId = localIdCounter++;\n    if (localId > 0) {\n      id += 'H' + localId.toString(32);\n    }\n\n    id += ':';\n  } else {\n    // Use a lowercase r prefix for client-generated ids.\n    const globalClientId = globalClientIdCounter++;\n    id = ':' + identifierPrefix + 'r' + globalClientId.toString(32) + ':';\n  }\n\n  hook.memoizedState = id;\n  return id;\n}\n\nfunction updateId(): string {\n  const hook = updateWorkInProgressHook();\n  const id: string = hook.memoizedState;\n  return id;\n}\n\nfunction mountRefresh() {\n  const hook = mountWorkInProgressHook();\n  const refresh = (hook.memoizedState = refreshCache.bind(\n    null,\n    currentlyRenderingFiber,\n  ));\n  return refresh;\n}\n\nfunction updateRefresh() {\n  const hook = updateWorkInProgressHook();\n  return hook.memoizedState;\n}\n\nfunction refreshCache<T>(fiber: Fiber, seedKey: ?() => T, seedValue: T) {\n  if (!enableCache) {\n    return;\n  }\n  // TODO: Does Cache work in legacy mode? Should decide and write a test.\n  // TODO: Consider warning if the refresh is at discrete priority, or if we\n  // otherwise suspect that it wasn't batched properly.\n  let provider = fiber.return;\n  while (provider !== null) {\n    switch (provider.tag) {\n      case CacheComponent:\n      case HostRoot: {\n        // Schedule an update on the cache boundary to trigger a refresh.\n        const lane = requestUpdateLane(provider);\n        const eventTime = requestEventTime();\n        const refreshUpdate = createLegacyQueueUpdate(eventTime, lane);\n        const root = enqueueLegacyQueueUpdate(provider, refreshUpdate, lane);\n        if (root !== null) {\n          scheduleUpdateOnFiber(root, provider, lane, eventTime);\n          entangleLegacyQueueTransitions(root, provider, lane);\n        }\n\n        // TODO: If a refresh never commits, the new cache created here must be\n        // released. A simple case is start refreshing a cache boundary, but then\n        // unmount that boundary before the refresh completes.\n        const seededCache = createCache();\n        if (seedKey !== null && seedKey !== undefined && root !== null) {\n          // Seed the cache with the value passed by the caller. This could be\n          // from a server mutation, or it could be a streaming response.\n          seededCache.data.set(seedKey, seedValue);\n        }\n\n        const payload = {\n          cache: seededCache,\n        };\n        refreshUpdate.payload = payload;\n        return;\n      }\n    }\n    provider = provider.return;\n  }\n  // TODO: Warn if unmounted?\n}\n\nfunction dispatchReducerAction<S, A>(\n  fiber: Fiber,\n  queue: UpdateQueue<S, A>,\n  action: A,\n) {\n  if (__DEV__) {\n    if (typeof arguments[3] === 'function') {\n      console.error(\n        \"State updates from the useState() and useReducer() Hooks don't support the \" +\n          'second callback argument. To execute a side effect after ' +\n          'rendering, declare it in the component body with useEffect().',\n      );\n    }\n  }\n\n  const lane = requestUpdateLane(fiber);\n\n  const update: Update<S, A> = {\n    lane,\n    action,\n    hasEagerState: false,\n    eagerState: null,\n    next: (null: any),\n  };\n\n  if (isRenderPhaseUpdate(fiber)) {\n    enqueueRenderPhaseUpdate(queue, update);\n  } else {\n    const root = enqueueConcurrentHookUpdate(fiber, queue, update, lane);\n    if (root !== null) {\n      const eventTime = requestEventTime();\n      scheduleUpdateOnFiber(root, fiber, lane, eventTime);\n      entangleTransitionUpdate(root, queue, lane);\n    }\n  }\n\n  markUpdateInDevTools(fiber, lane, action);\n}\n\nfunction dispatchSetState<S, A>(\n  fiber: Fiber,\n  queue: UpdateQueue<S, A>,\n  action: A,\n) {\n  if (__DEV__) {\n    if (typeof arguments[3] === 'function') {\n      console.error(\n        \"State updates from the useState() and useReducer() Hooks don't support the \" +\n          'second callback argument. To execute a side effect after ' +\n          'rendering, declare it in the component body with useEffect().',\n      );\n    }\n  }\n\n  const lane = requestUpdateLane(fiber);\n\n  const update: Update<S, A> = {\n    lane,\n    action,\n    hasEagerState: false,\n    eagerState: null,\n    next: (null: any),\n  };\n\n  if (isRenderPhaseUpdate(fiber)) {\n    enqueueRenderPhaseUpdate(queue, update);\n  } else {\n    const alternate = fiber.alternate;\n    if (\n      fiber.lanes === NoLanes &&\n      (alternate === null || alternate.lanes === NoLanes)\n    ) {\n      // The queue is currently empty, which means we can eagerly compute the\n      // next state before entering the render phase. If the new state is the\n      // same as the current state, we may be able to bail out entirely.\n      const lastRenderedReducer = queue.lastRenderedReducer;\n      if (lastRenderedReducer !== null) {\n        let prevDispatcher;\n        if (__DEV__) {\n          prevDispatcher = ReactCurrentDispatcher.current;\n          ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n        }\n        try {\n          const currentState: S = (queue.lastRenderedState: any);\n          const eagerState = lastRenderedReducer(currentState, action);\n          // Stash the eagerly computed state, and the reducer used to compute\n          // it, on the update object. If the reducer hasn't changed by the\n          // time we enter the render phase, then the eager state can be used\n          // without calling the reducer again.\n          update.hasEagerState = true;\n          update.eagerState = eagerState;\n          if (is(eagerState, currentState)) {\n            // Fast path. We can bail out without scheduling React to re-render.\n            // It's still possible that we'll need to rebase this update later,\n            // if the component re-renders for a different reason and by that\n            // time the reducer has changed.\n            // TODO: Do we still need to entangle transitions in this case?\n            enqueueConcurrentHookUpdateAndEagerlyBailout(\n              fiber,\n              queue,\n              update,\n              lane,\n            );\n            return;\n          }\n        } catch (error) {\n          // Suppress the error. It will throw again in the render phase.\n        } finally {\n          if (__DEV__) {\n            ReactCurrentDispatcher.current = prevDispatcher;\n          }\n        }\n      }\n    }\n\n    const root = enqueueConcurrentHookUpdate(fiber, queue, update, lane);\n    if (root !== null) {\n      const eventTime = requestEventTime();\n      scheduleUpdateOnFiber(root, fiber, lane, eventTime);\n      entangleTransitionUpdate(root, queue, lane);\n    }\n  }\n\n  markUpdateInDevTools(fiber, lane, action);\n}\n\nfunction isRenderPhaseUpdate(fiber: Fiber) {\n  const alternate = fiber.alternate;\n  return (\n    fiber === currentlyRenderingFiber ||\n    (alternate !== null && alternate === currentlyRenderingFiber)\n  );\n}\n\nfunction enqueueRenderPhaseUpdate<S, A>(\n  queue: UpdateQueue<S, A>,\n  update: Update<S, A>,\n) {\n  // This is a render phase update. Stash it in a lazily-created map of\n  // queue -> linked list of updates. After this render pass, we'll restart\n  // and apply the stashed updates on top of the work-in-progress hook.\n  didScheduleRenderPhaseUpdateDuringThisPass = didScheduleRenderPhaseUpdate = true;\n  const pending = queue.pending;\n  if (pending === null) {\n    // This is the first update. Create a circular list.\n    update.next = update;\n  } else {\n    update.next = pending.next;\n    pending.next = update;\n  }\n  queue.pending = update;\n}\n\n// TODO: Move to ReactFiberConcurrentUpdates?\nfunction entangleTransitionUpdate<S, A>(\n  root: FiberRoot,\n  queue: UpdateQueue<S, A>,\n  lane: Lane,\n) {\n  if (isTransitionLane(lane)) {\n    let queueLanes = queue.lanes;\n\n    // If any entangled lanes are no longer pending on the root, then they\n    // must have finished. We can remove them from the shared queue, which\n    // represents a superset of the actually pending lanes. In some cases we\n    // may entangle more than we need to, but that's OK. In fact it's worse if\n    // we *don't* entangle when we should.\n    queueLanes = intersectLanes(queueLanes, root.pendingLanes);\n\n    // Entangle the new transition lane with the other transition lanes.\n    const newQueueLanes = mergeLanes(queueLanes, lane);\n    queue.lanes = newQueueLanes;\n    // Even if queue.lanes already include lane, we don't know for certain if\n    // the lane finished since the last time we entangled it. So we need to\n    // entangle it again, just to be sure.\n    markRootEntangled(root, newQueueLanes);\n  }\n}\n\nfunction markUpdateInDevTools(fiber, lane, action) {\n  if (__DEV__) {\n    if (enableDebugTracing) {\n      if (fiber.mode & DebugTracingMode) {\n        const name = getComponentNameFromFiber(fiber) || 'Unknown';\n        logStateUpdateScheduled(name, lane, action);\n      }\n    }\n  }\n\n  if (enableSchedulingProfiler) {\n    markStateUpdateScheduled(fiber, lane);\n  }\n}\n\nfunction getCacheSignal(): AbortSignal {\n  if (!enableCache) {\n    throw new Error('Not implemented.');\n  }\n  const cache: Cache = readContext(CacheContext);\n  return cache.controller.signal;\n}\n\nfunction getCacheForType<T>(resourceType: () => T): T {\n  if (!enableCache) {\n    throw new Error('Not implemented.');\n  }\n  const cache: Cache = readContext(CacheContext);\n  let cacheForType: T | void = (cache.data.get(resourceType): any);\n  if (cacheForType === undefined) {\n    cacheForType = resourceType();\n    cache.data.set(resourceType, cacheForType);\n  }\n  return cacheForType;\n}\n\nexport const ContextOnlyDispatcher: Dispatcher = {\n  readContext,\n\n  useCallback: throwInvalidHookError,\n  useContext: throwInvalidHookError,\n  useEffect: throwInvalidHookError,\n  useImperativeHandle: throwInvalidHookError,\n  useInsertionEffect: throwInvalidHookError,\n  useLayoutEffect: throwInvalidHookError,\n  useMemo: throwInvalidHookError,\n  useReducer: throwInvalidHookError,\n  useRef: throwInvalidHookError,\n  useState: throwInvalidHookError,\n  useDebugValue: throwInvalidHookError,\n  useDeferredValue: throwInvalidHookError,\n  useTransition: throwInvalidHookError,\n  useMutableSource: throwInvalidHookError,\n  useSyncExternalStore: throwInvalidHookError,\n  useId: throwInvalidHookError,\n\n  unstable_isNewReconciler: enableNewReconciler,\n};\nif (enableCache) {\n  (ContextOnlyDispatcher: Dispatcher).getCacheSignal = getCacheSignal;\n  (ContextOnlyDispatcher: Dispatcher).getCacheForType = getCacheForType;\n  (ContextOnlyDispatcher: Dispatcher).useCacheRefresh = throwInvalidHookError;\n}\n\nconst HooksDispatcherOnMount: Dispatcher = {\n  readContext,\n\n  useCallback: mountCallback,\n  useContext: readContext,\n  useEffect: mountEffect,\n  useImperativeHandle: mountImperativeHandle,\n  useLayoutEffect: mountLayoutEffect,\n  useInsertionEffect: mountInsertionEffect,\n  useMemo: mountMemo,\n  useReducer: mountReducer,\n  useRef: mountRef,\n  useState: mountState,\n  useDebugValue: mountDebugValue,\n  useDeferredValue: mountDeferredValue,\n  useTransition: mountTransition,\n  useMutableSource: mountMutableSource,\n  useSyncExternalStore: mountSyncExternalStore,\n  useId: mountId,\n\n  unstable_isNewReconciler: enableNewReconciler,\n};\nif (enableCache) {\n  (HooksDispatcherOnMount: Dispatcher).getCacheSignal = getCacheSignal;\n  (HooksDispatcherOnMount: Dispatcher).getCacheForType = getCacheForType;\n  (HooksDispatcherOnMount: Dispatcher).useCacheRefresh = mountRefresh;\n}\nconst HooksDispatcherOnUpdate: Dispatcher = {\n  readContext,\n\n  useCallback: updateCallback,\n  useContext: readContext,\n  useEffect: updateEffect,\n  useImperativeHandle: updateImperativeHandle,\n  useInsertionEffect: updateInsertionEffect,\n  useLayoutEffect: updateLayoutEffect,\n  useMemo: updateMemo,\n  useReducer: updateReducer,\n  useRef: updateRef,\n  useState: updateState,\n  useDebugValue: updateDebugValue,\n  useDeferredValue: updateDeferredValue,\n  useTransition: updateTransition,\n  useMutableSource: updateMutableSource,\n  useSyncExternalStore: updateSyncExternalStore,\n  useId: updateId,\n\n  unstable_isNewReconciler: enableNewReconciler,\n};\nif (enableCache) {\n  (HooksDispatcherOnUpdate: Dispatcher).getCacheSignal = getCacheSignal;\n  (HooksDispatcherOnUpdate: Dispatcher).getCacheForType = getCacheForType;\n  (HooksDispatcherOnUpdate: Dispatcher).useCacheRefresh = updateRefresh;\n}\n\nconst HooksDispatcherOnRerender: Dispatcher = {\n  readContext,\n\n  useCallback: updateCallback,\n  useContext: readContext,\n  useEffect: updateEffect,\n  useImperativeHandle: updateImperativeHandle,\n  useInsertionEffect: updateInsertionEffect,\n  useLayoutEffect: updateLayoutEffect,\n  useMemo: updateMemo,\n  useReducer: rerenderReducer,\n  useRef: updateRef,\n  useState: rerenderState,\n  useDebugValue: updateDebugValue,\n  useDeferredValue: rerenderDeferredValue,\n  useTransition: rerenderTransition,\n  useMutableSource: updateMutableSource,\n  useSyncExternalStore: updateSyncExternalStore,\n  useId: updateId,\n\n  unstable_isNewReconciler: enableNewReconciler,\n};\nif (enableCache) {\n  (HooksDispatcherOnRerender: Dispatcher).getCacheSignal = getCacheSignal;\n  (HooksDispatcherOnRerender: Dispatcher).getCacheForType = getCacheForType;\n  (HooksDispatcherOnRerender: Dispatcher).useCacheRefresh = updateRefresh;\n}\n\nlet HooksDispatcherOnMountInDEV: Dispatcher | null = null;\nlet HooksDispatcherOnMountWithHookTypesInDEV: Dispatcher | null = null;\nlet HooksDispatcherOnUpdateInDEV: Dispatcher | null = null;\nlet HooksDispatcherOnRerenderInDEV: Dispatcher | null = null;\nlet InvalidNestedHooksDispatcherOnMountInDEV: Dispatcher | null = null;\nlet InvalidNestedHooksDispatcherOnUpdateInDEV: Dispatcher | null = null;\nlet InvalidNestedHooksDispatcherOnRerenderInDEV: Dispatcher | null = null;\n\nif (__DEV__) {\n  const warnInvalidContextAccess = () => {\n    console.error(\n      'Context can only be read while React is rendering. ' +\n        'In classes, you can read it in the render method or getDerivedStateFromProps. ' +\n        'In function components, you can read it directly in the function body, but not ' +\n        'inside Hooks like useReducer() or useMemo().',\n    );\n  };\n\n  const warnInvalidHookAccess = () => {\n    console.error(\n      'Do not call Hooks inside useEffect(...), useMemo(...), or other built-in Hooks. ' +\n        'You can only call Hooks at the top level of your React function. ' +\n        'For more information, see ' +\n        'https://reactjs.org/link/rules-of-hooks',\n    );\n  };\n\n  HooksDispatcherOnMountInDEV = {\n    readContext<T>(context: ReactContext<T>): T {\n      return readContext(context);\n    },\n    useCallback<T>(callback: T, deps: Array<mixed> | void | null): T {\n      currentHookNameInDev = 'useCallback';\n      mountHookTypesDev();\n      checkDepsAreArrayDev(deps);\n      return mountCallback(callback, deps);\n    },\n    useContext<T>(context: ReactContext<T>): T {\n      currentHookNameInDev = 'useContext';\n      mountHookTypesDev();\n      return readContext(context);\n    },\n    useEffect(\n      create: () => (() => void) | void,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useEffect';\n      mountHookTypesDev();\n      checkDepsAreArrayDev(deps);\n      return mountEffect(create, deps);\n    },\n    useImperativeHandle<T>(\n      ref: {|current: T | null|} | ((inst: T | null) => mixed) | null | void,\n      create: () => T,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useImperativeHandle';\n      mountHookTypesDev();\n      checkDepsAreArrayDev(deps);\n      return mountImperativeHandle(ref, create, deps);\n    },\n    useInsertionEffect(\n      create: () => (() => void) | void,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useInsertionEffect';\n      mountHookTypesDev();\n      checkDepsAreArrayDev(deps);\n      return mountInsertionEffect(create, deps);\n    },\n    useLayoutEffect(\n      create: () => (() => void) | void,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useLayoutEffect';\n      mountHookTypesDev();\n      checkDepsAreArrayDev(deps);\n      return mountLayoutEffect(create, deps);\n    },\n    useMemo<T>(create: () => T, deps: Array<mixed> | void | null): T {\n      currentHookNameInDev = 'useMemo';\n      mountHookTypesDev();\n      checkDepsAreArrayDev(deps);\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnMountInDEV;\n      try {\n        return mountMemo(create, deps);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useReducer<S, I, A>(\n      reducer: (S, A) => S,\n      initialArg: I,\n      init?: I => S,\n    ): [S, Dispatch<A>] {\n      currentHookNameInDev = 'useReducer';\n      mountHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnMountInDEV;\n      try {\n        return mountReducer(reducer, initialArg, init);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useRef<T>(initialValue: T): {|current: T|} {\n      currentHookNameInDev = 'useRef';\n      mountHookTypesDev();\n      return mountRef(initialValue);\n    },\n    useState<S>(\n      initialState: (() => S) | S,\n    ): [S, Dispatch<BasicStateAction<S>>] {\n      currentHookNameInDev = 'useState';\n      mountHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnMountInDEV;\n      try {\n        return mountState(initialState);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useDebugValue<T>(value: T, formatterFn: ?(value: T) => mixed): void {\n      currentHookNameInDev = 'useDebugValue';\n      mountHookTypesDev();\n      return mountDebugValue(value, formatterFn);\n    },\n    useDeferredValue<T>(value: T): T {\n      currentHookNameInDev = 'useDeferredValue';\n      mountHookTypesDev();\n      return mountDeferredValue(value);\n    },\n    useTransition(): [boolean, (() => void) => void] {\n      currentHookNameInDev = 'useTransition';\n      mountHookTypesDev();\n      return mountTransition();\n    },\n    useMutableSource<Source, Snapshot>(\n      source: MutableSource<Source>,\n      getSnapshot: MutableSourceGetSnapshotFn<Source, Snapshot>,\n      subscribe: MutableSourceSubscribeFn<Source, Snapshot>,\n    ): Snapshot {\n      currentHookNameInDev = 'useMutableSource';\n      mountHookTypesDev();\n      return mountMutableSource(source, getSnapshot, subscribe);\n    },\n    useSyncExternalStore<T>(\n      subscribe: (() => void) => () => void,\n      getSnapshot: () => T,\n      getServerSnapshot?: () => T,\n    ): T {\n      currentHookNameInDev = 'useSyncExternalStore';\n      mountHookTypesDev();\n      return mountSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);\n    },\n    useId(): string {\n      currentHookNameInDev = 'useId';\n      mountHookTypesDev();\n      return mountId();\n    },\n\n    unstable_isNewReconciler: enableNewReconciler,\n  };\n  if (enableCache) {\n    (HooksDispatcherOnMountInDEV: Dispatcher).getCacheSignal = getCacheSignal;\n    (HooksDispatcherOnMountInDEV: Dispatcher).getCacheForType = getCacheForType;\n    (HooksDispatcherOnMountInDEV: Dispatcher).useCacheRefresh = function useCacheRefresh() {\n      currentHookNameInDev = 'useCacheRefresh';\n      mountHookTypesDev();\n      return mountRefresh();\n    };\n  }\n\n  HooksDispatcherOnMountWithHookTypesInDEV = {\n    readContext<T>(context: ReactContext<T>): T {\n      return readContext(context);\n    },\n    useCallback<T>(callback: T, deps: Array<mixed> | void | null): T {\n      currentHookNameInDev = 'useCallback';\n      updateHookTypesDev();\n      return mountCallback(callback, deps);\n    },\n    useContext<T>(context: ReactContext<T>): T {\n      currentHookNameInDev = 'useContext';\n      updateHookTypesDev();\n      return readContext(context);\n    },\n    useEffect(\n      create: () => (() => void) | void,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useEffect';\n      updateHookTypesDev();\n      return mountEffect(create, deps);\n    },\n    useImperativeHandle<T>(\n      ref: {|current: T | null|} | ((inst: T | null) => mixed) | null | void,\n      create: () => T,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useImperativeHandle';\n      updateHookTypesDev();\n      return mountImperativeHandle(ref, create, deps);\n    },\n    useInsertionEffect(\n      create: () => (() => void) | void,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useInsertionEffect';\n      updateHookTypesDev();\n      return mountInsertionEffect(create, deps);\n    },\n    useLayoutEffect(\n      create: () => (() => void) | void,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useLayoutEffect';\n      updateHookTypesDev();\n      return mountLayoutEffect(create, deps);\n    },\n    useMemo<T>(create: () => T, deps: Array<mixed> | void | null): T {\n      currentHookNameInDev = 'useMemo';\n      updateHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnMountInDEV;\n      try {\n        return mountMemo(create, deps);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useReducer<S, I, A>(\n      reducer: (S, A) => S,\n      initialArg: I,\n      init?: I => S,\n    ): [S, Dispatch<A>] {\n      currentHookNameInDev = 'useReducer';\n      updateHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnMountInDEV;\n      try {\n        return mountReducer(reducer, initialArg, init);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useRef<T>(initialValue: T): {|current: T|} {\n      currentHookNameInDev = 'useRef';\n      updateHookTypesDev();\n      return mountRef(initialValue);\n    },\n    useState<S>(\n      initialState: (() => S) | S,\n    ): [S, Dispatch<BasicStateAction<S>>] {\n      currentHookNameInDev = 'useState';\n      updateHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnMountInDEV;\n      try {\n        return mountState(initialState);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useDebugValue<T>(value: T, formatterFn: ?(value: T) => mixed): void {\n      currentHookNameInDev = 'useDebugValue';\n      updateHookTypesDev();\n      return mountDebugValue(value, formatterFn);\n    },\n    useDeferredValue<T>(value: T): T {\n      currentHookNameInDev = 'useDeferredValue';\n      updateHookTypesDev();\n      return mountDeferredValue(value);\n    },\n    useTransition(): [boolean, (() => void) => void] {\n      currentHookNameInDev = 'useTransition';\n      updateHookTypesDev();\n      return mountTransition();\n    },\n    useMutableSource<Source, Snapshot>(\n      source: MutableSource<Source>,\n      getSnapshot: MutableSourceGetSnapshotFn<Source, Snapshot>,\n      subscribe: MutableSourceSubscribeFn<Source, Snapshot>,\n    ): Snapshot {\n      currentHookNameInDev = 'useMutableSource';\n      updateHookTypesDev();\n      return mountMutableSource(source, getSnapshot, subscribe);\n    },\n    useSyncExternalStore<T>(\n      subscribe: (() => void) => () => void,\n      getSnapshot: () => T,\n      getServerSnapshot?: () => T,\n    ): T {\n      currentHookNameInDev = 'useSyncExternalStore';\n      updateHookTypesDev();\n      return mountSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);\n    },\n    useId(): string {\n      currentHookNameInDev = 'useId';\n      updateHookTypesDev();\n      return mountId();\n    },\n\n    unstable_isNewReconciler: enableNewReconciler,\n  };\n  if (enableCache) {\n    (HooksDispatcherOnMountWithHookTypesInDEV: Dispatcher).getCacheSignal = getCacheSignal;\n    (HooksDispatcherOnMountWithHookTypesInDEV: Dispatcher).getCacheForType = getCacheForType;\n    (HooksDispatcherOnMountWithHookTypesInDEV: Dispatcher).useCacheRefresh = function useCacheRefresh() {\n      currentHookNameInDev = 'useCacheRefresh';\n      updateHookTypesDev();\n      return mountRefresh();\n    };\n  }\n\n  HooksDispatcherOnUpdateInDEV = {\n    readContext<T>(context: ReactContext<T>): T {\n      return readContext(context);\n    },\n    useCallback<T>(callback: T, deps: Array<mixed> | void | null): T {\n      currentHookNameInDev = 'useCallback';\n      updateHookTypesDev();\n      return updateCallback(callback, deps);\n    },\n    useContext<T>(context: ReactContext<T>): T {\n      currentHookNameInDev = 'useContext';\n      updateHookTypesDev();\n      return readContext(context);\n    },\n    useEffect(\n      create: () => (() => void) | void,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useEffect';\n      updateHookTypesDev();\n      return updateEffect(create, deps);\n    },\n    useImperativeHandle<T>(\n      ref: {|current: T | null|} | ((inst: T | null) => mixed) | null | void,\n      create: () => T,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useImperativeHandle';\n      updateHookTypesDev();\n      return updateImperativeHandle(ref, create, deps);\n    },\n    useInsertionEffect(\n      create: () => (() => void) | void,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useInsertionEffect';\n      updateHookTypesDev();\n      return updateInsertionEffect(create, deps);\n    },\n    useLayoutEffect(\n      create: () => (() => void) | void,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useLayoutEffect';\n      updateHookTypesDev();\n      return updateLayoutEffect(create, deps);\n    },\n    useMemo<T>(create: () => T, deps: Array<mixed> | void | null): T {\n      currentHookNameInDev = 'useMemo';\n      updateHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n      try {\n        return updateMemo(create, deps);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useReducer<S, I, A>(\n      reducer: (S, A) => S,\n      initialArg: I,\n      init?: I => S,\n    ): [S, Dispatch<A>] {\n      currentHookNameInDev = 'useReducer';\n      updateHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n      try {\n        return updateReducer(reducer, initialArg, init);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useRef<T>(initialValue: T): {|current: T|} {\n      currentHookNameInDev = 'useRef';\n      updateHookTypesDev();\n      return updateRef(initialValue);\n    },\n    useState<S>(\n      initialState: (() => S) | S,\n    ): [S, Dispatch<BasicStateAction<S>>] {\n      currentHookNameInDev = 'useState';\n      updateHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n      try {\n        return updateState(initialState);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useDebugValue<T>(value: T, formatterFn: ?(value: T) => mixed): void {\n      currentHookNameInDev = 'useDebugValue';\n      updateHookTypesDev();\n      return updateDebugValue(value, formatterFn);\n    },\n    useDeferredValue<T>(value: T): T {\n      currentHookNameInDev = 'useDeferredValue';\n      updateHookTypesDev();\n      return updateDeferredValue(value);\n    },\n    useTransition(): [boolean, (() => void) => void] {\n      currentHookNameInDev = 'useTransition';\n      updateHookTypesDev();\n      return updateTransition();\n    },\n    useMutableSource<Source, Snapshot>(\n      source: MutableSource<Source>,\n      getSnapshot: MutableSourceGetSnapshotFn<Source, Snapshot>,\n      subscribe: MutableSourceSubscribeFn<Source, Snapshot>,\n    ): Snapshot {\n      currentHookNameInDev = 'useMutableSource';\n      updateHookTypesDev();\n      return updateMutableSource(source, getSnapshot, subscribe);\n    },\n    useSyncExternalStore<T>(\n      subscribe: (() => void) => () => void,\n      getSnapshot: () => T,\n      getServerSnapshot?: () => T,\n    ): T {\n      currentHookNameInDev = 'useSyncExternalStore';\n      updateHookTypesDev();\n      return updateSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);\n    },\n    useId(): string {\n      currentHookNameInDev = 'useId';\n      updateHookTypesDev();\n      return updateId();\n    },\n\n    unstable_isNewReconciler: enableNewReconciler,\n  };\n  if (enableCache) {\n    (HooksDispatcherOnUpdateInDEV: Dispatcher).getCacheSignal = getCacheSignal;\n    (HooksDispatcherOnUpdateInDEV: Dispatcher).getCacheForType = getCacheForType;\n    (HooksDispatcherOnUpdateInDEV: Dispatcher).useCacheRefresh = function useCacheRefresh() {\n      currentHookNameInDev = 'useCacheRefresh';\n      updateHookTypesDev();\n      return updateRefresh();\n    };\n  }\n\n  HooksDispatcherOnRerenderInDEV = {\n    readContext<T>(context: ReactContext<T>): T {\n      return readContext(context);\n    },\n\n    useCallback<T>(callback: T, deps: Array<mixed> | void | null): T {\n      currentHookNameInDev = 'useCallback';\n      updateHookTypesDev();\n      return updateCallback(callback, deps);\n    },\n    useContext<T>(context: ReactContext<T>): T {\n      currentHookNameInDev = 'useContext';\n      updateHookTypesDev();\n      return readContext(context);\n    },\n    useEffect(\n      create: () => (() => void) | void,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useEffect';\n      updateHookTypesDev();\n      return updateEffect(create, deps);\n    },\n    useImperativeHandle<T>(\n      ref: {|current: T | null|} | ((inst: T | null) => mixed) | null | void,\n      create: () => T,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useImperativeHandle';\n      updateHookTypesDev();\n      return updateImperativeHandle(ref, create, deps);\n    },\n    useInsertionEffect(\n      create: () => (() => void) | void,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useInsertionEffect';\n      updateHookTypesDev();\n      return updateInsertionEffect(create, deps);\n    },\n    useLayoutEffect(\n      create: () => (() => void) | void,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useLayoutEffect';\n      updateHookTypesDev();\n      return updateLayoutEffect(create, deps);\n    },\n    useMemo<T>(create: () => T, deps: Array<mixed> | void | null): T {\n      currentHookNameInDev = 'useMemo';\n      updateHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnRerenderInDEV;\n      try {\n        return updateMemo(create, deps);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useReducer<S, I, A>(\n      reducer: (S, A) => S,\n      initialArg: I,\n      init?: I => S,\n    ): [S, Dispatch<A>] {\n      currentHookNameInDev = 'useReducer';\n      updateHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnRerenderInDEV;\n      try {\n        return rerenderReducer(reducer, initialArg, init);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useRef<T>(initialValue: T): {|current: T|} {\n      currentHookNameInDev = 'useRef';\n      updateHookTypesDev();\n      return updateRef(initialValue);\n    },\n    useState<S>(\n      initialState: (() => S) | S,\n    ): [S, Dispatch<BasicStateAction<S>>] {\n      currentHookNameInDev = 'useState';\n      updateHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnRerenderInDEV;\n      try {\n        return rerenderState(initialState);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useDebugValue<T>(value: T, formatterFn: ?(value: T) => mixed): void {\n      currentHookNameInDev = 'useDebugValue';\n      updateHookTypesDev();\n      return updateDebugValue(value, formatterFn);\n    },\n    useDeferredValue<T>(value: T): T {\n      currentHookNameInDev = 'useDeferredValue';\n      updateHookTypesDev();\n      return rerenderDeferredValue(value);\n    },\n    useTransition(): [boolean, (() => void) => void] {\n      currentHookNameInDev = 'useTransition';\n      updateHookTypesDev();\n      return rerenderTransition();\n    },\n    useMutableSource<Source, Snapshot>(\n      source: MutableSource<Source>,\n      getSnapshot: MutableSourceGetSnapshotFn<Source, Snapshot>,\n      subscribe: MutableSourceSubscribeFn<Source, Snapshot>,\n    ): Snapshot {\n      currentHookNameInDev = 'useMutableSource';\n      updateHookTypesDev();\n      return updateMutableSource(source, getSnapshot, subscribe);\n    },\n    useSyncExternalStore<T>(\n      subscribe: (() => void) => () => void,\n      getSnapshot: () => T,\n      getServerSnapshot?: () => T,\n    ): T {\n      currentHookNameInDev = 'useSyncExternalStore';\n      updateHookTypesDev();\n      return updateSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);\n    },\n    useId(): string {\n      currentHookNameInDev = 'useId';\n      updateHookTypesDev();\n      return updateId();\n    },\n\n    unstable_isNewReconciler: enableNewReconciler,\n  };\n  if (enableCache) {\n    (HooksDispatcherOnRerenderInDEV: Dispatcher).getCacheSignal = getCacheSignal;\n    (HooksDispatcherOnRerenderInDEV: Dispatcher).getCacheForType = getCacheForType;\n    (HooksDispatcherOnRerenderInDEV: Dispatcher).useCacheRefresh = function useCacheRefresh() {\n      currentHookNameInDev = 'useCacheRefresh';\n      updateHookTypesDev();\n      return updateRefresh();\n    };\n  }\n\n  InvalidNestedHooksDispatcherOnMountInDEV = {\n    readContext<T>(context: ReactContext<T>): T {\n      warnInvalidContextAccess();\n      return readContext(context);\n    },\n    useCallback<T>(callback: T, deps: Array<mixed> | void | null): T {\n      currentHookNameInDev = 'useCallback';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountCallback(callback, deps);\n    },\n    useContext<T>(context: ReactContext<T>): T {\n      currentHookNameInDev = 'useContext';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return readContext(context);\n    },\n    useEffect(\n      create: () => (() => void) | void,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useEffect';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountEffect(create, deps);\n    },\n    useImperativeHandle<T>(\n      ref: {|current: T | null|} | ((inst: T | null) => mixed) | null | void,\n      create: () => T,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useImperativeHandle';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountImperativeHandle(ref, create, deps);\n    },\n    useInsertionEffect(\n      create: () => (() => void) | void,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useInsertionEffect';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountInsertionEffect(create, deps);\n    },\n    useLayoutEffect(\n      create: () => (() => void) | void,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useLayoutEffect';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountLayoutEffect(create, deps);\n    },\n    useMemo<T>(create: () => T, deps: Array<mixed> | void | null): T {\n      currentHookNameInDev = 'useMemo';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnMountInDEV;\n      try {\n        return mountMemo(create, deps);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useReducer<S, I, A>(\n      reducer: (S, A) => S,\n      initialArg: I,\n      init?: I => S,\n    ): [S, Dispatch<A>] {\n      currentHookNameInDev = 'useReducer';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnMountInDEV;\n      try {\n        return mountReducer(reducer, initialArg, init);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useRef<T>(initialValue: T): {|current: T|} {\n      currentHookNameInDev = 'useRef';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountRef(initialValue);\n    },\n    useState<S>(\n      initialState: (() => S) | S,\n    ): [S, Dispatch<BasicStateAction<S>>] {\n      currentHookNameInDev = 'useState';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnMountInDEV;\n      try {\n        return mountState(initialState);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useDebugValue<T>(value: T, formatterFn: ?(value: T) => mixed): void {\n      currentHookNameInDev = 'useDebugValue';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountDebugValue(value, formatterFn);\n    },\n    useDeferredValue<T>(value: T): T {\n      currentHookNameInDev = 'useDeferredValue';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountDeferredValue(value);\n    },\n    useTransition(): [boolean, (() => void) => void] {\n      currentHookNameInDev = 'useTransition';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountTransition();\n    },\n    useMutableSource<Source, Snapshot>(\n      source: MutableSource<Source>,\n      getSnapshot: MutableSourceGetSnapshotFn<Source, Snapshot>,\n      subscribe: MutableSourceSubscribeFn<Source, Snapshot>,\n    ): Snapshot {\n      currentHookNameInDev = 'useMutableSource';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountMutableSource(source, getSnapshot, subscribe);\n    },\n    useSyncExternalStore<T>(\n      subscribe: (() => void) => () => void,\n      getSnapshot: () => T,\n      getServerSnapshot?: () => T,\n    ): T {\n      currentHookNameInDev = 'useSyncExternalStore';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);\n    },\n    useId(): string {\n      currentHookNameInDev = 'useId';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountId();\n    },\n\n    unstable_isNewReconciler: enableNewReconciler,\n  };\n  if (enableCache) {\n    (InvalidNestedHooksDispatcherOnMountInDEV: Dispatcher).getCacheSignal = getCacheSignal;\n    (InvalidNestedHooksDispatcherOnMountInDEV: Dispatcher).getCacheForType = getCacheForType;\n    (InvalidNestedHooksDispatcherOnMountInDEV: Dispatcher).useCacheRefresh = function useCacheRefresh() {\n      currentHookNameInDev = 'useCacheRefresh';\n      mountHookTypesDev();\n      return mountRefresh();\n    };\n  }\n\n  InvalidNestedHooksDispatcherOnUpdateInDEV = {\n    readContext<T>(context: ReactContext<T>): T {\n      warnInvalidContextAccess();\n      return readContext(context);\n    },\n    useCallback<T>(callback: T, deps: Array<mixed> | void | null): T {\n      currentHookNameInDev = 'useCallback';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateCallback(callback, deps);\n    },\n    useContext<T>(context: ReactContext<T>): T {\n      currentHookNameInDev = 'useContext';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return readContext(context);\n    },\n    useEffect(\n      create: () => (() => void) | void,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useEffect';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateEffect(create, deps);\n    },\n    useImperativeHandle<T>(\n      ref: {|current: T | null|} | ((inst: T | null) => mixed) | null | void,\n      create: () => T,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useImperativeHandle';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateImperativeHandle(ref, create, deps);\n    },\n    useInsertionEffect(\n      create: () => (() => void) | void,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useInsertionEffect';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateInsertionEffect(create, deps);\n    },\n    useLayoutEffect(\n      create: () => (() => void) | void,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useLayoutEffect';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateLayoutEffect(create, deps);\n    },\n    useMemo<T>(create: () => T, deps: Array<mixed> | void | null): T {\n      currentHookNameInDev = 'useMemo';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n      try {\n        return updateMemo(create, deps);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useReducer<S, I, A>(\n      reducer: (S, A) => S,\n      initialArg: I,\n      init?: I => S,\n    ): [S, Dispatch<A>] {\n      currentHookNameInDev = 'useReducer';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n      try {\n        return updateReducer(reducer, initialArg, init);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useRef<T>(initialValue: T): {|current: T|} {\n      currentHookNameInDev = 'useRef';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateRef(initialValue);\n    },\n    useState<S>(\n      initialState: (() => S) | S,\n    ): [S, Dispatch<BasicStateAction<S>>] {\n      currentHookNameInDev = 'useState';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n      try {\n        return updateState(initialState);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useDebugValue<T>(value: T, formatterFn: ?(value: T) => mixed): void {\n      currentHookNameInDev = 'useDebugValue';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateDebugValue(value, formatterFn);\n    },\n    useDeferredValue<T>(value: T): T {\n      currentHookNameInDev = 'useDeferredValue';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateDeferredValue(value);\n    },\n    useTransition(): [boolean, (() => void) => void] {\n      currentHookNameInDev = 'useTransition';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateTransition();\n    },\n    useMutableSource<Source, Snapshot>(\n      source: MutableSource<Source>,\n      getSnapshot: MutableSourceGetSnapshotFn<Source, Snapshot>,\n      subscribe: MutableSourceSubscribeFn<Source, Snapshot>,\n    ): Snapshot {\n      currentHookNameInDev = 'useMutableSource';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateMutableSource(source, getSnapshot, subscribe);\n    },\n    useSyncExternalStore<T>(\n      subscribe: (() => void) => () => void,\n      getSnapshot: () => T,\n      getServerSnapshot?: () => T,\n    ): T {\n      currentHookNameInDev = 'useSyncExternalStore';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);\n    },\n    useId(): string {\n      currentHookNameInDev = 'useId';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateId();\n    },\n\n    unstable_isNewReconciler: enableNewReconciler,\n  };\n  if (enableCache) {\n    (InvalidNestedHooksDispatcherOnUpdateInDEV: Dispatcher).getCacheSignal = getCacheSignal;\n    (InvalidNestedHooksDispatcherOnUpdateInDEV: Dispatcher).getCacheForType = getCacheForType;\n    (InvalidNestedHooksDispatcherOnUpdateInDEV: Dispatcher).useCacheRefresh = function useCacheRefresh() {\n      currentHookNameInDev = 'useCacheRefresh';\n      updateHookTypesDev();\n      return updateRefresh();\n    };\n  }\n\n  InvalidNestedHooksDispatcherOnRerenderInDEV = {\n    readContext<T>(context: ReactContext<T>): T {\n      warnInvalidContextAccess();\n      return readContext(context);\n    },\n\n    useCallback<T>(callback: T, deps: Array<mixed> | void | null): T {\n      currentHookNameInDev = 'useCallback';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateCallback(callback, deps);\n    },\n    useContext<T>(context: ReactContext<T>): T {\n      currentHookNameInDev = 'useContext';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return readContext(context);\n    },\n    useEffect(\n      create: () => (() => void) | void,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useEffect';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateEffect(create, deps);\n    },\n    useImperativeHandle<T>(\n      ref: {|current: T | null|} | ((inst: T | null) => mixed) | null | void,\n      create: () => T,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useImperativeHandle';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateImperativeHandle(ref, create, deps);\n    },\n    useInsertionEffect(\n      create: () => (() => void) | void,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useInsertionEffect';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateInsertionEffect(create, deps);\n    },\n    useLayoutEffect(\n      create: () => (() => void) | void,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useLayoutEffect';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateLayoutEffect(create, deps);\n    },\n    useMemo<T>(create: () => T, deps: Array<mixed> | void | null): T {\n      currentHookNameInDev = 'useMemo';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n      try {\n        return updateMemo(create, deps);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useReducer<S, I, A>(\n      reducer: (S, A) => S,\n      initialArg: I,\n      init?: I => S,\n    ): [S, Dispatch<A>] {\n      currentHookNameInDev = 'useReducer';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n      try {\n        return rerenderReducer(reducer, initialArg, init);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useRef<T>(initialValue: T): {|current: T|} {\n      currentHookNameInDev = 'useRef';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateRef(initialValue);\n    },\n    useState<S>(\n      initialState: (() => S) | S,\n    ): [S, Dispatch<BasicStateAction<S>>] {\n      currentHookNameInDev = 'useState';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n      try {\n        return rerenderState(initialState);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useDebugValue<T>(value: T, formatterFn: ?(value: T) => mixed): void {\n      currentHookNameInDev = 'useDebugValue';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateDebugValue(value, formatterFn);\n    },\n    useDeferredValue<T>(value: T): T {\n      currentHookNameInDev = 'useDeferredValue';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return rerenderDeferredValue(value);\n    },\n    useTransition(): [boolean, (() => void) => void] {\n      currentHookNameInDev = 'useTransition';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return rerenderTransition();\n    },\n    useMutableSource<Source, Snapshot>(\n      source: MutableSource<Source>,\n      getSnapshot: MutableSourceGetSnapshotFn<Source, Snapshot>,\n      subscribe: MutableSourceSubscribeFn<Source, Snapshot>,\n    ): Snapshot {\n      currentHookNameInDev = 'useMutableSource';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateMutableSource(source, getSnapshot, subscribe);\n    },\n    useSyncExternalStore<T>(\n      subscribe: (() => void) => () => void,\n      getSnapshot: () => T,\n      getServerSnapshot?: () => T,\n    ): T {\n      currentHookNameInDev = 'useSyncExternalStore';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);\n    },\n    useId(): string {\n      currentHookNameInDev = 'useId';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateId();\n    },\n\n    unstable_isNewReconciler: enableNewReconciler,\n  };\n  if (enableCache) {\n    (InvalidNestedHooksDispatcherOnRerenderInDEV: Dispatcher).getCacheSignal = getCacheSignal;\n    (InvalidNestedHooksDispatcherOnRerenderInDEV: Dispatcher).getCacheForType = getCacheForType;\n    (InvalidNestedHooksDispatcherOnRerenderInDEV: Dispatcher).useCacheRefresh = function useCacheRefresh() {\n      currentHookNameInDev = 'useCacheRefresh';\n      updateHookTypesDev();\n      return updateRefresh();\n    };\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactInternalTypes';\n\nimport {\n  enableProfilerCommitHooks,\n  enableProfilerNestedUpdatePhase,\n  enableProfilerTimer,\n} from 'shared/ReactFeatureFlags';\nimport {HostRoot, Profiler} from './ReactWorkTags';\n\n// Intentionally not named imports because Rollup would use dynamic dispatch for\n// CommonJS interop named imports.\nimport * as Scheduler from 'scheduler';\n\nconst {unstable_now: now} = Scheduler;\n\nexport type ProfilerTimer = {\n  getCommitTime(): number,\n  isCurrentUpdateNested(): boolean,\n  markNestedUpdateScheduled(): void,\n  recordCommitTime(): void,\n  startProfilerTimer(fiber: Fiber): void,\n  stopProfilerTimerIfRunning(fiber: Fiber): void,\n  stopProfilerTimerIfRunningAndRecordDelta(fiber: Fiber): void,\n  syncNestedUpdateFlag(): void,\n  ...\n};\n\nlet commitTime: number = 0;\nlet layoutEffectStartTime: number = -1;\nlet profilerStartTime: number = -1;\nlet passiveEffectStartTime: number = -1;\n\n/**\n * Tracks whether the current update was a nested/cascading update (scheduled from a layout effect).\n *\n * The overall sequence is:\n *   1. render\n *   2. commit (and call `onRender`, `onCommit`)\n *   3. check for nested updates\n *   4. flush passive effects (and call `onPostCommit`)\n *\n * Nested updates are identified in step 3 above,\n * but step 4 still applies to the work that was just committed.\n * We use two flags to track nested updates then:\n * one tracks whether the upcoming update is a nested update,\n * and the other tracks whether the current update was a nested update.\n * The first value gets synced to the second at the start of the render phase.\n */\nlet currentUpdateIsNested: boolean = false;\nlet nestedUpdateScheduled: boolean = false;\n\nfunction isCurrentUpdateNested(): boolean {\n  return currentUpdateIsNested;\n}\n\nfunction markNestedUpdateScheduled(): void {\n  if (enableProfilerNestedUpdatePhase) {\n    nestedUpdateScheduled = true;\n  }\n}\n\nfunction resetNestedUpdateFlag(): void {\n  if (enableProfilerNestedUpdatePhase) {\n    currentUpdateIsNested = false;\n    nestedUpdateScheduled = false;\n  }\n}\n\nfunction syncNestedUpdateFlag(): void {\n  if (enableProfilerNestedUpdatePhase) {\n    currentUpdateIsNested = nestedUpdateScheduled;\n    nestedUpdateScheduled = false;\n  }\n}\n\nfunction getCommitTime(): number {\n  return commitTime;\n}\n\nfunction recordCommitTime(): void {\n  if (!enableProfilerTimer) {\n    return;\n  }\n  commitTime = now();\n}\n\nfunction startProfilerTimer(fiber: Fiber): void {\n  if (!enableProfilerTimer) {\n    return;\n  }\n\n  profilerStartTime = now();\n\n  if (((fiber.actualStartTime: any): number) < 0) {\n    fiber.actualStartTime = now();\n  }\n}\n\nfunction stopProfilerTimerIfRunning(fiber: Fiber): void {\n  if (!enableProfilerTimer) {\n    return;\n  }\n  profilerStartTime = -1;\n}\n\nfunction stopProfilerTimerIfRunningAndRecordDelta(\n  fiber: Fiber,\n  overrideBaseTime: boolean,\n): void {\n  if (!enableProfilerTimer) {\n    return;\n  }\n\n  if (profilerStartTime >= 0) {\n    const elapsedTime = now() - profilerStartTime;\n    fiber.actualDuration += elapsedTime;\n    if (overrideBaseTime) {\n      fiber.selfBaseDuration = elapsedTime;\n    }\n    profilerStartTime = -1;\n  }\n}\n\nfunction recordLayoutEffectDuration(fiber: Fiber): void {\n  if (!enableProfilerTimer || !enableProfilerCommitHooks) {\n    return;\n  }\n\n  if (layoutEffectStartTime >= 0) {\n    const elapsedTime = now() - layoutEffectStartTime;\n\n    layoutEffectStartTime = -1;\n\n    // Store duration on the next nearest Profiler ancestor\n    // Or the root (for the DevTools Profiler to read)\n    let parentFiber = fiber.return;\n    while (parentFiber !== null) {\n      switch (parentFiber.tag) {\n        case HostRoot:\n          const root = parentFiber.stateNode;\n          root.effectDuration += elapsedTime;\n          return;\n        case Profiler:\n          const parentStateNode = parentFiber.stateNode;\n          parentStateNode.effectDuration += elapsedTime;\n          return;\n      }\n      parentFiber = parentFiber.return;\n    }\n  }\n}\n\nfunction recordPassiveEffectDuration(fiber: Fiber): void {\n  if (!enableProfilerTimer || !enableProfilerCommitHooks) {\n    return;\n  }\n\n  if (passiveEffectStartTime >= 0) {\n    const elapsedTime = now() - passiveEffectStartTime;\n\n    passiveEffectStartTime = -1;\n\n    // Store duration on the next nearest Profiler ancestor\n    // Or the root (for the DevTools Profiler to read)\n    let parentFiber = fiber.return;\n    while (parentFiber !== null) {\n      switch (parentFiber.tag) {\n        case HostRoot:\n          const root = parentFiber.stateNode;\n          if (root !== null) {\n            root.passiveEffectDuration += elapsedTime;\n          }\n          return;\n        case Profiler:\n          const parentStateNode = parentFiber.stateNode;\n          if (parentStateNode !== null) {\n            // Detached fibers have their state node cleared out.\n            // In this case, the return pointer is also cleared out,\n            // so we won't be able to report the time spent in this Profiler's subtree.\n            parentStateNode.passiveEffectDuration += elapsedTime;\n          }\n          return;\n      }\n      parentFiber = parentFiber.return;\n    }\n  }\n}\n\nfunction startLayoutEffectTimer(): void {\n  if (!enableProfilerTimer || !enableProfilerCommitHooks) {\n    return;\n  }\n  layoutEffectStartTime = now();\n}\n\nfunction startPassiveEffectTimer(): void {\n  if (!enableProfilerTimer || !enableProfilerCommitHooks) {\n    return;\n  }\n  passiveEffectStartTime = now();\n}\n\nfunction transferActualDuration(fiber: Fiber): void {\n  // Transfer time spent rendering these children so we don't lose it\n  // after we rerender. This is used as a helper in special cases\n  // where we should count the work of multiple passes.\n  let child = fiber.child;\n  while (child) {\n    fiber.actualDuration += child.actualDuration;\n    child = child.sibling;\n  }\n}\n\nexport {\n  getCommitTime,\n  isCurrentUpdateNested,\n  markNestedUpdateScheduled,\n  recordCommitTime,\n  recordLayoutEffectDuration,\n  recordPassiveEffectDuration,\n  resetNestedUpdateFlag,\n  startLayoutEffectTimer,\n  startPassiveEffectTimer,\n  startProfilerTimer,\n  stopProfilerTimerIfRunning,\n  stopProfilerTimerIfRunningAndRecordDelta,\n  syncNestedUpdateFlag,\n  transferActualDuration,\n};\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactInternalTypes';\n\nimport {getStackByFiberInDevAndProd} from './ReactFiberComponentStack';\n\nexport type CapturedValue<T> = {|\n  value: T,\n  source: Fiber | null,\n  stack: string | null,\n  digest: string | null,\n|};\n\nexport function createCapturedValueAtFiber<T>(\n  value: T,\n  source: Fiber,\n): CapturedValue<T> {\n  // If the value is an error, call this function immediately after it is thrown\n  // so the stack is accurate.\n  return {\n    value,\n    source,\n    stack: getStackByFiberInDevAndProd(source),\n    digest: null,\n  };\n}\n\nexport function createCapturedValue<T>(\n  value: T,\n  digest: ?string,\n  stack: ?string,\n): CapturedValue<T> {\n  return {\n    value,\n    source: null,\n    stack: stack != null ? stack : null,\n    digest: digest != null ? digest : null,\n  };\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactInternalTypes';\nimport type {CapturedValue} from './ReactCapturedValue';\n\n// This module is forked in different environments.\n// By default, return `true` to log errors to the console.\n// Forks can return `false` if this isn't desirable.\n\nexport function showErrorDialog(\n  boundary: Fiber,\n  errorInfo: CapturedValue<mixed>,\n): boolean {\n  return true;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactInternalTypes';\nimport type {CapturedValue} from './ReactCapturedValue';\n\nimport {showErrorDialog} from './ReactFiberErrorDialog';\nimport {ClassComponent} from './ReactWorkTags';\nimport getComponentNameFromFiber from 'react-reconciler/src/getComponentNameFromFiber';\nimport {HostRoot} from 'react-reconciler/src/ReactWorkTags';\n\nexport function logCapturedError(\n  boundary: Fiber,\n  errorInfo: CapturedValue<mixed>,\n): void {\n  try {\n    const logError = showErrorDialog(boundary, errorInfo);\n\n    // Allow injected showErrorDialog() to prevent default console.error logging.\n    // This enables renderers like ReactNative to better manage redbox behavior.\n    if (logError === false) {\n      return;\n    }\n\n    const error = (errorInfo.value: any);\n    if (__DEV__) {\n      const source = errorInfo.source;\n      const stack = errorInfo.stack;\n      const componentStack = stack !== null ? stack : '';\n      // Browsers support silencing uncaught errors by calling\n      // `preventDefault()` in window `error` handler.\n      // We record this information as an expando on the error.\n      if (error != null && error._suppressLogging) {\n        if (boundary.tag === ClassComponent) {\n          // The error is recoverable and was silenced.\n          // Ignore it and don't print the stack addendum.\n          // This is handy for testing error boundaries without noise.\n          return;\n        }\n        // The error is fatal. Since the silencing might have\n        // been accidental, we'll surface it anyway.\n        // However, the browser would have silenced the original error\n        // so we'll print it first, and then print the stack addendum.\n        console['error'](error); // Don't transform to our wrapper\n        // For a more detailed description of this block, see:\n        // https://github.com/facebook/react/pull/13384\n      }\n\n      const componentName = source ? getComponentNameFromFiber(source) : null;\n      const componentNameMessage = componentName\n        ? `The above error occurred in the <${componentName}> component:`\n        : 'The above error occurred in one of your React components:';\n\n      let errorBoundaryMessage;\n      if (boundary.tag === HostRoot) {\n        errorBoundaryMessage =\n          'Consider adding an error boundary to your tree to customize error handling behavior.\\n' +\n          'Visit https://reactjs.org/link/error-boundaries to learn more about error boundaries.';\n      } else {\n        const errorBoundaryName =\n          getComponentNameFromFiber(boundary) || 'Anonymous';\n        errorBoundaryMessage =\n          `React will try to recreate this component tree from scratch ` +\n          `using the error boundary you provided, ${errorBoundaryName}.`;\n      }\n      const combinedMessage =\n        `${componentNameMessage}\\n${componentStack}\\n\\n` +\n        `${errorBoundaryMessage}`;\n\n      // In development, we provide our own message with just the component stack.\n      // We don't include the original error message and JS stack because the browser\n      // has already printed it. Even if the application swallows the error, it is still\n      // displayed by the browser thanks to the DEV-only fake event trick in ReactErrorUtils.\n      console['error'](combinedMessage); // Don't transform to our wrapper\n    } else {\n      // In production, we print the error directly.\n      // This will include the message, the JS stack, and anything the browser wants to show.\n      // We pass the error object instead of custom message so that the browser displays the error natively.\n      console['error'](error); // Don't transform to our wrapper\n    }\n  } catch (e) {\n    // This method must not throw, or React internal state will get messed up.\n    // If console.error is overridden, or logCapturedError() shows a dialog that throws,\n    // we want to report this error outside of the normal stack as a last resort.\n    // https://github.com/facebook/react/issues/13188\n    setTimeout(() => {\n      throw e;\n    });\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactInternalTypes';\nimport type {FiberRoot} from './ReactInternalTypes';\nimport type {Lane, Lanes} from './ReactFiberLane.old';\nimport type {CapturedValue} from './ReactCapturedValue';\nimport type {Update} from './ReactFiberClassUpdateQueue.old';\nimport type {Wakeable} from 'shared/ReactTypes';\nimport type {SuspenseContext} from './ReactFiberSuspenseContext.old';\n\nimport getComponentNameFromFiber from 'react-reconciler/src/getComponentNameFromFiber';\nimport {\n  ClassComponent,\n  HostRoot,\n  SuspenseComponent,\n  IncompleteClassComponent,\n  FunctionComponent,\n  ForwardRef,\n  SimpleMemoComponent,\n} from './ReactWorkTags';\nimport {\n  DidCapture,\n  Incomplete,\n  NoFlags,\n  ShouldCapture,\n  LifecycleEffectMask,\n  ForceUpdateForLegacySuspense,\n  ForceClientRender,\n} from './ReactFiberFlags';\nimport {shouldCaptureSuspense} from './ReactFiberSuspenseComponent.old';\nimport {NoMode, ConcurrentMode, DebugTracingMode} from './ReactTypeOfMode';\nimport {\n  enableDebugTracing,\n  enableLazyContextPropagation,\n  enableUpdaterTracking,\n} from 'shared/ReactFeatureFlags';\nimport {createCapturedValueAtFiber} from './ReactCapturedValue';\nimport {\n  enqueueCapturedUpdate,\n  createUpdate,\n  CaptureUpdate,\n  ForceUpdate,\n  enqueueUpdate,\n} from './ReactFiberClassUpdateQueue.old';\nimport {markFailedErrorBoundaryForHotReloading} from './ReactFiberHotReloading.old';\nimport {\n  suspenseStackCursor,\n  InvisibleParentSuspenseContext,\n  hasSuspenseContext,\n} from './ReactFiberSuspenseContext.old';\nimport {\n  renderDidError,\n  renderDidSuspendDelayIfPossible,\n  onUncaughtError,\n  markLegacyErrorBoundaryAsFailed,\n  isAlreadyFailedLegacyErrorBoundary,\n  pingSuspendedRoot,\n  restorePendingUpdaters,\n} from './ReactFiberWorkLoop.old';\nimport {propagateParentContextChangesToDeferredTree} from './ReactFiberNewContext.old';\nimport {logCapturedError} from './ReactFiberErrorLogger';\nimport {logComponentSuspended} from './DebugTracing';\nimport {isDevToolsPresent} from './ReactFiberDevToolsHook.old';\nimport {\n  SyncLane,\n  NoTimestamp,\n  includesSomeLane,\n  mergeLanes,\n  pickArbitraryLane,\n  includesSyncLane,\n} from './ReactFiberLane.old';\nimport {\n  getIsHydrating,\n  markDidThrowWhileHydratingDEV,\n  queueHydrationError,\n} from './ReactFiberHydrationContext.old';\n\nconst PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\n\nfunction createRootErrorUpdate(\n  fiber: Fiber,\n  errorInfo: CapturedValue<mixed>,\n  lane: Lane,\n): Update<mixed> {\n  const update = createUpdate(NoTimestamp, lane);\n  // Unmount the root by rendering null.\n  update.tag = CaptureUpdate;\n  // Caution: React DevTools currently depends on this property\n  // being called \"element\".\n  update.payload = {element: null};\n  const error = errorInfo.value;\n  update.callback = () => {\n    onUncaughtError(error);\n    logCapturedError(fiber, errorInfo);\n  };\n  return update;\n}\n\nfunction createClassErrorUpdate(\n  fiber: Fiber,\n  errorInfo: CapturedValue<mixed>,\n  lane: Lane,\n): Update<mixed> {\n  const update = createUpdate(NoTimestamp, lane);\n  update.tag = CaptureUpdate;\n  const getDerivedStateFromError = fiber.type.getDerivedStateFromError;\n  if (typeof getDerivedStateFromError === 'function') {\n    const error = errorInfo.value;\n    update.payload = () => {\n      return getDerivedStateFromError(error);\n    };\n    update.callback = () => {\n      if (__DEV__) {\n        markFailedErrorBoundaryForHotReloading(fiber);\n      }\n      logCapturedError(fiber, errorInfo);\n    };\n  }\n\n  const inst = fiber.stateNode;\n  if (inst !== null && typeof inst.componentDidCatch === 'function') {\n    update.callback = function callback() {\n      if (__DEV__) {\n        markFailedErrorBoundaryForHotReloading(fiber);\n      }\n      logCapturedError(fiber, errorInfo);\n      if (typeof getDerivedStateFromError !== 'function') {\n        // To preserve the preexisting retry behavior of error boundaries,\n        // we keep track of which ones already failed during this batch.\n        // This gets reset before we yield back to the browser.\n        // TODO: Warn in strict mode if getDerivedStateFromError is\n        // not defined.\n        markLegacyErrorBoundaryAsFailed(this);\n      }\n      const error = errorInfo.value;\n      const stack = errorInfo.stack;\n      this.componentDidCatch(error, {\n        componentStack: stack !== null ? stack : '',\n      });\n      if (__DEV__) {\n        if (typeof getDerivedStateFromError !== 'function') {\n          // If componentDidCatch is the only error boundary method defined,\n          // then it needs to call setState to recover from errors.\n          // If no state update is scheduled then the boundary will swallow the error.\n          if (!includesSomeLane(fiber.lanes, (SyncLane: Lane))) {\n            console.error(\n              '%s: Error boundaries should implement getDerivedStateFromError(). ' +\n                'In that method, return a state update to display an error message or fallback UI.',\n              getComponentNameFromFiber(fiber) || 'Unknown',\n            );\n          }\n        }\n      }\n    };\n  }\n  return update;\n}\n\nfunction attachPingListener(root: FiberRoot, wakeable: Wakeable, lanes: Lanes) {\n  // Attach a ping listener\n  //\n  // The data might resolve before we have a chance to commit the fallback. Or,\n  // in the case of a refresh, we'll never commit a fallback. So we need to\n  // attach a listener now. When it resolves (\"pings\"), we can decide whether to\n  // try rendering the tree again.\n  //\n  // Only attach a listener if one does not already exist for the lanes\n  // we're currently rendering (which acts like a \"thread ID\" here).\n  //\n  // We only need to do this in concurrent mode. Legacy Suspense always\n  // commits fallbacks synchronously, so there are no pings.\n  let pingCache = root.pingCache;\n  let threadIDs;\n  if (pingCache === null) {\n    pingCache = root.pingCache = new PossiblyWeakMap();\n    threadIDs = new Set();\n    pingCache.set(wakeable, threadIDs);\n  } else {\n    threadIDs = pingCache.get(wakeable);\n    if (threadIDs === undefined) {\n      threadIDs = new Set();\n      pingCache.set(wakeable, threadIDs);\n    }\n  }\n  if (!threadIDs.has(lanes)) {\n    // Memoize using the thread ID to prevent redundant listeners.\n    threadIDs.add(lanes);\n    const ping = pingSuspendedRoot.bind(null, root, wakeable, lanes);\n    if (enableUpdaterTracking) {\n      if (isDevToolsPresent) {\n        // If we have pending work still, restore the original updaters\n        restorePendingUpdaters(root, lanes);\n      }\n    }\n    wakeable.then(ping, ping);\n  }\n}\n\nfunction attachRetryListener(\n  suspenseBoundary: Fiber,\n  root: FiberRoot,\n  wakeable: Wakeable,\n  lanes: Lanes,\n) {\n  // Retry listener\n  //\n  // If the fallback does commit, we need to attach a different type of\n  // listener. This one schedules an update on the Suspense boundary to turn\n  // the fallback state off.\n  //\n  // Stash the wakeable on the boundary fiber so we can access it in the\n  // commit phase.\n  //\n  // When the wakeable resolves, we'll attempt to render the boundary\n  // again (\"retry\").\n  const wakeables: Set<Wakeable> | null = (suspenseBoundary.updateQueue: any);\n  if (wakeables === null) {\n    const updateQueue = (new Set(): any);\n    updateQueue.add(wakeable);\n    suspenseBoundary.updateQueue = updateQueue;\n  } else {\n    wakeables.add(wakeable);\n  }\n}\n\nfunction resetSuspendedComponent(sourceFiber: Fiber, rootRenderLanes: Lanes) {\n  if (enableLazyContextPropagation) {\n    const currentSourceFiber = sourceFiber.alternate;\n    if (currentSourceFiber !== null) {\n      // Since we never visited the children of the suspended component, we\n      // need to propagate the context change now, to ensure that we visit\n      // them during the retry.\n      //\n      // We don't have to do this for errors because we retry errors without\n      // committing in between. So this is specific to Suspense.\n      propagateParentContextChangesToDeferredTree(\n        currentSourceFiber,\n        sourceFiber,\n        rootRenderLanes,\n      );\n    }\n  }\n\n  // Reset the memoizedState to what it was before we attempted to render it.\n  // A legacy mode Suspense quirk, only relevant to hook components.\n  const tag = sourceFiber.tag;\n  if (\n    (sourceFiber.mode & ConcurrentMode) === NoMode &&\n    (tag === FunctionComponent ||\n      tag === ForwardRef ||\n      tag === SimpleMemoComponent)\n  ) {\n    const currentSource = sourceFiber.alternate;\n    if (currentSource) {\n      sourceFiber.updateQueue = currentSource.updateQueue;\n      sourceFiber.memoizedState = currentSource.memoizedState;\n      sourceFiber.lanes = currentSource.lanes;\n    } else {\n      sourceFiber.updateQueue = null;\n      sourceFiber.memoizedState = null;\n    }\n  }\n}\n\nfunction getNearestSuspenseBoundaryToCapture(returnFiber: Fiber) {\n  let node = returnFiber;\n  const hasInvisibleParentBoundary = hasSuspenseContext(\n    suspenseStackCursor.current,\n    (InvisibleParentSuspenseContext: SuspenseContext),\n  );\n  do {\n    if (\n      node.tag === SuspenseComponent &&\n      shouldCaptureSuspense(node, hasInvisibleParentBoundary)\n    ) {\n      return node;\n    }\n    // This boundary already captured during this render. Continue to the next\n    // boundary.\n    node = node.return;\n  } while (node !== null);\n  return null;\n}\n\nfunction markSuspenseBoundaryShouldCapture(\n  suspenseBoundary: Fiber,\n  returnFiber: Fiber,\n  sourceFiber: Fiber,\n  root: FiberRoot,\n  rootRenderLanes: Lanes,\n): Fiber | null {\n  // This marks a Suspense boundary so that when we're unwinding the stack,\n  // it captures the suspended \"exception\" and does a second (fallback) pass.\n  if ((suspenseBoundary.mode & ConcurrentMode) === NoMode) {\n    // Legacy Mode Suspense\n    //\n    // If the boundary is in legacy mode, we should *not*\n    // suspend the commit. Pretend as if the suspended component rendered\n    // null and keep rendering. When the Suspense boundary completes,\n    // we'll do a second pass to render the fallback.\n    if (suspenseBoundary === returnFiber) {\n      // Special case where we suspended while reconciling the children of\n      // a Suspense boundary's inner Offscreen wrapper fiber. This happens\n      // when a React.lazy component is a direct child of a\n      // Suspense boundary.\n      //\n      // Suspense boundaries are implemented as multiple fibers, but they\n      // are a single conceptual unit. The legacy mode behavior where we\n      // pretend the suspended fiber committed as `null` won't work,\n      // because in this case the \"suspended\" fiber is the inner\n      // Offscreen wrapper.\n      //\n      // Because the contents of the boundary haven't started rendering\n      // yet (i.e. nothing in the tree has partially rendered) we can\n      // switch to the regular, concurrent mode behavior: mark the\n      // boundary with ShouldCapture and enter the unwind phase.\n      suspenseBoundary.flags |= ShouldCapture;\n    } else {\n      suspenseBoundary.flags |= DidCapture;\n      sourceFiber.flags |= ForceUpdateForLegacySuspense;\n\n      // We're going to commit this fiber even though it didn't complete.\n      // But we shouldn't call any lifecycle methods or callbacks. Remove\n      // all lifecycle effect tags.\n      sourceFiber.flags &= ~(LifecycleEffectMask | Incomplete);\n\n      if (sourceFiber.tag === ClassComponent) {\n        const currentSourceFiber = sourceFiber.alternate;\n        if (currentSourceFiber === null) {\n          // This is a new mount. Change the tag so it's not mistaken for a\n          // completed class component. For example, we should not call\n          // componentWillUnmount if it is deleted.\n          sourceFiber.tag = IncompleteClassComponent;\n        } else {\n          // When we try rendering again, we should not reuse the current fiber,\n          // since it's known to be in an inconsistent state. Use a force update to\n          // prevent a bail out.\n          const update = createUpdate(NoTimestamp, SyncLane);\n          update.tag = ForceUpdate;\n          enqueueUpdate(sourceFiber, update, SyncLane);\n        }\n      }\n\n      // The source fiber did not complete. Mark it with Sync priority to\n      // indicate that it still has pending work.\n      sourceFiber.lanes = mergeLanes(sourceFiber.lanes, SyncLane);\n    }\n    return suspenseBoundary;\n  }\n  // Confirmed that the boundary is in a concurrent mode tree. Continue\n  // with the normal suspend path.\n  //\n  // After this we'll use a set of heuristics to determine whether this\n  // render pass will run to completion or restart or \"suspend\" the commit.\n  // The actual logic for this is spread out in different places.\n  //\n  // This first principle is that if we're going to suspend when we complete\n  // a root, then we should also restart if we get an update or ping that\n  // might unsuspend it, and vice versa. The only reason to suspend is\n  // because you think you might want to restart before committing. However,\n  // it doesn't make sense to restart only while in the period we're suspended.\n  //\n  // Restarting too aggressively is also not good because it starves out any\n  // intermediate loading state. So we use heuristics to determine when.\n\n  // Suspense Heuristics\n  //\n  // If nothing threw a Promise or all the same fallbacks are already showing,\n  // then don't suspend/restart.\n  //\n  // If this is an initial render of a new tree of Suspense boundaries and\n  // those trigger a fallback, then don't suspend/restart. We want to ensure\n  // that we can show the initial loading state as quickly as possible.\n  //\n  // If we hit a \"Delayed\" case, such as when we'd switch from content back into\n  // a fallback, then we should always suspend/restart. Transitions apply\n  // to this case. If none is defined, JND is used instead.\n  //\n  // If we're already showing a fallback and it gets \"retried\", allowing us to show\n  // another level, but there's still an inner boundary that would show a fallback,\n  // then we suspend/restart for 500ms since the last time we showed a fallback\n  // anywhere in the tree. This effectively throttles progressive loading into a\n  // consistent train of commits. This also gives us an opportunity to restart to\n  // get to the completed state slightly earlier.\n  //\n  // If there's ambiguity due to batching it's resolved in preference of:\n  // 1) \"delayed\", 2) \"initial render\", 3) \"retry\".\n  //\n  // We want to ensure that a \"busy\" state doesn't get force committed. We want to\n  // ensure that new initial loading states can commit as soon as possible.\n  suspenseBoundary.flags |= ShouldCapture;\n  // TODO: I think we can remove this, since we now use `DidCapture` in\n  // the begin phase to prevent an early bailout.\n  suspenseBoundary.lanes = rootRenderLanes;\n  return suspenseBoundary;\n}\n\nfunction throwException(\n  root: FiberRoot,\n  returnFiber: Fiber,\n  sourceFiber: Fiber,\n  value: mixed,\n  rootRenderLanes: Lanes,\n) {\n  // The source fiber did not complete.\n  sourceFiber.flags |= Incomplete;\n\n  if (enableUpdaterTracking) {\n    if (isDevToolsPresent) {\n      // If we have pending work still, restore the original updaters\n      restorePendingUpdaters(root, rootRenderLanes);\n    }\n  }\n\n  if (\n    value !== null &&\n    typeof value === 'object' &&\n    typeof value.then === 'function'\n  ) {\n    // This is a wakeable. The component suspended.\n    const wakeable: Wakeable = (value: any);\n    resetSuspendedComponent(sourceFiber, rootRenderLanes);\n\n    if (__DEV__) {\n      if (getIsHydrating() && sourceFiber.mode & ConcurrentMode) {\n        markDidThrowWhileHydratingDEV();\n      }\n    }\n\n    if (__DEV__) {\n      if (enableDebugTracing) {\n        if (sourceFiber.mode & DebugTracingMode) {\n          const name = getComponentNameFromFiber(sourceFiber) || 'Unknown';\n          logComponentSuspended(name, wakeable);\n        }\n      }\n    }\n\n    // Schedule the nearest Suspense to re-render the timed out view.\n    const suspenseBoundary = getNearestSuspenseBoundaryToCapture(returnFiber);\n    if (suspenseBoundary !== null) {\n      suspenseBoundary.flags &= ~ForceClientRender;\n      markSuspenseBoundaryShouldCapture(\n        suspenseBoundary,\n        returnFiber,\n        sourceFiber,\n        root,\n        rootRenderLanes,\n      );\n      // We only attach ping listeners in concurrent mode. Legacy Suspense always\n      // commits fallbacks synchronously, so there are no pings.\n      if (suspenseBoundary.mode & ConcurrentMode) {\n        attachPingListener(root, wakeable, rootRenderLanes);\n      }\n      attachRetryListener(suspenseBoundary, root, wakeable, rootRenderLanes);\n      return;\n    } else {\n      // No boundary was found. Unless this is a sync update, this is OK.\n      // We can suspend and wait for more data to arrive.\n\n      if (!includesSyncLane(rootRenderLanes)) {\n        // This is not a sync update. Suspend. Since we're not activating a\n        // Suspense boundary, this will unwind all the way to the root without\n        // performing a second pass to render a fallback. (This is arguably how\n        // refresh transitions should work, too, since we're not going to commit\n        // the fallbacks anyway.)\n        //\n        // This case also applies to initial hydration.\n        attachPingListener(root, wakeable, rootRenderLanes);\n        renderDidSuspendDelayIfPossible();\n        return;\n      }\n\n      // This is a sync/discrete update. We treat this case like an error\n      // because discrete renders are expected to produce a complete tree\n      // synchronously to maintain consistency with external state.\n      const uncaughtSuspenseError = new Error(\n        'A component suspended while responding to synchronous input. This ' +\n          'will cause the UI to be replaced with a loading indicator. To ' +\n          'fix, updates that suspend should be wrapped ' +\n          'with startTransition.',\n      );\n\n      // If we're outside a transition, fall through to the regular error path.\n      // The error will be caught by the nearest suspense boundary.\n      value = uncaughtSuspenseError;\n    }\n  } else {\n    // This is a regular error, not a Suspense wakeable.\n    if (getIsHydrating() && sourceFiber.mode & ConcurrentMode) {\n      markDidThrowWhileHydratingDEV();\n      const suspenseBoundary = getNearestSuspenseBoundaryToCapture(returnFiber);\n      // If the error was thrown during hydration, we may be able to recover by\n      // discarding the dehydrated content and switching to a client render.\n      // Instead of surfacing the error, find the nearest Suspense boundary\n      // and render it again without hydration.\n      if (suspenseBoundary !== null) {\n        if ((suspenseBoundary.flags & ShouldCapture) === NoFlags) {\n          // Set a flag to indicate that we should try rendering the normal\n          // children again, not the fallback.\n          suspenseBoundary.flags |= ForceClientRender;\n        }\n        markSuspenseBoundaryShouldCapture(\n          suspenseBoundary,\n          returnFiber,\n          sourceFiber,\n          root,\n          rootRenderLanes,\n        );\n\n        // Even though the user may not be affected by this error, we should\n        // still log it so it can be fixed.\n        queueHydrationError(createCapturedValueAtFiber(value, sourceFiber));\n        return;\n      }\n    } else {\n      // Otherwise, fall through to the error path.\n    }\n  }\n\n  value = createCapturedValueAtFiber(value, sourceFiber);\n  renderDidError(value);\n\n  // We didn't find a boundary that could handle this type of exception. Start\n  // over and traverse parent path again, this time treating the exception\n  // as an error.\n  let workInProgress = returnFiber;\n  do {\n    switch (workInProgress.tag) {\n      case HostRoot: {\n        const errorInfo = value;\n        workInProgress.flags |= ShouldCapture;\n        const lane = pickArbitraryLane(rootRenderLanes);\n        workInProgress.lanes = mergeLanes(workInProgress.lanes, lane);\n        const update = createRootErrorUpdate(workInProgress, errorInfo, lane);\n        enqueueCapturedUpdate(workInProgress, update);\n        return;\n      }\n      case ClassComponent:\n        // Capture and retry\n        const errorInfo = value;\n        const ctor = workInProgress.type;\n        const instance = workInProgress.stateNode;\n        if (\n          (workInProgress.flags & DidCapture) === NoFlags &&\n          (typeof ctor.getDerivedStateFromError === 'function' ||\n            (instance !== null &&\n              typeof instance.componentDidCatch === 'function' &&\n              !isAlreadyFailedLegacyErrorBoundary(instance)))\n        ) {\n          workInProgress.flags |= ShouldCapture;\n          const lane = pickArbitraryLane(rootRenderLanes);\n          workInProgress.lanes = mergeLanes(workInProgress.lanes, lane);\n          // Schedule the error boundary to re-render using updated state\n          const update = createClassErrorUpdate(\n            workInProgress,\n            errorInfo,\n            lane,\n          );\n          enqueueCapturedUpdate(workInProgress, update);\n          return;\n        }\n        break;\n      default:\n        break;\n    }\n    workInProgress = workInProgress.return;\n  } while (workInProgress !== null);\n}\n\nexport {throwException, createRootErrorUpdate, createClassErrorUpdate};\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\nimport type {FiberRoot} from './ReactInternalTypes';\nimport type {Lanes} from './ReactFiberLane.old';\nimport type {StackCursor} from './ReactFiberStack.old';\nimport type {Cache, SpawnedCachePool} from './ReactFiberCacheComponent.old';\nimport type {Transition} from './ReactFiberTracingMarkerComponent.old';\n\nimport {enableCache, enableTransitionTracing} from 'shared/ReactFeatureFlags';\nimport {isPrimaryRenderer} from './ReactFiberHostConfig';\nimport {createCursor, push, pop} from './ReactFiberStack.old';\nimport {\n  getWorkInProgressRoot,\n  getWorkInProgressTransitions,\n} from './ReactFiberWorkLoop.old';\nimport {\n  createCache,\n  retainCache,\n  CacheContext,\n} from './ReactFiberCacheComponent.old';\n\n// When retrying a Suspense/Offscreen boundary, we restore the cache that was\n// used during the previous render by placing it here, on the stack.\nconst resumedCache: StackCursor<Cache | null> = createCursor(null);\n\n// During the render/synchronous commit phase, we don't actually process the\n// transitions. Therefore, we want to lazily combine transitions. Instead of\n// comparing the arrays of transitions when we combine them and storing them\n// and filtering out the duplicates, we will instead store the unprocessed transitions\n// in an array and actually filter them in the passive phase.\nconst transitionStack: StackCursor<Array<Transition> | null> = createCursor(\n  null,\n);\n\nfunction peekCacheFromPool(): Cache | null {\n  if (!enableCache) {\n    return (null: any);\n  }\n\n  // Check if the cache pool already has a cache we can use.\n\n  // If we're rendering inside a Suspense boundary that is currently hidden,\n  // we should use the same cache that we used during the previous render, if\n  // one exists.\n  const cacheResumedFromPreviousRender = resumedCache.current;\n  if (cacheResumedFromPreviousRender !== null) {\n    return cacheResumedFromPreviousRender;\n  }\n\n  // Otherwise, check the root's cache pool.\n  const root = (getWorkInProgressRoot(): any);\n  const cacheFromRootCachePool = root.pooledCache;\n\n  return cacheFromRootCachePool;\n}\n\nexport function requestCacheFromPool(renderLanes: Lanes): Cache {\n  // Similar to previous function, except if there's not already a cache in the\n  // pool, we allocate a new one.\n  const cacheFromPool = peekCacheFromPool();\n  if (cacheFromPool !== null) {\n    return cacheFromPool;\n  }\n\n  // Create a fresh cache and add it to the root cache pool. A cache can have\n  // multiple owners:\n  // - A cache pool that lives on the FiberRoot. This is where all fresh caches\n  //   are originally created (TODO: except during refreshes, until we implement\n  //   this correctly). The root takes ownership immediately when the cache is\n  //   created. Conceptually, root.pooledCache is an Option<Arc<Cache>> (owned),\n  //   and the return value of this function is a &Arc<Cache> (borrowed).\n  // - One of several fiber types: host root, cache boundary, suspense\n  //   component. These retain and release in the commit phase.\n\n  const root = (getWorkInProgressRoot(): any);\n  const freshCache = createCache();\n  root.pooledCache = freshCache;\n  retainCache(freshCache);\n  if (freshCache !== null) {\n    root.pooledCacheLanes |= renderLanes;\n  }\n  return freshCache;\n}\n\nexport function pushRootTransition(\n  workInProgress: Fiber,\n  root: FiberRoot,\n  renderLanes: Lanes,\n) {\n  if (enableTransitionTracing) {\n    const rootTransitions = getWorkInProgressTransitions();\n    push(transitionStack, rootTransitions, workInProgress);\n  }\n}\n\nexport function popRootTransition(\n  workInProgress: Fiber,\n  root: FiberRoot,\n  renderLanes: Lanes,\n) {\n  if (enableTransitionTracing) {\n    pop(transitionStack, workInProgress);\n  }\n}\n\nexport function pushTransition(\n  offscreenWorkInProgress: Fiber,\n  prevCachePool: SpawnedCachePool | null,\n  newTransitions: Array<Transition> | null,\n): void {\n  if (enableCache) {\n    if (prevCachePool === null) {\n      push(resumedCache, resumedCache.current, offscreenWorkInProgress);\n    } else {\n      push(resumedCache, prevCachePool.pool, offscreenWorkInProgress);\n    }\n  }\n\n  if (enableTransitionTracing) {\n    if (transitionStack.current === null) {\n      push(transitionStack, newTransitions, offscreenWorkInProgress);\n    } else if (newTransitions === null) {\n      push(transitionStack, transitionStack.current, offscreenWorkInProgress);\n    } else {\n      push(\n        transitionStack,\n        transitionStack.current.concat(newTransitions),\n        offscreenWorkInProgress,\n      );\n    }\n  }\n}\n\nexport function popTransition(workInProgress: Fiber, current: Fiber | null) {\n  if (current !== null) {\n    if (enableCache) {\n      pop(resumedCache, workInProgress);\n    }\n\n    if (enableTransitionTracing) {\n      pop(transitionStack, workInProgress);\n    }\n  }\n}\n\nexport function getSuspendedTransitions(): Array<Transition> | null {\n  if (!enableTransitionTracing) {\n    return null;\n  }\n\n  return transitionStack.current;\n}\n\nexport function getSuspendedCache(): SpawnedCachePool | null {\n  if (!enableCache) {\n    return null;\n  }\n  // This function is called when a Suspense boundary suspends. It returns the\n  // cache that would have been used to render fresh data during this render,\n  // if there was any, so that we can resume rendering with the same cache when\n  // we receive more data.\n  const cacheFromPool = peekCacheFromPool();\n  if (cacheFromPool === null) {\n    return null;\n  }\n\n  return {\n    // We must also save the parent, so that when we resume we can detect\n    // a refresh.\n    parent: isPrimaryRenderer\n      ? CacheContext._currentValue\n      : CacheContext._currentValue2,\n    pool: cacheFromPool,\n  };\n}\n\nexport function getOffscreenDeferredCache(): SpawnedCachePool | null {\n  if (!enableCache) {\n    return null;\n  }\n\n  const cacheFromPool = peekCacheFromPool();\n  if (cacheFromPool === null) {\n    return null;\n  }\n\n  return {\n    // We must also store the parent, so that when we resume we can detect\n    // a refresh.\n    parent: isPrimaryRenderer\n      ? CacheContext._currentValue\n      : CacheContext._currentValue2,\n    pool: cacheFromPool,\n  };\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {\n  ReactProviderType,\n  ReactContext,\n  ReactNodeList,\n} from 'shared/ReactTypes';\nimport type {LazyComponent as LazyComponentType} from 'react/src/ReactLazy';\nimport type {Fiber, FiberRoot} from './ReactInternalTypes';\nimport type {TypeOfMode} from './ReactTypeOfMode';\nimport type {Lanes, Lane} from './ReactFiberLane.old';\nimport type {MutableSource} from 'shared/ReactTypes';\nimport type {\n  SuspenseState,\n  SuspenseListRenderState,\n  SuspenseListTailMode,\n} from './ReactFiberSuspenseComponent.old';\nimport type {SuspenseContext} from './ReactFiberSuspenseContext.old';\nimport type {\n  OffscreenProps,\n  OffscreenState,\n  OffscreenQueue,\n} from './ReactFiberOffscreenComponent';\nimport type {\n  Cache,\n  CacheComponentState,\n  SpawnedCachePool,\n} from './ReactFiberCacheComponent.old';\nimport type {UpdateQueue} from './ReactFiberClassUpdateQueue.old';\nimport type {RootState} from './ReactFiberRoot.old';\nimport {\n  enableSuspenseAvoidThisFallback,\n  enableCPUSuspense,\n  enableUseMutableSource,\n} from 'shared/ReactFeatureFlags';\n\nimport checkPropTypes from 'shared/checkPropTypes';\nimport {\n  markComponentRenderStarted,\n  markComponentRenderStopped,\n  setIsStrictModeForDevtools,\n} from './ReactFiberDevToolsHook.old';\nimport {\n  IndeterminateComponent,\n  FunctionComponent,\n  ClassComponent,\n  HostRoot,\n  HostComponent,\n  HostText,\n  HostPortal,\n  ForwardRef,\n  Fragment,\n  Mode,\n  ContextProvider,\n  ContextConsumer,\n  Profiler,\n  SuspenseComponent,\n  SuspenseListComponent,\n  MemoComponent,\n  SimpleMemoComponent,\n  LazyComponent,\n  IncompleteClassComponent,\n  ScopeComponent,\n  OffscreenComponent,\n  LegacyHiddenComponent,\n  CacheComponent,\n  TracingMarkerComponent,\n} from './ReactWorkTags';\nimport {\n  NoFlags,\n  PerformedWork,\n  Placement,\n  Hydrating,\n  ContentReset,\n  DidCapture,\n  Update,\n  Ref,\n  RefStatic,\n  ChildDeletion,\n  ForceUpdateForLegacySuspense,\n  StaticMask,\n  ShouldCapture,\n  ForceClientRender,\n} from './ReactFiberFlags';\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\nimport {\n  debugRenderPhaseSideEffectsForStrictMode,\n  disableLegacyContext,\n  disableModulePatternComponents,\n  enableProfilerCommitHooks,\n  enableProfilerTimer,\n  warnAboutDefaultPropsOnFunctionComponents,\n  enableScopeAPI,\n  enableCache,\n  enableLazyContextPropagation,\n  enableSuspenseLayoutEffectSemantics,\n  enableSchedulingProfiler,\n  enableTransitionTracing,\n  enableLegacyHidden,\n} from 'shared/ReactFeatureFlags';\nimport isArray from 'shared/isArray';\nimport shallowEqual from 'shared/shallowEqual';\nimport getComponentNameFromFiber from 'react-reconciler/src/getComponentNameFromFiber';\nimport getComponentNameFromType from 'shared/getComponentNameFromType';\nimport ReactStrictModeWarnings from './ReactStrictModeWarnings.old';\nimport {REACT_LAZY_TYPE, getIteratorFn} from 'shared/ReactSymbols';\nimport {\n  getCurrentFiberOwnerNameInDevOrNull,\n  setIsRendering,\n} from './ReactCurrentFiber';\nimport {\n  resolveFunctionForHotReloading,\n  resolveForwardRefForHotReloading,\n  resolveClassForHotReloading,\n} from './ReactFiberHotReloading.old';\n\nimport {\n  mountChildFibers,\n  reconcileChildFibers,\n  cloneChildFibers,\n} from './ReactChildFiber.old';\nimport {\n  processUpdateQueue,\n  cloneUpdateQueue,\n  initializeUpdateQueue,\n  enqueueCapturedUpdate,\n} from './ReactFiberClassUpdateQueue.old';\nimport {\n  NoLane,\n  NoLanes,\n  SyncLane,\n  OffscreenLane,\n  DefaultHydrationLane,\n  SomeRetryLane,\n  NoTimestamp,\n  includesSomeLane,\n  laneToLanes,\n  removeLanes,\n  mergeLanes,\n  getBumpedLaneForHydration,\n  pickArbitraryLane,\n} from './ReactFiberLane.old';\nimport {\n  ConcurrentMode,\n  NoMode,\n  ProfileMode,\n  StrictLegacyMode,\n} from './ReactTypeOfMode';\nimport {\n  shouldSetTextContent,\n  isSuspenseInstancePending,\n  isSuspenseInstanceFallback,\n  getSuspenseInstanceFallbackErrorDetails,\n  registerSuspenseInstanceRetry,\n  supportsHydration,\n  isPrimaryRenderer,\n} from './ReactFiberHostConfig';\nimport type {SuspenseInstance} from './ReactFiberHostConfig';\nimport {shouldError, shouldSuspend} from './ReactFiberReconciler';\nimport {pushHostContext, pushHostContainer} from './ReactFiberHostContext.old';\nimport {\n  suspenseStackCursor,\n  pushSuspenseContext,\n  InvisibleParentSuspenseContext,\n  ForceSuspenseFallback,\n  hasSuspenseContext,\n  setDefaultShallowSuspenseContext,\n  addSubtreeSuspenseContext,\n  setShallowSuspenseContext,\n} from './ReactFiberSuspenseContext.old';\nimport {findFirstSuspended} from './ReactFiberSuspenseComponent.old';\nimport {\n  pushProvider,\n  propagateContextChange,\n  lazilyPropagateParentContextChanges,\n  propagateParentContextChangesToDeferredTree,\n  checkIfContextChanged,\n  readContext,\n  prepareToReadContext,\n  scheduleContextWorkOnParentPath,\n} from './ReactFiberNewContext.old';\nimport {\n  renderWithHooks,\n  checkDidRenderIdHook,\n  bailoutHooks,\n} from './ReactFiberHooks.old';\nimport {stopProfilerTimerIfRunning} from './ReactProfilerTimer.old';\nimport {\n  getMaskedContext,\n  getUnmaskedContext,\n  hasContextChanged as hasLegacyContextChanged,\n  pushContextProvider as pushLegacyContextProvider,\n  isContextProvider as isLegacyContextProvider,\n  pushTopLevelContextObject,\n  invalidateContextProvider,\n} from './ReactFiberContext.old';\nimport {\n  getIsHydrating,\n  enterHydrationState,\n  reenterHydrationStateFromDehydratedSuspenseInstance,\n  resetHydrationState,\n  tryToClaimNextHydratableInstance,\n  warnIfHydrating,\n  queueHydrationError,\n} from './ReactFiberHydrationContext.old';\nimport {\n  adoptClassInstance,\n  constructClassInstance,\n  mountClassInstance,\n  resumeMountClassInstance,\n  updateClassInstance,\n} from './ReactFiberClassComponent.old';\nimport {resolveDefaultProps} from './ReactFiberLazyComponent.old';\nimport {\n  resolveLazyComponentTag,\n  createFiberFromTypeAndProps,\n  createFiberFromFragment,\n  createFiberFromOffscreen,\n  createWorkInProgress,\n  isSimpleFunctionComponent,\n} from './ReactFiber.old';\nimport {\n  retryDehydratedSuspenseBoundary,\n  scheduleUpdateOnFiber,\n  renderDidSuspendDelayIfPossible,\n  markSkippedUpdateLanes,\n  getWorkInProgressRoot,\n  pushRenderLanes,\n} from './ReactFiberWorkLoop.old';\nimport {enqueueConcurrentRenderForLane} from './ReactFiberConcurrentUpdates.old';\nimport {setWorkInProgressVersion} from './ReactMutableSource.old';\nimport {pushCacheProvider, CacheContext} from './ReactFiberCacheComponent.old';\nimport {\n  createCapturedValue,\n  createCapturedValueAtFiber,\n  type CapturedValue,\n} from './ReactCapturedValue';\nimport {createClassErrorUpdate} from './ReactFiberThrow.old';\nimport is from 'shared/objectIs';\nimport {\n  getForksAtLevel,\n  isForkedChild,\n  pushTreeId,\n  pushMaterializedTreeId,\n} from './ReactFiberTreeContext.old';\nimport {\n  requestCacheFromPool,\n  pushRootTransition,\n  getSuspendedCache,\n  pushTransition,\n  getOffscreenDeferredCache,\n  getSuspendedTransitions,\n} from './ReactFiberTransition.old';\n\nconst ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\n\nlet didReceiveUpdate: boolean = false;\n\nlet didWarnAboutBadClass;\nlet didWarnAboutModulePatternComponent;\nlet didWarnAboutContextTypeOnFunctionComponent;\nlet didWarnAboutGetDerivedStateOnFunctionComponent;\nlet didWarnAboutFunctionRefs;\nexport let didWarnAboutReassigningProps;\nlet didWarnAboutRevealOrder;\nlet didWarnAboutTailOptions;\nlet didWarnAboutDefaultPropsOnFunctionComponent;\n\nif (__DEV__) {\n  didWarnAboutBadClass = {};\n  didWarnAboutModulePatternComponent = {};\n  didWarnAboutContextTypeOnFunctionComponent = {};\n  didWarnAboutGetDerivedStateOnFunctionComponent = {};\n  didWarnAboutFunctionRefs = {};\n  didWarnAboutReassigningProps = false;\n  didWarnAboutRevealOrder = {};\n  didWarnAboutTailOptions = {};\n  didWarnAboutDefaultPropsOnFunctionComponent = {};\n}\n\nexport function reconcileChildren(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  nextChildren: any,\n  renderLanes: Lanes,\n) {\n  if (current === null) {\n    // If this is a fresh new component that hasn't been rendered yet, we\n    // won't update its child set by applying minimal side-effects. Instead,\n    // we will add them all to the child before it gets rendered. That means\n    // we can optimize this reconciliation pass by not tracking side-effects.\n    workInProgress.child = mountChildFibers(\n      workInProgress,\n      null,\n      nextChildren,\n      renderLanes,\n    );\n  } else {\n    // If the current child is the same as the work in progress, it means that\n    // we haven't yet started any work on these children. Therefore, we use\n    // the clone algorithm to create a copy of all the current children.\n\n    // If we had any progressed work already, that is invalid at this point so\n    // let's throw it out.\n    workInProgress.child = reconcileChildFibers(\n      workInProgress,\n      current.child,\n      nextChildren,\n      renderLanes,\n    );\n  }\n}\n\nfunction forceUnmountCurrentAndReconcile(\n  current: Fiber,\n  workInProgress: Fiber,\n  nextChildren: any,\n  renderLanes: Lanes,\n) {\n  // This function is fork of reconcileChildren. It's used in cases where we\n  // want to reconcile without matching against the existing set. This has the\n  // effect of all current children being unmounted; even if the type and key\n  // are the same, the old child is unmounted and a new child is created.\n  //\n  // To do this, we're going to go through the reconcile algorithm twice. In\n  // the first pass, we schedule a deletion for all the current children by\n  // passing null.\n  workInProgress.child = reconcileChildFibers(\n    workInProgress,\n    current.child,\n    null,\n    renderLanes,\n  );\n  // In the second pass, we mount the new children. The trick here is that we\n  // pass null in place of where we usually pass the current child set. This has\n  // the effect of remounting all children regardless of whether their\n  // identities match.\n  workInProgress.child = reconcileChildFibers(\n    workInProgress,\n    null,\n    nextChildren,\n    renderLanes,\n  );\n}\n\nfunction updateForwardRef(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  Component: any,\n  nextProps: any,\n  renderLanes: Lanes,\n) {\n  // TODO: current can be non-null here even if the component\n  // hasn't yet mounted. This happens after the first render suspends.\n  // We'll need to figure out if this is fine or can cause issues.\n\n  if (__DEV__) {\n    if (workInProgress.type !== workInProgress.elementType) {\n      // Lazy component props can't be validated in createElement\n      // because they're only guaranteed to be resolved here.\n      const innerPropTypes = Component.propTypes;\n      if (innerPropTypes) {\n        checkPropTypes(\n          innerPropTypes,\n          nextProps, // Resolved props\n          'prop',\n          getComponentNameFromType(Component),\n        );\n      }\n    }\n  }\n\n  const render = Component.render;\n  const ref = workInProgress.ref;\n\n  // The rest is a fork of updateFunctionComponent\n  let nextChildren;\n  let hasId;\n  prepareToReadContext(workInProgress, renderLanes);\n  if (enableSchedulingProfiler) {\n    markComponentRenderStarted(workInProgress);\n  }\n  if (__DEV__) {\n    ReactCurrentOwner.current = workInProgress;\n    setIsRendering(true);\n    nextChildren = renderWithHooks(\n      current,\n      workInProgress,\n      render,\n      nextProps,\n      ref,\n      renderLanes,\n    );\n    hasId = checkDidRenderIdHook();\n    if (\n      debugRenderPhaseSideEffectsForStrictMode &&\n      workInProgress.mode & StrictLegacyMode\n    ) {\n      setIsStrictModeForDevtools(true);\n      try {\n        nextChildren = renderWithHooks(\n          current,\n          workInProgress,\n          render,\n          nextProps,\n          ref,\n          renderLanes,\n        );\n        hasId = checkDidRenderIdHook();\n      } finally {\n        setIsStrictModeForDevtools(false);\n      }\n    }\n    setIsRendering(false);\n  } else {\n    nextChildren = renderWithHooks(\n      current,\n      workInProgress,\n      render,\n      nextProps,\n      ref,\n      renderLanes,\n    );\n    hasId = checkDidRenderIdHook();\n  }\n  if (enableSchedulingProfiler) {\n    markComponentRenderStopped();\n  }\n\n  if (current !== null && !didReceiveUpdate) {\n    bailoutHooks(current, workInProgress, renderLanes);\n    return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n  }\n\n  if (getIsHydrating() && hasId) {\n    pushMaterializedTreeId(workInProgress);\n  }\n\n  // React DevTools reads this flag.\n  workInProgress.flags |= PerformedWork;\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  return workInProgress.child;\n}\n\nfunction updateMemoComponent(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  Component: any,\n  nextProps: any,\n  renderLanes: Lanes,\n): null | Fiber {\n  if (current === null) {\n    const type = Component.type;\n    if (\n      isSimpleFunctionComponent(type) &&\n      Component.compare === null &&\n      // SimpleMemoComponent codepath doesn't resolve outer props either.\n      Component.defaultProps === undefined\n    ) {\n      let resolvedType = type;\n      if (__DEV__) {\n        resolvedType = resolveFunctionForHotReloading(type);\n      }\n      // If this is a plain function component without default props,\n      // and with only the default shallow comparison, we upgrade it\n      // to a SimpleMemoComponent to allow fast path updates.\n      workInProgress.tag = SimpleMemoComponent;\n      workInProgress.type = resolvedType;\n      if (__DEV__) {\n        validateFunctionComponentInDev(workInProgress, type);\n      }\n      return updateSimpleMemoComponent(\n        current,\n        workInProgress,\n        resolvedType,\n        nextProps,\n        renderLanes,\n      );\n    }\n    if (__DEV__) {\n      const innerPropTypes = type.propTypes;\n      if (innerPropTypes) {\n        // Inner memo component props aren't currently validated in createElement.\n        // We could move it there, but we'd still need this for lazy code path.\n        checkPropTypes(\n          innerPropTypes,\n          nextProps, // Resolved props\n          'prop',\n          getComponentNameFromType(type),\n        );\n      }\n    }\n    const child = createFiberFromTypeAndProps(\n      Component.type,\n      null,\n      nextProps,\n      workInProgress,\n      workInProgress.mode,\n      renderLanes,\n    );\n    child.ref = workInProgress.ref;\n    child.return = workInProgress;\n    workInProgress.child = child;\n    return child;\n  }\n  if (__DEV__) {\n    const type = Component.type;\n    const innerPropTypes = type.propTypes;\n    if (innerPropTypes) {\n      // Inner memo component props aren't currently validated in createElement.\n      // We could move it there, but we'd still need this for lazy code path.\n      checkPropTypes(\n        innerPropTypes,\n        nextProps, // Resolved props\n        'prop',\n        getComponentNameFromType(type),\n      );\n    }\n  }\n  const currentChild = ((current.child: any): Fiber); // This is always exactly one child\n  const hasScheduledUpdateOrContext = checkScheduledUpdateOrContext(\n    current,\n    renderLanes,\n  );\n  if (!hasScheduledUpdateOrContext) {\n    // This will be the props with resolved defaultProps,\n    // unlike current.memoizedProps which will be the unresolved ones.\n    const prevProps = currentChild.memoizedProps;\n    // Default to shallow comparison\n    let compare = Component.compare;\n    compare = compare !== null ? compare : shallowEqual;\n    if (compare(prevProps, nextProps) && current.ref === workInProgress.ref) {\n      return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n    }\n  }\n  // React DevTools reads this flag.\n  workInProgress.flags |= PerformedWork;\n  const newChild = createWorkInProgress(currentChild, nextProps);\n  newChild.ref = workInProgress.ref;\n  newChild.return = workInProgress;\n  workInProgress.child = newChild;\n  return newChild;\n}\n\nfunction updateSimpleMemoComponent(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  Component: any,\n  nextProps: any,\n  renderLanes: Lanes,\n): null | Fiber {\n  // TODO: current can be non-null here even if the component\n  // hasn't yet mounted. This happens when the inner render suspends.\n  // We'll need to figure out if this is fine or can cause issues.\n\n  if (__DEV__) {\n    if (workInProgress.type !== workInProgress.elementType) {\n      // Lazy component props can't be validated in createElement\n      // because they're only guaranteed to be resolved here.\n      let outerMemoType = workInProgress.elementType;\n      if (outerMemoType.$$typeof === REACT_LAZY_TYPE) {\n        // We warn when you define propTypes on lazy()\n        // so let's just skip over it to find memo() outer wrapper.\n        // Inner props for memo are validated later.\n        const lazyComponent: LazyComponentType<any, any> = outerMemoType;\n        const payload = lazyComponent._payload;\n        const init = lazyComponent._init;\n        try {\n          outerMemoType = init(payload);\n        } catch (x) {\n          outerMemoType = null;\n        }\n        // Inner propTypes will be validated in the function component path.\n        const outerPropTypes = outerMemoType && (outerMemoType: any).propTypes;\n        if (outerPropTypes) {\n          checkPropTypes(\n            outerPropTypes,\n            nextProps, // Resolved (SimpleMemoComponent has no defaultProps)\n            'prop',\n            getComponentNameFromType(outerMemoType),\n          );\n        }\n      }\n    }\n  }\n  if (current !== null) {\n    const prevProps = current.memoizedProps;\n    if (\n      shallowEqual(prevProps, nextProps) &&\n      current.ref === workInProgress.ref &&\n      // Prevent bailout if the implementation changed due to hot reload.\n      (__DEV__ ? workInProgress.type === current.type : true)\n    ) {\n      didReceiveUpdate = false;\n\n      // The props are shallowly equal. Reuse the previous props object, like we\n      // would during a normal fiber bailout.\n      //\n      // We don't have strong guarantees that the props object is referentially\n      // equal during updates where we can't bail out anyway — like if the props\n      // are shallowly equal, but there's a local state or context update in the\n      // same batch.\n      //\n      // However, as a principle, we should aim to make the behavior consistent\n      // across different ways of memoizing a component. For example, React.memo\n      // has a different internal Fiber layout if you pass a normal function\n      // component (SimpleMemoComponent) versus if you pass a different type\n      // like forwardRef (MemoComponent). But this is an implementation detail.\n      // Wrapping a component in forwardRef (or React.lazy, etc) shouldn't\n      // affect whether the props object is reused during a bailout.\n      workInProgress.pendingProps = nextProps = prevProps;\n\n      if (!checkScheduledUpdateOrContext(current, renderLanes)) {\n        // The pending lanes were cleared at the beginning of beginWork. We're\n        // about to bail out, but there might be other lanes that weren't\n        // included in the current render. Usually, the priority level of the\n        // remaining updates is accumulated during the evaluation of the\n        // component (i.e. when processing the update queue). But since since\n        // we're bailing out early *without* evaluating the component, we need\n        // to account for it here, too. Reset to the value of the current fiber.\n        // NOTE: This only applies to SimpleMemoComponent, not MemoComponent,\n        // because a MemoComponent fiber does not have hooks or an update queue;\n        // rather, it wraps around an inner component, which may or may not\n        // contains hooks.\n        // TODO: Move the reset at in beginWork out of the common path so that\n        // this is no longer necessary.\n        workInProgress.lanes = current.lanes;\n        return bailoutOnAlreadyFinishedWork(\n          current,\n          workInProgress,\n          renderLanes,\n        );\n      } else if ((current.flags & ForceUpdateForLegacySuspense) !== NoFlags) {\n        // This is a special case that only exists for legacy mode.\n        // See https://github.com/facebook/react/pull/19216.\n        didReceiveUpdate = true;\n      }\n    }\n  }\n  return updateFunctionComponent(\n    current,\n    workInProgress,\n    Component,\n    nextProps,\n    renderLanes,\n  );\n}\n\nfunction updateOffscreenComponent(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  renderLanes: Lanes,\n) {\n  const nextProps: OffscreenProps = workInProgress.pendingProps;\n  const nextChildren = nextProps.children;\n\n  const prevState: OffscreenState | null =\n    current !== null ? current.memoizedState : null;\n\n  if (\n    nextProps.mode === 'hidden' ||\n    (enableLegacyHidden && nextProps.mode === 'unstable-defer-without-hiding')\n  ) {\n    // Rendering a hidden tree.\n    if ((workInProgress.mode & ConcurrentMode) === NoMode) {\n      // In legacy sync mode, don't defer the subtree. Render it now.\n      // TODO: Consider how Offscreen should work with transitions in the future\n      const nextState: OffscreenState = {\n        baseLanes: NoLanes,\n        cachePool: null,\n        transitions: null,\n      };\n      workInProgress.memoizedState = nextState;\n      if (enableCache) {\n        // push the cache pool even though we're going to bail out\n        // because otherwise there'd be a context mismatch\n        if (current !== null) {\n          pushTransition(workInProgress, null, null);\n        }\n      }\n      pushRenderLanes(workInProgress, renderLanes);\n    } else if (!includesSomeLane(renderLanes, (OffscreenLane: Lane))) {\n      let spawnedCachePool: SpawnedCachePool | null = null;\n      // We're hidden, and we're not rendering at Offscreen. We will bail out\n      // and resume this tree later.\n      let nextBaseLanes;\n      if (prevState !== null) {\n        const prevBaseLanes = prevState.baseLanes;\n        nextBaseLanes = mergeLanes(prevBaseLanes, renderLanes);\n        if (enableCache) {\n          // Save the cache pool so we can resume later.\n          spawnedCachePool = getOffscreenDeferredCache();\n        }\n      } else {\n        nextBaseLanes = renderLanes;\n      }\n\n      // Schedule this fiber to re-render at offscreen priority. Then bailout.\n      workInProgress.lanes = workInProgress.childLanes = laneToLanes(\n        OffscreenLane,\n      );\n      const nextState: OffscreenState = {\n        baseLanes: nextBaseLanes,\n        cachePool: spawnedCachePool,\n        transitions: null,\n      };\n      workInProgress.memoizedState = nextState;\n      workInProgress.updateQueue = null;\n      if (enableCache) {\n        // push the cache pool even though we're going to bail out\n        // because otherwise there'd be a context mismatch\n        if (current !== null) {\n          pushTransition(workInProgress, null, null);\n        }\n      }\n\n      // We're about to bail out, but we need to push this to the stack anyway\n      // to avoid a push/pop misalignment.\n      pushRenderLanes(workInProgress, nextBaseLanes);\n\n      if (enableLazyContextPropagation && current !== null) {\n        // Since this tree will resume rendering in a separate render, we need\n        // to propagate parent contexts now so we don't lose track of which\n        // ones changed.\n        propagateParentContextChangesToDeferredTree(\n          current,\n          workInProgress,\n          renderLanes,\n        );\n      }\n\n      return null;\n    } else {\n      // This is the second render. The surrounding visible content has already\n      // committed. Now we resume rendering the hidden tree.\n\n      // Rendering at offscreen, so we can clear the base lanes.\n      const nextState: OffscreenState = {\n        baseLanes: NoLanes,\n        cachePool: null,\n        transitions: null,\n      };\n      workInProgress.memoizedState = nextState;\n      // Push the lanes that were skipped when we bailed out.\n      const subtreeRenderLanes =\n        prevState !== null ? prevState.baseLanes : renderLanes;\n      if (enableCache && current !== null) {\n        // If the render that spawned this one accessed the cache pool, resume\n        // using the same cache. Unless the parent changed, since that means\n        // there was a refresh.\n        const prevCachePool = prevState !== null ? prevState.cachePool : null;\n        // TODO: Consider if and how Offscreen pre-rendering should\n        // be attributed to the transition that spawned it\n        pushTransition(workInProgress, prevCachePool, null);\n      }\n\n      pushRenderLanes(workInProgress, subtreeRenderLanes);\n    }\n  } else {\n    // Rendering a visible tree.\n    let subtreeRenderLanes;\n    if (prevState !== null) {\n      // We're going from hidden -> visible.\n\n      subtreeRenderLanes = mergeLanes(prevState.baseLanes, renderLanes);\n\n      let prevCachePool = null;\n      if (enableCache) {\n        // If the render that spawned this one accessed the cache pool, resume\n        // using the same cache. Unless the parent changed, since that means\n        // there was a refresh.\n        prevCachePool = prevState.cachePool;\n      }\n\n      pushTransition(workInProgress, prevCachePool, null);\n\n      // Since we're not hidden anymore, reset the state\n      workInProgress.memoizedState = null;\n    } else {\n      // We weren't previously hidden, and we still aren't, so there's nothing\n      // special to do. Need to push to the stack regardless, though, to avoid\n      // a push/pop misalignment.\n      subtreeRenderLanes = renderLanes;\n\n      if (enableCache) {\n        // If the render that spawned this one accessed the cache pool, resume\n        // using the same cache. Unless the parent changed, since that means\n        // there was a refresh.\n        if (current !== null) {\n          pushTransition(workInProgress, null, null);\n        }\n      }\n    }\n    pushRenderLanes(workInProgress, subtreeRenderLanes);\n  }\n\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  return workInProgress.child;\n}\n\n// Note: These happen to have identical begin phases, for now. We shouldn't hold\n// ourselves to this constraint, though. If the behavior diverges, we should\n// fork the function.\nconst updateLegacyHiddenComponent = updateOffscreenComponent;\n\nfunction updateCacheComponent(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  renderLanes: Lanes,\n) {\n  if (!enableCache) {\n    return null;\n  }\n\n  prepareToReadContext(workInProgress, renderLanes);\n  const parentCache = readContext(CacheContext);\n\n  if (current === null) {\n    // Initial mount. Request a fresh cache from the pool.\n    const freshCache = requestCacheFromPool(renderLanes);\n    const initialState: CacheComponentState = {\n      parent: parentCache,\n      cache: freshCache,\n    };\n    workInProgress.memoizedState = initialState;\n    initializeUpdateQueue(workInProgress);\n    pushCacheProvider(workInProgress, freshCache);\n  } else {\n    // Check for updates\n    if (includesSomeLane(current.lanes, renderLanes)) {\n      cloneUpdateQueue(current, workInProgress);\n      processUpdateQueue(workInProgress, null, null, renderLanes);\n    }\n    const prevState: CacheComponentState = current.memoizedState;\n    const nextState: CacheComponentState = workInProgress.memoizedState;\n\n    // Compare the new parent cache to the previous to see detect there was\n    // a refresh.\n    if (prevState.parent !== parentCache) {\n      // Refresh in parent. Update the parent.\n      const derivedState: CacheComponentState = {\n        parent: parentCache,\n        cache: parentCache,\n      };\n\n      // Copied from getDerivedStateFromProps implementation. Once the update\n      // queue is empty, persist the derived state onto the base state.\n      workInProgress.memoizedState = derivedState;\n      if (workInProgress.lanes === NoLanes) {\n        const updateQueue: UpdateQueue<any> = (workInProgress.updateQueue: any);\n        workInProgress.memoizedState = updateQueue.baseState = derivedState;\n      }\n\n      pushCacheProvider(workInProgress, parentCache);\n      // No need to propagate a context change because the refreshed parent\n      // already did.\n    } else {\n      // The parent didn't refresh. Now check if this cache did.\n      const nextCache = nextState.cache;\n      pushCacheProvider(workInProgress, nextCache);\n      if (nextCache !== prevState.cache) {\n        // This cache refreshed. Propagate a context change.\n        propagateContextChange(workInProgress, CacheContext, renderLanes);\n      }\n    }\n  }\n\n  const nextChildren = workInProgress.pendingProps.children;\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  return workInProgress.child;\n}\n\n// This should only be called if the name changes\nfunction updateTracingMarkerComponent(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  renderLanes: Lanes,\n) {\n  if (!enableTransitionTracing) {\n    return null;\n  }\n\n  const nextChildren = workInProgress.pendingProps.children;\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  return workInProgress.child;\n}\n\nfunction updateFragment(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  renderLanes: Lanes,\n) {\n  const nextChildren = workInProgress.pendingProps;\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  return workInProgress.child;\n}\n\nfunction updateMode(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  renderLanes: Lanes,\n) {\n  const nextChildren = workInProgress.pendingProps.children;\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  return workInProgress.child;\n}\n\nfunction updateProfiler(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  renderLanes: Lanes,\n) {\n  if (enableProfilerTimer) {\n    workInProgress.flags |= Update;\n\n    if (enableProfilerCommitHooks) {\n      // Reset effect durations for the next eventual effect phase.\n      // These are reset during render to allow the DevTools commit hook a chance to read them,\n      const stateNode = workInProgress.stateNode;\n      stateNode.effectDuration = 0;\n      stateNode.passiveEffectDuration = 0;\n    }\n  }\n  const nextProps = workInProgress.pendingProps;\n  const nextChildren = nextProps.children;\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  return workInProgress.child;\n}\n\nfunction markRef(current: Fiber | null, workInProgress: Fiber) {\n  const ref = workInProgress.ref;\n  if (\n    (current === null && ref !== null) ||\n    (current !== null && current.ref !== ref)\n  ) {\n    // Schedule a Ref effect\n    workInProgress.flags |= Ref;\n    if (enableSuspenseLayoutEffectSemantics) {\n      workInProgress.flags |= RefStatic;\n    }\n  }\n}\n\nfunction updateFunctionComponent(\n  current,\n  workInProgress,\n  Component,\n  nextProps: any,\n  renderLanes,\n) {\n  if (__DEV__) {\n    if (workInProgress.type !== workInProgress.elementType) {\n      // Lazy component props can't be validated in createElement\n      // because they're only guaranteed to be resolved here.\n      const innerPropTypes = Component.propTypes;\n      if (innerPropTypes) {\n        checkPropTypes(\n          innerPropTypes,\n          nextProps, // Resolved props\n          'prop',\n          getComponentNameFromType(Component),\n        );\n      }\n    }\n  }\n\n  let context;\n  if (!disableLegacyContext) {\n    const unmaskedContext = getUnmaskedContext(workInProgress, Component, true);\n    context = getMaskedContext(workInProgress, unmaskedContext);\n  }\n\n  let nextChildren;\n  let hasId;\n  prepareToReadContext(workInProgress, renderLanes);\n  if (enableSchedulingProfiler) {\n    markComponentRenderStarted(workInProgress);\n  }\n  if (__DEV__) {\n    ReactCurrentOwner.current = workInProgress;\n    setIsRendering(true);\n    nextChildren = renderWithHooks(\n      current,\n      workInProgress,\n      Component,\n      nextProps,\n      context,\n      renderLanes,\n    );\n    hasId = checkDidRenderIdHook();\n    if (\n      debugRenderPhaseSideEffectsForStrictMode &&\n      workInProgress.mode & StrictLegacyMode\n    ) {\n      setIsStrictModeForDevtools(true);\n      try {\n        nextChildren = renderWithHooks(\n          current,\n          workInProgress,\n          Component,\n          nextProps,\n          context,\n          renderLanes,\n        );\n        hasId = checkDidRenderIdHook();\n      } finally {\n        setIsStrictModeForDevtools(false);\n      }\n    }\n    setIsRendering(false);\n  } else {\n    nextChildren = renderWithHooks(\n      current,\n      workInProgress,\n      Component,\n      nextProps,\n      context,\n      renderLanes,\n    );\n    hasId = checkDidRenderIdHook();\n  }\n  if (enableSchedulingProfiler) {\n    markComponentRenderStopped();\n  }\n\n  if (current !== null && !didReceiveUpdate) {\n    bailoutHooks(current, workInProgress, renderLanes);\n    return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n  }\n\n  if (getIsHydrating() && hasId) {\n    pushMaterializedTreeId(workInProgress);\n  }\n\n  // React DevTools reads this flag.\n  workInProgress.flags |= PerformedWork;\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  return workInProgress.child;\n}\n\nfunction updateClassComponent(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  Component: any,\n  nextProps: any,\n  renderLanes: Lanes,\n) {\n  if (__DEV__) {\n    // This is used by DevTools to force a boundary to error.\n    switch (shouldError(workInProgress)) {\n      case false: {\n        const instance = workInProgress.stateNode;\n        const ctor = workInProgress.type;\n        // TODO This way of resetting the error boundary state is a hack.\n        // Is there a better way to do this?\n        const tempInstance = new ctor(\n          workInProgress.memoizedProps,\n          instance.context,\n        );\n        const state = tempInstance.state;\n        instance.updater.enqueueSetState(instance, state, null);\n        break;\n      }\n      case true: {\n        workInProgress.flags |= DidCapture;\n        workInProgress.flags |= ShouldCapture;\n        // eslint-disable-next-line react-internal/prod-error-codes\n        const error = new Error('Simulated error coming from DevTools');\n        const lane = pickArbitraryLane(renderLanes);\n        workInProgress.lanes = mergeLanes(workInProgress.lanes, lane);\n        // Schedule the error boundary to re-render using updated state\n        const update = createClassErrorUpdate(\n          workInProgress,\n          createCapturedValueAtFiber(error, workInProgress),\n          lane,\n        );\n        enqueueCapturedUpdate(workInProgress, update);\n        break;\n      }\n    }\n\n    if (workInProgress.type !== workInProgress.elementType) {\n      // Lazy component props can't be validated in createElement\n      // because they're only guaranteed to be resolved here.\n      const innerPropTypes = Component.propTypes;\n      if (innerPropTypes) {\n        checkPropTypes(\n          innerPropTypes,\n          nextProps, // Resolved props\n          'prop',\n          getComponentNameFromType(Component),\n        );\n      }\n    }\n  }\n\n  // Push context providers early to prevent context stack mismatches.\n  // During mounting we don't know the child context yet as the instance doesn't exist.\n  // We will invalidate the child context in finishClassComponent() right after rendering.\n  let hasContext;\n  if (isLegacyContextProvider(Component)) {\n    hasContext = true;\n    pushLegacyContextProvider(workInProgress);\n  } else {\n    hasContext = false;\n  }\n  prepareToReadContext(workInProgress, renderLanes);\n\n  const instance = workInProgress.stateNode;\n  let shouldUpdate;\n  if (instance === null) {\n    resetSuspendedCurrentOnMountInLegacyMode(current, workInProgress);\n\n    // In the initial pass we might need to construct the instance.\n    constructClassInstance(workInProgress, Component, nextProps);\n    mountClassInstance(workInProgress, Component, nextProps, renderLanes);\n    shouldUpdate = true;\n  } else if (current === null) {\n    // In a resume, we'll already have an instance we can reuse.\n    shouldUpdate = resumeMountClassInstance(\n      workInProgress,\n      Component,\n      nextProps,\n      renderLanes,\n    );\n  } else {\n    shouldUpdate = updateClassInstance(\n      current,\n      workInProgress,\n      Component,\n      nextProps,\n      renderLanes,\n    );\n  }\n  const nextUnitOfWork = finishClassComponent(\n    current,\n    workInProgress,\n    Component,\n    shouldUpdate,\n    hasContext,\n    renderLanes,\n  );\n  if (__DEV__) {\n    const inst = workInProgress.stateNode;\n    if (shouldUpdate && inst.props !== nextProps) {\n      if (!didWarnAboutReassigningProps) {\n        console.error(\n          'It looks like %s is reassigning its own `this.props` while rendering. ' +\n            'This is not supported and can lead to confusing bugs.',\n          getComponentNameFromFiber(workInProgress) || 'a component',\n        );\n      }\n      didWarnAboutReassigningProps = true;\n    }\n  }\n  return nextUnitOfWork;\n}\n\nfunction finishClassComponent(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  Component: any,\n  shouldUpdate: boolean,\n  hasContext: boolean,\n  renderLanes: Lanes,\n) {\n  // Refs should update even if shouldComponentUpdate returns false\n  markRef(current, workInProgress);\n\n  const didCaptureError = (workInProgress.flags & DidCapture) !== NoFlags;\n\n  if (!shouldUpdate && !didCaptureError) {\n    // Context providers should defer to sCU for rendering\n    if (hasContext) {\n      invalidateContextProvider(workInProgress, Component, false);\n    }\n\n    return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n  }\n\n  const instance = workInProgress.stateNode;\n\n  // Rerender\n  ReactCurrentOwner.current = workInProgress;\n  let nextChildren;\n  if (\n    didCaptureError &&\n    typeof Component.getDerivedStateFromError !== 'function'\n  ) {\n    // If we captured an error, but getDerivedStateFromError is not defined,\n    // unmount all the children. componentDidCatch will schedule an update to\n    // re-render a fallback. This is temporary until we migrate everyone to\n    // the new API.\n    // TODO: Warn in a future release.\n    nextChildren = null;\n\n    if (enableProfilerTimer) {\n      stopProfilerTimerIfRunning(workInProgress);\n    }\n  } else {\n    if (enableSchedulingProfiler) {\n      markComponentRenderStarted(workInProgress);\n    }\n    if (__DEV__) {\n      setIsRendering(true);\n      nextChildren = instance.render();\n      if (\n        debugRenderPhaseSideEffectsForStrictMode &&\n        workInProgress.mode & StrictLegacyMode\n      ) {\n        setIsStrictModeForDevtools(true);\n        try {\n          instance.render();\n        } finally {\n          setIsStrictModeForDevtools(false);\n        }\n      }\n      setIsRendering(false);\n    } else {\n      nextChildren = instance.render();\n    }\n    if (enableSchedulingProfiler) {\n      markComponentRenderStopped();\n    }\n  }\n\n  // React DevTools reads this flag.\n  workInProgress.flags |= PerformedWork;\n  if (current !== null && didCaptureError) {\n    // If we're recovering from an error, reconcile without reusing any of\n    // the existing children. Conceptually, the normal children and the children\n    // that are shown on error are two different sets, so we shouldn't reuse\n    // normal children even if their identities match.\n    forceUnmountCurrentAndReconcile(\n      current,\n      workInProgress,\n      nextChildren,\n      renderLanes,\n    );\n  } else {\n    reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  }\n\n  // Memoize state using the values we just used to render.\n  // TODO: Restructure so we never read values from the instance.\n  workInProgress.memoizedState = instance.state;\n\n  // The context might have changed so we need to recalculate it.\n  if (hasContext) {\n    invalidateContextProvider(workInProgress, Component, true);\n  }\n\n  return workInProgress.child;\n}\n\nfunction pushHostRootContext(workInProgress) {\n  const root = (workInProgress.stateNode: FiberRoot);\n  if (root.pendingContext) {\n    pushTopLevelContextObject(\n      workInProgress,\n      root.pendingContext,\n      root.pendingContext !== root.context,\n    );\n  } else if (root.context) {\n    // Should always be set\n    pushTopLevelContextObject(workInProgress, root.context, false);\n  }\n  pushHostContainer(workInProgress, root.containerInfo);\n}\n\nfunction updateHostRoot(current, workInProgress, renderLanes) {\n  pushHostRootContext(workInProgress);\n\n  if (current === null) {\n    throw new Error('Should have a current fiber. This is a bug in React.');\n  }\n\n  const nextProps = workInProgress.pendingProps;\n  const prevState = workInProgress.memoizedState;\n  const prevChildren = prevState.element;\n  cloneUpdateQueue(current, workInProgress);\n  processUpdateQueue(workInProgress, nextProps, null, renderLanes);\n\n  const nextState: RootState = workInProgress.memoizedState;\n  const root: FiberRoot = workInProgress.stateNode;\n  pushRootTransition(workInProgress, root, renderLanes);\n\n  if (enableCache) {\n    const nextCache: Cache = nextState.cache;\n    pushCacheProvider(workInProgress, nextCache);\n    if (nextCache !== prevState.cache) {\n      // The root cache refreshed.\n      propagateContextChange(workInProgress, CacheContext, renderLanes);\n    }\n  }\n\n  // Caution: React DevTools currently depends on this property\n  // being called \"element\".\n  const nextChildren = nextState.element;\n  if (supportsHydration && prevState.isDehydrated) {\n    // This is a hydration root whose shell has not yet hydrated. We should\n    // attempt to hydrate.\n\n    // Flip isDehydrated to false to indicate that when this render\n    // finishes, the root will no longer be dehydrated.\n    const overrideState: RootState = {\n      element: nextChildren,\n      isDehydrated: false,\n      cache: nextState.cache,\n      pendingSuspenseBoundaries: nextState.pendingSuspenseBoundaries,\n      transitions: nextState.transitions,\n    };\n    const updateQueue: UpdateQueue<RootState> = (workInProgress.updateQueue: any);\n    // `baseState` can always be the last state because the root doesn't\n    // have reducer functions so it doesn't need rebasing.\n    updateQueue.baseState = overrideState;\n    workInProgress.memoizedState = overrideState;\n\n    if (workInProgress.flags & ForceClientRender) {\n      // Something errored during a previous attempt to hydrate the shell, so we\n      // forced a client render.\n      const recoverableError = createCapturedValueAtFiber(\n        new Error(\n          'There was an error while hydrating. Because the error happened outside ' +\n            'of a Suspense boundary, the entire root will switch to ' +\n            'client rendering.',\n        ),\n        workInProgress,\n      );\n      return mountHostRootWithoutHydrating(\n        current,\n        workInProgress,\n        nextChildren,\n        renderLanes,\n        recoverableError,\n      );\n    } else if (nextChildren !== prevChildren) {\n      const recoverableError = createCapturedValueAtFiber(\n        new Error(\n          'This root received an early update, before anything was able ' +\n            'hydrate. Switched the entire root to client rendering.',\n        ),\n        workInProgress,\n      );\n      return mountHostRootWithoutHydrating(\n        current,\n        workInProgress,\n        nextChildren,\n        renderLanes,\n        recoverableError,\n      );\n    } else {\n      // The outermost shell has not hydrated yet. Start hydrating.\n      enterHydrationState(workInProgress);\n      if (enableUseMutableSource) {\n        const mutableSourceEagerHydrationData =\n          root.mutableSourceEagerHydrationData;\n        if (mutableSourceEagerHydrationData != null) {\n          for (let i = 0; i < mutableSourceEagerHydrationData.length; i += 2) {\n            const mutableSource = ((mutableSourceEagerHydrationData[\n              i\n            ]: any): MutableSource<any>);\n            const version = mutableSourceEagerHydrationData[i + 1];\n            setWorkInProgressVersion(mutableSource, version);\n          }\n        }\n      }\n\n      const child = mountChildFibers(\n        workInProgress,\n        null,\n        nextChildren,\n        renderLanes,\n      );\n      workInProgress.child = child;\n\n      let node = child;\n      while (node) {\n        // Mark each child as hydrating. This is a fast path to know whether this\n        // tree is part of a hydrating tree. This is used to determine if a child\n        // node has fully mounted yet, and for scheduling event replaying.\n        // Conceptually this is similar to Placement in that a new subtree is\n        // inserted into the React tree here. It just happens to not need DOM\n        // mutations because it already exists.\n        node.flags = (node.flags & ~Placement) | Hydrating;\n        node = node.sibling;\n      }\n    }\n  } else {\n    // Root is not dehydrated. Either this is a client-only root, or it\n    // already hydrated.\n    resetHydrationState();\n    if (nextChildren === prevChildren) {\n      return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n    }\n    reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  }\n  return workInProgress.child;\n}\n\nfunction mountHostRootWithoutHydrating(\n  current: Fiber,\n  workInProgress: Fiber,\n  nextChildren: ReactNodeList,\n  renderLanes: Lanes,\n  recoverableError: CapturedValue<mixed>,\n) {\n  // Revert to client rendering.\n  resetHydrationState();\n\n  queueHydrationError(recoverableError);\n\n  workInProgress.flags |= ForceClientRender;\n\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  return workInProgress.child;\n}\n\nfunction updateHostComponent(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  renderLanes: Lanes,\n) {\n  pushHostContext(workInProgress);\n\n  if (current === null) {\n    tryToClaimNextHydratableInstance(workInProgress);\n  }\n\n  const type = workInProgress.type;\n  const nextProps = workInProgress.pendingProps;\n  const prevProps = current !== null ? current.memoizedProps : null;\n\n  let nextChildren = nextProps.children;\n  const isDirectTextChild = shouldSetTextContent(type, nextProps);\n\n  if (isDirectTextChild) {\n    // We special case a direct text child of a host node. This is a common\n    // case. We won't handle it as a reified child. We will instead handle\n    // this in the host environment that also has access to this prop. That\n    // avoids allocating another HostText fiber and traversing it.\n    nextChildren = null;\n  } else if (prevProps !== null && shouldSetTextContent(type, prevProps)) {\n    // If we're switching from a direct text child to a normal child, or to\n    // empty, we need to schedule the text content to be reset.\n    workInProgress.flags |= ContentReset;\n  }\n\n  markRef(current, workInProgress);\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  return workInProgress.child;\n}\n\nfunction updateHostText(current, workInProgress) {\n  if (current === null) {\n    tryToClaimNextHydratableInstance(workInProgress);\n  }\n  // Nothing to do here. This is terminal. We'll do the completion step\n  // immediately after.\n  return null;\n}\n\nfunction mountLazyComponent(\n  _current,\n  workInProgress,\n  elementType,\n  renderLanes,\n) {\n  resetSuspendedCurrentOnMountInLegacyMode(_current, workInProgress);\n\n  const props = workInProgress.pendingProps;\n  const lazyComponent: LazyComponentType<any, any> = elementType;\n  const payload = lazyComponent._payload;\n  const init = lazyComponent._init;\n  let Component = init(payload);\n  // Store the unwrapped component in the type.\n  workInProgress.type = Component;\n  const resolvedTag = (workInProgress.tag = resolveLazyComponentTag(Component));\n  const resolvedProps = resolveDefaultProps(Component, props);\n  let child;\n  switch (resolvedTag) {\n    case FunctionComponent: {\n      if (__DEV__) {\n        validateFunctionComponentInDev(workInProgress, Component);\n        workInProgress.type = Component = resolveFunctionForHotReloading(\n          Component,\n        );\n      }\n      child = updateFunctionComponent(\n        null,\n        workInProgress,\n        Component,\n        resolvedProps,\n        renderLanes,\n      );\n      return child;\n    }\n    case ClassComponent: {\n      if (__DEV__) {\n        workInProgress.type = Component = resolveClassForHotReloading(\n          Component,\n        );\n      }\n      child = updateClassComponent(\n        null,\n        workInProgress,\n        Component,\n        resolvedProps,\n        renderLanes,\n      );\n      return child;\n    }\n    case ForwardRef: {\n      if (__DEV__) {\n        workInProgress.type = Component = resolveForwardRefForHotReloading(\n          Component,\n        );\n      }\n      child = updateForwardRef(\n        null,\n        workInProgress,\n        Component,\n        resolvedProps,\n        renderLanes,\n      );\n      return child;\n    }\n    case MemoComponent: {\n      if (__DEV__) {\n        if (workInProgress.type !== workInProgress.elementType) {\n          const outerPropTypes = Component.propTypes;\n          if (outerPropTypes) {\n            checkPropTypes(\n              outerPropTypes,\n              resolvedProps, // Resolved for outer only\n              'prop',\n              getComponentNameFromType(Component),\n            );\n          }\n        }\n      }\n      child = updateMemoComponent(\n        null,\n        workInProgress,\n        Component,\n        resolveDefaultProps(Component.type, resolvedProps), // The inner type can have defaults too\n        renderLanes,\n      );\n      return child;\n    }\n  }\n  let hint = '';\n  if (__DEV__) {\n    if (\n      Component !== null &&\n      typeof Component === 'object' &&\n      Component.$$typeof === REACT_LAZY_TYPE\n    ) {\n      hint = ' Did you wrap a component in React.lazy() more than once?';\n    }\n  }\n\n  // This message intentionally doesn't mention ForwardRef or MemoComponent\n  // because the fact that it's a separate type of work is an\n  // implementation detail.\n  throw new Error(\n    `Element type is invalid. Received a promise that resolves to: ${Component}. ` +\n      `Lazy element type must resolve to a class or function.${hint}`,\n  );\n}\n\nfunction mountIncompleteClassComponent(\n  _current,\n  workInProgress,\n  Component,\n  nextProps,\n  renderLanes,\n) {\n  resetSuspendedCurrentOnMountInLegacyMode(_current, workInProgress);\n\n  // Promote the fiber to a class and try rendering again.\n  workInProgress.tag = ClassComponent;\n\n  // The rest of this function is a fork of `updateClassComponent`\n\n  // Push context providers early to prevent context stack mismatches.\n  // During mounting we don't know the child context yet as the instance doesn't exist.\n  // We will invalidate the child context in finishClassComponent() right after rendering.\n  let hasContext;\n  if (isLegacyContextProvider(Component)) {\n    hasContext = true;\n    pushLegacyContextProvider(workInProgress);\n  } else {\n    hasContext = false;\n  }\n  prepareToReadContext(workInProgress, renderLanes);\n\n  constructClassInstance(workInProgress, Component, nextProps);\n  mountClassInstance(workInProgress, Component, nextProps, renderLanes);\n\n  return finishClassComponent(\n    null,\n    workInProgress,\n    Component,\n    true,\n    hasContext,\n    renderLanes,\n  );\n}\n\nfunction mountIndeterminateComponent(\n  _current,\n  workInProgress,\n  Component,\n  renderLanes,\n) {\n  resetSuspendedCurrentOnMountInLegacyMode(_current, workInProgress);\n\n  const props = workInProgress.pendingProps;\n  let context;\n  if (!disableLegacyContext) {\n    const unmaskedContext = getUnmaskedContext(\n      workInProgress,\n      Component,\n      false,\n    );\n    context = getMaskedContext(workInProgress, unmaskedContext);\n  }\n\n  prepareToReadContext(workInProgress, renderLanes);\n  let value;\n  let hasId;\n\n  if (enableSchedulingProfiler) {\n    markComponentRenderStarted(workInProgress);\n  }\n  if (__DEV__) {\n    if (\n      Component.prototype &&\n      typeof Component.prototype.render === 'function'\n    ) {\n      const componentName = getComponentNameFromType(Component) || 'Unknown';\n\n      if (!didWarnAboutBadClass[componentName]) {\n        console.error(\n          \"The <%s /> component appears to have a render method, but doesn't extend React.Component. \" +\n            'This is likely to cause errors. Change %s to extend React.Component instead.',\n          componentName,\n          componentName,\n        );\n        didWarnAboutBadClass[componentName] = true;\n      }\n    }\n\n    if (workInProgress.mode & StrictLegacyMode) {\n      ReactStrictModeWarnings.recordLegacyContextWarning(workInProgress, null);\n    }\n\n    setIsRendering(true);\n    ReactCurrentOwner.current = workInProgress;\n    value = renderWithHooks(\n      null,\n      workInProgress,\n      Component,\n      props,\n      context,\n      renderLanes,\n    );\n    hasId = checkDidRenderIdHook();\n    setIsRendering(false);\n  } else {\n    value = renderWithHooks(\n      null,\n      workInProgress,\n      Component,\n      props,\n      context,\n      renderLanes,\n    );\n    hasId = checkDidRenderIdHook();\n  }\n  if (enableSchedulingProfiler) {\n    markComponentRenderStopped();\n  }\n\n  // React DevTools reads this flag.\n  workInProgress.flags |= PerformedWork;\n\n  if (__DEV__) {\n    // Support for module components is deprecated and is removed behind a flag.\n    // Whether or not it would crash later, we want to show a good message in DEV first.\n    if (\n      typeof value === 'object' &&\n      value !== null &&\n      typeof value.render === 'function' &&\n      value.$$typeof === undefined\n    ) {\n      const componentName = getComponentNameFromType(Component) || 'Unknown';\n      if (!didWarnAboutModulePatternComponent[componentName]) {\n        console.error(\n          'The <%s /> component appears to be a function component that returns a class instance. ' +\n            'Change %s to a class that extends React.Component instead. ' +\n            \"If you can't use a class try assigning the prototype on the function as a workaround. \" +\n            \"`%s.prototype = React.Component.prototype`. Don't use an arrow function since it \" +\n            'cannot be called with `new` by React.',\n          componentName,\n          componentName,\n          componentName,\n        );\n        didWarnAboutModulePatternComponent[componentName] = true;\n      }\n    }\n  }\n\n  if (\n    // Run these checks in production only if the flag is off.\n    // Eventually we'll delete this branch altogether.\n    !disableModulePatternComponents &&\n    typeof value === 'object' &&\n    value !== null &&\n    typeof value.render === 'function' &&\n    value.$$typeof === undefined\n  ) {\n    if (__DEV__) {\n      const componentName = getComponentNameFromType(Component) || 'Unknown';\n      if (!didWarnAboutModulePatternComponent[componentName]) {\n        console.error(\n          'The <%s /> component appears to be a function component that returns a class instance. ' +\n            'Change %s to a class that extends React.Component instead. ' +\n            \"If you can't use a class try assigning the prototype on the function as a workaround. \" +\n            \"`%s.prototype = React.Component.prototype`. Don't use an arrow function since it \" +\n            'cannot be called with `new` by React.',\n          componentName,\n          componentName,\n          componentName,\n        );\n        didWarnAboutModulePatternComponent[componentName] = true;\n      }\n    }\n\n    // Proceed under the assumption that this is a class instance\n    workInProgress.tag = ClassComponent;\n\n    // Throw out any hooks that were used.\n    workInProgress.memoizedState = null;\n    workInProgress.updateQueue = null;\n\n    // Push context providers early to prevent context stack mismatches.\n    // During mounting we don't know the child context yet as the instance doesn't exist.\n    // We will invalidate the child context in finishClassComponent() right after rendering.\n    let hasContext = false;\n    if (isLegacyContextProvider(Component)) {\n      hasContext = true;\n      pushLegacyContextProvider(workInProgress);\n    } else {\n      hasContext = false;\n    }\n\n    workInProgress.memoizedState =\n      value.state !== null && value.state !== undefined ? value.state : null;\n\n    initializeUpdateQueue(workInProgress);\n\n    adoptClassInstance(workInProgress, value);\n    mountClassInstance(workInProgress, Component, props, renderLanes);\n    return finishClassComponent(\n      null,\n      workInProgress,\n      Component,\n      true,\n      hasContext,\n      renderLanes,\n    );\n  } else {\n    // Proceed under the assumption that this is a function component\n    workInProgress.tag = FunctionComponent;\n    if (__DEV__) {\n      if (disableLegacyContext && Component.contextTypes) {\n        console.error(\n          '%s uses the legacy contextTypes API which is no longer supported. ' +\n            'Use React.createContext() with React.useContext() instead.',\n          getComponentNameFromType(Component) || 'Unknown',\n        );\n      }\n\n      if (\n        debugRenderPhaseSideEffectsForStrictMode &&\n        workInProgress.mode & StrictLegacyMode\n      ) {\n        setIsStrictModeForDevtools(true);\n        try {\n          value = renderWithHooks(\n            null,\n            workInProgress,\n            Component,\n            props,\n            context,\n            renderLanes,\n          );\n          hasId = checkDidRenderIdHook();\n        } finally {\n          setIsStrictModeForDevtools(false);\n        }\n      }\n    }\n\n    if (getIsHydrating() && hasId) {\n      pushMaterializedTreeId(workInProgress);\n    }\n\n    reconcileChildren(null, workInProgress, value, renderLanes);\n    if (__DEV__) {\n      validateFunctionComponentInDev(workInProgress, Component);\n    }\n    return workInProgress.child;\n  }\n}\n\nfunction validateFunctionComponentInDev(workInProgress: Fiber, Component: any) {\n  if (__DEV__) {\n    if (Component) {\n      if (Component.childContextTypes) {\n        console.error(\n          '%s(...): childContextTypes cannot be defined on a function component.',\n          Component.displayName || Component.name || 'Component',\n        );\n      }\n    }\n    if (workInProgress.ref !== null) {\n      let info = '';\n      const ownerName = getCurrentFiberOwnerNameInDevOrNull();\n      if (ownerName) {\n        info += '\\n\\nCheck the render method of `' + ownerName + '`.';\n      }\n\n      let warningKey = ownerName || '';\n      const debugSource = workInProgress._debugSource;\n      if (debugSource) {\n        warningKey = debugSource.fileName + ':' + debugSource.lineNumber;\n      }\n      if (!didWarnAboutFunctionRefs[warningKey]) {\n        didWarnAboutFunctionRefs[warningKey] = true;\n        console.error(\n          'Function components cannot be given refs. ' +\n            'Attempts to access this ref will fail. ' +\n            'Did you mean to use React.forwardRef()?%s',\n          info,\n        );\n      }\n    }\n\n    if (\n      warnAboutDefaultPropsOnFunctionComponents &&\n      Component.defaultProps !== undefined\n    ) {\n      const componentName = getComponentNameFromType(Component) || 'Unknown';\n\n      if (!didWarnAboutDefaultPropsOnFunctionComponent[componentName]) {\n        console.error(\n          '%s: Support for defaultProps will be removed from function components ' +\n            'in a future major release. Use JavaScript default parameters instead.',\n          componentName,\n        );\n        didWarnAboutDefaultPropsOnFunctionComponent[componentName] = true;\n      }\n    }\n\n    if (typeof Component.getDerivedStateFromProps === 'function') {\n      const componentName = getComponentNameFromType(Component) || 'Unknown';\n\n      if (!didWarnAboutGetDerivedStateOnFunctionComponent[componentName]) {\n        console.error(\n          '%s: Function components do not support getDerivedStateFromProps.',\n          componentName,\n        );\n        didWarnAboutGetDerivedStateOnFunctionComponent[componentName] = true;\n      }\n    }\n\n    if (\n      typeof Component.contextType === 'object' &&\n      Component.contextType !== null\n    ) {\n      const componentName = getComponentNameFromType(Component) || 'Unknown';\n\n      if (!didWarnAboutContextTypeOnFunctionComponent[componentName]) {\n        console.error(\n          '%s: Function components do not support contextType.',\n          componentName,\n        );\n        didWarnAboutContextTypeOnFunctionComponent[componentName] = true;\n      }\n    }\n  }\n}\n\nconst SUSPENDED_MARKER: SuspenseState = {\n  dehydrated: null,\n  treeContext: null,\n  retryLane: NoLane,\n};\n\nfunction mountSuspenseOffscreenState(renderLanes: Lanes): OffscreenState {\n  return {\n    baseLanes: renderLanes,\n    cachePool: getSuspendedCache(),\n    transitions: null,\n  };\n}\n\nfunction updateSuspenseOffscreenState(\n  prevOffscreenState: OffscreenState,\n  renderLanes: Lanes,\n): OffscreenState {\n  let cachePool: SpawnedCachePool | null = null;\n  if (enableCache) {\n    const prevCachePool: SpawnedCachePool | null = prevOffscreenState.cachePool;\n    if (prevCachePool !== null) {\n      const parentCache = isPrimaryRenderer\n        ? CacheContext._currentValue\n        : CacheContext._currentValue2;\n      if (prevCachePool.parent !== parentCache) {\n        // Detected a refresh in the parent. This overrides any previously\n        // suspended cache.\n        cachePool = {\n          parent: parentCache,\n          pool: parentCache,\n        };\n      } else {\n        // We can reuse the cache from last time. The only thing that would have\n        // overridden it is a parent refresh, which we checked for above.\n        cachePool = prevCachePool;\n      }\n    } else {\n      // If there's no previous cache pool, grab the current one.\n      cachePool = getSuspendedCache();\n    }\n  }\n  return {\n    baseLanes: mergeLanes(prevOffscreenState.baseLanes, renderLanes),\n    cachePool,\n    transitions: prevOffscreenState.transitions,\n  };\n}\n\n// TODO: Probably should inline this back\nfunction shouldRemainOnFallback(\n  suspenseContext: SuspenseContext,\n  current: null | Fiber,\n  workInProgress: Fiber,\n  renderLanes: Lanes,\n) {\n  // If we're already showing a fallback, there are cases where we need to\n  // remain on that fallback regardless of whether the content has resolved.\n  // For example, SuspenseList coordinates when nested content appears.\n  if (current !== null) {\n    const suspenseState: SuspenseState = current.memoizedState;\n    if (suspenseState === null) {\n      // Currently showing content. Don't hide it, even if ForceSuspenseFallback\n      // is true. More precise name might be \"ForceRemainSuspenseFallback\".\n      // Note: This is a factoring smell. Can't remain on a fallback if there's\n      // no fallback to remain on.\n      return false;\n    }\n  }\n\n  // Not currently showing content. Consult the Suspense context.\n  return hasSuspenseContext(\n    suspenseContext,\n    (ForceSuspenseFallback: SuspenseContext),\n  );\n}\n\nfunction getRemainingWorkInPrimaryTree(current: Fiber, renderLanes) {\n  // TODO: Should not remove render lanes that were pinged during this render\n  return removeLanes(current.childLanes, renderLanes);\n}\n\nfunction updateSuspenseComponent(current, workInProgress, renderLanes) {\n  const nextProps = workInProgress.pendingProps;\n\n  // This is used by DevTools to force a boundary to suspend.\n  if (__DEV__) {\n    if (shouldSuspend(workInProgress)) {\n      workInProgress.flags |= DidCapture;\n    }\n  }\n\n  let suspenseContext: SuspenseContext = suspenseStackCursor.current;\n\n  let showFallback = false;\n  const didSuspend = (workInProgress.flags & DidCapture) !== NoFlags;\n\n  if (\n    didSuspend ||\n    shouldRemainOnFallback(\n      suspenseContext,\n      current,\n      workInProgress,\n      renderLanes,\n    )\n  ) {\n    // Something in this boundary's subtree already suspended. Switch to\n    // rendering the fallback children.\n    showFallback = true;\n    workInProgress.flags &= ~DidCapture;\n  } else {\n    // Attempting the main content\n    if (\n      current === null ||\n      (current.memoizedState: null | SuspenseState) !== null\n    ) {\n      // This is a new mount or this boundary is already showing a fallback state.\n      // Mark this subtree context as having at least one invisible parent that could\n      // handle the fallback state.\n      // Avoided boundaries are not considered since they cannot handle preferred fallback states.\n      if (\n        !enableSuspenseAvoidThisFallback ||\n        nextProps.unstable_avoidThisFallback !== true\n      ) {\n        suspenseContext = addSubtreeSuspenseContext(\n          suspenseContext,\n          InvisibleParentSuspenseContext,\n        );\n      }\n    }\n  }\n\n  suspenseContext = setDefaultShallowSuspenseContext(suspenseContext);\n\n  pushSuspenseContext(workInProgress, suspenseContext);\n\n  // OK, the next part is confusing. We're about to reconcile the Suspense\n  // boundary's children. This involves some custom reconciliation logic. Two\n  // main reasons this is so complicated.\n  //\n  // First, Legacy Mode has different semantics for backwards compatibility. The\n  // primary tree will commit in an inconsistent state, so when we do the\n  // second pass to render the fallback, we do some exceedingly, uh, clever\n  // hacks to make that not totally break. Like transferring effects and\n  // deletions from hidden tree. In Concurrent Mode, it's much simpler,\n  // because we bailout on the primary tree completely and leave it in its old\n  // state, no effects. Same as what we do for Offscreen (except that\n  // Offscreen doesn't have the first render pass).\n  //\n  // Second is hydration. During hydration, the Suspense fiber has a slightly\n  // different layout, where the child points to a dehydrated fragment, which\n  // contains the DOM rendered by the server.\n  //\n  // Third, even if you set all that aside, Suspense is like error boundaries in\n  // that we first we try to render one tree, and if that fails, we render again\n  // and switch to a different tree. Like a try/catch block. So we have to track\n  // which branch we're currently rendering. Ideally we would model this using\n  // a stack.\n  if (current === null) {\n    // Initial mount\n\n    // Special path for hydration\n    // If we're currently hydrating, try to hydrate this boundary.\n    tryToClaimNextHydratableInstance(workInProgress);\n    // This could've been a dehydrated suspense component.\n    const suspenseState: null | SuspenseState = workInProgress.memoizedState;\n    if (suspenseState !== null) {\n      const dehydrated = suspenseState.dehydrated;\n      if (dehydrated !== null) {\n        return mountDehydratedSuspenseComponent(\n          workInProgress,\n          dehydrated,\n          renderLanes,\n        );\n      }\n    }\n\n    const nextPrimaryChildren = nextProps.children;\n    const nextFallbackChildren = nextProps.fallback;\n\n    if (showFallback) {\n      const fallbackFragment = mountSuspenseFallbackChildren(\n        workInProgress,\n        nextPrimaryChildren,\n        nextFallbackChildren,\n        renderLanes,\n      );\n      const primaryChildFragment: Fiber = (workInProgress.child: any);\n      primaryChildFragment.memoizedState = mountSuspenseOffscreenState(\n        renderLanes,\n      );\n      workInProgress.memoizedState = SUSPENDED_MARKER;\n      if (enableTransitionTracing) {\n        const currentTransitions = getSuspendedTransitions();\n        if (currentTransitions !== null) {\n          const primaryChildUpdateQueue: OffscreenQueue = {\n            transitions: currentTransitions,\n          };\n          primaryChildFragment.updateQueue = primaryChildUpdateQueue;\n        }\n      }\n\n      return fallbackFragment;\n    } else if (\n      enableCPUSuspense &&\n      typeof nextProps.unstable_expectedLoadTime === 'number'\n    ) {\n      // This is a CPU-bound tree. Skip this tree and show a placeholder to\n      // unblock the surrounding content. Then immediately retry after the\n      // initial commit.\n      const fallbackFragment = mountSuspenseFallbackChildren(\n        workInProgress,\n        nextPrimaryChildren,\n        nextFallbackChildren,\n        renderLanes,\n      );\n      const primaryChildFragment: Fiber = (workInProgress.child: any);\n      primaryChildFragment.memoizedState = mountSuspenseOffscreenState(\n        renderLanes,\n      );\n      workInProgress.memoizedState = SUSPENDED_MARKER;\n\n      // Since nothing actually suspended, there will nothing to ping this to\n      // get it started back up to attempt the next item. While in terms of\n      // priority this work has the same priority as this current render, it's\n      // not part of the same transition once the transition has committed. If\n      // it's sync, we still want to yield so that it can be painted.\n      // Conceptually, this is really the same as pinging. We can use any\n      // RetryLane even if it's the one currently rendering since we're leaving\n      // it behind on this node.\n      workInProgress.lanes = SomeRetryLane;\n      return fallbackFragment;\n    } else {\n      return mountSuspensePrimaryChildren(\n        workInProgress,\n        nextPrimaryChildren,\n        renderLanes,\n      );\n    }\n  } else {\n    // This is an update.\n\n    // Special path for hydration\n    const prevState: null | SuspenseState = current.memoizedState;\n    if (prevState !== null) {\n      const dehydrated = prevState.dehydrated;\n      if (dehydrated !== null) {\n        return updateDehydratedSuspenseComponent(\n          current,\n          workInProgress,\n          didSuspend,\n          nextProps,\n          dehydrated,\n          prevState,\n          renderLanes,\n        );\n      }\n    }\n\n    if (showFallback) {\n      const nextFallbackChildren = nextProps.fallback;\n      const nextPrimaryChildren = nextProps.children;\n      const fallbackChildFragment = updateSuspenseFallbackChildren(\n        current,\n        workInProgress,\n        nextPrimaryChildren,\n        nextFallbackChildren,\n        renderLanes,\n      );\n      const primaryChildFragment: Fiber = (workInProgress.child: any);\n      const prevOffscreenState: OffscreenState | null = (current.child: any)\n        .memoizedState;\n      primaryChildFragment.memoizedState =\n        prevOffscreenState === null\n          ? mountSuspenseOffscreenState(renderLanes)\n          : updateSuspenseOffscreenState(prevOffscreenState, renderLanes);\n      if (enableTransitionTracing) {\n        const currentTransitions = getSuspendedTransitions();\n        if (currentTransitions !== null) {\n          const primaryChildUpdateQueue: OffscreenQueue = {\n            transitions: currentTransitions,\n          };\n          primaryChildFragment.updateQueue = primaryChildUpdateQueue;\n        }\n      }\n      primaryChildFragment.childLanes = getRemainingWorkInPrimaryTree(\n        current,\n        renderLanes,\n      );\n      workInProgress.memoizedState = SUSPENDED_MARKER;\n      return fallbackChildFragment;\n    } else {\n      const nextPrimaryChildren = nextProps.children;\n      const primaryChildFragment = updateSuspensePrimaryChildren(\n        current,\n        workInProgress,\n        nextPrimaryChildren,\n        renderLanes,\n      );\n      workInProgress.memoizedState = null;\n      return primaryChildFragment;\n    }\n  }\n}\n\nfunction mountSuspensePrimaryChildren(\n  workInProgress,\n  primaryChildren,\n  renderLanes,\n) {\n  const mode = workInProgress.mode;\n  const primaryChildProps: OffscreenProps = {\n    mode: 'visible',\n    children: primaryChildren,\n  };\n  const primaryChildFragment = mountWorkInProgressOffscreenFiber(\n    primaryChildProps,\n    mode,\n    renderLanes,\n  );\n  primaryChildFragment.return = workInProgress;\n  workInProgress.child = primaryChildFragment;\n  return primaryChildFragment;\n}\n\nfunction mountSuspenseFallbackChildren(\n  workInProgress,\n  primaryChildren,\n  fallbackChildren,\n  renderLanes,\n) {\n  const mode = workInProgress.mode;\n  const progressedPrimaryFragment: Fiber | null = workInProgress.child;\n\n  const primaryChildProps: OffscreenProps = {\n    mode: 'hidden',\n    children: primaryChildren,\n  };\n\n  let primaryChildFragment;\n  let fallbackChildFragment;\n  if (\n    (mode & ConcurrentMode) === NoMode &&\n    progressedPrimaryFragment !== null\n  ) {\n    // In legacy mode, we commit the primary tree as if it successfully\n    // completed, even though it's in an inconsistent state.\n    primaryChildFragment = progressedPrimaryFragment;\n    primaryChildFragment.childLanes = NoLanes;\n    primaryChildFragment.pendingProps = primaryChildProps;\n\n    if (enableProfilerTimer && workInProgress.mode & ProfileMode) {\n      // Reset the durations from the first pass so they aren't included in the\n      // final amounts. This seems counterintuitive, since we're intentionally\n      // not measuring part of the render phase, but this makes it match what we\n      // do in Concurrent Mode.\n      primaryChildFragment.actualDuration = 0;\n      primaryChildFragment.actualStartTime = -1;\n      primaryChildFragment.selfBaseDuration = 0;\n      primaryChildFragment.treeBaseDuration = 0;\n    }\n\n    fallbackChildFragment = createFiberFromFragment(\n      fallbackChildren,\n      mode,\n      renderLanes,\n      null,\n    );\n  } else {\n    primaryChildFragment = mountWorkInProgressOffscreenFiber(\n      primaryChildProps,\n      mode,\n      NoLanes,\n    );\n    fallbackChildFragment = createFiberFromFragment(\n      fallbackChildren,\n      mode,\n      renderLanes,\n      null,\n    );\n  }\n\n  primaryChildFragment.return = workInProgress;\n  fallbackChildFragment.return = workInProgress;\n  primaryChildFragment.sibling = fallbackChildFragment;\n  workInProgress.child = primaryChildFragment;\n  return fallbackChildFragment;\n}\n\nfunction mountWorkInProgressOffscreenFiber(\n  offscreenProps: OffscreenProps,\n  mode: TypeOfMode,\n  renderLanes: Lanes,\n) {\n  // The props argument to `createFiberFromOffscreen` is `any` typed, so we use\n  // this wrapper function to constrain it.\n  return createFiberFromOffscreen(offscreenProps, mode, NoLanes, null);\n}\n\nfunction updateWorkInProgressOffscreenFiber(\n  current: Fiber,\n  offscreenProps: OffscreenProps,\n) {\n  // The props argument to `createWorkInProgress` is `any` typed, so we use this\n  // wrapper function to constrain it.\n  return createWorkInProgress(current, offscreenProps);\n}\n\nfunction updateSuspensePrimaryChildren(\n  current,\n  workInProgress,\n  primaryChildren,\n  renderLanes,\n) {\n  const currentPrimaryChildFragment: Fiber = (current.child: any);\n  const currentFallbackChildFragment: Fiber | null =\n    currentPrimaryChildFragment.sibling;\n\n  const primaryChildFragment = updateWorkInProgressOffscreenFiber(\n    currentPrimaryChildFragment,\n    {\n      mode: 'visible',\n      children: primaryChildren,\n    },\n  );\n  if ((workInProgress.mode & ConcurrentMode) === NoMode) {\n    primaryChildFragment.lanes = renderLanes;\n  }\n  primaryChildFragment.return = workInProgress;\n  primaryChildFragment.sibling = null;\n  if (currentFallbackChildFragment !== null) {\n    // Delete the fallback child fragment\n    const deletions = workInProgress.deletions;\n    if (deletions === null) {\n      workInProgress.deletions = [currentFallbackChildFragment];\n      workInProgress.flags |= ChildDeletion;\n    } else {\n      deletions.push(currentFallbackChildFragment);\n    }\n  }\n\n  workInProgress.child = primaryChildFragment;\n  return primaryChildFragment;\n}\n\nfunction updateSuspenseFallbackChildren(\n  current,\n  workInProgress,\n  primaryChildren,\n  fallbackChildren,\n  renderLanes,\n) {\n  const mode = workInProgress.mode;\n  const currentPrimaryChildFragment: Fiber = (current.child: any);\n  const currentFallbackChildFragment: Fiber | null =\n    currentPrimaryChildFragment.sibling;\n\n  const primaryChildProps: OffscreenProps = {\n    mode: 'hidden',\n    children: primaryChildren,\n  };\n\n  let primaryChildFragment;\n  if (\n    // In legacy mode, we commit the primary tree as if it successfully\n    // completed, even though it's in an inconsistent state.\n    (mode & ConcurrentMode) === NoMode &&\n    // Make sure we're on the second pass, i.e. the primary child fragment was\n    // already cloned. In legacy mode, the only case where this isn't true is\n    // when DevTools forces us to display a fallback; we skip the first render\n    // pass entirely and go straight to rendering the fallback. (In Concurrent\n    // Mode, SuspenseList can also trigger this scenario, but this is a legacy-\n    // only codepath.)\n    workInProgress.child !== currentPrimaryChildFragment\n  ) {\n    const progressedPrimaryFragment: Fiber = (workInProgress.child: any);\n    primaryChildFragment = progressedPrimaryFragment;\n    primaryChildFragment.childLanes = NoLanes;\n    primaryChildFragment.pendingProps = primaryChildProps;\n\n    if (enableProfilerTimer && workInProgress.mode & ProfileMode) {\n      // Reset the durations from the first pass so they aren't included in the\n      // final amounts. This seems counterintuitive, since we're intentionally\n      // not measuring part of the render phase, but this makes it match what we\n      // do in Concurrent Mode.\n      primaryChildFragment.actualDuration = 0;\n      primaryChildFragment.actualStartTime = -1;\n      primaryChildFragment.selfBaseDuration =\n        currentPrimaryChildFragment.selfBaseDuration;\n      primaryChildFragment.treeBaseDuration =\n        currentPrimaryChildFragment.treeBaseDuration;\n    }\n\n    // The fallback fiber was added as a deletion during the first pass.\n    // However, since we're going to remain on the fallback, we no longer want\n    // to delete it.\n    workInProgress.deletions = null;\n  } else {\n    primaryChildFragment = updateWorkInProgressOffscreenFiber(\n      currentPrimaryChildFragment,\n      primaryChildProps,\n    );\n    // Since we're reusing a current tree, we need to reuse the flags, too.\n    // (We don't do this in legacy mode, because in legacy mode we don't re-use\n    // the current tree; see previous branch.)\n    primaryChildFragment.subtreeFlags =\n      currentPrimaryChildFragment.subtreeFlags & StaticMask;\n  }\n  let fallbackChildFragment;\n  if (currentFallbackChildFragment !== null) {\n    fallbackChildFragment = createWorkInProgress(\n      currentFallbackChildFragment,\n      fallbackChildren,\n    );\n  } else {\n    fallbackChildFragment = createFiberFromFragment(\n      fallbackChildren,\n      mode,\n      renderLanes,\n      null,\n    );\n    // Needs a placement effect because the parent (the Suspense boundary) already\n    // mounted but this is a new fiber.\n    fallbackChildFragment.flags |= Placement;\n  }\n\n  fallbackChildFragment.return = workInProgress;\n  primaryChildFragment.return = workInProgress;\n  primaryChildFragment.sibling = fallbackChildFragment;\n  workInProgress.child = primaryChildFragment;\n\n  return fallbackChildFragment;\n}\n\nfunction retrySuspenseComponentWithoutHydrating(\n  current: Fiber,\n  workInProgress: Fiber,\n  renderLanes: Lanes,\n  recoverableError: CapturedValue<mixed> | null,\n) {\n  // Falling back to client rendering. Because this has performance\n  // implications, it's considered a recoverable error, even though the user\n  // likely won't observe anything wrong with the UI.\n  //\n  // The error is passed in as an argument to enforce that every caller provide\n  // a custom message, or explicitly opt out (currently the only path that opts\n  // out is legacy mode; every concurrent path provides an error).\n  if (recoverableError !== null) {\n    queueHydrationError(recoverableError);\n  }\n\n  // This will add the old fiber to the deletion list\n  reconcileChildFibers(workInProgress, current.child, null, renderLanes);\n\n  // We're now not suspended nor dehydrated.\n  const nextProps = workInProgress.pendingProps;\n  const primaryChildren = nextProps.children;\n  const primaryChildFragment = mountSuspensePrimaryChildren(\n    workInProgress,\n    primaryChildren,\n    renderLanes,\n  );\n  // Needs a placement effect because the parent (the Suspense boundary) already\n  // mounted but this is a new fiber.\n  primaryChildFragment.flags |= Placement;\n  workInProgress.memoizedState = null;\n\n  return primaryChildFragment;\n}\n\nfunction mountSuspenseFallbackAfterRetryWithoutHydrating(\n  current,\n  workInProgress,\n  primaryChildren,\n  fallbackChildren,\n  renderLanes,\n) {\n  const fiberMode = workInProgress.mode;\n  const primaryChildProps: OffscreenProps = {\n    mode: 'visible',\n    children: primaryChildren,\n  };\n  const primaryChildFragment = mountWorkInProgressOffscreenFiber(\n    primaryChildProps,\n    fiberMode,\n    NoLanes,\n  );\n  const fallbackChildFragment = createFiberFromFragment(\n    fallbackChildren,\n    fiberMode,\n    renderLanes,\n    null,\n  );\n  // Needs a placement effect because the parent (the Suspense\n  // boundary) already mounted but this is a new fiber.\n  fallbackChildFragment.flags |= Placement;\n\n  primaryChildFragment.return = workInProgress;\n  fallbackChildFragment.return = workInProgress;\n  primaryChildFragment.sibling = fallbackChildFragment;\n  workInProgress.child = primaryChildFragment;\n\n  if ((workInProgress.mode & ConcurrentMode) !== NoMode) {\n    // We will have dropped the effect list which contains the\n    // deletion. We need to reconcile to delete the current child.\n    reconcileChildFibers(workInProgress, current.child, null, renderLanes);\n  }\n\n  return fallbackChildFragment;\n}\n\nfunction mountDehydratedSuspenseComponent(\n  workInProgress: Fiber,\n  suspenseInstance: SuspenseInstance,\n  renderLanes: Lanes,\n): null | Fiber {\n  // During the first pass, we'll bail out and not drill into the children.\n  // Instead, we'll leave the content in place and try to hydrate it later.\n  if ((workInProgress.mode & ConcurrentMode) === NoMode) {\n    if (__DEV__) {\n      console.error(\n        'Cannot hydrate Suspense in legacy mode. Switch from ' +\n          'ReactDOM.hydrate(element, container) to ' +\n          'ReactDOMClient.hydrateRoot(container, <App />)' +\n          '.render(element) or remove the Suspense components from ' +\n          'the server rendered components.',\n      );\n    }\n    workInProgress.lanes = laneToLanes(SyncLane);\n  } else if (isSuspenseInstanceFallback(suspenseInstance)) {\n    // This is a client-only boundary. Since we won't get any content from the server\n    // for this, we need to schedule that at a higher priority based on when it would\n    // have timed out. In theory we could render it in this pass but it would have the\n    // wrong priority associated with it and will prevent hydration of parent path.\n    // Instead, we'll leave work left on it to render it in a separate commit.\n\n    // TODO This time should be the time at which the server rendered response that is\n    // a parent to this boundary was displayed. However, since we currently don't have\n    // a protocol to transfer that time, we'll just estimate it by using the current\n    // time. This will mean that Suspense timeouts are slightly shifted to later than\n    // they should be.\n    // Schedule a normal pri update to render this content.\n    workInProgress.lanes = laneToLanes(DefaultHydrationLane);\n  } else {\n    // We'll continue hydrating the rest at offscreen priority since we'll already\n    // be showing the right content coming from the server, it is no rush.\n    workInProgress.lanes = laneToLanes(OffscreenLane);\n  }\n  return null;\n}\n\nfunction updateDehydratedSuspenseComponent(\n  current: Fiber,\n  workInProgress: Fiber,\n  didSuspend: boolean,\n  nextProps: any,\n  suspenseInstance: SuspenseInstance,\n  suspenseState: SuspenseState,\n  renderLanes: Lanes,\n): null | Fiber {\n  if (!didSuspend) {\n    // This is the first render pass. Attempt to hydrate.\n\n    // We should never be hydrating at this point because it is the first pass,\n    // but after we've already committed once.\n    warnIfHydrating();\n\n    if ((workInProgress.mode & ConcurrentMode) === NoMode) {\n      return retrySuspenseComponentWithoutHydrating(\n        current,\n        workInProgress,\n        renderLanes,\n        // TODO: When we delete legacy mode, we should make this error argument\n        // required — every concurrent mode path that causes hydration to\n        // de-opt to client rendering should have an error message.\n        null,\n      );\n    }\n\n    if (isSuspenseInstanceFallback(suspenseInstance)) {\n      // This boundary is in a permanent fallback state. In this case, we'll never\n      // get an update and we'll never be able to hydrate the final content. Let's just try the\n      // client side render instead.\n      let digest, message, stack;\n      if (__DEV__) {\n        ({digest, message, stack} = getSuspenseInstanceFallbackErrorDetails(\n          suspenseInstance,\n        ));\n      } else {\n        ({digest} = getSuspenseInstanceFallbackErrorDetails(suspenseInstance));\n      }\n\n      let error;\n      if (message) {\n        // eslint-disable-next-line react-internal/prod-error-codes\n        error = new Error(message);\n      } else {\n        error = new Error(\n          'The server could not finish this Suspense boundary, likely ' +\n            'due to an error during server rendering. Switched to ' +\n            'client rendering.',\n        );\n      }\n      const capturedValue = createCapturedValue(error, digest, stack);\n      return retrySuspenseComponentWithoutHydrating(\n        current,\n        workInProgress,\n        renderLanes,\n        capturedValue,\n      );\n    }\n\n    if (\n      enableLazyContextPropagation &&\n      // TODO: Factoring is a little weird, since we check this right below, too.\n      // But don't want to re-arrange the if-else chain until/unless this\n      // feature lands.\n      !didReceiveUpdate\n    ) {\n      // We need to check if any children have context before we decide to bail\n      // out, so propagate the changes now.\n      lazilyPropagateParentContextChanges(current, workInProgress, renderLanes);\n    }\n\n    // We use lanes to indicate that a child might depend on context, so if\n    // any context has changed, we need to treat is as if the input might have changed.\n    const hasContextChanged = includesSomeLane(renderLanes, current.childLanes);\n    if (didReceiveUpdate || hasContextChanged) {\n      // This boundary has changed since the first render. This means that we are now unable to\n      // hydrate it. We might still be able to hydrate it using a higher priority lane.\n      const root = getWorkInProgressRoot();\n      if (root !== null) {\n        const attemptHydrationAtLane = getBumpedLaneForHydration(\n          root,\n          renderLanes,\n        );\n        if (\n          attemptHydrationAtLane !== NoLane &&\n          attemptHydrationAtLane !== suspenseState.retryLane\n        ) {\n          // Intentionally mutating since this render will get interrupted. This\n          // is one of the very rare times where we mutate the current tree\n          // during the render phase.\n          suspenseState.retryLane = attemptHydrationAtLane;\n          // TODO: Ideally this would inherit the event time of the current render\n          const eventTime = NoTimestamp;\n          enqueueConcurrentRenderForLane(current, attemptHydrationAtLane);\n          scheduleUpdateOnFiber(\n            root,\n            current,\n            attemptHydrationAtLane,\n            eventTime,\n          );\n        } else {\n          // We have already tried to ping at a higher priority than we're rendering with\n          // so if we got here, we must have failed to hydrate at those levels. We must\n          // now give up. Instead, we're going to delete the whole subtree and instead inject\n          // a new real Suspense boundary to take its place, which may render content\n          // or fallback. This might suspend for a while and if it does we might still have\n          // an opportunity to hydrate before this pass commits.\n        }\n      }\n\n      // If we have scheduled higher pri work above, this will probably just abort the render\n      // since we now have higher priority work, but in case it doesn't, we need to prepare to\n      // render something, if we time out. Even if that requires us to delete everything and\n      // skip hydration.\n      // Delay having to do this as long as the suspense timeout allows us.\n      renderDidSuspendDelayIfPossible();\n      const capturedValue = createCapturedValue(\n        new Error(\n          'This Suspense boundary received an update before it finished ' +\n            'hydrating. This caused the boundary to switch to client rendering. ' +\n            'The usual way to fix this is to wrap the original update ' +\n            'in startTransition.',\n        ),\n      );\n      return retrySuspenseComponentWithoutHydrating(\n        current,\n        workInProgress,\n        renderLanes,\n        capturedValue,\n      );\n    } else if (isSuspenseInstancePending(suspenseInstance)) {\n      // This component is still pending more data from the server, so we can't hydrate its\n      // content. We treat it as if this component suspended itself. It might seem as if\n      // we could just try to render it client-side instead. However, this will perform a\n      // lot of unnecessary work and is unlikely to complete since it often will suspend\n      // on missing data anyway. Additionally, the server might be able to render more\n      // than we can on the client yet. In that case we'd end up with more fallback states\n      // on the client than if we just leave it alone. If the server times out or errors\n      // these should update this boundary to the permanent Fallback state instead.\n      // Mark it as having captured (i.e. suspended).\n      workInProgress.flags |= DidCapture;\n      // Leave the child in place. I.e. the dehydrated fragment.\n      workInProgress.child = current.child;\n      // Register a callback to retry this boundary once the server has sent the result.\n      const retry = retryDehydratedSuspenseBoundary.bind(null, current);\n      registerSuspenseInstanceRetry(suspenseInstance, retry);\n      return null;\n    } else {\n      // This is the first attempt.\n      reenterHydrationStateFromDehydratedSuspenseInstance(\n        workInProgress,\n        suspenseInstance,\n        suspenseState.treeContext,\n      );\n      const primaryChildren = nextProps.children;\n      const primaryChildFragment = mountSuspensePrimaryChildren(\n        workInProgress,\n        primaryChildren,\n        renderLanes,\n      );\n      // Mark the children as hydrating. This is a fast path to know whether this\n      // tree is part of a hydrating tree. This is used to determine if a child\n      // node has fully mounted yet, and for scheduling event replaying.\n      // Conceptually this is similar to Placement in that a new subtree is\n      // inserted into the React tree here. It just happens to not need DOM\n      // mutations because it already exists.\n      primaryChildFragment.flags |= Hydrating;\n      return primaryChildFragment;\n    }\n  } else {\n    // This is the second render pass. We already attempted to hydrated, but\n    // something either suspended or errored.\n\n    if (workInProgress.flags & ForceClientRender) {\n      // Something errored during hydration. Try again without hydrating.\n      workInProgress.flags &= ~ForceClientRender;\n      const capturedValue = createCapturedValue(\n        new Error(\n          'There was an error while hydrating this Suspense boundary. ' +\n            'Switched to client rendering.',\n        ),\n      );\n      return retrySuspenseComponentWithoutHydrating(\n        current,\n        workInProgress,\n        renderLanes,\n        capturedValue,\n      );\n    } else if ((workInProgress.memoizedState: null | SuspenseState) !== null) {\n      // Something suspended and we should still be in dehydrated mode.\n      // Leave the existing child in place.\n      workInProgress.child = current.child;\n      // The dehydrated completion pass expects this flag to be there\n      // but the normal suspense pass doesn't.\n      workInProgress.flags |= DidCapture;\n      return null;\n    } else {\n      // Suspended but we should no longer be in dehydrated mode.\n      // Therefore we now have to render the fallback.\n      const nextPrimaryChildren = nextProps.children;\n      const nextFallbackChildren = nextProps.fallback;\n      const fallbackChildFragment = mountSuspenseFallbackAfterRetryWithoutHydrating(\n        current,\n        workInProgress,\n        nextPrimaryChildren,\n        nextFallbackChildren,\n        renderLanes,\n      );\n      const primaryChildFragment: Fiber = (workInProgress.child: any);\n      primaryChildFragment.memoizedState = mountSuspenseOffscreenState(\n        renderLanes,\n      );\n      workInProgress.memoizedState = SUSPENDED_MARKER;\n      return fallbackChildFragment;\n    }\n  }\n}\n\nfunction scheduleSuspenseWorkOnFiber(\n  fiber: Fiber,\n  renderLanes: Lanes,\n  propagationRoot: Fiber,\n) {\n  fiber.lanes = mergeLanes(fiber.lanes, renderLanes);\n  const alternate = fiber.alternate;\n  if (alternate !== null) {\n    alternate.lanes = mergeLanes(alternate.lanes, renderLanes);\n  }\n  scheduleContextWorkOnParentPath(fiber.return, renderLanes, propagationRoot);\n}\n\nfunction propagateSuspenseContextChange(\n  workInProgress: Fiber,\n  firstChild: null | Fiber,\n  renderLanes: Lanes,\n): void {\n  // Mark any Suspense boundaries with fallbacks as having work to do.\n  // If they were previously forced into fallbacks, they may now be able\n  // to unblock.\n  let node = firstChild;\n  while (node !== null) {\n    if (node.tag === SuspenseComponent) {\n      const state: SuspenseState | null = node.memoizedState;\n      if (state !== null) {\n        scheduleSuspenseWorkOnFiber(node, renderLanes, workInProgress);\n      }\n    } else if (node.tag === SuspenseListComponent) {\n      // If the tail is hidden there might not be an Suspense boundaries\n      // to schedule work on. In this case we have to schedule it on the\n      // list itself.\n      // We don't have to traverse to the children of the list since\n      // the list will propagate the change when it rerenders.\n      scheduleSuspenseWorkOnFiber(node, renderLanes, workInProgress);\n    } else if (node.child !== null) {\n      node.child.return = node;\n      node = node.child;\n      continue;\n    }\n    if (node === workInProgress) {\n      return;\n    }\n    while (node.sibling === null) {\n      if (node.return === null || node.return === workInProgress) {\n        return;\n      }\n      node = node.return;\n    }\n    node.sibling.return = node.return;\n    node = node.sibling;\n  }\n}\n\nfunction findLastContentRow(firstChild: null | Fiber): null | Fiber {\n  // This is going to find the last row among these children that is already\n  // showing content on the screen, as opposed to being in fallback state or\n  // new. If a row has multiple Suspense boundaries, any of them being in the\n  // fallback state, counts as the whole row being in a fallback state.\n  // Note that the \"rows\" will be workInProgress, but any nested children\n  // will still be current since we haven't rendered them yet. The mounted\n  // order may not be the same as the new order. We use the new order.\n  let row = firstChild;\n  let lastContentRow: null | Fiber = null;\n  while (row !== null) {\n    const currentRow = row.alternate;\n    // New rows can't be content rows.\n    if (currentRow !== null && findFirstSuspended(currentRow) === null) {\n      lastContentRow = row;\n    }\n    row = row.sibling;\n  }\n  return lastContentRow;\n}\n\ntype SuspenseListRevealOrder = 'forwards' | 'backwards' | 'together' | void;\n\nfunction validateRevealOrder(revealOrder: SuspenseListRevealOrder) {\n  if (__DEV__) {\n    if (\n      revealOrder !== undefined &&\n      revealOrder !== 'forwards' &&\n      revealOrder !== 'backwards' &&\n      revealOrder !== 'together' &&\n      !didWarnAboutRevealOrder[revealOrder]\n    ) {\n      didWarnAboutRevealOrder[revealOrder] = true;\n      if (typeof revealOrder === 'string') {\n        switch (revealOrder.toLowerCase()) {\n          case 'together':\n          case 'forwards':\n          case 'backwards': {\n            console.error(\n              '\"%s\" is not a valid value for revealOrder on <SuspenseList />. ' +\n                'Use lowercase \"%s\" instead.',\n              revealOrder,\n              revealOrder.toLowerCase(),\n            );\n            break;\n          }\n          case 'forward':\n          case 'backward': {\n            console.error(\n              '\"%s\" is not a valid value for revealOrder on <SuspenseList />. ' +\n                'React uses the -s suffix in the spelling. Use \"%ss\" instead.',\n              revealOrder,\n              revealOrder.toLowerCase(),\n            );\n            break;\n          }\n          default:\n            console.error(\n              '\"%s\" is not a supported revealOrder on <SuspenseList />. ' +\n                'Did you mean \"together\", \"forwards\" or \"backwards\"?',\n              revealOrder,\n            );\n            break;\n        }\n      } else {\n        console.error(\n          '%s is not a supported value for revealOrder on <SuspenseList />. ' +\n            'Did you mean \"together\", \"forwards\" or \"backwards\"?',\n          revealOrder,\n        );\n      }\n    }\n  }\n}\n\nfunction validateTailOptions(\n  tailMode: SuspenseListTailMode,\n  revealOrder: SuspenseListRevealOrder,\n) {\n  if (__DEV__) {\n    if (tailMode !== undefined && !didWarnAboutTailOptions[tailMode]) {\n      if (tailMode !== 'collapsed' && tailMode !== 'hidden') {\n        didWarnAboutTailOptions[tailMode] = true;\n        console.error(\n          '\"%s\" is not a supported value for tail on <SuspenseList />. ' +\n            'Did you mean \"collapsed\" or \"hidden\"?',\n          tailMode,\n        );\n      } else if (revealOrder !== 'forwards' && revealOrder !== 'backwards') {\n        didWarnAboutTailOptions[tailMode] = true;\n        console.error(\n          '<SuspenseList tail=\"%s\" /> is only valid if revealOrder is ' +\n            '\"forwards\" or \"backwards\". ' +\n            'Did you mean to specify revealOrder=\"forwards\"?',\n          tailMode,\n        );\n      }\n    }\n  }\n}\n\nfunction validateSuspenseListNestedChild(childSlot: mixed, index: number) {\n  if (__DEV__) {\n    const isAnArray = isArray(childSlot);\n    const isIterable =\n      !isAnArray && typeof getIteratorFn(childSlot) === 'function';\n    if (isAnArray || isIterable) {\n      const type = isAnArray ? 'array' : 'iterable';\n      console.error(\n        'A nested %s was passed to row #%s in <SuspenseList />. Wrap it in ' +\n          'an additional SuspenseList to configure its revealOrder: ' +\n          '<SuspenseList revealOrder=...> ... ' +\n          '<SuspenseList revealOrder=...>{%s}</SuspenseList> ... ' +\n          '</SuspenseList>',\n        type,\n        index,\n        type,\n      );\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction validateSuspenseListChildren(\n  children: mixed,\n  revealOrder: SuspenseListRevealOrder,\n) {\n  if (__DEV__) {\n    if (\n      (revealOrder === 'forwards' || revealOrder === 'backwards') &&\n      children !== undefined &&\n      children !== null &&\n      children !== false\n    ) {\n      if (isArray(children)) {\n        for (let i = 0; i < children.length; i++) {\n          if (!validateSuspenseListNestedChild(children[i], i)) {\n            return;\n          }\n        }\n      } else {\n        const iteratorFn = getIteratorFn(children);\n        if (typeof iteratorFn === 'function') {\n          const childrenIterator = iteratorFn.call(children);\n          if (childrenIterator) {\n            let step = childrenIterator.next();\n            let i = 0;\n            for (; !step.done; step = childrenIterator.next()) {\n              if (!validateSuspenseListNestedChild(step.value, i)) {\n                return;\n              }\n              i++;\n            }\n          }\n        } else {\n          console.error(\n            'A single row was passed to a <SuspenseList revealOrder=\"%s\" />. ' +\n              'This is not useful since it needs multiple rows. ' +\n              'Did you mean to pass multiple children or an array?',\n            revealOrder,\n          );\n        }\n      }\n    }\n  }\n}\n\nfunction initSuspenseListRenderState(\n  workInProgress: Fiber,\n  isBackwards: boolean,\n  tail: null | Fiber,\n  lastContentRow: null | Fiber,\n  tailMode: SuspenseListTailMode,\n): void {\n  const renderState: null | SuspenseListRenderState =\n    workInProgress.memoizedState;\n  if (renderState === null) {\n    workInProgress.memoizedState = ({\n      isBackwards: isBackwards,\n      rendering: null,\n      renderingStartTime: 0,\n      last: lastContentRow,\n      tail: tail,\n      tailMode: tailMode,\n    }: SuspenseListRenderState);\n  } else {\n    // We can reuse the existing object from previous renders.\n    renderState.isBackwards = isBackwards;\n    renderState.rendering = null;\n    renderState.renderingStartTime = 0;\n    renderState.last = lastContentRow;\n    renderState.tail = tail;\n    renderState.tailMode = tailMode;\n  }\n}\n\n// This can end up rendering this component multiple passes.\n// The first pass splits the children fibers into two sets. A head and tail.\n// We first render the head. If anything is in fallback state, we do another\n// pass through beginWork to rerender all children (including the tail) with\n// the force suspend context. If the first render didn't have anything in\n// in fallback state. Then we render each row in the tail one-by-one.\n// That happens in the completeWork phase without going back to beginWork.\nfunction updateSuspenseListComponent(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  renderLanes: Lanes,\n) {\n  const nextProps = workInProgress.pendingProps;\n  const revealOrder: SuspenseListRevealOrder = nextProps.revealOrder;\n  const tailMode: SuspenseListTailMode = nextProps.tail;\n  const newChildren = nextProps.children;\n\n  validateRevealOrder(revealOrder);\n  validateTailOptions(tailMode, revealOrder);\n  validateSuspenseListChildren(newChildren, revealOrder);\n\n  reconcileChildren(current, workInProgress, newChildren, renderLanes);\n\n  let suspenseContext: SuspenseContext = suspenseStackCursor.current;\n\n  const shouldForceFallback = hasSuspenseContext(\n    suspenseContext,\n    (ForceSuspenseFallback: SuspenseContext),\n  );\n  if (shouldForceFallback) {\n    suspenseContext = setShallowSuspenseContext(\n      suspenseContext,\n      ForceSuspenseFallback,\n    );\n    workInProgress.flags |= DidCapture;\n  } else {\n    const didSuspendBefore =\n      current !== null && (current.flags & DidCapture) !== NoFlags;\n    if (didSuspendBefore) {\n      // If we previously forced a fallback, we need to schedule work\n      // on any nested boundaries to let them know to try to render\n      // again. This is the same as context updating.\n      propagateSuspenseContextChange(\n        workInProgress,\n        workInProgress.child,\n        renderLanes,\n      );\n    }\n    suspenseContext = setDefaultShallowSuspenseContext(suspenseContext);\n  }\n  pushSuspenseContext(workInProgress, suspenseContext);\n\n  if ((workInProgress.mode & ConcurrentMode) === NoMode) {\n    // In legacy mode, SuspenseList doesn't work so we just\n    // use make it a noop by treating it as the default revealOrder.\n    workInProgress.memoizedState = null;\n  } else {\n    switch (revealOrder) {\n      case 'forwards': {\n        const lastContentRow = findLastContentRow(workInProgress.child);\n        let tail;\n        if (lastContentRow === null) {\n          // The whole list is part of the tail.\n          // TODO: We could fast path by just rendering the tail now.\n          tail = workInProgress.child;\n          workInProgress.child = null;\n        } else {\n          // Disconnect the tail rows after the content row.\n          // We're going to render them separately later.\n          tail = lastContentRow.sibling;\n          lastContentRow.sibling = null;\n        }\n        initSuspenseListRenderState(\n          workInProgress,\n          false, // isBackwards\n          tail,\n          lastContentRow,\n          tailMode,\n        );\n        break;\n      }\n      case 'backwards': {\n        // We're going to find the first row that has existing content.\n        // At the same time we're going to reverse the list of everything\n        // we pass in the meantime. That's going to be our tail in reverse\n        // order.\n        let tail = null;\n        let row = workInProgress.child;\n        workInProgress.child = null;\n        while (row !== null) {\n          const currentRow = row.alternate;\n          // New rows can't be content rows.\n          if (currentRow !== null && findFirstSuspended(currentRow) === null) {\n            // This is the beginning of the main content.\n            workInProgress.child = row;\n            break;\n          }\n          const nextRow = row.sibling;\n          row.sibling = tail;\n          tail = row;\n          row = nextRow;\n        }\n        // TODO: If workInProgress.child is null, we can continue on the tail immediately.\n        initSuspenseListRenderState(\n          workInProgress,\n          true, // isBackwards\n          tail,\n          null, // last\n          tailMode,\n        );\n        break;\n      }\n      case 'together': {\n        initSuspenseListRenderState(\n          workInProgress,\n          false, // isBackwards\n          null, // tail\n          null, // last\n          undefined,\n        );\n        break;\n      }\n      default: {\n        // The default reveal order is the same as not having\n        // a boundary.\n        workInProgress.memoizedState = null;\n      }\n    }\n  }\n  return workInProgress.child;\n}\n\nfunction updatePortalComponent(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  renderLanes: Lanes,\n) {\n  pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);\n  const nextChildren = workInProgress.pendingProps;\n  if (current === null) {\n    // Portals are special because we don't append the children during mount\n    // but at commit. Therefore we need to track insertions which the normal\n    // flow doesn't do during mount. This doesn't happen at the root because\n    // the root always starts with a \"current\" with a null child.\n    // TODO: Consider unifying this with how the root works.\n    workInProgress.child = reconcileChildFibers(\n      workInProgress,\n      null,\n      nextChildren,\n      renderLanes,\n    );\n  } else {\n    reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  }\n  return workInProgress.child;\n}\n\nlet hasWarnedAboutUsingNoValuePropOnContextProvider = false;\n\nfunction updateContextProvider(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  renderLanes: Lanes,\n) {\n  const providerType: ReactProviderType<any> = workInProgress.type;\n  const context: ReactContext<any> = providerType._context;\n\n  const newProps = workInProgress.pendingProps;\n  const oldProps = workInProgress.memoizedProps;\n\n  const newValue = newProps.value;\n\n  if (__DEV__) {\n    if (!('value' in newProps)) {\n      if (!hasWarnedAboutUsingNoValuePropOnContextProvider) {\n        hasWarnedAboutUsingNoValuePropOnContextProvider = true;\n        console.error(\n          'The `value` prop is required for the `<Context.Provider>`. Did you misspell it or forget to pass it?',\n        );\n      }\n    }\n    const providerPropTypes = workInProgress.type.propTypes;\n\n    if (providerPropTypes) {\n      checkPropTypes(providerPropTypes, newProps, 'prop', 'Context.Provider');\n    }\n  }\n\n  pushProvider(workInProgress, context, newValue);\n\n  if (enableLazyContextPropagation) {\n    // In the lazy propagation implementation, we don't scan for matching\n    // consumers until something bails out, because until something bails out\n    // we're going to visit those nodes, anyway. The trade-off is that it shifts\n    // responsibility to the consumer to track whether something has changed.\n  } else {\n    if (oldProps !== null) {\n      const oldValue = oldProps.value;\n      if (is(oldValue, newValue)) {\n        // No change. Bailout early if children are the same.\n        if (\n          oldProps.children === newProps.children &&\n          !hasLegacyContextChanged()\n        ) {\n          return bailoutOnAlreadyFinishedWork(\n            current,\n            workInProgress,\n            renderLanes,\n          );\n        }\n      } else {\n        // The context value changed. Search for matching consumers and schedule\n        // them to update.\n        propagateContextChange(workInProgress, context, renderLanes);\n      }\n    }\n  }\n\n  const newChildren = newProps.children;\n  reconcileChildren(current, workInProgress, newChildren, renderLanes);\n  return workInProgress.child;\n}\n\nlet hasWarnedAboutUsingContextAsConsumer = false;\n\nfunction updateContextConsumer(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  renderLanes: Lanes,\n) {\n  let context: ReactContext<any> = workInProgress.type;\n  // The logic below for Context differs depending on PROD or DEV mode. In\n  // DEV mode, we create a separate object for Context.Consumer that acts\n  // like a proxy to Context. This proxy object adds unnecessary code in PROD\n  // so we use the old behaviour (Context.Consumer references Context) to\n  // reduce size and overhead. The separate object references context via\n  // a property called \"_context\", which also gives us the ability to check\n  // in DEV mode if this property exists or not and warn if it does not.\n  if (__DEV__) {\n    if ((context: any)._context === undefined) {\n      // This may be because it's a Context (rather than a Consumer).\n      // Or it may be because it's older React where they're the same thing.\n      // We only want to warn if we're sure it's a new React.\n      if (context !== context.Consumer) {\n        if (!hasWarnedAboutUsingContextAsConsumer) {\n          hasWarnedAboutUsingContextAsConsumer = true;\n          console.error(\n            'Rendering <Context> directly is not supported and will be removed in ' +\n              'a future major release. Did you mean to render <Context.Consumer> instead?',\n          );\n        }\n      }\n    } else {\n      context = (context: any)._context;\n    }\n  }\n  const newProps = workInProgress.pendingProps;\n  const render = newProps.children;\n\n  if (__DEV__) {\n    if (typeof render !== 'function') {\n      console.error(\n        'A context consumer was rendered with multiple children, or a child ' +\n          \"that isn't a function. A context consumer expects a single child \" +\n          'that is a function. If you did pass a function, make sure there ' +\n          'is no trailing or leading whitespace around it.',\n      );\n    }\n  }\n\n  prepareToReadContext(workInProgress, renderLanes);\n  const newValue = readContext(context);\n  if (enableSchedulingProfiler) {\n    markComponentRenderStarted(workInProgress);\n  }\n  let newChildren;\n  if (__DEV__) {\n    ReactCurrentOwner.current = workInProgress;\n    setIsRendering(true);\n    newChildren = render(newValue);\n    setIsRendering(false);\n  } else {\n    newChildren = render(newValue);\n  }\n  if (enableSchedulingProfiler) {\n    markComponentRenderStopped();\n  }\n\n  // React DevTools reads this flag.\n  workInProgress.flags |= PerformedWork;\n  reconcileChildren(current, workInProgress, newChildren, renderLanes);\n  return workInProgress.child;\n}\n\nfunction updateScopeComponent(current, workInProgress, renderLanes) {\n  const nextProps = workInProgress.pendingProps;\n  const nextChildren = nextProps.children;\n\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  return workInProgress.child;\n}\n\nexport function markWorkInProgressReceivedUpdate() {\n  didReceiveUpdate = true;\n}\n\nexport function checkIfWorkInProgressReceivedUpdate() {\n  return didReceiveUpdate;\n}\n\nfunction resetSuspendedCurrentOnMountInLegacyMode(current, workInProgress) {\n  if ((workInProgress.mode & ConcurrentMode) === NoMode) {\n    if (current !== null) {\n      // A lazy component only mounts if it suspended inside a non-\n      // concurrent tree, in an inconsistent state. We want to treat it like\n      // a new mount, even though an empty version of it already committed.\n      // Disconnect the alternate pointers.\n      current.alternate = null;\n      workInProgress.alternate = null;\n      // Since this is conceptually a new fiber, schedule a Placement effect\n      workInProgress.flags |= Placement;\n    }\n  }\n}\n\nfunction bailoutOnAlreadyFinishedWork(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  renderLanes: Lanes,\n): Fiber | null {\n  if (current !== null) {\n    // Reuse previous dependencies\n    workInProgress.dependencies = current.dependencies;\n  }\n\n  if (enableProfilerTimer) {\n    // Don't update \"base\" render times for bailouts.\n    stopProfilerTimerIfRunning(workInProgress);\n  }\n\n  markSkippedUpdateLanes(workInProgress.lanes);\n\n  // Check if the children have any pending work.\n  if (!includesSomeLane(renderLanes, workInProgress.childLanes)) {\n    // The children don't have any work either. We can skip them.\n    // TODO: Once we add back resuming, we should check if the children are\n    // a work-in-progress set. If so, we need to transfer their effects.\n\n    if (enableLazyContextPropagation && current !== null) {\n      // Before bailing out, check if there are any context changes in\n      // the children.\n      lazilyPropagateParentContextChanges(current, workInProgress, renderLanes);\n      if (!includesSomeLane(renderLanes, workInProgress.childLanes)) {\n        return null;\n      }\n    } else {\n      return null;\n    }\n  }\n\n  // This fiber doesn't have work, but its subtree does. Clone the child\n  // fibers and continue.\n  cloneChildFibers(current, workInProgress);\n  return workInProgress.child;\n}\n\nfunction remountFiber(\n  current: Fiber,\n  oldWorkInProgress: Fiber,\n  newWorkInProgress: Fiber,\n): Fiber | null {\n  if (__DEV__) {\n    const returnFiber = oldWorkInProgress.return;\n    if (returnFiber === null) {\n      // eslint-disable-next-line react-internal/prod-error-codes\n      throw new Error('Cannot swap the root fiber.');\n    }\n\n    // Disconnect from the old current.\n    // It will get deleted.\n    current.alternate = null;\n    oldWorkInProgress.alternate = null;\n\n    // Connect to the new tree.\n    newWorkInProgress.index = oldWorkInProgress.index;\n    newWorkInProgress.sibling = oldWorkInProgress.sibling;\n    newWorkInProgress.return = oldWorkInProgress.return;\n    newWorkInProgress.ref = oldWorkInProgress.ref;\n\n    // Replace the child/sibling pointers above it.\n    if (oldWorkInProgress === returnFiber.child) {\n      returnFiber.child = newWorkInProgress;\n    } else {\n      let prevSibling = returnFiber.child;\n      if (prevSibling === null) {\n        // eslint-disable-next-line react-internal/prod-error-codes\n        throw new Error('Expected parent to have a child.');\n      }\n      while (prevSibling.sibling !== oldWorkInProgress) {\n        prevSibling = prevSibling.sibling;\n        if (prevSibling === null) {\n          // eslint-disable-next-line react-internal/prod-error-codes\n          throw new Error('Expected to find the previous sibling.');\n        }\n      }\n      prevSibling.sibling = newWorkInProgress;\n    }\n\n    // Delete the old fiber and place the new one.\n    // Since the old fiber is disconnected, we have to schedule it manually.\n    const deletions = returnFiber.deletions;\n    if (deletions === null) {\n      returnFiber.deletions = [current];\n      returnFiber.flags |= ChildDeletion;\n    } else {\n      deletions.push(current);\n    }\n\n    newWorkInProgress.flags |= Placement;\n\n    // Restart work from the new fiber.\n    return newWorkInProgress;\n  } else {\n    throw new Error(\n      'Did not expect this call in production. ' +\n        'This is a bug in React. Please file an issue.',\n    );\n  }\n}\n\nfunction checkScheduledUpdateOrContext(\n  current: Fiber,\n  renderLanes: Lanes,\n): boolean {\n  // Before performing an early bailout, we must check if there are pending\n  // updates or context.\n  const updateLanes = current.lanes;\n  if (includesSomeLane(updateLanes, renderLanes)) {\n    return true;\n  }\n  // No pending update, but because context is propagated lazily, we need\n  // to check for a context change before we bail out.\n  if (enableLazyContextPropagation) {\n    const dependencies = current.dependencies;\n    if (dependencies !== null && checkIfContextChanged(dependencies)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction attemptEarlyBailoutIfNoScheduledUpdate(\n  current: Fiber,\n  workInProgress: Fiber,\n  renderLanes: Lanes,\n) {\n  // This fiber does not have any pending work. Bailout without entering\n  // the begin phase. There's still some bookkeeping we that needs to be done\n  // in this optimized path, mostly pushing stuff onto the stack.\n  switch (workInProgress.tag) {\n    case HostRoot:\n      pushHostRootContext(workInProgress);\n      const root: FiberRoot = workInProgress.stateNode;\n      pushRootTransition(workInProgress, root, renderLanes);\n\n      if (enableCache) {\n        const cache: Cache = current.memoizedState.cache;\n        pushCacheProvider(workInProgress, cache);\n      }\n      resetHydrationState();\n      break;\n    case HostComponent:\n      pushHostContext(workInProgress);\n      break;\n    case ClassComponent: {\n      const Component = workInProgress.type;\n      if (isLegacyContextProvider(Component)) {\n        pushLegacyContextProvider(workInProgress);\n      }\n      break;\n    }\n    case HostPortal:\n      pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);\n      break;\n    case ContextProvider: {\n      const newValue = workInProgress.memoizedProps.value;\n      const context: ReactContext<any> = workInProgress.type._context;\n      pushProvider(workInProgress, context, newValue);\n      break;\n    }\n    case Profiler:\n      if (enableProfilerTimer) {\n        // Profiler should only call onRender when one of its descendants actually rendered.\n        const hasChildWork = includesSomeLane(\n          renderLanes,\n          workInProgress.childLanes,\n        );\n        if (hasChildWork) {\n          workInProgress.flags |= Update;\n        }\n\n        if (enableProfilerCommitHooks) {\n          // Reset effect durations for the next eventual effect phase.\n          // These are reset during render to allow the DevTools commit hook a chance to read them,\n          const stateNode = workInProgress.stateNode;\n          stateNode.effectDuration = 0;\n          stateNode.passiveEffectDuration = 0;\n        }\n      }\n      break;\n    case SuspenseComponent: {\n      const state: SuspenseState | null = workInProgress.memoizedState;\n      if (state !== null) {\n        if (state.dehydrated !== null) {\n          pushSuspenseContext(\n            workInProgress,\n            setDefaultShallowSuspenseContext(suspenseStackCursor.current),\n          );\n          // We know that this component will suspend again because if it has\n          // been unsuspended it has committed as a resolved Suspense component.\n          // If it needs to be retried, it should have work scheduled on it.\n          workInProgress.flags |= DidCapture;\n          // We should never render the children of a dehydrated boundary until we\n          // upgrade it. We return null instead of bailoutOnAlreadyFinishedWork.\n          return null;\n        }\n\n        // If this boundary is currently timed out, we need to decide\n        // whether to retry the primary children, or to skip over it and\n        // go straight to the fallback. Check the priority of the primary\n        // child fragment.\n        const primaryChildFragment: Fiber = (workInProgress.child: any);\n        const primaryChildLanes = primaryChildFragment.childLanes;\n        if (includesSomeLane(renderLanes, primaryChildLanes)) {\n          // The primary children have pending work. Use the normal path\n          // to attempt to render the primary children again.\n          return updateSuspenseComponent(current, workInProgress, renderLanes);\n        } else {\n          // The primary child fragment does not have pending work marked\n          // on it\n          pushSuspenseContext(\n            workInProgress,\n            setDefaultShallowSuspenseContext(suspenseStackCursor.current),\n          );\n          // The primary children do not have pending work with sufficient\n          // priority. Bailout.\n          const child = bailoutOnAlreadyFinishedWork(\n            current,\n            workInProgress,\n            renderLanes,\n          );\n          if (child !== null) {\n            // The fallback children have pending work. Skip over the\n            // primary children and work on the fallback.\n            return child.sibling;\n          } else {\n            // Note: We can return `null` here because we already checked\n            // whether there were nested context consumers, via the call to\n            // `bailoutOnAlreadyFinishedWork` above.\n            return null;\n          }\n        }\n      } else {\n        pushSuspenseContext(\n          workInProgress,\n          setDefaultShallowSuspenseContext(suspenseStackCursor.current),\n        );\n      }\n      break;\n    }\n    case SuspenseListComponent: {\n      const didSuspendBefore = (current.flags & DidCapture) !== NoFlags;\n\n      let hasChildWork = includesSomeLane(\n        renderLanes,\n        workInProgress.childLanes,\n      );\n\n      if (enableLazyContextPropagation && !hasChildWork) {\n        // Context changes may not have been propagated yet. We need to do\n        // that now, before we can decide whether to bail out.\n        // TODO: We use `childLanes` as a heuristic for whether there is\n        // remaining work in a few places, including\n        // `bailoutOnAlreadyFinishedWork` and\n        // `updateDehydratedSuspenseComponent`. We should maybe extract this\n        // into a dedicated function.\n        lazilyPropagateParentContextChanges(\n          current,\n          workInProgress,\n          renderLanes,\n        );\n        hasChildWork = includesSomeLane(renderLanes, workInProgress.childLanes);\n      }\n\n      if (didSuspendBefore) {\n        if (hasChildWork) {\n          // If something was in fallback state last time, and we have all the\n          // same children then we're still in progressive loading state.\n          // Something might get unblocked by state updates or retries in the\n          // tree which will affect the tail. So we need to use the normal\n          // path to compute the correct tail.\n          return updateSuspenseListComponent(\n            current,\n            workInProgress,\n            renderLanes,\n          );\n        }\n        // If none of the children had any work, that means that none of\n        // them got retried so they'll still be blocked in the same way\n        // as before. We can fast bail out.\n        workInProgress.flags |= DidCapture;\n      }\n\n      // If nothing suspended before and we're rendering the same children,\n      // then the tail doesn't matter. Anything new that suspends will work\n      // in the \"together\" mode, so we can continue from the state we had.\n      const renderState = workInProgress.memoizedState;\n      if (renderState !== null) {\n        // Reset to the \"together\" mode in case we've started a different\n        // update in the past but didn't complete it.\n        renderState.rendering = null;\n        renderState.tail = null;\n        renderState.lastEffect = null;\n      }\n      pushSuspenseContext(workInProgress, suspenseStackCursor.current);\n\n      if (hasChildWork) {\n        break;\n      } else {\n        // If none of the children had any work, that means that none of\n        // them got retried so they'll still be blocked in the same way\n        // as before. We can fast bail out.\n        return null;\n      }\n    }\n    case OffscreenComponent:\n    case LegacyHiddenComponent: {\n      // Need to check if the tree still needs to be deferred. This is\n      // almost identical to the logic used in the normal update path,\n      // so we'll just enter that. The only difference is we'll bail out\n      // at the next level instead of this one, because the child props\n      // have not changed. Which is fine.\n      // TODO: Probably should refactor `beginWork` to split the bailout\n      // path from the normal path. I'm tempted to do a labeled break here\n      // but I won't :)\n      workInProgress.lanes = NoLanes;\n      return updateOffscreenComponent(current, workInProgress, renderLanes);\n    }\n    case CacheComponent: {\n      if (enableCache) {\n        const cache: Cache = current.memoizedState.cache;\n        pushCacheProvider(workInProgress, cache);\n      }\n      break;\n    }\n  }\n  return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n}\n\nfunction beginWork(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  renderLanes: Lanes,\n): Fiber | null {\n  if (__DEV__) {\n    if (workInProgress._debugNeedsRemount && current !== null) {\n      // This will restart the begin phase with a new fiber.\n      return remountFiber(\n        current,\n        workInProgress,\n        createFiberFromTypeAndProps(\n          workInProgress.type,\n          workInProgress.key,\n          workInProgress.pendingProps,\n          workInProgress._debugOwner || null,\n          workInProgress.mode,\n          workInProgress.lanes,\n        ),\n      );\n    }\n  }\n\n  if (current !== null) {\n    const oldProps = current.memoizedProps;\n    const newProps = workInProgress.pendingProps;\n\n    if (\n      oldProps !== newProps ||\n      hasLegacyContextChanged() ||\n      // Force a re-render if the implementation changed due to hot reload:\n      (__DEV__ ? workInProgress.type !== current.type : false)\n    ) {\n      // If props or context changed, mark the fiber as having performed work.\n      // This may be unset if the props are determined to be equal later (memo).\n      didReceiveUpdate = true;\n    } else {\n      // Neither props nor legacy context changes. Check if there's a pending\n      // update or context change.\n      const hasScheduledUpdateOrContext = checkScheduledUpdateOrContext(\n        current,\n        renderLanes,\n      );\n      if (\n        !hasScheduledUpdateOrContext &&\n        // If this is the second pass of an error or suspense boundary, there\n        // may not be work scheduled on `current`, so we check for this flag.\n        (workInProgress.flags & DidCapture) === NoFlags\n      ) {\n        // No pending updates or context. Bail out now.\n        didReceiveUpdate = false;\n        return attemptEarlyBailoutIfNoScheduledUpdate(\n          current,\n          workInProgress,\n          renderLanes,\n        );\n      }\n      if ((current.flags & ForceUpdateForLegacySuspense) !== NoFlags) {\n        // This is a special case that only exists for legacy mode.\n        // See https://github.com/facebook/react/pull/19216.\n        didReceiveUpdate = true;\n      } else {\n        // An update was scheduled on this fiber, but there are no new props\n        // nor legacy context. Set this to false. If an update queue or context\n        // consumer produces a changed value, it will set this to true. Otherwise,\n        // the component will assume the children have not changed and bail out.\n        didReceiveUpdate = false;\n      }\n    }\n  } else {\n    didReceiveUpdate = false;\n\n    if (getIsHydrating() && isForkedChild(workInProgress)) {\n      // Check if this child belongs to a list of muliple children in\n      // its parent.\n      //\n      // In a true multi-threaded implementation, we would render children on\n      // parallel threads. This would represent the beginning of a new render\n      // thread for this subtree.\n      //\n      // We only use this for id generation during hydration, which is why the\n      // logic is located in this special branch.\n      const slotIndex = workInProgress.index;\n      const numberOfForks = getForksAtLevel(workInProgress);\n      pushTreeId(workInProgress, numberOfForks, slotIndex);\n    }\n  }\n\n  // Before entering the begin phase, clear pending update priority.\n  // TODO: This assumes that we're about to evaluate the component and process\n  // the update queue. However, there's an exception: SimpleMemoComponent\n  // sometimes bails out later in the begin phase. This indicates that we should\n  // move this assignment out of the common path and into each branch.\n  workInProgress.lanes = NoLanes;\n\n  switch (workInProgress.tag) {\n    case IndeterminateComponent: {\n      return mountIndeterminateComponent(\n        current,\n        workInProgress,\n        workInProgress.type,\n        renderLanes,\n      );\n    }\n    case LazyComponent: {\n      const elementType = workInProgress.elementType;\n      return mountLazyComponent(\n        current,\n        workInProgress,\n        elementType,\n        renderLanes,\n      );\n    }\n    case FunctionComponent: {\n      const Component = workInProgress.type;\n      const unresolvedProps = workInProgress.pendingProps;\n      const resolvedProps =\n        workInProgress.elementType === Component\n          ? unresolvedProps\n          : resolveDefaultProps(Component, unresolvedProps);\n      return updateFunctionComponent(\n        current,\n        workInProgress,\n        Component,\n        resolvedProps,\n        renderLanes,\n      );\n    }\n    case ClassComponent: {\n      const Component = workInProgress.type;\n      const unresolvedProps = workInProgress.pendingProps;\n      const resolvedProps =\n        workInProgress.elementType === Component\n          ? unresolvedProps\n          : resolveDefaultProps(Component, unresolvedProps);\n      return updateClassComponent(\n        current,\n        workInProgress,\n        Component,\n        resolvedProps,\n        renderLanes,\n      );\n    }\n    case HostRoot:\n      return updateHostRoot(current, workInProgress, renderLanes);\n    case HostComponent:\n      return updateHostComponent(current, workInProgress, renderLanes);\n    case HostText:\n      return updateHostText(current, workInProgress);\n    case SuspenseComponent:\n      return updateSuspenseComponent(current, workInProgress, renderLanes);\n    case HostPortal:\n      return updatePortalComponent(current, workInProgress, renderLanes);\n    case ForwardRef: {\n      const type = workInProgress.type;\n      const unresolvedProps = workInProgress.pendingProps;\n      const resolvedProps =\n        workInProgress.elementType === type\n          ? unresolvedProps\n          : resolveDefaultProps(type, unresolvedProps);\n      return updateForwardRef(\n        current,\n        workInProgress,\n        type,\n        resolvedProps,\n        renderLanes,\n      );\n    }\n    case Fragment:\n      return updateFragment(current, workInProgress, renderLanes);\n    case Mode:\n      return updateMode(current, workInProgress, renderLanes);\n    case Profiler:\n      return updateProfiler(current, workInProgress, renderLanes);\n    case ContextProvider:\n      return updateContextProvider(current, workInProgress, renderLanes);\n    case ContextConsumer:\n      return updateContextConsumer(current, workInProgress, renderLanes);\n    case MemoComponent: {\n      const type = workInProgress.type;\n      const unresolvedProps = workInProgress.pendingProps;\n      // Resolve outer props first, then resolve inner props.\n      let resolvedProps = resolveDefaultProps(type, unresolvedProps);\n      if (__DEV__) {\n        if (workInProgress.type !== workInProgress.elementType) {\n          const outerPropTypes = type.propTypes;\n          if (outerPropTypes) {\n            checkPropTypes(\n              outerPropTypes,\n              resolvedProps, // Resolved for outer only\n              'prop',\n              getComponentNameFromType(type),\n            );\n          }\n        }\n      }\n      resolvedProps = resolveDefaultProps(type.type, resolvedProps);\n      return updateMemoComponent(\n        current,\n        workInProgress,\n        type,\n        resolvedProps,\n        renderLanes,\n      );\n    }\n    case SimpleMemoComponent: {\n      return updateSimpleMemoComponent(\n        current,\n        workInProgress,\n        workInProgress.type,\n        workInProgress.pendingProps,\n        renderLanes,\n      );\n    }\n    case IncompleteClassComponent: {\n      const Component = workInProgress.type;\n      const unresolvedProps = workInProgress.pendingProps;\n      const resolvedProps =\n        workInProgress.elementType === Component\n          ? unresolvedProps\n          : resolveDefaultProps(Component, unresolvedProps);\n      return mountIncompleteClassComponent(\n        current,\n        workInProgress,\n        Component,\n        resolvedProps,\n        renderLanes,\n      );\n    }\n    case SuspenseListComponent: {\n      return updateSuspenseListComponent(current, workInProgress, renderLanes);\n    }\n    case ScopeComponent: {\n      if (enableScopeAPI) {\n        return updateScopeComponent(current, workInProgress, renderLanes);\n      }\n      break;\n    }\n    case OffscreenComponent: {\n      return updateOffscreenComponent(current, workInProgress, renderLanes);\n    }\n    case LegacyHiddenComponent: {\n      if (enableLegacyHidden) {\n        return updateLegacyHiddenComponent(\n          current,\n          workInProgress,\n          renderLanes,\n        );\n      }\n      break;\n    }\n    case CacheComponent: {\n      if (enableCache) {\n        return updateCacheComponent(current, workInProgress, renderLanes);\n      }\n      break;\n    }\n    case TracingMarkerComponent: {\n      if (enableTransitionTracing) {\n        return updateTracingMarkerComponent(\n          current,\n          workInProgress,\n          renderLanes,\n        );\n      }\n      break;\n    }\n  }\n\n  throw new Error(\n    `Unknown unit of work tag (${workInProgress.tag}). This error is likely caused by a bug in ` +\n      'React. Please file an issue.',\n  );\n}\n\nexport {beginWork};\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactInternalTypes';\nimport type {RootState} from './ReactFiberRoot.old';\nimport type {Lanes, Lane} from './ReactFiberLane.old';\nimport type {\n  ReactScopeInstance,\n  ReactContext,\n  Wakeable,\n} from 'shared/ReactTypes';\nimport type {FiberRoot} from './ReactInternalTypes';\nimport type {\n  Instance,\n  Type,\n  Props,\n  Container,\n  ChildSet,\n} from './ReactFiberHostConfig';\nimport type {\n  SuspenseState,\n  SuspenseListRenderState,\n} from './ReactFiberSuspenseComponent.old';\nimport type {SuspenseContext} from './ReactFiberSuspenseContext.old';\nimport type {OffscreenState} from './ReactFiberOffscreenComponent';\nimport type {Cache} from './ReactFiberCacheComponent.old';\nimport {\n  enableSuspenseAvoidThisFallback,\n  enableLegacyHidden,\n} from 'shared/ReactFeatureFlags';\n\nimport {resetWorkInProgressVersions as resetMutableSourceWorkInProgressVersions} from './ReactMutableSource.old';\n\nimport {now} from './Scheduler';\n\nimport {\n  IndeterminateComponent,\n  FunctionComponent,\n  ClassComponent,\n  HostRoot,\n  HostComponent,\n  HostText,\n  HostPortal,\n  ContextProvider,\n  ContextConsumer,\n  ForwardRef,\n  Fragment,\n  Mode,\n  Profiler,\n  SuspenseComponent,\n  SuspenseListComponent,\n  MemoComponent,\n  SimpleMemoComponent,\n  LazyComponent,\n  IncompleteClassComponent,\n  ScopeComponent,\n  OffscreenComponent,\n  LegacyHiddenComponent,\n  CacheComponent,\n  TracingMarkerComponent,\n} from './ReactWorkTags';\nimport {NoMode, ConcurrentMode, ProfileMode} from './ReactTypeOfMode';\nimport {\n  Ref,\n  RefStatic,\n  Placement,\n  Update,\n  Visibility,\n  NoFlags,\n  DidCapture,\n  Snapshot,\n  ChildDeletion,\n  StaticMask,\n  MutationMask,\n  Passive,\n  Incomplete,\n  ShouldCapture,\n  ForceClientRender,\n} from './ReactFiberFlags';\n\nimport {\n  createInstance,\n  createTextInstance,\n  appendInitialChild,\n  finalizeInitialChildren,\n  prepareUpdate,\n  supportsMutation,\n  supportsPersistence,\n  cloneInstance,\n  cloneHiddenInstance,\n  cloneHiddenTextInstance,\n  createContainerChildSet,\n  appendChildToContainerChildSet,\n  finalizeContainerChildren,\n  preparePortalMount,\n  prepareScopeUpdate,\n} from './ReactFiberHostConfig';\nimport {\n  getRootHostContainer,\n  popHostContext,\n  getHostContext,\n  popHostContainer,\n} from './ReactFiberHostContext.old';\nimport {\n  suspenseStackCursor,\n  InvisibleParentSuspenseContext,\n  hasSuspenseContext,\n  popSuspenseContext,\n  pushSuspenseContext,\n  setShallowSuspenseContext,\n  ForceSuspenseFallback,\n  setDefaultShallowSuspenseContext,\n} from './ReactFiberSuspenseContext.old';\nimport {findFirstSuspended} from './ReactFiberSuspenseComponent.old';\nimport {\n  isContextProvider as isLegacyContextProvider,\n  popContext as popLegacyContext,\n  popTopLevelContextObject as popTopLevelLegacyContextObject,\n} from './ReactFiberContext.old';\nimport {popProvider} from './ReactFiberNewContext.old';\nimport {\n  prepareToHydrateHostInstance,\n  prepareToHydrateHostTextInstance,\n  prepareToHydrateHostSuspenseInstance,\n  warnIfUnhydratedTailNodes,\n  popHydrationState,\n  resetHydrationState,\n  getIsHydrating,\n  hasUnhydratedTailNodes,\n  upgradeHydrationErrorsToRecoverable,\n} from './ReactFiberHydrationContext.old';\nimport {\n  enableSuspenseCallback,\n  enableScopeAPI,\n  enableProfilerTimer,\n  enableCache,\n  enableSuspenseLayoutEffectSemantics,\n  enableTransitionTracing,\n} from 'shared/ReactFeatureFlags';\nimport {\n  renderDidSuspend,\n  renderDidSuspendDelayIfPossible,\n  renderHasNotSuspendedYet,\n  popRenderLanes,\n  getRenderTargetTime,\n  subtreeRenderLanes,\n  getWorkInProgressTransitions,\n} from './ReactFiberWorkLoop.old';\nimport {\n  OffscreenLane,\n  SomeRetryLane,\n  NoLanes,\n  includesSomeLane,\n  mergeLanes,\n} from './ReactFiberLane.old';\nimport {resetChildFibers} from './ReactChildFiber.old';\nimport {createScopeInstance} from './ReactFiberScope.old';\nimport {transferActualDuration} from './ReactProfilerTimer.old';\nimport {popCacheProvider} from './ReactFiberCacheComponent.old';\nimport {popTreeContext} from './ReactFiberTreeContext.old';\nimport {popRootTransition, popTransition} from './ReactFiberTransition.old';\n\nfunction markUpdate(workInProgress: Fiber) {\n  // Tag the fiber with an update effect. This turns a Placement into\n  // a PlacementAndUpdate.\n  workInProgress.flags |= Update;\n}\n\nfunction markRef(workInProgress: Fiber) {\n  workInProgress.flags |= Ref;\n  if (enableSuspenseLayoutEffectSemantics) {\n    workInProgress.flags |= RefStatic;\n  }\n}\n\nfunction hadNoMutationsEffects(current: null | Fiber, completedWork: Fiber) {\n  const didBailout = current !== null && current.child === completedWork.child;\n  if (didBailout) {\n    return true;\n  }\n\n  if ((completedWork.flags & ChildDeletion) !== NoFlags) {\n    return false;\n  }\n\n  // TODO: If we move the `hadNoMutationsEffects` call after `bubbleProperties`\n  // then we only have to check the `completedWork.subtreeFlags`.\n  let child = completedWork.child;\n  while (child !== null) {\n    if (\n      (child.flags & MutationMask) !== NoFlags ||\n      (child.subtreeFlags & MutationMask) !== NoFlags\n    ) {\n      return false;\n    }\n    child = child.sibling;\n  }\n  return true;\n}\n\nlet appendAllChildren;\nlet updateHostContainer;\nlet updateHostComponent;\nlet updateHostText;\nif (supportsMutation) {\n  // Mutation mode\n\n  appendAllChildren = function(\n    parent: Instance,\n    workInProgress: Fiber,\n    needsVisibilityToggle: boolean,\n    isHidden: boolean,\n  ) {\n    // We only have the top Fiber that was created but we need recurse down its\n    // children to find all the terminal nodes.\n    let node = workInProgress.child;\n    while (node !== null) {\n      if (node.tag === HostComponent || node.tag === HostText) {\n        appendInitialChild(parent, node.stateNode);\n      } else if (node.tag === HostPortal) {\n        // If we have a portal child, then we don't want to traverse\n        // down its children. Instead, we'll get insertions from each child in\n        // the portal directly.\n      } else if (node.child !== null) {\n        node.child.return = node;\n        node = node.child;\n        continue;\n      }\n      if (node === workInProgress) {\n        return;\n      }\n      while (node.sibling === null) {\n        if (node.return === null || node.return === workInProgress) {\n          return;\n        }\n        node = node.return;\n      }\n      node.sibling.return = node.return;\n      node = node.sibling;\n    }\n  };\n\n  updateHostContainer = function(current: null | Fiber, workInProgress: Fiber) {\n    // Noop\n  };\n  updateHostComponent = function(\n    current: Fiber,\n    workInProgress: Fiber,\n    type: Type,\n    newProps: Props,\n    rootContainerInstance: Container,\n  ) {\n    // If we have an alternate, that means this is an update and we need to\n    // schedule a side-effect to do the updates.\n    const oldProps = current.memoizedProps;\n    if (oldProps === newProps) {\n      // In mutation mode, this is sufficient for a bailout because\n      // we won't touch this node even if children changed.\n      return;\n    }\n\n    // If we get updated because one of our children updated, we don't\n    // have newProps so we'll have to reuse them.\n    // TODO: Split the update API as separate for the props vs. children.\n    // Even better would be if children weren't special cased at all tho.\n    const instance: Instance = workInProgress.stateNode;\n    const currentHostContext = getHostContext();\n    // TODO: Experiencing an error where oldProps is null. Suggests a host\n    // component is hitting the resume path. Figure out why. Possibly\n    // related to `hidden`.\n    const updatePayload = prepareUpdate(\n      instance,\n      type,\n      oldProps,\n      newProps,\n      rootContainerInstance,\n      currentHostContext,\n    );\n    // TODO: Type this specific to this type of component.\n    workInProgress.updateQueue = (updatePayload: any);\n    // If the update payload indicates that there is a change or if there\n    // is a new ref we mark this as an update. All the work is done in commitWork.\n    if (updatePayload) {\n      markUpdate(workInProgress);\n    }\n  };\n  updateHostText = function(\n    current: Fiber,\n    workInProgress: Fiber,\n    oldText: string,\n    newText: string,\n  ) {\n    // If the text differs, mark it as an update. All the work in done in commitWork.\n    if (oldText !== newText) {\n      markUpdate(workInProgress);\n    }\n  };\n} else if (supportsPersistence) {\n  // Persistent host tree mode\n\n  appendAllChildren = function(\n    parent: Instance,\n    workInProgress: Fiber,\n    needsVisibilityToggle: boolean,\n    isHidden: boolean,\n  ) {\n    // We only have the top Fiber that was created but we need recurse down its\n    // children to find all the terminal nodes.\n    let node = workInProgress.child;\n    while (node !== null) {\n      // eslint-disable-next-line no-labels\n      branches: if (node.tag === HostComponent) {\n        let instance = node.stateNode;\n        if (needsVisibilityToggle && isHidden) {\n          // This child is inside a timed out tree. Hide it.\n          const props = node.memoizedProps;\n          const type = node.type;\n          instance = cloneHiddenInstance(instance, type, props, node);\n        }\n        appendInitialChild(parent, instance);\n      } else if (node.tag === HostText) {\n        let instance = node.stateNode;\n        if (needsVisibilityToggle && isHidden) {\n          // This child is inside a timed out tree. Hide it.\n          const text = node.memoizedProps;\n          instance = cloneHiddenTextInstance(instance, text, node);\n        }\n        appendInitialChild(parent, instance);\n      } else if (node.tag === HostPortal) {\n        // If we have a portal child, then we don't want to traverse\n        // down its children. Instead, we'll get insertions from each child in\n        // the portal directly.\n      } else if (\n        node.tag === OffscreenComponent &&\n        node.memoizedState !== null\n      ) {\n        // The children in this boundary are hidden. Toggle their visibility\n        // before appending.\n        const child = node.child;\n        if (child !== null) {\n          child.return = node;\n        }\n        appendAllChildren(parent, node, true, true);\n      } else if (node.child !== null) {\n        node.child.return = node;\n        node = node.child;\n        continue;\n      }\n      // $FlowFixMe This is correct but Flow is confused by the labeled break.\n      node = (node: Fiber);\n      if (node === workInProgress) {\n        return;\n      }\n      while (node.sibling === null) {\n        if (node.return === null || node.return === workInProgress) {\n          return;\n        }\n        node = node.return;\n      }\n      node.sibling.return = node.return;\n      node = node.sibling;\n    }\n  };\n\n  // An unfortunate fork of appendAllChildren because we have two different parent types.\n  const appendAllChildrenToContainer = function(\n    containerChildSet: ChildSet,\n    workInProgress: Fiber,\n    needsVisibilityToggle: boolean,\n    isHidden: boolean,\n  ) {\n    // We only have the top Fiber that was created but we need recurse down its\n    // children to find all the terminal nodes.\n    let node = workInProgress.child;\n    while (node !== null) {\n      // eslint-disable-next-line no-labels\n      branches: if (node.tag === HostComponent) {\n        let instance = node.stateNode;\n        if (needsVisibilityToggle && isHidden) {\n          // This child is inside a timed out tree. Hide it.\n          const props = node.memoizedProps;\n          const type = node.type;\n          instance = cloneHiddenInstance(instance, type, props, node);\n        }\n        appendChildToContainerChildSet(containerChildSet, instance);\n      } else if (node.tag === HostText) {\n        let instance = node.stateNode;\n        if (needsVisibilityToggle && isHidden) {\n          // This child is inside a timed out tree. Hide it.\n          const text = node.memoizedProps;\n          instance = cloneHiddenTextInstance(instance, text, node);\n        }\n        appendChildToContainerChildSet(containerChildSet, instance);\n      } else if (node.tag === HostPortal) {\n        // If we have a portal child, then we don't want to traverse\n        // down its children. Instead, we'll get insertions from each child in\n        // the portal directly.\n      } else if (\n        node.tag === OffscreenComponent &&\n        node.memoizedState !== null\n      ) {\n        // The children in this boundary are hidden. Toggle their visibility\n        // before appending.\n        const child = node.child;\n        if (child !== null) {\n          child.return = node;\n        }\n        appendAllChildrenToContainer(containerChildSet, node, true, true);\n      } else if (node.child !== null) {\n        node.child.return = node;\n        node = node.child;\n        continue;\n      }\n      // $FlowFixMe This is correct but Flow is confused by the labeled break.\n      node = (node: Fiber);\n      if (node === workInProgress) {\n        return;\n      }\n      while (node.sibling === null) {\n        if (node.return === null || node.return === workInProgress) {\n          return;\n        }\n        node = node.return;\n      }\n      node.sibling.return = node.return;\n      node = node.sibling;\n    }\n  };\n  updateHostContainer = function(current: null | Fiber, workInProgress: Fiber) {\n    const portalOrRoot: {\n      containerInfo: Container,\n      pendingChildren: ChildSet,\n      ...\n    } = workInProgress.stateNode;\n    const childrenUnchanged = hadNoMutationsEffects(current, workInProgress);\n    if (childrenUnchanged) {\n      // No changes, just reuse the existing instance.\n    } else {\n      const container = portalOrRoot.containerInfo;\n      const newChildSet = createContainerChildSet(container);\n      // If children might have changed, we have to add them all to the set.\n      appendAllChildrenToContainer(newChildSet, workInProgress, false, false);\n      portalOrRoot.pendingChildren = newChildSet;\n      // Schedule an update on the container to swap out the container.\n      markUpdate(workInProgress);\n      finalizeContainerChildren(container, newChildSet);\n    }\n  };\n  updateHostComponent = function(\n    current: Fiber,\n    workInProgress: Fiber,\n    type: Type,\n    newProps: Props,\n    rootContainerInstance: Container,\n  ) {\n    const currentInstance = current.stateNode;\n    const oldProps = current.memoizedProps;\n    // If there are no effects associated with this node, then none of our children had any updates.\n    // This guarantees that we can reuse all of them.\n    const childrenUnchanged = hadNoMutationsEffects(current, workInProgress);\n    if (childrenUnchanged && oldProps === newProps) {\n      // No changes, just reuse the existing instance.\n      // Note that this might release a previous clone.\n      workInProgress.stateNode = currentInstance;\n      return;\n    }\n    const recyclableInstance: Instance = workInProgress.stateNode;\n    const currentHostContext = getHostContext();\n    let updatePayload = null;\n    if (oldProps !== newProps) {\n      updatePayload = prepareUpdate(\n        recyclableInstance,\n        type,\n        oldProps,\n        newProps,\n        rootContainerInstance,\n        currentHostContext,\n      );\n    }\n    if (childrenUnchanged && updatePayload === null) {\n      // No changes, just reuse the existing instance.\n      // Note that this might release a previous clone.\n      workInProgress.stateNode = currentInstance;\n      return;\n    }\n    const newInstance = cloneInstance(\n      currentInstance,\n      updatePayload,\n      type,\n      oldProps,\n      newProps,\n      workInProgress,\n      childrenUnchanged,\n      recyclableInstance,\n    );\n    if (\n      finalizeInitialChildren(\n        newInstance,\n        type,\n        newProps,\n        rootContainerInstance,\n        currentHostContext,\n      )\n    ) {\n      markUpdate(workInProgress);\n    }\n    workInProgress.stateNode = newInstance;\n    if (childrenUnchanged) {\n      // If there are no other effects in this tree, we need to flag this node as having one.\n      // Even though we're not going to use it for anything.\n      // Otherwise parents won't know that there are new children to propagate upwards.\n      markUpdate(workInProgress);\n    } else {\n      // If children might have changed, we have to add them all to the set.\n      appendAllChildren(newInstance, workInProgress, false, false);\n    }\n  };\n  updateHostText = function(\n    current: Fiber,\n    workInProgress: Fiber,\n    oldText: string,\n    newText: string,\n  ) {\n    if (oldText !== newText) {\n      // If the text content differs, we'll create a new text instance for it.\n      const rootContainerInstance = getRootHostContainer();\n      const currentHostContext = getHostContext();\n      workInProgress.stateNode = createTextInstance(\n        newText,\n        rootContainerInstance,\n        currentHostContext,\n        workInProgress,\n      );\n      // We'll have to mark it as having an effect, even though we won't use the effect for anything.\n      // This lets the parents know that at least one of their children has changed.\n      markUpdate(workInProgress);\n    } else {\n      workInProgress.stateNode = current.stateNode;\n    }\n  };\n} else {\n  // No host operations\n  updateHostContainer = function(current: null | Fiber, workInProgress: Fiber) {\n    // Noop\n  };\n  updateHostComponent = function(\n    current: Fiber,\n    workInProgress: Fiber,\n    type: Type,\n    newProps: Props,\n    rootContainerInstance: Container,\n  ) {\n    // Noop\n  };\n  updateHostText = function(\n    current: Fiber,\n    workInProgress: Fiber,\n    oldText: string,\n    newText: string,\n  ) {\n    // Noop\n  };\n}\n\nfunction cutOffTailIfNeeded(\n  renderState: SuspenseListRenderState,\n  hasRenderedATailFallback: boolean,\n) {\n  if (getIsHydrating()) {\n    // If we're hydrating, we should consume as many items as we can\n    // so we don't leave any behind.\n    return;\n  }\n  switch (renderState.tailMode) {\n    case 'hidden': {\n      // Any insertions at the end of the tail list after this point\n      // should be invisible. If there are already mounted boundaries\n      // anything before them are not considered for collapsing.\n      // Therefore we need to go through the whole tail to find if\n      // there are any.\n      let tailNode = renderState.tail;\n      let lastTailNode = null;\n      while (tailNode !== null) {\n        if (tailNode.alternate !== null) {\n          lastTailNode = tailNode;\n        }\n        tailNode = tailNode.sibling;\n      }\n      // Next we're simply going to delete all insertions after the\n      // last rendered item.\n      if (lastTailNode === null) {\n        // All remaining items in the tail are insertions.\n        renderState.tail = null;\n      } else {\n        // Detach the insertion after the last node that was already\n        // inserted.\n        lastTailNode.sibling = null;\n      }\n      break;\n    }\n    case 'collapsed': {\n      // Any insertions at the end of the tail list after this point\n      // should be invisible. If there are already mounted boundaries\n      // anything before them are not considered for collapsing.\n      // Therefore we need to go through the whole tail to find if\n      // there are any.\n      let tailNode = renderState.tail;\n      let lastTailNode = null;\n      while (tailNode !== null) {\n        if (tailNode.alternate !== null) {\n          lastTailNode = tailNode;\n        }\n        tailNode = tailNode.sibling;\n      }\n      // Next we're simply going to delete all insertions after the\n      // last rendered item.\n      if (lastTailNode === null) {\n        // All remaining items in the tail are insertions.\n        if (!hasRenderedATailFallback && renderState.tail !== null) {\n          // We suspended during the head. We want to show at least one\n          // row at the tail. So we'll keep on and cut off the rest.\n          renderState.tail.sibling = null;\n        } else {\n          renderState.tail = null;\n        }\n      } else {\n        // Detach the insertion after the last node that was already\n        // inserted.\n        lastTailNode.sibling = null;\n      }\n      break;\n    }\n  }\n}\n\nfunction bubbleProperties(completedWork: Fiber) {\n  const didBailout =\n    completedWork.alternate !== null &&\n    completedWork.alternate.child === completedWork.child;\n\n  let newChildLanes = NoLanes;\n  let subtreeFlags = NoFlags;\n\n  if (!didBailout) {\n    // Bubble up the earliest expiration time.\n    if (enableProfilerTimer && (completedWork.mode & ProfileMode) !== NoMode) {\n      // In profiling mode, resetChildExpirationTime is also used to reset\n      // profiler durations.\n      let actualDuration = completedWork.actualDuration;\n      let treeBaseDuration = ((completedWork.selfBaseDuration: any): number);\n\n      let child = completedWork.child;\n      while (child !== null) {\n        newChildLanes = mergeLanes(\n          newChildLanes,\n          mergeLanes(child.lanes, child.childLanes),\n        );\n\n        subtreeFlags |= child.subtreeFlags;\n        subtreeFlags |= child.flags;\n\n        // When a fiber is cloned, its actualDuration is reset to 0. This value will\n        // only be updated if work is done on the fiber (i.e. it doesn't bailout).\n        // When work is done, it should bubble to the parent's actualDuration. If\n        // the fiber has not been cloned though, (meaning no work was done), then\n        // this value will reflect the amount of time spent working on a previous\n        // render. In that case it should not bubble. We determine whether it was\n        // cloned by comparing the child pointer.\n        actualDuration += child.actualDuration;\n\n        treeBaseDuration += child.treeBaseDuration;\n        child = child.sibling;\n      }\n\n      completedWork.actualDuration = actualDuration;\n      completedWork.treeBaseDuration = treeBaseDuration;\n    } else {\n      let child = completedWork.child;\n      while (child !== null) {\n        newChildLanes = mergeLanes(\n          newChildLanes,\n          mergeLanes(child.lanes, child.childLanes),\n        );\n\n        subtreeFlags |= child.subtreeFlags;\n        subtreeFlags |= child.flags;\n\n        // Update the return pointer so the tree is consistent. This is a code\n        // smell because it assumes the commit phase is never concurrent with\n        // the render phase. Will address during refactor to alternate model.\n        child.return = completedWork;\n\n        child = child.sibling;\n      }\n    }\n\n    completedWork.subtreeFlags |= subtreeFlags;\n  } else {\n    // Bubble up the earliest expiration time.\n    if (enableProfilerTimer && (completedWork.mode & ProfileMode) !== NoMode) {\n      // In profiling mode, resetChildExpirationTime is also used to reset\n      // profiler durations.\n      let treeBaseDuration = ((completedWork.selfBaseDuration: any): number);\n\n      let child = completedWork.child;\n      while (child !== null) {\n        newChildLanes = mergeLanes(\n          newChildLanes,\n          mergeLanes(child.lanes, child.childLanes),\n        );\n\n        // \"Static\" flags share the lifetime of the fiber/hook they belong to,\n        // so we should bubble those up even during a bailout. All the other\n        // flags have a lifetime only of a single render + commit, so we should\n        // ignore them.\n        subtreeFlags |= child.subtreeFlags & StaticMask;\n        subtreeFlags |= child.flags & StaticMask;\n\n        treeBaseDuration += child.treeBaseDuration;\n        child = child.sibling;\n      }\n\n      completedWork.treeBaseDuration = treeBaseDuration;\n    } else {\n      let child = completedWork.child;\n      while (child !== null) {\n        newChildLanes = mergeLanes(\n          newChildLanes,\n          mergeLanes(child.lanes, child.childLanes),\n        );\n\n        // \"Static\" flags share the lifetime of the fiber/hook they belong to,\n        // so we should bubble those up even during a bailout. All the other\n        // flags have a lifetime only of a single render + commit, so we should\n        // ignore them.\n        subtreeFlags |= child.subtreeFlags & StaticMask;\n        subtreeFlags |= child.flags & StaticMask;\n\n        // Update the return pointer so the tree is consistent. This is a code\n        // smell because it assumes the commit phase is never concurrent with\n        // the render phase. Will address during refactor to alternate model.\n        child.return = completedWork;\n\n        child = child.sibling;\n      }\n    }\n\n    completedWork.subtreeFlags |= subtreeFlags;\n  }\n\n  completedWork.childLanes = newChildLanes;\n\n  return didBailout;\n}\n\nfunction completeDehydratedSuspenseBoundary(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  nextState: SuspenseState | null,\n): boolean {\n  if (\n    hasUnhydratedTailNodes() &&\n    (workInProgress.mode & ConcurrentMode) !== NoMode &&\n    (workInProgress.flags & DidCapture) === NoFlags\n  ) {\n    warnIfUnhydratedTailNodes(workInProgress);\n    resetHydrationState();\n    workInProgress.flags |= ForceClientRender | Incomplete | ShouldCapture;\n\n    return false;\n  }\n\n  const wasHydrated = popHydrationState(workInProgress);\n\n  if (nextState !== null && nextState.dehydrated !== null) {\n    // We might be inside a hydration state the first time we're picking up this\n    // Suspense boundary, and also after we've reentered it for further hydration.\n    if (current === null) {\n      if (!wasHydrated) {\n        throw new Error(\n          'A dehydrated suspense component was completed without a hydrated node. ' +\n            'This is probably a bug in React.',\n        );\n      }\n      prepareToHydrateHostSuspenseInstance(workInProgress);\n      bubbleProperties(workInProgress);\n      if (enableProfilerTimer) {\n        if ((workInProgress.mode & ProfileMode) !== NoMode) {\n          const isTimedOutSuspense = nextState !== null;\n          if (isTimedOutSuspense) {\n            // Don't count time spent in a timed out Suspense subtree as part of the base duration.\n            const primaryChildFragment = workInProgress.child;\n            if (primaryChildFragment !== null) {\n              // $FlowFixMe Flow doesn't support type casting in combination with the -= operator\n              workInProgress.treeBaseDuration -= ((primaryChildFragment.treeBaseDuration: any): number);\n            }\n          }\n        }\n      }\n      return false;\n    } else {\n      // We might have reentered this boundary to hydrate it. If so, we need to reset the hydration\n      // state since we're now exiting out of it. popHydrationState doesn't do that for us.\n      resetHydrationState();\n      if ((workInProgress.flags & DidCapture) === NoFlags) {\n        // This boundary did not suspend so it's now hydrated and unsuspended.\n        workInProgress.memoizedState = null;\n      }\n      // If nothing suspended, we need to schedule an effect to mark this boundary\n      // as having hydrated so events know that they're free to be invoked.\n      // It's also a signal to replay events and the suspense callback.\n      // If something suspended, schedule an effect to attach retry listeners.\n      // So we might as well always mark this.\n      workInProgress.flags |= Update;\n      bubbleProperties(workInProgress);\n      if (enableProfilerTimer) {\n        if ((workInProgress.mode & ProfileMode) !== NoMode) {\n          const isTimedOutSuspense = nextState !== null;\n          if (isTimedOutSuspense) {\n            // Don't count time spent in a timed out Suspense subtree as part of the base duration.\n            const primaryChildFragment = workInProgress.child;\n            if (primaryChildFragment !== null) {\n              // $FlowFixMe Flow doesn't support type casting in combination with the -= operator\n              workInProgress.treeBaseDuration -= ((primaryChildFragment.treeBaseDuration: any): number);\n            }\n          }\n        }\n      }\n      return false;\n    }\n  } else {\n    // Successfully completed this tree. If this was a forced client render,\n    // there may have been recoverable errors during first hydration\n    // attempt. If so, add them to a queue so we can log them in the\n    // commit phase.\n    upgradeHydrationErrorsToRecoverable();\n\n    // Fall through to normal Suspense path\n    return true;\n  }\n}\n\nfunction completeWork(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  renderLanes: Lanes,\n): Fiber | null {\n  const newProps = workInProgress.pendingProps;\n  // Note: This intentionally doesn't check if we're hydrating because comparing\n  // to the current tree provider fiber is just as fast and less error-prone.\n  // Ideally we would have a special version of the work loop only\n  // for hydration.\n  popTreeContext(workInProgress);\n  switch (workInProgress.tag) {\n    case IndeterminateComponent:\n    case LazyComponent:\n    case SimpleMemoComponent:\n    case FunctionComponent:\n    case ForwardRef:\n    case Fragment:\n    case Mode:\n    case Profiler:\n    case ContextConsumer:\n    case MemoComponent:\n      bubbleProperties(workInProgress);\n      return null;\n    case ClassComponent: {\n      const Component = workInProgress.type;\n      if (isLegacyContextProvider(Component)) {\n        popLegacyContext(workInProgress);\n      }\n      bubbleProperties(workInProgress);\n      return null;\n    }\n    case HostRoot: {\n      const fiberRoot = (workInProgress.stateNode: FiberRoot);\n\n      if (enableTransitionTracing) {\n        const transitions = getWorkInProgressTransitions();\n        // We set the Passive flag here because if there are new transitions,\n        // we will need to schedule callbacks and process the transitions,\n        // which we do in the passive phase\n        if (transitions !== null) {\n          workInProgress.flags |= Passive;\n        }\n      }\n\n      if (enableCache) {\n        let previousCache: Cache | null = null;\n        if (current !== null) {\n          previousCache = current.memoizedState.cache;\n        }\n        const cache: Cache = workInProgress.memoizedState.cache;\n        if (cache !== previousCache) {\n          // Run passive effects to retain/release the cache.\n          workInProgress.flags |= Passive;\n        }\n        popCacheProvider(workInProgress, cache);\n      }\n      popRootTransition(workInProgress, fiberRoot, renderLanes);\n      popHostContainer(workInProgress);\n      popTopLevelLegacyContextObject(workInProgress);\n      resetMutableSourceWorkInProgressVersions();\n      if (fiberRoot.pendingContext) {\n        fiberRoot.context = fiberRoot.pendingContext;\n        fiberRoot.pendingContext = null;\n      }\n      if (current === null || current.child === null) {\n        // If we hydrated, pop so that we can delete any remaining children\n        // that weren't hydrated.\n        const wasHydrated = popHydrationState(workInProgress);\n        if (wasHydrated) {\n          // If we hydrated, then we'll need to schedule an update for\n          // the commit side-effects on the root.\n          markUpdate(workInProgress);\n        } else {\n          if (current !== null) {\n            const prevState: RootState = current.memoizedState;\n            if (\n              // Check if this is a client root\n              !prevState.isDehydrated ||\n              // Check if we reverted to client rendering (e.g. due to an error)\n              (workInProgress.flags & ForceClientRender) !== NoFlags\n            ) {\n              // Schedule an effect to clear this container at the start of the\n              // next commit. This handles the case of React rendering into a\n              // container with previous children. It's also safe to do for\n              // updates too, because current.child would only be null if the\n              // previous render was null (so the container would already\n              // be empty).\n              workInProgress.flags |= Snapshot;\n\n              // If this was a forced client render, there may have been\n              // recoverable errors during first hydration attempt. If so, add\n              // them to a queue so we can log them in the commit phase.\n              upgradeHydrationErrorsToRecoverable();\n            }\n          }\n        }\n      }\n      updateHostContainer(current, workInProgress);\n      bubbleProperties(workInProgress);\n      if (enableTransitionTracing) {\n        if ((workInProgress.subtreeFlags & Visibility) !== NoFlags) {\n          // If any of our suspense children toggle visibility, this means that\n          // the pending boundaries array needs to be updated, which we only\n          // do in the passive phase.\n          workInProgress.flags |= Passive;\n        }\n      }\n      return null;\n    }\n    case HostComponent: {\n      popHostContext(workInProgress);\n      const rootContainerInstance = getRootHostContainer();\n      const type = workInProgress.type;\n      if (current !== null && workInProgress.stateNode != null) {\n        updateHostComponent(\n          current,\n          workInProgress,\n          type,\n          newProps,\n          rootContainerInstance,\n        );\n\n        if (current.ref !== workInProgress.ref) {\n          markRef(workInProgress);\n        }\n      } else {\n        if (!newProps) {\n          if (workInProgress.stateNode === null) {\n            throw new Error(\n              'We must have new props for new mounts. This error is likely ' +\n                'caused by a bug in React. Please file an issue.',\n            );\n          }\n\n          // This can happen when we abort work.\n          bubbleProperties(workInProgress);\n          return null;\n        }\n\n        const currentHostContext = getHostContext();\n        // TODO: Move createInstance to beginWork and keep it on a context\n        // \"stack\" as the parent. Then append children as we go in beginWork\n        // or completeWork depending on whether we want to add them top->down or\n        // bottom->up. Top->down is faster in IE11.\n        const wasHydrated = popHydrationState(workInProgress);\n        if (wasHydrated) {\n          // TODO: Move this and createInstance step into the beginPhase\n          // to consolidate.\n          if (\n            prepareToHydrateHostInstance(\n              workInProgress,\n              rootContainerInstance,\n              currentHostContext,\n            )\n          ) {\n            // If changes to the hydrated node need to be applied at the\n            // commit-phase we mark this as such.\n            markUpdate(workInProgress);\n          }\n        } else {\n          const instance = createInstance(\n            type,\n            newProps,\n            rootContainerInstance,\n            currentHostContext,\n            workInProgress,\n          );\n\n          appendAllChildren(instance, workInProgress, false, false);\n\n          workInProgress.stateNode = instance;\n\n          // Certain renderers require commit-time effects for initial mount.\n          // (eg DOM renderer supports auto-focus for certain elements).\n          // Make sure such renderers get scheduled for later work.\n          if (\n            finalizeInitialChildren(\n              instance,\n              type,\n              newProps,\n              rootContainerInstance,\n              currentHostContext,\n            )\n          ) {\n            markUpdate(workInProgress);\n          }\n        }\n\n        if (workInProgress.ref !== null) {\n          // If there is a ref on a host node we need to schedule a callback\n          markRef(workInProgress);\n        }\n      }\n      bubbleProperties(workInProgress);\n      return null;\n    }\n    case HostText: {\n      const newText = newProps;\n      if (current && workInProgress.stateNode != null) {\n        const oldText = current.memoizedProps;\n        // If we have an alternate, that means this is an update and we need\n        // to schedule a side-effect to do the updates.\n        updateHostText(current, workInProgress, oldText, newText);\n      } else {\n        if (typeof newText !== 'string') {\n          if (workInProgress.stateNode === null) {\n            throw new Error(\n              'We must have new props for new mounts. This error is likely ' +\n                'caused by a bug in React. Please file an issue.',\n            );\n          }\n          // This can happen when we abort work.\n        }\n        const rootContainerInstance = getRootHostContainer();\n        const currentHostContext = getHostContext();\n        const wasHydrated = popHydrationState(workInProgress);\n        if (wasHydrated) {\n          if (prepareToHydrateHostTextInstance(workInProgress)) {\n            markUpdate(workInProgress);\n          }\n        } else {\n          workInProgress.stateNode = createTextInstance(\n            newText,\n            rootContainerInstance,\n            currentHostContext,\n            workInProgress,\n          );\n        }\n      }\n      bubbleProperties(workInProgress);\n      return null;\n    }\n    case SuspenseComponent: {\n      popSuspenseContext(workInProgress);\n      const nextState: null | SuspenseState = workInProgress.memoizedState;\n\n      // Special path for dehydrated boundaries. We may eventually move this\n      // to its own fiber type so that we can add other kinds of hydration\n      // boundaries that aren't associated with a Suspense tree. In anticipation\n      // of such a refactor, all the hydration logic is contained in\n      // this branch.\n      if (\n        current === null ||\n        (current.memoizedState !== null &&\n          current.memoizedState.dehydrated !== null)\n      ) {\n        const fallthroughToNormalSuspensePath = completeDehydratedSuspenseBoundary(\n          current,\n          workInProgress,\n          nextState,\n        );\n        if (!fallthroughToNormalSuspensePath) {\n          if (workInProgress.flags & ShouldCapture) {\n            // Special case. There were remaining unhydrated nodes. We treat\n            // this as a mismatch. Revert to client rendering.\n            return workInProgress;\n          } else {\n            // Did not finish hydrating, either because this is the initial\n            // render or because something suspended.\n            return null;\n          }\n        }\n\n        // Continue with the normal Suspense path.\n      }\n\n      if ((workInProgress.flags & DidCapture) !== NoFlags) {\n        // Something suspended. Re-render with the fallback children.\n        workInProgress.lanes = renderLanes;\n        // Do not reset the effect list.\n        if (\n          enableProfilerTimer &&\n          (workInProgress.mode & ProfileMode) !== NoMode\n        ) {\n          transferActualDuration(workInProgress);\n        }\n        // Don't bubble properties in this case.\n        return workInProgress;\n      }\n\n      const nextDidTimeout = nextState !== null;\n      const prevDidTimeout =\n        current !== null &&\n        (current.memoizedState: null | SuspenseState) !== null;\n\n      if (enableCache && nextDidTimeout) {\n        const offscreenFiber: Fiber = (workInProgress.child: any);\n        let previousCache: Cache | null = null;\n        if (\n          offscreenFiber.alternate !== null &&\n          offscreenFiber.alternate.memoizedState !== null &&\n          offscreenFiber.alternate.memoizedState.cachePool !== null\n        ) {\n          previousCache = offscreenFiber.alternate.memoizedState.cachePool.pool;\n        }\n        let cache: Cache | null = null;\n        if (\n          offscreenFiber.memoizedState !== null &&\n          offscreenFiber.memoizedState.cachePool !== null\n        ) {\n          cache = offscreenFiber.memoizedState.cachePool.pool;\n        }\n        if (cache !== previousCache) {\n          // Run passive effects to retain/release the cache.\n          offscreenFiber.flags |= Passive;\n        }\n      }\n\n      // If the suspended state of the boundary changes, we need to schedule\n      // a passive effect, which is when we process the transitions\n      if (nextDidTimeout !== prevDidTimeout) {\n        if (enableTransitionTracing) {\n          const offscreenFiber: Fiber = (workInProgress.child: any);\n          offscreenFiber.flags |= Passive;\n        }\n\n        // If the suspended state of the boundary changes, we need to schedule\n        // an effect to toggle the subtree's visibility. When we switch from\n        // fallback -> primary, the inner Offscreen fiber schedules this effect\n        // as part of its normal complete phase. But when we switch from\n        // primary -> fallback, the inner Offscreen fiber does not have a complete\n        // phase. So we need to schedule its effect here.\n        //\n        // We also use this flag to connect/disconnect the effects, but the same\n        // logic applies: when re-connecting, the Offscreen fiber's complete\n        // phase will handle scheduling the effect. It's only when the fallback\n        // is active that we have to do anything special.\n        if (nextDidTimeout) {\n          const offscreenFiber: Fiber = (workInProgress.child: any);\n          offscreenFiber.flags |= Visibility;\n\n          // TODO: This will still suspend a synchronous tree if anything\n          // in the concurrent tree already suspended during this render.\n          // This is a known bug.\n          if ((workInProgress.mode & ConcurrentMode) !== NoMode) {\n            // TODO: Move this back to throwException because this is too late\n            // if this is a large tree which is common for initial loads. We\n            // don't know if we should restart a render or not until we get\n            // this marker, and this is too late.\n            // If this render already had a ping or lower pri updates,\n            // and this is the first time we know we're going to suspend we\n            // should be able to immediately restart from within throwException.\n            const hasInvisibleChildContext =\n              current === null &&\n              (workInProgress.memoizedProps.unstable_avoidThisFallback !==\n                true ||\n                !enableSuspenseAvoidThisFallback);\n            if (\n              hasInvisibleChildContext ||\n              hasSuspenseContext(\n                suspenseStackCursor.current,\n                (InvisibleParentSuspenseContext: SuspenseContext),\n              )\n            ) {\n              // If this was in an invisible tree or a new render, then showing\n              // this boundary is ok.\n              renderDidSuspend();\n            } else {\n              // Otherwise, we're going to have to hide content so we should\n              // suspend for longer if possible.\n              renderDidSuspendDelayIfPossible();\n            }\n          }\n        }\n      }\n\n      const wakeables: Set<Wakeable> | null = (workInProgress.updateQueue: any);\n      if (wakeables !== null) {\n        // Schedule an effect to attach a retry listener to the promise.\n        // TODO: Move to passive phase\n        workInProgress.flags |= Update;\n      }\n\n      if (\n        enableSuspenseCallback &&\n        workInProgress.updateQueue !== null &&\n        workInProgress.memoizedProps.suspenseCallback != null\n      ) {\n        // Always notify the callback\n        // TODO: Move to passive phase\n        workInProgress.flags |= Update;\n      }\n      bubbleProperties(workInProgress);\n      if (enableProfilerTimer) {\n        if ((workInProgress.mode & ProfileMode) !== NoMode) {\n          if (nextDidTimeout) {\n            // Don't count time spent in a timed out Suspense subtree as part of the base duration.\n            const primaryChildFragment = workInProgress.child;\n            if (primaryChildFragment !== null) {\n              // $FlowFixMe Flow doesn't support type casting in combination with the -= operator\n              workInProgress.treeBaseDuration -= ((primaryChildFragment.treeBaseDuration: any): number);\n            }\n          }\n        }\n      }\n      return null;\n    }\n    case HostPortal:\n      popHostContainer(workInProgress);\n      updateHostContainer(current, workInProgress);\n      if (current === null) {\n        preparePortalMount(workInProgress.stateNode.containerInfo);\n      }\n      bubbleProperties(workInProgress);\n      return null;\n    case ContextProvider:\n      // Pop provider fiber\n      const context: ReactContext<any> = workInProgress.type._context;\n      popProvider(context, workInProgress);\n      bubbleProperties(workInProgress);\n      return null;\n    case IncompleteClassComponent: {\n      // Same as class component case. I put it down here so that the tags are\n      // sequential to ensure this switch is compiled to a jump table.\n      const Component = workInProgress.type;\n      if (isLegacyContextProvider(Component)) {\n        popLegacyContext(workInProgress);\n      }\n      bubbleProperties(workInProgress);\n      return null;\n    }\n    case SuspenseListComponent: {\n      popSuspenseContext(workInProgress);\n\n      const renderState: null | SuspenseListRenderState =\n        workInProgress.memoizedState;\n\n      if (renderState === null) {\n        // We're running in the default, \"independent\" mode.\n        // We don't do anything in this mode.\n        bubbleProperties(workInProgress);\n        return null;\n      }\n\n      let didSuspendAlready = (workInProgress.flags & DidCapture) !== NoFlags;\n\n      const renderedTail = renderState.rendering;\n      if (renderedTail === null) {\n        // We just rendered the head.\n        if (!didSuspendAlready) {\n          // This is the first pass. We need to figure out if anything is still\n          // suspended in the rendered set.\n\n          // If new content unsuspended, but there's still some content that\n          // didn't. Then we need to do a second pass that forces everything\n          // to keep showing their fallbacks.\n\n          // We might be suspended if something in this render pass suspended, or\n          // something in the previous committed pass suspended. Otherwise,\n          // there's no chance so we can skip the expensive call to\n          // findFirstSuspended.\n          const cannotBeSuspended =\n            renderHasNotSuspendedYet() &&\n            (current === null || (current.flags & DidCapture) === NoFlags);\n          if (!cannotBeSuspended) {\n            let row = workInProgress.child;\n            while (row !== null) {\n              const suspended = findFirstSuspended(row);\n              if (suspended !== null) {\n                didSuspendAlready = true;\n                workInProgress.flags |= DidCapture;\n                cutOffTailIfNeeded(renderState, false);\n\n                // If this is a newly suspended tree, it might not get committed as\n                // part of the second pass. In that case nothing will subscribe to\n                // its thenables. Instead, we'll transfer its thenables to the\n                // SuspenseList so that it can retry if they resolve.\n                // There might be multiple of these in the list but since we're\n                // going to wait for all of them anyway, it doesn't really matter\n                // which ones gets to ping. In theory we could get clever and keep\n                // track of how many dependencies remain but it gets tricky because\n                // in the meantime, we can add/remove/change items and dependencies.\n                // We might bail out of the loop before finding any but that\n                // doesn't matter since that means that the other boundaries that\n                // we did find already has their listeners attached.\n                const newThenables = suspended.updateQueue;\n                if (newThenables !== null) {\n                  workInProgress.updateQueue = newThenables;\n                  workInProgress.flags |= Update;\n                }\n\n                // Rerender the whole list, but this time, we'll force fallbacks\n                // to stay in place.\n                // Reset the effect flags before doing the second pass since that's now invalid.\n                // Reset the child fibers to their original state.\n                workInProgress.subtreeFlags = NoFlags;\n                resetChildFibers(workInProgress, renderLanes);\n\n                // Set up the Suspense Context to force suspense and immediately\n                // rerender the children.\n                pushSuspenseContext(\n                  workInProgress,\n                  setShallowSuspenseContext(\n                    suspenseStackCursor.current,\n                    ForceSuspenseFallback,\n                  ),\n                );\n                // Don't bubble properties in this case.\n                return workInProgress.child;\n              }\n              row = row.sibling;\n            }\n          }\n\n          if (renderState.tail !== null && now() > getRenderTargetTime()) {\n            // We have already passed our CPU deadline but we still have rows\n            // left in the tail. We'll just give up further attempts to render\n            // the main content and only render fallbacks.\n            workInProgress.flags |= DidCapture;\n            didSuspendAlready = true;\n\n            cutOffTailIfNeeded(renderState, false);\n\n            // Since nothing actually suspended, there will nothing to ping this\n            // to get it started back up to attempt the next item. While in terms\n            // of priority this work has the same priority as this current render,\n            // it's not part of the same transition once the transition has\n            // committed. If it's sync, we still want to yield so that it can be\n            // painted. Conceptually, this is really the same as pinging.\n            // We can use any RetryLane even if it's the one currently rendering\n            // since we're leaving it behind on this node.\n            workInProgress.lanes = SomeRetryLane;\n          }\n        } else {\n          cutOffTailIfNeeded(renderState, false);\n        }\n        // Next we're going to render the tail.\n      } else {\n        // Append the rendered row to the child list.\n        if (!didSuspendAlready) {\n          const suspended = findFirstSuspended(renderedTail);\n          if (suspended !== null) {\n            workInProgress.flags |= DidCapture;\n            didSuspendAlready = true;\n\n            // Ensure we transfer the update queue to the parent so that it doesn't\n            // get lost if this row ends up dropped during a second pass.\n            const newThenables = suspended.updateQueue;\n            if (newThenables !== null) {\n              workInProgress.updateQueue = newThenables;\n              workInProgress.flags |= Update;\n            }\n\n            cutOffTailIfNeeded(renderState, true);\n            // This might have been modified.\n            if (\n              renderState.tail === null &&\n              renderState.tailMode === 'hidden' &&\n              !renderedTail.alternate &&\n              !getIsHydrating() // We don't cut it if we're hydrating.\n            ) {\n              // We're done.\n              bubbleProperties(workInProgress);\n              return null;\n            }\n          } else if (\n            // The time it took to render last row is greater than the remaining\n            // time we have to render. So rendering one more row would likely\n            // exceed it.\n            now() * 2 - renderState.renderingStartTime >\n              getRenderTargetTime() &&\n            renderLanes !== OffscreenLane\n          ) {\n            // We have now passed our CPU deadline and we'll just give up further\n            // attempts to render the main content and only render fallbacks.\n            // The assumption is that this is usually faster.\n            workInProgress.flags |= DidCapture;\n            didSuspendAlready = true;\n\n            cutOffTailIfNeeded(renderState, false);\n\n            // Since nothing actually suspended, there will nothing to ping this\n            // to get it started back up to attempt the next item. While in terms\n            // of priority this work has the same priority as this current render,\n            // it's not part of the same transition once the transition has\n            // committed. If it's sync, we still want to yield so that it can be\n            // painted. Conceptually, this is really the same as pinging.\n            // We can use any RetryLane even if it's the one currently rendering\n            // since we're leaving it behind on this node.\n            workInProgress.lanes = SomeRetryLane;\n          }\n        }\n        if (renderState.isBackwards) {\n          // The effect list of the backwards tail will have been added\n          // to the end. This breaks the guarantee that life-cycles fire in\n          // sibling order but that isn't a strong guarantee promised by React.\n          // Especially since these might also just pop in during future commits.\n          // Append to the beginning of the list.\n          renderedTail.sibling = workInProgress.child;\n          workInProgress.child = renderedTail;\n        } else {\n          const previousSibling = renderState.last;\n          if (previousSibling !== null) {\n            previousSibling.sibling = renderedTail;\n          } else {\n            workInProgress.child = renderedTail;\n          }\n          renderState.last = renderedTail;\n        }\n      }\n\n      if (renderState.tail !== null) {\n        // We still have tail rows to render.\n        // Pop a row.\n        const next = renderState.tail;\n        renderState.rendering = next;\n        renderState.tail = next.sibling;\n        renderState.renderingStartTime = now();\n        next.sibling = null;\n\n        // Restore the context.\n        // TODO: We can probably just avoid popping it instead and only\n        // setting it the first time we go from not suspended to suspended.\n        let suspenseContext = suspenseStackCursor.current;\n        if (didSuspendAlready) {\n          suspenseContext = setShallowSuspenseContext(\n            suspenseContext,\n            ForceSuspenseFallback,\n          );\n        } else {\n          suspenseContext = setDefaultShallowSuspenseContext(suspenseContext);\n        }\n        pushSuspenseContext(workInProgress, suspenseContext);\n        // Do a pass over the next row.\n        // Don't bubble properties in this case.\n        return next;\n      }\n      bubbleProperties(workInProgress);\n      return null;\n    }\n    case ScopeComponent: {\n      if (enableScopeAPI) {\n        if (current === null) {\n          const scopeInstance: ReactScopeInstance = createScopeInstance();\n          workInProgress.stateNode = scopeInstance;\n          prepareScopeUpdate(scopeInstance, workInProgress);\n          if (workInProgress.ref !== null) {\n            markRef(workInProgress);\n            markUpdate(workInProgress);\n          }\n        } else {\n          if (workInProgress.ref !== null) {\n            markUpdate(workInProgress);\n          }\n          if (current.ref !== workInProgress.ref) {\n            markRef(workInProgress);\n          }\n        }\n        bubbleProperties(workInProgress);\n        return null;\n      }\n      break;\n    }\n    case OffscreenComponent:\n    case LegacyHiddenComponent: {\n      popRenderLanes(workInProgress);\n      const nextState: OffscreenState | null = workInProgress.memoizedState;\n      const nextIsHidden = nextState !== null;\n\n      if (current !== null) {\n        const prevState: OffscreenState | null = current.memoizedState;\n        const prevIsHidden = prevState !== null;\n        if (\n          prevIsHidden !== nextIsHidden &&\n          // LegacyHidden doesn't do any hiding — it only pre-renders.\n          (!enableLegacyHidden || workInProgress.tag !== LegacyHiddenComponent)\n        ) {\n          workInProgress.flags |= Visibility;\n        }\n      }\n\n      if (!nextIsHidden || (workInProgress.mode & ConcurrentMode) === NoMode) {\n        bubbleProperties(workInProgress);\n      } else {\n        // Don't bubble properties for hidden children unless we're rendering\n        // at offscreen priority.\n        if (includesSomeLane(subtreeRenderLanes, (OffscreenLane: Lane))) {\n          bubbleProperties(workInProgress);\n          if (supportsMutation) {\n            // Check if there was an insertion or update in the hidden subtree.\n            // If so, we need to hide those nodes in the commit phase, so\n            // schedule a visibility effect.\n            if (\n              (!enableLegacyHidden ||\n                workInProgress.tag !== LegacyHiddenComponent) &&\n              workInProgress.subtreeFlags & (Placement | Update)\n            ) {\n              workInProgress.flags |= Visibility;\n            }\n          }\n        }\n      }\n\n      if (enableCache) {\n        let previousCache: Cache | null = null;\n        if (\n          current !== null &&\n          current.memoizedState !== null &&\n          current.memoizedState.cachePool !== null\n        ) {\n          previousCache = current.memoizedState.cachePool.pool;\n        }\n        let cache: Cache | null = null;\n        if (\n          workInProgress.memoizedState !== null &&\n          workInProgress.memoizedState.cachePool !== null\n        ) {\n          cache = workInProgress.memoizedState.cachePool.pool;\n        }\n        if (cache !== previousCache) {\n          // Run passive effects to retain/release the cache.\n          workInProgress.flags |= Passive;\n        }\n      }\n\n      popTransition(workInProgress, current);\n\n      return null;\n    }\n    case CacheComponent: {\n      if (enableCache) {\n        let previousCache: Cache | null = null;\n        if (current !== null) {\n          previousCache = current.memoizedState.cache;\n        }\n        const cache: Cache = workInProgress.memoizedState.cache;\n        if (cache !== previousCache) {\n          // Run passive effects to retain/release the cache.\n          workInProgress.flags |= Passive;\n        }\n        popCacheProvider(workInProgress, cache);\n        bubbleProperties(workInProgress);\n      }\n      return null;\n    }\n    case TracingMarkerComponent: {\n      if (enableTransitionTracing) {\n        // Bubble subtree flags before so we can set the flag property\n        bubbleProperties(workInProgress);\n      }\n      return null;\n    }\n  }\n\n  throw new Error(\n    `Unknown unit of work tag (${workInProgress.tag}). This error is likely caused by a bug in ` +\n      'React. Please file an issue.',\n  );\n}\n\nexport {completeWork};\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {ReactContext} from 'shared/ReactTypes';\nimport type {Fiber, FiberRoot} from './ReactInternalTypes';\nimport type {Lanes} from './ReactFiberLane.old';\nimport type {SuspenseState} from './ReactFiberSuspenseComponent.old';\nimport type {Cache} from './ReactFiberCacheComponent.old';\n\nimport {resetWorkInProgressVersions as resetMutableSourceWorkInProgressVersions} from './ReactMutableSource.old';\nimport {\n  ClassComponent,\n  HostRoot,\n  HostComponent,\n  HostPortal,\n  ContextProvider,\n  SuspenseComponent,\n  SuspenseListComponent,\n  OffscreenComponent,\n  LegacyHiddenComponent,\n  CacheComponent,\n} from './ReactWorkTags';\nimport {DidCapture, NoFlags, ShouldCapture} from './ReactFiberFlags';\nimport {NoMode, ProfileMode} from './ReactTypeOfMode';\nimport {enableProfilerTimer, enableCache} from 'shared/ReactFeatureFlags';\n\nimport {popHostContainer, popHostContext} from './ReactFiberHostContext.old';\nimport {popSuspenseContext} from './ReactFiberSuspenseContext.old';\nimport {resetHydrationState} from './ReactFiberHydrationContext.old';\nimport {\n  isContextProvider as isLegacyContextProvider,\n  popContext as popLegacyContext,\n  popTopLevelContextObject as popTopLevelLegacyContextObject,\n} from './ReactFiberContext.old';\nimport {popProvider} from './ReactFiberNewContext.old';\nimport {popRenderLanes} from './ReactFiberWorkLoop.old';\nimport {popCacheProvider} from './ReactFiberCacheComponent.old';\nimport {transferActualDuration} from './ReactProfilerTimer.old';\nimport {popTreeContext} from './ReactFiberTreeContext.old';\nimport {popRootTransition, popTransition} from './ReactFiberTransition.old';\n\nfunction unwindWork(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  renderLanes: Lanes,\n) {\n  // Note: This intentionally doesn't check if we're hydrating because comparing\n  // to the current tree provider fiber is just as fast and less error-prone.\n  // Ideally we would have a special version of the work loop only\n  // for hydration.\n  popTreeContext(workInProgress);\n  switch (workInProgress.tag) {\n    case ClassComponent: {\n      const Component = workInProgress.type;\n      if (isLegacyContextProvider(Component)) {\n        popLegacyContext(workInProgress);\n      }\n      const flags = workInProgress.flags;\n      if (flags & ShouldCapture) {\n        workInProgress.flags = (flags & ~ShouldCapture) | DidCapture;\n        if (\n          enableProfilerTimer &&\n          (workInProgress.mode & ProfileMode) !== NoMode\n        ) {\n          transferActualDuration(workInProgress);\n        }\n        return workInProgress;\n      }\n      return null;\n    }\n    case HostRoot: {\n      const root: FiberRoot = workInProgress.stateNode;\n      if (enableCache) {\n        const cache: Cache = workInProgress.memoizedState.cache;\n        popCacheProvider(workInProgress, cache);\n      }\n      popRootTransition(workInProgress, root, renderLanes);\n      popHostContainer(workInProgress);\n      popTopLevelLegacyContextObject(workInProgress);\n      resetMutableSourceWorkInProgressVersions();\n      const flags = workInProgress.flags;\n      if (\n        (flags & ShouldCapture) !== NoFlags &&\n        (flags & DidCapture) === NoFlags\n      ) {\n        // There was an error during render that wasn't captured by a suspense\n        // boundary. Do a second pass on the root to unmount the children.\n        workInProgress.flags = (flags & ~ShouldCapture) | DidCapture;\n        return workInProgress;\n      }\n      // We unwound to the root without completing it. Exit.\n      return null;\n    }\n    case HostComponent: {\n      // TODO: popHydrationState\n      popHostContext(workInProgress);\n      return null;\n    }\n    case SuspenseComponent: {\n      popSuspenseContext(workInProgress);\n      const suspenseState: null | SuspenseState = workInProgress.memoizedState;\n      if (suspenseState !== null && suspenseState.dehydrated !== null) {\n        if (workInProgress.alternate === null) {\n          throw new Error(\n            'Threw in newly mounted dehydrated component. This is likely a bug in ' +\n              'React. Please file an issue.',\n          );\n        }\n\n        resetHydrationState();\n      }\n\n      const flags = workInProgress.flags;\n      if (flags & ShouldCapture) {\n        workInProgress.flags = (flags & ~ShouldCapture) | DidCapture;\n        // Captured a suspense effect. Re-render the boundary.\n        if (\n          enableProfilerTimer &&\n          (workInProgress.mode & ProfileMode) !== NoMode\n        ) {\n          transferActualDuration(workInProgress);\n        }\n        return workInProgress;\n      }\n      return null;\n    }\n    case SuspenseListComponent: {\n      popSuspenseContext(workInProgress);\n      // SuspenseList doesn't actually catch anything. It should've been\n      // caught by a nested boundary. If not, it should bubble through.\n      return null;\n    }\n    case HostPortal:\n      popHostContainer(workInProgress);\n      return null;\n    case ContextProvider:\n      const context: ReactContext<any> = workInProgress.type._context;\n      popProvider(context, workInProgress);\n      return null;\n    case OffscreenComponent:\n    case LegacyHiddenComponent:\n      popRenderLanes(workInProgress);\n      popTransition(workInProgress, current);\n      return null;\n    case CacheComponent:\n      if (enableCache) {\n        const cache: Cache = workInProgress.memoizedState.cache;\n        popCacheProvider(workInProgress, cache);\n      }\n      return null;\n    default:\n      return null;\n  }\n}\n\nfunction unwindInterruptedWork(\n  current: Fiber | null,\n  interruptedWork: Fiber,\n  renderLanes: Lanes,\n) {\n  // Note: This intentionally doesn't check if we're hydrating because comparing\n  // to the current tree provider fiber is just as fast and less error-prone.\n  // Ideally we would have a special version of the work loop only\n  // for hydration.\n  popTreeContext(interruptedWork);\n  switch (interruptedWork.tag) {\n    case ClassComponent: {\n      const childContextTypes = interruptedWork.type.childContextTypes;\n      if (childContextTypes !== null && childContextTypes !== undefined) {\n        popLegacyContext(interruptedWork);\n      }\n      break;\n    }\n    case HostRoot: {\n      const root: FiberRoot = interruptedWork.stateNode;\n      if (enableCache) {\n        const cache: Cache = interruptedWork.memoizedState.cache;\n        popCacheProvider(interruptedWork, cache);\n      }\n      popRootTransition(interruptedWork, root, renderLanes);\n      popHostContainer(interruptedWork);\n      popTopLevelLegacyContextObject(interruptedWork);\n      resetMutableSourceWorkInProgressVersions();\n      break;\n    }\n    case HostComponent: {\n      popHostContext(interruptedWork);\n      break;\n    }\n    case HostPortal:\n      popHostContainer(interruptedWork);\n      break;\n    case SuspenseComponent:\n      popSuspenseContext(interruptedWork);\n      break;\n    case SuspenseListComponent:\n      popSuspenseContext(interruptedWork);\n      break;\n    case ContextProvider:\n      const context: ReactContext<any> = interruptedWork.type._context;\n      popProvider(context, interruptedWork);\n      break;\n    case OffscreenComponent:\n    case LegacyHiddenComponent:\n      popRenderLanes(interruptedWork);\n      popTransition(interruptedWork, current);\n      break;\n    case CacheComponent:\n      if (enableCache) {\n        const cache: Cache = interruptedWork.memoizedState.cache;\n        popCacheProvider(interruptedWork, cache);\n      }\n      break;\n    default:\n      break;\n  }\n}\n\nexport {unwindWork, unwindInterruptedWork};\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nfunction invokeGuardedCallbackProd<A, B, C, D, E, F, Context>(\n  name: string | null,\n  func: (a: A, b: B, c: C, d: D, e: E, f: F) => mixed,\n  context: Context,\n  a: A,\n  b: B,\n  c: C,\n  d: D,\n  e: E,\n  f: F,\n) {\n  const funcArgs = Array.prototype.slice.call(arguments, 3);\n  try {\n    func.apply(context, funcArgs);\n  } catch (error) {\n    this.onError(error);\n  }\n}\n\nlet invokeGuardedCallbackImpl = invokeGuardedCallbackProd;\n\nif (__DEV__) {\n  // In DEV mode, we swap out invokeGuardedCallback for a special version\n  // that plays more nicely with the browser's DevTools. The idea is to preserve\n  // \"Pause on exceptions\" behavior. Because React wraps all user-provided\n  // functions in invokeGuardedCallback, and the production version of\n  // invokeGuardedCallback uses a try-catch, all user exceptions are treated\n  // like caught exceptions, and the DevTools won't pause unless the developer\n  // takes the extra step of enabling pause on caught exceptions. This is\n  // unintuitive, though, because even though React has caught the error, from\n  // the developer's perspective, the error is uncaught.\n  //\n  // To preserve the expected \"Pause on exceptions\" behavior, we don't use a\n  // try-catch in DEV. Instead, we synchronously dispatch a fake event to a fake\n  // DOM node, and call the user-provided callback from inside an event handler\n  // for that fake event. If the callback throws, the error is \"captured\" using\n  // a global event handler. But because the error happens in a different\n  // event loop context, it does not interrupt the normal program flow.\n  // Effectively, this gives us try-catch behavior without actually using\n  // try-catch. Neat!\n\n  // Check that the browser supports the APIs we need to implement our special\n  // DEV version of invokeGuardedCallback\n  if (\n    typeof window !== 'undefined' &&\n    typeof window.dispatchEvent === 'function' &&\n    typeof document !== 'undefined' &&\n    typeof document.createEvent === 'function'\n  ) {\n    const fakeNode = document.createElement('react');\n\n    invokeGuardedCallbackImpl = function invokeGuardedCallbackDev<\n      A,\n      B,\n      C,\n      D,\n      E,\n      F,\n      Context,\n    >(\n      name: string | null,\n      func: (a: A, b: B, c: C, d: D, e: E, f: F) => mixed,\n      context: Context,\n      a: A,\n      b: B,\n      c: C,\n      d: D,\n      e: E,\n      f: F,\n    ) {\n      // If document doesn't exist we know for sure we will crash in this method\n      // when we call document.createEvent(). However this can cause confusing\n      // errors: https://github.com/facebook/create-react-app/issues/3482\n      // So we preemptively throw with a better message instead.\n      if (typeof document === 'undefined' || document === null) {\n        throw new Error(\n          'The `document` global was defined when React was initialized, but is not ' +\n            'defined anymore. This can happen in a test environment if a component ' +\n            'schedules an update from an asynchronous callback, but the test has already ' +\n            'finished running. To solve this, you can either unmount the component at ' +\n            'the end of your test (and ensure that any asynchronous operations get ' +\n            'canceled in `componentWillUnmount`), or you can change the test itself ' +\n            'to be asynchronous.',\n        );\n      }\n\n      const evt = document.createEvent('Event');\n\n      let didCall = false;\n      // Keeps track of whether the user-provided callback threw an error. We\n      // set this to true at the beginning, then set it to false right after\n      // calling the function. If the function errors, `didError` will never be\n      // set to false. This strategy works even if the browser is flaky and\n      // fails to call our global error handler, because it doesn't rely on\n      // the error event at all.\n      let didError = true;\n\n      // Keeps track of the value of window.event so that we can reset it\n      // during the callback to let user code access window.event in the\n      // browsers that support it.\n      const windowEvent = window.event;\n\n      // Keeps track of the descriptor of window.event to restore it after event\n      // dispatching: https://github.com/facebook/react/issues/13688\n      const windowEventDescriptor = Object.getOwnPropertyDescriptor(\n        window,\n        'event',\n      );\n\n      function restoreAfterDispatch() {\n        // We immediately remove the callback from event listeners so that\n        // nested `invokeGuardedCallback` calls do not clash. Otherwise, a\n        // nested call would trigger the fake event handlers of any call higher\n        // in the stack.\n        fakeNode.removeEventListener(evtType, callCallback, false);\n\n        // We check for window.hasOwnProperty('event') to prevent the\n        // window.event assignment in both IE <= 10 as they throw an error\n        // \"Member not found\" in strict mode, and in Firefox which does not\n        // support window.event.\n        if (\n          typeof window.event !== 'undefined' &&\n          window.hasOwnProperty('event')\n        ) {\n          window.event = windowEvent;\n        }\n      }\n\n      // Create an event handler for our fake event. We will synchronously\n      // dispatch our fake event using `dispatchEvent`. Inside the handler, we\n      // call the user-provided callback.\n      const funcArgs = Array.prototype.slice.call(arguments, 3);\n      function callCallback() {\n        didCall = true;\n        restoreAfterDispatch();\n        func.apply(context, funcArgs);\n        didError = false;\n      }\n\n      // Create a global error event handler. We use this to capture the value\n      // that was thrown. It's possible that this error handler will fire more\n      // than once; for example, if non-React code also calls `dispatchEvent`\n      // and a handler for that event throws. We should be resilient to most of\n      // those cases. Even if our error event handler fires more than once, the\n      // last error event is always used. If the callback actually does error,\n      // we know that the last error event is the correct one, because it's not\n      // possible for anything else to have happened in between our callback\n      // erroring and the code that follows the `dispatchEvent` call below. If\n      // the callback doesn't error, but the error event was fired, we know to\n      // ignore it because `didError` will be false, as described above.\n      let error;\n      // Use this to track whether the error event is ever called.\n      let didSetError = false;\n      let isCrossOriginError = false;\n\n      function handleWindowError(event) {\n        error = event.error;\n        didSetError = true;\n        if (error === null && event.colno === 0 && event.lineno === 0) {\n          isCrossOriginError = true;\n        }\n        if (event.defaultPrevented) {\n          // Some other error handler has prevented default.\n          // Browsers silence the error report if this happens.\n          // We'll remember this to later decide whether to log it or not.\n          if (error != null && typeof error === 'object') {\n            try {\n              error._suppressLogging = true;\n            } catch (inner) {\n              // Ignore.\n            }\n          }\n        }\n      }\n\n      // Create a fake event type.\n      const evtType = `react-${name ? name : 'invokeguardedcallback'}`;\n\n      // Attach our event handlers\n      window.addEventListener('error', handleWindowError);\n      fakeNode.addEventListener(evtType, callCallback, false);\n\n      // Synchronously dispatch our fake event. If the user-provided function\n      // errors, it will trigger our global error handler.\n      evt.initEvent(evtType, false, false);\n      fakeNode.dispatchEvent(evt);\n\n      if (windowEventDescriptor) {\n        Object.defineProperty(window, 'event', windowEventDescriptor);\n      }\n\n      if (didCall && didError) {\n        if (!didSetError) {\n          // The callback errored, but the error event never fired.\n          // eslint-disable-next-line react-internal/prod-error-codes\n          error = new Error(\n            'An error was thrown inside one of your components, but React ' +\n              \"doesn't know what it was. This is likely due to browser \" +\n              'flakiness. React does its best to preserve the \"Pause on ' +\n              'exceptions\" behavior of the DevTools, which requires some ' +\n              \"DEV-mode only tricks. It's possible that these don't work in \" +\n              'your browser. Try triggering the error in production mode, ' +\n              'or switching to a modern browser. If you suspect that this is ' +\n              'actually an issue with React, please file an issue.',\n          );\n        } else if (isCrossOriginError) {\n          // eslint-disable-next-line react-internal/prod-error-codes\n          error = new Error(\n            \"A cross-origin error was thrown. React doesn't have access to \" +\n              'the actual error object in development. ' +\n              'See https://reactjs.org/link/crossorigin-error for more information.',\n          );\n        }\n        this.onError(error);\n      }\n\n      // Remove our event listeners\n      window.removeEventListener('error', handleWindowError);\n\n      if (!didCall) {\n        // Something went really wrong, and our event was not dispatched.\n        // https://github.com/facebook/react/issues/16734\n        // https://github.com/facebook/react/issues/16585\n        // Fall back to the production implementation.\n        restoreAfterDispatch();\n        return invokeGuardedCallbackProd.apply(this, arguments);\n      }\n    };\n  }\n}\n\nexport default invokeGuardedCallbackImpl;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport invokeGuardedCallbackImpl from './invokeGuardedCallbackImpl';\n\n// Used by Fiber to simulate a try-catch.\nlet hasError: boolean = false;\nlet caughtError: mixed = null;\n\n// Used by event system to capture/rethrow the first error.\nlet hasRethrowError: boolean = false;\nlet rethrowError: mixed = null;\n\nconst reporter = {\n  onError(error: mixed) {\n    hasError = true;\n    caughtError = error;\n  },\n};\n\n/**\n * Call a function while guarding against errors that happens within it.\n * Returns an error if it throws, otherwise null.\n *\n * In production, this is implemented using a try-catch. The reason we don't\n * use a try-catch directly is so that we can swap out a different\n * implementation in DEV mode.\n *\n * @param {String} name of the guard to use for logging or debugging\n * @param {Function} func The function to invoke\n * @param {*} context The context to use when calling the function\n * @param {...*} args Arguments for function\n */\nexport function invokeGuardedCallback<A, B, C, D, E, F, Context>(\n  name: string | null,\n  func: (a: A, b: B, c: C, d: D, e: E, f: F) => mixed,\n  context: Context,\n  a: A,\n  b: B,\n  c: C,\n  d: D,\n  e: E,\n  f: F,\n): void {\n  hasError = false;\n  caughtError = null;\n  invokeGuardedCallbackImpl.apply(reporter, arguments);\n}\n\n/**\n * Same as invokeGuardedCallback, but instead of returning an error, it stores\n * it in a global so it can be rethrown by `rethrowCaughtError` later.\n * TODO: See if caughtError and rethrowError can be unified.\n *\n * @param {String} name of the guard to use for logging or debugging\n * @param {Function} func The function to invoke\n * @param {*} context The context to use when calling the function\n * @param {...*} args Arguments for function\n */\nexport function invokeGuardedCallbackAndCatchFirstError<\n  A,\n  B,\n  C,\n  D,\n  E,\n  F,\n  Context,\n>(\n  name: string | null,\n  func: (a: A, b: B, c: C, d: D, e: E, f: F) => void,\n  context: Context,\n  a: A,\n  b: B,\n  c: C,\n  d: D,\n  e: E,\n  f: F,\n): void {\n  invokeGuardedCallback.apply(this, arguments);\n  if (hasError) {\n    const error = clearCaughtError();\n    if (!hasRethrowError) {\n      hasRethrowError = true;\n      rethrowError = error;\n    }\n  }\n}\n\n/**\n * During execution of guarded functions we will capture the first error which\n * we will rethrow to be handled by the top level error handler.\n */\nexport function rethrowCaughtError() {\n  if (hasRethrowError) {\n    const error = rethrowError;\n    hasRethrowError = false;\n    rethrowError = null;\n    throw error;\n  }\n}\n\nexport function hasCaughtError() {\n  return hasError;\n}\n\nexport function clearCaughtError() {\n  if (hasError) {\n    const error = caughtError;\n    hasError = false;\n    caughtError = null;\n    return error;\n  } else {\n    throw new Error(\n      'clearCaughtError was called but no error was captured. This error ' +\n        'is likely caused by a bug in React. Please file an issue.',\n    );\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {\n  Instance,\n  TextInstance,\n  SuspenseInstance,\n  Container,\n  ChildSet,\n  UpdatePayload,\n} from './ReactFiberHostConfig';\nimport type {Fiber} from './ReactInternalTypes';\nimport type {FiberRoot} from './ReactInternalTypes';\nimport type {Lanes} from './ReactFiberLane.old';\nimport type {SuspenseState} from './ReactFiberSuspenseComponent.old';\nimport type {UpdateQueue} from './ReactFiberClassUpdateQueue.old';\nimport type {FunctionComponentUpdateQueue} from './ReactFiberHooks.old';\nimport type {Wakeable} from 'shared/ReactTypes';\nimport type {\n  OffscreenState,\n  OffscreenInstance,\n} from './ReactFiberOffscreenComponent';\nimport type {HookFlags} from './ReactHookEffectTags';\nimport type {Cache} from './ReactFiberCacheComponent.old';\nimport type {RootState} from './ReactFiberRoot.old';\nimport type {Transition} from './ReactFiberTracingMarkerComponent.old';\n\nimport {\n  enableCreateEventHandleAPI,\n  enableProfilerTimer,\n  enableProfilerCommitHooks,\n  enableProfilerNestedUpdatePhase,\n  enableSchedulingProfiler,\n  enableSuspenseCallback,\n  enableScopeAPI,\n  enableStrictEffects,\n  deletedTreeCleanUpLevel,\n  enableSuspenseLayoutEffectSemantics,\n  enableUpdaterTracking,\n  enableCache,\n  enableTransitionTracing,\n} from 'shared/ReactFeatureFlags';\nimport {\n  FunctionComponent,\n  ForwardRef,\n  ClassComponent,\n  HostRoot,\n  HostComponent,\n  HostText,\n  HostPortal,\n  Profiler,\n  SuspenseComponent,\n  DehydratedFragment,\n  IncompleteClassComponent,\n  MemoComponent,\n  SimpleMemoComponent,\n  SuspenseListComponent,\n  ScopeComponent,\n  OffscreenComponent,\n  LegacyHiddenComponent,\n  CacheComponent,\n  TracingMarkerComponent,\n} from './ReactWorkTags';\nimport {detachDeletedInstance} from './ReactFiberHostConfig';\nimport {\n  NoFlags,\n  ContentReset,\n  Placement,\n  ChildDeletion,\n  Snapshot,\n  Update,\n  Ref,\n  Hydrating,\n  Passive,\n  BeforeMutationMask,\n  MutationMask,\n  LayoutMask,\n  PassiveMask,\n  Visibility,\n} from './ReactFiberFlags';\nimport getComponentNameFromFiber from 'react-reconciler/src/getComponentNameFromFiber';\nimport {\n  resetCurrentFiber as resetCurrentDebugFiberInDEV,\n  setCurrentFiber as setCurrentDebugFiberInDEV,\n  getCurrentFiber as getCurrentDebugFiberInDEV,\n} from './ReactCurrentFiber';\nimport {resolveDefaultProps} from './ReactFiberLazyComponent.old';\nimport {\n  isCurrentUpdateNested,\n  getCommitTime,\n  recordLayoutEffectDuration,\n  startLayoutEffectTimer,\n  recordPassiveEffectDuration,\n  startPassiveEffectTimer,\n} from './ReactProfilerTimer.old';\nimport {ConcurrentMode, NoMode, ProfileMode} from './ReactTypeOfMode';\nimport {commitUpdateQueue} from './ReactFiberClassUpdateQueue.old';\nimport {\n  getPublicInstance,\n  supportsMutation,\n  supportsPersistence,\n  supportsHydration,\n  commitMount,\n  commitUpdate,\n  resetTextContent,\n  commitTextUpdate,\n  appendChild,\n  appendChildToContainer,\n  insertBefore,\n  insertInContainerBefore,\n  removeChild,\n  removeChildFromContainer,\n  clearSuspenseBoundary,\n  clearSuspenseBoundaryFromContainer,\n  replaceContainerChildren,\n  createContainerChildSet,\n  hideInstance,\n  hideTextInstance,\n  unhideInstance,\n  unhideTextInstance,\n  commitHydratedContainer,\n  commitHydratedSuspenseInstance,\n  clearContainer,\n  prepareScopeUpdate,\n  prepareForCommit,\n  beforeActiveInstanceBlur,\n} from './ReactFiberHostConfig';\nimport {\n  captureCommitPhaseError,\n  resolveRetryWakeable,\n  markCommitTimeOfFallback,\n  enqueuePendingPassiveProfilerEffect,\n  restorePendingUpdaters,\n  addTransitionStartCallbackToPendingTransition,\n  addTransitionCompleteCallbackToPendingTransition,\n  setIsRunningInsertionEffect,\n} from './ReactFiberWorkLoop.old';\nimport {\n  NoFlags as NoHookEffect,\n  HasEffect as HookHasEffect,\n  Layout as HookLayout,\n  Insertion as HookInsertion,\n  Passive as HookPassive,\n} from './ReactHookEffectTags';\nimport {didWarnAboutReassigningProps} from './ReactFiberBeginWork.old';\nimport {doesFiberContain} from './ReactFiberTreeReflection';\nimport {invokeGuardedCallback, clearCaughtError} from 'shared/ReactErrorUtils';\nimport {\n  isDevToolsPresent,\n  markComponentPassiveEffectMountStarted,\n  markComponentPassiveEffectMountStopped,\n  markComponentPassiveEffectUnmountStarted,\n  markComponentPassiveEffectUnmountStopped,\n  markComponentLayoutEffectMountStarted,\n  markComponentLayoutEffectMountStopped,\n  markComponentLayoutEffectUnmountStarted,\n  markComponentLayoutEffectUnmountStopped,\n  onCommitUnmount,\n} from './ReactFiberDevToolsHook.old';\nimport {releaseCache, retainCache} from './ReactFiberCacheComponent.old';\nimport {clearTransitionsForLanes} from './ReactFiberLane.old';\n\nlet didWarnAboutUndefinedSnapshotBeforeUpdate: Set<mixed> | null = null;\nif (__DEV__) {\n  didWarnAboutUndefinedSnapshotBeforeUpdate = new Set();\n}\n\n// Used during the commit phase to track the state of the Offscreen component stack.\n// Allows us to avoid traversing the return path to find the nearest Offscreen ancestor.\n// Only used when enableSuspenseLayoutEffectSemantics is enabled.\nlet offscreenSubtreeIsHidden: boolean = false;\nlet offscreenSubtreeWasHidden: boolean = false;\n\nconst PossiblyWeakSet = typeof WeakSet === 'function' ? WeakSet : Set;\n\nlet nextEffect: Fiber | null = null;\n\n// Used for Profiling builds to track updaters.\nlet inProgressLanes: Lanes | null = null;\nlet inProgressRoot: FiberRoot | null = null;\n\nexport function reportUncaughtErrorInDEV(error: mixed) {\n  // Wrapping each small part of the commit phase into a guarded\n  // callback is a bit too slow (https://github.com/facebook/react/pull/21666).\n  // But we rely on it to surface errors to DEV tools like overlays\n  // (https://github.com/facebook/react/issues/21712).\n  // As a compromise, rethrow only caught errors in a guard.\n  if (__DEV__) {\n    invokeGuardedCallback(null, () => {\n      throw error;\n    });\n    clearCaughtError();\n  }\n}\n\nconst callComponentWillUnmountWithTimer = function(current, instance) {\n  instance.props = current.memoizedProps;\n  instance.state = current.memoizedState;\n  if (\n    enableProfilerTimer &&\n    enableProfilerCommitHooks &&\n    current.mode & ProfileMode\n  ) {\n    try {\n      startLayoutEffectTimer();\n      instance.componentWillUnmount();\n    } finally {\n      recordLayoutEffectDuration(current);\n    }\n  } else {\n    instance.componentWillUnmount();\n  }\n};\n\n// Capture errors so they don't interrupt mounting.\nfunction safelyCallCommitHookLayoutEffectListMount(\n  current: Fiber,\n  nearestMountedAncestor: Fiber | null,\n) {\n  try {\n    commitHookEffectListMount(HookLayout, current);\n  } catch (error) {\n    captureCommitPhaseError(current, nearestMountedAncestor, error);\n  }\n}\n\n// Capture errors so they don't interrupt unmounting.\nfunction safelyCallComponentWillUnmount(\n  current: Fiber,\n  nearestMountedAncestor: Fiber | null,\n  instance: any,\n) {\n  try {\n    callComponentWillUnmountWithTimer(current, instance);\n  } catch (error) {\n    captureCommitPhaseError(current, nearestMountedAncestor, error);\n  }\n}\n\n// Capture errors so they don't interrupt mounting.\nfunction safelyCallComponentDidMount(\n  current: Fiber,\n  nearestMountedAncestor: Fiber | null,\n  instance: any,\n) {\n  try {\n    instance.componentDidMount();\n  } catch (error) {\n    captureCommitPhaseError(current, nearestMountedAncestor, error);\n  }\n}\n\n// Capture errors so they don't interrupt mounting.\nfunction safelyAttachRef(current: Fiber, nearestMountedAncestor: Fiber | null) {\n  try {\n    commitAttachRef(current);\n  } catch (error) {\n    captureCommitPhaseError(current, nearestMountedAncestor, error);\n  }\n}\n\nfunction safelyDetachRef(current: Fiber, nearestMountedAncestor: Fiber | null) {\n  const ref = current.ref;\n  if (ref !== null) {\n    if (typeof ref === 'function') {\n      let retVal;\n      try {\n        if (\n          enableProfilerTimer &&\n          enableProfilerCommitHooks &&\n          current.mode & ProfileMode\n        ) {\n          try {\n            startLayoutEffectTimer();\n            retVal = ref(null);\n          } finally {\n            recordLayoutEffectDuration(current);\n          }\n        } else {\n          retVal = ref(null);\n        }\n      } catch (error) {\n        captureCommitPhaseError(current, nearestMountedAncestor, error);\n      }\n      if (__DEV__) {\n        if (typeof retVal === 'function') {\n          console.error(\n            'Unexpected return value from a callback ref in %s. ' +\n              'A callback ref should not return a function.',\n            getComponentNameFromFiber(current),\n          );\n        }\n      }\n    } else {\n      ref.current = null;\n    }\n  }\n}\n\nfunction safelyCallDestroy(\n  current: Fiber,\n  nearestMountedAncestor: Fiber | null,\n  destroy: () => void,\n) {\n  try {\n    destroy();\n  } catch (error) {\n    captureCommitPhaseError(current, nearestMountedAncestor, error);\n  }\n}\n\nlet focusedInstanceHandle: null | Fiber = null;\nlet shouldFireAfterActiveInstanceBlur: boolean = false;\n\nexport function commitBeforeMutationEffects(\n  root: FiberRoot,\n  firstChild: Fiber,\n) {\n  focusedInstanceHandle = prepareForCommit(root.containerInfo);\n\n  nextEffect = firstChild;\n  commitBeforeMutationEffects_begin();\n\n  // We no longer need to track the active instance fiber\n  const shouldFire = shouldFireAfterActiveInstanceBlur;\n  shouldFireAfterActiveInstanceBlur = false;\n  focusedInstanceHandle = null;\n\n  return shouldFire;\n}\n\nfunction commitBeforeMutationEffects_begin() {\n  while (nextEffect !== null) {\n    const fiber = nextEffect;\n\n    // This phase is only used for beforeActiveInstanceBlur.\n    // Let's skip the whole loop if it's off.\n    if (enableCreateEventHandleAPI) {\n      // TODO: Should wrap this in flags check, too, as optimization\n      const deletions = fiber.deletions;\n      if (deletions !== null) {\n        for (let i = 0; i < deletions.length; i++) {\n          const deletion = deletions[i];\n          commitBeforeMutationEffectsDeletion(deletion);\n        }\n      }\n    }\n\n    const child = fiber.child;\n    if (\n      (fiber.subtreeFlags & BeforeMutationMask) !== NoFlags &&\n      child !== null\n    ) {\n      child.return = fiber;\n      nextEffect = child;\n    } else {\n      commitBeforeMutationEffects_complete();\n    }\n  }\n}\n\nfunction commitBeforeMutationEffects_complete() {\n  while (nextEffect !== null) {\n    const fiber = nextEffect;\n    setCurrentDebugFiberInDEV(fiber);\n    try {\n      commitBeforeMutationEffectsOnFiber(fiber);\n    } catch (error) {\n      captureCommitPhaseError(fiber, fiber.return, error);\n    }\n    resetCurrentDebugFiberInDEV();\n\n    const sibling = fiber.sibling;\n    if (sibling !== null) {\n      sibling.return = fiber.return;\n      nextEffect = sibling;\n      return;\n    }\n\n    nextEffect = fiber.return;\n  }\n}\n\nfunction commitBeforeMutationEffectsOnFiber(finishedWork: Fiber) {\n  const current = finishedWork.alternate;\n  const flags = finishedWork.flags;\n\n  if (enableCreateEventHandleAPI) {\n    if (!shouldFireAfterActiveInstanceBlur && focusedInstanceHandle !== null) {\n      // Check to see if the focused element was inside of a hidden (Suspense) subtree.\n      // TODO: Move this out of the hot path using a dedicated effect tag.\n      if (\n        finishedWork.tag === SuspenseComponent &&\n        isSuspenseBoundaryBeingHidden(current, finishedWork) &&\n        doesFiberContain(finishedWork, focusedInstanceHandle)\n      ) {\n        shouldFireAfterActiveInstanceBlur = true;\n        beforeActiveInstanceBlur(finishedWork);\n      }\n    }\n  }\n\n  if ((flags & Snapshot) !== NoFlags) {\n    setCurrentDebugFiberInDEV(finishedWork);\n\n    switch (finishedWork.tag) {\n      case FunctionComponent:\n      case ForwardRef:\n      case SimpleMemoComponent: {\n        break;\n      }\n      case ClassComponent: {\n        if (current !== null) {\n          const prevProps = current.memoizedProps;\n          const prevState = current.memoizedState;\n          const instance = finishedWork.stateNode;\n          // We could update instance props and state here,\n          // but instead we rely on them being set during last render.\n          // TODO: revisit this when we implement resuming.\n          if (__DEV__) {\n            if (\n              finishedWork.type === finishedWork.elementType &&\n              !didWarnAboutReassigningProps\n            ) {\n              if (instance.props !== finishedWork.memoizedProps) {\n                console.error(\n                  'Expected %s props to match memoized props before ' +\n                    'getSnapshotBeforeUpdate. ' +\n                    'This might either be because of a bug in React, or because ' +\n                    'a component reassigns its own `this.props`. ' +\n                    'Please file an issue.',\n                  getComponentNameFromFiber(finishedWork) || 'instance',\n                );\n              }\n              if (instance.state !== finishedWork.memoizedState) {\n                console.error(\n                  'Expected %s state to match memoized state before ' +\n                    'getSnapshotBeforeUpdate. ' +\n                    'This might either be because of a bug in React, or because ' +\n                    'a component reassigns its own `this.state`. ' +\n                    'Please file an issue.',\n                  getComponentNameFromFiber(finishedWork) || 'instance',\n                );\n              }\n            }\n          }\n          const snapshot = instance.getSnapshotBeforeUpdate(\n            finishedWork.elementType === finishedWork.type\n              ? prevProps\n              : resolveDefaultProps(finishedWork.type, prevProps),\n            prevState,\n          );\n          if (__DEV__) {\n            const didWarnSet = ((didWarnAboutUndefinedSnapshotBeforeUpdate: any): Set<mixed>);\n            if (snapshot === undefined && !didWarnSet.has(finishedWork.type)) {\n              didWarnSet.add(finishedWork.type);\n              console.error(\n                '%s.getSnapshotBeforeUpdate(): A snapshot value (or null) ' +\n                  'must be returned. You have returned undefined.',\n                getComponentNameFromFiber(finishedWork),\n              );\n            }\n          }\n          instance.__reactInternalSnapshotBeforeUpdate = snapshot;\n        }\n        break;\n      }\n      case HostRoot: {\n        if (supportsMutation) {\n          const root = finishedWork.stateNode;\n          clearContainer(root.containerInfo);\n        }\n        break;\n      }\n      case HostComponent:\n      case HostText:\n      case HostPortal:\n      case IncompleteClassComponent:\n        // Nothing to do for these component types\n        break;\n      default: {\n        throw new Error(\n          'This unit of work tag should not have side-effects. This error is ' +\n            'likely caused by a bug in React. Please file an issue.',\n        );\n      }\n    }\n\n    resetCurrentDebugFiberInDEV();\n  }\n}\n\nfunction commitBeforeMutationEffectsDeletion(deletion: Fiber) {\n  if (enableCreateEventHandleAPI) {\n    // TODO (effects) It would be nice to avoid calling doesFiberContain()\n    // Maybe we can repurpose one of the subtreeFlags positions for this instead?\n    // Use it to store which part of the tree the focused instance is in?\n    // This assumes we can safely determine that instance during the \"render\" phase.\n    if (doesFiberContain(deletion, ((focusedInstanceHandle: any): Fiber))) {\n      shouldFireAfterActiveInstanceBlur = true;\n      beforeActiveInstanceBlur(deletion);\n    }\n  }\n}\n\nfunction commitHookEffectListUnmount(\n  flags: HookFlags,\n  finishedWork: Fiber,\n  nearestMountedAncestor: Fiber | null,\n) {\n  const updateQueue: FunctionComponentUpdateQueue | null = (finishedWork.updateQueue: any);\n  const lastEffect = updateQueue !== null ? updateQueue.lastEffect : null;\n  if (lastEffect !== null) {\n    const firstEffect = lastEffect.next;\n    let effect = firstEffect;\n    do {\n      if ((effect.tag & flags) === flags) {\n        // Unmount\n        const destroy = effect.destroy;\n        effect.destroy = undefined;\n        if (destroy !== undefined) {\n          if (enableSchedulingProfiler) {\n            if ((flags & HookPassive) !== NoHookEffect) {\n              markComponentPassiveEffectUnmountStarted(finishedWork);\n            } else if ((flags & HookLayout) !== NoHookEffect) {\n              markComponentLayoutEffectUnmountStarted(finishedWork);\n            }\n          }\n\n          if (__DEV__) {\n            if ((flags & HookInsertion) !== NoHookEffect) {\n              setIsRunningInsertionEffect(true);\n            }\n          }\n          safelyCallDestroy(finishedWork, nearestMountedAncestor, destroy);\n          if (__DEV__) {\n            if ((flags & HookInsertion) !== NoHookEffect) {\n              setIsRunningInsertionEffect(false);\n            }\n          }\n\n          if (enableSchedulingProfiler) {\n            if ((flags & HookPassive) !== NoHookEffect) {\n              markComponentPassiveEffectUnmountStopped();\n            } else if ((flags & HookLayout) !== NoHookEffect) {\n              markComponentLayoutEffectUnmountStopped();\n            }\n          }\n        }\n      }\n      effect = effect.next;\n    } while (effect !== firstEffect);\n  }\n}\n\nfunction commitHookEffectListMount(flags: HookFlags, finishedWork: Fiber) {\n  const updateQueue: FunctionComponentUpdateQueue | null = (finishedWork.updateQueue: any);\n  const lastEffect = updateQueue !== null ? updateQueue.lastEffect : null;\n  if (lastEffect !== null) {\n    const firstEffect = lastEffect.next;\n    let effect = firstEffect;\n    do {\n      if ((effect.tag & flags) === flags) {\n        if (enableSchedulingProfiler) {\n          if ((flags & HookPassive) !== NoHookEffect) {\n            markComponentPassiveEffectMountStarted(finishedWork);\n          } else if ((flags & HookLayout) !== NoHookEffect) {\n            markComponentLayoutEffectMountStarted(finishedWork);\n          }\n        }\n\n        // Mount\n        const create = effect.create;\n        if (__DEV__) {\n          if ((flags & HookInsertion) !== NoHookEffect) {\n            setIsRunningInsertionEffect(true);\n          }\n        }\n        effect.destroy = create();\n        if (__DEV__) {\n          if ((flags & HookInsertion) !== NoHookEffect) {\n            setIsRunningInsertionEffect(false);\n          }\n        }\n\n        if (enableSchedulingProfiler) {\n          if ((flags & HookPassive) !== NoHookEffect) {\n            markComponentPassiveEffectMountStopped();\n          } else if ((flags & HookLayout) !== NoHookEffect) {\n            markComponentLayoutEffectMountStopped();\n          }\n        }\n\n        if (__DEV__) {\n          const destroy = effect.destroy;\n          if (destroy !== undefined && typeof destroy !== 'function') {\n            let hookName;\n            if ((effect.tag & HookLayout) !== NoFlags) {\n              hookName = 'useLayoutEffect';\n            } else if ((effect.tag & HookInsertion) !== NoFlags) {\n              hookName = 'useInsertionEffect';\n            } else {\n              hookName = 'useEffect';\n            }\n            let addendum;\n            if (destroy === null) {\n              addendum =\n                ' You returned null. If your effect does not require clean ' +\n                'up, return undefined (or nothing).';\n            } else if (typeof destroy.then === 'function') {\n              addendum =\n                '\\n\\nIt looks like you wrote ' +\n                hookName +\n                '(async () => ...) or returned a Promise. ' +\n                'Instead, write the async function inside your effect ' +\n                'and call it immediately:\\n\\n' +\n                hookName +\n                '(() => {\\n' +\n                '  async function fetchData() {\\n' +\n                '    // You can await here\\n' +\n                '    const response = await MyAPI.getData(someId);\\n' +\n                '    // ...\\n' +\n                '  }\\n' +\n                '  fetchData();\\n' +\n                `}, [someId]); // Or [] if effect doesn't need props or state\\n\\n` +\n                'Learn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching';\n            } else {\n              addendum = ' You returned: ' + destroy;\n            }\n            console.error(\n              '%s must not return anything besides a function, ' +\n                'which is used for clean-up.%s',\n              hookName,\n              addendum,\n            );\n          }\n        }\n      }\n      effect = effect.next;\n    } while (effect !== firstEffect);\n  }\n}\n\nexport function commitPassiveEffectDurations(\n  finishedRoot: FiberRoot,\n  finishedWork: Fiber,\n): void {\n  if (enableProfilerTimer && enableProfilerCommitHooks) {\n    // Only Profilers with work in their subtree will have an Update effect scheduled.\n    if ((finishedWork.flags & Update) !== NoFlags) {\n      switch (finishedWork.tag) {\n        case Profiler: {\n          const {passiveEffectDuration} = finishedWork.stateNode;\n          const {id, onPostCommit} = finishedWork.memoizedProps;\n\n          // This value will still reflect the previous commit phase.\n          // It does not get reset until the start of the next commit phase.\n          const commitTime = getCommitTime();\n\n          let phase = finishedWork.alternate === null ? 'mount' : 'update';\n          if (enableProfilerNestedUpdatePhase) {\n            if (isCurrentUpdateNested()) {\n              phase = 'nested-update';\n            }\n          }\n\n          if (typeof onPostCommit === 'function') {\n            onPostCommit(id, phase, passiveEffectDuration, commitTime);\n          }\n\n          // Bubble times to the next nearest ancestor Profiler.\n          // After we process that Profiler, we'll bubble further up.\n          let parentFiber = finishedWork.return;\n          outer: while (parentFiber !== null) {\n            switch (parentFiber.tag) {\n              case HostRoot:\n                const root = parentFiber.stateNode;\n                root.passiveEffectDuration += passiveEffectDuration;\n                break outer;\n              case Profiler:\n                const parentStateNode = parentFiber.stateNode;\n                parentStateNode.passiveEffectDuration += passiveEffectDuration;\n                break outer;\n            }\n            parentFiber = parentFiber.return;\n          }\n          break;\n        }\n        default:\n          break;\n      }\n    }\n  }\n}\n\nfunction commitLayoutEffectOnFiber(\n  finishedRoot: FiberRoot,\n  current: Fiber | null,\n  finishedWork: Fiber,\n  committedLanes: Lanes,\n): void {\n  if ((finishedWork.flags & LayoutMask) !== NoFlags) {\n    switch (finishedWork.tag) {\n      case FunctionComponent:\n      case ForwardRef:\n      case SimpleMemoComponent: {\n        if (\n          !enableSuspenseLayoutEffectSemantics ||\n          !offscreenSubtreeWasHidden\n        ) {\n          // At this point layout effects have already been destroyed (during mutation phase).\n          // This is done to prevent sibling component effects from interfering with each other,\n          // e.g. a destroy function in one component should never override a ref set\n          // by a create function in another component during the same commit.\n          if (\n            enableProfilerTimer &&\n            enableProfilerCommitHooks &&\n            finishedWork.mode & ProfileMode\n          ) {\n            try {\n              startLayoutEffectTimer();\n              commitHookEffectListMount(\n                HookLayout | HookHasEffect,\n                finishedWork,\n              );\n            } finally {\n              recordLayoutEffectDuration(finishedWork);\n            }\n          } else {\n            commitHookEffectListMount(HookLayout | HookHasEffect, finishedWork);\n          }\n        }\n        break;\n      }\n      case ClassComponent: {\n        const instance = finishedWork.stateNode;\n        if (finishedWork.flags & Update) {\n          if (!offscreenSubtreeWasHidden) {\n            if (current === null) {\n              // We could update instance props and state here,\n              // but instead we rely on them being set during last render.\n              // TODO: revisit this when we implement resuming.\n              if (__DEV__) {\n                if (\n                  finishedWork.type === finishedWork.elementType &&\n                  !didWarnAboutReassigningProps\n                ) {\n                  if (instance.props !== finishedWork.memoizedProps) {\n                    console.error(\n                      'Expected %s props to match memoized props before ' +\n                        'componentDidMount. ' +\n                        'This might either be because of a bug in React, or because ' +\n                        'a component reassigns its own `this.props`. ' +\n                        'Please file an issue.',\n                      getComponentNameFromFiber(finishedWork) || 'instance',\n                    );\n                  }\n                  if (instance.state !== finishedWork.memoizedState) {\n                    console.error(\n                      'Expected %s state to match memoized state before ' +\n                        'componentDidMount. ' +\n                        'This might either be because of a bug in React, or because ' +\n                        'a component reassigns its own `this.state`. ' +\n                        'Please file an issue.',\n                      getComponentNameFromFiber(finishedWork) || 'instance',\n                    );\n                  }\n                }\n              }\n              if (\n                enableProfilerTimer &&\n                enableProfilerCommitHooks &&\n                finishedWork.mode & ProfileMode\n              ) {\n                try {\n                  startLayoutEffectTimer();\n                  instance.componentDidMount();\n                } finally {\n                  recordLayoutEffectDuration(finishedWork);\n                }\n              } else {\n                instance.componentDidMount();\n              }\n            } else {\n              const prevProps =\n                finishedWork.elementType === finishedWork.type\n                  ? current.memoizedProps\n                  : resolveDefaultProps(\n                      finishedWork.type,\n                      current.memoizedProps,\n                    );\n              const prevState = current.memoizedState;\n              // We could update instance props and state here,\n              // but instead we rely on them being set during last render.\n              // TODO: revisit this when we implement resuming.\n              if (__DEV__) {\n                if (\n                  finishedWork.type === finishedWork.elementType &&\n                  !didWarnAboutReassigningProps\n                ) {\n                  if (instance.props !== finishedWork.memoizedProps) {\n                    console.error(\n                      'Expected %s props to match memoized props before ' +\n                        'componentDidUpdate. ' +\n                        'This might either be because of a bug in React, or because ' +\n                        'a component reassigns its own `this.props`. ' +\n                        'Please file an issue.',\n                      getComponentNameFromFiber(finishedWork) || 'instance',\n                    );\n                  }\n                  if (instance.state !== finishedWork.memoizedState) {\n                    console.error(\n                      'Expected %s state to match memoized state before ' +\n                        'componentDidUpdate. ' +\n                        'This might either be because of a bug in React, or because ' +\n                        'a component reassigns its own `this.state`. ' +\n                        'Please file an issue.',\n                      getComponentNameFromFiber(finishedWork) || 'instance',\n                    );\n                  }\n                }\n              }\n              if (\n                enableProfilerTimer &&\n                enableProfilerCommitHooks &&\n                finishedWork.mode & ProfileMode\n              ) {\n                try {\n                  startLayoutEffectTimer();\n                  instance.componentDidUpdate(\n                    prevProps,\n                    prevState,\n                    instance.__reactInternalSnapshotBeforeUpdate,\n                  );\n                } finally {\n                  recordLayoutEffectDuration(finishedWork);\n                }\n              } else {\n                instance.componentDidUpdate(\n                  prevProps,\n                  prevState,\n                  instance.__reactInternalSnapshotBeforeUpdate,\n                );\n              }\n            }\n          }\n        }\n\n        // TODO: I think this is now always non-null by the time it reaches the\n        // commit phase. Consider removing the type check.\n        const updateQueue: UpdateQueue<\n          *,\n        > | null = (finishedWork.updateQueue: any);\n        if (updateQueue !== null) {\n          if (__DEV__) {\n            if (\n              finishedWork.type === finishedWork.elementType &&\n              !didWarnAboutReassigningProps\n            ) {\n              if (instance.props !== finishedWork.memoizedProps) {\n                console.error(\n                  'Expected %s props to match memoized props before ' +\n                    'processing the update queue. ' +\n                    'This might either be because of a bug in React, or because ' +\n                    'a component reassigns its own `this.props`. ' +\n                    'Please file an issue.',\n                  getComponentNameFromFiber(finishedWork) || 'instance',\n                );\n              }\n              if (instance.state !== finishedWork.memoizedState) {\n                console.error(\n                  'Expected %s state to match memoized state before ' +\n                    'processing the update queue. ' +\n                    'This might either be because of a bug in React, or because ' +\n                    'a component reassigns its own `this.state`. ' +\n                    'Please file an issue.',\n                  getComponentNameFromFiber(finishedWork) || 'instance',\n                );\n              }\n            }\n          }\n          // We could update instance props and state here,\n          // but instead we rely on them being set during last render.\n          // TODO: revisit this when we implement resuming.\n          commitUpdateQueue(finishedWork, updateQueue, instance);\n        }\n        break;\n      }\n      case HostRoot: {\n        // TODO: I think this is now always non-null by the time it reaches the\n        // commit phase. Consider removing the type check.\n        const updateQueue: UpdateQueue<\n          *,\n        > | null = (finishedWork.updateQueue: any);\n        if (updateQueue !== null) {\n          let instance = null;\n          if (finishedWork.child !== null) {\n            switch (finishedWork.child.tag) {\n              case HostComponent:\n                instance = getPublicInstance(finishedWork.child.stateNode);\n                break;\n              case ClassComponent:\n                instance = finishedWork.child.stateNode;\n                break;\n            }\n          }\n          commitUpdateQueue(finishedWork, updateQueue, instance);\n        }\n        break;\n      }\n      case HostComponent: {\n        const instance: Instance = finishedWork.stateNode;\n\n        // Renderers may schedule work to be done after host components are mounted\n        // (eg DOM renderer may schedule auto-focus for inputs and form controls).\n        // These effects should only be committed when components are first mounted,\n        // aka when there is no current/alternate.\n        if (current === null && finishedWork.flags & Update) {\n          const type = finishedWork.type;\n          const props = finishedWork.memoizedProps;\n          commitMount(instance, type, props, finishedWork);\n        }\n\n        break;\n      }\n      case HostText: {\n        // We have no life-cycles associated with text.\n        break;\n      }\n      case HostPortal: {\n        // We have no life-cycles associated with portals.\n        break;\n      }\n      case Profiler: {\n        if (enableProfilerTimer) {\n          const {onCommit, onRender} = finishedWork.memoizedProps;\n          const {effectDuration} = finishedWork.stateNode;\n\n          const commitTime = getCommitTime();\n\n          let phase = current === null ? 'mount' : 'update';\n          if (enableProfilerNestedUpdatePhase) {\n            if (isCurrentUpdateNested()) {\n              phase = 'nested-update';\n            }\n          }\n\n          if (typeof onRender === 'function') {\n            onRender(\n              finishedWork.memoizedProps.id,\n              phase,\n              finishedWork.actualDuration,\n              finishedWork.treeBaseDuration,\n              finishedWork.actualStartTime,\n              commitTime,\n            );\n          }\n\n          if (enableProfilerCommitHooks) {\n            if (typeof onCommit === 'function') {\n              onCommit(\n                finishedWork.memoizedProps.id,\n                phase,\n                effectDuration,\n                commitTime,\n              );\n            }\n\n            // Schedule a passive effect for this Profiler to call onPostCommit hooks.\n            // This effect should be scheduled even if there is no onPostCommit callback for this Profiler,\n            // because the effect is also where times bubble to parent Profilers.\n            enqueuePendingPassiveProfilerEffect(finishedWork);\n\n            // Propagate layout effect durations to the next nearest Profiler ancestor.\n            // Do not reset these values until the next render so DevTools has a chance to read them first.\n            let parentFiber = finishedWork.return;\n            outer: while (parentFiber !== null) {\n              switch (parentFiber.tag) {\n                case HostRoot:\n                  const root = parentFiber.stateNode;\n                  root.effectDuration += effectDuration;\n                  break outer;\n                case Profiler:\n                  const parentStateNode = parentFiber.stateNode;\n                  parentStateNode.effectDuration += effectDuration;\n                  break outer;\n              }\n              parentFiber = parentFiber.return;\n            }\n          }\n        }\n        break;\n      }\n      case SuspenseComponent: {\n        commitSuspenseHydrationCallbacks(finishedRoot, finishedWork);\n        break;\n      }\n      case SuspenseListComponent:\n      case IncompleteClassComponent:\n      case ScopeComponent:\n      case OffscreenComponent:\n      case LegacyHiddenComponent:\n      case TracingMarkerComponent: {\n        break;\n      }\n\n      default:\n        throw new Error(\n          'This unit of work tag should not have side-effects. This error is ' +\n            'likely caused by a bug in React. Please file an issue.',\n        );\n    }\n  }\n\n  if (!enableSuspenseLayoutEffectSemantics || !offscreenSubtreeWasHidden) {\n    if (enableScopeAPI) {\n      // TODO: This is a temporary solution that allowed us to transition away\n      // from React Flare on www.\n      if (finishedWork.flags & Ref && finishedWork.tag !== ScopeComponent) {\n        commitAttachRef(finishedWork);\n      }\n    } else {\n      if (finishedWork.flags & Ref) {\n        commitAttachRef(finishedWork);\n      }\n    }\n  }\n}\n\nfunction reappearLayoutEffectsOnFiber(node: Fiber) {\n  // Turn on layout effects in a tree that previously disappeared.\n  // TODO (Offscreen) Check: flags & LayoutStatic\n  switch (node.tag) {\n    case FunctionComponent:\n    case ForwardRef:\n    case SimpleMemoComponent: {\n      if (\n        enableProfilerTimer &&\n        enableProfilerCommitHooks &&\n        node.mode & ProfileMode\n      ) {\n        try {\n          startLayoutEffectTimer();\n          safelyCallCommitHookLayoutEffectListMount(node, node.return);\n        } finally {\n          recordLayoutEffectDuration(node);\n        }\n      } else {\n        safelyCallCommitHookLayoutEffectListMount(node, node.return);\n      }\n      break;\n    }\n    case ClassComponent: {\n      const instance = node.stateNode;\n      if (typeof instance.componentDidMount === 'function') {\n        safelyCallComponentDidMount(node, node.return, instance);\n      }\n      safelyAttachRef(node, node.return);\n      break;\n    }\n    case HostComponent: {\n      safelyAttachRef(node, node.return);\n      break;\n    }\n  }\n}\n\nfunction commitTransitionProgress(\n  finishedRoot: FiberRoot,\n  offscreenFiber: Fiber,\n) {\n  if (enableTransitionTracing) {\n    // This function adds suspense boundaries to the root\n    // or tracing marker's pendingSuspenseBoundaries map.\n    // When a suspense boundary goes from a resolved to a fallback\n    // state we add the boundary to the map, and when it goes from\n    // a fallback to a resolved state, we remove the boundary from\n    // the map.\n\n    // We use stateNode on the Offscreen component as a stable object\n    // that doesnt change from render to render. This way we can\n    // distinguish between different Offscreen instances (vs. the same\n    // Offscreen instance with different fibers)\n    const offscreenInstance: OffscreenInstance = offscreenFiber.stateNode;\n\n    let prevState: SuspenseState | null = null;\n    const previousFiber = offscreenFiber.alternate;\n    if (previousFiber !== null && previousFiber.memoizedState !== null) {\n      prevState = previousFiber.memoizedState;\n    }\n    const nextState: SuspenseState | null = offscreenFiber.memoizedState;\n\n    const wasHidden = prevState !== null;\n    const isHidden = nextState !== null;\n\n    const rootState: RootState = finishedRoot.current.memoizedState;\n    // TODO(luna) move pendingSuspenseBoundaries and transitions from\n    // HostRoot fiber to FiberRoot\n    const rootPendingBoundaries = rootState.pendingSuspenseBoundaries;\n    const rootTransitions = rootState.transitions;\n\n    // If there is a name on the suspense boundary, store that in\n    // the pending boundaries.\n    let name = null;\n    const parent = offscreenFiber.return;\n    if (\n      parent !== null &&\n      parent.tag === SuspenseComponent &&\n      parent.memoizedProps.unstable_name\n    ) {\n      name = parent.memoizedProps.unstable_name;\n    }\n\n    if (rootPendingBoundaries !== null) {\n      if (previousFiber === null) {\n        // Initial mount\n        if (isHidden) {\n          rootPendingBoundaries.set(offscreenInstance, {\n            name,\n          });\n        }\n      } else {\n        if (wasHidden && !isHidden) {\n          // The suspense boundary went from hidden to visible. Remove\n          // the boundary from the pending suspense boundaries set\n          // if it's there\n          if (rootPendingBoundaries.has(offscreenInstance)) {\n            rootPendingBoundaries.delete(offscreenInstance);\n\n            if (rootPendingBoundaries.size === 0 && rootTransitions !== null) {\n              rootTransitions.forEach(transition => {\n                addTransitionCompleteCallbackToPendingTransition({\n                  transitionName: transition.name,\n                  startTime: transition.startTime,\n                });\n              });\n            }\n          }\n        } else if (!wasHidden && isHidden) {\n          // The suspense boundaries was just hidden. Add the boundary\n          // to the pending boundary set if it's there\n          rootPendingBoundaries.set(offscreenInstance, {\n            name,\n          });\n        }\n      }\n    }\n  }\n}\n\nfunction hideOrUnhideAllChildren(finishedWork, isHidden) {\n  // Only hide or unhide the top-most host nodes.\n  let hostSubtreeRoot = null;\n\n  if (supportsMutation) {\n    // We only have the top Fiber that was inserted but we need to recurse down its\n    // children to find all the terminal nodes.\n    let node: Fiber = finishedWork;\n    while (true) {\n      if (node.tag === HostComponent) {\n        if (hostSubtreeRoot === null) {\n          hostSubtreeRoot = node;\n          try {\n            const instance = node.stateNode;\n            if (isHidden) {\n              hideInstance(instance);\n            } else {\n              unhideInstance(node.stateNode, node.memoizedProps);\n            }\n          } catch (error) {\n            captureCommitPhaseError(finishedWork, finishedWork.return, error);\n          }\n        }\n      } else if (node.tag === HostText) {\n        if (hostSubtreeRoot === null) {\n          try {\n            const instance = node.stateNode;\n            if (isHidden) {\n              hideTextInstance(instance);\n            } else {\n              unhideTextInstance(instance, node.memoizedProps);\n            }\n          } catch (error) {\n            captureCommitPhaseError(finishedWork, finishedWork.return, error);\n          }\n        }\n      } else if (\n        (node.tag === OffscreenComponent ||\n          node.tag === LegacyHiddenComponent) &&\n        (node.memoizedState: OffscreenState) !== null &&\n        node !== finishedWork\n      ) {\n        // Found a nested Offscreen component that is hidden.\n        // Don't search any deeper. This tree should remain hidden.\n      } else if (node.child !== null) {\n        node.child.return = node;\n        node = node.child;\n        continue;\n      }\n\n      if (node === finishedWork) {\n        return;\n      }\n      while (node.sibling === null) {\n        if (node.return === null || node.return === finishedWork) {\n          return;\n        }\n\n        if (hostSubtreeRoot === node) {\n          hostSubtreeRoot = null;\n        }\n\n        node = node.return;\n      }\n\n      if (hostSubtreeRoot === node) {\n        hostSubtreeRoot = null;\n      }\n\n      node.sibling.return = node.return;\n      node = node.sibling;\n    }\n  }\n}\n\nfunction commitAttachRef(finishedWork: Fiber) {\n  const ref = finishedWork.ref;\n  if (ref !== null) {\n    const instance = finishedWork.stateNode;\n    let instanceToUse;\n    switch (finishedWork.tag) {\n      case HostComponent:\n        instanceToUse = getPublicInstance(instance);\n        break;\n      default:\n        instanceToUse = instance;\n    }\n    // Moved outside to ensure DCE works with this flag\n    if (enableScopeAPI && finishedWork.tag === ScopeComponent) {\n      instanceToUse = instance;\n    }\n    if (typeof ref === 'function') {\n      let retVal;\n      if (\n        enableProfilerTimer &&\n        enableProfilerCommitHooks &&\n        finishedWork.mode & ProfileMode\n      ) {\n        try {\n          startLayoutEffectTimer();\n          retVal = ref(instanceToUse);\n        } finally {\n          recordLayoutEffectDuration(finishedWork);\n        }\n      } else {\n        retVal = ref(instanceToUse);\n      }\n      if (__DEV__) {\n        if (typeof retVal === 'function') {\n          console.error(\n            'Unexpected return value from a callback ref in %s. ' +\n              'A callback ref should not return a function.',\n            getComponentNameFromFiber(finishedWork),\n          );\n        }\n      }\n    } else {\n      if (__DEV__) {\n        if (!ref.hasOwnProperty('current')) {\n          console.error(\n            'Unexpected ref object provided for %s. ' +\n              'Use either a ref-setter function or React.createRef().',\n            getComponentNameFromFiber(finishedWork),\n          );\n        }\n      }\n\n      ref.current = instanceToUse;\n    }\n  }\n}\n\nfunction commitDetachRef(current: Fiber) {\n  const currentRef = current.ref;\n  if (currentRef !== null) {\n    if (typeof currentRef === 'function') {\n      if (\n        enableProfilerTimer &&\n        enableProfilerCommitHooks &&\n        current.mode & ProfileMode\n      ) {\n        try {\n          startLayoutEffectTimer();\n          currentRef(null);\n        } finally {\n          recordLayoutEffectDuration(current);\n        }\n      } else {\n        currentRef(null);\n      }\n    } else {\n      currentRef.current = null;\n    }\n  }\n}\n\nfunction detachFiberMutation(fiber: Fiber) {\n  // Cut off the return pointer to disconnect it from the tree.\n  // This enables us to detect and warn against state updates on an unmounted component.\n  // It also prevents events from bubbling from within disconnected components.\n  //\n  // Ideally, we should also clear the child pointer of the parent alternate to let this\n  // get GC:ed but we don't know which for sure which parent is the current\n  // one so we'll settle for GC:ing the subtree of this child.\n  // This child itself will be GC:ed when the parent updates the next time.\n  //\n  // Note that we can't clear child or sibling pointers yet.\n  // They're needed for passive effects and for findDOMNode.\n  // We defer those fields, and all other cleanup, to the passive phase (see detachFiberAfterEffects).\n  //\n  // Don't reset the alternate yet, either. We need that so we can detach the\n  // alternate's fields in the passive phase. Clearing the return pointer is\n  // sufficient for findDOMNode semantics.\n  const alternate = fiber.alternate;\n  if (alternate !== null) {\n    alternate.return = null;\n  }\n  fiber.return = null;\n}\n\nfunction detachFiberAfterEffects(fiber: Fiber) {\n  const alternate = fiber.alternate;\n  if (alternate !== null) {\n    fiber.alternate = null;\n    detachFiberAfterEffects(alternate);\n  }\n\n  // Note: Defensively using negation instead of < in case\n  // `deletedTreeCleanUpLevel` is undefined.\n  if (!(deletedTreeCleanUpLevel >= 2)) {\n    // This is the default branch (level 0).\n    fiber.child = null;\n    fiber.deletions = null;\n    fiber.dependencies = null;\n    fiber.memoizedProps = null;\n    fiber.memoizedState = null;\n    fiber.pendingProps = null;\n    fiber.sibling = null;\n    fiber.stateNode = null;\n    fiber.updateQueue = null;\n\n    if (__DEV__) {\n      fiber._debugOwner = null;\n    }\n  } else {\n    // Clear cyclical Fiber fields. This level alone is designed to roughly\n    // approximate the planned Fiber refactor. In that world, `setState` will be\n    // bound to a special \"instance\" object instead of a Fiber. The Instance\n    // object will not have any of these fields. It will only be connected to\n    // the fiber tree via a single link at the root. So if this level alone is\n    // sufficient to fix memory issues, that bodes well for our plans.\n    fiber.child = null;\n    fiber.deletions = null;\n    fiber.sibling = null;\n\n    // The `stateNode` is cyclical because on host nodes it points to the host\n    // tree, which has its own pointers to children, parents, and siblings.\n    // The other host nodes also point back to fibers, so we should detach that\n    // one, too.\n    if (fiber.tag === HostComponent) {\n      const hostInstance: Instance = fiber.stateNode;\n      if (hostInstance !== null) {\n        detachDeletedInstance(hostInstance);\n      }\n    }\n    fiber.stateNode = null;\n\n    // I'm intentionally not clearing the `return` field in this level. We\n    // already disconnect the `return` pointer at the root of the deleted\n    // subtree (in `detachFiberMutation`). Besides, `return` by itself is not\n    // cyclical — it's only cyclical when combined with `child`, `sibling`, and\n    // `alternate`. But we'll clear it in the next level anyway, just in case.\n\n    if (__DEV__) {\n      fiber._debugOwner = null;\n    }\n\n    if (deletedTreeCleanUpLevel >= 3) {\n      // Theoretically, nothing in here should be necessary, because we already\n      // disconnected the fiber from the tree. So even if something leaks this\n      // particular fiber, it won't leak anything else\n      //\n      // The purpose of this branch is to be super aggressive so we can measure\n      // if there's any difference in memory impact. If there is, that could\n      // indicate a React leak we don't know about.\n      fiber.return = null;\n      fiber.dependencies = null;\n      fiber.memoizedProps = null;\n      fiber.memoizedState = null;\n      fiber.pendingProps = null;\n      fiber.stateNode = null;\n      // TODO: Move to `commitPassiveUnmountInsideDeletedTreeOnFiber` instead.\n      fiber.updateQueue = null;\n    }\n  }\n}\n\nfunction emptyPortalContainer(current: Fiber) {\n  if (!supportsPersistence) {\n    return;\n  }\n\n  const portal: {\n    containerInfo: Container,\n    pendingChildren: ChildSet,\n    ...\n  } = current.stateNode;\n  const {containerInfo} = portal;\n  const emptyChildSet = createContainerChildSet(containerInfo);\n  replaceContainerChildren(containerInfo, emptyChildSet);\n}\n\nfunction getHostParentFiber(fiber: Fiber): Fiber {\n  let parent = fiber.return;\n  while (parent !== null) {\n    if (isHostParent(parent)) {\n      return parent;\n    }\n    parent = parent.return;\n  }\n\n  throw new Error(\n    'Expected to find a host parent. This error is likely caused by a bug ' +\n      'in React. Please file an issue.',\n  );\n}\n\nfunction isHostParent(fiber: Fiber): boolean {\n  return (\n    fiber.tag === HostComponent ||\n    fiber.tag === HostRoot ||\n    fiber.tag === HostPortal\n  );\n}\n\nfunction getHostSibling(fiber: Fiber): ?Instance {\n  // We're going to search forward into the tree until we find a sibling host\n  // node. Unfortunately, if multiple insertions are done in a row we have to\n  // search past them. This leads to exponential search for the next sibling.\n  // TODO: Find a more efficient way to do this.\n  let node: Fiber = fiber;\n  siblings: while (true) {\n    // If we didn't find anything, let's try the next sibling.\n    while (node.sibling === null) {\n      if (node.return === null || isHostParent(node.return)) {\n        // If we pop out of the root or hit the parent the fiber we are the\n        // last sibling.\n        return null;\n      }\n      node = node.return;\n    }\n    node.sibling.return = node.return;\n    node = node.sibling;\n    while (\n      node.tag !== HostComponent &&\n      node.tag !== HostText &&\n      node.tag !== DehydratedFragment\n    ) {\n      // If it is not host node and, we might have a host node inside it.\n      // Try to search down until we find one.\n      if (node.flags & Placement) {\n        // If we don't have a child, try the siblings instead.\n        continue siblings;\n      }\n      // If we don't have a child, try the siblings instead.\n      // We also skip portals because they are not part of this host tree.\n      if (node.child === null || node.tag === HostPortal) {\n        continue siblings;\n      } else {\n        node.child.return = node;\n        node = node.child;\n      }\n    }\n    // Check if this host node is stable or about to be placed.\n    if (!(node.flags & Placement)) {\n      // Found it!\n      return node.stateNode;\n    }\n  }\n}\n\nfunction commitPlacement(finishedWork: Fiber): void {\n  if (!supportsMutation) {\n    return;\n  }\n\n  // Recursively insert all host nodes into the parent.\n  const parentFiber = getHostParentFiber(finishedWork);\n\n  // Note: these two variables *must* always be updated together.\n  switch (parentFiber.tag) {\n    case HostComponent: {\n      const parent: Instance = parentFiber.stateNode;\n      if (parentFiber.flags & ContentReset) {\n        // Reset the text content of the parent before doing any insertions\n        resetTextContent(parent);\n        // Clear ContentReset from the effect tag\n        parentFiber.flags &= ~ContentReset;\n      }\n\n      const before = getHostSibling(finishedWork);\n      // We only have the top Fiber that was inserted but we need to recurse down its\n      // children to find all the terminal nodes.\n      insertOrAppendPlacementNode(finishedWork, before, parent);\n      break;\n    }\n    case HostRoot:\n    case HostPortal: {\n      const parent: Container = parentFiber.stateNode.containerInfo;\n      const before = getHostSibling(finishedWork);\n      insertOrAppendPlacementNodeIntoContainer(finishedWork, before, parent);\n      break;\n    }\n    // eslint-disable-next-line-no-fallthrough\n    default:\n      throw new Error(\n        'Invalid host parent fiber. This error is likely caused by a bug ' +\n          'in React. Please file an issue.',\n      );\n  }\n}\n\nfunction insertOrAppendPlacementNodeIntoContainer(\n  node: Fiber,\n  before: ?Instance,\n  parent: Container,\n): void {\n  const {tag} = node;\n  const isHost = tag === HostComponent || tag === HostText;\n  if (isHost) {\n    const stateNode = node.stateNode;\n    if (before) {\n      insertInContainerBefore(parent, stateNode, before);\n    } else {\n      appendChildToContainer(parent, stateNode);\n    }\n  } else if (tag === HostPortal) {\n    // If the insertion itself is a portal, then we don't want to traverse\n    // down its children. Instead, we'll get insertions from each child in\n    // the portal directly.\n  } else {\n    const child = node.child;\n    if (child !== null) {\n      insertOrAppendPlacementNodeIntoContainer(child, before, parent);\n      let sibling = child.sibling;\n      while (sibling !== null) {\n        insertOrAppendPlacementNodeIntoContainer(sibling, before, parent);\n        sibling = sibling.sibling;\n      }\n    }\n  }\n}\n\nfunction insertOrAppendPlacementNode(\n  node: Fiber,\n  before: ?Instance,\n  parent: Instance,\n): void {\n  const {tag} = node;\n  const isHost = tag === HostComponent || tag === HostText;\n  if (isHost) {\n    const stateNode = node.stateNode;\n    if (before) {\n      insertBefore(parent, stateNode, before);\n    } else {\n      appendChild(parent, stateNode);\n    }\n  } else if (tag === HostPortal) {\n    // If the insertion itself is a portal, then we don't want to traverse\n    // down its children. Instead, we'll get insertions from each child in\n    // the portal directly.\n  } else {\n    const child = node.child;\n    if (child !== null) {\n      insertOrAppendPlacementNode(child, before, parent);\n      let sibling = child.sibling;\n      while (sibling !== null) {\n        insertOrAppendPlacementNode(sibling, before, parent);\n        sibling = sibling.sibling;\n      }\n    }\n  }\n}\n\n// These are tracked on the stack as we recursively traverse a\n// deleted subtree.\n// TODO: Update these during the whole mutation phase, not just during\n// a deletion.\nlet hostParent: Instance | Container | null = null;\nlet hostParentIsContainer: boolean = false;\n\nfunction commitDeletionEffects(\n  root: FiberRoot,\n  returnFiber: Fiber,\n  deletedFiber: Fiber,\n) {\n  if (supportsMutation) {\n    // We only have the top Fiber that was deleted but we need to recurse down its\n    // children to find all the terminal nodes.\n\n    // Recursively delete all host nodes from the parent, detach refs, clean\n    // up mounted layout effects, and call componentWillUnmount.\n\n    // We only need to remove the topmost host child in each branch. But then we\n    // still need to keep traversing to unmount effects, refs, and cWU. TODO: We\n    // could split this into two separate traversals functions, where the second\n    // one doesn't include any removeChild logic. This is maybe the same\n    // function as \"disappearLayoutEffects\" (or whatever that turns into after\n    // the layout phase is refactored to use recursion).\n\n    // Before starting, find the nearest host parent on the stack so we know\n    // which instance/container to remove the children from.\n    // TODO: Instead of searching up the fiber return path on every deletion, we\n    // can track the nearest host component on the JS stack as we traverse the\n    // tree during the commit phase. This would make insertions faster, too.\n    let parent = returnFiber;\n    findParent: while (parent !== null) {\n      switch (parent.tag) {\n        case HostComponent: {\n          hostParent = parent.stateNode;\n          hostParentIsContainer = false;\n          break findParent;\n        }\n        case HostRoot: {\n          hostParent = parent.stateNode.containerInfo;\n          hostParentIsContainer = true;\n          break findParent;\n        }\n        case HostPortal: {\n          hostParent = parent.stateNode.containerInfo;\n          hostParentIsContainer = true;\n          break findParent;\n        }\n      }\n      parent = parent.return;\n    }\n    if (hostParent === null) {\n      throw new Error(\n        'Expected to find a host parent. This error is likely caused by ' +\n          'a bug in React. Please file an issue.',\n      );\n    }\n    commitDeletionEffectsOnFiber(root, returnFiber, deletedFiber);\n    hostParent = null;\n    hostParentIsContainer = false;\n  } else {\n    // Detach refs and call componentWillUnmount() on the whole subtree.\n    commitDeletionEffectsOnFiber(root, returnFiber, deletedFiber);\n  }\n\n  detachFiberMutation(deletedFiber);\n}\n\nfunction recursivelyTraverseDeletionEffects(\n  finishedRoot,\n  nearestMountedAncestor,\n  parent,\n) {\n  // TODO: Use a static flag to skip trees that don't have unmount effects\n  let child = parent.child;\n  while (child !== null) {\n    commitDeletionEffectsOnFiber(finishedRoot, nearestMountedAncestor, child);\n    child = child.sibling;\n  }\n}\n\nfunction commitDeletionEffectsOnFiber(\n  finishedRoot: FiberRoot,\n  nearestMountedAncestor: Fiber,\n  deletedFiber: Fiber,\n) {\n  onCommitUnmount(deletedFiber);\n\n  // The cases in this outer switch modify the stack before they traverse\n  // into their subtree. There are simpler cases in the inner switch\n  // that don't modify the stack.\n  switch (deletedFiber.tag) {\n    case HostComponent: {\n      if (!offscreenSubtreeWasHidden) {\n        safelyDetachRef(deletedFiber, nearestMountedAncestor);\n      }\n      // Intentional fallthrough to next branch\n    }\n    // eslint-disable-next-line-no-fallthrough\n    case HostText: {\n      // We only need to remove the nearest host child. Set the host parent\n      // to `null` on the stack to indicate that nested children don't\n      // need to be removed.\n      if (supportsMutation) {\n        const prevHostParent = hostParent;\n        const prevHostParentIsContainer = hostParentIsContainer;\n        hostParent = null;\n        recursivelyTraverseDeletionEffects(\n          finishedRoot,\n          nearestMountedAncestor,\n          deletedFiber,\n        );\n        hostParent = prevHostParent;\n        hostParentIsContainer = prevHostParentIsContainer;\n\n        if (hostParent !== null) {\n          // Now that all the child effects have unmounted, we can remove the\n          // node from the tree.\n          if (hostParentIsContainer) {\n            removeChildFromContainer(\n              ((hostParent: any): Container),\n              (deletedFiber.stateNode: Instance | TextInstance),\n            );\n          } else {\n            removeChild(\n              ((hostParent: any): Instance),\n              (deletedFiber.stateNode: Instance | TextInstance),\n            );\n          }\n        }\n      } else {\n        recursivelyTraverseDeletionEffects(\n          finishedRoot,\n          nearestMountedAncestor,\n          deletedFiber,\n        );\n      }\n      return;\n    }\n    case DehydratedFragment: {\n      if (enableSuspenseCallback) {\n        const hydrationCallbacks = finishedRoot.hydrationCallbacks;\n        if (hydrationCallbacks !== null) {\n          const onDeleted = hydrationCallbacks.onDeleted;\n          if (onDeleted) {\n            onDeleted((deletedFiber.stateNode: SuspenseInstance));\n          }\n        }\n      }\n\n      // Dehydrated fragments don't have any children\n\n      // Delete the dehydrated suspense boundary and all of its content.\n      if (supportsMutation) {\n        if (hostParent !== null) {\n          if (hostParentIsContainer) {\n            clearSuspenseBoundaryFromContainer(\n              ((hostParent: any): Container),\n              (deletedFiber.stateNode: SuspenseInstance),\n            );\n          } else {\n            clearSuspenseBoundary(\n              ((hostParent: any): Instance),\n              (deletedFiber.stateNode: SuspenseInstance),\n            );\n          }\n        }\n      }\n      return;\n    }\n    case HostPortal: {\n      if (supportsMutation) {\n        // When we go into a portal, it becomes the parent to remove from.\n        const prevHostParent = hostParent;\n        const prevHostParentIsContainer = hostParentIsContainer;\n        hostParent = deletedFiber.stateNode.containerInfo;\n        hostParentIsContainer = true;\n        recursivelyTraverseDeletionEffects(\n          finishedRoot,\n          nearestMountedAncestor,\n          deletedFiber,\n        );\n        hostParent = prevHostParent;\n        hostParentIsContainer = prevHostParentIsContainer;\n      } else {\n        emptyPortalContainer(deletedFiber);\n\n        recursivelyTraverseDeletionEffects(\n          finishedRoot,\n          nearestMountedAncestor,\n          deletedFiber,\n        );\n      }\n      return;\n    }\n    case FunctionComponent:\n    case ForwardRef:\n    case MemoComponent:\n    case SimpleMemoComponent: {\n      if (!offscreenSubtreeWasHidden) {\n        const updateQueue: FunctionComponentUpdateQueue | null = (deletedFiber.updateQueue: any);\n        if (updateQueue !== null) {\n          const lastEffect = updateQueue.lastEffect;\n          if (lastEffect !== null) {\n            const firstEffect = lastEffect.next;\n\n            let effect = firstEffect;\n            do {\n              const {destroy, tag} = effect;\n              if (destroy !== undefined) {\n                if ((tag & HookInsertion) !== NoHookEffect) {\n                  safelyCallDestroy(\n                    deletedFiber,\n                    nearestMountedAncestor,\n                    destroy,\n                  );\n                } else if ((tag & HookLayout) !== NoHookEffect) {\n                  if (enableSchedulingProfiler) {\n                    markComponentLayoutEffectUnmountStarted(deletedFiber);\n                  }\n\n                  if (\n                    enableProfilerTimer &&\n                    enableProfilerCommitHooks &&\n                    deletedFiber.mode & ProfileMode\n                  ) {\n                    startLayoutEffectTimer();\n                    safelyCallDestroy(\n                      deletedFiber,\n                      nearestMountedAncestor,\n                      destroy,\n                    );\n                    recordLayoutEffectDuration(deletedFiber);\n                  } else {\n                    safelyCallDestroy(\n                      deletedFiber,\n                      nearestMountedAncestor,\n                      destroy,\n                    );\n                  }\n\n                  if (enableSchedulingProfiler) {\n                    markComponentLayoutEffectUnmountStopped();\n                  }\n                }\n              }\n              effect = effect.next;\n            } while (effect !== firstEffect);\n          }\n        }\n      }\n\n      recursivelyTraverseDeletionEffects(\n        finishedRoot,\n        nearestMountedAncestor,\n        deletedFiber,\n      );\n      return;\n    }\n    case ClassComponent: {\n      if (!offscreenSubtreeWasHidden) {\n        safelyDetachRef(deletedFiber, nearestMountedAncestor);\n        const instance = deletedFiber.stateNode;\n        if (typeof instance.componentWillUnmount === 'function') {\n          safelyCallComponentWillUnmount(\n            deletedFiber,\n            nearestMountedAncestor,\n            instance,\n          );\n        }\n      }\n      recursivelyTraverseDeletionEffects(\n        finishedRoot,\n        nearestMountedAncestor,\n        deletedFiber,\n      );\n      return;\n    }\n    case ScopeComponent: {\n      if (enableScopeAPI) {\n        safelyDetachRef(deletedFiber, nearestMountedAncestor);\n      }\n      recursivelyTraverseDeletionEffects(\n        finishedRoot,\n        nearestMountedAncestor,\n        deletedFiber,\n      );\n      return;\n    }\n    case OffscreenComponent: {\n      if (\n        // TODO: Remove this dead flag\n        enableSuspenseLayoutEffectSemantics &&\n        deletedFiber.mode & ConcurrentMode\n      ) {\n        // If this offscreen component is hidden, we already unmounted it. Before\n        // deleting the children, track that it's already unmounted so that we\n        // don't attempt to unmount the effects again.\n        // TODO: If the tree is hidden, in most cases we should be able to skip\n        // over the nested children entirely. An exception is we haven't yet found\n        // the topmost host node to delete, which we already track on the stack.\n        // But the other case is portals, which need to be detached no matter how\n        // deeply they are nested. We should use a subtree flag to track whether a\n        // subtree includes a nested portal.\n        const prevOffscreenSubtreeWasHidden = offscreenSubtreeWasHidden;\n        offscreenSubtreeWasHidden =\n          prevOffscreenSubtreeWasHidden || deletedFiber.memoizedState !== null;\n        recursivelyTraverseDeletionEffects(\n          finishedRoot,\n          nearestMountedAncestor,\n          deletedFiber,\n        );\n        offscreenSubtreeWasHidden = prevOffscreenSubtreeWasHidden;\n      } else {\n        recursivelyTraverseDeletionEffects(\n          finishedRoot,\n          nearestMountedAncestor,\n          deletedFiber,\n        );\n      }\n      break;\n    }\n    default: {\n      recursivelyTraverseDeletionEffects(\n        finishedRoot,\n        nearestMountedAncestor,\n        deletedFiber,\n      );\n      return;\n    }\n  }\n}\nfunction commitSuspenseCallback(finishedWork: Fiber) {\n  // TODO: Move this to passive phase\n  const newState: SuspenseState | null = finishedWork.memoizedState;\n  if (enableSuspenseCallback && newState !== null) {\n    const suspenseCallback = finishedWork.memoizedProps.suspenseCallback;\n    if (typeof suspenseCallback === 'function') {\n      const wakeables: Set<Wakeable> | null = (finishedWork.updateQueue: any);\n      if (wakeables !== null) {\n        suspenseCallback(new Set(wakeables));\n      }\n    } else if (__DEV__) {\n      if (suspenseCallback !== undefined) {\n        console.error('Unexpected type for suspenseCallback.');\n      }\n    }\n  }\n}\n\nfunction commitSuspenseHydrationCallbacks(\n  finishedRoot: FiberRoot,\n  finishedWork: Fiber,\n) {\n  if (!supportsHydration) {\n    return;\n  }\n  const newState: SuspenseState | null = finishedWork.memoizedState;\n  if (newState === null) {\n    const current = finishedWork.alternate;\n    if (current !== null) {\n      const prevState: SuspenseState | null = current.memoizedState;\n      if (prevState !== null) {\n        const suspenseInstance = prevState.dehydrated;\n        if (suspenseInstance !== null) {\n          commitHydratedSuspenseInstance(suspenseInstance);\n          if (enableSuspenseCallback) {\n            const hydrationCallbacks = finishedRoot.hydrationCallbacks;\n            if (hydrationCallbacks !== null) {\n              const onHydrated = hydrationCallbacks.onHydrated;\n              if (onHydrated) {\n                onHydrated(suspenseInstance);\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n\nfunction attachSuspenseRetryListeners(finishedWork: Fiber) {\n  // If this boundary just timed out, then it will have a set of wakeables.\n  // For each wakeable, attach a listener so that when it resolves, React\n  // attempts to re-render the boundary in the primary (pre-timeout) state.\n  const wakeables: Set<Wakeable> | null = (finishedWork.updateQueue: any);\n  if (wakeables !== null) {\n    finishedWork.updateQueue = null;\n    let retryCache = finishedWork.stateNode;\n    if (retryCache === null) {\n      retryCache = finishedWork.stateNode = new PossiblyWeakSet();\n    }\n    wakeables.forEach(wakeable => {\n      // Memoize using the boundary fiber to prevent redundant listeners.\n      const retry = resolveRetryWakeable.bind(null, finishedWork, wakeable);\n      if (!retryCache.has(wakeable)) {\n        retryCache.add(wakeable);\n\n        if (enableUpdaterTracking) {\n          if (isDevToolsPresent) {\n            if (inProgressLanes !== null && inProgressRoot !== null) {\n              // If we have pending work still, associate the original updaters with it.\n              restorePendingUpdaters(inProgressRoot, inProgressLanes);\n            } else {\n              throw Error(\n                'Expected finished root and lanes to be set. This is a bug in React.',\n              );\n            }\n          }\n        }\n\n        wakeable.then(retry, retry);\n      }\n    });\n  }\n}\n\n// This function detects when a Suspense boundary goes from visible to hidden.\n// It returns false if the boundary is already hidden.\n// TODO: Use an effect tag.\nexport function isSuspenseBoundaryBeingHidden(\n  current: Fiber | null,\n  finishedWork: Fiber,\n): boolean {\n  if (current !== null) {\n    const oldState: SuspenseState | null = current.memoizedState;\n    if (oldState === null || oldState.dehydrated !== null) {\n      const newState: SuspenseState | null = finishedWork.memoizedState;\n      return newState !== null && newState.dehydrated === null;\n    }\n  }\n  return false;\n}\n\nexport function commitMutationEffects(\n  root: FiberRoot,\n  finishedWork: Fiber,\n  committedLanes: Lanes,\n) {\n  inProgressLanes = committedLanes;\n  inProgressRoot = root;\n\n  setCurrentDebugFiberInDEV(finishedWork);\n  commitMutationEffectsOnFiber(finishedWork, root, committedLanes);\n  setCurrentDebugFiberInDEV(finishedWork);\n\n  inProgressLanes = null;\n  inProgressRoot = null;\n}\n\nfunction recursivelyTraverseMutationEffects(\n  root: FiberRoot,\n  parentFiber: Fiber,\n  lanes: Lanes,\n) {\n  // Deletions effects can be scheduled on any fiber type. They need to happen\n  // before the children effects hae fired.\n  const deletions = parentFiber.deletions;\n  if (deletions !== null) {\n    for (let i = 0; i < deletions.length; i++) {\n      const childToDelete = deletions[i];\n      try {\n        commitDeletionEffects(root, parentFiber, childToDelete);\n      } catch (error) {\n        captureCommitPhaseError(childToDelete, parentFiber, error);\n      }\n    }\n  }\n\n  const prevDebugFiber = getCurrentDebugFiberInDEV();\n  if (parentFiber.subtreeFlags & MutationMask) {\n    let child = parentFiber.child;\n    while (child !== null) {\n      setCurrentDebugFiberInDEV(child);\n      commitMutationEffectsOnFiber(child, root, lanes);\n      child = child.sibling;\n    }\n  }\n  setCurrentDebugFiberInDEV(prevDebugFiber);\n}\n\nfunction commitMutationEffectsOnFiber(\n  finishedWork: Fiber,\n  root: FiberRoot,\n  lanes: Lanes,\n) {\n  const current = finishedWork.alternate;\n  const flags = finishedWork.flags;\n\n  // The effect flag should be checked *after* we refine the type of fiber,\n  // because the fiber tag is more specific. An exception is any flag related\n  // to reconcilation, because those can be set on all fiber types.\n  switch (finishedWork.tag) {\n    case FunctionComponent:\n    case ForwardRef:\n    case MemoComponent:\n    case SimpleMemoComponent: {\n      recursivelyTraverseMutationEffects(root, finishedWork, lanes);\n      commitReconciliationEffects(finishedWork);\n\n      if (flags & Update) {\n        try {\n          commitHookEffectListUnmount(\n            HookInsertion | HookHasEffect,\n            finishedWork,\n            finishedWork.return,\n          );\n          commitHookEffectListMount(\n            HookInsertion | HookHasEffect,\n            finishedWork,\n          );\n        } catch (error) {\n          captureCommitPhaseError(finishedWork, finishedWork.return, error);\n        }\n        // Layout effects are destroyed during the mutation phase so that all\n        // destroy functions for all fibers are called before any create functions.\n        // This prevents sibling component effects from interfering with each other,\n        // e.g. a destroy function in one component should never override a ref set\n        // by a create function in another component during the same commit.\n        if (\n          enableProfilerTimer &&\n          enableProfilerCommitHooks &&\n          finishedWork.mode & ProfileMode\n        ) {\n          try {\n            startLayoutEffectTimer();\n            commitHookEffectListUnmount(\n              HookLayout | HookHasEffect,\n              finishedWork,\n              finishedWork.return,\n            );\n          } catch (error) {\n            captureCommitPhaseError(finishedWork, finishedWork.return, error);\n          }\n          recordLayoutEffectDuration(finishedWork);\n        } else {\n          try {\n            commitHookEffectListUnmount(\n              HookLayout | HookHasEffect,\n              finishedWork,\n              finishedWork.return,\n            );\n          } catch (error) {\n            captureCommitPhaseError(finishedWork, finishedWork.return, error);\n          }\n        }\n      }\n      return;\n    }\n    case ClassComponent: {\n      recursivelyTraverseMutationEffects(root, finishedWork, lanes);\n      commitReconciliationEffects(finishedWork);\n\n      if (flags & Ref) {\n        if (current !== null) {\n          safelyDetachRef(current, current.return);\n        }\n      }\n      return;\n    }\n    case HostComponent: {\n      recursivelyTraverseMutationEffects(root, finishedWork, lanes);\n      commitReconciliationEffects(finishedWork);\n\n      if (flags & Ref) {\n        if (current !== null) {\n          safelyDetachRef(current, current.return);\n        }\n      }\n      if (supportsMutation) {\n        // TODO: ContentReset gets cleared by the children during the commit\n        // phase. This is a refactor hazard because it means we must read\n        // flags the flags after `commitReconciliationEffects` has already run;\n        // the order matters. We should refactor so that ContentReset does not\n        // rely on mutating the flag during commit. Like by setting a flag\n        // during the render phase instead.\n        if (finishedWork.flags & ContentReset) {\n          const instance: Instance = finishedWork.stateNode;\n          try {\n            resetTextContent(instance);\n          } catch (error) {\n            captureCommitPhaseError(finishedWork, finishedWork.return, error);\n          }\n        }\n\n        if (flags & Update) {\n          const instance: Instance = finishedWork.stateNode;\n          if (instance != null) {\n            // Commit the work prepared earlier.\n            const newProps = finishedWork.memoizedProps;\n            // For hydration we reuse the update path but we treat the oldProps\n            // as the newProps. The updatePayload will contain the real change in\n            // this case.\n            const oldProps =\n              current !== null ? current.memoizedProps : newProps;\n            const type = finishedWork.type;\n            // TODO: Type the updateQueue to be specific to host components.\n            const updatePayload: null | UpdatePayload = (finishedWork.updateQueue: any);\n            finishedWork.updateQueue = null;\n            if (updatePayload !== null) {\n              try {\n                commitUpdate(\n                  instance,\n                  updatePayload,\n                  type,\n                  oldProps,\n                  newProps,\n                  finishedWork,\n                );\n              } catch (error) {\n                captureCommitPhaseError(\n                  finishedWork,\n                  finishedWork.return,\n                  error,\n                );\n              }\n            }\n          }\n        }\n      }\n      return;\n    }\n    case HostText: {\n      recursivelyTraverseMutationEffects(root, finishedWork, lanes);\n      commitReconciliationEffects(finishedWork);\n\n      if (flags & Update) {\n        if (supportsMutation) {\n          if (finishedWork.stateNode === null) {\n            throw new Error(\n              'This should have a text node initialized. This error is likely ' +\n                'caused by a bug in React. Please file an issue.',\n            );\n          }\n\n          const textInstance: TextInstance = finishedWork.stateNode;\n          const newText: string = finishedWork.memoizedProps;\n          // For hydration we reuse the update path but we treat the oldProps\n          // as the newProps. The updatePayload will contain the real change in\n          // this case.\n          const oldText: string =\n            current !== null ? current.memoizedProps : newText;\n\n          try {\n            commitTextUpdate(textInstance, oldText, newText);\n          } catch (error) {\n            captureCommitPhaseError(finishedWork, finishedWork.return, error);\n          }\n        }\n      }\n      return;\n    }\n    case HostRoot: {\n      recursivelyTraverseMutationEffects(root, finishedWork, lanes);\n      commitReconciliationEffects(finishedWork);\n\n      if (flags & Update) {\n        if (supportsMutation && supportsHydration) {\n          if (current !== null) {\n            const prevRootState: RootState = current.memoizedState;\n            if (prevRootState.isDehydrated) {\n              try {\n                commitHydratedContainer(root.containerInfo);\n              } catch (error) {\n                captureCommitPhaseError(\n                  finishedWork,\n                  finishedWork.return,\n                  error,\n                );\n              }\n            }\n          }\n        }\n        if (supportsPersistence) {\n          const containerInfo = root.containerInfo;\n          const pendingChildren = root.pendingChildren;\n          try {\n            replaceContainerChildren(containerInfo, pendingChildren);\n          } catch (error) {\n            captureCommitPhaseError(finishedWork, finishedWork.return, error);\n          }\n        }\n      }\n      return;\n    }\n    case HostPortal: {\n      recursivelyTraverseMutationEffects(root, finishedWork, lanes);\n      commitReconciliationEffects(finishedWork);\n\n      if (flags & Update) {\n        if (supportsPersistence) {\n          const portal = finishedWork.stateNode;\n          const containerInfo = portal.containerInfo;\n          const pendingChildren = portal.pendingChildren;\n          try {\n            replaceContainerChildren(containerInfo, pendingChildren);\n          } catch (error) {\n            captureCommitPhaseError(finishedWork, finishedWork.return, error);\n          }\n        }\n      }\n      return;\n    }\n    case SuspenseComponent: {\n      recursivelyTraverseMutationEffects(root, finishedWork, lanes);\n      commitReconciliationEffects(finishedWork);\n\n      const offscreenFiber: Fiber = (finishedWork.child: any);\n\n      if (offscreenFiber.flags & Visibility) {\n        const offscreenInstance: OffscreenInstance = offscreenFiber.stateNode;\n        const newState: OffscreenState | null = offscreenFiber.memoizedState;\n        const isHidden = newState !== null;\n\n        // Track the current state on the Offscreen instance so we can\n        // read it during an event\n        offscreenInstance.isHidden = isHidden;\n\n        if (isHidden) {\n          const wasHidden =\n            offscreenFiber.alternate !== null &&\n            offscreenFiber.alternate.memoizedState !== null;\n          if (!wasHidden) {\n            // TODO: Move to passive phase\n            markCommitTimeOfFallback();\n          }\n        }\n      }\n\n      if (flags & Update) {\n        try {\n          commitSuspenseCallback(finishedWork);\n        } catch (error) {\n          captureCommitPhaseError(finishedWork, finishedWork.return, error);\n        }\n        attachSuspenseRetryListeners(finishedWork);\n      }\n      return;\n    }\n    case OffscreenComponent: {\n      const wasHidden = current !== null && current.memoizedState !== null;\n\n      if (\n        // TODO: Remove this dead flag\n        enableSuspenseLayoutEffectSemantics &&\n        finishedWork.mode & ConcurrentMode\n      ) {\n        // Before committing the children, track on the stack whether this\n        // offscreen subtree was already hidden, so that we don't unmount the\n        // effects again.\n        const prevOffscreenSubtreeWasHidden = offscreenSubtreeWasHidden;\n        offscreenSubtreeWasHidden = prevOffscreenSubtreeWasHidden || wasHidden;\n        recursivelyTraverseMutationEffects(root, finishedWork, lanes);\n        offscreenSubtreeWasHidden = prevOffscreenSubtreeWasHidden;\n      } else {\n        recursivelyTraverseMutationEffects(root, finishedWork, lanes);\n      }\n\n      commitReconciliationEffects(finishedWork);\n\n      if (flags & Visibility) {\n        const offscreenInstance: OffscreenInstance = finishedWork.stateNode;\n        const newState: OffscreenState | null = finishedWork.memoizedState;\n        const isHidden = newState !== null;\n        const offscreenBoundary: Fiber = finishedWork;\n\n        // Track the current state on the Offscreen instance so we can\n        // read it during an event\n        offscreenInstance.isHidden = isHidden;\n\n        if (enableSuspenseLayoutEffectSemantics) {\n          if (isHidden) {\n            if (!wasHidden) {\n              if ((offscreenBoundary.mode & ConcurrentMode) !== NoMode) {\n                nextEffect = offscreenBoundary;\n                let offscreenChild = offscreenBoundary.child;\n                while (offscreenChild !== null) {\n                  nextEffect = offscreenChild;\n                  disappearLayoutEffects_begin(offscreenChild);\n                  offscreenChild = offscreenChild.sibling;\n                }\n              }\n            }\n          } else {\n            if (wasHidden) {\n              // TODO: Move re-appear call here for symmetry?\n            }\n          }\n        }\n\n        if (supportsMutation) {\n          // TODO: This needs to run whenever there's an insertion or update\n          // inside a hidden Offscreen tree.\n          hideOrUnhideAllChildren(offscreenBoundary, isHidden);\n        }\n      }\n      return;\n    }\n    case SuspenseListComponent: {\n      recursivelyTraverseMutationEffects(root, finishedWork, lanes);\n      commitReconciliationEffects(finishedWork);\n\n      if (flags & Update) {\n        attachSuspenseRetryListeners(finishedWork);\n      }\n      return;\n    }\n    case ScopeComponent: {\n      if (enableScopeAPI) {\n        recursivelyTraverseMutationEffects(root, finishedWork, lanes);\n        commitReconciliationEffects(finishedWork);\n\n        // TODO: This is a temporary solution that allowed us to transition away\n        // from React Flare on www.\n        if (flags & Ref) {\n          if (current !== null) {\n            safelyDetachRef(finishedWork, finishedWork.return);\n          }\n          safelyAttachRef(finishedWork, finishedWork.return);\n        }\n        if (flags & Update) {\n          const scopeInstance = finishedWork.stateNode;\n          prepareScopeUpdate(scopeInstance, finishedWork);\n        }\n      }\n      return;\n    }\n    default: {\n      recursivelyTraverseMutationEffects(root, finishedWork, lanes);\n      commitReconciliationEffects(finishedWork);\n\n      return;\n    }\n  }\n}\nfunction commitReconciliationEffects(finishedWork: Fiber) {\n  // Placement effects (insertions, reorders) can be scheduled on any fiber\n  // type. They needs to happen after the children effects have fired, but\n  // before the effects on this fiber have fired.\n  const flags = finishedWork.flags;\n  if (flags & Placement) {\n    try {\n      commitPlacement(finishedWork);\n    } catch (error) {\n      captureCommitPhaseError(finishedWork, finishedWork.return, error);\n    }\n    // Clear the \"placement\" from effect tag so that we know that this is\n    // inserted, before any life-cycles like componentDidMount gets called.\n    // TODO: findDOMNode doesn't rely on this any more but isMounted does\n    // and isMounted is deprecated anyway so we should be able to kill this.\n    finishedWork.flags &= ~Placement;\n  }\n  if (flags & Hydrating) {\n    finishedWork.flags &= ~Hydrating;\n  }\n}\n\nexport function commitLayoutEffects(\n  finishedWork: Fiber,\n  root: FiberRoot,\n  committedLanes: Lanes,\n): void {\n  inProgressLanes = committedLanes;\n  inProgressRoot = root;\n  nextEffect = finishedWork;\n\n  commitLayoutEffects_begin(finishedWork, root, committedLanes);\n\n  inProgressLanes = null;\n  inProgressRoot = null;\n}\n\nfunction commitLayoutEffects_begin(\n  subtreeRoot: Fiber,\n  root: FiberRoot,\n  committedLanes: Lanes,\n) {\n  // Suspense layout effects semantics don't change for legacy roots.\n  const isModernRoot = (subtreeRoot.mode & ConcurrentMode) !== NoMode;\n\n  while (nextEffect !== null) {\n    const fiber = nextEffect;\n    const firstChild = fiber.child;\n\n    if (\n      enableSuspenseLayoutEffectSemantics &&\n      fiber.tag === OffscreenComponent &&\n      isModernRoot\n    ) {\n      // Keep track of the current Offscreen stack's state.\n      const isHidden = fiber.memoizedState !== null;\n      const newOffscreenSubtreeIsHidden = isHidden || offscreenSubtreeIsHidden;\n      if (newOffscreenSubtreeIsHidden) {\n        // The Offscreen tree is hidden. Skip over its layout effects.\n        commitLayoutMountEffects_complete(subtreeRoot, root, committedLanes);\n        continue;\n      } else {\n        // TODO (Offscreen) Also check: subtreeFlags & LayoutMask\n        const current = fiber.alternate;\n        const wasHidden = current !== null && current.memoizedState !== null;\n        const newOffscreenSubtreeWasHidden =\n          wasHidden || offscreenSubtreeWasHidden;\n        const prevOffscreenSubtreeIsHidden = offscreenSubtreeIsHidden;\n        const prevOffscreenSubtreeWasHidden = offscreenSubtreeWasHidden;\n\n        // Traverse the Offscreen subtree with the current Offscreen as the root.\n        offscreenSubtreeIsHidden = newOffscreenSubtreeIsHidden;\n        offscreenSubtreeWasHidden = newOffscreenSubtreeWasHidden;\n\n        if (offscreenSubtreeWasHidden && !prevOffscreenSubtreeWasHidden) {\n          // This is the root of a reappearing boundary. Turn its layout effects\n          // back on.\n          nextEffect = fiber;\n          reappearLayoutEffects_begin(fiber);\n        }\n\n        let child = firstChild;\n        while (child !== null) {\n          nextEffect = child;\n          commitLayoutEffects_begin(\n            child, // New root; bubble back up to here and stop.\n            root,\n            committedLanes,\n          );\n          child = child.sibling;\n        }\n\n        // Restore Offscreen state and resume in our-progress traversal.\n        nextEffect = fiber;\n        offscreenSubtreeIsHidden = prevOffscreenSubtreeIsHidden;\n        offscreenSubtreeWasHidden = prevOffscreenSubtreeWasHidden;\n        commitLayoutMountEffects_complete(subtreeRoot, root, committedLanes);\n\n        continue;\n      }\n    }\n\n    if ((fiber.subtreeFlags & LayoutMask) !== NoFlags && firstChild !== null) {\n      firstChild.return = fiber;\n      nextEffect = firstChild;\n    } else {\n      commitLayoutMountEffects_complete(subtreeRoot, root, committedLanes);\n    }\n  }\n}\n\nfunction commitLayoutMountEffects_complete(\n  subtreeRoot: Fiber,\n  root: FiberRoot,\n  committedLanes: Lanes,\n) {\n  while (nextEffect !== null) {\n    const fiber = nextEffect;\n    if ((fiber.flags & LayoutMask) !== NoFlags) {\n      const current = fiber.alternate;\n      setCurrentDebugFiberInDEV(fiber);\n      try {\n        commitLayoutEffectOnFiber(root, current, fiber, committedLanes);\n      } catch (error) {\n        captureCommitPhaseError(fiber, fiber.return, error);\n      }\n      resetCurrentDebugFiberInDEV();\n    }\n\n    if (fiber === subtreeRoot) {\n      nextEffect = null;\n      return;\n    }\n\n    const sibling = fiber.sibling;\n    if (sibling !== null) {\n      sibling.return = fiber.return;\n      nextEffect = sibling;\n      return;\n    }\n\n    nextEffect = fiber.return;\n  }\n}\n\nfunction disappearLayoutEffects_begin(subtreeRoot: Fiber) {\n  while (nextEffect !== null) {\n    const fiber = nextEffect;\n    const firstChild = fiber.child;\n\n    // TODO (Offscreen) Check: flags & (RefStatic | LayoutStatic)\n    switch (fiber.tag) {\n      case FunctionComponent:\n      case ForwardRef:\n      case MemoComponent:\n      case SimpleMemoComponent: {\n        if (\n          enableProfilerTimer &&\n          enableProfilerCommitHooks &&\n          fiber.mode & ProfileMode\n        ) {\n          try {\n            startLayoutEffectTimer();\n            commitHookEffectListUnmount(HookLayout, fiber, fiber.return);\n          } finally {\n            recordLayoutEffectDuration(fiber);\n          }\n        } else {\n          commitHookEffectListUnmount(HookLayout, fiber, fiber.return);\n        }\n        break;\n      }\n      case ClassComponent: {\n        // TODO (Offscreen) Check: flags & RefStatic\n        safelyDetachRef(fiber, fiber.return);\n\n        const instance = fiber.stateNode;\n        if (typeof instance.componentWillUnmount === 'function') {\n          safelyCallComponentWillUnmount(fiber, fiber.return, instance);\n        }\n        break;\n      }\n      case HostComponent: {\n        safelyDetachRef(fiber, fiber.return);\n        break;\n      }\n      case OffscreenComponent: {\n        // Check if this is a\n        const isHidden = fiber.memoizedState !== null;\n        if (isHidden) {\n          // Nested Offscreen tree is already hidden. Don't disappear\n          // its effects.\n          disappearLayoutEffects_complete(subtreeRoot);\n          continue;\n        }\n        break;\n      }\n    }\n\n    // TODO (Offscreen) Check: subtreeFlags & LayoutStatic\n    if (firstChild !== null) {\n      firstChild.return = fiber;\n      nextEffect = firstChild;\n    } else {\n      disappearLayoutEffects_complete(subtreeRoot);\n    }\n  }\n}\n\nfunction disappearLayoutEffects_complete(subtreeRoot: Fiber) {\n  while (nextEffect !== null) {\n    const fiber = nextEffect;\n\n    if (fiber === subtreeRoot) {\n      nextEffect = null;\n      return;\n    }\n\n    const sibling = fiber.sibling;\n    if (sibling !== null) {\n      sibling.return = fiber.return;\n      nextEffect = sibling;\n      return;\n    }\n\n    nextEffect = fiber.return;\n  }\n}\n\nfunction reappearLayoutEffects_begin(subtreeRoot: Fiber) {\n  while (nextEffect !== null) {\n    const fiber = nextEffect;\n    const firstChild = fiber.child;\n\n    if (fiber.tag === OffscreenComponent) {\n      const isHidden = fiber.memoizedState !== null;\n      if (isHidden) {\n        // Nested Offscreen tree is still hidden. Don't re-appear its effects.\n        reappearLayoutEffects_complete(subtreeRoot);\n        continue;\n      }\n    }\n\n    // TODO (Offscreen) Check: subtreeFlags & LayoutStatic\n    if (firstChild !== null) {\n      // This node may have been reused from a previous render, so we can't\n      // assume its return pointer is correct.\n      firstChild.return = fiber;\n      nextEffect = firstChild;\n    } else {\n      reappearLayoutEffects_complete(subtreeRoot);\n    }\n  }\n}\n\nfunction reappearLayoutEffects_complete(subtreeRoot: Fiber) {\n  while (nextEffect !== null) {\n    const fiber = nextEffect;\n\n    // TODO (Offscreen) Check: flags & LayoutStatic\n    setCurrentDebugFiberInDEV(fiber);\n    try {\n      reappearLayoutEffectsOnFiber(fiber);\n    } catch (error) {\n      captureCommitPhaseError(fiber, fiber.return, error);\n    }\n    resetCurrentDebugFiberInDEV();\n\n    if (fiber === subtreeRoot) {\n      nextEffect = null;\n      return;\n    }\n\n    const sibling = fiber.sibling;\n    if (sibling !== null) {\n      // This node may have been reused from a previous render, so we can't\n      // assume its return pointer is correct.\n      sibling.return = fiber.return;\n      nextEffect = sibling;\n      return;\n    }\n\n    nextEffect = fiber.return;\n  }\n}\n\nexport function commitPassiveMountEffects(\n  root: FiberRoot,\n  finishedWork: Fiber,\n  committedLanes: Lanes,\n  committedTransitions: Array<Transition> | null,\n): void {\n  nextEffect = finishedWork;\n  commitPassiveMountEffects_begin(\n    finishedWork,\n    root,\n    committedLanes,\n    committedTransitions,\n  );\n}\n\nfunction commitPassiveMountEffects_begin(\n  subtreeRoot: Fiber,\n  root: FiberRoot,\n  committedLanes: Lanes,\n  committedTransitions: Array<Transition> | null,\n) {\n  while (nextEffect !== null) {\n    const fiber = nextEffect;\n    const firstChild = fiber.child;\n    if ((fiber.subtreeFlags & PassiveMask) !== NoFlags && firstChild !== null) {\n      firstChild.return = fiber;\n      nextEffect = firstChild;\n    } else {\n      commitPassiveMountEffects_complete(\n        subtreeRoot,\n        root,\n        committedLanes,\n        committedTransitions,\n      );\n    }\n  }\n}\n\nfunction commitPassiveMountEffects_complete(\n  subtreeRoot: Fiber,\n  root: FiberRoot,\n  committedLanes: Lanes,\n  committedTransitions: Array<Transition> | null,\n) {\n  while (nextEffect !== null) {\n    const fiber = nextEffect;\n\n    if ((fiber.flags & Passive) !== NoFlags) {\n      setCurrentDebugFiberInDEV(fiber);\n      try {\n        commitPassiveMountOnFiber(\n          root,\n          fiber,\n          committedLanes,\n          committedTransitions,\n        );\n      } catch (error) {\n        captureCommitPhaseError(fiber, fiber.return, error);\n      }\n      resetCurrentDebugFiberInDEV();\n    }\n\n    if (fiber === subtreeRoot) {\n      nextEffect = null;\n      return;\n    }\n\n    const sibling = fiber.sibling;\n    if (sibling !== null) {\n      sibling.return = fiber.return;\n      nextEffect = sibling;\n      return;\n    }\n\n    nextEffect = fiber.return;\n  }\n}\n\nfunction commitPassiveMountOnFiber(\n  finishedRoot: FiberRoot,\n  finishedWork: Fiber,\n  committedLanes: Lanes,\n  committedTransitions: Array<Transition> | null,\n): void {\n  switch (finishedWork.tag) {\n    case FunctionComponent:\n    case ForwardRef:\n    case SimpleMemoComponent: {\n      if (\n        enableProfilerTimer &&\n        enableProfilerCommitHooks &&\n        finishedWork.mode & ProfileMode\n      ) {\n        startPassiveEffectTimer();\n        try {\n          commitHookEffectListMount(HookPassive | HookHasEffect, finishedWork);\n        } finally {\n          recordPassiveEffectDuration(finishedWork);\n        }\n      } else {\n        commitHookEffectListMount(HookPassive | HookHasEffect, finishedWork);\n      }\n      break;\n    }\n    case HostRoot: {\n      if (enableCache) {\n        let previousCache: Cache | null = null;\n        if (finishedWork.alternate !== null) {\n          previousCache = finishedWork.alternate.memoizedState.cache;\n        }\n        const nextCache = finishedWork.memoizedState.cache;\n        // Retain/release the root cache.\n        // Note that on initial mount, previousCache and nextCache will be the same\n        // and this retain won't occur. To counter this, we instead retain the HostRoot's\n        // initial cache when creating the root itself (see createFiberRoot() in\n        // ReactFiberRoot.js). Subsequent updates that change the cache are reflected\n        // here, such that previous/next caches are retained correctly.\n        if (nextCache !== previousCache) {\n          retainCache(nextCache);\n          if (previousCache != null) {\n            releaseCache(previousCache);\n          }\n        }\n      }\n\n      if (enableTransitionTracing) {\n        // Get the transitions that were initiatized during the render\n        // and add a start transition callback for each of them\n        const state = finishedWork.memoizedState;\n        // TODO Since it's a mutable field, this should live on the FiberRoot\n        if (state.transitions === null) {\n          state.transitions = new Set([]);\n        }\n        const pendingTransitions = state.transitions;\n        const pendingSuspenseBoundaries = state.pendingSuspenseBoundaries;\n\n        // Initial render\n        if (committedTransitions !== null) {\n          committedTransitions.forEach(transition => {\n            addTransitionStartCallbackToPendingTransition({\n              transitionName: transition.name,\n              startTime: transition.startTime,\n            });\n            pendingTransitions.add(transition);\n          });\n\n          if (\n            pendingSuspenseBoundaries === null ||\n            pendingSuspenseBoundaries.size === 0\n          ) {\n            pendingTransitions.forEach(transition => {\n              addTransitionCompleteCallbackToPendingTransition({\n                transitionName: transition.name,\n                startTime: transition.startTime,\n              });\n            });\n          }\n\n          clearTransitionsForLanes(finishedRoot, committedLanes);\n        }\n\n        // If there are no more pending suspense boundaries we\n        // clear the transitions because they are all complete.\n        if (\n          pendingSuspenseBoundaries === null ||\n          pendingSuspenseBoundaries.size === 0\n        ) {\n          state.transitions = null;\n        }\n      }\n      break;\n    }\n    case LegacyHiddenComponent:\n    case OffscreenComponent: {\n      if (enableCache) {\n        let previousCache: Cache | null = null;\n        if (\n          finishedWork.alternate !== null &&\n          finishedWork.alternate.memoizedState !== null &&\n          finishedWork.alternate.memoizedState.cachePool !== null\n        ) {\n          previousCache = finishedWork.alternate.memoizedState.cachePool.pool;\n        }\n        let nextCache: Cache | null = null;\n        if (\n          finishedWork.memoizedState !== null &&\n          finishedWork.memoizedState.cachePool !== null\n        ) {\n          nextCache = finishedWork.memoizedState.cachePool.pool;\n        }\n        // Retain/release the cache used for pending (suspended) nodes.\n        // Note that this is only reached in the non-suspended/visible case:\n        // when the content is suspended/hidden, the retain/release occurs\n        // via the parent Suspense component (see case above).\n        if (nextCache !== previousCache) {\n          if (nextCache != null) {\n            retainCache(nextCache);\n          }\n          if (previousCache != null) {\n            releaseCache(previousCache);\n          }\n        }\n      }\n\n      if (enableTransitionTracing) {\n        const isFallback = finishedWork.memoizedState;\n        const queue = (finishedWork.updateQueue: any);\n        const rootMemoizedState = finishedRoot.current.memoizedState;\n\n        if (queue !== null) {\n          // We have one instance of the pendingSuspenseBoundaries map.\n          // We only need one because we update it during the commit phase.\n          // We instantiate a new Map if we haven't already\n          if (rootMemoizedState.pendingSuspenseBoundaries === null) {\n            rootMemoizedState.pendingSuspenseBoundaries = new Map();\n          }\n\n          if (isFallback) {\n            const transitions = queue.transitions;\n            let prevTransitions = finishedWork.memoizedState.transitions;\n            // Add all the transitions saved in the update queue during\n            // the render phase (ie the transitions associated with this boundary)\n            // into the transitions set.\n            if (transitions !== null) {\n              if (prevTransitions === null) {\n                // We only have one instance of the transitions set\n                // because we update it only during the commit phase. We\n                // will create the set on a as needed basis in the commit phase\n                finishedWork.memoizedState.transitions = prevTransitions = new Set();\n              }\n\n              transitions.forEach(transition => {\n                prevTransitions.add(transition);\n              });\n            }\n          }\n        }\n\n        commitTransitionProgress(finishedRoot, finishedWork);\n\n        finishedWork.updateQueue = null;\n      }\n\n      break;\n    }\n    case CacheComponent: {\n      if (enableCache) {\n        let previousCache: Cache | null = null;\n        if (finishedWork.alternate !== null) {\n          previousCache = finishedWork.alternate.memoizedState.cache;\n        }\n        const nextCache = finishedWork.memoizedState.cache;\n        // Retain/release the cache. In theory the cache component\n        // could be \"borrowing\" a cache instance owned by some parent,\n        // in which case we could avoid retaining/releasing. But it\n        // is non-trivial to determine when that is the case, so we\n        // always retain/release.\n        if (nextCache !== previousCache) {\n          retainCache(nextCache);\n          if (previousCache != null) {\n            releaseCache(previousCache);\n          }\n        }\n      }\n      break;\n    }\n  }\n}\n\nexport function commitPassiveUnmountEffects(firstChild: Fiber): void {\n  nextEffect = firstChild;\n  commitPassiveUnmountEffects_begin();\n}\n\nfunction commitPassiveUnmountEffects_begin() {\n  while (nextEffect !== null) {\n    const fiber = nextEffect;\n    const child = fiber.child;\n\n    if ((nextEffect.flags & ChildDeletion) !== NoFlags) {\n      const deletions = fiber.deletions;\n      if (deletions !== null) {\n        for (let i = 0; i < deletions.length; i++) {\n          const fiberToDelete = deletions[i];\n          nextEffect = fiberToDelete;\n          commitPassiveUnmountEffectsInsideOfDeletedTree_begin(\n            fiberToDelete,\n            fiber,\n          );\n        }\n\n        if (deletedTreeCleanUpLevel >= 1) {\n          // A fiber was deleted from this parent fiber, but it's still part of\n          // the previous (alternate) parent fiber's list of children. Because\n          // children are a linked list, an earlier sibling that's still alive\n          // will be connected to the deleted fiber via its `alternate`:\n          //\n          //   live fiber\n          //   --alternate--> previous live fiber\n          //   --sibling--> deleted fiber\n          //\n          // We can't disconnect `alternate` on nodes that haven't been deleted\n          // yet, but we can disconnect the `sibling` and `child` pointers.\n          const previousFiber = fiber.alternate;\n          if (previousFiber !== null) {\n            let detachedChild = previousFiber.child;\n            if (detachedChild !== null) {\n              previousFiber.child = null;\n              do {\n                const detachedSibling = detachedChild.sibling;\n                detachedChild.sibling = null;\n                detachedChild = detachedSibling;\n              } while (detachedChild !== null);\n            }\n          }\n        }\n\n        nextEffect = fiber;\n      }\n    }\n\n    if ((fiber.subtreeFlags & PassiveMask) !== NoFlags && child !== null) {\n      child.return = fiber;\n      nextEffect = child;\n    } else {\n      commitPassiveUnmountEffects_complete();\n    }\n  }\n}\n\nfunction commitPassiveUnmountEffects_complete() {\n  while (nextEffect !== null) {\n    const fiber = nextEffect;\n    if ((fiber.flags & Passive) !== NoFlags) {\n      setCurrentDebugFiberInDEV(fiber);\n      commitPassiveUnmountOnFiber(fiber);\n      resetCurrentDebugFiberInDEV();\n    }\n\n    const sibling = fiber.sibling;\n    if (sibling !== null) {\n      sibling.return = fiber.return;\n      nextEffect = sibling;\n      return;\n    }\n\n    nextEffect = fiber.return;\n  }\n}\n\nfunction commitPassiveUnmountOnFiber(finishedWork: Fiber): void {\n  switch (finishedWork.tag) {\n    case FunctionComponent:\n    case ForwardRef:\n    case SimpleMemoComponent: {\n      if (\n        enableProfilerTimer &&\n        enableProfilerCommitHooks &&\n        finishedWork.mode & ProfileMode\n      ) {\n        startPassiveEffectTimer();\n        commitHookEffectListUnmount(\n          HookPassive | HookHasEffect,\n          finishedWork,\n          finishedWork.return,\n        );\n        recordPassiveEffectDuration(finishedWork);\n      } else {\n        commitHookEffectListUnmount(\n          HookPassive | HookHasEffect,\n          finishedWork,\n          finishedWork.return,\n        );\n      }\n      break;\n    }\n  }\n}\n\nfunction commitPassiveUnmountEffectsInsideOfDeletedTree_begin(\n  deletedSubtreeRoot: Fiber,\n  nearestMountedAncestor: Fiber | null,\n) {\n  while (nextEffect !== null) {\n    const fiber = nextEffect;\n\n    // Deletion effects fire in parent -> child order\n    // TODO: Check if fiber has a PassiveStatic flag\n    setCurrentDebugFiberInDEV(fiber);\n    commitPassiveUnmountInsideDeletedTreeOnFiber(fiber, nearestMountedAncestor);\n    resetCurrentDebugFiberInDEV();\n\n    const child = fiber.child;\n    // TODO: Only traverse subtree if it has a PassiveStatic flag. (But, if we\n    // do this, still need to handle `deletedTreeCleanUpLevel` correctly.)\n    if (child !== null) {\n      child.return = fiber;\n      nextEffect = child;\n    } else {\n      commitPassiveUnmountEffectsInsideOfDeletedTree_complete(\n        deletedSubtreeRoot,\n      );\n    }\n  }\n}\n\nfunction commitPassiveUnmountEffectsInsideOfDeletedTree_complete(\n  deletedSubtreeRoot: Fiber,\n) {\n  while (nextEffect !== null) {\n    const fiber = nextEffect;\n    const sibling = fiber.sibling;\n    const returnFiber = fiber.return;\n\n    if (deletedTreeCleanUpLevel >= 2) {\n      // Recursively traverse the entire deleted tree and clean up fiber fields.\n      // This is more aggressive than ideal, and the long term goal is to only\n      // have to detach the deleted tree at the root.\n      detachFiberAfterEffects(fiber);\n      if (fiber === deletedSubtreeRoot) {\n        nextEffect = null;\n        return;\n      }\n    } else {\n      // This is the default branch (level 0). We do not recursively clear all\n      // the fiber fields. Only the root of the deleted subtree.\n      if (fiber === deletedSubtreeRoot) {\n        detachFiberAfterEffects(fiber);\n        nextEffect = null;\n        return;\n      }\n    }\n\n    if (sibling !== null) {\n      sibling.return = returnFiber;\n      nextEffect = sibling;\n      return;\n    }\n\n    nextEffect = returnFiber;\n  }\n}\n\nfunction commitPassiveUnmountInsideDeletedTreeOnFiber(\n  current: Fiber,\n  nearestMountedAncestor: Fiber | null,\n): void {\n  switch (current.tag) {\n    case FunctionComponent:\n    case ForwardRef:\n    case SimpleMemoComponent: {\n      if (\n        enableProfilerTimer &&\n        enableProfilerCommitHooks &&\n        current.mode & ProfileMode\n      ) {\n        startPassiveEffectTimer();\n        commitHookEffectListUnmount(\n          HookPassive,\n          current,\n          nearestMountedAncestor,\n        );\n        recordPassiveEffectDuration(current);\n      } else {\n        commitHookEffectListUnmount(\n          HookPassive,\n          current,\n          nearestMountedAncestor,\n        );\n      }\n      break;\n    }\n    // TODO: run passive unmount effects when unmounting a root.\n    // Because passive unmount effects are not currently run,\n    // the cache instance owned by the root will never be freed.\n    // When effects are run, the cache should be freed here:\n    // case HostRoot: {\n    //   if (enableCache) {\n    //     const cache = current.memoizedState.cache;\n    //     releaseCache(cache);\n    //   }\n    //   break;\n    // }\n    case LegacyHiddenComponent:\n    case OffscreenComponent: {\n      if (enableCache) {\n        if (\n          current.memoizedState !== null &&\n          current.memoizedState.cachePool !== null\n        ) {\n          const cache: Cache = current.memoizedState.cachePool.pool;\n          // Retain/release the cache used for pending (suspended) nodes.\n          // Note that this is only reached in the non-suspended/visible case:\n          // when the content is suspended/hidden, the retain/release occurs\n          // via the parent Suspense component (see case above).\n          if (cache != null) {\n            retainCache(cache);\n          }\n        }\n      }\n      break;\n    }\n    case CacheComponent: {\n      if (enableCache) {\n        const cache = current.memoizedState.cache;\n        releaseCache(cache);\n      }\n      break;\n    }\n  }\n}\n\n// TODO: Reuse reappearLayoutEffects traversal here?\nfunction invokeLayoutEffectMountInDEV(fiber: Fiber): void {\n  if (__DEV__ && enableStrictEffects) {\n    // We don't need to re-check StrictEffectsMode here.\n    // This function is only called if that check has already passed.\n    switch (fiber.tag) {\n      case FunctionComponent:\n      case ForwardRef:\n      case SimpleMemoComponent: {\n        try {\n          commitHookEffectListMount(HookLayout | HookHasEffect, fiber);\n        } catch (error) {\n          captureCommitPhaseError(fiber, fiber.return, error);\n        }\n        break;\n      }\n      case ClassComponent: {\n        const instance = fiber.stateNode;\n        try {\n          instance.componentDidMount();\n        } catch (error) {\n          captureCommitPhaseError(fiber, fiber.return, error);\n        }\n        break;\n      }\n    }\n  }\n}\n\nfunction invokePassiveEffectMountInDEV(fiber: Fiber): void {\n  if (__DEV__ && enableStrictEffects) {\n    // We don't need to re-check StrictEffectsMode here.\n    // This function is only called if that check has already passed.\n    switch (fiber.tag) {\n      case FunctionComponent:\n      case ForwardRef:\n      case SimpleMemoComponent: {\n        try {\n          commitHookEffectListMount(HookPassive | HookHasEffect, fiber);\n        } catch (error) {\n          captureCommitPhaseError(fiber, fiber.return, error);\n        }\n        break;\n      }\n    }\n  }\n}\n\nfunction invokeLayoutEffectUnmountInDEV(fiber: Fiber): void {\n  if (__DEV__ && enableStrictEffects) {\n    // We don't need to re-check StrictEffectsMode here.\n    // This function is only called if that check has already passed.\n    switch (fiber.tag) {\n      case FunctionComponent:\n      case ForwardRef:\n      case SimpleMemoComponent: {\n        try {\n          commitHookEffectListUnmount(\n            HookLayout | HookHasEffect,\n            fiber,\n            fiber.return,\n          );\n        } catch (error) {\n          captureCommitPhaseError(fiber, fiber.return, error);\n        }\n        break;\n      }\n      case ClassComponent: {\n        const instance = fiber.stateNode;\n        if (typeof instance.componentWillUnmount === 'function') {\n          safelyCallComponentWillUnmount(fiber, fiber.return, instance);\n        }\n        break;\n      }\n    }\n  }\n}\n\nfunction invokePassiveEffectUnmountInDEV(fiber: Fiber): void {\n  if (__DEV__ && enableStrictEffects) {\n    // We don't need to re-check StrictEffectsMode here.\n    // This function is only called if that check has already passed.\n    switch (fiber.tag) {\n      case FunctionComponent:\n      case ForwardRef:\n      case SimpleMemoComponent: {\n        try {\n          commitHookEffectListUnmount(\n            HookPassive | HookHasEffect,\n            fiber,\n            fiber.return,\n          );\n        } catch (error) {\n          captureCommitPhaseError(fiber, fiber.return, error);\n        }\n      }\n    }\n  }\n}\n\nexport {\n  commitPlacement,\n  commitAttachRef,\n  commitDetachRef,\n  invokeLayoutEffectMountInDEV,\n  invokeLayoutEffectUnmountInDEV,\n  invokePassiveEffectMountInDEV,\n  invokePassiveEffectUnmountInDEV,\n};\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from 'react-reconciler/src/ReactInternalTypes';\nimport type {Instance} from './ReactFiberHostConfig';\n\nimport {HostComponent, HostText} from 'react-reconciler/src/ReactWorkTags';\nimport getComponentNameFromType from 'shared/getComponentNameFromType';\nimport {\n  findFiberRoot,\n  getBoundingRect,\n  getInstanceFromNode,\n  getTextContent,\n  isHiddenSubtree,\n  matchAccessibilityRole,\n  setFocusIfFocusable,\n  setupIntersectionObserver,\n  supportsTestSelectors,\n} from './ReactFiberHostConfig';\n\nlet COMPONENT_TYPE = 0b000;\nlet HAS_PSEUDO_CLASS_TYPE = 0b001;\nlet ROLE_TYPE = 0b010;\nlet TEST_NAME_TYPE = 0b011;\nlet TEXT_TYPE = 0b100;\n\nif (typeof Symbol === 'function' && Symbol.for) {\n  const symbolFor = Symbol.for;\n  COMPONENT_TYPE = symbolFor('selector.component');\n  HAS_PSEUDO_CLASS_TYPE = symbolFor('selector.has_pseudo_class');\n  ROLE_TYPE = symbolFor('selector.role');\n  TEST_NAME_TYPE = symbolFor('selector.test_id');\n  TEXT_TYPE = symbolFor('selector.text');\n}\n\ntype Type = Symbol | number;\n\ntype ComponentSelector = {|\n  $$typeof: Type,\n  value: React$AbstractComponent<empty, mixed>,\n|};\n\ntype HasPseudoClassSelector = {|\n  $$typeof: Type,\n  value: Array<Selector>,\n|};\n\ntype RoleSelector = {|\n  $$typeof: Type,\n  value: string,\n|};\n\ntype TextSelector = {|\n  $$typeof: Type,\n  value: string,\n|};\n\ntype TestNameSelector = {|\n  $$typeof: Type,\n  value: string,\n|};\n\ntype Selector =\n  | ComponentSelector\n  | HasPseudoClassSelector\n  | RoleSelector\n  | TextSelector\n  | TestNameSelector;\n\nexport function createComponentSelector(\n  component: React$AbstractComponent<empty, mixed>,\n): ComponentSelector {\n  return {\n    $$typeof: COMPONENT_TYPE,\n    value: component,\n  };\n}\n\nexport function createHasPseudoClassSelector(\n  selectors: Array<Selector>,\n): HasPseudoClassSelector {\n  return {\n    $$typeof: HAS_PSEUDO_CLASS_TYPE,\n    value: selectors,\n  };\n}\n\nexport function createRoleSelector(role: string): RoleSelector {\n  return {\n    $$typeof: ROLE_TYPE,\n    value: role,\n  };\n}\n\nexport function createTextSelector(text: string): TextSelector {\n  return {\n    $$typeof: TEXT_TYPE,\n    value: text,\n  };\n}\n\nexport function createTestNameSelector(id: string): TestNameSelector {\n  return {\n    $$typeof: TEST_NAME_TYPE,\n    value: id,\n  };\n}\n\nfunction findFiberRootForHostRoot(hostRoot: Instance): Fiber {\n  const maybeFiber = getInstanceFromNode((hostRoot: any));\n  if (maybeFiber != null) {\n    if (typeof maybeFiber.memoizedProps['data-testname'] !== 'string') {\n      throw new Error(\n        'Invalid host root specified. Should be either a React container or a node with a testname attribute.',\n      );\n    }\n\n    return ((maybeFiber: any): Fiber);\n  } else {\n    const fiberRoot = findFiberRoot(hostRoot);\n\n    if (fiberRoot === null) {\n      throw new Error(\n        'Could not find React container within specified host subtree.',\n      );\n    }\n\n    // The Flow type for FiberRoot is a little funky.\n    // createFiberRoot() cheats this by treating the root as :any and adding stateNode lazily.\n    return ((fiberRoot: any).stateNode.current: Fiber);\n  }\n}\n\nfunction matchSelector(fiber: Fiber, selector: Selector): boolean {\n  switch (selector.$$typeof) {\n    case COMPONENT_TYPE:\n      if (fiber.type === selector.value) {\n        return true;\n      }\n      break;\n    case HAS_PSEUDO_CLASS_TYPE:\n      return hasMatchingPaths(\n        fiber,\n        ((selector: any): HasPseudoClassSelector).value,\n      );\n    case ROLE_TYPE:\n      if (fiber.tag === HostComponent) {\n        const node = fiber.stateNode;\n        if (\n          matchAccessibilityRole(node, ((selector: any): RoleSelector).value)\n        ) {\n          return true;\n        }\n      }\n      break;\n    case TEXT_TYPE:\n      if (fiber.tag === HostComponent || fiber.tag === HostText) {\n        const textContent = getTextContent(fiber);\n        if (\n          textContent !== null &&\n          textContent.indexOf(((selector: any): TextSelector).value) >= 0\n        ) {\n          return true;\n        }\n      }\n      break;\n    case TEST_NAME_TYPE:\n      if (fiber.tag === HostComponent) {\n        const dataTestID = fiber.memoizedProps['data-testname'];\n        if (\n          typeof dataTestID === 'string' &&\n          dataTestID.toLowerCase() ===\n            ((selector: any): TestNameSelector).value.toLowerCase()\n        ) {\n          return true;\n        }\n      }\n      break;\n    default:\n      throw new Error('Invalid selector type specified.');\n  }\n\n  return false;\n}\n\nfunction selectorToString(selector: Selector): string | null {\n  switch (selector.$$typeof) {\n    case COMPONENT_TYPE:\n      const displayName = getComponentNameFromType(selector.value) || 'Unknown';\n      return `<${displayName}>`;\n    case HAS_PSEUDO_CLASS_TYPE:\n      return `:has(${selectorToString(selector) || ''})`;\n    case ROLE_TYPE:\n      return `[role=\"${((selector: any): RoleSelector).value}\"]`;\n    case TEXT_TYPE:\n      return `\"${((selector: any): TextSelector).value}\"`;\n    case TEST_NAME_TYPE:\n      return `[data-testname=\"${((selector: any): TestNameSelector).value}\"]`;\n    default:\n      throw new Error('Invalid selector type specified.');\n  }\n}\n\nfunction findPaths(root: Fiber, selectors: Array<Selector>): Array<Fiber> {\n  const matchingFibers: Array<Fiber> = [];\n\n  const stack = [root, 0];\n  let index = 0;\n  while (index < stack.length) {\n    const fiber = ((stack[index++]: any): Fiber);\n    let selectorIndex = ((stack[index++]: any): number);\n    let selector = selectors[selectorIndex];\n\n    if (fiber.tag === HostComponent && isHiddenSubtree(fiber)) {\n      continue;\n    } else {\n      while (selector != null && matchSelector(fiber, selector)) {\n        selectorIndex++;\n        selector = selectors[selectorIndex];\n      }\n    }\n\n    if (selectorIndex === selectors.length) {\n      matchingFibers.push(fiber);\n    } else {\n      let child = fiber.child;\n      while (child !== null) {\n        stack.push(child, selectorIndex);\n        child = child.sibling;\n      }\n    }\n  }\n\n  return matchingFibers;\n}\n\n// Same as findPaths but with eager bailout on first match\nfunction hasMatchingPaths(root: Fiber, selectors: Array<Selector>): boolean {\n  const stack = [root, 0];\n  let index = 0;\n  while (index < stack.length) {\n    const fiber = ((stack[index++]: any): Fiber);\n    let selectorIndex = ((stack[index++]: any): number);\n    let selector = selectors[selectorIndex];\n\n    if (fiber.tag === HostComponent && isHiddenSubtree(fiber)) {\n      continue;\n    } else {\n      while (selector != null && matchSelector(fiber, selector)) {\n        selectorIndex++;\n        selector = selectors[selectorIndex];\n      }\n    }\n\n    if (selectorIndex === selectors.length) {\n      return true;\n    } else {\n      let child = fiber.child;\n      while (child !== null) {\n        stack.push(child, selectorIndex);\n        child = child.sibling;\n      }\n    }\n  }\n\n  return false;\n}\n\nexport function findAllNodes(\n  hostRoot: Instance,\n  selectors: Array<Selector>,\n): Array<Instance> {\n  if (!supportsTestSelectors) {\n    throw new Error('Test selector API is not supported by this renderer.');\n  }\n\n  const root = findFiberRootForHostRoot(hostRoot);\n  const matchingFibers = findPaths(root, selectors);\n\n  const instanceRoots: Array<Instance> = [];\n\n  const stack = Array.from(matchingFibers);\n  let index = 0;\n  while (index < stack.length) {\n    const node = ((stack[index++]: any): Fiber);\n    if (node.tag === HostComponent) {\n      if (isHiddenSubtree(node)) {\n        continue;\n      }\n      instanceRoots.push(node.stateNode);\n    } else {\n      let child = node.child;\n      while (child !== null) {\n        stack.push(child);\n        child = child.sibling;\n      }\n    }\n  }\n\n  return instanceRoots;\n}\n\nexport function getFindAllNodesFailureDescription(\n  hostRoot: Instance,\n  selectors: Array<Selector>,\n): string | null {\n  if (!supportsTestSelectors) {\n    throw new Error('Test selector API is not supported by this renderer.');\n  }\n\n  const root = findFiberRootForHostRoot(hostRoot);\n\n  let maxSelectorIndex: number = 0;\n  const matchedNames = [];\n\n  // The logic of this loop should be kept in sync with findPaths()\n  const stack = [root, 0];\n  let index = 0;\n  while (index < stack.length) {\n    const fiber = ((stack[index++]: any): Fiber);\n    let selectorIndex = ((stack[index++]: any): number);\n    const selector = selectors[selectorIndex];\n\n    if (fiber.tag === HostComponent && isHiddenSubtree(fiber)) {\n      continue;\n    } else if (matchSelector(fiber, selector)) {\n      matchedNames.push(selectorToString(selector));\n      selectorIndex++;\n\n      if (selectorIndex > maxSelectorIndex) {\n        maxSelectorIndex = selectorIndex;\n      }\n    }\n\n    if (selectorIndex < selectors.length) {\n      let child = fiber.child;\n      while (child !== null) {\n        stack.push(child, selectorIndex);\n        child = child.sibling;\n      }\n    }\n  }\n\n  if (maxSelectorIndex < selectors.length) {\n    const unmatchedNames = [];\n    for (let i = maxSelectorIndex; i < selectors.length; i++) {\n      unmatchedNames.push(selectorToString(selectors[i]));\n    }\n\n    return (\n      'findAllNodes was able to match part of the selector:\\n' +\n      `  ${matchedNames.join(' > ')}\\n\\n` +\n      'No matching component was found for:\\n' +\n      `  ${unmatchedNames.join(' > ')}`\n    );\n  }\n\n  return null;\n}\n\nexport type BoundingRect = {|\n  x: number,\n  y: number,\n  width: number,\n  height: number,\n|};\n\nexport function findBoundingRects(\n  hostRoot: Instance,\n  selectors: Array<Selector>,\n): Array<BoundingRect> {\n  if (!supportsTestSelectors) {\n    throw new Error('Test selector API is not supported by this renderer.');\n  }\n\n  const instanceRoots = findAllNodes(hostRoot, selectors);\n\n  const boundingRects: Array<BoundingRect> = [];\n  for (let i = 0; i < instanceRoots.length; i++) {\n    boundingRects.push(getBoundingRect(instanceRoots[i]));\n  }\n\n  for (let i = boundingRects.length - 1; i > 0; i--) {\n    const targetRect = boundingRects[i];\n    const targetLeft = targetRect.x;\n    const targetRight = targetLeft + targetRect.width;\n    const targetTop = targetRect.y;\n    const targetBottom = targetTop + targetRect.height;\n\n    for (let j = i - 1; j >= 0; j--) {\n      if (i !== j) {\n        const otherRect = boundingRects[j];\n        const otherLeft = otherRect.x;\n        const otherRight = otherLeft + otherRect.width;\n        const otherTop = otherRect.y;\n        const otherBottom = otherTop + otherRect.height;\n\n        // Merging all rects to the minimums set would be complicated,\n        // but we can handle the most common cases:\n        // 1. completely overlapping rects\n        // 2. adjacent rects that are the same width or height (e.g. items in a list)\n        //\n        // Even given the above constraints,\n        // we still won't end up with the fewest possible rects without doing multiple passes,\n        // but it's good enough for this purpose.\n\n        if (\n          targetLeft >= otherLeft &&\n          targetTop >= otherTop &&\n          targetRight <= otherRight &&\n          targetBottom <= otherBottom\n        ) {\n          // Complete overlapping rects; remove the inner one.\n          boundingRects.splice(i, 1);\n          break;\n        } else if (\n          targetLeft === otherLeft &&\n          targetRect.width === otherRect.width &&\n          !(otherBottom < targetTop) &&\n          !(otherTop > targetBottom)\n        ) {\n          // Adjacent vertical rects; merge them.\n          if (otherTop > targetTop) {\n            otherRect.height += otherTop - targetTop;\n            otherRect.y = targetTop;\n          }\n          if (otherBottom < targetBottom) {\n            otherRect.height = targetBottom - otherTop;\n          }\n\n          boundingRects.splice(i, 1);\n          break;\n        } else if (\n          targetTop === otherTop &&\n          targetRect.height === otherRect.height &&\n          !(otherRight < targetLeft) &&\n          !(otherLeft > targetRight)\n        ) {\n          // Adjacent horizontal rects; merge them.\n          if (otherLeft > targetLeft) {\n            otherRect.width += otherLeft - targetLeft;\n            otherRect.x = targetLeft;\n          }\n          if (otherRight < targetRight) {\n            otherRect.width = targetRight - otherLeft;\n          }\n\n          boundingRects.splice(i, 1);\n          break;\n        }\n      }\n    }\n  }\n\n  return boundingRects;\n}\n\nexport function focusWithin(\n  hostRoot: Instance,\n  selectors: Array<Selector>,\n): boolean {\n  if (!supportsTestSelectors) {\n    throw new Error('Test selector API is not supported by this renderer.');\n  }\n\n  const root = findFiberRootForHostRoot(hostRoot);\n  const matchingFibers = findPaths(root, selectors);\n\n  const stack = Array.from(matchingFibers);\n  let index = 0;\n  while (index < stack.length) {\n    const fiber = ((stack[index++]: any): Fiber);\n    if (isHiddenSubtree(fiber)) {\n      continue;\n    }\n    if (fiber.tag === HostComponent) {\n      const node = fiber.stateNode;\n      if (setFocusIfFocusable(node)) {\n        return true;\n      }\n    }\n    let child = fiber.child;\n    while (child !== null) {\n      stack.push(child);\n      child = child.sibling;\n    }\n  }\n\n  return false;\n}\n\nconst commitHooks: Array<Function> = [];\n\nexport function onCommitRoot(): void {\n  if (supportsTestSelectors) {\n    commitHooks.forEach(commitHook => commitHook());\n  }\n}\n\nexport type IntersectionObserverOptions = Object;\n\nexport type ObserveVisibleRectsCallback = (\n  intersections: Array<{ratio: number, rect: BoundingRect}>,\n) => void;\n\nexport function observeVisibleRects(\n  hostRoot: Instance,\n  selectors: Array<Selector>,\n  callback: (intersections: Array<{ratio: number, rect: BoundingRect}>) => void,\n  options?: IntersectionObserverOptions,\n): {|disconnect: () => void|} {\n  if (!supportsTestSelectors) {\n    throw new Error('Test selector API is not supported by this renderer.');\n  }\n\n  const instanceRoots = findAllNodes(hostRoot, selectors);\n\n  const {disconnect, observe, unobserve} = setupIntersectionObserver(\n    instanceRoots,\n    callback,\n    options,\n  );\n\n  // When React mutates the host environment, we may need to change what we're listening to.\n  const commitHook = () => {\n    const nextInstanceRoots = findAllNodes(hostRoot, selectors);\n\n    instanceRoots.forEach(target => {\n      if (nextInstanceRoots.indexOf(target) < 0) {\n        unobserve(target);\n      }\n    });\n\n    nextInstanceRoots.forEach(target => {\n      if (instanceRoots.indexOf(target) < 0) {\n        observe(target);\n      }\n    });\n  };\n\n  commitHooks.push(commitHook);\n\n  return {\n    disconnect: () => {\n      // Stop listening for React mutations:\n      const index = commitHooks.indexOf(commitHook);\n      if (index >= 0) {\n        commitHooks.splice(index, 1);\n      }\n\n      // Disconnect the host observer:\n      disconnect();\n    },\n  };\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactFiber.old';\n\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\n\nimport {warnsIfNotActing} from './ReactFiberHostConfig';\n\nconst {ReactCurrentActQueue} = ReactSharedInternals;\n\nexport function isLegacyActEnvironment(fiber: Fiber) {\n  if (__DEV__) {\n    // Legacy mode. We preserve the behavior of React 17's act. It assumes an\n    // act environment whenever `jest` is defined, but you can still turn off\n    // spurious warnings by setting IS_REACT_ACT_ENVIRONMENT explicitly\n    // to false.\n\n    const isReactActEnvironmentGlobal =\n      // $FlowExpectedError – Flow doesn't know about IS_REACT_ACT_ENVIRONMENT global\n      typeof IS_REACT_ACT_ENVIRONMENT !== 'undefined'\n        ? IS_REACT_ACT_ENVIRONMENT\n        : undefined;\n\n    // $FlowExpectedError - Flow doesn't know about jest\n    const jestIsDefined = typeof jest !== 'undefined';\n    return (\n      warnsIfNotActing && jestIsDefined && isReactActEnvironmentGlobal !== false\n    );\n  }\n  return false;\n}\n\nexport function isConcurrentActEnvironment() {\n  if (__DEV__) {\n    const isReactActEnvironmentGlobal =\n      // $FlowExpectedError – Flow doesn't know about IS_REACT_ACT_ENVIRONMENT global\n      typeof IS_REACT_ACT_ENVIRONMENT !== 'undefined'\n        ? IS_REACT_ACT_ENVIRONMENT\n        : undefined;\n\n    if (!isReactActEnvironmentGlobal && ReactCurrentActQueue.current !== null) {\n      // TODO: Include link to relevant documentation page.\n      console.error(\n        'The current testing environment is not configured to support ' +\n          'act(...)',\n      );\n    }\n    return isReactActEnvironmentGlobal;\n  }\n  return false;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Wakeable} from 'shared/ReactTypes';\nimport type {Fiber, FiberRoot} from './ReactInternalTypes';\nimport type {Lanes, Lane} from './ReactFiberLane.old';\nimport type {SuspenseState} from './ReactFiberSuspenseComponent.old';\nimport type {StackCursor} from './ReactFiberStack.old';\nimport type {Flags} from './ReactFiberFlags';\nimport type {FunctionComponentUpdateQueue} from './ReactFiberHooks.old';\nimport type {EventPriority} from './ReactEventPriorities.old';\nimport type {\n  PendingTransitionCallbacks,\n  TransitionObject,\n  Transition,\n} from './ReactFiberTracingMarkerComponent.old';\n\nimport {\n  warnAboutDeprecatedLifecycles,\n  replayFailedUnitOfWorkWithInvokeGuardedCallback,\n  enableCreateEventHandleAPI,\n  enableProfilerTimer,\n  enableProfilerCommitHooks,\n  enableProfilerNestedUpdatePhase,\n  enableProfilerNestedUpdateScheduledHook,\n  deferRenderPhaseUpdateToNextBatch,\n  enableDebugTracing,\n  enableSchedulingProfiler,\n  disableSchedulerTimeoutInWorkLoop,\n  enableStrictEffects,\n  skipUnmountedBoundaries,\n  enableUpdaterTracking,\n  enableCache,\n  enableTransitionTracing,\n} from 'shared/ReactFeatureFlags';\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\nimport is from 'shared/objectIs';\n\nimport {\n  // Aliased because `act` will override and push to an internal queue\n  scheduleCallback as Scheduler_scheduleCallback,\n  cancelCallback as Scheduler_cancelCallback,\n  shouldYield,\n  requestPaint,\n  now,\n  ImmediatePriority as ImmediateSchedulerPriority,\n  UserBlockingPriority as UserBlockingSchedulerPriority,\n  NormalPriority as NormalSchedulerPriority,\n  IdlePriority as IdleSchedulerPriority,\n} from './Scheduler';\nimport {\n  flushSyncCallbacks,\n  flushSyncCallbacksOnlyInLegacyMode,\n  scheduleSyncCallback,\n  scheduleLegacySyncCallback,\n} from './ReactFiberSyncTaskQueue.old';\nimport {\n  logCommitStarted,\n  logCommitStopped,\n  logLayoutEffectsStarted,\n  logLayoutEffectsStopped,\n  logPassiveEffectsStarted,\n  logPassiveEffectsStopped,\n  logRenderStarted,\n  logRenderStopped,\n} from './DebugTracing';\n\nimport {\n  resetAfterCommit,\n  scheduleTimeout,\n  cancelTimeout,\n  noTimeout,\n  afterActiveInstanceBlur,\n  getCurrentEventPriority,\n  supportsMicrotasks,\n  errorHydratingContainer,\n  scheduleMicrotask,\n} from './ReactFiberHostConfig';\n\nimport {\n  createWorkInProgress,\n  assignFiberPropertiesInDEV,\n} from './ReactFiber.old';\nimport {isRootDehydrated} from './ReactFiberShellHydration';\nimport {didSuspendOrErrorWhileHydratingDEV} from './ReactFiberHydrationContext.old';\nimport {NoMode, ProfileMode, ConcurrentMode} from './ReactTypeOfMode';\nimport {\n  HostRoot,\n  IndeterminateComponent,\n  ClassComponent,\n  SuspenseComponent,\n  SuspenseListComponent,\n  FunctionComponent,\n  ForwardRef,\n  MemoComponent,\n  SimpleMemoComponent,\n  Profiler,\n} from './ReactWorkTags';\nimport {LegacyRoot} from './ReactRootTags';\nimport {\n  NoFlags,\n  Incomplete,\n  StoreConsistency,\n  HostEffectMask,\n  ForceClientRender,\n  BeforeMutationMask,\n  MutationMask,\n  LayoutMask,\n  PassiveMask,\n  MountPassiveDev,\n  MountLayoutDev,\n} from './ReactFiberFlags';\nimport {\n  NoLanes,\n  NoLane,\n  SyncLane,\n  NoTimestamp,\n  claimNextTransitionLane,\n  claimNextRetryLane,\n  includesSomeLane,\n  isSubsetOfLanes,\n  mergeLanes,\n  removeLanes,\n  pickArbitraryLane,\n  includesNonIdleWork,\n  includesOnlyRetries,\n  includesOnlyTransitions,\n  includesBlockingLane,\n  includesExpiredLane,\n  getNextLanes,\n  markStarvedLanesAsExpired,\n  getLanesToRetrySynchronouslyOnError,\n  getMostRecentEventTime,\n  markRootUpdated,\n  markRootSuspended as markRootSuspended_dontCallThisOneDirectly,\n  markRootPinged,\n  markRootEntangled,\n  markRootFinished,\n  getHighestPriorityLane,\n  addFiberToLanesMap,\n  movePendingFibersToMemoized,\n  addTransitionToLanesMap,\n  getTransitionsForLanes,\n} from './ReactFiberLane.old';\nimport {\n  DiscreteEventPriority,\n  ContinuousEventPriority,\n  DefaultEventPriority,\n  IdleEventPriority,\n  getCurrentUpdatePriority,\n  setCurrentUpdatePriority,\n  lowerEventPriority,\n  lanesToEventPriority,\n} from './ReactEventPriorities.old';\nimport {requestCurrentTransition, NoTransition} from './ReactFiberTransition';\nimport {beginWork as originalBeginWork} from './ReactFiberBeginWork.old';\nimport {completeWork} from './ReactFiberCompleteWork.old';\nimport {unwindWork, unwindInterruptedWork} from './ReactFiberUnwindWork.old';\nimport {\n  throwException,\n  createRootErrorUpdate,\n  createClassErrorUpdate,\n} from './ReactFiberThrow.old';\nimport {\n  commitBeforeMutationEffects,\n  commitLayoutEffects,\n  commitMutationEffects,\n  commitPassiveEffectDurations,\n  commitPassiveMountEffects,\n  commitPassiveUnmountEffects,\n  invokeLayoutEffectMountInDEV,\n  invokePassiveEffectMountInDEV,\n  invokeLayoutEffectUnmountInDEV,\n  invokePassiveEffectUnmountInDEV,\n  reportUncaughtErrorInDEV,\n} from './ReactFiberCommitWork.old';\nimport {enqueueUpdate} from './ReactFiberClassUpdateQueue.old';\nimport {resetContextDependencies} from './ReactFiberNewContext.old';\nimport {\n  resetHooksAfterThrow,\n  ContextOnlyDispatcher,\n  getIsUpdatingOpaqueValueInRenderPhaseInDEV,\n} from './ReactFiberHooks.old';\nimport {\n  createCapturedValueAtFiber,\n  type CapturedValue,\n} from './ReactCapturedValue';\nimport {\n  push as pushToStack,\n  pop as popFromStack,\n  createCursor,\n} from './ReactFiberStack.old';\nimport {\n  enqueueConcurrentRenderForLane,\n  finishQueueingConcurrentUpdates,\n} from './ReactFiberConcurrentUpdates.old';\n\nimport {\n  markNestedUpdateScheduled,\n  recordCommitTime,\n  resetNestedUpdateFlag,\n  startProfilerTimer,\n  stopProfilerTimerIfRunningAndRecordDelta,\n  syncNestedUpdateFlag,\n} from './ReactProfilerTimer.old';\n\n// DEV stuff\nimport getComponentNameFromFiber from 'react-reconciler/src/getComponentNameFromFiber';\nimport ReactStrictModeWarnings from './ReactStrictModeWarnings.old';\nimport {\n  isRendering as ReactCurrentDebugFiberIsRenderingInDEV,\n  current as ReactCurrentFiberCurrent,\n  resetCurrentFiber as resetCurrentDebugFiberInDEV,\n  setCurrentFiber as setCurrentDebugFiberInDEV,\n} from './ReactCurrentFiber';\nimport {\n  invokeGuardedCallback,\n  hasCaughtError,\n  clearCaughtError,\n} from 'shared/ReactErrorUtils';\nimport {\n  isDevToolsPresent,\n  markCommitStarted,\n  markCommitStopped,\n  markComponentRenderStopped,\n  markComponentSuspended,\n  markComponentErrored,\n  markLayoutEffectsStarted,\n  markLayoutEffectsStopped,\n  markPassiveEffectsStarted,\n  markPassiveEffectsStopped,\n  markRenderStarted,\n  markRenderYielded,\n  markRenderStopped,\n  onCommitRoot as onCommitRootDevTools,\n  onPostCommitRoot as onPostCommitRootDevTools,\n} from './ReactFiberDevToolsHook.old';\nimport {onCommitRoot as onCommitRootTestSelector} from './ReactTestSelectors';\nimport {releaseCache} from './ReactFiberCacheComponent.old';\nimport {\n  isLegacyActEnvironment,\n  isConcurrentActEnvironment,\n} from './ReactFiberAct.old';\nimport {processTransitionCallbacks} from './ReactFiberTracingMarkerComponent.old';\n\nconst ceil = Math.ceil;\n\nconst {\n  ReactCurrentDispatcher,\n  ReactCurrentOwner,\n  ReactCurrentBatchConfig,\n  ReactCurrentActQueue,\n} = ReactSharedInternals;\n\ntype ExecutionContext = number;\n\nexport const NoContext = /*             */ 0b000;\nconst BatchedContext = /*               */ 0b001;\nconst RenderContext = /*                */ 0b010;\nconst CommitContext = /*                */ 0b100;\n\ntype RootExitStatus = 0 | 1 | 2 | 3 | 4 | 5 | 6;\nconst RootInProgress = 0;\nconst RootFatalErrored = 1;\nconst RootErrored = 2;\nconst RootSuspended = 3;\nconst RootSuspendedWithDelay = 4;\nconst RootCompleted = 5;\nconst RootDidNotComplete = 6;\n\n// Describes where we are in the React execution stack\nlet executionContext: ExecutionContext = NoContext;\n// The root we're working on\nlet workInProgressRoot: FiberRoot | null = null;\n// The fiber we're working on\nlet workInProgress: Fiber | null = null;\n// The lanes we're rendering\nlet workInProgressRootRenderLanes: Lanes = NoLanes;\n\n// Stack that allows components to change the render lanes for its subtree\n// This is a superset of the lanes we started working on at the root. The only\n// case where it's different from `workInProgressRootRenderLanes` is when we\n// enter a subtree that is hidden and needs to be unhidden: Suspense and\n// Offscreen component.\n//\n// Most things in the work loop should deal with workInProgressRootRenderLanes.\n// Most things in begin/complete phases should deal with subtreeRenderLanes.\nexport let subtreeRenderLanes: Lanes = NoLanes;\nconst subtreeRenderLanesCursor: StackCursor<Lanes> = createCursor(NoLanes);\n\n// Whether to root completed, errored, suspended, etc.\nlet workInProgressRootExitStatus: RootExitStatus = RootInProgress;\n// A fatal error, if one is thrown\nlet workInProgressRootFatalError: mixed = null;\n// \"Included\" lanes refer to lanes that were worked on during this render. It's\n// slightly different than `renderLanes` because `renderLanes` can change as you\n// enter and exit an Offscreen tree. This value is the combination of all render\n// lanes for the entire render phase.\nlet workInProgressRootIncludedLanes: Lanes = NoLanes;\n// The work left over by components that were visited during this render. Only\n// includes unprocessed updates, not work in bailed out children.\nlet workInProgressRootSkippedLanes: Lanes = NoLanes;\n// Lanes that were updated (in an interleaved event) during this render.\nlet workInProgressRootInterleavedUpdatedLanes: Lanes = NoLanes;\n// Lanes that were updated during the render phase (*not* an interleaved event).\nlet workInProgressRootRenderPhaseUpdatedLanes: Lanes = NoLanes;\n// Lanes that were pinged (in an interleaved event) during this render.\nlet workInProgressRootPingedLanes: Lanes = NoLanes;\n// Errors that are thrown during the render phase.\nlet workInProgressRootConcurrentErrors: Array<\n  CapturedValue<mixed>,\n> | null = null;\n// These are errors that we recovered from without surfacing them to the UI.\n// We will log them once the tree commits.\nlet workInProgressRootRecoverableErrors: Array<\n  CapturedValue<mixed>,\n> | null = null;\n\n// The most recent time we committed a fallback. This lets us ensure a train\n// model where we don't commit new loading states in too quick succession.\nlet globalMostRecentFallbackTime: number = 0;\nconst FALLBACK_THROTTLE_MS: number = 500;\n\n// The absolute time for when we should start giving up on rendering\n// more and prefer CPU suspense heuristics instead.\nlet workInProgressRootRenderTargetTime: number = Infinity;\n// How long a render is supposed to take before we start following CPU\n// suspense heuristics and opt out of rendering more content.\nconst RENDER_TIMEOUT_MS = 500;\n\nlet workInProgressTransitions: Array<Transition> | null = null;\nexport function getWorkInProgressTransitions() {\n  return workInProgressTransitions;\n}\n\nlet currentPendingTransitionCallbacks: PendingTransitionCallbacks | null = null;\n\nexport function addTransitionStartCallbackToPendingTransition(\n  transition: TransitionObject,\n) {\n  if (enableTransitionTracing) {\n    if (currentPendingTransitionCallbacks === null) {\n      currentPendingTransitionCallbacks = {\n        transitionStart: [],\n        transitionComplete: null,\n      };\n    }\n\n    if (currentPendingTransitionCallbacks.transitionStart === null) {\n      currentPendingTransitionCallbacks.transitionStart = [];\n    }\n\n    currentPendingTransitionCallbacks.transitionStart.push(transition);\n  }\n}\n\nexport function addTransitionCompleteCallbackToPendingTransition(\n  transition: TransitionObject,\n) {\n  if (enableTransitionTracing) {\n    if (currentPendingTransitionCallbacks === null) {\n      currentPendingTransitionCallbacks = {\n        transitionStart: null,\n        transitionComplete: [],\n      };\n    }\n\n    if (currentPendingTransitionCallbacks.transitionComplete === null) {\n      currentPendingTransitionCallbacks.transitionComplete = [];\n    }\n\n    currentPendingTransitionCallbacks.transitionComplete.push(transition);\n  }\n}\n\nfunction resetRenderTimer() {\n  workInProgressRootRenderTargetTime = now() + RENDER_TIMEOUT_MS;\n}\n\nexport function getRenderTargetTime(): number {\n  return workInProgressRootRenderTargetTime;\n}\n\nlet hasUncaughtError = false;\nlet firstUncaughtError = null;\nlet legacyErrorBoundariesThatAlreadyFailed: Set<mixed> | null = null;\n\n// Only used when enableProfilerNestedUpdateScheduledHook is true;\n// to track which root is currently committing layout effects.\nlet rootCommittingMutationOrLayoutEffects: FiberRoot | null = null;\n\nlet rootDoesHavePassiveEffects: boolean = false;\nlet rootWithPendingPassiveEffects: FiberRoot | null = null;\nlet pendingPassiveEffectsLanes: Lanes = NoLanes;\nlet pendingPassiveProfilerEffects: Array<Fiber> = [];\nlet pendingPassiveEffectsRemainingLanes: Lanes = NoLanes;\nlet pendingPassiveTransitions: Array<Transition> | null = null;\n\n// Use these to prevent an infinite loop of nested updates\nconst NESTED_UPDATE_LIMIT = 50;\nlet nestedUpdateCount: number = 0;\nlet rootWithNestedUpdates: FiberRoot | null = null;\nlet isFlushingPassiveEffects = false;\nlet didScheduleUpdateDuringPassiveEffects = false;\n\nconst NESTED_PASSIVE_UPDATE_LIMIT = 50;\nlet nestedPassiveUpdateCount: number = 0;\nlet rootWithPassiveNestedUpdates: FiberRoot | null = null;\n\n// If two updates are scheduled within the same event, we should treat their\n// event times as simultaneous, even if the actual clock time has advanced\n// between the first and second call.\nlet currentEventTime: number = NoTimestamp;\nlet currentEventTransitionLane: Lanes = NoLanes;\n\nlet isRunningInsertionEffect = false;\n\nexport function getWorkInProgressRoot(): FiberRoot | null {\n  return workInProgressRoot;\n}\n\nexport function requestEventTime() {\n  if ((executionContext & (RenderContext | CommitContext)) !== NoContext) {\n    // We're inside React, so it's fine to read the actual time.\n    return now();\n  }\n  // We're not inside React, so we may be in the middle of a browser event.\n  if (currentEventTime !== NoTimestamp) {\n    // Use the same start time for all updates until we enter React again.\n    return currentEventTime;\n  }\n  // This is the first update since React yielded. Compute a new start time.\n  currentEventTime = now();\n  return currentEventTime;\n}\n\nexport function getCurrentTime() {\n  return now();\n}\n\nexport function requestUpdateLane(fiber: Fiber): Lane {\n  // Special cases\n  const mode = fiber.mode;\n  if ((mode & ConcurrentMode) === NoMode) {\n    return (SyncLane: Lane);\n  } else if (\n    !deferRenderPhaseUpdateToNextBatch &&\n    (executionContext & RenderContext) !== NoContext &&\n    workInProgressRootRenderLanes !== NoLanes\n  ) {\n    // This is a render phase update. These are not officially supported. The\n    // old behavior is to give this the same \"thread\" (lanes) as\n    // whatever is currently rendering. So if you call `setState` on a component\n    // that happens later in the same render, it will flush. Ideally, we want to\n    // remove the special case and treat them as if they came from an\n    // interleaved event. Regardless, this pattern is not officially supported.\n    // This behavior is only a fallback. The flag only exists until we can roll\n    // out the setState warning, since existing code might accidentally rely on\n    // the current behavior.\n    return pickArbitraryLane(workInProgressRootRenderLanes);\n  }\n\n  const isTransition = requestCurrentTransition() !== NoTransition;\n  if (isTransition) {\n    if (__DEV__ && ReactCurrentBatchConfig.transition !== null) {\n      const transition = ReactCurrentBatchConfig.transition;\n      if (!transition._updatedFibers) {\n        transition._updatedFibers = new Set();\n      }\n\n      transition._updatedFibers.add(fiber);\n    }\n    // The algorithm for assigning an update to a lane should be stable for all\n    // updates at the same priority within the same event. To do this, the\n    // inputs to the algorithm must be the same.\n    //\n    // The trick we use is to cache the first of each of these inputs within an\n    // event. Then reset the cached values once we can be sure the event is\n    // over. Our heuristic for that is whenever we enter a concurrent work loop.\n    if (currentEventTransitionLane === NoLane) {\n      // All transitions within the same event are assigned the same lane.\n      currentEventTransitionLane = claimNextTransitionLane();\n    }\n    return currentEventTransitionLane;\n  }\n\n  // Updates originating inside certain React methods, like flushSync, have\n  // their priority set by tracking it with a context variable.\n  //\n  // The opaque type returned by the host config is internally a lane, so we can\n  // use that directly.\n  // TODO: Move this type conversion to the event priority module.\n  const updateLane: Lane = (getCurrentUpdatePriority(): any);\n  if (updateLane !== NoLane) {\n    return updateLane;\n  }\n\n  // This update originated outside React. Ask the host environment for an\n  // appropriate priority, based on the type of event.\n  //\n  // The opaque type returned by the host config is internally a lane, so we can\n  // use that directly.\n  // TODO: Move this type conversion to the event priority module.\n  const eventLane: Lane = (getCurrentEventPriority(): any);\n  return eventLane;\n}\n\nfunction requestRetryLane(fiber: Fiber) {\n  // This is a fork of `requestUpdateLane` designed specifically for Suspense\n  // \"retries\" — a special update that attempts to flip a Suspense boundary\n  // from its placeholder state to its primary/resolved state.\n\n  // Special cases\n  const mode = fiber.mode;\n  if ((mode & ConcurrentMode) === NoMode) {\n    return (SyncLane: Lane);\n  }\n\n  return claimNextRetryLane();\n}\n\nexport function scheduleUpdateOnFiber(\n  root: FiberRoot,\n  fiber: Fiber,\n  lane: Lane,\n  eventTime: number,\n) {\n  checkForNestedUpdates();\n\n  if (__DEV__) {\n    if (isRunningInsertionEffect) {\n      console.error('useInsertionEffect must not schedule updates.');\n    }\n  }\n\n  if (__DEV__) {\n    if (isFlushingPassiveEffects) {\n      didScheduleUpdateDuringPassiveEffects = true;\n    }\n  }\n\n  // Mark that the root has a pending update.\n  markRootUpdated(root, lane, eventTime);\n\n  if (\n    (executionContext & RenderContext) !== NoLanes &&\n    root === workInProgressRoot\n  ) {\n    // This update was dispatched during the render phase. This is a mistake\n    // if the update originates from user space (with the exception of local\n    // hook updates, which are handled differently and don't reach this\n    // function), but there are some internal React features that use this as\n    // an implementation detail, like selective hydration.\n    warnAboutRenderPhaseUpdatesInDEV(fiber);\n\n    // Track lanes that were updated during the render phase\n    workInProgressRootRenderPhaseUpdatedLanes = mergeLanes(\n      workInProgressRootRenderPhaseUpdatedLanes,\n      lane,\n    );\n  } else {\n    // This is a normal update, scheduled from outside the render phase. For\n    // example, during an input event.\n    if (enableUpdaterTracking) {\n      if (isDevToolsPresent) {\n        addFiberToLanesMap(root, fiber, lane);\n      }\n    }\n\n    warnIfUpdatesNotWrappedWithActDEV(fiber);\n\n    if (enableProfilerTimer && enableProfilerNestedUpdateScheduledHook) {\n      if (\n        (executionContext & CommitContext) !== NoContext &&\n        root === rootCommittingMutationOrLayoutEffects\n      ) {\n        if (fiber.mode & ProfileMode) {\n          let current = fiber;\n          while (current !== null) {\n            if (current.tag === Profiler) {\n              const {id, onNestedUpdateScheduled} = current.memoizedProps;\n              if (typeof onNestedUpdateScheduled === 'function') {\n                onNestedUpdateScheduled(id);\n              }\n            }\n            current = current.return;\n          }\n        }\n      }\n    }\n\n    if (enableTransitionTracing) {\n      const transition = ReactCurrentBatchConfig.transition;\n      if (transition !== null) {\n        if (transition.startTime === -1) {\n          transition.startTime = now();\n        }\n\n        addTransitionToLanesMap(root, transition, lane);\n      }\n    }\n\n    if (root === workInProgressRoot) {\n      // Received an update to a tree that's in the middle of rendering. Mark\n      // that there was an interleaved update work on this root. Unless the\n      // `deferRenderPhaseUpdateToNextBatch` flag is off and this is a render\n      // phase update. In that case, we don't treat render phase updates as if\n      // they were interleaved, for backwards compat reasons.\n      if (\n        deferRenderPhaseUpdateToNextBatch ||\n        (executionContext & RenderContext) === NoContext\n      ) {\n        workInProgressRootInterleavedUpdatedLanes = mergeLanes(\n          workInProgressRootInterleavedUpdatedLanes,\n          lane,\n        );\n      }\n      if (workInProgressRootExitStatus === RootSuspendedWithDelay) {\n        // The root already suspended with a delay, which means this render\n        // definitely won't finish. Since we have a new update, let's mark it as\n        // suspended now, right before marking the incoming update. This has the\n        // effect of interrupting the current render and switching to the update.\n        // TODO: Make sure this doesn't override pings that happen while we've\n        // already started rendering.\n        markRootSuspended(root, workInProgressRootRenderLanes);\n      }\n    }\n\n    ensureRootIsScheduled(root, eventTime);\n    if (\n      lane === SyncLane &&\n      executionContext === NoContext &&\n      (fiber.mode & ConcurrentMode) === NoMode &&\n      // Treat `act` as if it's inside `batchedUpdates`, even in legacy mode.\n      !(__DEV__ && ReactCurrentActQueue.isBatchingLegacy)\n    ) {\n      // Flush the synchronous work now, unless we're already working or inside\n      // a batch. This is intentionally inside scheduleUpdateOnFiber instead of\n      // scheduleCallbackForFiber to preserve the ability to schedule a callback\n      // without immediately flushing it. We only do this for user-initiated\n      // updates, to preserve historical behavior of legacy mode.\n      resetRenderTimer();\n      flushSyncCallbacksOnlyInLegacyMode();\n    }\n  }\n}\n\nexport function scheduleInitialHydrationOnRoot(\n  root: FiberRoot,\n  lane: Lane,\n  eventTime: number,\n) {\n  // This is a special fork of scheduleUpdateOnFiber that is only used to\n  // schedule the initial hydration of a root that has just been created. Most\n  // of the stuff in scheduleUpdateOnFiber can be skipped.\n  //\n  // The main reason for this separate path, though, is to distinguish the\n  // initial children from subsequent updates. In fully client-rendered roots\n  // (createRoot instead of hydrateRoot), all top-level renders are modeled as\n  // updates, but hydration roots are special because the initial render must\n  // match what was rendered on the server.\n  const current = root.current;\n  current.lanes = lane;\n  markRootUpdated(root, lane, eventTime);\n  ensureRootIsScheduled(root, eventTime);\n}\n\nexport function isUnsafeClassRenderPhaseUpdate(fiber: Fiber) {\n  // Check if this is a render phase update. Only called by class components,\n  // which special (deprecated) behavior for UNSAFE_componentWillReceive props.\n  return (\n    // TODO: Remove outdated deferRenderPhaseUpdateToNextBatch experiment. We\n    // decided not to enable it.\n    (!deferRenderPhaseUpdateToNextBatch ||\n      (fiber.mode & ConcurrentMode) === NoMode) &&\n    (executionContext & RenderContext) !== NoContext\n  );\n}\n\n// Use this function to schedule a task for a root. There's only one task per\n// root; if a task was already scheduled, we'll check to make sure the priority\n// of the existing task is the same as the priority of the next level that the\n// root has work on. This function is called on every update, and right before\n// exiting a task.\nfunction ensureRootIsScheduled(root: FiberRoot, currentTime: number) {\n  const existingCallbackNode = root.callbackNode;\n\n  // Check if any lanes are being starved by other work. If so, mark them as\n  // expired so we know to work on those next.\n  markStarvedLanesAsExpired(root, currentTime);\n\n  // Determine the next lanes to work on, and their priority.\n  const nextLanes = getNextLanes(\n    root,\n    root === workInProgressRoot ? workInProgressRootRenderLanes : NoLanes,\n  );\n\n  if (nextLanes === NoLanes) {\n    // Special case: There's nothing to work on.\n    if (existingCallbackNode !== null) {\n      cancelCallback(existingCallbackNode);\n    }\n    root.callbackNode = null;\n    root.callbackPriority = NoLane;\n    return;\n  }\n\n  // We use the highest priority lane to represent the priority of the callback.\n  const newCallbackPriority = getHighestPriorityLane(nextLanes);\n\n  // Check if there's an existing task. We may be able to reuse it.\n  const existingCallbackPriority = root.callbackPriority;\n  if (\n    existingCallbackPriority === newCallbackPriority &&\n    // Special case related to `act`. If the currently scheduled task is a\n    // Scheduler task, rather than an `act` task, cancel it and re-scheduled\n    // on the `act` queue.\n    !(\n      __DEV__ &&\n      ReactCurrentActQueue.current !== null &&\n      existingCallbackNode !== fakeActCallbackNode\n    )\n  ) {\n    if (__DEV__) {\n      // If we're going to re-use an existing task, it needs to exist.\n      // Assume that discrete update microtasks are non-cancellable and null.\n      // TODO: Temporary until we confirm this warning is not fired.\n      if (\n        existingCallbackNode == null &&\n        existingCallbackPriority !== SyncLane\n      ) {\n        console.error(\n          'Expected scheduled callback to exist. This error is likely caused by a bug in React. Please file an issue.',\n        );\n      }\n    }\n    // The priority hasn't changed. We can reuse the existing task. Exit.\n    return;\n  }\n\n  if (existingCallbackNode != null) {\n    // Cancel the existing callback. We'll schedule a new one below.\n    cancelCallback(existingCallbackNode);\n  }\n\n  // Schedule a new callback.\n  let newCallbackNode;\n  if (newCallbackPriority === SyncLane) {\n    // Special case: Sync React callbacks are scheduled on a special\n    // internal queue\n    if (root.tag === LegacyRoot) {\n      if (__DEV__ && ReactCurrentActQueue.isBatchingLegacy !== null) {\n        ReactCurrentActQueue.didScheduleLegacyUpdate = true;\n      }\n      scheduleLegacySyncCallback(performSyncWorkOnRoot.bind(null, root));\n    } else {\n      scheduleSyncCallback(performSyncWorkOnRoot.bind(null, root));\n    }\n    if (supportsMicrotasks) {\n      // Flush the queue in a microtask.\n      if (__DEV__ && ReactCurrentActQueue.current !== null) {\n        // Inside `act`, use our internal `act` queue so that these get flushed\n        // at the end of the current scope even when using the sync version\n        // of `act`.\n        ReactCurrentActQueue.current.push(flushSyncCallbacks);\n      } else {\n        scheduleMicrotask(() => {\n          // In Safari, appending an iframe forces microtasks to run.\n          // https://github.com/facebook/react/issues/22459\n          // We don't support running callbacks in the middle of render\n          // or commit so we need to check against that.\n          if (\n            (executionContext & (RenderContext | CommitContext)) ===\n            NoContext\n          ) {\n            // Note that this would still prematurely flush the callbacks\n            // if this happens outside render or commit phase (e.g. in an event).\n            flushSyncCallbacks();\n          }\n        });\n      }\n    } else {\n      // Flush the queue in an Immediate task.\n      scheduleCallback(ImmediateSchedulerPriority, flushSyncCallbacks);\n    }\n    newCallbackNode = null;\n  } else {\n    let schedulerPriorityLevel;\n    switch (lanesToEventPriority(nextLanes)) {\n      case DiscreteEventPriority:\n        schedulerPriorityLevel = ImmediateSchedulerPriority;\n        break;\n      case ContinuousEventPriority:\n        schedulerPriorityLevel = UserBlockingSchedulerPriority;\n        break;\n      case DefaultEventPriority:\n        schedulerPriorityLevel = NormalSchedulerPriority;\n        break;\n      case IdleEventPriority:\n        schedulerPriorityLevel = IdleSchedulerPriority;\n        break;\n      default:\n        schedulerPriorityLevel = NormalSchedulerPriority;\n        break;\n    }\n    newCallbackNode = scheduleCallback(\n      schedulerPriorityLevel,\n      performConcurrentWorkOnRoot.bind(null, root),\n    );\n  }\n\n  root.callbackPriority = newCallbackPriority;\n  root.callbackNode = newCallbackNode;\n}\n\n// This is the entry point for every concurrent task, i.e. anything that\n// goes through Scheduler.\nfunction performConcurrentWorkOnRoot(root, didTimeout) {\n  if (enableProfilerTimer && enableProfilerNestedUpdatePhase) {\n    resetNestedUpdateFlag();\n  }\n\n  // Since we know we're in a React event, we can clear the current\n  // event time. The next update will compute a new event time.\n  currentEventTime = NoTimestamp;\n  currentEventTransitionLane = NoLanes;\n\n  if ((executionContext & (RenderContext | CommitContext)) !== NoContext) {\n    throw new Error('Should not already be working.');\n  }\n\n  // Flush any pending passive effects before deciding which lanes to work on,\n  // in case they schedule additional work.\n  const originalCallbackNode = root.callbackNode;\n  const didFlushPassiveEffects = flushPassiveEffects();\n  if (didFlushPassiveEffects) {\n    // Something in the passive effect phase may have canceled the current task.\n    // Check if the task node for this root was changed.\n    if (root.callbackNode !== originalCallbackNode) {\n      // The current task was canceled. Exit. We don't need to call\n      // `ensureRootIsScheduled` because the check above implies either that\n      // there's a new task, or that there's no remaining work on this root.\n      return null;\n    } else {\n      // Current task was not canceled. Continue.\n    }\n  }\n\n  // Determine the next lanes to work on, using the fields stored\n  // on the root.\n  let lanes = getNextLanes(\n    root,\n    root === workInProgressRoot ? workInProgressRootRenderLanes : NoLanes,\n  );\n  if (lanes === NoLanes) {\n    // Defensive coding. This is never expected to happen.\n    return null;\n  }\n\n  // We disable time-slicing in some cases: if the work has been CPU-bound\n  // for too long (\"expired\" work, to prevent starvation), or we're in\n  // sync-updates-by-default mode.\n  // TODO: We only check `didTimeout` defensively, to account for a Scheduler\n  // bug we're still investigating. Once the bug in Scheduler is fixed,\n  // we can remove this, since we track expiration ourselves.\n  const shouldTimeSlice =\n    !includesBlockingLane(root, lanes) &&\n    !includesExpiredLane(root, lanes) &&\n    (disableSchedulerTimeoutInWorkLoop || !didTimeout);\n  let exitStatus = shouldTimeSlice\n    ? renderRootConcurrent(root, lanes)\n    : renderRootSync(root, lanes);\n  if (exitStatus !== RootInProgress) {\n    if (exitStatus === RootErrored) {\n      // If something threw an error, try rendering one more time. We'll\n      // render synchronously to block concurrent data mutations, and we'll\n      // includes all pending updates are included. If it still fails after\n      // the second attempt, we'll give up and commit the resulting tree.\n      const errorRetryLanes = getLanesToRetrySynchronouslyOnError(root);\n      if (errorRetryLanes !== NoLanes) {\n        lanes = errorRetryLanes;\n        exitStatus = recoverFromConcurrentError(root, errorRetryLanes);\n      }\n    }\n    if (exitStatus === RootFatalErrored) {\n      const fatalError = workInProgressRootFatalError;\n      prepareFreshStack(root, NoLanes);\n      markRootSuspended(root, lanes);\n      ensureRootIsScheduled(root, now());\n      throw fatalError;\n    }\n\n    if (exitStatus === RootDidNotComplete) {\n      // The render unwound without completing the tree. This happens in special\n      // cases where need to exit the current render without producing a\n      // consistent tree or committing.\n      //\n      // This should only happen during a concurrent render, not a discrete or\n      // synchronous update. We should have already checked for this when we\n      // unwound the stack.\n      markRootSuspended(root, lanes);\n    } else {\n      // The render completed.\n\n      // Check if this render may have yielded to a concurrent event, and if so,\n      // confirm that any newly rendered stores are consistent.\n      // TODO: It's possible that even a concurrent render may never have yielded\n      // to the main thread, if it was fast enough, or if it expired. We could\n      // skip the consistency check in that case, too.\n      const renderWasConcurrent = !includesBlockingLane(root, lanes);\n      const finishedWork: Fiber = (root.current.alternate: any);\n      if (\n        renderWasConcurrent &&\n        !isRenderConsistentWithExternalStores(finishedWork)\n      ) {\n        // A store was mutated in an interleaved event. Render again,\n        // synchronously, to block further mutations.\n        exitStatus = renderRootSync(root, lanes);\n\n        // We need to check again if something threw\n        if (exitStatus === RootErrored) {\n          const errorRetryLanes = getLanesToRetrySynchronouslyOnError(root);\n          if (errorRetryLanes !== NoLanes) {\n            lanes = errorRetryLanes;\n            exitStatus = recoverFromConcurrentError(root, errorRetryLanes);\n            // We assume the tree is now consistent because we didn't yield to any\n            // concurrent events.\n          }\n        }\n        if (exitStatus === RootFatalErrored) {\n          const fatalError = workInProgressRootFatalError;\n          prepareFreshStack(root, NoLanes);\n          markRootSuspended(root, lanes);\n          ensureRootIsScheduled(root, now());\n          throw fatalError;\n        }\n      }\n\n      // We now have a consistent tree. The next step is either to commit it,\n      // or, if something suspended, wait to commit it after a timeout.\n      root.finishedWork = finishedWork;\n      root.finishedLanes = lanes;\n      finishConcurrentRender(root, exitStatus, lanes);\n    }\n  }\n\n  ensureRootIsScheduled(root, now());\n  if (root.callbackNode === originalCallbackNode) {\n    // The task node scheduled for this root is the same one that's\n    // currently executed. Need to return a continuation.\n    return performConcurrentWorkOnRoot.bind(null, root);\n  }\n  return null;\n}\n\nfunction recoverFromConcurrentError(root, errorRetryLanes) {\n  // If an error occurred during hydration, discard server response and fall\n  // back to client side render.\n\n  // Before rendering again, save the errors from the previous attempt.\n  const errorsFromFirstAttempt = workInProgressRootConcurrentErrors;\n\n  if (isRootDehydrated(root)) {\n    // The shell failed to hydrate. Set a flag to force a client rendering\n    // during the next attempt. To do this, we call prepareFreshStack now\n    // to create the root work-in-progress fiber. This is a bit weird in terms\n    // of factoring, because it relies on renderRootSync not calling\n    // prepareFreshStack again in the call below, which happens because the\n    // root and lanes haven't changed.\n    //\n    // TODO: I think what we should do is set ForceClientRender inside\n    // throwException, like we do for nested Suspense boundaries. The reason\n    // it's here instead is so we can switch to the synchronous work loop, too.\n    // Something to consider for a future refactor.\n    const rootWorkInProgress = prepareFreshStack(root, errorRetryLanes);\n    rootWorkInProgress.flags |= ForceClientRender;\n    if (__DEV__) {\n      errorHydratingContainer(root.containerInfo);\n    }\n  }\n\n  const exitStatus = renderRootSync(root, errorRetryLanes);\n  if (exitStatus !== RootErrored) {\n    // Successfully finished rendering on retry\n\n    // The errors from the failed first attempt have been recovered. Add\n    // them to the collection of recoverable errors. We'll log them in the\n    // commit phase.\n    const errorsFromSecondAttempt = workInProgressRootRecoverableErrors;\n    workInProgressRootRecoverableErrors = errorsFromFirstAttempt;\n    // The errors from the second attempt should be queued after the errors\n    // from the first attempt, to preserve the causal sequence.\n    if (errorsFromSecondAttempt !== null) {\n      queueRecoverableErrors(errorsFromSecondAttempt);\n    }\n  } else {\n    // The UI failed to recover.\n  }\n  return exitStatus;\n}\n\nexport function queueRecoverableErrors(errors: Array<CapturedValue<mixed>>) {\n  if (workInProgressRootRecoverableErrors === null) {\n    workInProgressRootRecoverableErrors = errors;\n  } else {\n    workInProgressRootRecoverableErrors.push.apply(\n      workInProgressRootRecoverableErrors,\n      errors,\n    );\n  }\n}\n\nfunction finishConcurrentRender(root, exitStatus, lanes) {\n  switch (exitStatus) {\n    case RootInProgress:\n    case RootFatalErrored: {\n      throw new Error('Root did not complete. This is a bug in React.');\n    }\n    // Flow knows about invariant, so it complains if I add a break\n    // statement, but eslint doesn't know about invariant, so it complains\n    // if I do. eslint-disable-next-line no-fallthrough\n    case RootErrored: {\n      // We should have already attempted to retry this tree. If we reached\n      // this point, it errored again. Commit it.\n      commitRoot(\n        root,\n        workInProgressRootRecoverableErrors,\n        workInProgressTransitions,\n      );\n      break;\n    }\n    case RootSuspended: {\n      markRootSuspended(root, lanes);\n\n      // We have an acceptable loading state. We need to figure out if we\n      // should immediately commit it or wait a bit.\n\n      if (\n        includesOnlyRetries(lanes) &&\n        // do not delay if we're inside an act() scope\n        !shouldForceFlushFallbacksInDEV()\n      ) {\n        // This render only included retries, no updates. Throttle committing\n        // retries so that we don't show too many loading states too quickly.\n        const msUntilTimeout =\n          globalMostRecentFallbackTime + FALLBACK_THROTTLE_MS - now();\n        // Don't bother with a very short suspense time.\n        if (msUntilTimeout > 10) {\n          const nextLanes = getNextLanes(root, NoLanes);\n          if (nextLanes !== NoLanes) {\n            // There's additional work on this root.\n            break;\n          }\n          const suspendedLanes = root.suspendedLanes;\n          if (!isSubsetOfLanes(suspendedLanes, lanes)) {\n            // We should prefer to render the fallback of at the last\n            // suspended level. Ping the last suspended level to try\n            // rendering it again.\n            // FIXME: What if the suspended lanes are Idle? Should not restart.\n            const eventTime = requestEventTime();\n            markRootPinged(root, suspendedLanes, eventTime);\n            break;\n          }\n\n          // The render is suspended, it hasn't timed out, and there's no\n          // lower priority work to do. Instead of committing the fallback\n          // immediately, wait for more data to arrive.\n          root.timeoutHandle = scheduleTimeout(\n            commitRoot.bind(\n              null,\n              root,\n              workInProgressRootRecoverableErrors,\n              workInProgressTransitions,\n            ),\n            msUntilTimeout,\n          );\n          break;\n        }\n      }\n      // The work expired. Commit immediately.\n      commitRoot(\n        root,\n        workInProgressRootRecoverableErrors,\n        workInProgressTransitions,\n      );\n      break;\n    }\n    case RootSuspendedWithDelay: {\n      markRootSuspended(root, lanes);\n\n      if (includesOnlyTransitions(lanes)) {\n        // This is a transition, so we should exit without committing a\n        // placeholder and without scheduling a timeout. Delay indefinitely\n        // until we receive more data.\n        break;\n      }\n\n      if (!shouldForceFlushFallbacksInDEV()) {\n        // This is not a transition, but we did trigger an avoided state.\n        // Schedule a placeholder to display after a short delay, using the Just\n        // Noticeable Difference.\n        // TODO: Is the JND optimization worth the added complexity? If this is\n        // the only reason we track the event time, then probably not.\n        // Consider removing.\n\n        const mostRecentEventTime = getMostRecentEventTime(root, lanes);\n        const eventTimeMs = mostRecentEventTime;\n        const timeElapsedMs = now() - eventTimeMs;\n        const msUntilTimeout = jnd(timeElapsedMs) - timeElapsedMs;\n\n        // Don't bother with a very short suspense time.\n        if (msUntilTimeout > 10) {\n          // Instead of committing the fallback immediately, wait for more data\n          // to arrive.\n          root.timeoutHandle = scheduleTimeout(\n            commitRoot.bind(\n              null,\n              root,\n              workInProgressRootRecoverableErrors,\n              workInProgressTransitions,\n            ),\n            msUntilTimeout,\n          );\n          break;\n        }\n      }\n\n      // Commit the placeholder.\n      commitRoot(\n        root,\n        workInProgressRootRecoverableErrors,\n        workInProgressTransitions,\n      );\n      break;\n    }\n    case RootCompleted: {\n      // The work completed. Ready to commit.\n      commitRoot(\n        root,\n        workInProgressRootRecoverableErrors,\n        workInProgressTransitions,\n      );\n      break;\n    }\n    default: {\n      throw new Error('Unknown root exit status.');\n    }\n  }\n}\n\nfunction isRenderConsistentWithExternalStores(finishedWork: Fiber): boolean {\n  // Search the rendered tree for external store reads, and check whether the\n  // stores were mutated in a concurrent event. Intentionally using an iterative\n  // loop instead of recursion so we can exit early.\n  let node: Fiber = finishedWork;\n  while (true) {\n    if (node.flags & StoreConsistency) {\n      const updateQueue: FunctionComponentUpdateQueue | null = (node.updateQueue: any);\n      if (updateQueue !== null) {\n        const checks = updateQueue.stores;\n        if (checks !== null) {\n          for (let i = 0; i < checks.length; i++) {\n            const check = checks[i];\n            const getSnapshot = check.getSnapshot;\n            const renderedValue = check.value;\n            try {\n              if (!is(getSnapshot(), renderedValue)) {\n                // Found an inconsistent store.\n                return false;\n              }\n            } catch (error) {\n              // If `getSnapshot` throws, return `false`. This will schedule\n              // a re-render, and the error will be rethrown during render.\n              return false;\n            }\n          }\n        }\n      }\n    }\n    const child = node.child;\n    if (node.subtreeFlags & StoreConsistency && child !== null) {\n      child.return = node;\n      node = child;\n      continue;\n    }\n    if (node === finishedWork) {\n      return true;\n    }\n    while (node.sibling === null) {\n      if (node.return === null || node.return === finishedWork) {\n        return true;\n      }\n      node = node.return;\n    }\n    node.sibling.return = node.return;\n    node = node.sibling;\n  }\n  // Flow doesn't know this is unreachable, but eslint does\n  // eslint-disable-next-line no-unreachable\n  return true;\n}\n\nfunction markRootSuspended(root, suspendedLanes) {\n  // When suspending, we should always exclude lanes that were pinged or (more\n  // rarely, since we try to avoid it) updated during the render phase.\n  // TODO: Lol maybe there's a better way to factor this besides this\n  // obnoxiously named function :)\n  suspendedLanes = removeLanes(suspendedLanes, workInProgressRootPingedLanes);\n  suspendedLanes = removeLanes(\n    suspendedLanes,\n    workInProgressRootInterleavedUpdatedLanes,\n  );\n  markRootSuspended_dontCallThisOneDirectly(root, suspendedLanes);\n}\n\n// This is the entry point for synchronous tasks that don't go\n// through Scheduler\nfunction performSyncWorkOnRoot(root) {\n  if (enableProfilerTimer && enableProfilerNestedUpdatePhase) {\n    syncNestedUpdateFlag();\n  }\n\n  if ((executionContext & (RenderContext | CommitContext)) !== NoContext) {\n    throw new Error('Should not already be working.');\n  }\n\n  flushPassiveEffects();\n\n  let lanes = getNextLanes(root, NoLanes);\n  if (!includesSomeLane(lanes, SyncLane)) {\n    // There's no remaining sync work left.\n    ensureRootIsScheduled(root, now());\n    return null;\n  }\n\n  let exitStatus = renderRootSync(root, lanes);\n  if (root.tag !== LegacyRoot && exitStatus === RootErrored) {\n    // If something threw an error, try rendering one more time. We'll render\n    // synchronously to block concurrent data mutations, and we'll includes\n    // all pending updates are included. If it still fails after the second\n    // attempt, we'll give up and commit the resulting tree.\n    const errorRetryLanes = getLanesToRetrySynchronouslyOnError(root);\n    if (errorRetryLanes !== NoLanes) {\n      lanes = errorRetryLanes;\n      exitStatus = recoverFromConcurrentError(root, errorRetryLanes);\n    }\n  }\n\n  if (exitStatus === RootFatalErrored) {\n    const fatalError = workInProgressRootFatalError;\n    prepareFreshStack(root, NoLanes);\n    markRootSuspended(root, lanes);\n    ensureRootIsScheduled(root, now());\n    throw fatalError;\n  }\n\n  if (exitStatus === RootDidNotComplete) {\n    throw new Error('Root did not complete. This is a bug in React.');\n  }\n\n  // We now have a consistent tree. Because this is a sync render, we\n  // will commit it even if something suspended.\n  const finishedWork: Fiber = (root.current.alternate: any);\n  root.finishedWork = finishedWork;\n  root.finishedLanes = lanes;\n  commitRoot(\n    root,\n    workInProgressRootRecoverableErrors,\n    workInProgressTransitions,\n  );\n\n  // Before exiting, make sure there's a callback scheduled for the next\n  // pending level.\n  ensureRootIsScheduled(root, now());\n\n  return null;\n}\n\nexport function flushRoot(root: FiberRoot, lanes: Lanes) {\n  if (lanes !== NoLanes) {\n    markRootEntangled(root, mergeLanes(lanes, SyncLane));\n    ensureRootIsScheduled(root, now());\n    if ((executionContext & (RenderContext | CommitContext)) === NoContext) {\n      resetRenderTimer();\n      flushSyncCallbacks();\n    }\n  }\n}\n\nexport function getExecutionContext(): ExecutionContext {\n  return executionContext;\n}\n\nexport function deferredUpdates<A>(fn: () => A): A {\n  const previousPriority = getCurrentUpdatePriority();\n  const prevTransition = ReactCurrentBatchConfig.transition;\n\n  try {\n    ReactCurrentBatchConfig.transition = null;\n    setCurrentUpdatePriority(DefaultEventPriority);\n    return fn();\n  } finally {\n    setCurrentUpdatePriority(previousPriority);\n    ReactCurrentBatchConfig.transition = prevTransition;\n  }\n}\n\nexport function batchedUpdates<A, R>(fn: A => R, a: A): R {\n  const prevExecutionContext = executionContext;\n  executionContext |= BatchedContext;\n  try {\n    return fn(a);\n  } finally {\n    executionContext = prevExecutionContext;\n    // If there were legacy sync updates, flush them at the end of the outer\n    // most batchedUpdates-like method.\n    if (\n      executionContext === NoContext &&\n      // Treat `act` as if it's inside `batchedUpdates`, even in legacy mode.\n      !(__DEV__ && ReactCurrentActQueue.isBatchingLegacy)\n    ) {\n      resetRenderTimer();\n      flushSyncCallbacksOnlyInLegacyMode();\n    }\n  }\n}\n\nexport function discreteUpdates<A, B, C, D, R>(\n  fn: (A, B, C, D) => R,\n  a: A,\n  b: B,\n  c: C,\n  d: D,\n): R {\n  const previousPriority = getCurrentUpdatePriority();\n  const prevTransition = ReactCurrentBatchConfig.transition;\n  try {\n    ReactCurrentBatchConfig.transition = null;\n    setCurrentUpdatePriority(DiscreteEventPriority);\n    return fn(a, b, c, d);\n  } finally {\n    setCurrentUpdatePriority(previousPriority);\n    ReactCurrentBatchConfig.transition = prevTransition;\n    if (executionContext === NoContext) {\n      resetRenderTimer();\n    }\n  }\n}\n\n// Overload the definition to the two valid signatures.\n// Warning, this opts-out of checking the function body.\ndeclare function flushSync<R>(fn: () => R): R;\n// eslint-disable-next-line no-redeclare\ndeclare function flushSync(): void;\n// eslint-disable-next-line no-redeclare\nexport function flushSync(fn) {\n  // In legacy mode, we flush pending passive effects at the beginning of the\n  // next event, not at the end of the previous one.\n  if (\n    rootWithPendingPassiveEffects !== null &&\n    rootWithPendingPassiveEffects.tag === LegacyRoot &&\n    (executionContext & (RenderContext | CommitContext)) === NoContext\n  ) {\n    flushPassiveEffects();\n  }\n\n  const prevExecutionContext = executionContext;\n  executionContext |= BatchedContext;\n\n  const prevTransition = ReactCurrentBatchConfig.transition;\n  const previousPriority = getCurrentUpdatePriority();\n\n  try {\n    ReactCurrentBatchConfig.transition = null;\n    setCurrentUpdatePriority(DiscreteEventPriority);\n    if (fn) {\n      return fn();\n    } else {\n      return undefined;\n    }\n  } finally {\n    setCurrentUpdatePriority(previousPriority);\n    ReactCurrentBatchConfig.transition = prevTransition;\n\n    executionContext = prevExecutionContext;\n    // Flush the immediate callbacks that were scheduled during this batch.\n    // Note that this will happen even if batchedUpdates is higher up\n    // the stack.\n    if ((executionContext & (RenderContext | CommitContext)) === NoContext) {\n      flushSyncCallbacks();\n    }\n  }\n}\n\nexport function isAlreadyRendering() {\n  // Used by the renderer to print a warning if certain APIs are called from\n  // the wrong context.\n  return (\n    __DEV__ &&\n    (executionContext & (RenderContext | CommitContext)) !== NoContext\n  );\n}\n\nexport function flushControlled(fn: () => mixed): void {\n  const prevExecutionContext = executionContext;\n  executionContext |= BatchedContext;\n  const prevTransition = ReactCurrentBatchConfig.transition;\n  const previousPriority = getCurrentUpdatePriority();\n  try {\n    ReactCurrentBatchConfig.transition = null;\n    setCurrentUpdatePriority(DiscreteEventPriority);\n    fn();\n  } finally {\n    setCurrentUpdatePriority(previousPriority);\n    ReactCurrentBatchConfig.transition = prevTransition;\n\n    executionContext = prevExecutionContext;\n    if (executionContext === NoContext) {\n      // Flush the immediate callbacks that were scheduled during this batch\n      resetRenderTimer();\n      flushSyncCallbacks();\n    }\n  }\n}\n\nexport function pushRenderLanes(fiber: Fiber, lanes: Lanes) {\n  pushToStack(subtreeRenderLanesCursor, subtreeRenderLanes, fiber);\n  subtreeRenderLanes = mergeLanes(subtreeRenderLanes, lanes);\n  workInProgressRootIncludedLanes = mergeLanes(\n    workInProgressRootIncludedLanes,\n    lanes,\n  );\n}\n\nexport function popRenderLanes(fiber: Fiber) {\n  subtreeRenderLanes = subtreeRenderLanesCursor.current;\n  popFromStack(subtreeRenderLanesCursor, fiber);\n}\n\nfunction prepareFreshStack(root: FiberRoot, lanes: Lanes): Fiber {\n  root.finishedWork = null;\n  root.finishedLanes = NoLanes;\n\n  const timeoutHandle = root.timeoutHandle;\n  if (timeoutHandle !== noTimeout) {\n    // The root previous suspended and scheduled a timeout to commit a fallback\n    // state. Now that we have additional work, cancel the timeout.\n    root.timeoutHandle = noTimeout;\n    // $FlowFixMe Complains noTimeout is not a TimeoutID, despite the check above\n    cancelTimeout(timeoutHandle);\n  }\n\n  if (workInProgress !== null) {\n    let interruptedWork = workInProgress.return;\n    while (interruptedWork !== null) {\n      const current = interruptedWork.alternate;\n      unwindInterruptedWork(\n        current,\n        interruptedWork,\n        workInProgressRootRenderLanes,\n      );\n      interruptedWork = interruptedWork.return;\n    }\n  }\n  workInProgressRoot = root;\n  const rootWorkInProgress = createWorkInProgress(root.current, null);\n  workInProgress = rootWorkInProgress;\n  workInProgressRootRenderLanes = subtreeRenderLanes = workInProgressRootIncludedLanes = lanes;\n  workInProgressRootExitStatus = RootInProgress;\n  workInProgressRootFatalError = null;\n  workInProgressRootSkippedLanes = NoLanes;\n  workInProgressRootInterleavedUpdatedLanes = NoLanes;\n  workInProgressRootRenderPhaseUpdatedLanes = NoLanes;\n  workInProgressRootPingedLanes = NoLanes;\n  workInProgressRootConcurrentErrors = null;\n  workInProgressRootRecoverableErrors = null;\n\n  finishQueueingConcurrentUpdates();\n\n  if (__DEV__) {\n    ReactStrictModeWarnings.discardPendingWarnings();\n  }\n\n  return rootWorkInProgress;\n}\n\nfunction handleError(root, thrownValue): void {\n  do {\n    let erroredWork = workInProgress;\n    try {\n      // Reset module-level state that was set during the render phase.\n      resetContextDependencies();\n      resetHooksAfterThrow();\n      resetCurrentDebugFiberInDEV();\n      // TODO: I found and added this missing line while investigating a\n      // separate issue. Write a regression test using string refs.\n      ReactCurrentOwner.current = null;\n\n      if (erroredWork === null || erroredWork.return === null) {\n        // Expected to be working on a non-root fiber. This is a fatal error\n        // because there's no ancestor that can handle it; the root is\n        // supposed to capture all errors that weren't caught by an error\n        // boundary.\n        workInProgressRootExitStatus = RootFatalErrored;\n        workInProgressRootFatalError = thrownValue;\n        // Set `workInProgress` to null. This represents advancing to the next\n        // sibling, or the parent if there are no siblings. But since the root\n        // has no siblings nor a parent, we set it to null. Usually this is\n        // handled by `completeUnitOfWork` or `unwindWork`, but since we're\n        // intentionally not calling those, we need set it here.\n        // TODO: Consider calling `unwindWork` to pop the contexts.\n        workInProgress = null;\n        return;\n      }\n\n      if (enableProfilerTimer && erroredWork.mode & ProfileMode) {\n        // Record the time spent rendering before an error was thrown. This\n        // avoids inaccurate Profiler durations in the case of a\n        // suspended render.\n        stopProfilerTimerIfRunningAndRecordDelta(erroredWork, true);\n      }\n\n      if (enableSchedulingProfiler) {\n        markComponentRenderStopped();\n\n        if (\n          thrownValue !== null &&\n          typeof thrownValue === 'object' &&\n          typeof thrownValue.then === 'function'\n        ) {\n          const wakeable: Wakeable = (thrownValue: any);\n          markComponentSuspended(\n            erroredWork,\n            wakeable,\n            workInProgressRootRenderLanes,\n          );\n        } else {\n          markComponentErrored(\n            erroredWork,\n            thrownValue,\n            workInProgressRootRenderLanes,\n          );\n        }\n      }\n\n      throwException(\n        root,\n        erroredWork.return,\n        erroredWork,\n        thrownValue,\n        workInProgressRootRenderLanes,\n      );\n      completeUnitOfWork(erroredWork);\n    } catch (yetAnotherThrownValue) {\n      // Something in the return path also threw.\n      thrownValue = yetAnotherThrownValue;\n      if (workInProgress === erroredWork && erroredWork !== null) {\n        // If this boundary has already errored, then we had trouble processing\n        // the error. Bubble it to the next boundary.\n        erroredWork = erroredWork.return;\n        workInProgress = erroredWork;\n      } else {\n        erroredWork = workInProgress;\n      }\n      continue;\n    }\n    // Return to the normal work loop.\n    return;\n  } while (true);\n}\n\nfunction pushDispatcher() {\n  const prevDispatcher = ReactCurrentDispatcher.current;\n  ReactCurrentDispatcher.current = ContextOnlyDispatcher;\n  if (prevDispatcher === null) {\n    // The React isomorphic package does not include a default dispatcher.\n    // Instead the first renderer will lazily attach one, in order to give\n    // nicer error messages.\n    return ContextOnlyDispatcher;\n  } else {\n    return prevDispatcher;\n  }\n}\n\nfunction popDispatcher(prevDispatcher) {\n  ReactCurrentDispatcher.current = prevDispatcher;\n}\n\nexport function markCommitTimeOfFallback() {\n  globalMostRecentFallbackTime = now();\n}\n\nexport function markSkippedUpdateLanes(lane: Lane | Lanes): void {\n  workInProgressRootSkippedLanes = mergeLanes(\n    lane,\n    workInProgressRootSkippedLanes,\n  );\n}\n\nexport function renderDidSuspend(): void {\n  if (workInProgressRootExitStatus === RootInProgress) {\n    workInProgressRootExitStatus = RootSuspended;\n  }\n}\n\nexport function renderDidSuspendDelayIfPossible(): void {\n  if (\n    workInProgressRootExitStatus === RootInProgress ||\n    workInProgressRootExitStatus === RootSuspended ||\n    workInProgressRootExitStatus === RootErrored\n  ) {\n    workInProgressRootExitStatus = RootSuspendedWithDelay;\n  }\n\n  // Check if there are updates that we skipped tree that might have unblocked\n  // this render.\n  if (\n    workInProgressRoot !== null &&\n    (includesNonIdleWork(workInProgressRootSkippedLanes) ||\n      includesNonIdleWork(workInProgressRootInterleavedUpdatedLanes))\n  ) {\n    // Mark the current render as suspended so that we switch to working on\n    // the updates that were skipped. Usually we only suspend at the end of\n    // the render phase.\n    // TODO: We should probably always mark the root as suspended immediately\n    // (inside this function), since by suspending at the end of the render\n    // phase introduces a potential mistake where we suspend lanes that were\n    // pinged or updated while we were rendering.\n    markRootSuspended(workInProgressRoot, workInProgressRootRenderLanes);\n  }\n}\n\nexport function renderDidError(error: CapturedValue<mixed>) {\n  if (workInProgressRootExitStatus !== RootSuspendedWithDelay) {\n    workInProgressRootExitStatus = RootErrored;\n  }\n  if (workInProgressRootConcurrentErrors === null) {\n    workInProgressRootConcurrentErrors = [error];\n  } else {\n    workInProgressRootConcurrentErrors.push(error);\n  }\n}\n\n// Called during render to determine if anything has suspended.\n// Returns false if we're not sure.\nexport function renderHasNotSuspendedYet(): boolean {\n  // If something errored or completed, we can't really be sure,\n  // so those are false.\n  return workInProgressRootExitStatus === RootInProgress;\n}\n\nfunction renderRootSync(root: FiberRoot, lanes: Lanes) {\n  const prevExecutionContext = executionContext;\n  executionContext |= RenderContext;\n  const prevDispatcher = pushDispatcher();\n\n  // If the root or lanes have changed, throw out the existing stack\n  // and prepare a fresh one. Otherwise we'll continue where we left off.\n  if (workInProgressRoot !== root || workInProgressRootRenderLanes !== lanes) {\n    if (enableUpdaterTracking) {\n      if (isDevToolsPresent) {\n        const memoizedUpdaters = root.memoizedUpdaters;\n        if (memoizedUpdaters.size > 0) {\n          restorePendingUpdaters(root, workInProgressRootRenderLanes);\n          memoizedUpdaters.clear();\n        }\n\n        // At this point, move Fibers that scheduled the upcoming work from the Map to the Set.\n        // If we bailout on this work, we'll move them back (like above).\n        // It's important to move them now in case the work spawns more work at the same priority with different updaters.\n        // That way we can keep the current update and future updates separate.\n        movePendingFibersToMemoized(root, lanes);\n      }\n    }\n\n    workInProgressTransitions = getTransitionsForLanes(root, lanes);\n    prepareFreshStack(root, lanes);\n  }\n\n  if (__DEV__) {\n    if (enableDebugTracing) {\n      logRenderStarted(lanes);\n    }\n  }\n\n  if (enableSchedulingProfiler) {\n    markRenderStarted(lanes);\n  }\n\n  do {\n    try {\n      workLoopSync();\n      break;\n    } catch (thrownValue) {\n      handleError(root, thrownValue);\n    }\n  } while (true);\n  resetContextDependencies();\n\n  executionContext = prevExecutionContext;\n  popDispatcher(prevDispatcher);\n\n  if (workInProgress !== null) {\n    // This is a sync render, so we should have finished the whole tree.\n    throw new Error(\n      'Cannot commit an incomplete root. This error is likely caused by a ' +\n        'bug in React. Please file an issue.',\n    );\n  }\n\n  if (__DEV__) {\n    if (enableDebugTracing) {\n      logRenderStopped();\n    }\n  }\n\n  if (enableSchedulingProfiler) {\n    markRenderStopped();\n  }\n\n  // Set this to null to indicate there's no in-progress render.\n  workInProgressRoot = null;\n  workInProgressRootRenderLanes = NoLanes;\n\n  return workInProgressRootExitStatus;\n}\n\n// The work loop is an extremely hot path. Tell Closure not to inline it.\n/** @noinline */\nfunction workLoopSync() {\n  // Already timed out, so perform work without checking if we need to yield.\n  while (workInProgress !== null) {\n    performUnitOfWork(workInProgress);\n  }\n}\n\nfunction renderRootConcurrent(root: FiberRoot, lanes: Lanes) {\n  const prevExecutionContext = executionContext;\n  executionContext |= RenderContext;\n  const prevDispatcher = pushDispatcher();\n\n  // If the root or lanes have changed, throw out the existing stack\n  // and prepare a fresh one. Otherwise we'll continue where we left off.\n  if (workInProgressRoot !== root || workInProgressRootRenderLanes !== lanes) {\n    if (enableUpdaterTracking) {\n      if (isDevToolsPresent) {\n        const memoizedUpdaters = root.memoizedUpdaters;\n        if (memoizedUpdaters.size > 0) {\n          restorePendingUpdaters(root, workInProgressRootRenderLanes);\n          memoizedUpdaters.clear();\n        }\n\n        // At this point, move Fibers that scheduled the upcoming work from the Map to the Set.\n        // If we bailout on this work, we'll move them back (like above).\n        // It's important to move them now in case the work spawns more work at the same priority with different updaters.\n        // That way we can keep the current update and future updates separate.\n        movePendingFibersToMemoized(root, lanes);\n      }\n    }\n\n    workInProgressTransitions = getTransitionsForLanes(root, lanes);\n    resetRenderTimer();\n    prepareFreshStack(root, lanes);\n  }\n\n  if (__DEV__) {\n    if (enableDebugTracing) {\n      logRenderStarted(lanes);\n    }\n  }\n\n  if (enableSchedulingProfiler) {\n    markRenderStarted(lanes);\n  }\n\n  do {\n    try {\n      workLoopConcurrent();\n      break;\n    } catch (thrownValue) {\n      handleError(root, thrownValue);\n    }\n  } while (true);\n  resetContextDependencies();\n\n  popDispatcher(prevDispatcher);\n  executionContext = prevExecutionContext;\n\n  if (__DEV__) {\n    if (enableDebugTracing) {\n      logRenderStopped();\n    }\n  }\n\n  // Check if the tree has completed.\n  if (workInProgress !== null) {\n    // Still work remaining.\n    if (enableSchedulingProfiler) {\n      markRenderYielded();\n    }\n    return RootInProgress;\n  } else {\n    // Completed the tree.\n    if (enableSchedulingProfiler) {\n      markRenderStopped();\n    }\n\n    // Set this to null to indicate there's no in-progress render.\n    workInProgressRoot = null;\n    workInProgressRootRenderLanes = NoLanes;\n\n    // Return the final exit status.\n    return workInProgressRootExitStatus;\n  }\n}\n\n/** @noinline */\nfunction workLoopConcurrent() {\n  // Perform work until Scheduler asks us to yield\n  while (workInProgress !== null && !shouldYield()) {\n    performUnitOfWork(workInProgress);\n  }\n}\n\nfunction performUnitOfWork(unitOfWork: Fiber): void {\n  // The current, flushed, state of this fiber is the alternate. Ideally\n  // nothing should rely on this, but relying on it here means that we don't\n  // need an additional field on the work in progress.\n  const current = unitOfWork.alternate;\n  setCurrentDebugFiberInDEV(unitOfWork);\n\n  let next;\n  if (enableProfilerTimer && (unitOfWork.mode & ProfileMode) !== NoMode) {\n    startProfilerTimer(unitOfWork);\n    next = beginWork(current, unitOfWork, subtreeRenderLanes);\n    stopProfilerTimerIfRunningAndRecordDelta(unitOfWork, true);\n  } else {\n    next = beginWork(current, unitOfWork, subtreeRenderLanes);\n  }\n\n  resetCurrentDebugFiberInDEV();\n  unitOfWork.memoizedProps = unitOfWork.pendingProps;\n  if (next === null) {\n    // If this doesn't spawn new work, complete the current work.\n    completeUnitOfWork(unitOfWork);\n  } else {\n    workInProgress = next;\n  }\n\n  ReactCurrentOwner.current = null;\n}\n\nfunction completeUnitOfWork(unitOfWork: Fiber): void {\n  // Attempt to complete the current unit of work, then move to the next\n  // sibling. If there are no more siblings, return to the parent fiber.\n  let completedWork = unitOfWork;\n  do {\n    // The current, flushed, state of this fiber is the alternate. Ideally\n    // nothing should rely on this, but relying on it here means that we don't\n    // need an additional field on the work in progress.\n    const current = completedWork.alternate;\n    const returnFiber = completedWork.return;\n\n    // Check if the work completed or if something threw.\n    if ((completedWork.flags & Incomplete) === NoFlags) {\n      setCurrentDebugFiberInDEV(completedWork);\n      let next;\n      if (\n        !enableProfilerTimer ||\n        (completedWork.mode & ProfileMode) === NoMode\n      ) {\n        next = completeWork(current, completedWork, subtreeRenderLanes);\n      } else {\n        startProfilerTimer(completedWork);\n        next = completeWork(current, completedWork, subtreeRenderLanes);\n        // Update render duration assuming we didn't error.\n        stopProfilerTimerIfRunningAndRecordDelta(completedWork, false);\n      }\n      resetCurrentDebugFiberInDEV();\n\n      if (next !== null) {\n        // Completing this fiber spawned new work. Work on that next.\n        workInProgress = next;\n        return;\n      }\n    } else {\n      // This fiber did not complete because something threw. Pop values off\n      // the stack without entering the complete phase. If this is a boundary,\n      // capture values if possible.\n      const next = unwindWork(current, completedWork, subtreeRenderLanes);\n\n      // Because this fiber did not complete, don't reset its lanes.\n\n      if (next !== null) {\n        // If completing this work spawned new work, do that next. We'll come\n        // back here again.\n        // Since we're restarting, remove anything that is not a host effect\n        // from the effect tag.\n        next.flags &= HostEffectMask;\n        workInProgress = next;\n        return;\n      }\n\n      if (\n        enableProfilerTimer &&\n        (completedWork.mode & ProfileMode) !== NoMode\n      ) {\n        // Record the render duration for the fiber that errored.\n        stopProfilerTimerIfRunningAndRecordDelta(completedWork, false);\n\n        // Include the time spent working on failed children before continuing.\n        let actualDuration = completedWork.actualDuration;\n        let child = completedWork.child;\n        while (child !== null) {\n          actualDuration += child.actualDuration;\n          child = child.sibling;\n        }\n        completedWork.actualDuration = actualDuration;\n      }\n\n      if (returnFiber !== null) {\n        // Mark the parent fiber as incomplete and clear its subtree flags.\n        returnFiber.flags |= Incomplete;\n        returnFiber.subtreeFlags = NoFlags;\n        returnFiber.deletions = null;\n      } else {\n        // We've unwound all the way to the root.\n        workInProgressRootExitStatus = RootDidNotComplete;\n        workInProgress = null;\n        return;\n      }\n    }\n\n    const siblingFiber = completedWork.sibling;\n    if (siblingFiber !== null) {\n      // If there is more work to do in this returnFiber, do that next.\n      workInProgress = siblingFiber;\n      return;\n    }\n    // Otherwise, return to the parent\n    completedWork = returnFiber;\n    // Update the next thing we're working on in case something throws.\n    workInProgress = completedWork;\n  } while (completedWork !== null);\n\n  // We've reached the root.\n  if (workInProgressRootExitStatus === RootInProgress) {\n    workInProgressRootExitStatus = RootCompleted;\n  }\n}\n\nfunction commitRoot(\n  root: FiberRoot,\n  recoverableErrors: null | Array<CapturedValue<mixed>>,\n  transitions: Array<Transition> | null,\n) {\n  // TODO: This no longer makes any sense. We already wrap the mutation and\n  // layout phases. Should be able to remove.\n  const previousUpdateLanePriority = getCurrentUpdatePriority();\n  const prevTransition = ReactCurrentBatchConfig.transition;\n\n  try {\n    ReactCurrentBatchConfig.transition = null;\n    setCurrentUpdatePriority(DiscreteEventPriority);\n    commitRootImpl(\n      root,\n      recoverableErrors,\n      transitions,\n      previousUpdateLanePriority,\n    );\n  } finally {\n    ReactCurrentBatchConfig.transition = prevTransition;\n    setCurrentUpdatePriority(previousUpdateLanePriority);\n  }\n\n  return null;\n}\n\nfunction commitRootImpl(\n  root: FiberRoot,\n  recoverableErrors: null | Array<CapturedValue<mixed>>,\n  transitions: Array<Transition> | null,\n  renderPriorityLevel: EventPriority,\n) {\n  do {\n    // `flushPassiveEffects` will call `flushSyncUpdateQueue` at the end, which\n    // means `flushPassiveEffects` will sometimes result in additional\n    // passive effects. So we need to keep flushing in a loop until there are\n    // no more pending effects.\n    // TODO: Might be better if `flushPassiveEffects` did not automatically\n    // flush synchronous work at the end, to avoid factoring hazards like this.\n    flushPassiveEffects();\n  } while (rootWithPendingPassiveEffects !== null);\n  flushRenderPhaseStrictModeWarningsInDEV();\n\n  if ((executionContext & (RenderContext | CommitContext)) !== NoContext) {\n    throw new Error('Should not already be working.');\n  }\n\n  const finishedWork = root.finishedWork;\n  const lanes = root.finishedLanes;\n\n  if (__DEV__) {\n    if (enableDebugTracing) {\n      logCommitStarted(lanes);\n    }\n  }\n\n  if (enableSchedulingProfiler) {\n    markCommitStarted(lanes);\n  }\n\n  if (finishedWork === null) {\n    if (__DEV__) {\n      if (enableDebugTracing) {\n        logCommitStopped();\n      }\n    }\n\n    if (enableSchedulingProfiler) {\n      markCommitStopped();\n    }\n\n    return null;\n  } else {\n    if (__DEV__) {\n      if (lanes === NoLanes) {\n        console.error(\n          'root.finishedLanes should not be empty during a commit. This is a ' +\n            'bug in React.',\n        );\n      }\n    }\n  }\n  root.finishedWork = null;\n  root.finishedLanes = NoLanes;\n\n  if (finishedWork === root.current) {\n    throw new Error(\n      'Cannot commit the same tree as before. This error is likely caused by ' +\n        'a bug in React. Please file an issue.',\n    );\n  }\n\n  // commitRoot never returns a continuation; it always finishes synchronously.\n  // So we can clear these now to allow a new callback to be scheduled.\n  root.callbackNode = null;\n  root.callbackPriority = NoLane;\n\n  // Update the first and last pending times on this root. The new first\n  // pending time is whatever is left on the root fiber.\n  let remainingLanes = mergeLanes(finishedWork.lanes, finishedWork.childLanes);\n  markRootFinished(root, remainingLanes);\n\n  if (root === workInProgressRoot) {\n    // We can reset these now that they are finished.\n    workInProgressRoot = null;\n    workInProgress = null;\n    workInProgressRootRenderLanes = NoLanes;\n  } else {\n    // This indicates that the last root we worked on is not the same one that\n    // we're committing now. This most commonly happens when a suspended root\n    // times out.\n  }\n\n  // If there are pending passive effects, schedule a callback to process them.\n  // Do this as early as possible, so it is queued before anything else that\n  // might get scheduled in the commit phase. (See #16714.)\n  // TODO: Delete all other places that schedule the passive effect callback\n  // They're redundant.\n  if (\n    (finishedWork.subtreeFlags & PassiveMask) !== NoFlags ||\n    (finishedWork.flags & PassiveMask) !== NoFlags\n  ) {\n    if (!rootDoesHavePassiveEffects) {\n      rootDoesHavePassiveEffects = true;\n      pendingPassiveEffectsRemainingLanes = remainingLanes;\n      // workInProgressTransitions might be overwritten, so we want\n      // to store it in pendingPassiveTransitions until they get processed\n      // We need to pass this through as an argument to commitRoot\n      // because workInProgressTransitions might have changed between\n      // the previous render and commit if we throttle the commit\n      // with setTimeout\n      pendingPassiveTransitions = transitions;\n      scheduleCallback(NormalSchedulerPriority, () => {\n        flushPassiveEffects();\n        // This render triggered passive effects: release the root cache pool\n        // *after* passive effects fire to avoid freeing a cache pool that may\n        // be referenced by a node in the tree (HostRoot, Cache boundary etc)\n        return null;\n      });\n    }\n  }\n\n  // Check if there are any effects in the whole tree.\n  // TODO: This is left over from the effect list implementation, where we had\n  // to check for the existence of `firstEffect` to satisfy Flow. I think the\n  // only other reason this optimization exists is because it affects profiling.\n  // Reconsider whether this is necessary.\n  const subtreeHasEffects =\n    (finishedWork.subtreeFlags &\n      (BeforeMutationMask | MutationMask | LayoutMask | PassiveMask)) !==\n    NoFlags;\n  const rootHasEffect =\n    (finishedWork.flags &\n      (BeforeMutationMask | MutationMask | LayoutMask | PassiveMask)) !==\n    NoFlags;\n\n  if (subtreeHasEffects || rootHasEffect) {\n    const prevTransition = ReactCurrentBatchConfig.transition;\n    ReactCurrentBatchConfig.transition = null;\n    const previousPriority = getCurrentUpdatePriority();\n    setCurrentUpdatePriority(DiscreteEventPriority);\n\n    const prevExecutionContext = executionContext;\n    executionContext |= CommitContext;\n\n    // Reset this to null before calling lifecycles\n    ReactCurrentOwner.current = null;\n\n    // The commit phase is broken into several sub-phases. We do a separate pass\n    // of the effect list for each phase: all mutation effects come before all\n    // layout effects, and so on.\n\n    // The first phase a \"before mutation\" phase. We use this phase to read the\n    // state of the host tree right before we mutate it. This is where\n    // getSnapshotBeforeUpdate is called.\n    const shouldFireAfterActiveInstanceBlur = commitBeforeMutationEffects(\n      root,\n      finishedWork,\n    );\n\n    if (enableProfilerTimer) {\n      // Mark the current commit time to be shared by all Profilers in this\n      // batch. This enables them to be grouped later.\n      recordCommitTime();\n    }\n\n    if (enableProfilerTimer && enableProfilerNestedUpdateScheduledHook) {\n      // Track the root here, rather than in commitLayoutEffects(), because of ref setters.\n      // Updates scheduled during ref detachment should also be flagged.\n      rootCommittingMutationOrLayoutEffects = root;\n    }\n\n    // The next phase is the mutation phase, where we mutate the host tree.\n    commitMutationEffects(root, finishedWork, lanes);\n\n    if (enableCreateEventHandleAPI) {\n      if (shouldFireAfterActiveInstanceBlur) {\n        afterActiveInstanceBlur();\n      }\n    }\n    resetAfterCommit(root.containerInfo);\n\n    // The work-in-progress tree is now the current tree. This must come after\n    // the mutation phase, so that the previous tree is still current during\n    // componentWillUnmount, but before the layout phase, so that the finished\n    // work is current during componentDidMount/Update.\n    root.current = finishedWork;\n\n    // The next phase is the layout phase, where we call effects that read\n    // the host tree after it's been mutated. The idiomatic use case for this is\n    // layout, but class component lifecycles also fire here for legacy reasons.\n    if (__DEV__) {\n      if (enableDebugTracing) {\n        logLayoutEffectsStarted(lanes);\n      }\n    }\n    if (enableSchedulingProfiler) {\n      markLayoutEffectsStarted(lanes);\n    }\n    commitLayoutEffects(finishedWork, root, lanes);\n    if (__DEV__) {\n      if (enableDebugTracing) {\n        logLayoutEffectsStopped();\n      }\n    }\n\n    if (enableSchedulingProfiler) {\n      markLayoutEffectsStopped();\n    }\n\n    if (enableProfilerTimer && enableProfilerNestedUpdateScheduledHook) {\n      rootCommittingMutationOrLayoutEffects = null;\n    }\n\n    // Tell Scheduler to yield at the end of the frame, so the browser has an\n    // opportunity to paint.\n    requestPaint();\n\n    executionContext = prevExecutionContext;\n\n    // Reset the priority to the previous non-sync value.\n    setCurrentUpdatePriority(previousPriority);\n    ReactCurrentBatchConfig.transition = prevTransition;\n  } else {\n    // No effects.\n    root.current = finishedWork;\n    // Measure these anyway so the flamegraph explicitly shows that there were\n    // no effects.\n    // TODO: Maybe there's a better way to report this.\n    if (enableProfilerTimer) {\n      recordCommitTime();\n    }\n  }\n\n  const rootDidHavePassiveEffects = rootDoesHavePassiveEffects;\n\n  if (rootDoesHavePassiveEffects) {\n    // This commit has passive effects. Stash a reference to them. But don't\n    // schedule a callback until after flushing layout work.\n    rootDoesHavePassiveEffects = false;\n    rootWithPendingPassiveEffects = root;\n    pendingPassiveEffectsLanes = lanes;\n  } else {\n    // There were no passive effects, so we can immediately release the cache\n    // pool for this render.\n    releaseRootPooledCache(root, remainingLanes);\n    if (__DEV__) {\n      nestedPassiveUpdateCount = 0;\n      rootWithPassiveNestedUpdates = null;\n    }\n  }\n\n  // Read this again, since an effect might have updated it\n  remainingLanes = root.pendingLanes;\n\n  // Check if there's remaining work on this root\n  // TODO: This is part of the `componentDidCatch` implementation. Its purpose\n  // is to detect whether something might have called setState inside\n  // `componentDidCatch`. The mechanism is known to be flawed because `setState`\n  // inside `componentDidCatch` is itself flawed — that's why we recommend\n  // `getDerivedStateFromError` instead. However, it could be improved by\n  // checking if remainingLanes includes Sync work, instead of whether there's\n  // any work remaining at all (which would also include stuff like Suspense\n  // retries or transitions). It's been like this for a while, though, so fixing\n  // it probably isn't that urgent.\n  if (remainingLanes === NoLanes) {\n    // If there's no remaining work, we can clear the set of already failed\n    // error boundaries.\n    legacyErrorBoundariesThatAlreadyFailed = null;\n  }\n\n  if (__DEV__ && enableStrictEffects) {\n    if (!rootDidHavePassiveEffects) {\n      commitDoubleInvokeEffectsInDEV(root.current, false);\n    }\n  }\n\n  onCommitRootDevTools(finishedWork.stateNode, renderPriorityLevel);\n\n  if (enableUpdaterTracking) {\n    if (isDevToolsPresent) {\n      root.memoizedUpdaters.clear();\n    }\n  }\n\n  if (__DEV__) {\n    onCommitRootTestSelector();\n  }\n\n  // Always call this before exiting `commitRoot`, to ensure that any\n  // additional work on this root is scheduled.\n  ensureRootIsScheduled(root, now());\n\n  if (recoverableErrors !== null) {\n    // There were errors during this render, but recovered from them without\n    // needing to surface it to the UI. We log them here.\n    const onRecoverableError = root.onRecoverableError;\n    for (let i = 0; i < recoverableErrors.length; i++) {\n      const recoverableError = recoverableErrors[i];\n      const componentStack = recoverableError.stack;\n      const digest = recoverableError.digest;\n      onRecoverableError(recoverableError.value, {componentStack, digest});\n    }\n  }\n\n  if (hasUncaughtError) {\n    hasUncaughtError = false;\n    const error = firstUncaughtError;\n    firstUncaughtError = null;\n    throw error;\n  }\n\n  // If the passive effects are the result of a discrete render, flush them\n  // synchronously at the end of the current task so that the result is\n  // immediately observable. Otherwise, we assume that they are not\n  // order-dependent and do not need to be observed by external systems, so we\n  // can wait until after paint.\n  // TODO: We can optimize this by not scheduling the callback earlier. Since we\n  // currently schedule the callback in multiple places, will wait until those\n  // are consolidated.\n  if (\n    includesSomeLane(pendingPassiveEffectsLanes, SyncLane) &&\n    root.tag !== LegacyRoot\n  ) {\n    flushPassiveEffects();\n  }\n\n  // Read this again, since a passive effect might have updated it\n  remainingLanes = root.pendingLanes;\n  if (includesSomeLane(remainingLanes, (SyncLane: Lane))) {\n    if (enableProfilerTimer && enableProfilerNestedUpdatePhase) {\n      markNestedUpdateScheduled();\n    }\n\n    // Count the number of times the root synchronously re-renders without\n    // finishing. If there are too many, it indicates an infinite update loop.\n    if (root === rootWithNestedUpdates) {\n      nestedUpdateCount++;\n    } else {\n      nestedUpdateCount = 0;\n      rootWithNestedUpdates = root;\n    }\n  } else {\n    nestedUpdateCount = 0;\n  }\n\n  // If layout work was scheduled, flush it now.\n  flushSyncCallbacks();\n\n  if (__DEV__) {\n    if (enableDebugTracing) {\n      logCommitStopped();\n    }\n  }\n\n  if (enableSchedulingProfiler) {\n    markCommitStopped();\n  }\n\n  return null;\n}\n\nfunction releaseRootPooledCache(root: FiberRoot, remainingLanes: Lanes) {\n  if (enableCache) {\n    const pooledCacheLanes = (root.pooledCacheLanes &= remainingLanes);\n    if (pooledCacheLanes === NoLanes) {\n      // None of the remaining work relies on the cache pool. Clear it so\n      // subsequent requests get a new cache\n      const pooledCache = root.pooledCache;\n      if (pooledCache != null) {\n        root.pooledCache = null;\n        releaseCache(pooledCache);\n      }\n    }\n  }\n}\n\nexport function flushPassiveEffects(): boolean {\n  // Returns whether passive effects were flushed.\n  // TODO: Combine this check with the one in flushPassiveEFfectsImpl. We should\n  // probably just combine the two functions. I believe they were only separate\n  // in the first place because we used to wrap it with\n  // `Scheduler.runWithPriority`, which accepts a function. But now we track the\n  // priority within React itself, so we can mutate the variable directly.\n  if (rootWithPendingPassiveEffects !== null) {\n    // Cache the root since rootWithPendingPassiveEffects is cleared in\n    // flushPassiveEffectsImpl\n    const root = rootWithPendingPassiveEffects;\n    // Cache and clear the remaining lanes flag; it must be reset since this\n    // method can be called from various places, not always from commitRoot\n    // where the remaining lanes are known\n    const remainingLanes = pendingPassiveEffectsRemainingLanes;\n    pendingPassiveEffectsRemainingLanes = NoLanes;\n\n    const renderPriority = lanesToEventPriority(pendingPassiveEffectsLanes);\n    const priority = lowerEventPriority(DefaultEventPriority, renderPriority);\n    const prevTransition = ReactCurrentBatchConfig.transition;\n    const previousPriority = getCurrentUpdatePriority();\n\n    try {\n      ReactCurrentBatchConfig.transition = null;\n      setCurrentUpdatePriority(priority);\n      return flushPassiveEffectsImpl();\n    } finally {\n      setCurrentUpdatePriority(previousPriority);\n      ReactCurrentBatchConfig.transition = prevTransition;\n\n      // Once passive effects have run for the tree - giving components a\n      // chance to retain cache instances they use - release the pooled\n      // cache at the root (if there is one)\n      releaseRootPooledCache(root, remainingLanes);\n    }\n  }\n  return false;\n}\n\nexport function enqueuePendingPassiveProfilerEffect(fiber: Fiber): void {\n  if (enableProfilerTimer && enableProfilerCommitHooks) {\n    pendingPassiveProfilerEffects.push(fiber);\n    if (!rootDoesHavePassiveEffects) {\n      rootDoesHavePassiveEffects = true;\n      scheduleCallback(NormalSchedulerPriority, () => {\n        flushPassiveEffects();\n        return null;\n      });\n    }\n  }\n}\n\nfunction flushPassiveEffectsImpl() {\n  if (rootWithPendingPassiveEffects === null) {\n    return false;\n  }\n\n  // Cache and clear the transitions flag\n  const transitions = pendingPassiveTransitions;\n  pendingPassiveTransitions = null;\n\n  const root = rootWithPendingPassiveEffects;\n  const lanes = pendingPassiveEffectsLanes;\n  rootWithPendingPassiveEffects = null;\n  // TODO: This is sometimes out of sync with rootWithPendingPassiveEffects.\n  // Figure out why and fix it. It's not causing any known issues (probably\n  // because it's only used for profiling), but it's a refactor hazard.\n  pendingPassiveEffectsLanes = NoLanes;\n\n  if ((executionContext & (RenderContext | CommitContext)) !== NoContext) {\n    throw new Error('Cannot flush passive effects while already rendering.');\n  }\n\n  if (__DEV__) {\n    isFlushingPassiveEffects = true;\n    didScheduleUpdateDuringPassiveEffects = false;\n\n    if (enableDebugTracing) {\n      logPassiveEffectsStarted(lanes);\n    }\n  }\n\n  if (enableSchedulingProfiler) {\n    markPassiveEffectsStarted(lanes);\n  }\n\n  const prevExecutionContext = executionContext;\n  executionContext |= CommitContext;\n\n  commitPassiveUnmountEffects(root.current);\n  commitPassiveMountEffects(root, root.current, lanes, transitions);\n\n  // TODO: Move to commitPassiveMountEffects\n  if (enableProfilerTimer && enableProfilerCommitHooks) {\n    const profilerEffects = pendingPassiveProfilerEffects;\n    pendingPassiveProfilerEffects = [];\n    for (let i = 0; i < profilerEffects.length; i++) {\n      const fiber = ((profilerEffects[i]: any): Fiber);\n      commitPassiveEffectDurations(root, fiber);\n    }\n  }\n\n  if (__DEV__) {\n    if (enableDebugTracing) {\n      logPassiveEffectsStopped();\n    }\n  }\n\n  if (enableSchedulingProfiler) {\n    markPassiveEffectsStopped();\n  }\n\n  if (__DEV__ && enableStrictEffects) {\n    commitDoubleInvokeEffectsInDEV(root.current, true);\n  }\n\n  executionContext = prevExecutionContext;\n\n  flushSyncCallbacks();\n\n  if (enableTransitionTracing) {\n    const prevPendingTransitionCallbacks = currentPendingTransitionCallbacks;\n    const prevRootTransitionCallbacks = root.transitionCallbacks;\n    if (\n      prevPendingTransitionCallbacks !== null &&\n      prevRootTransitionCallbacks !== null\n    ) {\n      // TODO(luna) Refactor this code into the Host Config\n      // TODO(luna) The end time here is not necessarily accurate\n      // because passive effects could be called before paint\n      // (synchronously) or after paint (normally). We need\n      // to come up with a way to get the correct end time for both cases.\n      // One solution is in the host config, if the passive effects\n      // have not yet been run, make a call to flush the passive effects\n      // right after paint.\n      const endTime = now();\n      currentPendingTransitionCallbacks = null;\n\n      scheduleCallback(IdleSchedulerPriority, () =>\n        processTransitionCallbacks(\n          prevPendingTransitionCallbacks,\n          endTime,\n          prevRootTransitionCallbacks,\n        ),\n      );\n    }\n  }\n\n  if (__DEV__) {\n    // If additional passive effects were scheduled, increment a counter. If this\n    // exceeds the limit, we'll fire a warning.\n    if (didScheduleUpdateDuringPassiveEffects) {\n      if (root === rootWithPassiveNestedUpdates) {\n        nestedPassiveUpdateCount++;\n      } else {\n        nestedPassiveUpdateCount = 0;\n        rootWithPassiveNestedUpdates = root;\n      }\n    } else {\n      nestedPassiveUpdateCount = 0;\n    }\n    isFlushingPassiveEffects = false;\n    didScheduleUpdateDuringPassiveEffects = false;\n  }\n\n  // TODO: Move to commitPassiveMountEffects\n  onPostCommitRootDevTools(root);\n  if (enableProfilerTimer && enableProfilerCommitHooks) {\n    const stateNode = root.current.stateNode;\n    stateNode.effectDuration = 0;\n    stateNode.passiveEffectDuration = 0;\n  }\n\n  return true;\n}\n\nexport function isAlreadyFailedLegacyErrorBoundary(instance: mixed): boolean {\n  return (\n    legacyErrorBoundariesThatAlreadyFailed !== null &&\n    legacyErrorBoundariesThatAlreadyFailed.has(instance)\n  );\n}\n\nexport function markLegacyErrorBoundaryAsFailed(instance: mixed) {\n  if (legacyErrorBoundariesThatAlreadyFailed === null) {\n    legacyErrorBoundariesThatAlreadyFailed = new Set([instance]);\n  } else {\n    legacyErrorBoundariesThatAlreadyFailed.add(instance);\n  }\n}\n\nfunction prepareToThrowUncaughtError(error: mixed) {\n  if (!hasUncaughtError) {\n    hasUncaughtError = true;\n    firstUncaughtError = error;\n  }\n}\nexport const onUncaughtError = prepareToThrowUncaughtError;\n\nfunction captureCommitPhaseErrorOnRoot(\n  rootFiber: Fiber,\n  sourceFiber: Fiber,\n  error: mixed,\n) {\n  const errorInfo = createCapturedValueAtFiber(error, sourceFiber);\n  const update = createRootErrorUpdate(rootFiber, errorInfo, (SyncLane: Lane));\n  const root = enqueueUpdate(rootFiber, update, (SyncLane: Lane));\n  const eventTime = requestEventTime();\n  if (root !== null) {\n    markRootUpdated(root, SyncLane, eventTime);\n    ensureRootIsScheduled(root, eventTime);\n  }\n}\n\nexport function captureCommitPhaseError(\n  sourceFiber: Fiber,\n  nearestMountedAncestor: Fiber | null,\n  error: mixed,\n) {\n  if (__DEV__) {\n    reportUncaughtErrorInDEV(error);\n    setIsRunningInsertionEffect(false);\n  }\n  if (sourceFiber.tag === HostRoot) {\n    // Error was thrown at the root. There is no parent, so the root\n    // itself should capture it.\n    captureCommitPhaseErrorOnRoot(sourceFiber, sourceFiber, error);\n    return;\n  }\n\n  let fiber = null;\n  if (skipUnmountedBoundaries) {\n    fiber = nearestMountedAncestor;\n  } else {\n    fiber = sourceFiber.return;\n  }\n\n  while (fiber !== null) {\n    if (fiber.tag === HostRoot) {\n      captureCommitPhaseErrorOnRoot(fiber, sourceFiber, error);\n      return;\n    } else if (fiber.tag === ClassComponent) {\n      const ctor = fiber.type;\n      const instance = fiber.stateNode;\n      if (\n        typeof ctor.getDerivedStateFromError === 'function' ||\n        (typeof instance.componentDidCatch === 'function' &&\n          !isAlreadyFailedLegacyErrorBoundary(instance))\n      ) {\n        const errorInfo = createCapturedValueAtFiber(error, sourceFiber);\n        const update = createClassErrorUpdate(\n          fiber,\n          errorInfo,\n          (SyncLane: Lane),\n        );\n        const root = enqueueUpdate(fiber, update, (SyncLane: Lane));\n        const eventTime = requestEventTime();\n        if (root !== null) {\n          markRootUpdated(root, SyncLane, eventTime);\n          ensureRootIsScheduled(root, eventTime);\n        }\n        return;\n      }\n    }\n    fiber = fiber.return;\n  }\n\n  if (__DEV__) {\n    // TODO: Until we re-land skipUnmountedBoundaries (see #20147), this warning\n    // will fire for errors that are thrown by destroy functions inside deleted\n    // trees. What it should instead do is propagate the error to the parent of\n    // the deleted tree. In the meantime, do not add this warning to the\n    // allowlist; this is only for our internal use.\n    console.error(\n      'Internal React error: Attempted to capture a commit phase error ' +\n        'inside a detached tree. This indicates a bug in React. Likely ' +\n        'causes include deleting the same fiber more than once, committing an ' +\n        'already-finished tree, or an inconsistent return pointer.\\n\\n' +\n        'Error message:\\n\\n%s',\n      error,\n    );\n  }\n}\n\nexport function pingSuspendedRoot(\n  root: FiberRoot,\n  wakeable: Wakeable,\n  pingedLanes: Lanes,\n) {\n  const pingCache = root.pingCache;\n  if (pingCache !== null) {\n    // The wakeable resolved, so we no longer need to memoize, because it will\n    // never be thrown again.\n    pingCache.delete(wakeable);\n  }\n\n  const eventTime = requestEventTime();\n  markRootPinged(root, pingedLanes, eventTime);\n\n  warnIfSuspenseResolutionNotWrappedWithActDEV(root);\n\n  if (\n    workInProgressRoot === root &&\n    isSubsetOfLanes(workInProgressRootRenderLanes, pingedLanes)\n  ) {\n    // Received a ping at the same priority level at which we're currently\n    // rendering. We might want to restart this render. This should mirror\n    // the logic of whether or not a root suspends once it completes.\n\n    // TODO: If we're rendering sync either due to Sync, Batched or expired,\n    // we should probably never restart.\n\n    // If we're suspended with delay, or if it's a retry, we'll always suspend\n    // so we can always restart.\n    if (\n      workInProgressRootExitStatus === RootSuspendedWithDelay ||\n      (workInProgressRootExitStatus === RootSuspended &&\n        includesOnlyRetries(workInProgressRootRenderLanes) &&\n        now() - globalMostRecentFallbackTime < FALLBACK_THROTTLE_MS)\n    ) {\n      // Restart from the root.\n      prepareFreshStack(root, NoLanes);\n    } else {\n      // Even though we can't restart right now, we might get an\n      // opportunity later. So we mark this render as having a ping.\n      workInProgressRootPingedLanes = mergeLanes(\n        workInProgressRootPingedLanes,\n        pingedLanes,\n      );\n    }\n  }\n\n  ensureRootIsScheduled(root, eventTime);\n}\n\nfunction retryTimedOutBoundary(boundaryFiber: Fiber, retryLane: Lane) {\n  // The boundary fiber (a Suspense component or SuspenseList component)\n  // previously was rendered in its fallback state. One of the promises that\n  // suspended it has resolved, which means at least part of the tree was\n  // likely unblocked. Try rendering again, at a new lanes.\n  if (retryLane === NoLane) {\n    // TODO: Assign this to `suspenseState.retryLane`? to avoid\n    // unnecessary entanglement?\n    retryLane = requestRetryLane(boundaryFiber);\n  }\n  // TODO: Special case idle priority?\n  const eventTime = requestEventTime();\n  const root = enqueueConcurrentRenderForLane(boundaryFiber, retryLane);\n  if (root !== null) {\n    markRootUpdated(root, retryLane, eventTime);\n    ensureRootIsScheduled(root, eventTime);\n  }\n}\n\nexport function retryDehydratedSuspenseBoundary(boundaryFiber: Fiber) {\n  const suspenseState: null | SuspenseState = boundaryFiber.memoizedState;\n  let retryLane = NoLane;\n  if (suspenseState !== null) {\n    retryLane = suspenseState.retryLane;\n  }\n  retryTimedOutBoundary(boundaryFiber, retryLane);\n}\n\nexport function resolveRetryWakeable(boundaryFiber: Fiber, wakeable: Wakeable) {\n  let retryLane = NoLane; // Default\n  let retryCache: WeakSet<Wakeable> | Set<Wakeable> | null;\n  switch (boundaryFiber.tag) {\n    case SuspenseComponent:\n      retryCache = boundaryFiber.stateNode;\n      const suspenseState: null | SuspenseState = boundaryFiber.memoizedState;\n      if (suspenseState !== null) {\n        retryLane = suspenseState.retryLane;\n      }\n      break;\n    case SuspenseListComponent:\n      retryCache = boundaryFiber.stateNode;\n      break;\n    default:\n      throw new Error(\n        'Pinged unknown suspense boundary type. ' +\n          'This is probably a bug in React.',\n      );\n  }\n\n  if (retryCache !== null) {\n    // The wakeable resolved, so we no longer need to memoize, because it will\n    // never be thrown again.\n    retryCache.delete(wakeable);\n  }\n\n  retryTimedOutBoundary(boundaryFiber, retryLane);\n}\n\n// Computes the next Just Noticeable Difference (JND) boundary.\n// The theory is that a person can't tell the difference between small differences in time.\n// Therefore, if we wait a bit longer than necessary that won't translate to a noticeable\n// difference in the experience. However, waiting for longer might mean that we can avoid\n// showing an intermediate loading state. The longer we have already waited, the harder it\n// is to tell small differences in time. Therefore, the longer we've already waited,\n// the longer we can wait additionally. At some point we have to give up though.\n// We pick a train model where the next boundary commits at a consistent schedule.\n// These particular numbers are vague estimates. We expect to adjust them based on research.\nfunction jnd(timeElapsed: number) {\n  return timeElapsed < 120\n    ? 120\n    : timeElapsed < 480\n    ? 480\n    : timeElapsed < 1080\n    ? 1080\n    : timeElapsed < 1920\n    ? 1920\n    : timeElapsed < 3000\n    ? 3000\n    : timeElapsed < 4320\n    ? 4320\n    : ceil(timeElapsed / 1960) * 1960;\n}\n\nfunction checkForNestedUpdates() {\n  if (nestedUpdateCount > NESTED_UPDATE_LIMIT) {\n    nestedUpdateCount = 0;\n    rootWithNestedUpdates = null;\n\n    throw new Error(\n      'Maximum update depth exceeded. This can happen when a component ' +\n        'repeatedly calls setState inside componentWillUpdate or ' +\n        'componentDidUpdate. React limits the number of nested updates to ' +\n        'prevent infinite loops.',\n    );\n  }\n\n  if (__DEV__) {\n    if (nestedPassiveUpdateCount > NESTED_PASSIVE_UPDATE_LIMIT) {\n      nestedPassiveUpdateCount = 0;\n      rootWithPassiveNestedUpdates = null;\n\n      console.error(\n        'Maximum update depth exceeded. This can happen when a component ' +\n          \"calls setState inside useEffect, but useEffect either doesn't \" +\n          'have a dependency array, or one of the dependencies changes on ' +\n          'every render.',\n      );\n    }\n  }\n}\n\nfunction flushRenderPhaseStrictModeWarningsInDEV() {\n  if (__DEV__) {\n    ReactStrictModeWarnings.flushLegacyContextWarning();\n\n    if (warnAboutDeprecatedLifecycles) {\n      ReactStrictModeWarnings.flushPendingUnsafeLifecycleWarnings();\n    }\n  }\n}\n\nfunction commitDoubleInvokeEffectsInDEV(\n  fiber: Fiber,\n  hasPassiveEffects: boolean,\n) {\n  if (__DEV__ && enableStrictEffects) {\n    // TODO (StrictEffects) Should we set a marker on the root if it contains strict effects\n    // so we don't traverse unnecessarily? similar to subtreeFlags but just at the root level.\n    // Maybe not a big deal since this is DEV only behavior.\n\n    setCurrentDebugFiberInDEV(fiber);\n    invokeEffectsInDev(fiber, MountLayoutDev, invokeLayoutEffectUnmountInDEV);\n    if (hasPassiveEffects) {\n      invokeEffectsInDev(\n        fiber,\n        MountPassiveDev,\n        invokePassiveEffectUnmountInDEV,\n      );\n    }\n\n    invokeEffectsInDev(fiber, MountLayoutDev, invokeLayoutEffectMountInDEV);\n    if (hasPassiveEffects) {\n      invokeEffectsInDev(fiber, MountPassiveDev, invokePassiveEffectMountInDEV);\n    }\n    resetCurrentDebugFiberInDEV();\n  }\n}\n\nfunction invokeEffectsInDev(\n  firstChild: Fiber,\n  fiberFlags: Flags,\n  invokeEffectFn: (fiber: Fiber) => void,\n): void {\n  if (__DEV__ && enableStrictEffects) {\n    // We don't need to re-check StrictEffectsMode here.\n    // This function is only called if that check has already passed.\n\n    let current = firstChild;\n    let subtreeRoot = null;\n    while (current !== null) {\n      const primarySubtreeFlag = current.subtreeFlags & fiberFlags;\n      if (\n        current !== subtreeRoot &&\n        current.child !== null &&\n        primarySubtreeFlag !== NoFlags\n      ) {\n        current = current.child;\n      } else {\n        if ((current.flags & fiberFlags) !== NoFlags) {\n          invokeEffectFn(current);\n        }\n\n        if (current.sibling !== null) {\n          current = current.sibling;\n        } else {\n          current = subtreeRoot = current.return;\n        }\n      }\n    }\n  }\n}\n\nlet didWarnStateUpdateForNotYetMountedComponent: Set<string> | null = null;\nexport function warnAboutUpdateOnNotYetMountedFiberInDEV(fiber: Fiber) {\n  if (__DEV__) {\n    if ((executionContext & RenderContext) !== NoContext) {\n      // We let the other warning about render phase updates deal with this one.\n      return;\n    }\n\n    if (!(fiber.mode & ConcurrentMode)) {\n      return;\n    }\n\n    const tag = fiber.tag;\n    if (\n      tag !== IndeterminateComponent &&\n      tag !== HostRoot &&\n      tag !== ClassComponent &&\n      tag !== FunctionComponent &&\n      tag !== ForwardRef &&\n      tag !== MemoComponent &&\n      tag !== SimpleMemoComponent\n    ) {\n      // Only warn for user-defined components, not internal ones like Suspense.\n      return;\n    }\n\n    // We show the whole stack but dedupe on the top component's name because\n    // the problematic code almost always lies inside that component.\n    const componentName = getComponentNameFromFiber(fiber) || 'ReactComponent';\n    if (didWarnStateUpdateForNotYetMountedComponent !== null) {\n      if (didWarnStateUpdateForNotYetMountedComponent.has(componentName)) {\n        return;\n      }\n      didWarnStateUpdateForNotYetMountedComponent.add(componentName);\n    } else {\n      didWarnStateUpdateForNotYetMountedComponent = new Set([componentName]);\n    }\n\n    const previousFiber = ReactCurrentFiberCurrent;\n    try {\n      setCurrentDebugFiberInDEV(fiber);\n      console.error(\n        \"Can't perform a React state update on a component that hasn't mounted yet. \" +\n          'This indicates that you have a side-effect in your render function that ' +\n          'asynchronously later calls tries to update the component. Move this work to ' +\n          'useEffect instead.',\n      );\n    } finally {\n      if (previousFiber) {\n        setCurrentDebugFiberInDEV(fiber);\n      } else {\n        resetCurrentDebugFiberInDEV();\n      }\n    }\n  }\n}\n\nlet beginWork;\nif (__DEV__ && replayFailedUnitOfWorkWithInvokeGuardedCallback) {\n  const dummyFiber = null;\n  beginWork = (current, unitOfWork, lanes) => {\n    // If a component throws an error, we replay it again in a synchronously\n    // dispatched event, so that the debugger will treat it as an uncaught\n    // error See ReactErrorUtils for more information.\n\n    // Before entering the begin phase, copy the work-in-progress onto a dummy\n    // fiber. If beginWork throws, we'll use this to reset the state.\n    const originalWorkInProgressCopy = assignFiberPropertiesInDEV(\n      dummyFiber,\n      unitOfWork,\n    );\n    try {\n      return originalBeginWork(current, unitOfWork, lanes);\n    } catch (originalError) {\n      if (\n        didSuspendOrErrorWhileHydratingDEV() ||\n        (originalError !== null &&\n          typeof originalError === 'object' &&\n          typeof originalError.then === 'function')\n      ) {\n        // Don't replay promises.\n        // Don't replay errors if we are hydrating and have already suspended or handled an error\n        throw originalError;\n      }\n\n      // Keep this code in sync with handleError; any changes here must have\n      // corresponding changes there.\n      resetContextDependencies();\n      resetHooksAfterThrow();\n      // Don't reset current debug fiber, since we're about to work on the\n      // same fiber again.\n\n      // Unwind the failed stack frame\n      unwindInterruptedWork(current, unitOfWork, workInProgressRootRenderLanes);\n\n      // Restore the original properties of the fiber.\n      assignFiberPropertiesInDEV(unitOfWork, originalWorkInProgressCopy);\n\n      if (enableProfilerTimer && unitOfWork.mode & ProfileMode) {\n        // Reset the profiler timer.\n        startProfilerTimer(unitOfWork);\n      }\n\n      // Run beginWork again.\n      invokeGuardedCallback(\n        null,\n        originalBeginWork,\n        null,\n        current,\n        unitOfWork,\n        lanes,\n      );\n\n      if (hasCaughtError()) {\n        const replayError = clearCaughtError();\n        if (\n          typeof replayError === 'object' &&\n          replayError !== null &&\n          replayError._suppressLogging &&\n          typeof originalError === 'object' &&\n          originalError !== null &&\n          !originalError._suppressLogging\n        ) {\n          // If suppressed, let the flag carry over to the original error which is the one we'll rethrow.\n          originalError._suppressLogging = true;\n        }\n      }\n      // We always throw the original error in case the second render pass is not idempotent.\n      // This can happen if a memoized function or CommonJS module doesn't throw after first invocation.\n      throw originalError;\n    }\n  };\n} else {\n  beginWork = originalBeginWork;\n}\n\nlet didWarnAboutUpdateInRender = false;\nlet didWarnAboutUpdateInRenderForAnotherComponent;\nif (__DEV__) {\n  didWarnAboutUpdateInRenderForAnotherComponent = new Set();\n}\n\nfunction warnAboutRenderPhaseUpdatesInDEV(fiber) {\n  if (__DEV__) {\n    if (\n      ReactCurrentDebugFiberIsRenderingInDEV &&\n      !getIsUpdatingOpaqueValueInRenderPhaseInDEV()\n    ) {\n      switch (fiber.tag) {\n        case FunctionComponent:\n        case ForwardRef:\n        case SimpleMemoComponent: {\n          const renderingComponentName =\n            (workInProgress && getComponentNameFromFiber(workInProgress)) ||\n            'Unknown';\n          // Dedupe by the rendering component because it's the one that needs to be fixed.\n          const dedupeKey = renderingComponentName;\n          if (!didWarnAboutUpdateInRenderForAnotherComponent.has(dedupeKey)) {\n            didWarnAboutUpdateInRenderForAnotherComponent.add(dedupeKey);\n            const setStateComponentName =\n              getComponentNameFromFiber(fiber) || 'Unknown';\n            console.error(\n              'Cannot update a component (`%s`) while rendering a ' +\n                'different component (`%s`). To locate the bad setState() call inside `%s`, ' +\n                'follow the stack trace as described in https://reactjs.org/link/setstate-in-render',\n              setStateComponentName,\n              renderingComponentName,\n              renderingComponentName,\n            );\n          }\n          break;\n        }\n        case ClassComponent: {\n          if (!didWarnAboutUpdateInRender) {\n            console.error(\n              'Cannot update during an existing state transition (such as ' +\n                'within `render`). Render methods should be a pure ' +\n                'function of props and state.',\n            );\n            didWarnAboutUpdateInRender = true;\n          }\n          break;\n        }\n      }\n    }\n  }\n}\n\nexport function restorePendingUpdaters(root: FiberRoot, lanes: Lanes): void {\n  if (enableUpdaterTracking) {\n    if (isDevToolsPresent) {\n      const memoizedUpdaters = root.memoizedUpdaters;\n      memoizedUpdaters.forEach(schedulingFiber => {\n        addFiberToLanesMap(root, schedulingFiber, lanes);\n      });\n\n      // This function intentionally does not clear memoized updaters.\n      // Those may still be relevant to the current commit\n      // and a future one (e.g. Suspense).\n    }\n  }\n}\n\nconst fakeActCallbackNode = {};\nfunction scheduleCallback(priorityLevel, callback) {\n  if (__DEV__) {\n    // If we're currently inside an `act` scope, bypass Scheduler and push to\n    // the `act` queue instead.\n    const actQueue = ReactCurrentActQueue.current;\n    if (actQueue !== null) {\n      actQueue.push(callback);\n      return fakeActCallbackNode;\n    } else {\n      return Scheduler_scheduleCallback(priorityLevel, callback);\n    }\n  } else {\n    // In production, always call Scheduler. This function will be stripped out.\n    return Scheduler_scheduleCallback(priorityLevel, callback);\n  }\n}\n\nfunction cancelCallback(callbackNode) {\n  if (__DEV__ && callbackNode === fakeActCallbackNode) {\n    return;\n  }\n  // In production, always call Scheduler. This function will be stripped out.\n  return Scheduler_cancelCallback(callbackNode);\n}\n\nfunction shouldForceFlushFallbacksInDEV() {\n  // Never force flush in production. This function should get stripped out.\n  return __DEV__ && ReactCurrentActQueue.current !== null;\n}\n\nfunction warnIfUpdatesNotWrappedWithActDEV(fiber: Fiber): void {\n  if (__DEV__) {\n    if (fiber.mode & ConcurrentMode) {\n      if (!isConcurrentActEnvironment()) {\n        // Not in an act environment. No need to warn.\n        return;\n      }\n    } else {\n      // Legacy mode has additional cases where we suppress a warning.\n      if (!isLegacyActEnvironment(fiber)) {\n        // Not in an act environment. No need to warn.\n        return;\n      }\n      if (executionContext !== NoContext) {\n        // Legacy mode doesn't warn if the update is batched, i.e.\n        // batchedUpdates or flushSync.\n        return;\n      }\n      if (\n        fiber.tag !== FunctionComponent &&\n        fiber.tag !== ForwardRef &&\n        fiber.tag !== SimpleMemoComponent\n      ) {\n        // For backwards compatibility with pre-hooks code, legacy mode only\n        // warns for updates that originate from a hook.\n        return;\n      }\n    }\n\n    if (ReactCurrentActQueue.current === null) {\n      const previousFiber = ReactCurrentFiberCurrent;\n      try {\n        setCurrentDebugFiberInDEV(fiber);\n        console.error(\n          'An update to %s inside a test was not wrapped in act(...).\\n\\n' +\n            'When testing, code that causes React state updates should be ' +\n            'wrapped into act(...):\\n\\n' +\n            'act(() => {\\n' +\n            '  /* fire events that update state */\\n' +\n            '});\\n' +\n            '/* assert on the output */\\n\\n' +\n            \"This ensures that you're testing the behavior the user would see \" +\n            'in the browser.' +\n            ' Learn more at https://reactjs.org/link/wrap-tests-with-act',\n          getComponentNameFromFiber(fiber),\n        );\n      } finally {\n        if (previousFiber) {\n          setCurrentDebugFiberInDEV(fiber);\n        } else {\n          resetCurrentDebugFiberInDEV();\n        }\n      }\n    }\n  }\n}\n\nfunction warnIfSuspenseResolutionNotWrappedWithActDEV(root: FiberRoot): void {\n  if (__DEV__) {\n    if (\n      root.tag !== LegacyRoot &&\n      isConcurrentActEnvironment() &&\n      ReactCurrentActQueue.current === null\n    ) {\n      console.error(\n        'A suspended resource finished loading inside a test, but the event ' +\n          'was not wrapped in act(...).\\n\\n' +\n          'When testing, code that resolves suspended data should be wrapped ' +\n          'into act(...):\\n\\n' +\n          'act(() => {\\n' +\n          '  /* finish loading suspended data */\\n' +\n          '});\\n' +\n          '/* assert on the output */\\n\\n' +\n          \"This ensures that you're testing the behavior the user would see \" +\n          'in the browser.' +\n          ' Learn more at https://reactjs.org/link/wrap-tests-with-act',\n      );\n    }\n  }\n}\n\nexport function setIsRunningInsertionEffect(isRunning: boolean): void {\n  if (__DEV__) {\n    isRunningInsertionEffect = isRunning;\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\n/* eslint-disable react-internal/prod-error-codes */\n\nimport type {ReactElement} from 'shared/ReactElementType';\nimport type {Fiber} from './ReactInternalTypes';\nimport type {FiberRoot} from './ReactInternalTypes';\nimport type {Instance} from './ReactFiberHostConfig';\nimport type {ReactNodeList} from 'shared/ReactTypes';\n\nimport {\n  flushSync,\n  scheduleUpdateOnFiber,\n  flushPassiveEffects,\n} from './ReactFiberWorkLoop.old';\nimport {enqueueConcurrentRenderForLane} from './ReactFiberConcurrentUpdates.old';\nimport {updateContainer} from './ReactFiberReconciler.old';\nimport {emptyContextObject} from './ReactFiberContext.old';\nimport {SyncLane, NoTimestamp} from './ReactFiberLane.old';\nimport {\n  ClassComponent,\n  FunctionComponent,\n  ForwardRef,\n  HostComponent,\n  HostPortal,\n  HostRoot,\n  MemoComponent,\n  SimpleMemoComponent,\n} from './ReactWorkTags';\nimport {\n  REACT_FORWARD_REF_TYPE,\n  REACT_MEMO_TYPE,\n  REACT_LAZY_TYPE,\n} from 'shared/ReactSymbols';\n\nexport type Family = {|\n  current: any,\n|};\n\nexport type RefreshUpdate = {|\n  staleFamilies: Set<Family>,\n  updatedFamilies: Set<Family>,\n|};\n\n// Resolves type to a family.\ntype RefreshHandler = any => Family | void;\n\n// Used by React Refresh runtime through DevTools Global Hook.\nexport type SetRefreshHandler = (handler: RefreshHandler | null) => void;\nexport type ScheduleRefresh = (root: FiberRoot, update: RefreshUpdate) => void;\nexport type ScheduleRoot = (root: FiberRoot, element: ReactNodeList) => void;\nexport type FindHostInstancesForRefresh = (\n  root: FiberRoot,\n  families: Array<Family>,\n) => Set<Instance>;\n\nlet resolveFamily: RefreshHandler | null = null;\n// $FlowFixMe Flow gets confused by a WeakSet feature check below.\nlet failedBoundaries: WeakSet<Fiber> | null = null;\n\nexport const setRefreshHandler = (handler: RefreshHandler | null): void => {\n  if (__DEV__) {\n    resolveFamily = handler;\n  }\n};\n\nexport function resolveFunctionForHotReloading(type: any): any {\n  if (__DEV__) {\n    if (resolveFamily === null) {\n      // Hot reloading is disabled.\n      return type;\n    }\n    const family = resolveFamily(type);\n    if (family === undefined) {\n      return type;\n    }\n    // Use the latest known implementation.\n    return family.current;\n  } else {\n    return type;\n  }\n}\n\nexport function resolveClassForHotReloading(type: any): any {\n  // No implementation differences.\n  return resolveFunctionForHotReloading(type);\n}\n\nexport function resolveForwardRefForHotReloading(type: any): any {\n  if (__DEV__) {\n    if (resolveFamily === null) {\n      // Hot reloading is disabled.\n      return type;\n    }\n    const family = resolveFamily(type);\n    if (family === undefined) {\n      // Check if we're dealing with a real forwardRef. Don't want to crash early.\n      if (\n        type !== null &&\n        type !== undefined &&\n        typeof type.render === 'function'\n      ) {\n        // ForwardRef is special because its resolved .type is an object,\n        // but it's possible that we only have its inner render function in the map.\n        // If that inner render function is different, we'll build a new forwardRef type.\n        const currentRender = resolveFunctionForHotReloading(type.render);\n        if (type.render !== currentRender) {\n          const syntheticType = {\n            $$typeof: REACT_FORWARD_REF_TYPE,\n            render: currentRender,\n          };\n          if (type.displayName !== undefined) {\n            (syntheticType: any).displayName = type.displayName;\n          }\n          return syntheticType;\n        }\n      }\n      return type;\n    }\n    // Use the latest known implementation.\n    return family.current;\n  } else {\n    return type;\n  }\n}\n\nexport function isCompatibleFamilyForHotReloading(\n  fiber: Fiber,\n  element: ReactElement,\n): boolean {\n  if (__DEV__) {\n    if (resolveFamily === null) {\n      // Hot reloading is disabled.\n      return false;\n    }\n\n    const prevType = fiber.elementType;\n    const nextType = element.type;\n\n    // If we got here, we know types aren't === equal.\n    let needsCompareFamilies = false;\n\n    const $$typeofNextType =\n      typeof nextType === 'object' && nextType !== null\n        ? nextType.$$typeof\n        : null;\n\n    switch (fiber.tag) {\n      case ClassComponent: {\n        if (typeof nextType === 'function') {\n          needsCompareFamilies = true;\n        }\n        break;\n      }\n      case FunctionComponent: {\n        if (typeof nextType === 'function') {\n          needsCompareFamilies = true;\n        } else if ($$typeofNextType === REACT_LAZY_TYPE) {\n          // We don't know the inner type yet.\n          // We're going to assume that the lazy inner type is stable,\n          // and so it is sufficient to avoid reconciling it away.\n          // We're not going to unwrap or actually use the new lazy type.\n          needsCompareFamilies = true;\n        }\n        break;\n      }\n      case ForwardRef: {\n        if ($$typeofNextType === REACT_FORWARD_REF_TYPE) {\n          needsCompareFamilies = true;\n        } else if ($$typeofNextType === REACT_LAZY_TYPE) {\n          needsCompareFamilies = true;\n        }\n        break;\n      }\n      case MemoComponent:\n      case SimpleMemoComponent: {\n        if ($$typeofNextType === REACT_MEMO_TYPE) {\n          // TODO: if it was but can no longer be simple,\n          // we shouldn't set this.\n          needsCompareFamilies = true;\n        } else if ($$typeofNextType === REACT_LAZY_TYPE) {\n          needsCompareFamilies = true;\n        }\n        break;\n      }\n      default:\n        return false;\n    }\n\n    // Check if both types have a family and it's the same one.\n    if (needsCompareFamilies) {\n      // Note: memo() and forwardRef() we'll compare outer rather than inner type.\n      // This means both of them need to be registered to preserve state.\n      // If we unwrapped and compared the inner types for wrappers instead,\n      // then we would risk falsely saying two separate memo(Foo)\n      // calls are equivalent because they wrap the same Foo function.\n      const prevFamily = resolveFamily(prevType);\n      if (prevFamily !== undefined && prevFamily === resolveFamily(nextType)) {\n        return true;\n      }\n    }\n    return false;\n  } else {\n    return false;\n  }\n}\n\nexport function markFailedErrorBoundaryForHotReloading(fiber: Fiber) {\n  if (__DEV__) {\n    if (resolveFamily === null) {\n      // Hot reloading is disabled.\n      return;\n    }\n    if (typeof WeakSet !== 'function') {\n      return;\n    }\n    if (failedBoundaries === null) {\n      failedBoundaries = new WeakSet();\n    }\n    failedBoundaries.add(fiber);\n  }\n}\n\nexport const scheduleRefresh: ScheduleRefresh = (\n  root: FiberRoot,\n  update: RefreshUpdate,\n): void => {\n  if (__DEV__) {\n    if (resolveFamily === null) {\n      // Hot reloading is disabled.\n      return;\n    }\n    const {staleFamilies, updatedFamilies} = update;\n    flushPassiveEffects();\n    flushSync(() => {\n      scheduleFibersWithFamiliesRecursively(\n        root.current,\n        updatedFamilies,\n        staleFamilies,\n      );\n    });\n  }\n};\n\nexport const scheduleRoot: ScheduleRoot = (\n  root: FiberRoot,\n  element: ReactNodeList,\n): void => {\n  if (__DEV__) {\n    if (root.context !== emptyContextObject) {\n      // Super edge case: root has a legacy _renderSubtree context\n      // but we don't know the parentComponent so we can't pass it.\n      // Just ignore. We'll delete this with _renderSubtree code path later.\n      return;\n    }\n    flushPassiveEffects();\n    flushSync(() => {\n      updateContainer(element, root, null, null);\n    });\n  }\n};\n\nfunction scheduleFibersWithFamiliesRecursively(\n  fiber: Fiber,\n  updatedFamilies: Set<Family>,\n  staleFamilies: Set<Family>,\n) {\n  if (__DEV__) {\n    const {alternate, child, sibling, tag, type} = fiber;\n\n    let candidateType = null;\n    switch (tag) {\n      case FunctionComponent:\n      case SimpleMemoComponent:\n      case ClassComponent:\n        candidateType = type;\n        break;\n      case ForwardRef:\n        candidateType = type.render;\n        break;\n      default:\n        break;\n    }\n\n    if (resolveFamily === null) {\n      throw new Error('Expected resolveFamily to be set during hot reload.');\n    }\n\n    let needsRender = false;\n    let needsRemount = false;\n    if (candidateType !== null) {\n      const family = resolveFamily(candidateType);\n      if (family !== undefined) {\n        if (staleFamilies.has(family)) {\n          needsRemount = true;\n        } else if (updatedFamilies.has(family)) {\n          if (tag === ClassComponent) {\n            needsRemount = true;\n          } else {\n            needsRender = true;\n          }\n        }\n      }\n    }\n    if (failedBoundaries !== null) {\n      if (\n        failedBoundaries.has(fiber) ||\n        (alternate !== null && failedBoundaries.has(alternate))\n      ) {\n        needsRemount = true;\n      }\n    }\n\n    if (needsRemount) {\n      fiber._debugNeedsRemount = true;\n    }\n    if (needsRemount || needsRender) {\n      const root = enqueueConcurrentRenderForLane(fiber, SyncLane);\n      if (root !== null) {\n        scheduleUpdateOnFiber(root, fiber, SyncLane, NoTimestamp);\n      }\n    }\n    if (child !== null && !needsRemount) {\n      scheduleFibersWithFamiliesRecursively(\n        child,\n        updatedFamilies,\n        staleFamilies,\n      );\n    }\n    if (sibling !== null) {\n      scheduleFibersWithFamiliesRecursively(\n        sibling,\n        updatedFamilies,\n        staleFamilies,\n      );\n    }\n  }\n}\n\nexport const findHostInstancesForRefresh: FindHostInstancesForRefresh = (\n  root: FiberRoot,\n  families: Array<Family>,\n): Set<Instance> => {\n  if (__DEV__) {\n    const hostInstances = new Set();\n    const types = new Set(families.map(family => family.current));\n    findHostInstancesForMatchingFibersRecursively(\n      root.current,\n      types,\n      hostInstances,\n    );\n    return hostInstances;\n  } else {\n    throw new Error(\n      'Did not expect findHostInstancesForRefresh to be called in production.',\n    );\n  }\n};\n\nfunction findHostInstancesForMatchingFibersRecursively(\n  fiber: Fiber,\n  types: Set<any>,\n  hostInstances: Set<Instance>,\n) {\n  if (__DEV__) {\n    const {child, sibling, tag, type} = fiber;\n\n    let candidateType = null;\n    switch (tag) {\n      case FunctionComponent:\n      case SimpleMemoComponent:\n      case ClassComponent:\n        candidateType = type;\n        break;\n      case ForwardRef:\n        candidateType = type.render;\n        break;\n      default:\n        break;\n    }\n\n    let didMatch = false;\n    if (candidateType !== null) {\n      if (types.has(candidateType)) {\n        didMatch = true;\n      }\n    }\n\n    if (didMatch) {\n      // We have a match. This only drills down to the closest host components.\n      // There's no need to search deeper because for the purpose of giving\n      // visual feedback, \"flashing\" outermost parent rectangles is sufficient.\n      findHostInstancesForFiberShallowly(fiber, hostInstances);\n    } else {\n      // If there's no match, maybe there will be one further down in the child tree.\n      if (child !== null) {\n        findHostInstancesForMatchingFibersRecursively(\n          child,\n          types,\n          hostInstances,\n        );\n      }\n    }\n\n    if (sibling !== null) {\n      findHostInstancesForMatchingFibersRecursively(\n        sibling,\n        types,\n        hostInstances,\n      );\n    }\n  }\n}\n\nfunction findHostInstancesForFiberShallowly(\n  fiber: Fiber,\n  hostInstances: Set<Instance>,\n): void {\n  if (__DEV__) {\n    const foundHostInstances = findChildHostInstancesForFiberShallowly(\n      fiber,\n      hostInstances,\n    );\n    if (foundHostInstances) {\n      return;\n    }\n    // If we didn't find any host children, fallback to closest host parent.\n    let node = fiber;\n    while (true) {\n      switch (node.tag) {\n        case HostComponent:\n          hostInstances.add(node.stateNode);\n          return;\n        case HostPortal:\n          hostInstances.add(node.stateNode.containerInfo);\n          return;\n        case HostRoot:\n          hostInstances.add(node.stateNode.containerInfo);\n          return;\n      }\n      if (node.return === null) {\n        throw new Error('Expected to reach root first.');\n      }\n      node = node.return;\n    }\n  }\n}\n\nfunction findChildHostInstancesForFiberShallowly(\n  fiber: Fiber,\n  hostInstances: Set<Instance>,\n): boolean {\n  if (__DEV__) {\n    let node: Fiber = fiber;\n    let foundHostInstances = false;\n    while (true) {\n      if (node.tag === HostComponent) {\n        // We got a match.\n        foundHostInstances = true;\n        hostInstances.add(node.stateNode);\n        // There may still be more, so keep searching.\n      } else if (node.child !== null) {\n        node.child.return = node;\n        node = node.child;\n        continue;\n      }\n      if (node === fiber) {\n        return foundHostInstances;\n      }\n      while (node.sibling === null) {\n        if (node.return === null || node.return === fiber) {\n          return foundHostInstances;\n        }\n        node = node.return;\n      }\n      node.sibling.return = node.return;\n      node = node.sibling;\n    }\n  }\n  return false;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {ReactElement} from 'shared/ReactElementType';\nimport type {ReactFragment, ReactPortal, ReactScope} from 'shared/ReactTypes';\nimport type {Fiber} from './ReactInternalTypes';\nimport type {RootTag} from './ReactRootTags';\nimport type {WorkTag} from './ReactWorkTags';\nimport type {TypeOfMode} from './ReactTypeOfMode';\nimport type {Lanes} from './ReactFiberLane.old';\nimport type {SuspenseInstance} from './ReactFiberHostConfig';\nimport type {\n  OffscreenProps,\n  OffscreenInstance,\n} from './ReactFiberOffscreenComponent';\n\nimport {\n  createRootStrictEffectsByDefault,\n  enableCache,\n  enableStrictEffects,\n  enableProfilerTimer,\n  enableScopeAPI,\n  enableLegacyHidden,\n  enableSyncDefaultUpdates,\n  allowConcurrentByDefault,\n  enableTransitionTracing,\n  enableDebugTracing,\n} from 'shared/ReactFeatureFlags';\nimport {NoFlags, Placement, StaticMask} from './ReactFiberFlags';\nimport {ConcurrentRoot} from './ReactRootTags';\nimport {\n  IndeterminateComponent,\n  ClassComponent,\n  HostRoot,\n  HostComponent,\n  HostText,\n  HostPortal,\n  ForwardRef,\n  Fragment,\n  Mode,\n  ContextProvider,\n  ContextConsumer,\n  Profiler,\n  SuspenseComponent,\n  SuspenseListComponent,\n  DehydratedFragment,\n  FunctionComponent,\n  MemoComponent,\n  SimpleMemoComponent,\n  LazyComponent,\n  ScopeComponent,\n  OffscreenComponent,\n  LegacyHiddenComponent,\n  CacheComponent,\n  TracingMarkerComponent,\n} from './ReactWorkTags';\nimport getComponentNameFromFiber from 'react-reconciler/src/getComponentNameFromFiber';\n\nimport {isDevToolsPresent} from './ReactFiberDevToolsHook.old';\nimport {\n  resolveClassForHotReloading,\n  resolveFunctionForHotReloading,\n  resolveForwardRefForHotReloading,\n} from './ReactFiberHotReloading.old';\nimport {NoLanes} from './ReactFiberLane.old';\nimport {\n  NoMode,\n  ConcurrentMode,\n  DebugTracingMode,\n  ProfileMode,\n  StrictLegacyMode,\n  StrictEffectsMode,\n  ConcurrentUpdatesByDefaultMode,\n} from './ReactTypeOfMode';\nimport {\n  REACT_FORWARD_REF_TYPE,\n  REACT_FRAGMENT_TYPE,\n  REACT_DEBUG_TRACING_MODE_TYPE,\n  REACT_STRICT_MODE_TYPE,\n  REACT_PROFILER_TYPE,\n  REACT_PROVIDER_TYPE,\n  REACT_CONTEXT_TYPE,\n  REACT_SUSPENSE_TYPE,\n  REACT_SUSPENSE_LIST_TYPE,\n  REACT_MEMO_TYPE,\n  REACT_LAZY_TYPE,\n  REACT_SCOPE_TYPE,\n  REACT_OFFSCREEN_TYPE,\n  REACT_LEGACY_HIDDEN_TYPE,\n  REACT_CACHE_TYPE,\n  REACT_TRACING_MARKER_TYPE,\n} from 'shared/ReactSymbols';\n\nexport type {Fiber};\n\nlet hasBadMapPolyfill;\n\nif (__DEV__) {\n  hasBadMapPolyfill = false;\n  try {\n    const nonExtensibleObject = Object.preventExtensions({});\n    /* eslint-disable no-new */\n    new Map([[nonExtensibleObject, null]]);\n    new Set([nonExtensibleObject]);\n    /* eslint-enable no-new */\n  } catch (e) {\n    // TODO: Consider warning about bad polyfills\n    hasBadMapPolyfill = true;\n  }\n}\n\nfunction FiberNode(\n  tag: WorkTag,\n  pendingProps: mixed,\n  key: null | string,\n  mode: TypeOfMode,\n) {\n  // Instance\n  this.tag = tag;\n  this.key = key;\n  this.elementType = null;\n  this.type = null;\n  this.stateNode = null;\n\n  // Fiber\n  this.return = null;\n  this.child = null;\n  this.sibling = null;\n  this.index = 0;\n\n  this.ref = null;\n\n  this.pendingProps = pendingProps;\n  this.memoizedProps = null;\n  this.updateQueue = null;\n  this.memoizedState = null;\n  this.dependencies = null;\n\n  this.mode = mode;\n\n  // Effects\n  this.flags = NoFlags;\n  this.subtreeFlags = NoFlags;\n  this.deletions = null;\n\n  this.lanes = NoLanes;\n  this.childLanes = NoLanes;\n\n  this.alternate = null;\n\n  if (enableProfilerTimer) {\n    // Note: The following is done to avoid a v8 performance cliff.\n    //\n    // Initializing the fields below to smis and later updating them with\n    // double values will cause Fibers to end up having separate shapes.\n    // This behavior/bug has something to do with Object.preventExtension().\n    // Fortunately this only impacts DEV builds.\n    // Unfortunately it makes React unusably slow for some applications.\n    // To work around this, initialize the fields below with doubles.\n    //\n    // Learn more about this here:\n    // https://github.com/facebook/react/issues/14365\n    // https://bugs.chromium.org/p/v8/issues/detail?id=8538\n    this.actualDuration = Number.NaN;\n    this.actualStartTime = Number.NaN;\n    this.selfBaseDuration = Number.NaN;\n    this.treeBaseDuration = Number.NaN;\n\n    // It's okay to replace the initial doubles with smis after initialization.\n    // This won't trigger the performance cliff mentioned above,\n    // and it simplifies other profiler code (including DevTools).\n    this.actualDuration = 0;\n    this.actualStartTime = -1;\n    this.selfBaseDuration = 0;\n    this.treeBaseDuration = 0;\n  }\n\n  if (__DEV__) {\n    // This isn't directly used but is handy for debugging internals:\n\n    this._debugSource = null;\n    this._debugOwner = null;\n    this._debugNeedsRemount = false;\n    this._debugHookTypes = null;\n    if (!hasBadMapPolyfill && typeof Object.preventExtensions === 'function') {\n      Object.preventExtensions(this);\n    }\n  }\n}\n\n// This is a constructor function, rather than a POJO constructor, still\n// please ensure we do the following:\n// 1) Nobody should add any instance methods on this. Instance methods can be\n//    more difficult to predict when they get optimized and they are almost\n//    never inlined properly in static compilers.\n// 2) Nobody should rely on `instanceof Fiber` for type testing. We should\n//    always know when it is a fiber.\n// 3) We might want to experiment with using numeric keys since they are easier\n//    to optimize in a non-JIT environment.\n// 4) We can easily go from a constructor to a createFiber object literal if that\n//    is faster.\n// 5) It should be easy to port this to a C struct and keep a C implementation\n//    compatible.\nconst createFiber = function(\n  tag: WorkTag,\n  pendingProps: mixed,\n  key: null | string,\n  mode: TypeOfMode,\n): Fiber {\n  // $FlowFixMe: the shapes are exact here but Flow doesn't like constructors\n  return new FiberNode(tag, pendingProps, key, mode);\n};\n\nfunction shouldConstruct(Component: Function) {\n  const prototype = Component.prototype;\n  return !!(prototype && prototype.isReactComponent);\n}\n\nexport function isSimpleFunctionComponent(type: any) {\n  return (\n    typeof type === 'function' &&\n    !shouldConstruct(type) &&\n    type.defaultProps === undefined\n  );\n}\n\nexport function resolveLazyComponentTag(Component: Function): WorkTag {\n  if (typeof Component === 'function') {\n    return shouldConstruct(Component) ? ClassComponent : FunctionComponent;\n  } else if (Component !== undefined && Component !== null) {\n    const $$typeof = Component.$$typeof;\n    if ($$typeof === REACT_FORWARD_REF_TYPE) {\n      return ForwardRef;\n    }\n    if ($$typeof === REACT_MEMO_TYPE) {\n      return MemoComponent;\n    }\n  }\n  return IndeterminateComponent;\n}\n\n// This is used to create an alternate fiber to do work on.\nexport function createWorkInProgress(current: Fiber, pendingProps: any): Fiber {\n  let workInProgress = current.alternate;\n  if (workInProgress === null) {\n    // We use a double buffering pooling technique because we know that we'll\n    // only ever need at most two versions of a tree. We pool the \"other\" unused\n    // node that we're free to reuse. This is lazily created to avoid allocating\n    // extra objects for things that are never updated. It also allow us to\n    // reclaim the extra memory if needed.\n    workInProgress = createFiber(\n      current.tag,\n      pendingProps,\n      current.key,\n      current.mode,\n    );\n    workInProgress.elementType = current.elementType;\n    workInProgress.type = current.type;\n    workInProgress.stateNode = current.stateNode;\n\n    if (__DEV__) {\n      // DEV-only fields\n\n      workInProgress._debugSource = current._debugSource;\n      workInProgress._debugOwner = current._debugOwner;\n      workInProgress._debugHookTypes = current._debugHookTypes;\n    }\n\n    workInProgress.alternate = current;\n    current.alternate = workInProgress;\n  } else {\n    workInProgress.pendingProps = pendingProps;\n    // Needed because Blocks store data on type.\n    workInProgress.type = current.type;\n\n    // We already have an alternate.\n    // Reset the effect tag.\n    workInProgress.flags = NoFlags;\n\n    // The effects are no longer valid.\n    workInProgress.subtreeFlags = NoFlags;\n    workInProgress.deletions = null;\n\n    if (enableProfilerTimer) {\n      // We intentionally reset, rather than copy, actualDuration & actualStartTime.\n      // This prevents time from endlessly accumulating in new commits.\n      // This has the downside of resetting values for different priority renders,\n      // But works for yielding (the common case) and should support resuming.\n      workInProgress.actualDuration = 0;\n      workInProgress.actualStartTime = -1;\n    }\n  }\n\n  // Reset all effects except static ones.\n  // Static effects are not specific to a render.\n  workInProgress.flags = current.flags & StaticMask;\n  workInProgress.childLanes = current.childLanes;\n  workInProgress.lanes = current.lanes;\n\n  workInProgress.child = current.child;\n  workInProgress.memoizedProps = current.memoizedProps;\n  workInProgress.memoizedState = current.memoizedState;\n  workInProgress.updateQueue = current.updateQueue;\n\n  // Clone the dependencies object. This is mutated during the render phase, so\n  // it cannot be shared with the current fiber.\n  const currentDependencies = current.dependencies;\n  workInProgress.dependencies =\n    currentDependencies === null\n      ? null\n      : {\n          lanes: currentDependencies.lanes,\n          firstContext: currentDependencies.firstContext,\n        };\n\n  // These will be overridden during the parent's reconciliation\n  workInProgress.sibling = current.sibling;\n  workInProgress.index = current.index;\n  workInProgress.ref = current.ref;\n\n  if (enableProfilerTimer) {\n    workInProgress.selfBaseDuration = current.selfBaseDuration;\n    workInProgress.treeBaseDuration = current.treeBaseDuration;\n  }\n\n  if (__DEV__) {\n    workInProgress._debugNeedsRemount = current._debugNeedsRemount;\n    switch (workInProgress.tag) {\n      case IndeterminateComponent:\n      case FunctionComponent:\n      case SimpleMemoComponent:\n        workInProgress.type = resolveFunctionForHotReloading(current.type);\n        break;\n      case ClassComponent:\n        workInProgress.type = resolveClassForHotReloading(current.type);\n        break;\n      case ForwardRef:\n        workInProgress.type = resolveForwardRefForHotReloading(current.type);\n        break;\n      default:\n        break;\n    }\n  }\n\n  return workInProgress;\n}\n\n// Used to reuse a Fiber for a second pass.\nexport function resetWorkInProgress(workInProgress: Fiber, renderLanes: Lanes) {\n  // This resets the Fiber to what createFiber or createWorkInProgress would\n  // have set the values to before during the first pass. Ideally this wouldn't\n  // be necessary but unfortunately many code paths reads from the workInProgress\n  // when they should be reading from current and writing to workInProgress.\n\n  // We assume pendingProps, index, key, ref, return are still untouched to\n  // avoid doing another reconciliation.\n\n  // Reset the effect flags but keep any Placement tags, since that's something\n  // that child fiber is setting, not the reconciliation.\n  workInProgress.flags &= StaticMask | Placement;\n\n  // The effects are no longer valid.\n\n  const current = workInProgress.alternate;\n  if (current === null) {\n    // Reset to createFiber's initial values.\n    workInProgress.childLanes = NoLanes;\n    workInProgress.lanes = renderLanes;\n\n    workInProgress.child = null;\n    workInProgress.subtreeFlags = NoFlags;\n    workInProgress.memoizedProps = null;\n    workInProgress.memoizedState = null;\n    workInProgress.updateQueue = null;\n\n    workInProgress.dependencies = null;\n\n    workInProgress.stateNode = null;\n\n    if (enableProfilerTimer) {\n      // Note: We don't reset the actualTime counts. It's useful to accumulate\n      // actual time across multiple render passes.\n      workInProgress.selfBaseDuration = 0;\n      workInProgress.treeBaseDuration = 0;\n    }\n  } else {\n    // Reset to the cloned values that createWorkInProgress would've.\n    workInProgress.childLanes = current.childLanes;\n    workInProgress.lanes = current.lanes;\n\n    workInProgress.child = current.child;\n    workInProgress.subtreeFlags = NoFlags;\n    workInProgress.deletions = null;\n    workInProgress.memoizedProps = current.memoizedProps;\n    workInProgress.memoizedState = current.memoizedState;\n    workInProgress.updateQueue = current.updateQueue;\n    // Needed because Blocks store data on type.\n    workInProgress.type = current.type;\n\n    // Clone the dependencies object. This is mutated during the render phase, so\n    // it cannot be shared with the current fiber.\n    const currentDependencies = current.dependencies;\n    workInProgress.dependencies =\n      currentDependencies === null\n        ? null\n        : {\n            lanes: currentDependencies.lanes,\n            firstContext: currentDependencies.firstContext,\n          };\n\n    if (enableProfilerTimer) {\n      // Note: We don't reset the actualTime counts. It's useful to accumulate\n      // actual time across multiple render passes.\n      workInProgress.selfBaseDuration = current.selfBaseDuration;\n      workInProgress.treeBaseDuration = current.treeBaseDuration;\n    }\n  }\n\n  return workInProgress;\n}\n\nexport function createHostRootFiber(\n  tag: RootTag,\n  isStrictMode: boolean,\n  concurrentUpdatesByDefaultOverride: null | boolean,\n): Fiber {\n  let mode;\n  if (tag === ConcurrentRoot) {\n    mode = ConcurrentMode;\n    if (isStrictMode === true) {\n      mode |= StrictLegacyMode;\n\n      if (enableStrictEffects) {\n        mode |= StrictEffectsMode;\n      }\n    } else if (enableStrictEffects && createRootStrictEffectsByDefault) {\n      mode |= StrictLegacyMode | StrictEffectsMode;\n    }\n    if (\n      // We only use this flag for our repo tests to check both behaviors.\n      // TODO: Flip this flag and rename it something like \"forceConcurrentByDefaultForTesting\"\n      !enableSyncDefaultUpdates ||\n      // Only for internal experiments.\n      (allowConcurrentByDefault && concurrentUpdatesByDefaultOverride)\n    ) {\n      mode |= ConcurrentUpdatesByDefaultMode;\n    }\n  } else {\n    mode = NoMode;\n  }\n\n  if (enableProfilerTimer && isDevToolsPresent) {\n    // Always collect profile timings when DevTools are present.\n    // This enables DevTools to start capturing timing at any point–\n    // Without some nodes in the tree having empty base times.\n    mode |= ProfileMode;\n  }\n\n  return createFiber(HostRoot, null, null, mode);\n}\n\nexport function createFiberFromTypeAndProps(\n  type: any, // React$ElementType\n  key: null | string,\n  pendingProps: any,\n  owner: null | Fiber,\n  mode: TypeOfMode,\n  lanes: Lanes,\n): Fiber {\n  let fiberTag = IndeterminateComponent;\n  // The resolved type is set if we know what the final type will be. I.e. it's not lazy.\n  let resolvedType = type;\n  if (typeof type === 'function') {\n    if (shouldConstruct(type)) {\n      fiberTag = ClassComponent;\n      if (__DEV__) {\n        resolvedType = resolveClassForHotReloading(resolvedType);\n      }\n    } else {\n      if (__DEV__) {\n        resolvedType = resolveFunctionForHotReloading(resolvedType);\n      }\n    }\n  } else if (typeof type === 'string') {\n    fiberTag = HostComponent;\n  } else {\n    getTag: switch (type) {\n      case REACT_FRAGMENT_TYPE:\n        return createFiberFromFragment(pendingProps.children, mode, lanes, key);\n      case REACT_STRICT_MODE_TYPE:\n        fiberTag = Mode;\n        mode |= StrictLegacyMode;\n        if (enableStrictEffects && (mode & ConcurrentMode) !== NoMode) {\n          // Strict effects should never run on legacy roots\n          mode |= StrictEffectsMode;\n        }\n        break;\n      case REACT_PROFILER_TYPE:\n        return createFiberFromProfiler(pendingProps, mode, lanes, key);\n      case REACT_SUSPENSE_TYPE:\n        return createFiberFromSuspense(pendingProps, mode, lanes, key);\n      case REACT_SUSPENSE_LIST_TYPE:\n        return createFiberFromSuspenseList(pendingProps, mode, lanes, key);\n      case REACT_OFFSCREEN_TYPE:\n        return createFiberFromOffscreen(pendingProps, mode, lanes, key);\n      case REACT_LEGACY_HIDDEN_TYPE:\n        if (enableLegacyHidden) {\n          return createFiberFromLegacyHidden(pendingProps, mode, lanes, key);\n        }\n      // eslint-disable-next-line no-fallthrough\n      case REACT_SCOPE_TYPE:\n        if (enableScopeAPI) {\n          return createFiberFromScope(type, pendingProps, mode, lanes, key);\n        }\n      // eslint-disable-next-line no-fallthrough\n      case REACT_CACHE_TYPE:\n        if (enableCache) {\n          return createFiberFromCache(pendingProps, mode, lanes, key);\n        }\n      // eslint-disable-next-line no-fallthrough\n      case REACT_TRACING_MARKER_TYPE:\n        if (enableTransitionTracing) {\n          return createFiberFromTracingMarker(pendingProps, mode, lanes, key);\n        }\n      // eslint-disable-next-line no-fallthrough\n      case REACT_DEBUG_TRACING_MODE_TYPE:\n        if (enableDebugTracing) {\n          fiberTag = Mode;\n          mode |= DebugTracingMode;\n          break;\n        }\n      // eslint-disable-next-line no-fallthrough\n      default: {\n        if (typeof type === 'object' && type !== null) {\n          switch (type.$$typeof) {\n            case REACT_PROVIDER_TYPE:\n              fiberTag = ContextProvider;\n              break getTag;\n            case REACT_CONTEXT_TYPE:\n              // This is a consumer\n              fiberTag = ContextConsumer;\n              break getTag;\n            case REACT_FORWARD_REF_TYPE:\n              fiberTag = ForwardRef;\n              if (__DEV__) {\n                resolvedType = resolveForwardRefForHotReloading(resolvedType);\n              }\n              break getTag;\n            case REACT_MEMO_TYPE:\n              fiberTag = MemoComponent;\n              break getTag;\n            case REACT_LAZY_TYPE:\n              fiberTag = LazyComponent;\n              resolvedType = null;\n              break getTag;\n          }\n        }\n        let info = '';\n        if (__DEV__) {\n          if (\n            type === undefined ||\n            (typeof type === 'object' &&\n              type !== null &&\n              Object.keys(type).length === 0)\n          ) {\n            info +=\n              ' You likely forgot to export your component from the file ' +\n              \"it's defined in, or you might have mixed up default and \" +\n              'named imports.';\n          }\n          const ownerName = owner ? getComponentNameFromFiber(owner) : null;\n          if (ownerName) {\n            info += '\\n\\nCheck the render method of `' + ownerName + '`.';\n          }\n        }\n\n        throw new Error(\n          'Element type is invalid: expected a string (for built-in ' +\n            'components) or a class/function (for composite components) ' +\n            `but got: ${type == null ? type : typeof type}.${info}`,\n        );\n      }\n    }\n  }\n\n  const fiber = createFiber(fiberTag, pendingProps, key, mode);\n  fiber.elementType = type;\n  fiber.type = resolvedType;\n  fiber.lanes = lanes;\n\n  if (__DEV__) {\n    fiber._debugOwner = owner;\n  }\n\n  return fiber;\n}\n\nexport function createFiberFromElement(\n  element: ReactElement,\n  mode: TypeOfMode,\n  lanes: Lanes,\n): Fiber {\n  let owner = null;\n  if (__DEV__) {\n    owner = element._owner;\n  }\n  const type = element.type;\n  const key = element.key;\n  const pendingProps = element.props;\n  const fiber = createFiberFromTypeAndProps(\n    type,\n    key,\n    pendingProps,\n    owner,\n    mode,\n    lanes,\n  );\n  if (__DEV__) {\n    fiber._debugSource = element._source;\n    fiber._debugOwner = element._owner;\n  }\n  return fiber;\n}\n\nexport function createFiberFromFragment(\n  elements: ReactFragment,\n  mode: TypeOfMode,\n  lanes: Lanes,\n  key: null | string,\n): Fiber {\n  const fiber = createFiber(Fragment, elements, key, mode);\n  fiber.lanes = lanes;\n  return fiber;\n}\n\nfunction createFiberFromScope(\n  scope: ReactScope,\n  pendingProps: any,\n  mode: TypeOfMode,\n  lanes: Lanes,\n  key: null | string,\n) {\n  const fiber = createFiber(ScopeComponent, pendingProps, key, mode);\n  fiber.type = scope;\n  fiber.elementType = scope;\n  fiber.lanes = lanes;\n  return fiber;\n}\n\nfunction createFiberFromProfiler(\n  pendingProps: any,\n  mode: TypeOfMode,\n  lanes: Lanes,\n  key: null | string,\n): Fiber {\n  if (__DEV__) {\n    if (typeof pendingProps.id !== 'string') {\n      console.error(\n        'Profiler must specify an \"id\" of type `string` as a prop. Received the type `%s` instead.',\n        typeof pendingProps.id,\n      );\n    }\n  }\n\n  const fiber = createFiber(Profiler, pendingProps, key, mode | ProfileMode);\n  fiber.elementType = REACT_PROFILER_TYPE;\n  fiber.lanes = lanes;\n\n  if (enableProfilerTimer) {\n    fiber.stateNode = {\n      effectDuration: 0,\n      passiveEffectDuration: 0,\n    };\n  }\n\n  return fiber;\n}\n\nexport function createFiberFromSuspense(\n  pendingProps: any,\n  mode: TypeOfMode,\n  lanes: Lanes,\n  key: null | string,\n) {\n  const fiber = createFiber(SuspenseComponent, pendingProps, key, mode);\n  fiber.elementType = REACT_SUSPENSE_TYPE;\n  fiber.lanes = lanes;\n  return fiber;\n}\n\nexport function createFiberFromSuspenseList(\n  pendingProps: any,\n  mode: TypeOfMode,\n  lanes: Lanes,\n  key: null | string,\n) {\n  const fiber = createFiber(SuspenseListComponent, pendingProps, key, mode);\n  fiber.elementType = REACT_SUSPENSE_LIST_TYPE;\n  fiber.lanes = lanes;\n  return fiber;\n}\n\nexport function createFiberFromOffscreen(\n  pendingProps: OffscreenProps,\n  mode: TypeOfMode,\n  lanes: Lanes,\n  key: null | string,\n) {\n  const fiber = createFiber(OffscreenComponent, pendingProps, key, mode);\n  fiber.elementType = REACT_OFFSCREEN_TYPE;\n  fiber.lanes = lanes;\n  const primaryChildInstance: OffscreenInstance = {\n    isHidden: false,\n  };\n  fiber.stateNode = primaryChildInstance;\n  return fiber;\n}\n\nexport function createFiberFromLegacyHidden(\n  pendingProps: OffscreenProps,\n  mode: TypeOfMode,\n  lanes: Lanes,\n  key: null | string,\n) {\n  const fiber = createFiber(LegacyHiddenComponent, pendingProps, key, mode);\n  fiber.elementType = REACT_LEGACY_HIDDEN_TYPE;\n  fiber.lanes = lanes;\n  return fiber;\n}\n\nexport function createFiberFromCache(\n  pendingProps: any,\n  mode: TypeOfMode,\n  lanes: Lanes,\n  key: null | string,\n) {\n  const fiber = createFiber(CacheComponent, pendingProps, key, mode);\n  fiber.elementType = REACT_CACHE_TYPE;\n  fiber.lanes = lanes;\n  return fiber;\n}\n\nexport function createFiberFromTracingMarker(\n  pendingProps: any,\n  mode: TypeOfMode,\n  lanes: Lanes,\n  key: null | string,\n) {\n  const fiber = createFiber(TracingMarkerComponent, pendingProps, key, mode);\n  fiber.elementType = REACT_TRACING_MARKER_TYPE;\n  fiber.lanes = lanes;\n  return fiber;\n}\n\nexport function createFiberFromText(\n  content: string,\n  mode: TypeOfMode,\n  lanes: Lanes,\n): Fiber {\n  const fiber = createFiber(HostText, content, null, mode);\n  fiber.lanes = lanes;\n  return fiber;\n}\n\nexport function createFiberFromHostInstanceForDeletion(): Fiber {\n  const fiber = createFiber(HostComponent, null, null, NoMode);\n  fiber.elementType = 'DELETED';\n  return fiber;\n}\n\nexport function createFiberFromDehydratedFragment(\n  dehydratedNode: SuspenseInstance,\n): Fiber {\n  const fiber = createFiber(DehydratedFragment, null, null, NoMode);\n  fiber.stateNode = dehydratedNode;\n  return fiber;\n}\n\nexport function createFiberFromPortal(\n  portal: ReactPortal,\n  mode: TypeOfMode,\n  lanes: Lanes,\n): Fiber {\n  const pendingProps = portal.children !== null ? portal.children : [];\n  const fiber = createFiber(HostPortal, pendingProps, portal.key, mode);\n  fiber.lanes = lanes;\n  fiber.stateNode = {\n    containerInfo: portal.containerInfo,\n    pendingChildren: null, // Used by persistent updates\n    implementation: portal.implementation,\n  };\n  return fiber;\n}\n\n// Used for stashing WIP properties to replay failed work in DEV.\nexport function assignFiberPropertiesInDEV(\n  target: Fiber | null,\n  source: Fiber,\n): Fiber {\n  if (target === null) {\n    // This Fiber's initial properties will always be overwritten.\n    // We only use a Fiber to ensure the same hidden class so DEV isn't slow.\n    target = createFiber(IndeterminateComponent, null, null, NoMode);\n  }\n\n  // This is intentionally written as a list of all properties.\n  // We tried to use Object.assign() instead but this is called in\n  // the hottest path, and Object.assign() was too slow:\n  // https://github.com/facebook/react/issues/12502\n  // This code is DEV-only so size is not a concern.\n\n  target.tag = source.tag;\n  target.key = source.key;\n  target.elementType = source.elementType;\n  target.type = source.type;\n  target.stateNode = source.stateNode;\n  target.return = source.return;\n  target.child = source.child;\n  target.sibling = source.sibling;\n  target.index = source.index;\n  target.ref = source.ref;\n  target.pendingProps = source.pendingProps;\n  target.memoizedProps = source.memoizedProps;\n  target.updateQueue = source.updateQueue;\n  target.memoizedState = source.memoizedState;\n  target.dependencies = source.dependencies;\n  target.mode = source.mode;\n  target.flags = source.flags;\n  target.subtreeFlags = source.subtreeFlags;\n  target.deletions = source.deletions;\n  target.lanes = source.lanes;\n  target.childLanes = source.childLanes;\n  target.alternate = source.alternate;\n  if (enableProfilerTimer) {\n    target.actualDuration = source.actualDuration;\n    target.actualStartTime = source.actualStartTime;\n    target.selfBaseDuration = source.selfBaseDuration;\n    target.treeBaseDuration = source.treeBaseDuration;\n  }\n\n  target._debugSource = source._debugSource;\n  target._debugOwner = source._debugOwner;\n  target._debugNeedsRemount = source._debugNeedsRemount;\n  target._debugHookTypes = source._debugHookTypes;\n  return target;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {ReactNodeList} from 'shared/ReactTypes';\nimport type {\n  FiberRoot,\n  SuspenseHydrationCallbacks,\n  TransitionTracingCallbacks,\n} from './ReactInternalTypes';\nimport type {RootTag} from './ReactRootTags';\nimport type {Cache} from './ReactFiberCacheComponent.old';\nimport type {\n  PendingSuspenseBoundaries,\n  Transition,\n} from './ReactFiberTracingMarkerComponent.old';\n\nimport {noTimeout, supportsHydration} from './ReactFiberHostConfig';\nimport {createHostRootFiber} from './ReactFiber.old';\nimport {\n  NoLane,\n  NoLanes,\n  NoTimestamp,\n  TotalLanes,\n  createLaneMap,\n} from './ReactFiberLane.old';\nimport {\n  enableSuspenseCallback,\n  enableCache,\n  enableProfilerCommitHooks,\n  enableProfilerTimer,\n  enableUpdaterTracking,\n  enableTransitionTracing,\n} from 'shared/ReactFeatureFlags';\nimport {initializeUpdateQueue} from './ReactFiberClassUpdateQueue.old';\nimport {LegacyRoot, ConcurrentRoot} from './ReactRootTags';\nimport {createCache, retainCache} from './ReactFiberCacheComponent.old';\n\nexport type RootState = {\n  element: any,\n  isDehydrated: boolean,\n  cache: Cache,\n  pendingSuspenseBoundaries: PendingSuspenseBoundaries | null,\n  transitions: Set<Transition> | null,\n};\n\nfunction FiberRootNode(\n  containerInfo,\n  tag,\n  hydrate,\n  identifierPrefix,\n  onRecoverableError,\n) {\n  this.tag = tag;\n  this.containerInfo = containerInfo;\n  this.pendingChildren = null;\n  this.current = null;\n  this.pingCache = null;\n  this.finishedWork = null;\n  this.timeoutHandle = noTimeout;\n  this.context = null;\n  this.pendingContext = null;\n  this.callbackNode = null;\n  this.callbackPriority = NoLane;\n  this.eventTimes = createLaneMap(NoLanes);\n  this.expirationTimes = createLaneMap(NoTimestamp);\n\n  this.pendingLanes = NoLanes;\n  this.suspendedLanes = NoLanes;\n  this.pingedLanes = NoLanes;\n  this.expiredLanes = NoLanes;\n  this.mutableReadLanes = NoLanes;\n  this.finishedLanes = NoLanes;\n\n  this.entangledLanes = NoLanes;\n  this.entanglements = createLaneMap(NoLanes);\n\n  this.identifierPrefix = identifierPrefix;\n  this.onRecoverableError = onRecoverableError;\n\n  if (enableCache) {\n    this.pooledCache = null;\n    this.pooledCacheLanes = NoLanes;\n  }\n\n  if (supportsHydration) {\n    this.mutableSourceEagerHydrationData = null;\n  }\n\n  if (enableSuspenseCallback) {\n    this.hydrationCallbacks = null;\n  }\n\n  if (enableTransitionTracing) {\n    this.transitionCallbacks = null;\n    const transitionLanesMap = (this.transitionLanes = []);\n    for (let i = 0; i < TotalLanes; i++) {\n      transitionLanesMap.push(null);\n    }\n  }\n\n  if (enableProfilerTimer && enableProfilerCommitHooks) {\n    this.effectDuration = 0;\n    this.passiveEffectDuration = 0;\n  }\n\n  if (enableUpdaterTracking) {\n    this.memoizedUpdaters = new Set();\n    const pendingUpdatersLaneMap = (this.pendingUpdatersLaneMap = []);\n    for (let i = 0; i < TotalLanes; i++) {\n      pendingUpdatersLaneMap.push(new Set());\n    }\n  }\n\n  if (__DEV__) {\n    switch (tag) {\n      case ConcurrentRoot:\n        this._debugRootType = hydrate ? 'hydrateRoot()' : 'createRoot()';\n        break;\n      case LegacyRoot:\n        this._debugRootType = hydrate ? 'hydrate()' : 'render()';\n        break;\n    }\n  }\n}\n\nexport function createFiberRoot(\n  containerInfo: any,\n  tag: RootTag,\n  hydrate: boolean,\n  initialChildren: ReactNodeList,\n  hydrationCallbacks: null | SuspenseHydrationCallbacks,\n  isStrictMode: boolean,\n  concurrentUpdatesByDefaultOverride: null | boolean,\n  // TODO: We have several of these arguments that are conceptually part of the\n  // host config, but because they are passed in at runtime, we have to thread\n  // them through the root constructor. Perhaps we should put them all into a\n  // single type, like a DynamicHostConfig that is defined by the renderer.\n  identifierPrefix: string,\n  onRecoverableError: null | ((error: mixed) => void),\n  transitionCallbacks: null | TransitionTracingCallbacks,\n): FiberRoot {\n  const root: FiberRoot = (new FiberRootNode(\n    containerInfo,\n    tag,\n    hydrate,\n    identifierPrefix,\n    onRecoverableError,\n  ): any);\n  if (enableSuspenseCallback) {\n    root.hydrationCallbacks = hydrationCallbacks;\n  }\n\n  if (enableTransitionTracing) {\n    root.transitionCallbacks = transitionCallbacks;\n  }\n\n  // Cyclic construction. This cheats the type system right now because\n  // stateNode is any.\n  const uninitializedFiber = createHostRootFiber(\n    tag,\n    isStrictMode,\n    concurrentUpdatesByDefaultOverride,\n  );\n  root.current = uninitializedFiber;\n  uninitializedFiber.stateNode = root;\n\n  if (enableCache) {\n    const initialCache = createCache();\n    retainCache(initialCache);\n\n    // The pooledCache is a fresh cache instance that is used temporarily\n    // for newly mounted boundaries during a render. In general, the\n    // pooledCache is always cleared from the root at the end of a render:\n    // it is either released when render commits, or moved to an Offscreen\n    // component if rendering suspends. Because the lifetime of the pooled\n    // cache is distinct from the main memoizedState.cache, it must be\n    // retained separately.\n    root.pooledCache = initialCache;\n    retainCache(initialCache);\n    const initialState: RootState = {\n      element: initialChildren,\n      isDehydrated: hydrate,\n      cache: initialCache,\n      transitions: null,\n      pendingSuspenseBoundaries: null,\n    };\n    uninitializedFiber.memoizedState = initialState;\n  } else {\n    const initialState: RootState = {\n      element: initialChildren,\n      isDehydrated: hydrate,\n      cache: (null: any), // not enabled yet\n      transitions: null,\n      pendingSuspenseBoundaries: null,\n    };\n    uninitializedFiber.memoizedState = initialState;\n  }\n\n  initializeUpdateQueue(uninitializedFiber);\n\n  return root;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {\n  Fiber,\n  SuspenseHydrationCallbacks,\n  TransitionTracingCallbacks,\n} from './ReactInternalTypes';\nimport type {FiberRoot} from './ReactInternalTypes';\nimport type {RootTag} from './ReactRootTags';\nimport type {\n  Instance,\n  TextInstance,\n  Container,\n  PublicInstance,\n} from './ReactFiberHostConfig';\nimport type {RendererInspectionConfig} from './ReactFiberHostConfig';\nimport type {ReactNodeList} from 'shared/ReactTypes';\nimport type {Lane} from './ReactFiberLane.old';\nimport type {SuspenseState} from './ReactFiberSuspenseComponent.old';\n\nimport {\n  findCurrentHostFiber,\n  findCurrentHostFiberWithNoPortals,\n} from './ReactFiberTreeReflection';\nimport {get as getInstance} from 'shared/ReactInstanceMap';\nimport {\n  HostComponent,\n  ClassComponent,\n  HostRoot,\n  SuspenseComponent,\n} from './ReactWorkTags';\nimport getComponentNameFromFiber from 'react-reconciler/src/getComponentNameFromFiber';\nimport isArray from 'shared/isArray';\nimport {enableSchedulingProfiler} from 'shared/ReactFeatureFlags';\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\nimport {getPublicInstance} from './ReactFiberHostConfig';\nimport {\n  findCurrentUnmaskedContext,\n  processChildContext,\n  emptyContextObject,\n  isContextProvider as isLegacyContextProvider,\n} from './ReactFiberContext.old';\nimport {createFiberRoot} from './ReactFiberRoot.old';\nimport {isRootDehydrated} from './ReactFiberShellHydration';\nimport {\n  injectInternals,\n  markRenderScheduled,\n  onScheduleRoot,\n} from './ReactFiberDevToolsHook.old';\nimport {\n  requestEventTime,\n  requestUpdateLane,\n  scheduleUpdateOnFiber,\n  scheduleInitialHydrationOnRoot,\n  flushRoot,\n  batchedUpdates,\n  flushSync,\n  isAlreadyRendering,\n  flushControlled,\n  deferredUpdates,\n  discreteUpdates,\n  flushPassiveEffects,\n} from './ReactFiberWorkLoop.old';\nimport {enqueueConcurrentRenderForLane} from './ReactFiberConcurrentUpdates.old';\nimport {\n  createUpdate,\n  enqueueUpdate,\n  entangleTransitions,\n} from './ReactFiberClassUpdateQueue.old';\nimport {\n  isRendering as ReactCurrentFiberIsRendering,\n  current as ReactCurrentFiberCurrent,\n  resetCurrentFiber as resetCurrentDebugFiberInDEV,\n  setCurrentFiber as setCurrentDebugFiberInDEV,\n} from './ReactCurrentFiber';\nimport {StrictLegacyMode} from './ReactTypeOfMode';\nimport {\n  SyncLane,\n  SelectiveHydrationLane,\n  NoTimestamp,\n  getHighestPriorityPendingLanes,\n  higherPriorityLane,\n} from './ReactFiberLane.old';\nimport {\n  getCurrentUpdatePriority,\n  runWithPriority,\n} from './ReactEventPriorities.old';\nimport {\n  scheduleRefresh,\n  scheduleRoot,\n  setRefreshHandler,\n  findHostInstancesForRefresh,\n} from './ReactFiberHotReloading.old';\nimport ReactVersion from 'shared/ReactVersion';\nexport {registerMutableSourceForHydration} from './ReactMutableSource.old';\nexport {createPortal} from './ReactPortal';\nexport {\n  createComponentSelector,\n  createHasPseudoClassSelector,\n  createRoleSelector,\n  createTestNameSelector,\n  createTextSelector,\n  getFindAllNodesFailureDescription,\n  findAllNodes,\n  findBoundingRects,\n  focusWithin,\n  observeVisibleRects,\n} from './ReactTestSelectors';\n\ntype OpaqueRoot = FiberRoot;\n\n// 0 is PROD, 1 is DEV.\n// Might add PROFILE later.\ntype BundleType = 0 | 1;\n\ntype DevToolsConfig = {|\n  bundleType: BundleType,\n  version: string,\n  rendererPackageName: string,\n  // Note: this actually *does* depend on Fiber internal fields.\n  // Used by \"inspect clicked DOM element\" in React DevTools.\n  findFiberByHostInstance?: (instance: Instance | TextInstance) => Fiber | null,\n  rendererConfig?: RendererInspectionConfig,\n|};\n\nlet didWarnAboutNestedUpdates;\nlet didWarnAboutFindNodeInStrictMode;\n\nif (__DEV__) {\n  didWarnAboutNestedUpdates = false;\n  didWarnAboutFindNodeInStrictMode = {};\n}\n\nfunction getContextForSubtree(\n  parentComponent: ?React$Component<any, any>,\n): Object {\n  if (!parentComponent) {\n    return emptyContextObject;\n  }\n\n  const fiber = getInstance(parentComponent);\n  const parentContext = findCurrentUnmaskedContext(fiber);\n\n  if (fiber.tag === ClassComponent) {\n    const Component = fiber.type;\n    if (isLegacyContextProvider(Component)) {\n      return processChildContext(fiber, Component, parentContext);\n    }\n  }\n\n  return parentContext;\n}\n\nfunction findHostInstance(component: Object): PublicInstance | null {\n  const fiber = getInstance(component);\n  if (fiber === undefined) {\n    if (typeof component.render === 'function') {\n      throw new Error('Unable to find node on an unmounted component.');\n    } else {\n      const keys = Object.keys(component).join(',');\n      throw new Error(\n        `Argument appears to not be a ReactComponent. Keys: ${keys}`,\n      );\n    }\n  }\n  const hostFiber = findCurrentHostFiber(fiber);\n  if (hostFiber === null) {\n    return null;\n  }\n  return hostFiber.stateNode;\n}\n\nfunction findHostInstanceWithWarning(\n  component: Object,\n  methodName: string,\n): PublicInstance | null {\n  if (__DEV__) {\n    const fiber = getInstance(component);\n    if (fiber === undefined) {\n      if (typeof component.render === 'function') {\n        throw new Error('Unable to find node on an unmounted component.');\n      } else {\n        const keys = Object.keys(component).join(',');\n        throw new Error(\n          `Argument appears to not be a ReactComponent. Keys: ${keys}`,\n        );\n      }\n    }\n    const hostFiber = findCurrentHostFiber(fiber);\n    if (hostFiber === null) {\n      return null;\n    }\n    if (hostFiber.mode & StrictLegacyMode) {\n      const componentName = getComponentNameFromFiber(fiber) || 'Component';\n      if (!didWarnAboutFindNodeInStrictMode[componentName]) {\n        didWarnAboutFindNodeInStrictMode[componentName] = true;\n\n        const previousFiber = ReactCurrentFiberCurrent;\n        try {\n          setCurrentDebugFiberInDEV(hostFiber);\n          if (fiber.mode & StrictLegacyMode) {\n            console.error(\n              '%s is deprecated in StrictMode. ' +\n                '%s was passed an instance of %s which is inside StrictMode. ' +\n                'Instead, add a ref directly to the element you want to reference. ' +\n                'Learn more about using refs safely here: ' +\n                'https://reactjs.org/link/strict-mode-find-node',\n              methodName,\n              methodName,\n              componentName,\n            );\n          } else {\n            console.error(\n              '%s is deprecated in StrictMode. ' +\n                '%s was passed an instance of %s which renders StrictMode children. ' +\n                'Instead, add a ref directly to the element you want to reference. ' +\n                'Learn more about using refs safely here: ' +\n                'https://reactjs.org/link/strict-mode-find-node',\n              methodName,\n              methodName,\n              componentName,\n            );\n          }\n        } finally {\n          // Ideally this should reset to previous but this shouldn't be called in\n          // render and there's another warning for that anyway.\n          if (previousFiber) {\n            setCurrentDebugFiberInDEV(previousFiber);\n          } else {\n            resetCurrentDebugFiberInDEV();\n          }\n        }\n      }\n    }\n    return hostFiber.stateNode;\n  }\n  return findHostInstance(component);\n}\n\nexport function createContainer(\n  containerInfo: Container,\n  tag: RootTag,\n  hydrationCallbacks: null | SuspenseHydrationCallbacks,\n  isStrictMode: boolean,\n  concurrentUpdatesByDefaultOverride: null | boolean,\n  identifierPrefix: string,\n  onRecoverableError: (error: mixed) => void,\n  transitionCallbacks: null | TransitionTracingCallbacks,\n): OpaqueRoot {\n  const hydrate = false;\n  const initialChildren = null;\n  return createFiberRoot(\n    containerInfo,\n    tag,\n    hydrate,\n    initialChildren,\n    hydrationCallbacks,\n    isStrictMode,\n    concurrentUpdatesByDefaultOverride,\n    identifierPrefix,\n    onRecoverableError,\n    transitionCallbacks,\n  );\n}\n\nexport function createHydrationContainer(\n  initialChildren: ReactNodeList,\n  // TODO: Remove `callback` when we delete legacy mode.\n  callback: ?Function,\n  containerInfo: Container,\n  tag: RootTag,\n  hydrationCallbacks: null | SuspenseHydrationCallbacks,\n  isStrictMode: boolean,\n  concurrentUpdatesByDefaultOverride: null | boolean,\n  identifierPrefix: string,\n  onRecoverableError: (error: mixed) => void,\n  transitionCallbacks: null | TransitionTracingCallbacks,\n): OpaqueRoot {\n  const hydrate = true;\n  const root = createFiberRoot(\n    containerInfo,\n    tag,\n    hydrate,\n    initialChildren,\n    hydrationCallbacks,\n    isStrictMode,\n    concurrentUpdatesByDefaultOverride,\n    identifierPrefix,\n    onRecoverableError,\n    transitionCallbacks,\n  );\n\n  // TODO: Move this to FiberRoot constructor\n  root.context = getContextForSubtree(null);\n\n  // Schedule the initial render. In a hydration root, this is different from\n  // a regular update because the initial render must match was was rendered\n  // on the server.\n  // NOTE: This update intentionally doesn't have a payload. We're only using\n  // the update to schedule work on the root fiber (and, for legacy roots, to\n  // enqueue the callback if one is provided).\n  const current = root.current;\n  const eventTime = requestEventTime();\n  const lane = requestUpdateLane(current);\n  const update = createUpdate(eventTime, lane);\n  update.callback =\n    callback !== undefined && callback !== null ? callback : null;\n  enqueueUpdate(current, update, lane);\n  scheduleInitialHydrationOnRoot(root, lane, eventTime);\n\n  return root;\n}\n\nexport function updateContainer(\n  element: ReactNodeList,\n  container: OpaqueRoot,\n  parentComponent: ?React$Component<any, any>,\n  callback: ?Function,\n): Lane {\n  if (__DEV__) {\n    onScheduleRoot(container, element);\n  }\n  const current = container.current;\n  const eventTime = requestEventTime();\n  const lane = requestUpdateLane(current);\n\n  if (enableSchedulingProfiler) {\n    markRenderScheduled(lane);\n  }\n\n  const context = getContextForSubtree(parentComponent);\n  if (container.context === null) {\n    container.context = context;\n  } else {\n    container.pendingContext = context;\n  }\n\n  if (__DEV__) {\n    if (\n      ReactCurrentFiberIsRendering &&\n      ReactCurrentFiberCurrent !== null &&\n      !didWarnAboutNestedUpdates\n    ) {\n      didWarnAboutNestedUpdates = true;\n      console.error(\n        'Render methods should be a pure function of props and state; ' +\n          'triggering nested component updates from render is not allowed. ' +\n          'If necessary, trigger nested updates in componentDidUpdate.\\n\\n' +\n          'Check the render method of %s.',\n        getComponentNameFromFiber(ReactCurrentFiberCurrent) || 'Unknown',\n      );\n    }\n  }\n\n  const update = createUpdate(eventTime, lane);\n  // Caution: React DevTools currently depends on this property\n  // being called \"element\".\n  update.payload = {element};\n\n  callback = callback === undefined ? null : callback;\n  if (callback !== null) {\n    if (__DEV__) {\n      if (typeof callback !== 'function') {\n        console.error(\n          'render(...): Expected the last optional `callback` argument to be a ' +\n            'function. Instead received: %s.',\n          callback,\n        );\n      }\n    }\n    update.callback = callback;\n  }\n\n  const root = enqueueUpdate(current, update, lane);\n  if (root !== null) {\n    scheduleUpdateOnFiber(root, current, lane, eventTime);\n    entangleTransitions(root, current, lane);\n  }\n\n  return lane;\n}\n\nexport {\n  batchedUpdates,\n  deferredUpdates,\n  discreteUpdates,\n  flushControlled,\n  flushSync,\n  isAlreadyRendering,\n  flushPassiveEffects,\n};\n\nexport function getPublicRootInstance(\n  container: OpaqueRoot,\n): React$Component<any, any> | PublicInstance | null {\n  const containerFiber = container.current;\n  if (!containerFiber.child) {\n    return null;\n  }\n  switch (containerFiber.child.tag) {\n    case HostComponent:\n      return getPublicInstance(containerFiber.child.stateNode);\n    default:\n      return containerFiber.child.stateNode;\n  }\n}\n\nexport function attemptSynchronousHydration(fiber: Fiber): void {\n  switch (fiber.tag) {\n    case HostRoot: {\n      const root: FiberRoot = fiber.stateNode;\n      if (isRootDehydrated(root)) {\n        // Flush the first scheduled \"update\".\n        const lanes = getHighestPriorityPendingLanes(root);\n        flushRoot(root, lanes);\n      }\n      break;\n    }\n    case SuspenseComponent: {\n      flushSync(() => {\n        const root = enqueueConcurrentRenderForLane(fiber, SyncLane);\n        if (root !== null) {\n          const eventTime = requestEventTime();\n          scheduleUpdateOnFiber(root, fiber, SyncLane, eventTime);\n        }\n      });\n      // If we're still blocked after this, we need to increase\n      // the priority of any promises resolving within this\n      // boundary so that they next attempt also has higher pri.\n      const retryLane = SyncLane;\n      markRetryLaneIfNotHydrated(fiber, retryLane);\n      break;\n    }\n  }\n}\n\nfunction markRetryLaneImpl(fiber: Fiber, retryLane: Lane) {\n  const suspenseState: null | SuspenseState = fiber.memoizedState;\n  if (suspenseState !== null && suspenseState.dehydrated !== null) {\n    suspenseState.retryLane = higherPriorityLane(\n      suspenseState.retryLane,\n      retryLane,\n    );\n  }\n}\n\n// Increases the priority of thenables when they resolve within this boundary.\nfunction markRetryLaneIfNotHydrated(fiber: Fiber, retryLane: Lane) {\n  markRetryLaneImpl(fiber, retryLane);\n  const alternate = fiber.alternate;\n  if (alternate) {\n    markRetryLaneImpl(alternate, retryLane);\n  }\n}\n\nexport function attemptDiscreteHydration(fiber: Fiber): void {\n  if (fiber.tag !== SuspenseComponent) {\n    // We ignore HostRoots here because we can't increase\n    // their priority and they should not suspend on I/O,\n    // since you have to wrap anything that might suspend in\n    // Suspense.\n    return;\n  }\n  const lane = SyncLane;\n  const root = enqueueConcurrentRenderForLane(fiber, lane);\n  if (root !== null) {\n    const eventTime = requestEventTime();\n    scheduleUpdateOnFiber(root, fiber, lane, eventTime);\n  }\n  markRetryLaneIfNotHydrated(fiber, lane);\n}\n\nexport function attemptContinuousHydration(fiber: Fiber): void {\n  if (fiber.tag !== SuspenseComponent) {\n    // We ignore HostRoots here because we can't increase\n    // their priority and they should not suspend on I/O,\n    // since you have to wrap anything that might suspend in\n    // Suspense.\n    return;\n  }\n  const lane = SelectiveHydrationLane;\n  const root = enqueueConcurrentRenderForLane(fiber, lane);\n  if (root !== null) {\n    const eventTime = requestEventTime();\n    scheduleUpdateOnFiber(root, fiber, lane, eventTime);\n  }\n  markRetryLaneIfNotHydrated(fiber, lane);\n}\n\nexport function attemptHydrationAtCurrentPriority(fiber: Fiber): void {\n  if (fiber.tag !== SuspenseComponent) {\n    // We ignore HostRoots here because we can't increase\n    // their priority other than synchronously flush it.\n    return;\n  }\n  const lane = requestUpdateLane(fiber);\n  const root = enqueueConcurrentRenderForLane(fiber, lane);\n  if (root !== null) {\n    const eventTime = requestEventTime();\n    scheduleUpdateOnFiber(root, fiber, lane, eventTime);\n  }\n  markRetryLaneIfNotHydrated(fiber, lane);\n}\n\nexport {getCurrentUpdatePriority, runWithPriority};\n\nexport {findHostInstance};\n\nexport {findHostInstanceWithWarning};\n\nexport function findHostInstanceWithNoPortals(\n  fiber: Fiber,\n): PublicInstance | null {\n  const hostFiber = findCurrentHostFiberWithNoPortals(fiber);\n  if (hostFiber === null) {\n    return null;\n  }\n  return hostFiber.stateNode;\n}\n\nlet shouldErrorImpl = fiber => null;\n\nexport function shouldError(fiber: Fiber): ?boolean {\n  return shouldErrorImpl(fiber);\n}\n\nlet shouldSuspendImpl = fiber => false;\n\nexport function shouldSuspend(fiber: Fiber): boolean {\n  return shouldSuspendImpl(fiber);\n}\n\nlet overrideHookState = null;\nlet overrideHookStateDeletePath = null;\nlet overrideHookStateRenamePath = null;\nlet overrideProps = null;\nlet overridePropsDeletePath = null;\nlet overridePropsRenamePath = null;\nlet scheduleUpdate = null;\nlet setErrorHandler = null;\nlet setSuspenseHandler = null;\n\nif (__DEV__) {\n  const copyWithDeleteImpl = (\n    obj: Object | Array<any>,\n    path: Array<string | number>,\n    index: number,\n  ) => {\n    const key = path[index];\n    const updated = isArray(obj) ? obj.slice() : {...obj};\n    if (index + 1 === path.length) {\n      if (isArray(updated)) {\n        updated.splice(((key: any): number), 1);\n      } else {\n        delete updated[key];\n      }\n      return updated;\n    }\n    // $FlowFixMe number or string is fine here\n    updated[key] = copyWithDeleteImpl(obj[key], path, index + 1);\n    return updated;\n  };\n\n  const copyWithDelete = (\n    obj: Object | Array<any>,\n    path: Array<string | number>,\n  ): Object | Array<any> => {\n    return copyWithDeleteImpl(obj, path, 0);\n  };\n\n  const copyWithRenameImpl = (\n    obj: Object | Array<any>,\n    oldPath: Array<string | number>,\n    newPath: Array<string | number>,\n    index: number,\n  ) => {\n    const oldKey = oldPath[index];\n    const updated = isArray(obj) ? obj.slice() : {...obj};\n    if (index + 1 === oldPath.length) {\n      const newKey = newPath[index];\n      // $FlowFixMe number or string is fine here\n      updated[newKey] = updated[oldKey];\n      if (isArray(updated)) {\n        updated.splice(((oldKey: any): number), 1);\n      } else {\n        delete updated[oldKey];\n      }\n    } else {\n      // $FlowFixMe number or string is fine here\n      updated[oldKey] = copyWithRenameImpl(\n        // $FlowFixMe number or string is fine here\n        obj[oldKey],\n        oldPath,\n        newPath,\n        index + 1,\n      );\n    }\n    return updated;\n  };\n\n  const copyWithRename = (\n    obj: Object | Array<any>,\n    oldPath: Array<string | number>,\n    newPath: Array<string | number>,\n  ): Object | Array<any> => {\n    if (oldPath.length !== newPath.length) {\n      console.warn('copyWithRename() expects paths of the same length');\n      return;\n    } else {\n      for (let i = 0; i < newPath.length - 1; i++) {\n        if (oldPath[i] !== newPath[i]) {\n          console.warn(\n            'copyWithRename() expects paths to be the same except for the deepest key',\n          );\n          return;\n        }\n      }\n    }\n    return copyWithRenameImpl(obj, oldPath, newPath, 0);\n  };\n\n  const copyWithSetImpl = (\n    obj: Object | Array<any>,\n    path: Array<string | number>,\n    index: number,\n    value: any,\n  ) => {\n    if (index >= path.length) {\n      return value;\n    }\n    const key = path[index];\n    const updated = isArray(obj) ? obj.slice() : {...obj};\n    // $FlowFixMe number or string is fine here\n    updated[key] = copyWithSetImpl(obj[key], path, index + 1, value);\n    return updated;\n  };\n\n  const copyWithSet = (\n    obj: Object | Array<any>,\n    path: Array<string | number>,\n    value: any,\n  ): Object | Array<any> => {\n    return copyWithSetImpl(obj, path, 0, value);\n  };\n\n  const findHook = (fiber: Fiber, id: number) => {\n    // For now, the \"id\" of stateful hooks is just the stateful hook index.\n    // This may change in the future with e.g. nested hooks.\n    let currentHook = fiber.memoizedState;\n    while (currentHook !== null && id > 0) {\n      currentHook = currentHook.next;\n      id--;\n    }\n    return currentHook;\n  };\n\n  // Support DevTools editable values for useState and useReducer.\n  overrideHookState = (\n    fiber: Fiber,\n    id: number,\n    path: Array<string | number>,\n    value: any,\n  ) => {\n    const hook = findHook(fiber, id);\n    if (hook !== null) {\n      const newState = copyWithSet(hook.memoizedState, path, value);\n      hook.memoizedState = newState;\n      hook.baseState = newState;\n\n      // We aren't actually adding an update to the queue,\n      // because there is no update we can add for useReducer hooks that won't trigger an error.\n      // (There's no appropriate action type for DevTools overrides.)\n      // As a result though, React will see the scheduled update as a noop and bailout.\n      // Shallow cloning props works as a workaround for now to bypass the bailout check.\n      fiber.memoizedProps = {...fiber.memoizedProps};\n\n      const root = enqueueConcurrentRenderForLane(fiber, SyncLane);\n      if (root !== null) {\n        scheduleUpdateOnFiber(root, fiber, SyncLane, NoTimestamp);\n      }\n    }\n  };\n  overrideHookStateDeletePath = (\n    fiber: Fiber,\n    id: number,\n    path: Array<string | number>,\n  ) => {\n    const hook = findHook(fiber, id);\n    if (hook !== null) {\n      const newState = copyWithDelete(hook.memoizedState, path);\n      hook.memoizedState = newState;\n      hook.baseState = newState;\n\n      // We aren't actually adding an update to the queue,\n      // because there is no update we can add for useReducer hooks that won't trigger an error.\n      // (There's no appropriate action type for DevTools overrides.)\n      // As a result though, React will see the scheduled update as a noop and bailout.\n      // Shallow cloning props works as a workaround for now to bypass the bailout check.\n      fiber.memoizedProps = {...fiber.memoizedProps};\n\n      const root = enqueueConcurrentRenderForLane(fiber, SyncLane);\n      if (root !== null) {\n        scheduleUpdateOnFiber(root, fiber, SyncLane, NoTimestamp);\n      }\n    }\n  };\n  overrideHookStateRenamePath = (\n    fiber: Fiber,\n    id: number,\n    oldPath: Array<string | number>,\n    newPath: Array<string | number>,\n  ) => {\n    const hook = findHook(fiber, id);\n    if (hook !== null) {\n      const newState = copyWithRename(hook.memoizedState, oldPath, newPath);\n      hook.memoizedState = newState;\n      hook.baseState = newState;\n\n      // We aren't actually adding an update to the queue,\n      // because there is no update we can add for useReducer hooks that won't trigger an error.\n      // (There's no appropriate action type for DevTools overrides.)\n      // As a result though, React will see the scheduled update as a noop and bailout.\n      // Shallow cloning props works as a workaround for now to bypass the bailout check.\n      fiber.memoizedProps = {...fiber.memoizedProps};\n\n      const root = enqueueConcurrentRenderForLane(fiber, SyncLane);\n      if (root !== null) {\n        scheduleUpdateOnFiber(root, fiber, SyncLane, NoTimestamp);\n      }\n    }\n  };\n\n  // Support DevTools props for function components, forwardRef, memo, host components, etc.\n  overrideProps = (fiber: Fiber, path: Array<string | number>, value: any) => {\n    fiber.pendingProps = copyWithSet(fiber.memoizedProps, path, value);\n    if (fiber.alternate) {\n      fiber.alternate.pendingProps = fiber.pendingProps;\n    }\n    const root = enqueueConcurrentRenderForLane(fiber, SyncLane);\n    if (root !== null) {\n      scheduleUpdateOnFiber(root, fiber, SyncLane, NoTimestamp);\n    }\n  };\n  overridePropsDeletePath = (fiber: Fiber, path: Array<string | number>) => {\n    fiber.pendingProps = copyWithDelete(fiber.memoizedProps, path);\n    if (fiber.alternate) {\n      fiber.alternate.pendingProps = fiber.pendingProps;\n    }\n    const root = enqueueConcurrentRenderForLane(fiber, SyncLane);\n    if (root !== null) {\n      scheduleUpdateOnFiber(root, fiber, SyncLane, NoTimestamp);\n    }\n  };\n  overridePropsRenamePath = (\n    fiber: Fiber,\n    oldPath: Array<string | number>,\n    newPath: Array<string | number>,\n  ) => {\n    fiber.pendingProps = copyWithRename(fiber.memoizedProps, oldPath, newPath);\n    if (fiber.alternate) {\n      fiber.alternate.pendingProps = fiber.pendingProps;\n    }\n    const root = enqueueConcurrentRenderForLane(fiber, SyncLane);\n    if (root !== null) {\n      scheduleUpdateOnFiber(root, fiber, SyncLane, NoTimestamp);\n    }\n  };\n\n  scheduleUpdate = (fiber: Fiber) => {\n    const root = enqueueConcurrentRenderForLane(fiber, SyncLane);\n    if (root !== null) {\n      scheduleUpdateOnFiber(root, fiber, SyncLane, NoTimestamp);\n    }\n  };\n\n  setErrorHandler = (newShouldErrorImpl: Fiber => ?boolean) => {\n    shouldErrorImpl = newShouldErrorImpl;\n  };\n\n  setSuspenseHandler = (newShouldSuspendImpl: Fiber => boolean) => {\n    shouldSuspendImpl = newShouldSuspendImpl;\n  };\n}\n\nfunction findHostInstanceByFiber(fiber: Fiber): Instance | TextInstance | null {\n  const hostFiber = findCurrentHostFiber(fiber);\n  if (hostFiber === null) {\n    return null;\n  }\n  return hostFiber.stateNode;\n}\n\nfunction emptyFindFiberByHostInstance(\n  instance: Instance | TextInstance,\n): Fiber | null {\n  return null;\n}\n\nfunction getCurrentFiberForDevTools() {\n  return ReactCurrentFiberCurrent;\n}\n\nexport function injectIntoDevTools(devToolsConfig: DevToolsConfig): boolean {\n  const {findFiberByHostInstance} = devToolsConfig;\n  const {ReactCurrentDispatcher} = ReactSharedInternals;\n\n  return injectInternals({\n    bundleType: devToolsConfig.bundleType,\n    version: devToolsConfig.version,\n    rendererPackageName: devToolsConfig.rendererPackageName,\n    rendererConfig: devToolsConfig.rendererConfig,\n    overrideHookState,\n    overrideHookStateDeletePath,\n    overrideHookStateRenamePath,\n    overrideProps,\n    overridePropsDeletePath,\n    overridePropsRenamePath,\n    setErrorHandler,\n    setSuspenseHandler,\n    scheduleUpdate,\n    currentDispatcherRef: ReactCurrentDispatcher,\n    findHostInstanceByFiber,\n    findFiberByHostInstance:\n      findFiberByHostInstance || emptyFindFiberByHostInstance,\n    // React Refresh\n    findHostInstancesForRefresh: __DEV__ ? findHostInstancesForRefresh : null,\n    scheduleRefresh: __DEV__ ? scheduleRefresh : null,\n    scheduleRoot: __DEV__ ? scheduleRoot : null,\n    setRefreshHandler: __DEV__ ? setRefreshHandler : null,\n    // Enables DevTools to append owner stacks to error messages in DEV mode.\n    getCurrentFiber: __DEV__ ? getCurrentFiberForDevTools : null,\n    // Enables DevTools to detect reconciler version rather than renderer version\n    // which may not match for third party renderers.\n    reconcilerVersion: ReactVersion,\n  });\n}\n","var Class = require('../core/class');\n\nmodule.exports = Class({\n\n\tgrab: function(){\n\t\tfor (var i = 0; i < arguments.length; i++) arguments[i].inject(this);\n\t\treturn this;\n\t},\n\n\tempty: function(){\n\t\tvar node;\n\t\twhile (node = this.firstChild) node.eject();\n\t\treturn this;\n\t}\n\n});","var Class = require('../core/class');\n\nfunction elementFrom(node){\n\tif (node.toElement) return node.toElement();\n\tif (node.getDOMNode) return node.getDOMNode();\n\tif (node.getNode) return node.getNode();\n\treturn node;\n}\n\nmodule.exports = Class({\n\n\t// conventions\n\n\ttoElement: function(){\n\t\treturn this.element;\n\t},\n\n\tgetDOMNode: function(){\n\t\treturn this.toElement();\n\t},\n\n\tgetNode: function(){\n\t\treturn this.toElement();\n\t},\n\n\t// placement\n\n\tinject: function(container){\n\t\t(container.containerElement || elementFrom(container))\n\t\t\t.appendChild(this.element);\n\t\treturn this;\n\t},\n\n\tinjectBefore: function(sibling){\n\t\tvar element = elementFrom(sibling);\n\t\telement.parentNode.insertBefore(this.element, element);\n\t\treturn this;\n\t},\n\n\teject: function(){\n\t\tvar element = this.element, parent = element.parentNode;\n\t\tif (parent) parent.removeChild(element); // TODO: VML Nodes are dead after being ejected\n\t\treturn this;\n\t},\n\n\t// events\n\n\tsubscribe: function(type, fn, bind){\n\t\tif (typeof type != 'string'){ // listen type / fn with object\n\t\t\tvar subscriptions = [];\n\t\t\tfor (var t in type) subscriptions.push(this.subscribe(t, type[t]));\n\t\t\treturn function(){ // unsubscribe\n\t\t\t\tfor (var i = 0, l = subscriptions.length; i < l; i++)\n\t\t\t\t\tsubscriptions[i]();\n\t\t\t\treturn this;\n\t\t\t};\n\t\t} else { // listen to one\n\t\t\tif (!bind) bind = this;\n\t\t\tvar bound;\n\t\t\tif (typeof fn === 'function'){\n\t\t\t\tbound = fn.bind ? fn.bind(bind)\n\t\t\t\t\t: function(){ return fn.apply(bind, arguments); };\n\t\t\t} else {\n\t\t\t\tbound = fn;\n\t\t\t}\n\t\t\tvar element = this.element;\n\t\t\tif (element.addEventListener){\n\t\t\t\telement.addEventListener(type, bound, false);\n\t\t\t\treturn function(){ // unsubscribe\n\t\t\t\t\telement.removeEventListener(type, bound, false);\n\t\t\t\t\treturn this;\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\telement.attachEvent('on' + type, bound);\n\t\t\t\treturn function(){ // unsubscribe\n\t\t\t\t\telement.detachEvent('on' + type, bound);\n\t\t\t\t\treturn this;\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t}\n\n});\n","var Class = require('../../core/class');\nvar Container = require('../../dom/container');\nvar Element = require('../../dom/native');\n\nvar fps = 1000 / 60, invalids = [], renderTimer, renderInvalids = function(){\n\tclearTimeout(renderTimer);\n\trenderTimer = null;\n\tvar canvases = invalids;\n\tinvalids = [];\n\tfor (var i = 0, l = canvases.length; i < l; i++){\n\t\tvar c = canvases[i];\n\t\tc._valid = true;\n\t\tc.render();\n\t}\n};\n\nvar resolution = typeof window !== 'undefined' && window.devicePixelRatio || 1;\n\nvar previousHit = null, previousHitSurface = null;\n\nvar CanvasSurface = Class(Element, Container, {\n\n\tinitialize: function(width, height, existingElement){\n\t\tvar element = this.element = existingElement || document.createElement('canvas');\n\t\tvar context = this.context = element.getContext('2d');\n\t\tthis._valid = true;\n\t\tif (width != null && height != null) this.resize(width, height);\n\n\t\telement.addEventListener('mousemove', this, false);\n\t\telement.addEventListener('mouseout', this, false);\n\t\telement.addEventListener('mouseover', this, false);\n\t\telement.addEventListener('mouseup', this, false);\n\t\telement.addEventListener('mousedown', this, false);\n\t\telement.addEventListener('click', this, false);\n\t},\n\n\thandleEvent: function(event){\n\t\tif (event.clientX == null) return;\n\t\tvar element = this.element,\n\t\t\trect = element.getBoundingClientRect(),\n\t\t\tx = event.clientX - rect.left - element.clientLeft,\n\t\t\ty = event.clientY - rect.top - element.clientTop,\n\t\t\thit = this.hitTest(x, y);\n\n\t\tif (hit !== previousHit){\n\t\t\tif (previousHit){\n\t\t\t\tpreviousHit.dispatch({\n\t\t\t\t\ttype: 'mouseout',\n\t\t\t\t\ttarget: previousHit,\n\t\t\t\t\trelatedTarget: hit,\n\t\t\t\t\tsourceEvent: event\n\t\t\t\t});\n\t\t\t}\n\t\t\tif (hit){\n\t\t\t\thit.dispatch({\n\t\t\t\t\ttype: 'mouseover',\n\t\t\t\t\ttarget: hit,\n\t\t\t\t\trelatedTarget: previousHit,\n\t\t\t\t\tsourceEvent: event\n\t\t\t\t});\n\t\t\t}\n\t\t\tpreviousHit = hit;\n\t\t\tpreviousHitSurface = this;\n\t\t\tthis.refreshCursor();\n\t\t}\n\n\t\tif (hit) hit.dispatch(event);\n\t},\n\n\trefreshCursor: function(){\n\t\tif (previousHitSurface !== this) return;\n\t\tvar hit = previousHit, hitCursor = '', hitTooltip = '';\n\t\twhile (hit){\n\t\t\tif (!hitCursor && hit._cursor){\n\t\t\t\thitCursor = hit._cursor;\n\t\t\t\tif (hitTooltip) break;\n\t\t\t}\n\t\t\tif (!hitTooltip && hit._tooltip){\n\t\t\t\thitTooltip = hit._tooltip;\n\t\t\t\tif (hitCursor) break;\n\t\t\t}\n\t\t\thit = hit.parentNode;\n\t\t}\n\t\t// TODO: No way to set cursor/title on the surface\n\t\tthis.element.style.cursor = hitCursor;\n\t\tthis.element.title = hitTooltip;\n\t},\n\n\tresize: function(width, height){\n\t\tvar element = this.element;\n\t\telement.setAttribute('width', width * resolution);\n\t\telement.setAttribute('height', height * resolution);\n\t\telement.style.width = width + 'px';\n\t\telement.style.height = height + 'px';\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\treturn this;\n\t},\n\n\tinvalidate: function(left, top, width, height){\n\t\tif (this._valid){\n\t\t\tthis._valid = false;\n\t\t\tinvalids.push(this);\n\t\t\tif (!renderTimer){\n\t\t\t\tif (window.mozRequestAnimationFrame){\n\t\t\t\t\trenderTimer = true;\n\t\t\t\t\twindow.mozRequestAnimationFrame(renderInvalids);\n\t\t\t\t} else {\n\t\t\t\t\trenderTimer = setTimeout(renderInvalids, fps);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t},\n\n\thitTest: function(x, y){\n\t\tif (x < 0 || y < 0 || x > this.width || y > this.height) return null;\n\t\tvar node = this.lastChild;\n\t\twhile (node){\n\t\t\tvar hit = node.hitTest(x, y);\n\t\t\tif (hit) return hit;\n\t\t\tnode = node.previousSibling;\n\t\t}\n\t\treturn null;\n\t},\n\n\trender: function(){\n\t\tvar node = this.firstChild, context = this.context;\n\t\tcontext.setTransform(resolution, 0, 0, resolution, 0, 0);\n\t\tcontext.clearRect(0, 0, this.width, this.height);\n\t\twhile (node){\n\t\t\tnode.renderTo(context, resolution, 0, 0, resolution, 0, 0);\n\t\t\tnode = node.nextSibling;\n\t\t}\n\t\tthis.refreshCursor();\n\t}\n\n});\n\nCanvasSurface.tagName = 'canvas';\n\nmodule.exports = CanvasSurface;","var Class = require('./class');\n\nmodule.exports = Class({\n\t\n\tinitialize: function(path){\n\t\tthis.reset().push(path);\n\t},\n\n\t/* parser */\n\t\n\tpush: function(){\n\t\tvar p = Array.prototype.join.call(arguments, ' ')\n\t\t\t.match(/[a-df-z]|[\\-+]?(?:[\\d\\.]e[\\-+]?|[^\\s\\-+,a-z])+/ig);\n\t\tif (!p) return this;\n\n\t\tvar last, cmd = p[0], i = 1;\n\t\twhile (cmd){\n\t\t\tswitch (cmd){\n\t\t\t\tcase 'm': this.move(p[i++], p[i++]); break;\n\t\t\t\tcase 'l': this.line(p[i++], p[i++]); break;\n\t\t\t\tcase 'c': this.curve(p[i++], p[i++], p[i++], p[i++], p[i++], p[i++]); break;\n\t\t\t\tcase 's': this.curve(p[i++], p[i++], null, null, p[i++], p[i++]); break;\n\t\t\t\tcase 'q': this.curve(p[i++], p[i++], p[i++], p[i++]); break;\n\t\t\t\tcase 't': this.curve(p[i++], p[i++]); break;\n\t\t\t\tcase 'a': this.arc(p[i+5], p[i+6], p[i], p[i+1], p[i+3], !+p[i+4], p[i+2]); i += 7; break;\n\t\t\t\tcase 'h': this.line(p[i++], 0); break;\n\t\t\t\tcase 'v': this.line(0, p[i++]); break;\n\n\t\t\t\tcase 'M': this.moveTo(p[i++], p[i++]); break;\n\t\t\t\tcase 'L': this.lineTo(p[i++], p[i++]); break;\n\t\t\t\tcase 'C': this.curveTo(p[i++], p[i++], p[i++], p[i++], p[i++], p[i++]); break;\n\t\t\t\tcase 'S': this.curveTo(p[i++], p[i++], null, null, p[i++], p[i++]); break;\n\t\t\t\tcase 'Q': this.curveTo(p[i++], p[i++], p[i++], p[i++]); break;\n\t\t\t\tcase 'T': this.curveTo(p[i++], p[i++]); break;\n\t\t\t\tcase 'A': this.arcTo(p[i+5], p[i+6], p[i], p[i+1], p[i+3], !+p[i+4], p[i+2]); i += 7; break;\n\t\t\t\tcase 'H': this.lineTo(p[i++], this.penY); break;\n\t\t\t\tcase 'V': this.lineTo(this.penX, p[i++]); break;\n\t\t\t\t\n\t\t\t\tcase 'Z': case 'z': this.close(); break;\n\t\t\t\tdefault: cmd = last; i--; continue;\n\t\t\t}\n\n\t\t\tlast = cmd;\n\t\t\tif (last == 'm') last = 'l';\n\t\t\telse if (last == 'M') last = 'L';\n\t\t\tcmd = p[i++];\n\t\t}\n\t\treturn this;\n\t},\n\n\t/* utility methods */\n\n\treset: function(){\n\t\tthis.penX = this.penY = 0;\n\t\tthis.penDownX = this.penDownY = null;\n\t\tthis._pivotX = this._pivotY = 0;\n\t\tthis.onReset();\n\t\treturn this;\n\t},\n\t\n\tmove: function(x,y){\n\t\tthis.onMove(this.penX, this.penY, this._pivotX = this.penX += (+x), this._pivotY = this.penY += (+y));\n\t\treturn this;\n\t},\n\tmoveTo: function(x,y){\n\t\tthis.onMove(this.penX, this.penY, this._pivotX = this.penX = (+x), this._pivotY = this.penY = (+y));\n\t\treturn this;\n\t},\n\n\tline: function(x,y){\n\t\treturn this.lineTo(this.penX + (+x), this.penY + (+y));\n\t},\n\tlineTo: function(x,y){\n\t\tif (this.penDownX == null){ this.penDownX = this.penX; this.penDownY = this.penY; }\n\t\tthis.onLine(this.penX, this.penY, this._pivotX = this.penX = (+x), this._pivotY = this.penY = (+y));\n\t\treturn this;\n\t},\n\t\n\tcurve: function(c1x, c1y, c2x, c2y, ex, ey){\n\t\tvar x = this.penX, y = this.penY;\n\t\treturn this.curveTo(\n\t\t\tx + (+c1x), y + (+c1y),\n\t\t\tc2x == null ? null : x + (+c2x),\n\t\t\tc2y == null ? null : y + (+c2y),\n\t\t\tex == null ? null : x + (+ex),\n\t\t\tey == null ? null : y + (+ey)\n\t\t);\n\t},\n\tcurveTo: function(c1x, c1y, c2x, c2y, ex, ey){\n\t\tvar x = this.penX, y = this.penY;\n\t\tif (c2x == null){\n\t\t\tc2x = +c1x; c2y = +c1y;\n\t\t\tc1x = (x * 2) - (this._pivotX || 0); c1y = (y * 2) - (this._pivotY || 0);\n\t\t}\n\t\tif (ex == null){\n\t\t\tthis._pivotX = +c1x; this._pivotY = +c1y;\n\t\t\tex = +c2x; ey = +c2y;\n\t\t\tc2x = (ex + (+c1x) * 2) / 3; c2y = (ey + (+c1y) * 2) / 3;\n\t\t\tc1x = (x + (+c1x) * 2) / 3; c1y = (y + (+c1y) * 2) / 3;\n\t\t} else {\n\t\t\tthis._pivotX = +c2x; this._pivotY = +c2y;\n\t\t}\n\t\tif (this.penDownX == null){ this.penDownX = x; this.penDownY = y; }\n\t\tthis.onBezierCurve(x, y, +c1x, +c1y, +c2x, +c2y, this.penX = +ex, this.penY = +ey);\n\t\treturn this;\n\t},\n\t\n\tarc: function(x, y, rx, ry, outer, counterClockwise, rotation){\n\t\treturn this.arcTo(this.penX + (+x), this.penY + (+y), rx, ry, outer, counterClockwise, rotation);\n\t},\n\tarcTo: function(x, y, rx, ry, outer, counterClockwise, rotation){\n\t\try = Math.abs(+ry || +rx || (+y - this.penY));\n\t\trx = Math.abs(+rx || (+x - this.penX));\n\n\t\tif (!rx || !ry || (x == this.penX && y == this.penY)) return this.lineTo(x, y);\n\n\t\tvar tX = this.penX, tY = this.penY, clockwise = !+counterClockwise, large = !!+outer;\n\n\t\tvar rad = rotation ? rotation * Math.PI / 180 : 0, cos = Math.cos(rad), sin = Math.sin(rad);\n\t\tx -= tX; y -= tY;\n\t\t\n\t\t// Ellipse Center\n\t\tvar cx = cos * x / 2 + sin * y / 2,\n\t\t\tcy = -sin * x / 2 + cos * y / 2,\n\t\t\trxry = rx * rx * ry * ry,\n\t\t\trycx = ry * ry * cx * cx,\n\t\t\trxcy = rx * rx * cy * cy,\n\t\t\ta = rxry - rxcy - rycx;\n\n\t\tif (a < 0){\n\t\t\ta = Math.sqrt(1 - a / rxry);\n\t\t\trx *= a; ry *= a;\n\t\t\tcx = x / 2; cy = y / 2;\n\t\t} else {\n\t\t\ta = Math.sqrt(a / (rxcy + rycx));\n\t\t\tif (large == clockwise) a = -a;\n\t\t\tvar cxd = -a * cy * rx / ry,\n\t\t\t    cyd =  a * cx * ry / rx;\n\t\t\tcx = cos * cxd - sin * cyd + x / 2;\n\t\t\tcy = sin * cxd + cos * cyd + y / 2;\n\t\t}\n\n\t\t// Rotation + Scale Transform\n\t\tvar xx =  cos / rx, yx = sin / rx,\n\t\t    xy = -sin / ry, yy = cos / ry;\n\n\t\t// Start and End Angle\n\t\tvar sa = Math.atan2(xy * -cx + yy * -cy, xx * -cx + yx * -cy),\n\t\t    ea = Math.atan2(xy * (x - cx) + yy * (y - cy), xx * (x - cx) + yx * (y - cy));\n\n\t\tcx += tX; cy += tY;\n\t\tx += tX; y += tY;\n\n\t\t// Circular Arc\n\t\tif (this.penDownX == null){ this.penDownX = this.penX; this.penDownY = this.penY; }\n\t\tthis.onArc(\n\t\t\ttX, tY, this._pivotX = this.penX = x, this._pivotY = this.penY = y,\n\t\t\tcx, cy, rx, ry, sa, ea, !clockwise, rotation\n\t\t);\n\t\treturn this;\n\t},\n\n\tcounterArc: function(x, y, rx, ry, outer){\n\t\treturn this.arc(x, y, rx, ry, outer, true);\n\t},\n\tcounterArcTo: function(x, y, rx, ry, outer){\n\t\treturn this.arcTo(x, y, rx, ry, outer, true);\n\t},\n\n\tclose: function(){\n\t\tif (this.penDownX != null){\n\t\t\tthis.onClose(this.penX, this.penY, this.penX = this.penDownX, this.penY = this.penDownY);\n\t\t\tthis.penDownX = null;\n\t\t}\n\t\treturn this;\n\t},\n\n\t/* overridable handlers */\n\t\n\tonReset: function(){\n\t},\n\n\tonMove: function(sx, sy, ex, ey){\n\t},\n\n\tonLine: function(sx, sy, ex, ey){\n\t\tthis.onBezierCurve(sx, sy, sx, sy, ex, ey, ex, ey);\n\t},\n\n\tonBezierCurve: function(sx, sy, c1x, c1y, c2x, c2y, ex, ey){\n\t\tvar gx = ex - sx, gy = ey - sy,\n\t\t\tg = gx * gx + gy * gy,\n\t\t\tv1, v2, cx, cy, u;\n\n\t\tcx = c1x - sx; cy = c1y - sy;\n\t\tu = cx * gx + cy * gy;\n\n\t\tif (u > g){\n\t\t\tcx -= gx;\n\t\t\tcy -= gy;\n\t\t} else if (u > 0 && g != 0){\n\t\t\tcx -= u/g * gx;\n\t\t\tcy -= u/g * gy;\n\t\t}\n\n\t\tv1 = cx * cx + cy * cy;\n\n\t\tcx = c2x - sx; cy = c2y - sy;\n\t\tu = cx * gx + cy * gy;\n\n\t\tif (u > g){\n\t\t\tcx -= gx;\n\t\t\tcy -= gy;\n\t\t} else if (u > 0 && g != 0){\n\t\t\tcx -= u/g * gx;\n\t\t\tcy -= u/g * gy;\n\t\t}\n\n\t\tv2 = cx * cx + cy * cy;\n\n\t\tif (v1 < 0.01 && v2 < 0.01){\n\t\t\tthis.onLine(sx, sy, ex, ey);\n\t\t\treturn;\n\t\t}\n\n\t\t// Avoid infinite recursion\n\t\tif (isNaN(v1) || isNaN(v2)){\n\t\t\tthrow new Error('Bad input');\n\t\t}\n\n\t\t// Split curve\n\t\tvar s1x =   (c1x + c2x) * 0.5,   s1y =   (c1y + c2y) * 0.5,\n\t\t    l1x =   (c1x + sx)  * 0.5,   l1y =   (c1y + sy)  * 0.5,\n\t\t    l2x =   (l1x + s1x) * 0.5,   l2y =   (l1y + s1y) * 0.5,\n\t\t    r2x =   (ex + c2x)  * 0.5,   r2y =   (ey + c2y)  * 0.5,\n\t\t    r1x =   (r2x + s1x) * 0.5,   r1y =   (r2y + s1y) * 0.5,\n\t\t    l2r1x = (l2x + r1x) * 0.5,   l2r1y = (l2y + r1y) * 0.5;\n\n\t\t// TODO: Manual stack if necessary. Currently recursive without tail optimization.\n\t\tthis.onBezierCurve(sx, sy, l1x, l1y, l2x, l2y, l2r1x, l2r1y);\n\t\tthis.onBezierCurve(l2r1x, l2r1y, r1x, r1y, r2x, r2y, ex, ey);\n\t},\n\n\tonArc: function(sx, sy, ex, ey, cx, cy, rx, ry, sa, ea, ccw, rotation){\n\t\t// Inverse Rotation + Scale Transform\n\t\tvar rad = rotation ? rotation * Math.PI / 180 : 0, cos = Math.cos(rad), sin = Math.sin(rad),\n\t\t\txx = cos * rx, yx = -sin * ry,\n\t\t    xy = sin * rx, yy =  cos * ry;\n\n\t\t// Bezier Curve Approximation\n\t\tvar arc = ea - sa;\n\t\tif (arc < 0 && !ccw) arc += Math.PI * 2;\n\t\telse if (arc > 0 && ccw) arc -= Math.PI * 2;\n\n\t\tvar n = Math.ceil(Math.abs(arc / (Math.PI / 2))),\n\t\t    step = arc / n,\n\t\t    k = (4 / 3) * Math.tan(step / 4);\n\n\t\tvar x = Math.cos(sa), y = Math.sin(sa);\n\n\t\tfor (var i = 0; i < n; i++){\n\t\t\tvar cp1x = x - k * y, cp1y = y + k * x;\n\n\t\t\tsa += step;\n\t\t\tx = Math.cos(sa); y = Math.sin(sa);\n\n\t\t\tvar cp2x = x + k * y, cp2y = y - k * x;\n\n\t\t\tthis.onBezierCurve(\n\t\t\t\tsx, sy,\n\t\t\t\tcx + xx * cp1x + yx * cp1y, cy + xy * cp1x + yy * cp1y,\n\t\t\t\tcx + xx * cp2x + yx * cp2y, cy + xy * cp2x + yy * cp2y,\n\t\t\t\t(sx = (cx + xx * x + yx * y)), (sy = (cy + xy * x + yy * y))\n\t\t\t);\n\t\t}\n\t},\n\n\tonClose: function(sx, sy, ex, ey){\n\t\tthis.onLine(sx, sy, ex, ey);\n\t}\n\n});","var Class = require('../../core/class');\nvar Path = require('../../core/path');\n\nvar CanvasPath = Class(Path, {\n\n\tinitialize: function(path){\n\t\tthis.reset();\n\t\tif (path instanceof CanvasPath){\n\t\t\tthis.path = path.path.slice(0);\n\t\t} else if (path){\n\t\t\tif (path.applyToPath)\n\t\t\t\tpath.applyToPath(this);\n\t\t\telse\n\t\t\t\tthis.push(path);\n\t\t}\n\t},\n\n\tonReset: function(){\n\t\tthis.path = [];\n\t},\n\n\tonMove: function(sx, sy, x, y){\n\t\tthis.path.push(function(context){\n\t\t\tcontext.moveTo(x, y);\n\t\t});\n\t},\n\n\tonLine: function(sx, sy, x, y){\n\t\tthis.path.push(function(context){\n\t\t\tcontext.lineTo(x, y);\n\t\t});\n\t},\n\n\tonBezierCurve: function(sx, sy, p1x, p1y, p2x, p2y, x, y){\n\t\tthis.path.push(function(context){\n\t\t\tcontext.bezierCurveTo(p1x, p1y, p2x, p2y, x, y);\n\t\t});\n\t},\n\n\t_arcToBezier: Path.prototype.onArc,\n\n\tonArc: function(sx, sy, ex, ey, cx, cy, rx, ry, sa, ea, ccw, rotation){\n\t\tif (rx != ry || rotation) return this._arcToBezier(sx, sy, ex, ey, cx, cy, rx, ry, sa, ea, ccw, rotation);\n\t\tthis.path.push(function(context){\n\t\t\tcontext.arc(cx, cy, rx, sa, ea, ccw);\n\t\t});\n\t},\n\n\tonClose: function(){\n\t\tthis.path.push(function(context){\n\t\t\tcontext.closePath();\n\t\t});\n\t},\n\n\ttoCommands: function(){\n\t\treturn this.path.slice(0);\n\t}\n\n});\n\nmodule.exports = CanvasPath;","var colors = {\n\tmaroon: '#800000', red: '#ff0000', orange: '#ffA500', yellow: '#ffff00', olive: '#808000',\n\tpurple: '#800080', fuchsia: \"#ff00ff\", white: '#ffffff', lime: '#00ff00', green: '#008000',\n\tnavy: '#000080', blue: '#0000ff', aqua: '#00ffff', teal: '#008080',\n\tblack: '#000000', silver: '#c0c0c0', gray: '#808080'\n};\n\nvar map = function(array, fn){\n\tvar results = [];\n\tfor (var i = 0, l = array.length; i < l; i++)\n\t\tresults[i] = fn(array[i], i);\n\treturn results;\n};\n\nvar Color = function(color, type){\n\t\n\tif (color.isColor){\n\t\t\n\t\tthis.red = color.red;\n\t\tthis.green = color.green;\n\t\tthis.blue = color.blue;\n\t\tthis.alpha = color.alpha;\n\n\t} else {\n\t\t\n\t\tvar namedColor = colors[color];\n\t\tif (namedColor){\n\t\t\tcolor = namedColor;\n\t\t\ttype = 'hex';\n\t\t}\n\n\t\tswitch (typeof color){\n\t\t\tcase 'string': if (!type) type = (type = color.match(/^rgb|^hsb|^hsl/)) ? type[0] : 'hex'; break;\n\t\t\tcase 'object': type = type || 'rgb'; color = color.toString(); break;\n\t\t\tcase 'number': type = 'hex'; color = color.toString(16); break;\n\t\t}\n\n\t\tcolor = Color['parse' + type.toUpperCase()](color);\n\t\tthis.red = color[0];\n\t\tthis.green = color[1];\n\t\tthis.blue = color[2];\n\t\tthis.alpha = color[3];\n\t}\n\t\n\tthis.isColor = true;\n\n};\n\nvar limit = function(number, min, max){\n\treturn Math.min(max, Math.max(min, number));\n};\n\nvar listMatch = /([-.\\d]+\\%?)\\s*,\\s*([-.\\d]+\\%?)\\s*,\\s*([-.\\d]+\\%?)\\s*,?\\s*([-.\\d]*\\%?)/;\nvar hexMatch = /^#?([a-f0-9]{1,2})([a-f0-9]{1,2})([a-f0-9]{1,2})([a-f0-9]{0,2})$/i;\n\nColor.parseRGB = function(color){\n\treturn map(color.match(listMatch).slice(1), function(bit, i){\n\t\tif (bit) bit = parseFloat(bit) * (bit[bit.length - 1] == '%' ? 2.55 : 1);\n\t\treturn (i < 3) ? Math.round(((bit %= 256) < 0) ? bit + 256 : bit) : limit(((bit === '') ? 1 : Number(bit)), 0, 1);\n\t});\n};\n\t\nColor.parseHEX = function(color){\n\tif (color.length == 1) color = color + color + color;\n\treturn map(color.match(hexMatch).slice(1), function(bit, i){\n\t\tif (i == 3) return (bit) ? parseInt(bit, 16) / 255 : 1;\n\t\treturn parseInt((bit.length == 1) ? bit + bit : bit, 16);\n\t});\n};\n\t\nColor.parseHSB = function(color){\n\tvar hsb = map(color.match(listMatch).slice(1), function(bit, i){\n\t\tif (bit) bit = parseFloat(bit);\n\t\tif (i === 0) return Math.round(((bit %= 360) < 0) ? (bit + 360) : bit);\n\t\telse if (i < 3) return limit(Math.round(bit), 0, 100);\n\t\telse return limit(((bit === '') ? 1 : Number(bit)), 0, 1);\n\t});\n\t\n\tvar a = hsb[3];\n\tvar br = Math.round(hsb[2] / 100 * 255);\n\tif (hsb[1] == 0) return [br, br, br, a];\n\t\t\n\tvar hue = hsb[0];\n\tvar f = hue % 60;\n\tvar p = Math.round((hsb[2] * (100 - hsb[1])) / 10000 * 255);\n\tvar q = Math.round((hsb[2] * (6000 - hsb[1] * f)) / 600000 * 255);\n\tvar t = Math.round((hsb[2] * (6000 - hsb[1] * (60 - f))) / 600000 * 255);\n\n\tswitch (Math.floor(hue / 60)){\n\t\tcase 0: return [br, t, p, a];\n\t\tcase 1: return [q, br, p, a];\n\t\tcase 2: return [p, br, t, a];\n\t\tcase 3: return [p, q, br, a];\n\t\tcase 4: return [t, p, br, a];\n\t\tdefault: return [br, p, q, a];\n\t}\n};\n\nColor.parseHSL = function(color){\n\tvar hsb = map(color.match(listMatch).slice(1), function(bit, i){\n\t\tif (bit) bit = parseFloat(bit);\n\t\tif (i === 0) return Math.round(((bit %= 360) < 0) ? (bit + 360) : bit);\n\t\telse if (i < 3) return limit(Math.round(bit), 0, 100);\n\t\telse return limit(((bit === '') ? 1 : Number(bit)), 0, 1);\n\t});\n\n\tvar h = hsb[0] / 60;\n\tvar s = hsb[1] / 100;\n\tvar l = hsb[2] / 100;\n\tvar a = hsb[3];\n\t\n\tvar c = (1 - Math.abs(2 * l - 1)) * s;\n\tvar x = c * (1 - Math.abs(h % 2 - 1));\n\tvar m = l - c / 2;\n\t\n\tvar p = Math.round((c + m) * 255);\n\tvar q = Math.round((x + m) * 255);\n\tvar t = Math.round((m) * 255);\n\n\tswitch (Math.floor(h)){\n\t\tcase 0: return [p, q, t, a];\n\t\tcase 1: return [q, p, t, a];\n\t\tcase 2: return [t, p, q, a];\n\t\tcase 3: return [t, q, p, a];\n\t\tcase 4: return [q, t, p, a];\n\t\tdefault: return [p, t, q, a];\n\t}\n};\n\nvar toString = function(type, array){\n\tif (array[3] != 1) type += 'a';\n\telse array.pop();\n\treturn type + '(' + array.join(', ') + ')';\n};\n\nColor.prototype = {\n\n\ttoHSB: function(array){\n\t\tvar red = this.red, green = this.green, blue = this.blue, alpha = this.alpha;\n\n\t\tvar max = Math.max(red, green, blue), min = Math.min(red, green, blue), delta = max - min;\n\t\tvar hue = 0, saturation = (delta != 0) ? delta / max : 0, brightness = max / 255;\n\t\tif (saturation){\n\t\t\tvar rr = (max - red) / delta, gr = (max - green) / delta, br = (max - blue) / delta;\n\t\t\thue = (red == max) ? br - gr : (green == max) ? 2 + rr - br : 4 + gr - rr;\n\t\t\tif ((hue /= 6) < 0) hue++;\n\t\t}\n\n\t\tvar hsb = [Math.round(hue * 360), Math.round(saturation * 100), Math.round(brightness * 100), alpha];\n\n\t\treturn (array) ? hsb : toString('hsb', hsb);\n\t},\n\n\ttoHSL: function(array){\n\t\tvar red = this.red, green = this.green, blue = this.blue, alpha = this.alpha;\n\n\t\tvar max = Math.max(red, green, blue), min = Math.min(red, green, blue), delta = max - min;\n\t\tvar hue = 0, saturation = (delta != 0) ? delta / (255 - Math.abs((max + min) - 255)) : 0, lightness = (max + min) / 512;\n\t\tif (saturation){\n\t\t\tvar rr = (max - red) / delta, gr = (max - green) / delta, br = (max - blue) / delta;\n\t\t\thue = (red == max) ? br - gr : (green == max) ? 2 + rr - br : 4 + gr - rr;\n\t\t\tif ((hue /= 6) < 0) hue++;\n\t\t}\n\n\t\tvar hsl = [Math.round(hue * 360), Math.round(saturation * 100), Math.round(lightness * 100), alpha];\n\n\t\treturn (array) ? hsl : toString('hsl', hsl);\n\t},\n\n\ttoHEX: function(array){\n\n\t\tvar a = this.alpha;\n\t\tvar alpha = ((a = Math.round((a * 255)).toString(16)).length == 1) ? a + a : a;\n\t\t\n\t\tvar hex = map([this.red, this.green, this.blue], function(bit){\n\t\t\tbit = bit.toString(16);\n\t\t\treturn (bit.length == 1) ? '0' + bit : bit;\n\t\t});\n\t\t\n\t\treturn (array) ? hex.concat(alpha) : '#' + hex.join('') + ((alpha == 'ff') ? '' : alpha);\n\t},\n\t\n\ttoRGB: function(array){\n\t\tvar rgb = [this.red, this.green, this.blue, this.alpha];\n\t\treturn (array) ? rgb : toString('rgb', rgb);\n\t}\n\n};\n\nColor.prototype.toString = Color.prototype.toRGB;\n\nColor.hex = function(hex){\n\treturn new Color(hex, 'hex');\n};\n\nif (this.hex == null) this.hex = Color.hex;\n\nColor.hsb = function(h, s, b, a){\n\treturn new Color([h || 0, s || 0, b || 0, (a == null) ? 1 : a], 'hsb');\n};\n\nif (this.hsb == null) this.hsb = Color.hsb;\n\nColor.hsl = function(h, s, l, a){\n\treturn new Color([h || 0, s || 0, l || 0, (a == null) ? 1 : a], 'hsl');\n};\n\nif (this.hsl == null) this.hsl = Color.hsl;\n\nColor.rgb = function(r, g, b, a){\n\treturn new Color([r || 0, g || 0, b || 0, (a == null) ? 1 : a], 'rgb');\n};\n\nif (this.rgb == null) this.rgb = Color.rgb;\n\nColor.detach = function(color){\n\tcolor = new Color(color);\n\treturn [Color.rgb(color.red, color.green, color.blue).toString(), color.alpha];\n};\n\nmodule.exports = Color;","var Class = require('../core/class');\n\nmodule.exports = Class({\n\n\t// placement\n\n\t_resetPlacement: function(){\n\t\tvar container = this.parentNode;\n\t\tif (container){\n\t\t\tvar previous = this.previousSibling, next = this.nextSibling;\n\t\t\tif (previous){\n\t\t\t\tprevious.nextSibling = next;\n\t\t\t} else {\n\t\t\t\tcontainer.firstChild = next;\n\t\t\t}\n\t\t\tif (next){\n\t\t\t\tnext.previousSibling = previous;\n\t\t\t} else {\n\t\t\t\tcontainer.lastChild = this.previousSibling;\n\t\t\t}\n\t\t}\n\t\tthis.previousSibling = null;\n\t\tthis.nextSibling = null;\n\t\tthis.parentNode = null;\n\t\treturn this;\n\t},\n\n\tinject: function(container){\n\t\tthis._resetPlacement();\n\t\tvar last = container.lastChild;\n\t\tif (last){\n\t\t\tlast.nextSibling = this;\n\t\t\tthis.previousSibling = last;\n\t\t} else {\n\t\t\tcontainer.firstChild = this;\n\t\t}\n\t\tcontainer.lastChild = this;\n\t\tthis.parentNode = container;\n\t\tthis._place();\n\t\treturn this;\n\t},\n\n\tinjectBefore: function(sibling){\n\t\tthis._resetPlacement();\n\t\tvar container = sibling.parentNode;\n\t\tif (!container) return this;\n\t\tvar previous = sibling.previousSibling;\n\t\tif (previous){\n\t\t\tprevious.nextSibling = this;\n\t\t\tthis.previousSibling = previous;\n\t\t} else {\n\t\t\tcontainer.firstChild = this;\n\t\t}\n\t\tsibling.previousSibling = this;\n\t\tthis.nextSibling = sibling;\n\t\tthis.parentNode = container;\n\t\tthis._place();\n\t\treturn this;\n\t},\n\n\teject: function(){\n\t\tthis._resetPlacement();\n\t\tthis._place();\n\t\treturn this;\n\t},\n\n\t_place: function(){},\n\n\t// events\n\n\tdispatch: function(event){\n\t\tvar events = this._events,\n\t\t\tlisteners = events && events[event.type];\n\t\tif (listeners){\n\t\t\tlisteners = listeners.slice(0);\n\t\t\tfor (var i = 0, l = listeners.length; i < l; i++){\n\t\t\t\tvar fn = listeners[i], result;\n\t\t\t\tif (typeof fn == 'function')\n\t\t\t\t\tresult = fn.call(this, event);\n\t\t\t\telse\n\t\t\t\t\tresult = fn.handleEvent(event);\n\t\t\t\tif (result === false) event.preventDefault();\n\t\t\t}\n\t\t}\n\t\tif (this.parentNode && this.parentNode.dispatch){\n\t\t\tthis.parentNode.dispatch(event);\n\t\t}\n\t},\n\n\tsubscribe: function(type, fn, bind){\n\t\tif (typeof type != 'string'){ // listen type / fn with object\n\t\t\tvar subscriptions = [];\n\t\t\tfor (var t in type) subscriptions.push(this.subscribe(t, type[t]));\n\t\t\treturn function(){ // unsubscribe\n\t\t\t\tfor (var i = 0, l = subscriptions.length; i < l; i++)\n\t\t\t\t\tsubscriptions[i]();\n\t\t\t\treturn this;\n\t\t\t};\n\t\t} else { // listen to one\n\t\t\tvar bound = typeof fn === 'function' ? fn.bind(bind || this) : fn,\n\t\t\t\tevents = this._events || (this._events = {}),\n\t\t\t\tlisteners = events[type] || (events[type] = []);\n\t\t\tlisteners.push(bound);\n\t\t\treturn function(){\n\t\t\t\t// unsubscribe\n\t\t\t\tfor (var i = 0, l = listeners.length; i < l; i++){\n\t\t\t\t\tif (listeners[i] === bound){\n\t\t\t\t\t\tlisteners.splice(i, 1);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n});\n","var Class = require('../../core/class');\nvar Transform = require('../../core/transform');\nvar Element = require('../../dom/dummy');\n\nvar CanvasNode = Class(Transform, Element, {\n\t\n\tinvalidate: function(){\n\t\tif (this.parentNode) this.parentNode.invalidate();\n\t\tif (this._layer) this._layerCache = null;\n\t\treturn this;\n\t},\n\n\t_place: function(){\n\t\tthis.invalidate();\n\t},\n\t\n\t_transform: function(){\n\t\tthis.invalidate();\n\t},\n\t\n\tblend: function(opacity){\n\t\tif (opacity >= 1 && this._layer) this._layer = null;\n\t\tthis._opacity = opacity;\n\t\tif (this.parentNode) this.parentNode.invalidate();\n\t\treturn this;\n\t},\n\t\n\t// visibility\n\t\n\thide: function(){\n\t\tthis._invisible = true;\n\t\tif (this.parentNode) this.parentNode.invalidate();\n\t\treturn this;\n\t},\n\t\n\tshow: function(){\n\t\tthis._invisible = false;\n\t\tif (this.parentNode) this.parentNode.invalidate();\n\t\treturn this;\n\t},\n\t\n\t// interaction\n\t\n\tindicate: function(cursor, tooltip){\n\t\tthis._cursor = cursor;\n\t\tthis._tooltip = tooltip;\n\t\treturn this.invalidate();\n\t},\n\n\thitTest: function(x, y){\n\t\tif (this._invisible) return null;\n\t\tvar point = this.inversePoint(x, y);\n\t\tif (!point) return null;\n\t\treturn this.localHitTest(point.x, point.y);\n\t},\n\n\t// rendering\n\n\trenderTo: function(context, xx, yx, xy, yy, x, y){\n\t\tvar opacity = this._opacity;\n\t\tif (opacity == null || opacity >= 1){\n\t\t\treturn this.renderLayerTo(context, xx, yx, xy, yy, x, y);\n\t\t}\n\n\t\t// Render to a compositing layer and cache it\n\n\t\tvar layer = this._layer, canvas, isDirty = true,\n\t\t\tw = context.canvas.width, h = context.canvas.height;\n\t\tif (layer){\n\t\t\tlayer.setTransform(1, 0, 0, 1, 0, 0);\n\t\t\tcanvas = layer.canvas;\n\t\t\tif (canvas.width < w || canvas.height < h){\n\t\t\t\tcanvas.width = w;\n\t\t\t\tcanvas.height = h;\n\t\t\t} else {\n\t\t\t\tvar c = this._layerCache;\n\t\t\t\tif (c && c.xx === xx && c.yx === yx && c.xy === xy\n\t\t\t\t\t&& c.yy === yy && c.x === x && c.y === y){\n\t\t\t\t\tisDirty = false;\n\t\t\t\t} else {\n\t\t\t\t\tlayer.clearRect(0, 0, w, h);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tcanvas = document.createElement('canvas');\n\t\t\tcanvas.width = w;\n\t\t\tcanvas.height = h;\n\t\t\tthis._layer = layer = canvas.getContext('2d');\n\t\t}\n\n\t\tif (isDirty){\n\t\t\tthis.renderLayerTo(layer, xx, yx, xy, yy, x, y);\n\t\t\tthis._layerCache = {\n\t\t\t\txx: xx,\n\t\t\t\tyx: yx,\n\t\t\t\txy: xy,\n\t\t\t\tyy: yy,\n\t\t\t\tx: x,\n\t\t\t\ty: y\n\t\t\t};\n\t\t}\n\n\t\tcontext.globalAlpha = opacity;\n\t\tcontext.setTransform(1, 0, 0, 1, 0, 0);\n\t\tcontext.drawImage(\n\t\t\tcanvas,\n\t\t\t0, 0, w, h,\n\t\t\t0, 0, w, h\n\t\t);\n\t\tcontext.globalAlpha = 1;\n\t}\n\n});\n\nmodule.exports = CanvasNode;","var Class = require('../../core/class');\nvar Color = require('../../core/color');\nvar Transform = require('../../core/transform');\nvar Node = require('./node');\n\nvar genericCanvas = typeof document !== 'undefined' && document.createElement('canvas'),\n    genericContext = genericCanvas && genericCanvas.getContext && genericCanvas.getContext('2d');\n\nfunction recolorImage(img, color1, color2){\n\t// TODO: Fix this experimental implementation\n\tcolor1 = Color.detach(color1);\n\tcolor2 = Color.detach(color2);\n\tvar canvas = document.createElement('canvas'),\n\t\tcontext = canvas.getContext('2d');\n\tcanvas.width = img.width;\n\tcanvas.height = img.height;\n\tcontext.fillStyle = color2[0];\n\tcontext.fillRect(0, 0, img.width, img.height);\n\tcontext.globalCompositeOperation = 'lighter';\n\tcontext.drawImage(img, 0, 0);\n\treturn canvas;\n}\n\nvar Base = Class(Node, {\n\n\tinitialize: function(){\n\t\tthis._fill = null;\n\t\tthis._pendingFill = null;\n\t\tthis._fillTransform = null;\n\t\tthis._stroke = null;\n\t\tthis._strokeCap = null;\n\t\tthis._strokeDash = null;\n\t\tthis._strokeJoin = null;\n\t\tthis._strokeWidth = null;\n\t},\n\n\t/* styles */\n\n\t_addColors: function(gradient, stops){\n\t\t// Enumerate stops, assumes offsets are enumerated in order\n\t\t// TODO: Sort. Chrome doesn't always enumerate in expected order but requires stops to be specified in order.\n\t\tif ('length' in stops) for (var i = 0, l = stops.length - 1; i <= l; i++)\n\t\t\tgradient.addColorStop(i / l, new Color(stops[i]).toString());\n\t\telse for (var offset in stops)\n\t\t\tgradient.addColorStop(offset, new Color(stops[offset]).toString());\n\t\treturn gradient;\n\t},\n\n\n\tfill: function(color){\n\t\tif (arguments.length > 1) return this.fillLinear(arguments);\n\t\tif (this._pendingFill) this._pendingFill();\n\t\tthis._fill = color ? new Color(color).toString() : null;\n\t\treturn this.invalidate();\n\t},\n\n\tfillRadial: function(stops, focusX, focusY, radiusX, radiusY, centerX, centerY){\n\t\tif (focusX == null) focusX = (this.left || 0) + (this.width || 0) * 0.5;\n\t\tif (focusY == null) focusY = (this.top || 0) + (this.height || 0) * 0.5;\n\t\tif (radiusY == null) radiusY = radiusX || (this.height * 0.5) || 0;\n\t\tif (radiusX == null) radiusX = (this.width || 0) * 0.5;\n\t\tif (centerX == null) centerX = focusX;\n\t\tif (centerY == null) centerY = focusY;\n\n\t\tcenterX += centerX - focusX;\n\t\tcenterY += centerY - focusY;\n\n\t\tif (radiusX === 0 || radiusX === '0') return this.fillLinear(stops);\n\t\tvar ys = radiusY / radiusX;\n\n\t\tif (this._pendingFill) this._pendingFill();\n\n\t\tvar gradient = genericContext.createRadialGradient(focusX, focusY / ys, 0, centerX, centerY / ys, radiusX * 2);\n\n\t\t// Double fill radius to simulate repeating gradient\n\t\tif ('length' in stops) for (var i = 0, l = stops.length - 1; i <= l; i++){\n\t\t\tgradient.addColorStop(i / l / 2, new Color(stops[i]).toString());\n\t\t\tgradient.addColorStop(1 - i / l / 2, new Color(stops[i]).toString());\n\t\t} else for (var offset in stops){\n\t\t\tgradient.addColorStop(offset / 2, new Color(stops[offset]).toString());\n\t\t\tgradient.addColorStop(1- offset / 2, new Color(stops[offset]).toString());\n\t\t}\n\n\t\tthis._fill = gradient;\n\t\tthis._fillTransform = new Transform(1, 0, 0, ys);\n\t\treturn this.invalidate();\n\t},\n\n\tfillLinear: function(stops, x1, y1, x2, y2){\n\t\tif (arguments.length < 5){\n\t\t\tvar angle = ((x1 == null) ? 270 : x1) * Math.PI / 180;\n\n\t\t\tvar x = Math.cos(angle), y = -Math.sin(angle),\n\t\t\t\tl = (Math.abs(x) + Math.abs(y)) / 2,\n\t\t\t\tw = this.width || 1, h = this.height || 1;\n\n\t\t\tx *= l; y *= l;\n\n\t\t\tx1 = 0.5 - x;\n\t\t\tx2 = 0.5 + x;\n\t\t\ty1 = 0.5 - y;\n\t\t\ty2 = 0.5 + y;\n\t\t\tthis._fillTransform = new Transform(w, 0, 0, h);\n\t\t} else {\n\t\t\tthis._fillTransform = null;\n\t\t}\n\t\tif (this._pendingFill) this._pendingFill();\n\t\tvar gradient = genericContext.createLinearGradient(x1, y1, x2, y2);\n\t\tthis._addColors(gradient, stops);\n\t\tthis._fill = gradient;\n\t\treturn this.invalidate();\n\t},\n\n\tfillImage: function(url, width, height, left, top, color1, color2){\n\t\tif (this._pendingFill) this._pendingFill();\n\t\tvar img = url;\n\t\tif (!(img instanceof Image)){\n\t\t\timg = new Image();\n\t\t\timg.src = url;\n\t\t}\n\t\tif (img.width && img.height){\n\t\t\treturn this._fillImage(img, width, height, left || 0, top || 0, color1, color2);\n\t\t}\n\n\t\t// Not yet loaded\n\t\tthis._fill = null;\n\t\tvar self = this,\n\t\t\tcallback = function(){\n\t\t\t\tcancel();\n\t\t\t\tself._fillImage(img, width, height, left || 0, top || 0, color1, color2);\n\t\t\t},\n\t\t\tcancel = function(){\n\t\t\t\timg.removeEventListener('load', callback, false);\n\t\t\t\tself._pendingFill = null;\n\t\t\t};\n\t\tthis._pendingFill = cancel;\n\t\timg.addEventListener('load', callback, false);\n\t\treturn this;\n\t},\n\n\t_fillImage: function(img, width, height, left, top, color1, color2){\n\t\tvar w = width ? width / img.width : 1,\n\t\t\th = height ? height / img.height : 1;\n\t\tif (color1 != null) img = recolorImage(img, color1, color2);\n\t\tthis._fill = genericContext.createPattern(img, 'repeat');\n\t\tthis._fillTransform = new Transform(w, 0, 0, h, left || 0, top || 0);\n\t\treturn this.invalidate();\n\t},\n\n\tstroke: function(color, width, cap, join, dash){\n\t\tthis._stroke = color ? new Color(color).toString() : null;\n\t\tthis._strokeWidth = (width != null) ? width : 1;\n\t\tthis._strokeCap = (cap != null) ? cap : 'round';\n\t\tthis._strokeJoin = (join != null) ? join : 'round';\n\t\tthis._strokeDash = dash;\n\t\treturn this.invalidate();\n\t},\n\n\t// Rendering\n\n\telement_renderTo: Node.prototype.renderTo,\n\n\trenderTo: function(context, xx, yx, xy, yy, x, y){\n\t\tvar opacity = this._opacity;\n\t\tif (opacity == null || opacity >= 1){\n\t\t\treturn this.renderLayerTo(context, xx, yx, xy, yy, x, y);\n\t\t}\n\t\tif (this._fill && this._stroke){\n\t\t\treturn this.element_renderTo(context, xx, yx, xy, yy, x, y);\n\t\t}\n\t\tcontext.globalAlpha = opacity;\n\t\tvar r = this.renderLayerTo(context, xx, yx, xy, yy, x, y);\n\t\tcontext.globalAlpha = 1;\n\t\treturn r;\n\t},\n\n\trenderLayerTo: function(context, xx, yx, xy, yy, x, y){\n\t\tcontext.setTransform(xx, yx, xy, yy, x, y);\n\t\tthis.renderShapeTo(context);\n\t}\n\n});\n\nBase._genericContext = genericContext;\n\nmodule.exports = Base;\n","var Class = require('../../core/class');\nvar Base = require('./base');\nvar Path = require('./path');\n\nmodule.exports = Class(Base, {\n\n\tbase_initialize: Base.prototype.initialize,\n\n\tinitialize: function(path, width, height){\n\t\tthis.base_initialize();\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\tif (path != null) this.draw(path);\n\t},\n\n\tdraw: function(path, width, height){\n\t\tif (!(path instanceof Path)) path = new Path(path);\n\t\tthis.path = path;\n\t\tthis._commands = path.toCommands();\n\t\tif (width != null) this.width = width;\n\t\tif (height != null) this.height = height;\n\t\treturn this.invalidate();\n\t},\n\n\tlocalHitTest: function(x, y){\n\t\tif (!this._fill) return null;\n\t\tif (this.width == null || this.height == null){\n\t\t\tvar context = Base._genericContext, commands = this._commands;\n\t\t\tif (!commands) return null;\n\t\t\tcontext.beginPath();\n\t\t\tfor (var i = 0, l = commands.length; i < l; i++)\n\t\t\t\tcommands[i](context);\n\t\t\treturn context.isPointInPath(x, y) ? this : null;\n\t\t}\n\t\tif (x > 0 && y > 0 && x < this.width && y < this.height){\n\t\t\treturn this;\n\t\t}\n\t\treturn null;\n\t},\n\n\trenderShapeTo: function(context){\n\t\tif (this._invisible || !this._commands || (!this._fill && !this._stroke)) {\n\t\t\treturn null;\n\t\t}\n\t\tcontext.transform(this.xx, this.yx, this.xy, this.yy, this.x, this.y);\n\t\tvar commands = this._commands,\n\t\t    fill = this._fill,\n\t\t    stroke = this._stroke,\n\t\t    dash = this._strokeDash;\n\n\t\tcontext.beginPath();\n\n\t\tif (dash) {\n\t\t\tif (context.setLineDash) {\n\t\t\t\tcontext.setLineDash(dash);\n\t\t\t} else {\n\t\t\t\t// TODO: Remove when FF supports setLineDash.\n\t\t\t\tcontext.mozDash = dash;\n\t\t\t}\n\t\t\t// TODO: Create fallback to other browsers.\n\t\t} else {\n\t\t\tif (context.setLineDash) {\n\t\t\t\tcontext.setLineDash([]);\n\t\t\t} else {\n\t\t\t\tcontext.mozDash = null;\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 0, l = commands.length; i < l; i++)\n\t\t\tcommands[i](context);\n\n\t\tif (fill){\n\t\t\tvar m = this._fillTransform;\n\t\t\tif (m){\n\t\t\t\tcontext.save(); // TODO: Optimize away this by restoring the transform before stroking\n\t\t\t\tcontext.transform(m.xx, m.yx, m.xy, m.yy, m.x, m.y);\n\t\t\t\tcontext.fillStyle = fill;\n\t\t\t\tcontext.fill();\n\t\t\t\tcontext.restore();\n\t\t\t} else {\n\t\t\t\tcontext.fillStyle = fill;\n\t\t\t\tcontext.fill();\n\t\t\t}\n\t\t}\n\t\tif (stroke){\n\t\t\tcontext.strokeStyle = stroke;\n\t\t\tcontext.lineWidth = this._strokeWidth;\n\t\t\tcontext.lineCap = this._strokeCap;\n\t\t\tcontext.lineJoin = this._strokeJoin;\n\t\t\tcontext.stroke();\n\t\t}\n\t}\n\n});\n","var Class = require('../../core/class');\nvar Container = require('../../dom/container');\nvar Node = require('./node');\n\nmodule.exports = Class(Node, Container, {\n\t\n\tinitialize: function(width, height){\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t},\n\n\tlocalHitTest: function(x, y){\n\t\tvar node = this.lastChild;\n\t\twhile (node){\n\t\t\tvar hit = node.hitTest(x, y);\n\t\t\tif (hit) return hit;\n\t\t\tnode = node.previousSibling;\n\t\t}\n\t\treturn null;\n\t},\n\n\trenderLayerTo: function(context, xx, yx, xy, yy, x, y){\n\t\tif (this._invisible) return;\n\n\t\tx = xx * this.x + xy * this.y + x;\n\t\ty = yx * this.x + yy * this.y + y;\n\n\t\tvar t = xx;\n\t\txx = t * this.xx + xy * this.yx;\n\t\txy = t * this.xy + xy * this.yy;\n\t\tt = yx;\n\t\tyx = t * this.xx + yy * this.yx;\n\t\tyy = t * this.xy + yy * this.yy;\n\n\t\tvar node = this.firstChild;\n\t\twhile (node){\n\t\t\tnode.renderTo(context, xx, yx, xy, yy, x, y);\n\t\t\tnode = node.nextSibling;\n\t\t}\n\t}\n\n});\n","var Class = require('../../core/class');\nvar Container = require('../../dom/container');\nvar Node = require('./node');\n\nmodule.exports = Class(Node, Container, {\n\n\tinitialize: function(width, height){\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t},\n\n\tlocalHitTest: function(x, y) {\n\t\tvar node = this.lastChild;\n\t\twhile (node){\n\t\t\tvar hit = node.hitTest(x, y);\n\t\t\tif (hit) return hit;\n\t\t\tnode = node.previousSibling;\n\t\t}\n\t\treturn null;\n\t},\n\n\trenderLayerTo: function(context, xx, yx, xy, yy, x, y) {\n\t\tcontext.setTransform(xx, yx, xy, yy, x, y);\n\t\tcontext.save();\n\t\t// Need beginPath to fix Firefox bug. See 3354054.\n\t\tcontext.beginPath();\n\t\tcontext.rect(this.x, this.y, this.width, this.height);\n\t\tcontext.clip();\n\n\t\tvar node = this.firstChild;\n\t\twhile(node) {\n\t\t\tnode.renderTo(context, xx, yx, xy, yy, x, y);\n\t\t\tnode = node.nextSibling;\n\t\t}\n\t\tcontext.restore();\n\t}\n});\n","var Class = require('../../core/class');\nvar Base = require('./base');\n\nvar fontAnchors = { middle: 'center' };\n\nmodule.exports = Class(Base, {\n\n\tbase_initialize: Base.prototype.initialize,\n\n\tinitialize: function(text, font, alignment, path){\n\t\tthis.base_initialize();\n\t\tthis.draw.apply(this, arguments);\n\t},\n\n\tdraw: function(text, font, alignment, path){\n\t\tvar em;\n\t\tif (typeof font == 'string'){\n\t\t\tem = Number(/(\\d+)/.exec(font)[0]);\n\t\t} else if (font){\n\t\t\tem = parseFloat(font.fontSize || font['font-size'] || '12');\n\t\t\tfont = (font.fontStyle || font['font-style'] || '') + ' ' +\n\t\t\t\t(font.fontVariant || font['font-variant'] || '') + ' ' +\n\t\t\t\t(font.fontWeight || font['font-weight'] || '') + ' ' +\n\t\t\t\tem + 'px ' +\n\t\t\t\t(font.fontFamily || font['font-family'] || 'Arial');\n\t\t} else {\n\t\t\tfont = this._font;\n\t\t}\n\n\t\tvar lines = text && text.split(/\\r?\\n/);\n\t\tthis._font = font;\n\t\tthis._fontSize = em;\n\t\tthis._text = lines;\n\t\tthis._alignment = fontAnchors[alignment] || alignment || 'left';\n\n\t\tvar context = Base._genericContext;\n\n\t\tcontext.font = this._font;\n\t\tcontext.textAlign = this._alignment;\n\t\tcontext.textBaseline = 'middle';\n\n\t\tlines = this._text;\n\t\tvar l = lines.length, width = 0;\n\t\tfor (var i = 0; i < l; i++){\n\t\t\tvar w = context.measureText(lines[i]).width;\n\t\t\tif (w > width) width = w;\n\t\t}\n\t\tthis.width = width;\n\t\tthis.height = l ? l * 1.1 * em : 0;\n\t\treturn this.invalidate();\n\t},\n\n\t// Interaction\n\n\tlocalHitTest: function(x, y){\n\t\tif (!this._fill) return null;\n\t\tif (x > 0 && y > 0 && x < this.width && y < this.height){\n\t\t\treturn this;\n\t\t}\n\t\treturn null;\n\t},\n\n\t// Rendering\n\n\trenderShapeTo: function(context){\n\t\tif (this._invisible || !this._text || (!this._fill && !this._stroke)) {\n\t\t\treturn null;\n\t\t}\n\t\tcontext.transform(this.xx, this.yx, this.xy, this.yy, this.x, this.y);\n\t\tvar fill = this._fill,\n\t\t    stroke = this._stroke,\n\t\t    text = this._text,\n\t\t    dash = this._strokeDash;\n\n\t\tcontext.font = this._font;\n\t\tcontext.textAlign = this._alignment;\n\t\tcontext.textBaseline = 'middle';\n\n\t\tvar em = this._fontSize,\n\t\t    y = em / 2,\n\t\t    lineHeight = 1.1 * em,\n\t\t    lines = text,\n\t\t    l = lines.length;\n\n\t\tif (fill){\n\t\t\tcontext.fillStyle = fill;\n\t\t\tfor (var i = 0; i < l; i++)\n\t\t\t\tcontext.fillText(lines[i], 0, y + i * lineHeight);\n\t\t}\n\t\tif (stroke){\n\t\t\tif (dash) {\n\t\t\t\tif (context.setLineDash) {\n\t\t\t\t\tcontext.setLineDash(dash);\n\t\t\t\t} else {\n\t\t\t\t\t// TODO: Remove when FF supports setLineDash.\n\t\t\t\t\tcontext.mozDash = dash;\n\t\t\t\t}\n\t\t\t\t// TODO: Create fallback to other browsers.\n\t\t\t} else {\n\t\t\t\tif (context.setLineDash) {\n\t\t\t\t\tcontext.setLineDash([]);\n\t\t\t\t} else {\n\t\t\t\t\tcontext.mozDash = null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcontext.strokeStyle = stroke;\n\t\t\tcontext.lineWidth = this._strokeWidth;\n\t\t\tcontext.lineCap = this._strokeCap;\n\t\t\tcontext.lineJoin = this._strokeJoin;\n\t\t\tfor (i = 0; i < l; i++)\n\t\t\t\tcontext.strokeText(lines[i], 0, y + i * lineHeight);\n\t\t}\n\t}\n\n});\n","var VMLCSS = 'behavior:url(#default#VML);display:inline-block;position:absolute;left:0px;top:0px;';\n\nvar styleSheet, styledTags = {}, styleTag = function(tag){\n\tif (styleSheet) styledTags[tag] = styleSheet.addRule('av\\\\:' + tag, VMLCSS);\n};\n\nexports.init = function(document){\n\n\tvar namespaces;\n\ttry { // IE9 workaround: sometimes it throws here\n\t\tnamespaces = document.namespaces;\n\t} catch (e) {\n\t}\n\tif (!namespaces) return false;\n\n\tnamespaces.add('av', 'urn:schemas-microsoft-com:vml');\n\tnamespaces.add('ao', 'urn:schemas-microsoft-com:office:office');\n\n\tstyleSheet = document.createStyleSheet();\n\tstyleSheet.addRule('vml', 'display:inline-block;position:relative;overflow:hidden;');\n/*\tstyleTag('skew');\n\tstyleTag('fill');\n\tstyleTag('stroke');\n\tstyleTag('path');\n\tstyleTag('textpath');\n\tstyleTag('group');*/\n\n\tstyleTag('vml');\n\n\treturn true;\n\n};\n\nexports.createElement = function(tag){\n\tif (!(tag in styledTags)) styleTag(tag);\n\treturn document.createElement('av:' + tag);\n};\n","var Class = require('../../core/class');\nvar Container = require('../../dom/container');\nvar Element = require('../../dom/native');\nvar DOM = require('./dom');\n\nvar precision = 100;\n\nvar VMLSurface = Class(Element, Container, {\n\t\n\tinitialize: function VMLSurface(width, height, existingElement){\n\t\tthis.element = existingElement || document.createElement('vml');\n\t\tthis.containerElement = DOM.createElement('group');\n\t\tthis.element.appendChild(this.containerElement);\n\t\tif (width != null && height != null) this.resize(width, height);\n\t},\n\n\tresize: function(width, height){\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\t\n\t\tvar style = this.element.style;\n\t\tstyle.pixelWidth = width;\n\t\tstyle.pixelHeight = height;\n\t\t\n\t\tstyle = this.containerElement.style;\n\t\tstyle.width = width;\n\t\tstyle.height = height;\n\t\t\n\t\tvar halfPixel = (0.5 * precision);\n\t\t\n\t\tthis.containerElement.coordorigin = halfPixel + ',' + halfPixel;\n\t\tthis.containerElement.coordsize = (width * precision) + ',' + (height * precision);\n\n\t\treturn this;\n\t}\n\t\n});\n\nVMLSurface.tagName = 'av:vml';\n\nmodule.exports = VMLSurface;","var Class = require('../../core/class');\nvar Path = require('../../core/path');\n\nvar precision = 100;\n\nvar round = Math.round;\n\nvar VMLPath = Class(Path, {\n\n\tinitialize: function(path){\n\t\tthis.reset();\n\t\tif (path instanceof VMLPath){\n\t\t\tthis.path = [Array.prototype.join.call(path.path, ' ')];\n\t\t} else if (path){\n\t\t\tif (path.applyToPath)\n\t\t\t\tpath.applyToPath(this);\n\t\t\telse\n\t\t\t\tthis.push(path);\n\t\t}\n\t},\n\n\tonReset: function(){\n\t\tthis.path = [];\n\t},\n\n\tonMove: function(sx, sy, x, y){\n\t\tthis.path.push('m', round(x * precision), round(y * precision));\n\t},\n\n\tonLine: function(sx, sy, x, y){\n\t\tthis.path.push('l', round(x * precision), round(y * precision));\n\t},\n\n\tonBezierCurve: function(sx, sy, p1x, p1y, p2x, p2y, x, y){\n\t\tthis.path.push('c',\n\t\t\tround(p1x * precision), round(p1y * precision),\n\t\t\tround(p2x * precision), round(p2y * precision),\n\t\t\tround(x * precision), round(y * precision)\n\t\t);\n\t},\n\n\t_arcToBezier: Path.prototype.onArc,\n\n\tonArc: function(sx, sy, ex, ey, cx, cy, rx, ry, sa, ea, ccw, rotation){\n\t\tif (rx != ry || rotation) return this._arcToBezier(sx, sy, ex, ey, cx, cy, rx, ry, sa, ea, ccw, rotation);\n\t\tcx *= precision;\n\t\tcy *= precision;\n\t\trx *= precision;\n\t\tthis.path.push(ccw ? 'at' : 'wa',\n\t\t\tround(cx - rx), round(cy - rx),\n\t\t\tround(cx + rx), round(cy + rx),\n\t\t\tround(sx * precision), round(sy * precision),\n\t\t\tround(ex * precision), round(ey * precision)\n\t\t);\n\t},\n\n\tonClose: function(){\n\t\tthis.path.push('x');\n\t},\n\n\ttoVML: function(){\n\t\treturn this.path.join(' ');\n\t}\n\n});\n\nVMLPath.prototype.toString = VMLPath.prototype.toVML;\n\nmodule.exports = VMLPath;","var Class = require('../core/class');\nvar Dummy = require('./dummy');\nvar Native = require('./native');\n\nmodule.exports = Class(Dummy, Native, {\n\n\tdummy_inject: Dummy.prototype.inject,\n\tdummy_injectBefore: Dummy.prototype.injectBefore,\n\tdummy_eject: Dummy.prototype.eject,\n\tnative_inject: Native.prototype.inject,\n\tnative_injectBefore: Native.prototype.injectBefore,\n\tnative_eject: Native.prototype.eject,\n\n\tinject: function(container){\n\t\tthis.dummy_inject(container);\n\t\tthis.native_inject(container);\n\t\treturn this;\n\t},\n\n\tinjectBefore: function(sibling){\n\t\tthis.dummy_injectBefore(sibling);\n\t\tthis.native_injectBefore(sibling);\n\t\treturn this;\n\t},\n\n\teject: function(){\n\t\tthis.dummy_eject();\n\t\tthis.native_eject();\n\t\treturn this;\n\t}\n\n});\n","var Class = require('../../core/class');\nvar Transform = require('../../core/transform');\nvar Element = require('../../dom/shadow');\nvar DOM = require('./dom');\n\nmodule.exports = Class(Element, Transform, {\n\n\tinitialize: function(tag){\n\t\t//this.uid = uniqueID();\n\t\tvar element = this.element = DOM.createElement(tag);\n\t\t//element.setAttribute('id', 'e' + this.uid);\n\t},\n\n\t_place: function(){\n\t\tif (this.parentNode){\n\t\t\tthis._transform();\n\t\t}\n\t},\n\n\t// visibility\n\n\thide: function(){\n\t\tthis.element.style.display = 'none';\n\t\treturn this;\n\t},\n\n\tshow: function(){\n\t\tthis.element.style.display = '';\n\t\treturn this;\n\t},\n\n\t// interaction\n\n\tindicate: function(cursor, tooltip){\n\t\tif (cursor) this.element.style.cursor = cursor;\n\t\tif (tooltip) this.element.title = tooltip;\n\t\treturn this;\n\t}\n\n});\n","var Class = require('../../core/class');\nvar Transform = require('../../core/transform');\nvar Color = require('../../core/color');\nvar Node = require('./node');\nvar DOM = require('./dom');\n\nvar precision = 100;\n\nvar defaultBox = { left: 0, top: 0, width: 500, height: 500 };\n\nmodule.exports = Class(Node, {\n\n\telement_initialize: Node.prototype.initialize,\n\n\tinitialize: function(tag){\n\t\tthis.element_initialize(tag);\n\t\tvar element = this.element;\n\t\t\n\t\tvar skew = this.skewElement = DOM.createElement('skew');\n\t\tskew.on = true;\n\t\telement.appendChild(skew);\n\n\t\tvar fill = this.fillElement = DOM.createElement('fill');\n\t\tfill.on = false;\n\t\telement.appendChild(fill);\n\t\t\n\t\tvar stroke = this.strokeElement = DOM.createElement('stroke');\n\t\tstroke.on = false;\n\t\telement.appendChild(stroke);\n\t},\n\t\n\t/* transform */\n\t\n\t_transform: function(){\n\t\tvar container = this.parentNode;\n\t\t\n\t\t// Active Transformation Matrix\n\t\tvar m = container ? new Transform(container._activeTransform).transform(this) : this;\n\t\t\n\t\t// Box in shape user space\n\t\t\n\t\tvar box = this._boxCoords || this._size || defaultBox;\n\t\t\n\t\tvar originX = box.left || 0,\n\t\t\toriginY = box.top || 0,\n\t\t\twidth = box.width || 1,\n\t\t\theight = box.height || 1;\n\t\t\t\t\n\t\t// Flipped\n\t    var flip = m.yx / m.xx > m.yy / m.xy;\n\t\tif (m.xx < 0 ? m.xy >= 0 : m.xy < 0) flip = !flip;\n\t\tflip = flip ? -1 : 1;\n\t\t\n\t\tm = new Transform().scale(flip, 1).transform(m);\n\t\t\n\t\t// Rotation is approximated based on the transform\n\t\tvar rotation = Math.atan2(-m.xy, m.yy) * 180 / Math.PI;\n\t\t\n\t\t// Reverse the rotation, leaving the final transform in box space\n\t\tvar rad = rotation * Math.PI / 180, sin = Math.sin(rad), cos = Math.cos(rad);\n\t\t\n\t\tvar transform = new Transform(\n\t\t\t(m.xx * cos - m.xy * sin),\n\t\t\t(m.yx * cos - m.yy * sin) * flip,\n\t\t\t(m.xy * cos + m.xx * sin) * flip,\n\t\t\t(m.yy * cos + m.yx * sin)\n\t\t);\n\n\t\tvar rotationTransform = new Transform().rotate(rotation, 0, 0);\n\n\t\tvar shapeToBox = new Transform().rotate(-rotation, 0, 0).transform(m).moveTo(0,0);\n\n\t\t// Scale box after reversing rotation\n\t\twidth *= Math.abs(shapeToBox.xx);\n\t\theight *= Math.abs(shapeToBox.yy);\n\t\t\n\t\t// Place box\n\t\tvar left = m.x, top = m.y;\n\t\t\n\t\t// Compensate for offset by center origin rotation\n\t\tvar vx = -width / 2, vy = -height / 2;\n\t\tvar point = rotationTransform.point(vx, vy);\n\t\tleft -= point.x - vx;\n\t\ttop -= point.y - vy;\n\t\t\n\t\t// Adjust box position based on offset\n\t\tvar rsm = new Transform(m).moveTo(0,0);\n\t\tpoint = rsm.point(originX, originY);\n\t\tleft += point.x;\n\t\ttop += point.y;\n\t\t\n\t\tif (flip < 0) left = -left - width;\n\t\t\n\t\t// Place transformation origin\n\t\tvar point0 = rsm.point(-originX, -originY);\n\t\tvar point1 = rotationTransform.point(width, height);\n\t\tvar point2 = rotationTransform.point(width, 0);\n\t\tvar point3 = rotationTransform.point(0, height);\n\t\t\n\t\tvar minX = Math.min(0, point1.x, point2.x, point3.x),\n\t\t    maxX = Math.max(0, point1.x, point2.x, point3.x),\n\t\t    minY = Math.min(0, point1.y, point2.y, point3.y),\n\t\t    maxY = Math.max(0, point1.y, point2.y, point3.y);\n\t\t\n\t\tvar transformOriginX = (point0.x - point1.x / 2) / (maxX - minX) * flip,\n\t\t    transformOriginY = (point0.y - point1.y / 2) / (maxY - minY);\n\t\t\n\t\t// Adjust the origin\n\t\tpoint = shapeToBox.point(originX, originY);\n\t\toriginX = point.x;\n\t\toriginY = point.y;\n\t\t\n\t\t// Scale stroke\n\t\tvar strokeWidth = this._strokeWidth;\n\t\tif (strokeWidth){\n\t\t\t// Scale is the hypothenus between the two vectors\n\t\t\t// TODO: Use area calculation instead\n\t\t\tvar vx = m.xx + m.xy, vy = m.yy + m.yx;\n\t\t\tstrokeWidth *= Math.sqrt(vx * vx + vy * vy) / Math.sqrt(2);\n\t\t}\n\t\t\n\t\t// convert to multiplied precision space\n\t\toriginX *= precision;\n\t\toriginY *= precision;\n\t\tleft *= precision;\n\t\ttop *= precision;\n\t\twidth *= precision;\n\t\theight *= precision;\n\t\t\n\t\t// Set box\n\t\tvar element = this.element;\n\t\telement.coordorigin = originX + ',' + originY;\n\t\telement.coordsize = width + ',' + height;\n\t\telement.style.left = left + 'px';\n\t\telement.style.top = top + 'px';\n\t\telement.style.width = width;\n\t\telement.style.height = height;\n\t\telement.style.rotation = rotation.toFixed(8);\n\t\telement.style.flip = flip < 0 ? 'x' : '';\n\t\t\n\t\t// Set transform\n\t\tvar skew = this.skewElement;\n\t\tskew.matrix = [transform.xx.toFixed(4), transform.xy.toFixed(4), transform.yx.toFixed(4), transform.yy.toFixed(4), 0, 0];\n\t\tskew.origin = transformOriginX + ',' + transformOriginY;\n\n\t\t// Set stroke\n\t\tthis.strokeElement.weight = strokeWidth + 'px';\n\t},\n\t\n\t/* styles */\n\n\t_createGradient: function(style, stops){\n\t\tvar fill = this.fillElement;\n\n\t\t// Temporarily eject the fill from the DOM\n\t\tthis.element.removeChild(fill);\n\n\t\tfill.type = style;\n\t\tfill.method = 'none';\n\t\tfill.rotate = true;\n\n\t\tvar colors = [], color1, color2;\n\n\t\tvar addColor = function(offset, color){\n\t\t\tcolor = Color.detach(color);\n\t\t\tif (color1 == null) color1 = color2 = color;\n\t\t\telse color2 = color;\n\t\t\tcolors.push(offset + ' ' + color[0]);\n\t\t};\n\n\t\t// Enumerate stops, assumes offsets are enumerated in order\n\t\tif ('length' in stops) for (var i = 0, l = stops.length - 1; i <= l; i++) addColor(i / l, stops[i]);\n\t\telse for (var offset in stops) addColor(offset, stops[offset]);\n\t\t\n\t\tfill.color = color1[0];\n\t\tfill.color2 = color2[0];\n\t\t\n\t\t//if (fill.colors) fill.colors.value = colors; else\n\t\tfill.colors = colors;\n\n\t\t// Opacity order gets flipped when color stops are specified\n\t\tfill.opacity = color2[1];\n\t\tfill['ao:opacity2'] = color1[1];\n\n\t\tfill.on = true;\n\t\tthis.element.appendChild(fill);\n\t\treturn fill;\n\t},\n\t\n\t_setColor: function(type, color){\n\t\tvar element = type == 'fill' ? this.fillElement : this.strokeElement;\n\t\tif (color == null){\n\t\t\telement.on = false;\n\t\t} else {\n\t\t\tcolor = Color.detach(color);\n\t\t\telement.color = color[0];\n\t\t\telement.opacity = color[1];\n\t\t\telement.on = true;\n\t\t}\n\t},\n\t\n\tfill: function(color){\n\t\tif (arguments.length > 1){\n\t\t\tthis.fillLinear(arguments);\n\t\t} else {\n\t\t\tthis._boxCoords = defaultBox;\n\t\t\tvar fill = this.fillElement;\n\t\t\tfill.type = 'solid';\n\t\t\tfill.color2 = '';\n\t\t\tfill['ao:opacity2'] = '';\n\t\t\tif (fill.colors) fill.colors.value = '';\n\t\t\tthis._setColor('fill', color);\n\t\t}\n\t\treturn this;\n\t},\n\n\tfillRadial: function(stops, focusX, focusY, radiusX, radiusY, centerX, centerY){\n\t\tvar fill = this._createGradient('gradientradial', stops);\n\t\tif (focusX == null) focusX = this.left + this.width * 0.5;\n\t\tif (focusY == null) focusY = this.top + this.height * 0.5;\n\t\tif (radiusY == null) radiusY = radiusX || (this.height * 0.5);\n\t\tif (radiusX == null) radiusX = this.width * 0.5;\n\t\tif (centerX == null) centerX = focusX;\n\t\tif (centerY == null) centerY = focusY;\n\t\t\n\t\tcenterX += centerX - focusX;\n\t\tcenterY += centerY - focusY;\n\t\t\n\t\tvar box = this._boxCoords = {\n\t\t\tleft: centerX - radiusX * 2,\n\t\t\ttop: centerY - radiusY * 2,\n\t\t\twidth: radiusX * 4,\n\t\t\theight: radiusY * 4\n\t\t};\n\t\tfocusX -= box.left;\n\t\tfocusY -= box.top;\n\t\tfocusX /= box.width;\n\t\tfocusY /= box.height;\n\n\t\tfill.focussize = '0 0';\n\t\tfill.focusposition = focusX + ',' + focusY;\n\t\tfill.focus = '50%';\n\t\t\n\t\tthis._transform();\n\t\t\n\t\treturn this;\n\t},\n\n\tfillLinear: function(stops, x1, y1, x2, y2){\n\t\tvar fill = this._createGradient('gradient', stops);\n\t\tfill.focus = '100%';\n\t\tif (arguments.length == 5){\n\t\t\tvar w = Math.abs(x2 - x1), h = Math.abs(y2 - y1);\n\t\t\tthis._boxCoords = {\n\t\t\t\tleft: Math.min(x1, x2),\n\t\t\t\ttop: Math.min(y1, y2),\n\t\t\t\twidth: w < 1 ? h : w,\n\t\t\t\theight: h < 1 ? w : h\n\t\t\t};\n\t\t\tfill.angle = (360 + Math.atan2((x2 - x1) / h, (y2 - y1) / w) * 180 / Math.PI) % 360;\n\t\t} else {\n\t\t\tthis._boxCoords = null;\n\t\t\tfill.angle = (x1 == null) ? 0 : (90 + x1) % 360;\n\t\t}\n\t\tthis._transform();\n\t\treturn this;\n\t},\n\n\tfillImage: function(url, width, height, left, top, color1, color2){\n\t\tvar fill = this.fillElement;\n\t\tif (color1 != null){\n\t\t\tcolor1 = Color.detach(color1);\n\t\t\tif (color2 != null) color2 = Color.detach(color2);\n\t\t\tfill.type = 'pattern';\n\t\t\tfill.color = color1[0];\n\t\t\tfill.color2 = color2 == null ? color1[0] : color2[0];\n\t\t\tfill.opacity = color2 == null ? 0 : color2[1];\n\t\t\tfill['ao:opacity2'] = color1[1];\n\t\t} else {\n\t\t\tfill.type = 'tile';\n\t\t\tfill.color = '';\n\t\t\tfill.color2 = '';\n\t\t\tfill.opacity = 1;\n\t\t\tfill['ao:opacity2'] = 1;\n\t\t}\n\t\tif (fill.colors) fill.colors.value = '';\n\t\tfill.rotate = true;\n\t\tfill.src = url;\n\t\t\n\t\tfill.size = '1,1';\n\t\tfill.position = '0,0';\n\t\tfill.origin = '0,0';\n\t\tfill.aspect = 'ignore'; // ignore, atleast, atmost\n\t\tfill.on = true;\n\n\t\tif (!left) left = 0;\n\t\tif (!top) top = 0;\n\t\tthis._boxCoords = width ? { left: left + 0.5, top: top + 0.5, width: width, height: height } : null;\n\t\tthis._transform();\n\t\treturn this;\n\t},\n\n\t/* stroke */\n\t\n\tstroke: function(color, width, cap, join){\n\t\tvar stroke = this.strokeElement;\n\t\tthis._strokeWidth = (width != null) ? width : 1;\n\t\tstroke.weight = (width != null) ? width + 'px' : 1;\n\t\tstroke.endcap = (cap != null) ? ((cap == 'butt') ? 'flat' : cap) : 'round';\n\t\tstroke.joinstyle = (join != null) ? join : 'round';\n\n\t\tthis._setColor('stroke', color);\n\t\treturn this;\n\t}\n\n});","var Class = require('../../core/class');\nvar Base = require('./base');\nvar Path = require('./path');\nvar DOM = require('./dom');\n\nvar precision = 100;\n\nmodule.exports = Class(Base, {\n\n\tbase_initialize: Base.prototype.initialize,\n\t\n\tinitialize: function(path, width, height){\n\t\tthis.base_initialize('shape');\n\n\t\tvar p = this.pathElement = DOM.createElement('path');\n\t\tp.gradientshapeok = true;\n\t\tthis.element.appendChild(p);\n\t\t\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\t\n\t\tif (path != null) this.draw(path);\n\t},\n\t\n\t// SVG to VML\n\t\n\tdraw: function(path, width, height){\n\t\t\n\t\tif (!(path instanceof Path)) path = new Path(path);\n\t\tthis._vml = path.toVML();\n\t\t//this._size = path.measure();\n\t\t\n\t\tif (width != null) this.width = width;\n\t\tif (height != null) this.height = height;\n\t\t\n\t\tif (!this._boxCoords) this._transform();\n\t\tthis._redraw(this._prefix, this._suffix);\n\t\t\n\t\treturn this;\n\t},\n\t\n\t// radial gradient workaround\n\n\t_redraw: function(prefix, suffix){\n\t\tvar vml = this._vml || '';\n\n\t\tthis._prefix = prefix;\n\t\tthis._suffix = suffix\n\t\tif (prefix){\n\t\t\tvml = [\n\t\t\t\tprefix, vml, suffix,\n\t\t\t\t// Don't stroke the path with the extra ellipse, redraw the stroked path separately\n\t\t\t\t'ns e', vml, 'nf'\n\t\t\t].join(' ');\n\t\t}\n\n\t\tthis.element.path = vml + 'e';\n\t},\n\n\tfillRadial: function(stops, focusX, focusY, radiusX, radiusY, centerX, centerY){\n\t\tvar fill = this._createGradient('gradientradial', stops);\n\t\tif (focusX == null) focusX = (this.left || 0) + (this.width || 0) * 0.5;\n\t\tif (focusY == null) focusY = (this.top || 0) + (this.height || 0) * 0.5;\n\t\tif (radiusY == null) radiusY = radiusX || (this.height * 0.5) || 0;\n\t\tif (radiusX == null) radiusX = (this.width || 0) * 0.5;\n\t\tif (centerX == null) centerX = focusX;\n\t\tif (centerY == null) centerY = focusY;\n\n\t\tcenterX += centerX - focusX;\n\t\tcenterY += centerY - focusY;\n\t\t\n\t\tvar cx = Math.round(centerX * precision),\n\t\t\tcy = Math.round(centerY * precision),\n\n\t\t\trx = Math.round(radiusX * 2 * precision),\n\t\t\try = Math.round(radiusY * 2 * precision),\n\n\t\t\tarc = ['wa', cx - rx, cy - ry, cx + rx, cy + ry].join(' ');\n\n\t\tthis._redraw(\n\t\t\t// Resolve rendering bug\n\t\t\t['m', cx, cy - ry, 'l', cx, cy - ry].join(' '),\n\t\t\t// Draw an ellipse around the path to force an elliptical gradient on any shape\n\t\t\t[\n\t\t\t\t'm', cx, cy - ry,\n\t\t\t\tarc, cx, cy - ry, cx, cy + ry, arc, cx, cy + ry, cx, cy - ry,\n\t\t\t\tarc, cx, cy - ry, cx, cy + ry, arc, cx, cy + ry, cx, cy - ry\n\t\t\t].join(' ')\n\t\t);\n\n\t\tthis._boxCoords = { left: focusX - 2, top: focusY - 2, width: 4, height: 4 };\n\t\t\n\t\tfill.focusposition = '0.5,0.5';\n\t\tfill.focussize = '0 0';\n\t\tfill.focus = '50%';\n\t\t\n\t\tthis._transform();\n\t\t\n\t\treturn this;\n\t}\n\n});","var Class = require('../../core/class');\nvar Transform = require('../../core/transform');\nvar Container = require('../../dom/container');\nvar Node = require('./node');\n\nmodule.exports = Class(Node, Container, {\n\t\n\telement_initialize: Node.prototype.initialize,\n\t\n\tinitialize: function(width, height){\n\t\tthis.element_initialize('group');\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t},\n\n\t_transform: function(){\n\t\tvar element = this.element;\n\t\telement.coordorigin = '0,0';\n\t\telement.coordsize = '1000,1000';\n\t\telement.style.left = 0;\n\t\telement.style.top = 0;\n\t\telement.style.width = 1000;\n\t\telement.style.height = 1000;\n\t\telement.style.rotation = 0;\n\t\t\n\t\tvar container = this.parentNode;\n\t\tthis._activeTransform = container ? new Transform(container._activeTransform).transform(this) : this;\n\t\tvar node = this.firstChild;\n\t\twhile (node){\n\t\t\tnode._transform();\n\t\t\tnode = node.nextSibling;\n\t\t}\n\t}\n\n});","var Class = require('../../core/class');\nvar Transform = require('../../core/transform');\nvar Container = require('../../dom/container');\nvar Node = require('./node');\n\nmodule.exports = Class(Node, Container, {\n\n  element_initialize: Node.prototype.initialize,\n\n  initialize: function(width, height){\n    this.element_initialize('clippingrectangle');\n    this.width = width;\n    this.height = height;\n  },\n\n  _transform: function(){\n    var element = this.element;\n    element.clip = true;\n    element.coordorigin = -this.x + ',' + (-1 * this.y);\n    element.coordsize = this.width + ',' + this.height;\n    // IE8 doesn't like clipBottom.  Don't ask me why.\n    // element.style.clipBottom = this.height + this.y;\n    element.style.clipLeft = this.x;\n    element.style.clipRight = this.width + this.x;\n    element.style.clipTop = this.y;\n    element.style.left = -this.x;\n    element.style.top = -this.y;\n    element.style.width = this.width + this.x;\n    element.style.height = this.height + this.y;\n    element.style.rotation = 0;\n\n    var container = this.parentNode;\n    this._activeTransform = container ? new Transform(container._activeTransform).transform(this) : this;\n    var node = this.firstChild;\n    while (node){\n      node._transform();\n      node = node.nextSibling;\n    }\n  }\n\n});\n","var Class = require('../../core/class');\nvar Base = require('./base');\nvar Path = require('./path');\nvar Surface = require('./surface');\nvar Group = require('./group');\nvar DOM = require('./dom');\n\nvar fontAnchors = { start: 'left', middle: 'center', end: 'right' };\n\nmodule.exports = Class(Base, {\n\n\tbase_initialize: Base.prototype.initialize,\n\n\tinitialize: function(text, font, alignment, path){\n\t\tthis.base_initialize('shape');\n\t\t\n\t\tvar p = this.pathElement = DOM.createElement('path');\n\t\tp.textpathok = true;\n\t\tthis.element.appendChild(p);\n\t\t\n\t\tp = this.textPathElement = DOM.createElement(\"textpath\");\n\t\tp.on = true;\n\t\tp.style['v-text-align'] = 'left';\n\t\tthis.element.appendChild(p);\n\t\t\n\t\tthis.draw.apply(this, arguments);\n\t},\n\t\n\tdraw: function(text, font, alignment, path){\n\t\tvar element = this.element,\n\t\t    textPath = this.textPathElement,\n\t\t    style = textPath.style;\n\t\t\n\t\ttextPath.string = text;\n\t\t\n\t\tif (font){\n\t\t\tif (typeof font == 'string'){\n\t\t\t\tstyle.font = font;\n\t\t\t} else {\n\t\t\t\tfor (var key in font){\n\t\t\t\t\tvar ckey = key.camelCase ? key.camelCase() : key;\n\t\t\t\t\tif (ckey == 'fontFamily') style[ckey] = \"'\" + font[key] + \"'\";\n\t\t\t\t\t// NOT UNIVERSALLY SUPPORTED OPTIONS\n\t\t\t\t\t// else if (ckey == 'kerning') style['v-text-kern'] = !!font[key];\n\t\t\t\t\t// else if (ckey == 'rotateGlyphs') style['v-rotate-letters'] = !!font[key];\n\t\t\t\t\t// else if (ckey == 'letterSpacing') style['v-text-spacing'] = Number(font[key]) + '';\n\t\t\t\t\telse style[ckey] = font[key];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (alignment) style['v-text-align'] = fontAnchors[alignment] || alignment;\n\t\t\n\t\tif (path){\n\t\t\tthis.currentPath = path = new Path(path);\n\t\t\tthis.element.path = path.toVML();\n\t\t} else if (!this.currentPath){\n\t\t\tvar i = -1, offsetRows = '\\n';\n\t\t\twhile ((i = text.indexOf('\\n', i + 1)) > -1) offsetRows += '\\n';\n\t\t\ttextPath.string = offsetRows + textPath.string;\n\t\t\tthis.element.path = 'm0,0l1,0';\n\t\t}\n\t\t\n\t\t// Measuring the bounding box is currently necessary for gradients etc.\n\t\t\n\t\t// Clone element because the element is dead once it has been in the DOM\n\t\telement = element.cloneNode(true);\n\t\tstyle = element.style;\n\t\t\n\t\t// Reset coordinates while measuring\n\t\telement.coordorigin = '0,0';\n\t\telement.coordsize = '10000,10000';\n\t\tstyle.left = '0px';\n\t\tstyle.top = '0px';\n\t\tstyle.width = '10000px';\n\t\tstyle.height = '10000px';\n\t\tstyle.rotation = 0;\n\t\telement.removeChild(element.firstChild); // Remove skew\n\t\t\n\t\t// Inject the clone into the document\n\t\t\n\t\tvar canvas = new Surface(1, 1),\n\t\t    group = new Group(), // Wrapping it in a group seems to alleviate some client rect weirdness\n\t\t    body = element.ownerDocument.body;\n\t\t\n\t\tcanvas.inject(body);\n\t\tgroup.element.appendChild(element);\n\t\tgroup.inject(canvas);\n\t\t\n\t\tvar ebb = element.getBoundingClientRect(),\n\t\t    cbb = canvas.toElement().getBoundingClientRect();\n\t\t\n\t\tcanvas.eject();\n\t\t\n\t\tthis.left = ebb.left - cbb.left;\n\t\tthis.top = ebb.top - cbb.top;\n\t\tthis.width = ebb.right - ebb.left;\n\t\tthis.height = ebb.bottom - ebb.top;\n\t\tthis.right = ebb.right - cbb.left;\n\t\tthis.bottom = ebb.bottom - cbb.top;\n\t\t\n\t\tthis._transform();\n\n\t\t//this._size = { left: this.left, top: this.top, width: this.width, height: this.height};\n\t\treturn this;\n\t}\n\n});\n","var hasCanvas = function(){\n\n  var canvas = document.createElement('canvas');\n  return canvas && !!canvas.getContext;\n\n};\n\nif (hasCanvas()) {\n  exports.Surface = require('./canvas/surface');\n  exports.Path = require('./canvas/path');\n  exports.Shape = require('./canvas/shape');\n  exports.Group = require('./canvas/group');\n  exports.ClippingRectangle = require('./canvas/clippingrectangle');\n  exports.Text = require('./canvas/text');\n} else {\n  exports.Surface = require('./vml/surface');\n  exports.Path = require('./vml/path');\n  exports.Shape = require('./vml/shape');\n  exports.Group = require('./vml/group');\n  exports.ClippingRectangle = require('./vml/clippingrectangle');\n  exports.Text = require('./vml/text');\n\n  var DOM = require('./vml/dom');\n  if (typeof document !== 'undefined') DOM.init(document);\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport * as React from 'react';\nimport ReactVersion from 'shared/ReactVersion';\nimport {LegacyRoot} from 'react-reconciler/src/ReactRootTags';\nimport {\n  createContainer,\n  updateContainer,\n  injectIntoDevTools,\n} from 'react-reconciler/src/ReactFiberReconciler';\nimport Transform from 'art/core/transform';\nimport Mode from 'art/modes/current';\nimport FastNoSideEffects from 'art/modes/fast-noSideEffects';\n\nimport {TYPES, childrenAsString} from './ReactARTInternals';\n\nMode.setCurrent(\n  // Change to 'art/modes/dom' for easier debugging via SVG\n  FastNoSideEffects,\n);\n\n/** Declarative fill-type objects; API design not finalized */\n\nconst slice = Array.prototype.slice;\n\nclass LinearGradient {\n  constructor(stops, x1, y1, x2, y2) {\n    this._args = slice.call(arguments);\n  }\n\n  applyFill(node) {\n    node.fillLinear.apply(node, this._args);\n  }\n}\n\nclass RadialGradient {\n  constructor(stops, fx, fy, rx, ry, cx, cy) {\n    this._args = slice.call(arguments);\n  }\n\n  applyFill(node) {\n    node.fillRadial.apply(node, this._args);\n  }\n}\n\nclass Pattern {\n  constructor(url, width, height, left, top) {\n    this._args = slice.call(arguments);\n  }\n\n  applyFill(node) {\n    node.fillImage.apply(node, this._args);\n  }\n}\n\n/** React Components */\n\nclass Surface extends React.Component {\n  componentDidMount() {\n    const {height, width} = this.props;\n\n    this._surface = Mode.Surface(+width, +height, this._tagRef);\n\n    this._mountNode = createContainer(\n      this._surface,\n      LegacyRoot,\n      null,\n      false,\n      false,\n      '',\n    );\n    updateContainer(this.props.children, this._mountNode, this);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const props = this.props;\n\n    if (props.height !== prevProps.height || props.width !== prevProps.width) {\n      this._surface.resize(+props.width, +props.height);\n    }\n\n    updateContainer(this.props.children, this._mountNode, this);\n\n    if (this._surface.render) {\n      this._surface.render();\n    }\n  }\n\n  componentWillUnmount() {\n    updateContainer(null, this._mountNode, this);\n  }\n\n  render() {\n    // This is going to be a placeholder because we don't know what it will\n    // actually resolve to because ART may render canvas, vml or svg tags here.\n    // We only allow a subset of properties since others might conflict with\n    // ART's properties.\n    const props = this.props;\n\n    // TODO: ART's Canvas Mode overrides surface title and cursor\n    const Tag = Mode.Surface.tagName;\n\n    return (\n      <Tag\n        ref={ref => (this._tagRef = ref)}\n        accessKey={props.accessKey}\n        className={props.className}\n        draggable={props.draggable}\n        role={props.role}\n        style={props.style}\n        tabIndex={props.tabIndex}\n        title={props.title}\n      />\n    );\n  }\n}\n\nclass Text extends React.Component {\n  constructor(props) {\n    super(props);\n    // We allow reading these props. Ideally we could expose the Text node as\n    // ref directly.\n    ['height', 'width', 'x', 'y'].forEach(key => {\n      Object.defineProperty(this, key, {\n        get: function() {\n          return this._text ? this._text[key] : undefined;\n        },\n      });\n    });\n  }\n  render() {\n    // This means you can't have children that render into strings...\n    const T = TYPES.TEXT;\n    return (\n      <T {...this.props} ref={t => (this._text = t)}>\n        {childrenAsString(this.props.children)}\n      </T>\n    );\n  }\n}\n\ninjectIntoDevTools({\n  findFiberByHostInstance: () => null,\n  bundleType: __DEV__ ? 1 : 0,\n  version: ReactVersion,\n  rendererPackageName: 'react-art',\n});\n\n/** API */\n\nexport const ClippingRectangle = TYPES.CLIPPING_RECTANGLE;\nexport const Group = TYPES.GROUP;\nexport const Shape = TYPES.SHAPE;\nexport const Path = Mode.Path;\nexport {LinearGradient, Pattern, RadialGradient, Surface, Text, Transform};\n"],"names":["LegacyRoot","ConcurrentRoot","ReactSharedInternals","React","suppressWarning","setSuppressWarning","newSuppressWarning","warn","format","args","printWarning","error","level","ReactDebugCurrentFrame","stack","getStackAddendum","concat","argsWithFormat","map","item","String","unshift","Function","prototype","apply","call","console","assign","Object","get","key","_reactInternals","set","value","enableNewReconciler","enableLazyContextPropagation","enableLegacyHidden","enableSuspenseAvoidThisFallback","warnAboutStringRefs","enableSchedulingProfiler","__PROFILE__","enableProfilerTimer","enableProfilerCommitHooks","FunctionComponent","ClassComponent","IndeterminateComponent","HostRoot","HostPortal","HostComponent","HostText","Fragment","Mode","ContextConsumer","ContextProvider","ForwardRef","Profiler","SuspenseComponent","MemoComponent","SimpleMemoComponent","LazyComponent","IncompleteClassComponent","DehydratedFragment","SuspenseListComponent","ScopeComponent","OffscreenComponent","LegacyHiddenComponent","CacheComponent","TracingMarkerComponent","REACT_ELEMENT_TYPE","Symbol","for","REACT_PORTAL_TYPE","REACT_FRAGMENT_TYPE","REACT_STRICT_MODE_TYPE","REACT_PROFILER_TYPE","REACT_PROVIDER_TYPE","REACT_CONTEXT_TYPE","REACT_SERVER_CONTEXT_TYPE","REACT_FORWARD_REF_TYPE","REACT_SUSPENSE_TYPE","REACT_SUSPENSE_LIST_TYPE","REACT_MEMO_TYPE","REACT_LAZY_TYPE","REACT_SCOPE_TYPE","REACT_DEBUG_TRACING_MODE_TYPE","REACT_OFFSCREEN_TYPE","REACT_LEGACY_HIDDEN_TYPE","REACT_CACHE_TYPE","REACT_TRACING_MARKER_TYPE","REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED","MAYBE_ITERATOR_SYMBOL","iterator","FAUX_ITERATOR_SYMBOL","getIteratorFn","maybeIterable","maybeIterator","getWrappedName","outerType","innerType","wrapperName","displayName","functionName","name","getContextName","type","getComponentNameFromType","tag","$$typeof","context","provider","_context","render","outerName","lazyComponent","payload","_payload","init","_init","x","context2","_globalName","getComponentNameFromFiber","fiber","NoFlags","PerformedWork","Placement","Update","ChildDeletion","ContentReset","Callback","DidCapture","ForceClientRender","Ref","Snapshot","Passive","Hydrating","Visibility","StoreConsistency","LifecycleEffectMask","HostEffectMask","Incomplete","ShouldCapture","ForceUpdateForLegacySuspense","Forked","RefStatic","LayoutStatic","PassiveStatic","MountLayoutDev","MountPassiveDev","BeforeMutationMask","enableCreateEventHandleAPI","MutationMask","LayoutMask","PassiveMask","StaticMask","ReactCurrentOwner","getNearestMountedFiber","node","nearestMounted","alternate","nextNode","flags","return","isFiberMounted","isMounted","component","owner","current","ownerFiber","instance","stateNode","_warnedAboutRefsInRender","getInstance","assertIsMounted","Error","findCurrentFiberUsingSlowPath","a","b","parentA","parentB","nextParent","child","sibling","didFindChild","findCurrentHostFiber","parent","currentParent","findCurrentHostFiberImpl","match","isArrayImpl","Array","isArray","Class","TYPES","CLIPPING_RECTANGLE","GROUP","SHAPE","TEXT","EVENT_TYPES","onClick","onMouseMove","onMouseOver","onMouseOut","onMouseUp","onMouseDown","childrenAsString","children","length","join","ReactInternals","Scheduler","unstable_cancelCallback","unstable_now","unstable_scheduleCallback","unstable_shouldYield","unstable_requestPaint","unstable_getFirstCallbackNode","unstable_runWithPriority","unstable_next","unstable_continueExecution","unstable_pauseExecution","unstable_getCurrentPriorityLevel","unstable_ImmediatePriority","unstable_UserBlockingPriority","unstable_NormalPriority","unstable_LowPriority","unstable_IdlePriority","unstable_forceFrameRate","unstable_flushAllWithoutAsserting","unstable_yieldValue","unstable_setDisableYieldValue","scheduleCallback","cancelCallback","shouldYield","requestPaint","now","ImmediatePriority","UserBlockingPriority","NormalPriority","IdlePriority","disabledDepth","prevLog","prevInfo","prevWarn","prevError","prevGroup","prevGroupCollapsed","prevGroupEnd","disabledLog","__reactDisabledLog","disableLogs","log","info","group","groupCollapsed","groupEnd","props","configurable","enumerable","writable","defineProperties","reenableLogs","rendererID","injectedHook","injectedProfilingHooks","hasLoggedError","isDevToolsPresent","__REACT_DEVTOOLS_GLOBAL_HOOK__","injectInternals","internals","hook","isDisabled","supportsFiber","getLaneLabelMap","injectProfilingHooks","inject","err","checkDCE","onScheduleRoot","root","onScheduleFiberRoot","__DEV__","onCommitRoot","eventPriority","onCommitFiberRoot","didError","schedulerPriority","DiscreteEventPriority","ImmediateSchedulerPriority","ContinuousEventPriority","UserBlockingSchedulerPriority","DefaultEventPriority","NormalSchedulerPriority","IdleEventPriority","IdleSchedulerPriority","undefined","onPostCommitRoot","onPostCommitFiberRoot","onCommitUnmount","onCommitFiberUnmount","setIsStrictModeForDevtools","newIsStrictMode","setStrictMode","profilingHooks","Map","lane","index","TotalLanes","label","getLabelForLane","markCommitStarted","lanes","markCommitStopped","markComponentRenderStarted","markComponentRenderStopped","markComponentPassiveEffectMountStarted","markComponentPassiveEffectMountStopped","markComponentPassiveEffectUnmountStarted","markComponentPassiveEffectUnmountStopped","markComponentLayoutEffectMountStarted","markComponentLayoutEffectMountStopped","markComponentLayoutEffectUnmountStarted","markComponentLayoutEffectUnmountStopped","markComponentErrored","thrownValue","markComponentSuspended","wakeable","markLayoutEffectsStarted","markLayoutEffectsStopped","markPassiveEffectsStarted","markPassiveEffectsStopped","markRenderStarted","markRenderYielded","markRenderStopped","markRenderScheduled","markForceUpdateScheduled","markStateUpdateScheduled","NoMode","ConcurrentMode","ProfileMode","StrictLegacyMode","StrictEffectsMode","clz32","Math","clz32Fallback","LN2","asUint","NoLanes","NoLane","SyncLane","InputContinuousHydrationLane","InputContinuousLane","DefaultHydrationLane","DefaultLane","TransitionHydrationLane","TransitionLanes","TransitionLane1","TransitionLane2","TransitionLane3","TransitionLane4","TransitionLane5","TransitionLane6","TransitionLane7","TransitionLane8","TransitionLane9","TransitionLane10","TransitionLane11","TransitionLane12","TransitionLane13","TransitionLane14","TransitionLane15","TransitionLane16","RetryLanes","RetryLane1","RetryLane2","RetryLane3","RetryLane4","RetryLane5","SomeRetryLane","SelectiveHydrationLane","NonIdleLanes","IdleHydrationLane","IdleLane","OffscreenLane","NoTimestamp","nextTransitionLane","nextRetryLane","getHighestPriorityLanes","getHighestPriorityLane","getNextLanes","wipLanes","pendingLanes","nextLanes","suspendedLanes","pingedLanes","nonIdlePendingLanes","nonIdleUnblockedLanes","nonIdlePingedLanes","unblockedLanes","nextLane","wipLane","entangledLanes","entanglements","pickArbitraryLaneIndex","getMostRecentEventTime","eventTimes","mostRecentEventTime","eventTime","computeExpirationTime","currentTime","markStarvedLanesAsExpired","expirationTimes","expirationTime","expiredLanes","getLanesToRetrySynchronouslyOnError","everythingButOffscreen","includesSyncLane","includesNonIdleWork","includesOnlyRetries","includesOnlyNonUrgentLanes","UrgentLanes","includesOnlyTransitions","includesBlockingLane","SyncDefaultLanes","includesExpiredLane","isTransitionLane","claimNextTransitionLane","claimNextRetryLane","pickArbitraryLane","laneToIndex","includesSomeLane","isSubsetOfLanes","subset","mergeLanes","removeLanes","intersectLanes","laneToLanes","createLaneMap","initial","laneMap","i","push","markRootUpdated","updateLane","markRootSuspended","markRootPinged","markRootFinished","remainingLanes","noLongerPendingLanes","mutableReadLanes","markRootEntangled","rootEntangledLanes","getBumpedLaneForHydration","renderLanes","renderLane","addFiberToLanesMap","pendingUpdatersLaneMap","updaters","add","movePendingFibersToMemoized","memoizedUpdaters","size","forEach","has","clear","getTransitionsForLanes","currentUpdatePriority","getCurrentUpdatePriority","setCurrentUpdatePriority","newPriority","higherEventPriority","lowerEventPriority","isHigherEventPriority","lanesToEventPriority","shim","isSuspenseInstancePending","isSuspenseInstanceFallback","getSuspenseInstanceFallbackErrorDetails","registerSuspenseInstanceRetry","hydrateTextInstance","clearSuspenseBoundary","clearSuspenseBoundaryFromContainer","errorHydratingContainer","pooledTransform","Transform","NO_CONTEXT","UPDATE_SIGNAL","freeze","addEventListeners","listener","_listeners","_subscriptions","subscribe","createEventHandler","handleEvent","event","destroyEventListeners","getScaleX","scaleX","scale","getScaleY","scaleY","isSameFont","oldFont","newFont","fontSize","fontStyle","fontVariant","fontWeight","fontFamily","applyClippingRectangleProps","prevProps","applyNodeProps","width","height","applyGroupProps","transformTo","move","y","rotate","rotation","originX","originY","transform","xx","yx","xy","yy","cursor","title","indicate","blend","opacity","visible","show","hide","applyRenderableNodeProps","fill","applyFill","stroke","strokeWidth","strokeCap","strokeJoin","strokeDash","applyShapeProps","path","d","prevDelta","_prevDelta","prevPath","_prevPath","delta","draw","applyTextProps","string","_currentString","font","alignment","appendInitialChild","parentInstance","createInstance","internalInstanceHandle","ClippingRectangle","_applyProps","Group","Shape","Text","createTextInstance","text","rootContainerInstance","getPublicInstance","prepareForCommit","prepareUpdate","domElement","oldProps","newProps","resetAfterCommit","resetTextContent","getRootHostContext","getChildHostContext","scheduleTimeout","setTimeout","cancelTimeout","clearTimeout","noTimeout","shouldSetTextContent","getCurrentEventPriority","warnsIfNotActing","appendChild","parentNode","eject","appendChildToContainer","insertBefore","beforeChild","injectBefore","insertInContainerBefore","removeChild","removeChildFromContainer","commitTextUpdate","textInstance","oldText","newText","commitUpdate","updatePayload","hideInstance","hideTextInstance","unhideInstance","unhideTextInstance","clearContainer","container","preparePortalMount","portalInstance","ReactCurrentDispatcher","prefix","describeBuiltInComponentFrame","source","ownerFn","trim","reentry","componentFrameCache","PossiblyWeakMap","WeakMap","describeNativeComponentFrame","fn","construct","disableNativeComponentFrames","frame","control","previousPrepareStackTrace","prepareStackTrace","previousDispatcher","Fake","defineProperty","Reflect","sample","sampleLines","split","controlLines","s","c","replace","includes","syntheticFrame","describeClassComponentFrame","ctor","describeFunctionComponentFrame","shouldConstruct","Component","isReactComponent","describeUnknownElementTypeFrameInDEV","hasOwnProperty","loggedTypeFailures","setCurrentlyValidatingElement","element","_owner","_source","setExtraStackFrame","checkPropTypes","typeSpecs","values","location","componentName","bind","typeSpecName","ex","message","valueStack","fiberStack","createCursor","defaultValue","pop","warnedAboutMissingGetChildContext","emptyContextObject","contextStackCursor","didPerformWorkStackCursor","previousContext","getUnmaskedContext","workInProgress","didPushOwnContextIfProvider","isContextProvider","cacheContext","unmaskedContext","maskedContext","__reactInternalMemoizedUnmaskedChildContext","__reactInternalMemoizedMaskedChildContext","getMaskedContext","contextTypes","hasContextChanged","childContextTypes","popContext","popTopLevelContextObject","pushTopLevelContextObject","didChange","processChildContext","parentContext","getChildContext","childContext","contextKey","pushContextProvider","memoizedMergedChildContext","__reactInternalMemoizedMergedChildContext","invalidateContextProvider","mergedContext","findCurrentUnmaskedContext","is","objectIs","syncQueue","includesLegacySyncCallbacks","isFlushingSyncQueue","scheduleSyncCallback","callback","scheduleLegacySyncCallback","flushSyncCallbacksOnlyInLegacyMode","flushSyncCallbacks","previousUpdatePriority","isSync","queue","slice","isRootDehydrated","currentState","memoizedState","isDehydrated","forkStack","forkStackIndex","treeForkProvider","treeForkCount","idStack","idStackIndex","treeContextProvider","treeContextId","treeContextOverflow","popTreeContext","isHydrating","didSuspendOrErrorDEV","hydrationErrors","didSuspendOrErrorWhileHydratingDEV","reenterHydrationStateFromDehydratedSuspenseInstance","suspenseInstance","treeContext","prepareToHydrateHostInstance","hostContext","prepareToHydrateHostTextInstance","shouldUpdate","prepareToHydrateHostSuspenseInstance","popHydrationState","upgradeHydrationErrorsToRecoverable","queueRecoverableErrors","getIsHydrating","queueHydrationError","ReactCurrentBatchConfig","NoTransition","requestCurrentTransition","transition","shallowEqual","objA","objB","keysA","keys","keysB","currentKey","describeFiber","_debugOwner","_debugSource","getStackByFiberInDevAndProd","isRendering","getCurrentFiberOwnerNameInDevOrNull","getCurrentFiberStackInDev","resetCurrentFiber","getCurrentStack","setCurrentFiber","getCurrentFiber","setIsRendering","rendering","ReactStrictModeWarnings","recordUnsafeLifecycleWarnings","flushPendingUnsafeLifecycleWarnings","recordLegacyContextWarning","flushLegacyContextWarning","discardPendingWarnings","findStrictRoot","maybeStrictRoot","mode","setToSortedString","array","sort","pendingComponentWillMountWarnings","pendingUNSAFE_ComponentWillMountWarnings","pendingComponentWillReceivePropsWarnings","pendingUNSAFE_ComponentWillReceivePropsWarnings","pendingComponentWillUpdateWarnings","pendingUNSAFE_ComponentWillUpdateWarnings","didWarnAboutUnsafeLifecycles","Set","componentWillMount","__suppressDeprecationWarning","UNSAFE_componentWillMount","componentWillReceiveProps","UNSAFE_componentWillReceiveProps","componentWillUpdate","UNSAFE_componentWillUpdate","componentWillMountUniqueNames","UNSAFE_componentWillMountUniqueNames","componentWillReceivePropsUniqueNames","UNSAFE_componentWillReceivePropsUniqueNames","componentWillUpdateUniqueNames","UNSAFE_componentWillUpdateUniqueNames","sortedNames","pendingLegacyContextWarning","didWarnAboutLegacyContext","strictRoot","warningsForRoot","fiberArray","firstFiber","uniqueNames","setCurrentDebugFiberInDEV","resetCurrentDebugFiberInDEV","typeName","hasToStringTag","toStringTag","constructor","willCoercionThrow","testStringCoercion","e","checkPropStringCoercion","propName","resolveDefaultProps","baseProps","defaultProps","valueCursor","rendererSigil","currentlyRenderingFiber","lastContextDependency","lastFullyObservedContext","isDisallowedContextReadInDEV","resetContextDependencies","enterDisallowedContextReadInDEV","exitDisallowedContextReadInDEV","pushProvider","providerFiber","nextValue","_currentValue2","_currentRenderer2","popProvider","currentValue","enableServerContext","_defaultValue","scheduleContextWorkOnParentPath","propagationRoot","childLanes","propagateContextChange","propagateContextChange_eager","nextFiber","list","dependencies","dependency","firstContext","update","createUpdate","ForceUpdate","updateQueue","sharedQueue","shared","pending","next","parentSuspense","prepareToReadContext","markWorkInProgressReceivedUpdate","readContext","isPrimaryRenderer","contextItem","memoizedValue","concurrentQueues","pushConcurrentUpdateQueue","finishQueueingConcurrentUpdates","lastInterleavedUpdate","interleaved","firstInterleavedUpdate","lastPendingUpdate","firstPendingUpdate","enqueueConcurrentHookUpdate","markUpdateLaneFromFiberToRoot","enqueueConcurrentHookUpdateAndEagerlyBailout","enqueueConcurrentClassUpdate","enqueueConcurrentRenderForLane","unsafe_markUpdateLaneFromFiberToRoot","sourceFiber","warnAboutUpdateOnNotYetMountedFiberInDEV","UpdateState","ReplaceState","CaptureUpdate","hasForceUpdate","didWarnUpdateInsideUpdate","currentlyProcessingQueue","initializeUpdateQueue","baseState","firstBaseUpdate","lastBaseUpdate","effects","cloneUpdateQueue","currentQueue","clone","enqueueUpdate","isUnsafeClassRenderPhaseUpdate","entangleTransitions","queueLanes","newQueueLanes","enqueueCapturedUpdate","capturedUpdate","newFirst","newLast","getStateFromUpdate","prevState","nextProps","nextState","debugRenderPhaseSideEffectsForStrictMode","partialState","processUpdateQueue","pendingQueue","currentLastBaseUpdate","newState","newLanes","newBaseState","newFirstBaseUpdate","newLastBaseUpdate","updateEventTime","lastInterleaved","markSkippedUpdateLanes","callCallback","resetHasForceUpdateBeforeProcessing","checkHasForceUpdateAfterProcessing","commitUpdateQueue","finishedWork","finishedQueue","effect","fakeInternalInstance","emptyRefsObject","refs","didWarnAboutStateAssignmentForComponent","didWarnAboutUninitializedState","didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate","didWarnAboutLegacyLifecyclesAndDerivedState","didWarnAboutUndefinedDerivedState","warnOnUndefinedDerivedState","warnOnInvalidCallback","didWarnAboutDirectlyAssigningPropsToState","didWarnAboutContextTypeAndContextTypes","didWarnAboutInvalidateContextType","didWarnOnInvalidCallback","callerName","applyDerivedStateFromProps","getDerivedStateFromProps","classComponentUpdater","enqueueSetState","inst","requestEventTime","requestUpdateLane","scheduleUpdateOnFiber","enqueueReplaceState","enqueueForceUpdate","checkShouldComponentUpdate","oldState","nextContext","shouldComponentUpdate","isPureReactComponent","checkClassInstance","renderPresent","getInitialState","isReactClassApproved","state","getDefaultProps","propTypes","contextType","componentShouldUpdate","componentDidUnmount","componentDidReceiveProps","componentWillRecieveProps","UNSAFE_componentWillRecieveProps","hasMutatedProps","getSnapshotBeforeUpdate","componentDidUpdate","getDerivedStateFromError","adoptClassInstance","updater","setInstance","_reactInternalInstance","constructClassInstance","isLegacyContextConsumer","isValid","addendum","foundWillMountName","foundWillReceivePropsName","foundWillUpdateName","newApiName","callComponentWillMount","callComponentWillReceiveProps","mountClassInstance","componentDidMount","fiberFlags","resumeMountClassInstance","memoizedProps","oldContext","nextLegacyUnmaskedContext","hasNewLifecycles","updateClassInstance","unresolvedOldProps","elementType","unresolvedNewProps","pendingProps","nextUnmaskedContext","didWarnAboutMaps","didWarnAboutGenerators","didWarnAboutStringRefs","ownerHasKeyUseWarning","ownerHasFunctionTypeWarning","warnForMissingKey","returnFiber","_store","validated","coerceRef","mixedRef","ref","_self","resolvedInst","stringRef","_stringRef","throwOnInvalidObjectType","newChild","childString","toString","warnOnFunctionType","resolveLazy","lazyType","ChildReconciler","shouldTrackSideEffects","deleteChild","childToDelete","deletions","deleteRemainingChildren","currentFirstChild","mapRemainingChildren","existingChildren","existingChild","useFiber","createWorkInProgress","placeChild","newFiber","lastPlacedIndex","newIndex","oldIndex","placeSingleChild","updateTextNode","textContent","created","createFiberFromText","existing","updateElement","updateFragment","isCompatibleFamilyForHotReloading","createFiberFromElement","updatePortal","portal","containerInfo","implementation","createFiberFromPortal","fragment","createFiberFromFragment","createChild","updateSlot","oldFiber","updateFromMap","newIdx","matchedFiber","warnOnInvalidKey","knownKeys","reconcileChildrenArray","newChildren","resultingFirstChild","previousNewFiber","nextOldFiber","delete","reconcileChildrenIterator","newChildrenIterable","iteratorFn","entries","step","done","reconcileSingleTextNode","reconcileSingleElement","reconcileSinglePortal","reconcileChildFibers","isUnkeyedTopLevelFragment","mountChildFibers","cloneChildFibers","currentChild","resetChildFibers","resetWorkInProgress","contextFiberStackCursor","rootInstanceStackCursor","requiredContext","getRootHostContainer","rootInstance","pushHostContainer","nextRootInstance","nextRootContext","popHostContainer","getHostContext","pushHostContext","popHostContext","DefaultSuspenseContext","SubtreeSuspenseContextMask","InvisibleParentSuspenseContext","ForceSuspenseFallback","suspenseStackCursor","hasSuspenseContext","flag","setDefaultShallowSuspenseContext","setShallowSuspenseContext","shallowContext","addSubtreeSuspenseContext","subtreeContext","pushSuspenseContext","newContext","popSuspenseContext","shouldCaptureSuspense","hasInvisibleParent","dehydrated","findFirstSuspended","row","revealOrder","didSuspend","HasEffect","Insertion","Layout","workInProgressSources","resetWorkInProgressVersions","mutableSource","_workInProgressVersionSecondary","AbortControllerLocal","enableCache","AbortController","AbortControllerShim","listeners","signal","aborted","addEventListener","abort","CacheContext","Consumer","Provider","_currentValue","_threadCount","_currentRenderer","createCache","cache","controller","data","refCount","retainCache","releaseCache","pushCacheProvider","popCacheProvider","didWarnAboutMismatchedHooksForComponent","didWarnUncachedGetSnapshot","currentHook","workInProgressHook","didScheduleRenderPhaseUpdate","didScheduleRenderPhaseUpdateDuringThisPass","localIdCounter","globalClientIdCounter","RE_RENDER_LIMIT","currentHookNameInDev","hookTypesDev","hookTypesUpdateIndexDev","ignorePreviousDependencies","mountHookTypesDev","hookName","updateHookTypesDev","warnOnHookMismatchInDev","checkDepsAreArrayDev","deps","currentHookName","table","secondColumnStart","oldHookName","newHookName","throwInvalidHookError","areHookInputsEqual","nextDeps","prevDeps","renderWithHooks","secondArg","nextRenderLanes","_debugHookTypes","HooksDispatcherOnUpdateInDEV","HooksDispatcherOnMountWithHookTypesInDEV","HooksDispatcherOnMountInDEV","numberOfReRenders","HooksDispatcherOnRerenderInDEV","ContextOnlyDispatcher","didRenderTooFewHooks","StaticMaskEffect","checkDidRenderIdHook","didRenderIdHook","bailoutHooks","MountPassiveDevEffect","MountLayoutDevEffect","PassiveEffect","UpdateEffect","resetHooksAfterThrow","isUpdatingOpaqueValueInRenderPhase","mountWorkInProgressHook","baseQueue","updateWorkInProgressHook","nextCurrentHook","nextWorkInProgressHook","newHook","createFunctionComponentUpdateQueue","lastEffect","stores","basicStateReducer","action","mountReducer","reducer","initialArg","initialState","dispatch","lastRenderedReducer","lastRenderedState","dispatchReducerAction","updateReducer","baseFirst","pendingFirst","first","newBaseQueueFirst","newBaseQueueLast","hasEagerState","eagerState","interleavedLane","rerenderReducer","lastRenderPhaseUpdate","firstRenderPhaseUpdate","mountMutableSource","getSnapshot","updateMutableSource","mountSyncExternalStore","getServerSnapshot","nextSnapshot","cachedSnapshot","getWorkInProgressRoot","pushStoreConsistencyCheck","mountEffect","subscribeToStore","pushEffect","HookHasEffect","HookPassive","updateStoreInstance","updateSyncExternalStore","prevSnapshot","snapshotChanged","updateEffect","renderedSnapshot","check","componentUpdateQueue","checkIfSnapshotChanged","forceStoreRerender","handleStoreChange","latestGetSnapshot","prevValue","mountState","dispatchSetState","updateState","rerenderState","create","destroy","firstEffect","mountRef","initialValue","updateRef","mountEffectImpl","hookFlags","updateEffectImpl","prevEffect","PassiveStaticEffect","mountInsertionEffect","HookInsertion","updateInsertionEffect","mountLayoutEffect","LayoutStaticEffect","HookLayout","updateLayoutEffect","imperativeHandleEffect","refCallback","refObject","mountImperativeHandle","effectDeps","updateImperativeHandle","mountDebugValue","formatterFn","updateDebugValue","mountCallback","updateCallback","mountMemo","nextCreate","updateMemo","mountDeferredValue","updateDeferredValue","resolvedCurrentHook","updateDeferredValueImpl","rerenderDeferredValue","shouldDeferValue","deferredLane","startTransition","setPending","options","previousPriority","prevTransition","currentTransition","_updatedFibers","updatedFibersCount","mountTransition","isPending","start","updateTransition","rerenderTransition","getIsUpdatingOpaqueValueInRenderPhaseInDEV","mountId","identifierPrefix","id","globalClientId","updateId","mountRefresh","refresh","refreshCache","updateRefresh","seedKey","seedValue","refreshUpdate","createLegacyQueueUpdate","enqueueLegacyQueueUpdate","entangleLegacyQueueTransitions","seededCache","arguments","isRenderPhaseUpdate","enqueueRenderPhaseUpdate","entangleTransitionUpdate","markUpdateInDevTools","prevDispatcher","InvalidNestedHooksDispatcherOnUpdateInDEV","getCacheSignal","getCacheForType","resourceType","cacheForType","useCallback","useContext","useEffect","useImperativeHandle","useInsertionEffect","useLayoutEffect","useMemo","useReducer","useRef","useState","useDebugValue","useDeferredValue","useTransition","useMutableSource","useSyncExternalStore","useId","unstable_isNewReconciler","useCacheRefresh","InvalidNestedHooksDispatcherOnMountInDEV","InvalidNestedHooksDispatcherOnRerenderInDEV","warnInvalidContextAccess","warnInvalidHookAccess","commitTime","layoutEffectStartTime","profilerStartTime","passiveEffectStartTime","currentUpdateIsNested","nestedUpdateScheduled","isCurrentUpdateNested","markNestedUpdateScheduled","resetNestedUpdateFlag","syncNestedUpdateFlag","getCommitTime","recordCommitTime","startProfilerTimer","actualStartTime","stopProfilerTimerIfRunning","stopProfilerTimerIfRunningAndRecordDelta","overrideBaseTime","elapsedTime","actualDuration","selfBaseDuration","recordLayoutEffectDuration","parentFiber","effectDuration","parentStateNode","recordPassiveEffectDuration","passiveEffectDuration","startLayoutEffectTimer","startPassiveEffectTimer","transferActualDuration","createCapturedValueAtFiber","digest","createCapturedValue","showErrorDialog","boundary","errorInfo","logCapturedError","logError","componentStack","_suppressLogging","componentNameMessage","errorBoundaryMessage","errorBoundaryName","combinedMessage","createRootErrorUpdate","onUncaughtError","createClassErrorUpdate","markFailedErrorBoundaryForHotReloading","componentDidCatch","markLegacyErrorBoundaryAsFailed","attachPingListener","pingCache","threadIDs","ping","pingSuspendedRoot","restorePendingUpdaters","then","attachRetryListener","suspenseBoundary","wakeables","resetSuspendedComponent","rootRenderLanes","currentSource","getNearestSuspenseBoundaryToCapture","markSuspenseBoundaryShouldCapture","currentSourceFiber","throwException","renderDidSuspendDelayIfPossible","uncaughtSuspenseError","renderDidError","isAlreadyFailedLegacyErrorBoundary","resumedCache","peekCacheFromPool","cacheResumedFromPreviousRender","cacheFromRootCachePool","pooledCache","requestCacheFromPool","cacheFromPool","freshCache","pooledCacheLanes","pushTransition","offscreenWorkInProgress","prevCachePool","newTransitions","pool","popTransition","getSuspendedCache","getOffscreenDeferredCache","didReceiveUpdate","didWarnAboutBadClass","didWarnAboutModulePatternComponent","didWarnAboutContextTypeOnFunctionComponent","didWarnAboutGetDerivedStateOnFunctionComponent","didWarnAboutFunctionRefs","didWarnAboutReassigningProps","didWarnAboutRevealOrder","didWarnAboutTailOptions","didWarnAboutDefaultPropsOnFunctionComponent","reconcileChildren","nextChildren","forceUnmountCurrentAndReconcile","updateForwardRef","innerPropTypes","hasId","bailoutOnAlreadyFinishedWork","updateMemoComponent","isSimpleFunctionComponent","compare","resolvedType","resolveFunctionForHotReloading","validateFunctionComponentInDev","updateSimpleMemoComponent","createFiberFromTypeAndProps","hasScheduledUpdateOrContext","checkScheduledUpdateOrContext","outerMemoType","outerPropTypes","updateFunctionComponent","updateOffscreenComponent","baseLanes","cachePool","transitions","pushRenderLanes","spawnedCachePool","nextBaseLanes","prevBaseLanes","subtreeRenderLanes","updateCacheComponent","parentCache","derivedState","nextCache","updateMode","updateProfiler","markRef","updateClassComponent","shouldError","tempInstance","hasContext","isLegacyContextProvider","pushLegacyContextProvider","resetSuspendedCurrentOnMountInLegacyMode","nextUnitOfWork","finishClassComponent","didCaptureError","pushHostRootContext","pendingContext","updateHostRoot","prevChildren","pushRootTransition","updateHostComponent","isDirectTextChild","updateHostText","mountLazyComponent","_current","resolvedTag","resolveLazyComponentTag","resolvedProps","resolveClassForHotReloading","resolveForwardRefForHotReloading","hint","mountIncompleteClassComponent","mountIndeterminateComponent","ownerName","warningKey","debugSource","fileName","lineNumber","SUSPENDED_MARKER","retryLane","mountSuspenseOffscreenState","updateSuspenseOffscreenState","prevOffscreenState","shouldRemainOnFallback","suspenseContext","suspenseState","getRemainingWorkInPrimaryTree","updateSuspenseComponent","shouldSuspend","showFallback","mountDehydratedSuspenseComponent","nextPrimaryChildren","nextFallbackChildren","fallback","fallbackFragment","mountSuspenseFallbackChildren","primaryChildFragment","enableCPUSuspense","unstable_expectedLoadTime","mountSuspensePrimaryChildren","updateDehydratedSuspenseComponent","fallbackChildFragment","updateSuspenseFallbackChildren","updateSuspensePrimaryChildren","primaryChildren","primaryChildProps","mountWorkInProgressOffscreenFiber","fallbackChildren","progressedPrimaryFragment","treeBaseDuration","offscreenProps","createFiberFromOffscreen","updateWorkInProgressOffscreenFiber","currentPrimaryChildFragment","currentFallbackChildFragment","subtreeFlags","retrySuspenseComponentWithoutHydrating","recoverableError","mountSuspenseFallbackAfterRetryWithoutHydrating","fiberMode","capturedValue","attemptHydrationAtLane","retry","retryDehydratedSuspenseBoundary","scheduleSuspenseWorkOnFiber","propagateSuspenseContextChange","firstChild","findLastContentRow","lastContentRow","currentRow","validateRevealOrder","toLowerCase","validateTailOptions","tailMode","validateSuspenseListNestedChild","childSlot","isAnArray","isIterable","validateSuspenseListChildren","childrenIterator","initSuspenseListRenderState","isBackwards","tail","renderState","renderingStartTime","last","updateSuspenseListComponent","shouldForceFallback","didSuspendBefore","nextRow","updatePortalComponent","hasWarnedAboutUsingNoValuePropOnContextProvider","updateContextProvider","providerType","newValue","providerPropTypes","oldValue","hasLegacyContextChanged","hasWarnedAboutUsingContextAsConsumer","updateContextConsumer","remountFiber","oldWorkInProgress","newWorkInProgress","prevSibling","updateLanes","attemptEarlyBailoutIfNoScheduledUpdate","hasChildWork","primaryChildLanes","beginWork","_debugNeedsRemount","unresolvedProps","markUpdate","appendAllChildren","updateHostContainer","needsVisibilityToggle","isHidden","currentHostContext","cutOffTailIfNeeded","hasRenderedATailFallback","tailNode","lastTailNode","bubbleProperties","completedWork","didBailout","newChildLanes","completeDehydratedSuspenseBoundary","wasHydrated","isTimedOutSuspense","completeWork","popLegacyContext","fiberRoot","previousCache","popTopLevelLegacyContextObject","resetMutableSourceWorkInProgressVersions","fallthroughToNormalSuspensePath","nextDidTimeout","prevDidTimeout","offscreenFiber","hasInvisibleChildContext","unstable_avoidThisFallback","renderDidSuspend","didSuspendAlready","renderedTail","cannotBeSuspended","renderHasNotSuspendedYet","suspended","newThenables","getRenderTargetTime","previousSibling","popRenderLanes","nextIsHidden","prevIsHidden","unwindWork","unwindInterruptedWork","interruptedWork","invokeGuardedCallbackProd","func","f","funcArgs","onError","invokeGuardedCallbackImpl","window","dispatchEvent","document","createEvent","fakeNode","createElement","invokeGuardedCallbackDev","evt","didCall","windowEvent","windowEventDescriptor","getOwnPropertyDescriptor","restoreAfterDispatch","removeEventListener","evtType","didSetError","isCrossOriginError","handleWindowError","colno","lineno","defaultPrevented","inner","initEvent","hasError","caughtError","reporter","invokeGuardedCallback","hasCaughtError","clearCaughtError","didWarnAboutUndefinedSnapshotBeforeUpdate","offscreenSubtreeIsHidden","offscreenSubtreeWasHidden","PossiblyWeakSet","WeakSet","nextEffect","inProgressLanes","inProgressRoot","reportUncaughtErrorInDEV","callComponentWillUnmountWithTimer","componentWillUnmount","safelyCallCommitHookLayoutEffectListMount","nearestMountedAncestor","commitHookEffectListMount","captureCommitPhaseError","safelyCallComponentWillUnmount","safelyCallComponentDidMount","safelyAttachRef","commitAttachRef","safelyDetachRef","retVal","safelyCallDestroy","focusedInstanceHandle","shouldFireAfterActiveInstanceBlur","commitBeforeMutationEffects","commitBeforeMutationEffects_begin","shouldFire","commitBeforeMutationEffects_complete","commitBeforeMutationEffectsOnFiber","snapshot","didWarnSet","__reactInternalSnapshotBeforeUpdate","commitHookEffectListUnmount","NoHookEffect","setIsRunningInsertionEffect","commitPassiveEffectDurations","finishedRoot","onPostCommit","phase","outer","commitLayoutEffectOnFiber","committedLanes","commitMount","onCommit","onRender","enqueuePendingPassiveProfilerEffect","commitSuspenseHydrationCallbacks","reappearLayoutEffectsOnFiber","hideOrUnhideAllChildren","hostSubtreeRoot","instanceToUse","detachFiberMutation","detachFiberAfterEffects","hostInstance","getHostParentFiber","isHostParent","getHostSibling","siblings","commitPlacement","before","insertOrAppendPlacementNode","insertOrAppendPlacementNodeIntoContainer","isHost","hostParent","hostParentIsContainer","commitDeletionEffects","deletedFiber","findParent","commitDeletionEffectsOnFiber","recursivelyTraverseDeletionEffects","prevHostParent","prevHostParentIsContainer","enableSuspenseLayoutEffectSemantics","prevOffscreenSubtreeWasHidden","commitSuspenseCallback","attachSuspenseRetryListeners","retryCache","resolveRetryWakeable","commitMutationEffects","commitMutationEffectsOnFiber","recursivelyTraverseMutationEffects","prevDebugFiber","getCurrentDebugFiberInDEV","commitReconciliationEffects","offscreenInstance","wasHidden","markCommitTimeOfFallback","offscreenBoundary","offscreenChild","disappearLayoutEffects_begin","commitLayoutEffects","commitLayoutEffects_begin","subtreeRoot","isModernRoot","newOffscreenSubtreeIsHidden","commitLayoutMountEffects_complete","newOffscreenSubtreeWasHidden","prevOffscreenSubtreeIsHidden","reappearLayoutEffects_begin","disappearLayoutEffects_complete","reappearLayoutEffects_complete","commitPassiveMountEffects","committedTransitions","commitPassiveMountEffects_begin","commitPassiveMountEffects_complete","commitPassiveMountOnFiber","commitPassiveUnmountEffects","commitPassiveUnmountEffects_begin","fiberToDelete","commitPassiveUnmountEffectsInsideOfDeletedTree_begin","previousFiber","detachedChild","detachedSibling","commitPassiveUnmountEffects_complete","commitPassiveUnmountOnFiber","deletedSubtreeRoot","commitPassiveUnmountInsideDeletedTreeOnFiber","commitPassiveUnmountEffectsInsideOfDeletedTree_complete","invokeLayoutEffectMountInDEV","invokePassiveEffectMountInDEV","invokeLayoutEffectUnmountInDEV","invokePassiveEffectUnmountInDEV","COMPONENT_TYPE","HAS_PSEUDO_CLASS_TYPE","ROLE_TYPE","TEST_NAME_TYPE","TEXT_TYPE","symbolFor","ReactCurrentActQueue","isLegacyActEnvironment","isReactActEnvironmentGlobal","IS_REACT_ACT_ENVIRONMENT","isConcurrentActEnvironment","ceil","NoContext","BatchedContext","RenderContext","CommitContext","RootInProgress","RootFatalErrored","RootErrored","RootSuspended","RootSuspendedWithDelay","RootCompleted","RootDidNotComplete","executionContext","workInProgressRoot","workInProgressRootRenderLanes","subtreeRenderLanesCursor","workInProgressRootExitStatus","workInProgressRootFatalError","workInProgressRootIncludedLanes","workInProgressRootSkippedLanes","workInProgressRootInterleavedUpdatedLanes","workInProgressRootPingedLanes","workInProgressRootConcurrentErrors","workInProgressRootRecoverableErrors","globalMostRecentFallbackTime","FALLBACK_THROTTLE_MS","workInProgressRootRenderTargetTime","Infinity","RENDER_TIMEOUT_MS","workInProgressTransitions","resetRenderTimer","hasUncaughtError","firstUncaughtError","legacyErrorBoundariesThatAlreadyFailed","rootDoesHavePassiveEffects","rootWithPendingPassiveEffects","pendingPassiveEffectsLanes","pendingPassiveProfilerEffects","pendingPassiveEffectsRemainingLanes","pendingPassiveTransitions","NESTED_UPDATE_LIMIT","nestedUpdateCount","rootWithNestedUpdates","isFlushingPassiveEffects","didScheduleUpdateDuringPassiveEffects","NESTED_PASSIVE_UPDATE_LIMIT","nestedPassiveUpdateCount","rootWithPassiveNestedUpdates","currentEventTime","currentEventTransitionLane","isRunningInsertionEffect","isTransition","eventLane","requestRetryLane","checkForNestedUpdates","warnAboutRenderPhaseUpdatesInDEV","warnIfUpdatesNotWrappedWithActDEV","deferRenderPhaseUpdateToNextBatch","ensureRootIsScheduled","isBatchingLegacy","existingCallbackNode","callbackNode","callbackPriority","newCallbackPriority","existingCallbackPriority","fakeActCallbackNode","newCallbackNode","didScheduleLegacyUpdate","performSyncWorkOnRoot","schedulerPriorityLevel","performConcurrentWorkOnRoot","didTimeout","originalCallbackNode","didFlushPassiveEffects","flushPassiveEffects","shouldTimeSlice","disableSchedulerTimeoutInWorkLoop","exitStatus","renderRootConcurrent","renderRootSync","errorRetryLanes","recoverFromConcurrentError","fatalError","prepareFreshStack","renderWasConcurrent","isRenderConsistentWithExternalStores","finishedLanes","finishConcurrentRender","errorsFromFirstAttempt","rootWorkInProgress","errorsFromSecondAttempt","errors","commitRoot","shouldForceFlushFallbacksInDEV","msUntilTimeout","timeoutHandle","eventTimeMs","timeElapsedMs","jnd","checks","renderedValue","markRootSuspended_dontCallThisOneDirectly","flushSync","prevExecutionContext","pushToStack","popFromStack","workInProgressRootRenderPhaseUpdatedLanes","handleError","erroredWork","completeUnitOfWork","yetAnotherThrownValue","pushDispatcher","popDispatcher","workLoopSync","performUnitOfWork","workLoopConcurrent","unitOfWork","siblingFiber","recoverableErrors","previousUpdateLanePriority","commitRootImpl","renderPriorityLevel","flushRenderPhaseStrictModeWarningsInDEV","subtreeHasEffects","rootHasEffect","rootDidHavePassiveEffects","releaseRootPooledCache","commitDoubleInvokeEffectsInDEV","onCommitRootDevTools","onRecoverableError","renderPriority","priority","flushPassiveEffectsImpl","profilerEffects","onPostCommitRootDevTools","prepareToThrowUncaughtError","captureCommitPhaseErrorOnRoot","rootFiber","warnIfSuspenseResolutionNotWrappedWithActDEV","retryTimedOutBoundary","boundaryFiber","timeElapsed","hasPassiveEffects","invokeEffectsInDev","invokeEffectFn","primarySubtreeFlag","didWarnStateUpdateForNotYetMountedComponent","ReactCurrentFiberCurrent","dummyFiber","originalWorkInProgressCopy","assignFiberPropertiesInDEV","originalBeginWork","originalError","replayError","didWarnAboutUpdateInRender","didWarnAboutUpdateInRenderForAnotherComponent","ReactCurrentDebugFiberIsRenderingInDEV","renderingComponentName","dedupeKey","setStateComponentName","schedulingFiber","priorityLevel","actQueue","Scheduler_scheduleCallback","Scheduler_cancelCallback","isRunning","resolveFamily","failedBoundaries","setRefreshHandler","handler","family","currentRender","syntheticType","prevType","nextType","needsCompareFamilies","$$typeofNextType","prevFamily","scheduleRefresh","staleFamilies","updatedFamilies","scheduleFibersWithFamiliesRecursively","scheduleRoot","updateContainer","candidateType","needsRender","needsRemount","findHostInstancesForRefresh","families","hostInstances","types","findHostInstancesForMatchingFibersRecursively","didMatch","findHostInstancesForFiberShallowly","foundHostInstances","findChildHostInstancesForFiberShallowly","hasBadMapPolyfill","nonExtensibleObject","preventExtensions","FiberNode","Number","NaN","createFiber","currentDependencies","createHostRootFiber","isStrictMode","concurrentUpdatesByDefaultOverride","fiberTag","getTag","enableStrictEffects","createFiberFromProfiler","createFiberFromSuspense","createFiberFromSuspenseList","createFiberFromCache","elements","primaryChildInstance","content","pendingChildren","target","FiberRootNode","hydrate","_debugRootType","createFiberRoot","initialChildren","hydrationCallbacks","transitionCallbacks","uninitializedFiber","initialCache","pendingSuspenseBoundaries","didWarnAboutNestedUpdates","didWarnAboutFindNodeInStrictMode","getContextForSubtree","parentComponent","createContainer","ReactCurrentFiberIsRendering","shouldErrorImpl","shouldSuspendImpl","overrideHookState","overrideHookStateDeletePath","overrideHookStateRenamePath","overrideProps","overridePropsDeletePath","overridePropsRenamePath","scheduleUpdate","setErrorHandler","setSuspenseHandler","copyWithDeleteImpl","obj","updated","splice","copyWithDelete","copyWithRenameImpl","oldPath","newPath","oldKey","newKey","copyWithRename","copyWithSetImpl","copyWithSet","findHook","newShouldErrorImpl","newShouldSuspendImpl","findHostInstanceByFiber","hostFiber","emptyFindFiberByHostInstance","getCurrentFiberForDevTools","injectIntoDevTools","devToolsConfig","findFiberByHostInstance","bundleType","version","rendererPackageName","rendererConfig","currentDispatcherRef","reconcilerVersion","ReactVersion","Element","Container","Path","this","Color","Node","color","Base","DOM","precision","Dummy","Native","fontAnchors","Surface","require$$0","require$$1","require$$2","require$$3","require$$4","require$$5","require$$6","require$$7","require$$8","require$$9","require$$10","require$$11","require$$12","setCurrent","FastNoSideEffects","LinearGradient","stops","x1","y1","x2","y2","_args","fillLinear","RadialGradient","fx","fy","rx","ry","cx","cy","fillRadial","Pattern","url","left","top","fillImage","_surface","_tagRef","_mountNode","resize","Tag","tagName","React.createElement","accessKey","className","draggable","role","style","tabIndex","_text","T","t"],"mappings":"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"}