{"version":3,"file":"react-fetch.node.development.js","sources":["../../../../packages/react-fetch/src/ReactFetchNode.js"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Wakeable} from 'shared/ReactTypes';\n\nimport * as http from 'http';\nimport * as https from 'https';\nimport {unstable_getCacheForType} from 'react';\n\ntype FetchResponse = {|\n  // Properties\n  headers: any,\n  ok: boolean,\n  redirected: boolean,\n  status: number,\n  statusText: string,\n  type: 'basic',\n  url: string,\n  // Methods\n  arrayBuffer(): ArrayBuffer,\n  blob(): any,\n  json(): any,\n  text(): string,\n|};\n\nfunction nodeFetch(\n  url: string,\n  options: mixed,\n  onResolve: any => void,\n  onReject: any => void,\n): void {\n  const {hostname, pathname, search, port, protocol} = new URL(url);\n  const nodeOptions = {\n    hostname,\n    port,\n    path: pathname + search,\n    // TODO: cherry-pick supported user-passed options.\n  };\n  const nodeImpl = protocol === 'https:' ? https : http;\n  const request = nodeImpl.request(nodeOptions, response => {\n    // TODO: support redirects.\n    onResolve(new Response(response));\n  });\n  request.on('error', error => {\n    onReject(error);\n  });\n  request.end();\n}\n\nconst Pending = 0;\nconst Resolved = 1;\nconst Rejected = 2;\n\ntype PendingRecord = {|\n  status: 0,\n  value: Wakeable,\n|};\n\ntype ResolvedRecord<V> = {|\n  status: 1,\n  value: V,\n|};\n\ntype RejectedRecord = {|\n  status: 2,\n  value: mixed,\n|};\n\ntype Record<V> = PendingRecord | ResolvedRecord<V> | RejectedRecord;\n\nfunction getRecordMap(): Map<string, Record<FetchResponse>> {\n  return unstable_getCacheForType(createRecordMap);\n}\n\nfunction createRecordMap(): Map<string, Record<FetchResponse>> {\n  return new Map();\n}\n\nfunction readRecordValue<T>(record: Record<T>): T {\n  if (record.status === Resolved) {\n    return record.value;\n  } else {\n    throw record.value;\n  }\n}\n\nfunction Response(nativeResponse) {\n  this.headers = nativeResponse.headers;\n  this.ok = nativeResponse.statusCode >= 200 && nativeResponse.statusCode < 300;\n  this.redirected = false; // TODO\n  this.status = nativeResponse.statusCode;\n  this.statusText = nativeResponse.statusMessage;\n  this.type = 'basic';\n  this.url = nativeResponse.url;\n\n  this._response = nativeResponse;\n  this._json = null;\n  this._text = null;\n\n  const callbacks = [];\n  function wake() {\n    // This assumes they won't throw.\n    while (callbacks.length > 0) {\n      const cb = callbacks.pop();\n      cb();\n    }\n  }\n  const bufferRecord: PendingRecord = (this._bufferRecord = {\n    status: Pending,\n    value: {\n      then(cb) {\n        callbacks.push(cb);\n      },\n    },\n  });\n  const data = [];\n  nativeResponse.on('data', chunk => data.push(chunk));\n  nativeResponse.on('end', () => {\n    if (bufferRecord.status === Pending) {\n      const resolvedRecord = ((bufferRecord: any): ResolvedRecord<Buffer>);\n      resolvedRecord.status = Resolved;\n      resolvedRecord.value = Buffer.concat(data);\n      wake();\n    }\n  });\n  nativeResponse.on('error', err => {\n    if (bufferRecord.status === Pending) {\n      const rejectedRecord = ((bufferRecord: any): RejectedRecord);\n      rejectedRecord.status = Rejected;\n      rejectedRecord.value = err;\n      wake();\n    }\n  });\n}\n\nResponse.prototype = {\n  constructor: Response,\n  arrayBuffer() {\n    const buffer = readRecordValue(this._bufferRecord);\n    return buffer;\n  },\n  blob() {\n    // TODO: Is this needed?\n    throw new Error('Not implemented.');\n  },\n  json() {\n    if (this._json !== null) {\n      return this._json;\n    }\n    const buffer = readRecordValue(this._bufferRecord);\n    const json = JSON.parse(buffer.toString());\n    this._json = json;\n    return json;\n  },\n  text() {\n    if (this._text !== null) {\n      return this._text;\n    }\n    const buffer = readRecordValue(this._bufferRecord);\n    const text = buffer.toString();\n    this._text = text;\n    return text;\n  },\n};\n\nfunction preloadRecord(url: string, options: mixed): Record<FetchResponse> {\n  const map = getRecordMap();\n  let record = map.get(url);\n  if (!record) {\n    if (options) {\n      if (options.method || options.body || options.signal) {\n        // TODO: wire up our own cancellation mechanism.\n        // TODO: figure out what to do with POST.\n        // eslint-disable-next-line react-internal/prod-error-codes\n        throw Error('Unsupported option');\n      }\n    }\n    const callbacks = [];\n    const wakeable = {\n      then(cb) {\n        callbacks.push(cb);\n      },\n    };\n    const wake = () => {\n      // This assumes they won't throw.\n      while (callbacks.length > 0) {\n        const cb = callbacks.pop();\n        cb();\n      }\n    };\n    const newRecord: Record<FetchResponse> = (record = {\n      status: Pending,\n      value: wakeable,\n    });\n    nodeFetch(\n      url,\n      options,\n      response => {\n        if (newRecord.status === Pending) {\n          const resolvedRecord = ((newRecord: any): ResolvedRecord<FetchResponse>);\n          resolvedRecord.status = Resolved;\n          resolvedRecord.value = response;\n          wake();\n        }\n      },\n      err => {\n        if (newRecord.status === Pending) {\n          const rejectedRecord = ((newRecord: any): RejectedRecord);\n          rejectedRecord.status = Rejected;\n          rejectedRecord.value = err;\n          wake();\n        }\n      },\n    );\n    map.set(url, record);\n  }\n  return record;\n}\n\nexport function preload(url: string, options: mixed): void {\n  preloadRecord(url, options);\n  // Don't return anything.\n}\n\nexport function fetch(url: string, options: mixed): FetchResponse {\n  const record = preloadRecord(url, options);\n  const response = readRecordValue(record);\n  return response;\n}\n"],"names":["nodeFetch","url","options","onResolve","onReject","URL","hostname","pathname","search","port","protocol","nodeOptions","path","nodeImpl","https","http","request","response","Response","on","error","end","Pending","Resolved","Rejected","getRecordMap","unstable_getCacheForType","createRecordMap","Map","readRecordValue","record","status","value","nativeResponse","headers","ok","statusCode","redirected","statusText","statusMessage","type","_response","_json","_text","callbacks","wake","length","cb","pop","bufferRecord","_bufferRecord","then","push","data","chunk","resolvedRecord","Buffer","concat","err","rejectedRecord","prototype","constructor","arrayBuffer","buffer","blob","Error","json","JSON","parse","toString","text","preloadRecord","map","get","method","body","signal","wakeable","newRecord","set","preload","fetch"],"mappings":"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"}