{"version":3,"file":"react-noop-renderer-persistent.production.min.js","sources":["../../../../packages/shared/assign.js","../../../../packages/shared/ReactSymbols.js","../../../../packages/shared/isArray.js","../../../../packages/react-noop-renderer/src/createReactNoop.js","../../../../packages/react-noop-renderer/src/ReactNoopPersistent.js"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nconst assign = Object.assign;\n\nexport default assign;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\n// ATTENTION\n// When adding new symbols to this file,\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n\n// The Symbol used to tag the ReactElement-like types.\nexport const REACT_ELEMENT_TYPE = Symbol.for('react.element');\nexport const REACT_PORTAL_TYPE = Symbol.for('react.portal');\nexport const REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');\nexport const REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');\nexport const REACT_PROFILER_TYPE = Symbol.for('react.profiler');\nexport const REACT_PROVIDER_TYPE = Symbol.for('react.provider');\nexport const REACT_CONTEXT_TYPE = Symbol.for('react.context');\nexport const REACT_SERVER_CONTEXT_TYPE = Symbol.for('react.server_context');\nexport const REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');\nexport const REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');\nexport const REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');\nexport const REACT_MEMO_TYPE = Symbol.for('react.memo');\nexport const REACT_LAZY_TYPE = Symbol.for('react.lazy');\nexport const REACT_SCOPE_TYPE = Symbol.for('react.scope');\nexport const REACT_DEBUG_TRACING_MODE_TYPE = Symbol.for(\n  'react.debug_trace_mode',\n);\nexport const REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');\nexport const REACT_LEGACY_HIDDEN_TYPE = Symbol.for('react.legacy_hidden');\nexport const REACT_CACHE_TYPE = Symbol.for('react.cache');\nexport const REACT_TRACING_MARKER_TYPE = Symbol.for('react.tracing_marker');\nexport const REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED = Symbol.for(\n  'react.default_value',\n);\n\nconst MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nconst FAUX_ITERATOR_SYMBOL = '@@iterator';\n\nexport function getIteratorFn(maybeIterable: ?any): ?() => ?Iterator<*> {\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\n    return null;\n  }\n  const maybeIterator =\n    (MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL]) ||\n    maybeIterable[FAUX_ITERATOR_SYMBOL];\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n  return null;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\ndeclare function isArray(a: mixed): boolean %checks(Array.isArray(a));\n\nconst isArrayImpl = Array.isArray;\n\n// eslint-disable-next-line no-redeclare\nfunction isArray(a: mixed): boolean {\n  return isArrayImpl(a);\n}\n\nexport default isArray;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\n/**\n * This is a renderer of React that doesn't have a render target output.\n * It is useful to demonstrate the internals of the reconciler in isolation\n * and for testing semantics of reconciliation separate from the host\n * environment.\n */\n\nimport type {\n  Fiber,\n  TransitionTracingCallbacks,\n} from 'react-reconciler/src/ReactInternalTypes';\nimport type {UpdateQueue} from 'react-reconciler/src/ReactFiberClassUpdateQueue.new';\nimport type {ReactNodeList} from 'shared/ReactTypes';\nimport type {RootTag} from 'react-reconciler/src/ReactRootTags';\n\nimport * as Scheduler from 'scheduler/unstable_mock';\nimport {REACT_FRAGMENT_TYPE, REACT_ELEMENT_TYPE} from 'shared/ReactSymbols';\nimport isArray from 'shared/isArray';\nimport {checkPropStringCoercion} from 'shared/CheckStringCoercion';\nimport {\n  DefaultEventPriority,\n  IdleEventPriority,\n  ConcurrentRoot,\n  LegacyRoot,\n} from 'react-reconciler/constants';\n\ntype Container = {\n  rootID: string,\n  children: Array<Instance | TextInstance>,\n  pendingChildren: Array<Instance | TextInstance>,\n  ...\n};\ntype Props = {\n  prop: any,\n  hidden: boolean,\n  children?: mixed,\n  bottom?: null | number,\n  left?: null | number,\n  right?: null | number,\n  top?: null | number,\n  ...\n};\ntype Instance = {|\n  type: string,\n  id: number,\n  parent: number,\n  children: Array<Instance | TextInstance>,\n  text: string | null,\n  prop: any,\n  hidden: boolean,\n  context: HostContext,\n|};\ntype TextInstance = {|\n  text: string,\n  id: number,\n  parent: number,\n  hidden: boolean,\n  context: HostContext,\n|};\ntype HostContext = Object;\ntype CreateRootOptions = {\n  transitionCallbacks?: TransitionTracingCallbacks,\n  ...\n};\n\nconst NO_CONTEXT = {};\nconst UPPERCASE_CONTEXT = {};\nconst UPDATE_SIGNAL = {};\nif (__DEV__) {\n  Object.freeze(NO_CONTEXT);\n  Object.freeze(UPDATE_SIGNAL);\n}\n\nfunction createReactNoop(reconciler: Function, useMutation: boolean) {\n  let instanceCounter = 0;\n  let hostDiffCounter = 0;\n  let hostUpdateCounter = 0;\n  let hostCloneCounter = 0;\n\n  function appendChildToContainerOrInstance(\n    parentInstance: Container | Instance,\n    child: Instance | TextInstance,\n  ): void {\n    const prevParent = child.parent;\n    if (prevParent !== -1 && prevParent !== parentInstance.id) {\n      throw new Error('Reparenting is not allowed');\n    }\n    child.parent = parentInstance.id;\n    const index = parentInstance.children.indexOf(child);\n    if (index !== -1) {\n      parentInstance.children.splice(index, 1);\n    }\n    parentInstance.children.push(child);\n  }\n\n  function appendChildToContainer(\n    parentInstance: Container,\n    child: Instance | TextInstance,\n  ): void {\n    if (typeof parentInstance.rootID !== 'string') {\n      // Some calls to this aren't typesafe.\n      // This helps surface mistakes in tests.\n      throw new Error(\n        'appendChildToContainer() first argument is not a container.',\n      );\n    }\n    appendChildToContainerOrInstance(parentInstance, child);\n  }\n\n  function appendChild(\n    parentInstance: Instance,\n    child: Instance | TextInstance,\n  ): void {\n    if (typeof (parentInstance: any).rootID === 'string') {\n      // Some calls to this aren't typesafe.\n      // This helps surface mistakes in tests.\n      throw new Error('appendChild() first argument is not an instance.');\n    }\n    appendChildToContainerOrInstance(parentInstance, child);\n  }\n\n  function insertInContainerOrInstanceBefore(\n    parentInstance: Container | Instance,\n    child: Instance | TextInstance,\n    beforeChild: Instance | TextInstance,\n  ): void {\n    const index = parentInstance.children.indexOf(child);\n    if (index !== -1) {\n      parentInstance.children.splice(index, 1);\n    }\n    const beforeIndex = parentInstance.children.indexOf(beforeChild);\n    if (beforeIndex === -1) {\n      throw new Error('This child does not exist.');\n    }\n    parentInstance.children.splice(beforeIndex, 0, child);\n  }\n\n  function insertInContainerBefore(\n    parentInstance: Container,\n    child: Instance | TextInstance,\n    beforeChild: Instance | TextInstance,\n  ) {\n    if (typeof parentInstance.rootID !== 'string') {\n      // Some calls to this aren't typesafe.\n      // This helps surface mistakes in tests.\n      throw new Error(\n        'insertInContainerBefore() first argument is not a container.',\n      );\n    }\n    insertInContainerOrInstanceBefore(parentInstance, child, beforeChild);\n  }\n\n  function insertBefore(\n    parentInstance: Instance,\n    child: Instance | TextInstance,\n    beforeChild: Instance | TextInstance,\n  ) {\n    if (typeof (parentInstance: any).rootID === 'string') {\n      // Some calls to this aren't typesafe.\n      // This helps surface mistakes in tests.\n      throw new Error('insertBefore() first argument is not an instance.');\n    }\n    insertInContainerOrInstanceBefore(parentInstance, child, beforeChild);\n  }\n\n  function clearContainer(container: Container): void {\n    container.children.splice(0);\n  }\n\n  function removeChildFromContainerOrInstance(\n    parentInstance: Container | Instance,\n    child: Instance | TextInstance,\n  ): void {\n    const index = parentInstance.children.indexOf(child);\n    if (index === -1) {\n      throw new Error('This child does not exist.');\n    }\n    parentInstance.children.splice(index, 1);\n  }\n\n  function removeChildFromContainer(\n    parentInstance: Container,\n    child: Instance | TextInstance,\n  ): void {\n    if (typeof parentInstance.rootID !== 'string') {\n      // Some calls to this aren't typesafe.\n      // This helps surface mistakes in tests.\n      throw new Error(\n        'removeChildFromContainer() first argument is not a container.',\n      );\n    }\n    removeChildFromContainerOrInstance(parentInstance, child);\n  }\n\n  function removeChild(\n    parentInstance: Instance,\n    child: Instance | TextInstance,\n  ): void {\n    if (typeof (parentInstance: any).rootID === 'string') {\n      // Some calls to this aren't typesafe.\n      // This helps surface mistakes in tests.\n      throw new Error('removeChild() first argument is not an instance.');\n    }\n    removeChildFromContainerOrInstance(parentInstance, child);\n  }\n\n  function cloneInstance(\n    instance: Instance,\n    updatePayload: null | Object,\n    type: string,\n    oldProps: Props,\n    newProps: Props,\n    internalInstanceHandle: Object,\n    keepChildren: boolean,\n    recyclableInstance: null | Instance,\n  ): Instance {\n    if (__DEV__) {\n      checkPropStringCoercion(newProps.children, 'children');\n    }\n    const clone = {\n      id: instance.id,\n      type: type,\n      parent: instance.parent,\n      children: keepChildren ? instance.children : [],\n      text: shouldSetTextContent(type, newProps)\n        ? computeText((newProps.children: any) + '', instance.context)\n        : null,\n      prop: newProps.prop,\n      hidden: !!newProps.hidden,\n      context: instance.context,\n    };\n    Object.defineProperty(clone, 'id', {\n      value: clone.id,\n      enumerable: false,\n    });\n    Object.defineProperty(clone, 'parent', {\n      value: clone.parent,\n      enumerable: false,\n    });\n    Object.defineProperty(clone, 'text', {\n      value: clone.text,\n      enumerable: false,\n    });\n    Object.defineProperty(clone, 'context', {\n      value: clone.context,\n      enumerable: false,\n    });\n    hostCloneCounter++;\n    return clone;\n  }\n\n  function shouldSetTextContent(type: string, props: Props): boolean {\n    if (type === 'errorInBeginPhase') {\n      throw new Error('Error in host config.');\n    }\n    return (\n      typeof props.children === 'string' || typeof props.children === 'number'\n    );\n  }\n\n  function computeText(rawText, hostContext) {\n    return hostContext === UPPERCASE_CONTEXT ? rawText.toUpperCase() : rawText;\n  }\n\n  const sharedHostConfig = {\n    getRootHostContext() {\n      return NO_CONTEXT;\n    },\n\n    getChildHostContext(\n      parentHostContext: HostContext,\n      type: string,\n      rootcontainerInstance: Container,\n    ) {\n      if (type === 'offscreen') {\n        return parentHostContext;\n      }\n      if (type === 'uppercase') {\n        return UPPERCASE_CONTEXT;\n      }\n      return NO_CONTEXT;\n    },\n\n    getPublicInstance(instance) {\n      return instance;\n    },\n\n    createInstance(\n      type: string,\n      props: Props,\n      rootContainerInstance: Container,\n      hostContext: HostContext,\n      internalInstanceHandle: Object,\n    ): Instance {\n      if (type === 'errorInCompletePhase') {\n        throw new Error('Error in host config.');\n      }\n      if (__DEV__) {\n        // The `if` statement here prevents auto-disabling of the safe coercion\n        // ESLint rule, so we must manually disable it below.\n        if (shouldSetTextContent(type, props)) {\n          checkPropStringCoercion(props.children, 'children');\n        }\n      }\n      const inst = {\n        id: instanceCounter++,\n        type: type,\n        children: [],\n        parent: -1,\n        text: shouldSetTextContent(type, props)\n          ? // eslint-disable-next-line react-internal/safe-string-coercion\n            computeText((props.children: any) + '', hostContext)\n          : null,\n        prop: props.prop,\n        hidden: !!props.hidden,\n        context: hostContext,\n      };\n      // Hide from unit tests\n      Object.defineProperty(inst, 'id', {value: inst.id, enumerable: false});\n      Object.defineProperty(inst, 'parent', {\n        value: inst.parent,\n        enumerable: false,\n      });\n      Object.defineProperty(inst, 'text', {\n        value: inst.text,\n        enumerable: false,\n      });\n      Object.defineProperty(inst, 'context', {\n        value: inst.context,\n        enumerable: false,\n      });\n      Object.defineProperty(inst, 'fiber', {\n        value: internalInstanceHandle,\n        enumerable: false,\n      });\n      return inst;\n    },\n\n    appendInitialChild(\n      parentInstance: Instance,\n      child: Instance | TextInstance,\n    ): void {\n      const prevParent = child.parent;\n      if (prevParent !== -1 && prevParent !== parentInstance.id) {\n        throw new Error('Reparenting is not allowed');\n      }\n      child.parent = parentInstance.id;\n      parentInstance.children.push(child);\n    },\n\n    finalizeInitialChildren(\n      domElement: Instance,\n      type: string,\n      props: Props,\n    ): boolean {\n      return false;\n    },\n\n    prepareUpdate(\n      instance: Instance,\n      type: string,\n      oldProps: Props,\n      newProps: Props,\n    ): null | {...} {\n      if (type === 'errorInCompletePhase') {\n        throw new Error('Error in host config.');\n      }\n      if (oldProps === null) {\n        throw new Error('Should have old props');\n      }\n      if (newProps === null) {\n        throw new Error('Should have new props');\n      }\n      hostDiffCounter++;\n      return UPDATE_SIGNAL;\n    },\n\n    shouldSetTextContent,\n\n    createTextInstance(\n      text: string,\n      rootContainerInstance: Container,\n      hostContext: Object,\n      internalInstanceHandle: Object,\n    ): TextInstance {\n      if (hostContext === UPPERCASE_CONTEXT) {\n        text = text.toUpperCase();\n      }\n      const inst = {\n        text: text,\n        id: instanceCounter++,\n        parent: -1,\n        hidden: false,\n        context: hostContext,\n      };\n      // Hide from unit tests\n      Object.defineProperty(inst, 'id', {value: inst.id, enumerable: false});\n      Object.defineProperty(inst, 'parent', {\n        value: inst.parent,\n        enumerable: false,\n      });\n      Object.defineProperty(inst, 'context', {\n        value: inst.context,\n        enumerable: false,\n      });\n      return inst;\n    },\n\n    scheduleTimeout: setTimeout,\n    cancelTimeout: clearTimeout,\n    noTimeout: -1,\n\n    supportsMicrotasks: true,\n    scheduleMicrotask:\n      typeof queueMicrotask === 'function'\n        ? queueMicrotask\n        : typeof Promise !== 'undefined'\n        ? callback =>\n            Promise.resolve(null)\n              .then(callback)\n              .catch(error => {\n                setTimeout(() => {\n                  throw error;\n                });\n              })\n        : setTimeout,\n\n    prepareForCommit(): null | Object {\n      return null;\n    },\n\n    resetAfterCommit(): void {},\n\n    getCurrentEventPriority() {\n      return currentEventPriority;\n    },\n\n    now: Scheduler.unstable_now,\n\n    isPrimaryRenderer: true,\n    warnsIfNotActing: true,\n    supportsHydration: false,\n\n    getInstanceFromNode() {\n      throw new Error('Not yet implemented.');\n    },\n\n    beforeActiveInstanceBlur() {\n      // NO-OP\n    },\n\n    afterActiveInstanceBlur() {\n      // NO-OP\n    },\n\n    preparePortalMount() {\n      // NO-OP\n    },\n\n    prepareScopeUpdate() {},\n\n    getInstanceFromScope() {\n      throw new Error('Not yet implemented.');\n    },\n\n    detachDeletedInstance() {},\n\n    logRecoverableError() {\n      // no-op\n    },\n  };\n\n  const hostConfig = useMutation\n    ? {\n        ...sharedHostConfig,\n\n        supportsMutation: true,\n        supportsPersistence: false,\n\n        commitMount(instance: Instance, type: string, newProps: Props): void {\n          // Noop\n        },\n\n        commitUpdate(\n          instance: Instance,\n          updatePayload: Object,\n          type: string,\n          oldProps: Props,\n          newProps: Props,\n        ): void {\n          if (oldProps === null) {\n            throw new Error('Should have old props');\n          }\n          hostUpdateCounter++;\n          instance.prop = newProps.prop;\n          instance.hidden = !!newProps.hidden;\n          if (shouldSetTextContent(type, newProps)) {\n            if (__DEV__) {\n              checkPropStringCoercion(newProps.children, 'children');\n            }\n            instance.text = computeText(\n              (newProps.children: any) + '',\n              instance.context,\n            );\n          }\n        },\n\n        commitTextUpdate(\n          textInstance: TextInstance,\n          oldText: string,\n          newText: string,\n        ): void {\n          hostUpdateCounter++;\n          textInstance.text = computeText(newText, textInstance.context);\n        },\n\n        appendChild,\n        appendChildToContainer,\n        insertBefore,\n        insertInContainerBefore,\n        removeChild,\n        removeChildFromContainer,\n        clearContainer,\n\n        hideInstance(instance: Instance): void {\n          instance.hidden = true;\n        },\n\n        hideTextInstance(textInstance: TextInstance): void {\n          textInstance.hidden = true;\n        },\n\n        unhideInstance(instance: Instance, props: Props): void {\n          if (!props.hidden) {\n            instance.hidden = false;\n          }\n        },\n\n        unhideTextInstance(textInstance: TextInstance, text: string): void {\n          textInstance.hidden = false;\n        },\n\n        resetTextContent(instance: Instance): void {\n          instance.text = null;\n        },\n      }\n    : {\n        ...sharedHostConfig,\n        supportsMutation: false,\n        supportsPersistence: true,\n\n        cloneInstance,\n        clearContainer,\n\n        createContainerChildSet(\n          container: Container,\n        ): Array<Instance | TextInstance> {\n          return [];\n        },\n\n        appendChildToContainerChildSet(\n          childSet: Array<Instance | TextInstance>,\n          child: Instance | TextInstance,\n        ): void {\n          childSet.push(child);\n        },\n\n        finalizeContainerChildren(\n          container: Container,\n          newChildren: Array<Instance | TextInstance>,\n        ): void {\n          container.pendingChildren = newChildren;\n          if (\n            newChildren.length === 1 &&\n            newChildren[0].text === 'Error when completing root'\n          ) {\n            // Trigger an error for testing purposes\n            throw Error('Error when completing root');\n          }\n        },\n\n        replaceContainerChildren(\n          container: Container,\n          newChildren: Array<Instance | TextInstance>,\n        ): void {\n          container.children = newChildren;\n        },\n\n        cloneHiddenInstance(\n          instance: Instance,\n          type: string,\n          props: Props,\n          internalInstanceHandle: Object,\n        ): Instance {\n          const clone = cloneInstance(\n            instance,\n            null,\n            type,\n            props,\n            props,\n            internalInstanceHandle,\n            true,\n            null,\n          );\n          clone.hidden = true;\n          return clone;\n        },\n\n        cloneHiddenTextInstance(\n          instance: TextInstance,\n          text: string,\n          internalInstanceHandle: Object,\n        ): TextInstance {\n          const clone = {\n            text: instance.text,\n            id: instance.id,\n            parent: instance.parent,\n            hidden: true,\n            context: instance.context,\n          };\n          // Hide from unit tests\n          Object.defineProperty(clone, 'id', {\n            value: clone.id,\n            enumerable: false,\n          });\n          Object.defineProperty(clone, 'parent', {\n            value: clone.parent,\n            enumerable: false,\n          });\n          Object.defineProperty(clone, 'context', {\n            value: clone.context,\n            enumerable: false,\n          });\n          return clone;\n        },\n      };\n\n  const NoopRenderer = reconciler(hostConfig);\n\n  const rootContainers = new Map();\n  const roots = new Map();\n  const DEFAULT_ROOT_ID = '<default>';\n\n  let currentEventPriority = DefaultEventPriority;\n\n  function childToJSX(child, text) {\n    if (text !== null) {\n      return text;\n    }\n    if (child === null) {\n      return null;\n    }\n    if (typeof child === 'string') {\n      return child;\n    }\n    if (isArray(child)) {\n      if (child.length === 0) {\n        return null;\n      }\n      if (child.length === 1) {\n        return childToJSX(child[0], null);\n      }\n      // $FlowFixMe\n      const children = child.map(c => childToJSX(c, null));\n      if (children.every(c => typeof c === 'string' || typeof c === 'number')) {\n        return children.join('');\n      }\n      return children;\n    }\n    if (isArray(child.children)) {\n      // This is an instance.\n      const instance: Instance = (child: any);\n      const children = childToJSX(instance.children, instance.text);\n      const props = ({prop: instance.prop}: any);\n      if (instance.hidden) {\n        props.hidden = true;\n      }\n      if (children !== null) {\n        props.children = children;\n      }\n      return {\n        $$typeof: REACT_ELEMENT_TYPE,\n        type: instance.type,\n        key: null,\n        ref: null,\n        props: props,\n        _owner: null,\n        _store: __DEV__ ? {} : undefined,\n      };\n    }\n    // This is a text instance\n    const textInstance: TextInstance = (child: any);\n    if (textInstance.hidden) {\n      return '';\n    }\n    return textInstance.text;\n  }\n\n  function getChildren(root) {\n    if (root) {\n      return root.children;\n    } else {\n      return null;\n    }\n  }\n\n  function getPendingChildren(root) {\n    if (root) {\n      return root.children;\n    } else {\n      return null;\n    }\n  }\n\n  function getChildrenAsJSX(root) {\n    const children = childToJSX(getChildren(root), null);\n    if (children === null) {\n      return null;\n    }\n    if (isArray(children)) {\n      return {\n        $$typeof: REACT_ELEMENT_TYPE,\n        type: REACT_FRAGMENT_TYPE,\n        key: null,\n        ref: null,\n        props: {children},\n        _owner: null,\n        _store: __DEV__ ? {} : undefined,\n      };\n    }\n    return children;\n  }\n\n  function getPendingChildrenAsJSX(root) {\n    const children = childToJSX(getChildren(root), null);\n    if (children === null) {\n      return null;\n    }\n    if (isArray(children)) {\n      return {\n        $$typeof: REACT_ELEMENT_TYPE,\n        type: REACT_FRAGMENT_TYPE,\n        key: null,\n        ref: null,\n        props: {children},\n        _owner: null,\n        _store: __DEV__ ? {} : undefined,\n      };\n    }\n    return children;\n  }\n\n  function flushSync<R>(fn: () => R): R {\n    if (__DEV__) {\n      if (NoopRenderer.isAlreadyRendering()) {\n        console.error(\n          'flushSync was called from inside a lifecycle method. React cannot ' +\n            'flush when React is already rendering. Consider moving this call to ' +\n            'a scheduler task or micro task.',\n        );\n      }\n    }\n    return NoopRenderer.flushSync(fn);\n  }\n\n  function onRecoverableError(error) {\n    // TODO: Turn this on once tests are fixed\n    // eslint-disable-next-line react-internal/no-production-logging, react-internal/warning-args\n    // console.error(error);\n  }\n\n  let idCounter = 0;\n\n  const ReactNoop = {\n    _Scheduler: Scheduler,\n\n    getChildren(rootID: string = DEFAULT_ROOT_ID) {\n      const container = rootContainers.get(rootID);\n      return getChildren(container);\n    },\n\n    getPendingChildren(rootID: string = DEFAULT_ROOT_ID) {\n      const container = rootContainers.get(rootID);\n      return getPendingChildren(container);\n    },\n\n    getOrCreateRootContainer(rootID: string = DEFAULT_ROOT_ID, tag: RootTag) {\n      let root = roots.get(rootID);\n      if (!root) {\n        const container = {rootID: rootID, pendingChildren: [], children: []};\n        rootContainers.set(rootID, container);\n        root = NoopRenderer.createContainer(\n          container,\n          tag,\n          null,\n          null,\n          false,\n          '',\n          onRecoverableError,\n        );\n        roots.set(rootID, root);\n      }\n      return root.current.stateNode.containerInfo;\n    },\n\n    // TODO: Replace ReactNoop.render with createRoot + root.render\n    createRoot(options?: CreateRootOptions) {\n      const container = {\n        rootID: '' + idCounter++,\n        pendingChildren: [],\n        children: [],\n      };\n      const fiberRoot = NoopRenderer.createContainer(\n        container,\n        ConcurrentRoot,\n        null,\n        null,\n        false,\n        '',\n        onRecoverableError,\n        options && options.transitionCallbacks\n          ? options.transitionCallbacks\n          : null,\n      );\n      return {\n        _Scheduler: Scheduler,\n        render(children: ReactNodeList) {\n          NoopRenderer.updateContainer(children, fiberRoot, null, null);\n        },\n        getChildren() {\n          return getChildren(container);\n        },\n        getChildrenAsJSX() {\n          return getChildrenAsJSX(container);\n        },\n      };\n    },\n\n    createLegacyRoot() {\n      const container = {\n        rootID: '' + idCounter++,\n        pendingChildren: [],\n        children: [],\n      };\n      const fiberRoot = NoopRenderer.createContainer(\n        container,\n        LegacyRoot,\n        null,\n        null,\n        false,\n        '',\n        onRecoverableError,\n      );\n      return {\n        _Scheduler: Scheduler,\n        render(children: ReactNodeList) {\n          NoopRenderer.updateContainer(children, fiberRoot, null, null);\n        },\n        getChildren() {\n          return getChildren(container);\n        },\n        getChildrenAsJSX() {\n          return getChildrenAsJSX(container);\n        },\n      };\n    },\n\n    getChildrenAsJSX(rootID: string = DEFAULT_ROOT_ID) {\n      const container = rootContainers.get(rootID);\n      return getChildrenAsJSX(container);\n    },\n\n    getPendingChildrenAsJSX(rootID: string = DEFAULT_ROOT_ID) {\n      const container = rootContainers.get(rootID);\n      return getPendingChildrenAsJSX(container);\n    },\n\n    createPortal(\n      children: ReactNodeList,\n      container: Container,\n      key: ?string = null,\n    ) {\n      return NoopRenderer.createPortal(children, container, null, key);\n    },\n\n    // Shortcut for testing a single root\n    render(element: React$Element<any>, callback: ?Function) {\n      ReactNoop.renderToRootWithID(element, DEFAULT_ROOT_ID, callback);\n    },\n\n    renderLegacySyncRoot(element: React$Element<any>, callback: ?Function) {\n      const rootID = DEFAULT_ROOT_ID;\n      const container = ReactNoop.getOrCreateRootContainer(rootID, LegacyRoot);\n      const root = roots.get(container.rootID);\n      NoopRenderer.updateContainer(element, root, null, callback);\n    },\n\n    renderToRootWithID(\n      element: React$Element<any>,\n      rootID: string,\n      callback: ?Function,\n    ) {\n      const container = ReactNoop.getOrCreateRootContainer(\n        rootID,\n        ConcurrentRoot,\n      );\n      const root = roots.get(container.rootID);\n      NoopRenderer.updateContainer(element, root, null, callback);\n    },\n\n    unmountRootWithID(rootID: string) {\n      const root = roots.get(rootID);\n      if (root) {\n        NoopRenderer.updateContainer(null, root, null, () => {\n          roots.delete(rootID);\n          rootContainers.delete(rootID);\n        });\n      }\n    },\n\n    findInstance(\n      componentOrElement: Element | ?React$Component<any, any>,\n    ): null | Instance | TextInstance {\n      if (componentOrElement == null) {\n        return null;\n      }\n      // Unsound duck typing.\n      const component = (componentOrElement: any);\n      if (typeof component.id === 'number') {\n        return component;\n      }\n      if (__DEV__) {\n        return NoopRenderer.findHostInstanceWithWarning(\n          component,\n          'findInstance',\n        );\n      }\n      return NoopRenderer.findHostInstance(component);\n    },\n\n    flushNextYield(): Array<mixed> {\n      Scheduler.unstable_flushNumberOfYields(1);\n      return Scheduler.unstable_clearYields();\n    },\n\n    flushWithHostCounters(\n      fn: () => void,\n    ):\n      | {|\n          hostDiffCounter: number,\n          hostUpdateCounter: number,\n        |}\n      | {|\n          hostDiffCounter: number,\n          hostCloneCounter: number,\n        |} {\n      hostDiffCounter = 0;\n      hostUpdateCounter = 0;\n      hostCloneCounter = 0;\n      try {\n        Scheduler.unstable_flushAll();\n        return useMutation\n          ? {\n              hostDiffCounter,\n              hostUpdateCounter,\n            }\n          : {\n              hostDiffCounter,\n              hostCloneCounter,\n            };\n      } finally {\n        hostDiffCounter = 0;\n        hostUpdateCounter = 0;\n        hostCloneCounter = 0;\n      }\n    },\n\n    expire: Scheduler.unstable_advanceTime,\n\n    flushExpired(): Array<mixed> {\n      return Scheduler.unstable_flushExpired();\n    },\n\n    unstable_runWithPriority: NoopRenderer.runWithPriority,\n\n    batchedUpdates: NoopRenderer.batchedUpdates,\n\n    deferredUpdates: NoopRenderer.deferredUpdates,\n\n    discreteUpdates: NoopRenderer.discreteUpdates,\n\n    idleUpdates<T>(fn: () => T): T {\n      const prevEventPriority = currentEventPriority;\n      currentEventPriority = IdleEventPriority;\n      try {\n        fn();\n      } finally {\n        currentEventPriority = prevEventPriority;\n      }\n    },\n\n    flushSync,\n    flushPassiveEffects: NoopRenderer.flushPassiveEffects,\n\n    // Logs the current state of the tree.\n    dumpTree(rootID: string = DEFAULT_ROOT_ID) {\n      const root = roots.get(rootID);\n      const rootContainer = rootContainers.get(rootID);\n      if (!root || !rootContainer) {\n        // eslint-disable-next-line react-internal/no-production-logging\n        console.log('Nothing rendered yet.');\n        return;\n      }\n\n      const bufferedLog = [];\n      function log(...args) {\n        bufferedLog.push(...args, '\\n');\n      }\n\n      function logHostInstances(\n        children: Array<Instance | TextInstance>,\n        depth,\n      ) {\n        for (let i = 0; i < children.length; i++) {\n          const child = children[i];\n          const indent = '  '.repeat(depth);\n          if (typeof child.text === 'string') {\n            log(indent + '- ' + child.text);\n          } else {\n            // $FlowFixMe - The child should've been refined now.\n            log(indent + '- ' + child.type + '#' + child.id);\n            // $FlowFixMe - The child should've been refined now.\n            logHostInstances(child.children, depth + 1);\n          }\n        }\n      }\n      function logContainer(container: Container, depth) {\n        log('  '.repeat(depth) + '- [root#' + container.rootID + ']');\n        logHostInstances(container.children, depth + 1);\n      }\n\n      function logUpdateQueue(updateQueue: UpdateQueue<mixed>, depth) {\n        log('  '.repeat(depth + 1) + 'QUEUED UPDATES');\n        const first = updateQueue.firstBaseUpdate;\n        const update = first;\n        if (update !== null) {\n          do {\n            log(\n              '  '.repeat(depth + 1) + '~',\n              '[' + update.expirationTime + ']',\n            );\n          } while (update !== null);\n        }\n\n        const lastPending = updateQueue.shared.pending;\n        if (lastPending !== null) {\n          const firstPending = lastPending.next;\n          const pendingUpdate = firstPending;\n          if (pendingUpdate !== null) {\n            do {\n              log(\n                '  '.repeat(depth + 1) + '~',\n                '[' + pendingUpdate.expirationTime + ']',\n              );\n            } while (pendingUpdate !== null && pendingUpdate !== firstPending);\n          }\n        }\n      }\n\n      function logFiber(fiber: Fiber, depth) {\n        log(\n          '  '.repeat(depth) +\n            '- ' +\n            // need to explicitly coerce Symbol to a string\n            (fiber.type ? fiber.type.name || fiber.type.toString() : '[root]'),\n          '[' +\n            fiber.childExpirationTime +\n            (fiber.pendingProps ? '*' : '') +\n            ']',\n        );\n        if (fiber.updateQueue) {\n          logUpdateQueue(fiber.updateQueue, depth);\n        }\n        // const childInProgress = fiber.progressedChild;\n        // if (childInProgress && childInProgress !== fiber.child) {\n        //   log(\n        //     '  '.repeat(depth + 1) + 'IN PROGRESS: ' + fiber.pendingWorkPriority,\n        //   );\n        //   logFiber(childInProgress, depth + 1);\n        //   if (fiber.child) {\n        //     log('  '.repeat(depth + 1) + 'CURRENT');\n        //   }\n        // } else if (fiber.child && fiber.updateQueue) {\n        //   log('  '.repeat(depth + 1) + 'CHILDREN');\n        // }\n        if (fiber.child) {\n          logFiber(fiber.child, depth + 1);\n        }\n        if (fiber.sibling) {\n          logFiber(fiber.sibling, depth);\n        }\n      }\n\n      log('HOST INSTANCES:');\n      logContainer(rootContainer, 0);\n      log('FIBERS:');\n      logFiber(root.current, 0);\n\n      // eslint-disable-next-line react-internal/no-production-logging\n      console.log(...bufferedLog);\n    },\n\n    getRoot(rootID: string = DEFAULT_ROOT_ID) {\n      return roots.get(rootID);\n    },\n  };\n\n  return ReactNoop;\n}\n\nexport default createReactNoop;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\n/**\n * This is a renderer of React that doesn't have a render target output.\n * It is useful to demonstrate the internals of the reconciler in isolation\n * and for testing semantics of reconciliation separate from the host\n * environment.\n */\n\nimport ReactFiberReconciler from 'react-reconciler';\nimport createReactNoop from './createReactNoop';\n\nexport const {\n  _Scheduler,\n  getChildren,\n  getPendingChildren,\n  getOrCreateRootContainer,\n  createRoot,\n  createLegacyRoot,\n  getChildrenAsJSX,\n  getPendingChildrenAsJSX,\n  createPortal,\n  render,\n  renderLegacySyncRoot,\n  renderToRootWithID,\n  unmountRootWithID,\n  findInstance,\n  flushNextYield,\n  flushWithHostCounters,\n  expire,\n  flushExpired,\n  batchedUpdates,\n  deferredUpdates,\n  discreteUpdates,\n  idleUpdates,\n  flushDiscreteUpdates,\n  flushSync,\n  flushPassiveEffects,\n  act,\n  dumpTree,\n  getRoot,\n  // TODO: Remove this once callers migrate to alternatives.\n  // This should only be used by React internals.\n  unstable_runWithPriority,\n} = createReactNoop(\n  ReactFiberReconciler, // reconciler\n  false, // useMutation\n);\n"],"names":["assign","Object","REACT_ELEMENT_TYPE","Symbol","for","REACT_FRAGMENT_TYPE","isArrayImpl","Array","isArray","a","NO_CONTEXT","UPPERCASE_CONTEXT","UPDATE_SIGNAL","createReactNoop","reconciler","useMutation","instanceCounter","hostDiffCounter","hostUpdateCounter","hostCloneCounter","appendChildToContainerOrInstance","parentInstance","child","prevParent","parent","id","Error","index","children","indexOf","splice","push","appendChildToContainer","rootID","appendChild","insertInContainerOrInstanceBefore","beforeChild","beforeIndex","insertInContainerBefore","insertBefore","clearContainer","container","removeChildFromContainerOrInstance","removeChildFromContainer","removeChild","cloneInstance","instance","updatePayload","type","oldProps","newProps","internalInstanceHandle","keepChildren","recyclableInstance","clone","text","shouldSetTextContent","computeText","context","prop","hidden","defineProperty","value","enumerable","props","rawText","hostContext","toUpperCase","sharedHostConfig","getRootHostContext","getChildHostContext","parentHostContext","rootcontainerInstance","getPublicInstance","createInstance","rootContainerInstance","inst","appendInitialChild","finalizeInitialChildren","domElement","prepareUpdate","createTextInstance","scheduleTimeout","setTimeout","cancelTimeout","clearTimeout","noTimeout","supportsMicrotasks","scheduleMicrotask","queueMicrotask","Promise","callback","resolve","then","catch","error","prepareForCommit","resetAfterCommit","getCurrentEventPriority","currentEventPriority","now","Scheduler","isPrimaryRenderer","warnsIfNotActing","supportsHydration","getInstanceFromNode","beforeActiveInstanceBlur","afterActiveInstanceBlur","preparePortalMount","prepareScopeUpdate","getInstanceFromScope","detachDeletedInstance","logRecoverableError","hostConfig","supportsMutation","supportsPersistence","commitMount","commitUpdate","commitTextUpdate","textInstance","oldText","newText","hideInstance","hideTextInstance","unhideInstance","unhideTextInstance","resetTextContent","createContainerChildSet","appendChildToContainerChildSet","childSet","finalizeContainerChildren","newChildren","pendingChildren","length","replaceContainerChildren","cloneHiddenInstance","cloneHiddenTextInstance","NoopRenderer","rootContainers","Map","roots","DEFAULT_ROOT_ID","DefaultEventPriority","childToJSX","map","c","every","join","$$typeof","key","ref","_owner","_store","__DEV__","undefined","getChildren","root","getPendingChildren","getChildrenAsJSX","getPendingChildrenAsJSX","flushSync","fn","onRecoverableError","idCounter","ReactNoop","_Scheduler","get","getOrCreateRootContainer","tag","set","createContainer","current","stateNode","containerInfo","createRoot","options","fiberRoot","ConcurrentRoot","transitionCallbacks","render","updateContainer","createLegacyRoot","LegacyRoot","createPortal","element","renderToRootWithID","renderLegacySyncRoot","unmountRootWithID","delete","findInstance","componentOrElement","component","findHostInstance","flushNextYield","flushWithHostCounters","expire","flushExpired","unstable_runWithPriority","runWithPriority","batchedUpdates","deferredUpdates","discreteUpdates","idleUpdates","prevEventPriority","IdleEventPriority","flushPassiveEffects","dumpTree","rootContainer","console","log","bufferedLog","args","logHostInstances","depth","i","indent","repeat","logContainer","logUpdateQueue","updateQueue","first","firstBaseUpdate","update","expirationTime","lastPending","shared","pending","firstPending","next","pendingUpdate","logFiber","fiber","name","toString","childExpirationTime","pendingProps","sibling","getRoot","ReactFiberReconciler","flushDiscreteUpdates","act"],"mappings":"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"}