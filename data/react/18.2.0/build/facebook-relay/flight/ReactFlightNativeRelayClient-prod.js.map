{"version":3,"file":"ReactFlightNativeRelayClient-prod.js","sources":["../../../packages/shared/formatProdErrorMessage.js","../../../packages/shared/isArray.js","../../../packages/react-server-native-relay/src/ReactFlightNativeRelayClientHostConfig.js","../../../packages/shared/ReactSymbols.js","../../../packages/shared/ReactSharedInternals.js","../../../packages/shared/ReactServerContextRegistry.js","../../../packages/react-client/src/ReactFlightClient.js","../../../packages/react-server-native-relay/src/ReactFlightNativeRelayClient.js"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n// Do not require this module directly! Use normal `invariant` calls with\n// template literal strings. The messages will be replaced with error codes\n// during build.\n\nfunction formatProdErrorMessage(code) {\n  let url = 'https://reactjs.org/docs/error-decoder.html?invariant=' + code;\n  for (let i = 1; i < arguments.length; i++) {\n    url += '&args[]=' + encodeURIComponent(arguments[i]);\n  }\n  return (\n    `Minified React error #${code}; visit ${url} for the full message or ` +\n    'use the non-minified dev environment for full errors and additional ' +\n    'helpful warnings.'\n  );\n}\n\nexport default formatProdErrorMessage;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\ndeclare function isArray(a: mixed): boolean %checks(Array.isArray(a));\n\nconst isArrayImpl = Array.isArray;\n\n// eslint-disable-next-line no-redeclare\nfunction isArray(a: mixed): boolean {\n  return isArrayImpl(a);\n}\n\nexport default isArray;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {JSONValue, ResponseBase} from 'react-client/src/ReactFlightClient';\n\nimport type {JSResourceReference} from 'JSResourceReference';\n\nimport type {ModuleMetaData} from 'ReactFlightNativeRelayClientIntegration';\n\nexport type ModuleReference<T> = JSResourceReference<T>;\n\nimport {\n  parseModelString,\n  parseModelTuple,\n} from 'react-client/src/ReactFlightClient';\n\nexport {\n  preloadModule,\n  requireModule,\n} from 'ReactFlightNativeRelayClientIntegration';\n\nimport {resolveModuleReference as resolveModuleReferenceImpl} from 'ReactFlightNativeRelayClientIntegration';\n\nimport isArray from 'shared/isArray';\n\nexport type {ModuleMetaData} from 'ReactFlightNativeRelayClientIntegration';\n\nexport type BundlerConfig = null;\n\nexport type UninitializedModel = JSONValue;\n\nexport type Response = ResponseBase;\n\nexport function resolveModuleReference<T>(\n  bundlerConfig: BundlerConfig,\n  moduleData: ModuleMetaData,\n): ModuleReference<T> {\n  return resolveModuleReferenceImpl(moduleData);\n}\n\nfunction parseModelRecursively(response: Response, parentObj, value) {\n  if (typeof value === 'string') {\n    return parseModelString(response, parentObj, value);\n  }\n  if (typeof value === 'object' && value !== null) {\n    if (isArray(value)) {\n      const parsedValue = [];\n      for (let i = 0; i < value.length; i++) {\n        (parsedValue: any)[i] = parseModelRecursively(\n          response,\n          value,\n          value[i],\n        );\n      }\n      return parseModelTuple(response, parsedValue);\n    } else {\n      const parsedValue = {};\n      for (const innerKey in value) {\n        (parsedValue: any)[innerKey] = parseModelRecursively(\n          response,\n          value,\n          value[innerKey],\n        );\n      }\n      return parsedValue;\n    }\n  }\n  return value;\n}\n\nconst dummy = {};\n\nexport function parseModel<T>(response: Response, json: UninitializedModel): T {\n  return (parseModelRecursively(response, dummy, json): any);\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\n// ATTENTION\n// When adding new symbols to this file,\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n\n// The Symbol used to tag the ReactElement-like types.\nexport const REACT_ELEMENT_TYPE = Symbol.for('react.element');\nexport const REACT_PORTAL_TYPE = Symbol.for('react.portal');\nexport const REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');\nexport const REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');\nexport const REACT_PROFILER_TYPE = Symbol.for('react.profiler');\nexport const REACT_PROVIDER_TYPE = Symbol.for('react.provider');\nexport const REACT_CONTEXT_TYPE = Symbol.for('react.context');\nexport const REACT_SERVER_CONTEXT_TYPE = Symbol.for('react.server_context');\nexport const REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');\nexport const REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');\nexport const REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');\nexport const REACT_MEMO_TYPE = Symbol.for('react.memo');\nexport const REACT_LAZY_TYPE = Symbol.for('react.lazy');\nexport const REACT_SCOPE_TYPE = Symbol.for('react.scope');\nexport const REACT_DEBUG_TRACING_MODE_TYPE = Symbol.for(\n  'react.debug_trace_mode',\n);\nexport const REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');\nexport const REACT_LEGACY_HIDDEN_TYPE = Symbol.for('react.legacy_hidden');\nexport const REACT_CACHE_TYPE = Symbol.for('react.cache');\nexport const REACT_TRACING_MARKER_TYPE = Symbol.for('react.tracing_marker');\nexport const REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED = Symbol.for(\n  'react.default_value',\n);\n\nconst MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nconst FAUX_ITERATOR_SYMBOL = '@@iterator';\n\nexport function getIteratorFn(maybeIterable: ?any): ?() => ?Iterator<*> {\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\n    return null;\n  }\n  const maybeIterator =\n    (MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL]) ||\n    maybeIterable[FAUX_ITERATOR_SYMBOL];\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n  return null;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport * as React from 'react';\n\nconst ReactSharedInternals =\n  React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n\nexport default ReactSharedInternals;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport {REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED} from 'shared/ReactSymbols';\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\nimport {createServerContext} from 'react';\n\nconst ContextRegistry = ReactSharedInternals.ContextRegistry;\n\nexport function getOrCreateServerContext(globalName: string) {\n  if (!ContextRegistry[globalName]) {\n    ContextRegistry[globalName] = createServerContext(\n      globalName,\n      REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED,\n    );\n  }\n  return ContextRegistry[globalName];\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Wakeable} from 'shared/ReactTypes';\nimport type {LazyComponent} from 'react/src/ReactLazy';\n\nimport type {\n  ModuleReference,\n  ModuleMetaData,\n  UninitializedModel,\n  Response,\n  BundlerConfig,\n} from './ReactFlightClientHostConfig';\n\nimport {\n  resolveModuleReference,\n  preloadModule,\n  requireModule,\n  parseModel,\n} from './ReactFlightClientHostConfig';\n\nimport {REACT_LAZY_TYPE, REACT_ELEMENT_TYPE} from 'shared/ReactSymbols';\n\nimport {getOrCreateServerContext} from 'shared/ReactServerContextRegistry';\n\nexport type JSONValue =\n  | number\n  | null\n  | boolean\n  | string\n  | {+[key: string]: JSONValue}\n  | $ReadOnlyArray<JSONValue>;\n\nconst PENDING = 0;\nconst RESOLVED_MODEL = 1;\nconst RESOLVED_MODULE = 2;\nconst INITIALIZED = 3;\nconst ERRORED = 4;\n\ntype PendingChunk = {\n  _status: 0,\n  _value: null | Array<() => mixed>,\n  _response: Response,\n  then(resolve: () => mixed): void,\n};\ntype ResolvedModelChunk = {\n  _status: 1,\n  _value: UninitializedModel,\n  _response: Response,\n  then(resolve: () => mixed): void,\n};\ntype ResolvedModuleChunk<T> = {\n  _status: 2,\n  _value: ModuleReference<T>,\n  _response: Response,\n  then(resolve: () => mixed): void,\n};\ntype InitializedChunk<T> = {\n  _status: 3,\n  _value: T,\n  _response: Response,\n  then(resolve: () => mixed): void,\n};\ntype ErroredChunk = {\n  _status: 4,\n  _value: Error,\n  _response: Response,\n  then(resolve: () => mixed): void,\n};\ntype SomeChunk<T> =\n  | PendingChunk\n  | ResolvedModelChunk\n  | ResolvedModuleChunk<T>\n  | InitializedChunk<T>\n  | ErroredChunk;\n\nfunction Chunk(status: any, value: any, response: Response) {\n  this._status = status;\n  this._value = value;\n  this._response = response;\n}\nChunk.prototype.then = function<T>(resolve: () => mixed) {\n  const chunk: SomeChunk<T> = this;\n  if (chunk._status === PENDING) {\n    if (chunk._value === null) {\n      chunk._value = [];\n    }\n    chunk._value.push(resolve);\n  } else {\n    resolve();\n  }\n};\n\nexport type ResponseBase = {\n  _bundlerConfig: BundlerConfig,\n  _chunks: Map<number, SomeChunk<any>>,\n  readRoot<T>(): T,\n  ...\n};\n\nexport type {Response};\n\nfunction readChunk<T>(chunk: SomeChunk<T>): T {\n  switch (chunk._status) {\n    case INITIALIZED:\n      return chunk._value;\n    case RESOLVED_MODEL:\n      return initializeModelChunk(chunk);\n    case RESOLVED_MODULE:\n      return initializeModuleChunk(chunk);\n    case PENDING:\n      // eslint-disable-next-line no-throw-literal\n      throw (chunk: Wakeable);\n    default:\n      throw chunk._value;\n  }\n}\n\nfunction readRoot<T>(): T {\n  const response: Response = this;\n  const chunk = getChunk(response, 0);\n  return readChunk(chunk);\n}\n\nfunction createPendingChunk(response: Response): PendingChunk {\n  return new Chunk(PENDING, null, response);\n}\n\nfunction createErrorChunk(response: Response, error: Error): ErroredChunk {\n  return new Chunk(ERRORED, error, response);\n}\n\nfunction createInitializedChunk<T>(\n  response: Response,\n  value: T,\n): InitializedChunk<T> {\n  return new Chunk(INITIALIZED, value, response);\n}\n\nfunction wakeChunk(listeners: null | Array<() => mixed>) {\n  if (listeners !== null) {\n    for (let i = 0; i < listeners.length; i++) {\n      const listener = listeners[i];\n      listener();\n    }\n  }\n}\n\nfunction triggerErrorOnChunk<T>(chunk: SomeChunk<T>, error: Error): void {\n  if (chunk._status !== PENDING) {\n    // We already resolved. We didn't expect to see this.\n    return;\n  }\n  const listeners = chunk._value;\n  const erroredChunk: ErroredChunk = (chunk: any);\n  erroredChunk._status = ERRORED;\n  erroredChunk._value = error;\n  wakeChunk(listeners);\n}\n\nfunction createResolvedModelChunk(\n  response: Response,\n  value: UninitializedModel,\n): ResolvedModelChunk {\n  return new Chunk(RESOLVED_MODEL, value, response);\n}\n\nfunction createResolvedModuleChunk<T>(\n  response: Response,\n  value: ModuleReference<T>,\n): ResolvedModuleChunk<T> {\n  return new Chunk(RESOLVED_MODULE, value, response);\n}\n\nfunction resolveModelChunk<T>(\n  chunk: SomeChunk<T>,\n  value: UninitializedModel,\n): void {\n  if (chunk._status !== PENDING) {\n    // We already resolved. We didn't expect to see this.\n    return;\n  }\n  const listeners = chunk._value;\n  const resolvedChunk: ResolvedModelChunk = (chunk: any);\n  resolvedChunk._status = RESOLVED_MODEL;\n  resolvedChunk._value = value;\n  wakeChunk(listeners);\n}\n\nfunction resolveModuleChunk<T>(\n  chunk: SomeChunk<T>,\n  value: ModuleReference<T>,\n): void {\n  if (chunk._status !== PENDING) {\n    // We already resolved. We didn't expect to see this.\n    return;\n  }\n  const listeners = chunk._value;\n  const resolvedChunk: ResolvedModuleChunk<T> = (chunk: any);\n  resolvedChunk._status = RESOLVED_MODULE;\n  resolvedChunk._value = value;\n  wakeChunk(listeners);\n}\n\nfunction initializeModelChunk<T>(chunk: ResolvedModelChunk): T {\n  const value: T = parseModel(chunk._response, chunk._value);\n  const initializedChunk: InitializedChunk<T> = (chunk: any);\n  initializedChunk._status = INITIALIZED;\n  initializedChunk._value = value;\n  return value;\n}\n\nfunction initializeModuleChunk<T>(chunk: ResolvedModuleChunk<T>): T {\n  const value: T = requireModule(chunk._value);\n  const initializedChunk: InitializedChunk<T> = (chunk: any);\n  initializedChunk._status = INITIALIZED;\n  initializedChunk._value = value;\n  return value;\n}\n\n// Report that any missing chunks in the model is now going to throw this\n// error upon read. Also notify any pending promises.\nexport function reportGlobalError(response: Response, error: Error): void {\n  response._chunks.forEach(chunk => {\n    // If this chunk was already resolved or errored, it won't\n    // trigger an error but if it wasn't then we need to\n    // because we won't be getting any new data to resolve it.\n    triggerErrorOnChunk(chunk, error);\n  });\n}\n\nfunction createElement(type, key, props): React$Element<any> {\n  const element: any = {\n    // This tag allows us to uniquely identify this as a React Element\n    $$typeof: REACT_ELEMENT_TYPE,\n\n    // Built-in properties that belong on the element\n    type: type,\n    key: key,\n    ref: null,\n    props: props,\n\n    // Record the component responsible for creating this element.\n    _owner: null,\n  };\n  if (__DEV__) {\n    // We don't really need to add any of these but keeping them for good measure.\n    // Unfortunately, _store is enumerable in jest matchers so for equality to\n    // work, I need to keep it or make _store non-enumerable in the other file.\n    element._store = {};\n    Object.defineProperty(element._store, 'validated', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: true, // This element has already been validated on the server.\n    });\n    Object.defineProperty(element, '_self', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: null,\n    });\n    Object.defineProperty(element, '_source', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: null,\n    });\n  }\n  return element;\n}\n\nfunction createLazyChunkWrapper<T>(\n  chunk: SomeChunk<T>,\n): LazyComponent<T, SomeChunk<T>> {\n  const lazyType: LazyComponent<T, SomeChunk<T>> = {\n    $$typeof: REACT_LAZY_TYPE,\n    _payload: chunk,\n    _init: readChunk,\n  };\n  return lazyType;\n}\n\nfunction getChunk(response: Response, id: number): SomeChunk<any> {\n  const chunks = response._chunks;\n  let chunk = chunks.get(id);\n  if (!chunk) {\n    chunk = createPendingChunk(response);\n    chunks.set(id, chunk);\n  }\n  return chunk;\n}\n\nexport function parseModelString(\n  response: Response,\n  parentObject: Object,\n  value: string,\n): any {\n  switch (value[0]) {\n    case '$': {\n      if (value === '$') {\n        return REACT_ELEMENT_TYPE;\n      } else if (value[1] === '$' || value[1] === '@') {\n        // This was an escaped string value.\n        return value.substring(1);\n      } else {\n        const id = parseInt(value.substring(1), 16);\n        const chunk = getChunk(response, id);\n        return readChunk(chunk);\n      }\n    }\n    case '@': {\n      const id = parseInt(value.substring(1), 16);\n      const chunk = getChunk(response, id);\n      // We create a React.lazy wrapper around any lazy values.\n      // When passed into React, we'll know how to suspend on this.\n      return createLazyChunkWrapper(chunk);\n    }\n  }\n  return value;\n}\n\nexport function parseModelTuple(\n  response: Response,\n  value: {+[key: string]: JSONValue} | $ReadOnlyArray<JSONValue>,\n): any {\n  const tuple: [mixed, mixed, mixed, mixed] = (value: any);\n\n  if (tuple[0] === REACT_ELEMENT_TYPE) {\n    // TODO: Consider having React just directly accept these arrays as elements.\n    // Or even change the ReactElement type to be an array.\n    return createElement(tuple[1], tuple[2], tuple[3]);\n  }\n  return value;\n}\n\nexport function createResponse(bundlerConfig: BundlerConfig): ResponseBase {\n  const chunks: Map<number, SomeChunk<any>> = new Map();\n  const response = {\n    _bundlerConfig: bundlerConfig,\n    _chunks: chunks,\n    readRoot: readRoot,\n  };\n  return response;\n}\n\nexport function resolveModel(\n  response: Response,\n  id: number,\n  model: UninitializedModel,\n): void {\n  const chunks = response._chunks;\n  const chunk = chunks.get(id);\n  if (!chunk) {\n    chunks.set(id, createResolvedModelChunk(response, model));\n  } else {\n    resolveModelChunk(chunk, model);\n  }\n}\n\nexport function resolveProvider(\n  response: Response,\n  id: number,\n  contextName: string,\n): void {\n  const chunks = response._chunks;\n  chunks.set(\n    id,\n    createInitializedChunk(\n      response,\n      getOrCreateServerContext(contextName).Provider,\n    ),\n  );\n}\n\nexport function resolveModule(\n  response: Response,\n  id: number,\n  model: UninitializedModel,\n): void {\n  const chunks = response._chunks;\n  const chunk = chunks.get(id);\n  const moduleMetaData: ModuleMetaData = parseModel(response, model);\n  const moduleReference = resolveModuleReference(\n    response._bundlerConfig,\n    moduleMetaData,\n  );\n\n  // TODO: Add an option to encode modules that are lazy loaded.\n  // For now we preload all modules as early as possible since it's likely\n  // that we'll need them.\n  preloadModule(moduleReference);\n\n  if (!chunk) {\n    chunks.set(id, createResolvedModuleChunk(response, moduleReference));\n  } else {\n    resolveModuleChunk(chunk, moduleReference);\n  }\n}\n\nexport function resolveSymbol(\n  response: Response,\n  id: number,\n  name: string,\n): void {\n  const chunks = response._chunks;\n  // We assume that we'll always emit the symbol before anything references it\n  // to save a few bytes.\n  chunks.set(id, createInitializedChunk(response, Symbol.for(name)));\n}\n\nexport function resolveError(\n  response: Response,\n  id: number,\n  message: string,\n  stack: string,\n): void {\n  // eslint-disable-next-line react-internal/prod-error-codes\n  const error = new Error(message);\n  error.stack = stack;\n  const chunks = response._chunks;\n  const chunk = chunks.get(id);\n  if (!chunk) {\n    chunks.set(id, createErrorChunk(response, error));\n  } else {\n    triggerErrorOnChunk(chunk, error);\n  }\n}\n\nexport function close(response: Response): void {\n  // In case there are any remaining unresolved chunks, they won't\n  // be resolved now. So we need to issue an error to those.\n  // Ideally we should be able to early bail out if we kept a\n  // ref count of pending chunks.\n  reportGlobalError(response, new Error('Connection closed.'));\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {RowEncoding} from './ReactFlightNativeRelayProtocol';\n\nimport type {Response} from 'react-client/src/ReactFlightClient';\n\nimport {\n  createResponse,\n  resolveModel,\n  resolveModule,\n  resolveSymbol,\n  resolveError,\n  close,\n} from 'react-client/src/ReactFlightClient';\n\nexport {createResponse, close};\n\nexport function resolveRow(response: Response, chunk: RowEncoding): void {\n  if (chunk[0] === 'J') {\n    resolveModel(response, chunk[1], chunk[2]);\n  } else if (chunk[0] === 'M') {\n    resolveModule(response, chunk[1], chunk[2]);\n  } else if (chunk[0] === 'S') {\n    // $FlowFixMe: Flow doesn't support disjoint unions on tuples.\n    resolveSymbol(response, chunk[1], chunk[2]);\n  } else {\n    // $FlowFixMe: Flow doesn't support disjoint unions on tuples.\n    resolveError(response, chunk[1], chunk[2].message, chunk[2].stack);\n  }\n}\n"],"names":["formatProdErrorMessage","code","url","i","arguments","length","encodeURIComponent","isArrayImpl","Array","isArray","a","resolveModuleReference","bundlerConfig","moduleData","resolveModuleReferenceImpl","parseModelRecursively","response","parentObj","value","parseModelString","parsedValue","parseModelTuple","innerKey","dummy","parseModel","json","REACT_ELEMENT_TYPE","Symbol","for","REACT_LAZY_TYPE","ReactSharedInternals","React","ContextRegistry","PENDING","RESOLVED_MODEL","RESOLVED_MODULE","INITIALIZED","ERRORED","Chunk","status","_status","_value","_response","prototype","then","resolve","chunk","push","readChunk","initializeModelChunk","initializeModuleChunk","readRoot","getChunk","createPendingChunk","createErrorChunk","error","createInitializedChunk","wakeChunk","listeners","listener","triggerErrorOnChunk","erroredChunk","createResolvedModelChunk","createResolvedModuleChunk","resolveModelChunk","resolvedChunk","resolveModuleChunk","initializedChunk","requireModule","reportGlobalError","_chunks","forEach","createElement","type","key","props","element","$$typeof","ref","_owner","createLazyChunkWrapper","lazyType","_payload","_init","id","chunks","get","set","parentObject","substring","parseInt","tuple","createResponse","Map","_bundlerConfig","resolveModel","model","resolveModule","moduleMetaData","moduleReference","preloadModule","resolveSymbol","name","resolveError","message","stack","Error","close","resolveRow"],"mappings":"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"}