{"version":3,"file":"react-transport-dom-webpack.production.min.js","sources":["../../../../packages/react-client/src/ReactFlightClientHostConfigBrowser.js","../../../../packages/react-client/src/ReactFlightClientHostConfigStream.js","../../../../packages/react-transport-dom-webpack/src/ReactFlightClientWebpackBundlerConfig.js","../../../../packages/shared/ReactSymbols.js","../../../../packages/react-client/src/ReactFlightClient.js","../../../../packages/react-client/src/ReactFlightClientStream.js","../../../../packages/react-transport-dom-webpack/src/ReactFlightDOMClient.js"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nexport type StringDecoder = TextDecoder;\n\nexport const supportsBinaryStreams = true;\n\nexport function createStringDecoder(): StringDecoder {\n  return new TextDecoder();\n}\n\nconst decoderOptions = {stream: true};\n\nexport function readPartialStringChunk(\n  decoder: StringDecoder,\n  buffer: Uint8Array,\n): string {\n  return decoder.decode(buffer, decoderOptions);\n}\n\nexport function readFinalStringChunk(\n  decoder: StringDecoder,\n  buffer: Uint8Array,\n): string {\n  return decoder.decode(buffer);\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {ResponseBase} from './ReactFlightClient';\nimport type {StringDecoder} from './ReactFlightClientHostConfig';\n\nexport type Response = ResponseBase & {\n  _partialRow: string,\n  _fromJSON: (key: string, value: JSONValue) => any,\n  _stringDecoder: StringDecoder,\n};\n\nexport type UninitializedModel = string;\n\nexport function parseModel<T>(response: Response, json: UninitializedModel): T {\n  return JSON.parse(json, response._fromJSON);\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nexport opaque type ModuleMetaData = {\n  id: string,\n  chunks: Array<string>,\n  name: string,\n};\n\n// eslint-disable-next-line no-unused-vars\nexport opaque type ModuleReference<T> = ModuleMetaData;\n\nexport function resolveModuleReference<T>(\n  moduleData: ModuleMetaData,\n): ModuleReference<T> {\n  return moduleData;\n}\n\n// The chunk cache contains all the chunks we've preloaded so far.\n// If they're still pending they're a thenable. This map also exists\n// in Webpack but unfortunately it's not exposed so we have to\n// replicate it in user space. null means that it has already loaded.\nconst chunkCache: Map<string, null | Promise<any> | Error> = new Map();\n\n// Start preloading the modules since we might need them soon.\n// This function doesn't suspend.\nexport function preloadModule<T>(moduleData: ModuleReference<T>): void {\n  const chunks = moduleData.chunks;\n  for (let i = 0; i < chunks.length; i++) {\n    const chunkId = chunks[i];\n    const entry = chunkCache.get(chunkId);\n    if (entry === undefined) {\n      const thenable = __webpack_chunk_load__(chunkId);\n      const resolve = chunkCache.set.bind(chunkCache, chunkId, null);\n      const reject = chunkCache.set.bind(chunkCache, chunkId);\n      thenable.then(resolve, reject);\n      chunkCache.set(chunkId, thenable);\n    }\n  }\n}\n\n// Actually require the module or suspend if it's not yet ready.\n// Increase priority if necessary.\nexport function requireModule<T>(moduleData: ModuleReference<T>): T {\n  const chunks = moduleData.chunks;\n  for (let i = 0; i < chunks.length; i++) {\n    const chunkId = chunks[i];\n    const entry = chunkCache.get(chunkId);\n    if (entry !== null) {\n      // We assume that preloadModule has been called before.\n      // So we don't expect to see entry being undefined here, that's an error.\n      // Let's throw either an error or the Promise.\n      throw entry;\n    }\n  }\n  return __webpack_require__(moduleData.id)[moduleData.name];\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\n// ATTENTION\n// When adding new symbols to this file,\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n\n// The Symbol used to tag the ReactElement-like types. If there is no native Symbol\n// nor polyfill, then a plain number is used for performance.\nexport let REACT_ELEMENT_TYPE = 0xeac7;\nexport let REACT_PORTAL_TYPE = 0xeaca;\nexport let REACT_FRAGMENT_TYPE = 0xeacb;\nexport let REACT_STRICT_MODE_TYPE = 0xeacc;\nexport let REACT_PROFILER_TYPE = 0xead2;\nexport let REACT_PROVIDER_TYPE = 0xeacd;\nexport let REACT_CONTEXT_TYPE = 0xeace;\nexport let REACT_FORWARD_REF_TYPE = 0xead0;\nexport let REACT_SUSPENSE_TYPE = 0xead1;\nexport let REACT_SUSPENSE_LIST_TYPE = 0xead8;\nexport let REACT_MEMO_TYPE = 0xead3;\nexport let REACT_LAZY_TYPE = 0xead4;\nexport let REACT_BLOCK_TYPE = 0xead9;\nexport let REACT_SERVER_BLOCK_TYPE = 0xeada;\nexport let REACT_FUNDAMENTAL_TYPE = 0xead5;\nexport let REACT_SCOPE_TYPE = 0xead7;\nexport let REACT_OPAQUE_ID_TYPE = 0xeae0;\nexport let REACT_DEBUG_TRACING_MODE_TYPE = 0xeae1;\nexport let REACT_OFFSCREEN_TYPE = 0xeae2;\nexport let REACT_LEGACY_HIDDEN_TYPE = 0xeae3;\n\nif (typeof Symbol === 'function' && Symbol.for) {\n  const symbolFor = Symbol.for;\n  REACT_ELEMENT_TYPE = symbolFor('react.element');\n  REACT_PORTAL_TYPE = symbolFor('react.portal');\n  REACT_FRAGMENT_TYPE = symbolFor('react.fragment');\n  REACT_STRICT_MODE_TYPE = symbolFor('react.strict_mode');\n  REACT_PROFILER_TYPE = symbolFor('react.profiler');\n  REACT_PROVIDER_TYPE = symbolFor('react.provider');\n  REACT_CONTEXT_TYPE = symbolFor('react.context');\n  REACT_FORWARD_REF_TYPE = symbolFor('react.forward_ref');\n  REACT_SUSPENSE_TYPE = symbolFor('react.suspense');\n  REACT_SUSPENSE_LIST_TYPE = symbolFor('react.suspense_list');\n  REACT_MEMO_TYPE = symbolFor('react.memo');\n  REACT_LAZY_TYPE = symbolFor('react.lazy');\n  REACT_BLOCK_TYPE = symbolFor('react.block');\n  REACT_SERVER_BLOCK_TYPE = symbolFor('react.server.block');\n  REACT_FUNDAMENTAL_TYPE = symbolFor('react.fundamental');\n  REACT_SCOPE_TYPE = symbolFor('react.scope');\n  REACT_OPAQUE_ID_TYPE = symbolFor('react.opaque.id');\n  REACT_DEBUG_TRACING_MODE_TYPE = symbolFor('react.debug_trace_mode');\n  REACT_OFFSCREEN_TYPE = symbolFor('react.offscreen');\n  REACT_LEGACY_HIDDEN_TYPE = symbolFor('react.legacy_hidden');\n}\n\nconst MAYBE_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\nconst FAUX_ITERATOR_SYMBOL = '@@iterator';\n\nexport function getIteratorFn(maybeIterable: ?any): ?() => ?Iterator<*> {\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\n    return null;\n  }\n  const maybeIterator =\n    (MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL]) ||\n    maybeIterable[FAUX_ITERATOR_SYMBOL];\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n  return null;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Wakeable} from 'shared/ReactTypes';\nimport type {BlockComponent, BlockRenderFunction} from 'react/src/ReactBlock';\nimport type {LazyComponent} from 'react/src/ReactLazy';\n\nimport type {\n  ModuleReference,\n  ModuleMetaData,\n  UninitializedModel,\n  Response,\n} from './ReactFlightClientHostConfig';\n\nimport {\n  resolveModuleReference,\n  preloadModule,\n  requireModule,\n  parseModel,\n} from './ReactFlightClientHostConfig';\n\nimport {\n  REACT_LAZY_TYPE,\n  REACT_BLOCK_TYPE,\n  REACT_ELEMENT_TYPE,\n} from 'shared/ReactSymbols';\n\nexport type JSONValue =\n  | number\n  | null\n  | boolean\n  | string\n  | {+[key: string]: JSONValue}\n  | $ReadOnlyArray<JSONValue>;\n\nconst PENDING = 0;\nconst RESOLVED_MODEL = 1;\nconst INITIALIZED = 2;\nconst ERRORED = 3;\n\ntype PendingChunk = {\n  _status: 0,\n  _value: null | Array<() => mixed>,\n  _response: Response,\n  then(resolve: () => mixed): void,\n};\ntype ResolvedModelChunk = {\n  _status: 1,\n  _value: UninitializedModel,\n  _response: Response,\n  then(resolve: () => mixed): void,\n};\ntype InitializedChunk<T> = {\n  _status: 2,\n  _value: T,\n  _response: Response,\n  then(resolve: () => mixed): void,\n};\ntype ErroredChunk = {\n  _status: 3,\n  _value: Error,\n  _response: Response,\n  then(resolve: () => mixed): void,\n};\ntype SomeChunk<T> =\n  | PendingChunk\n  | ResolvedModelChunk\n  | InitializedChunk<T>\n  | ErroredChunk;\n\nfunction Chunk(status: any, value: any, response: Response) {\n  this._status = status;\n  this._value = value;\n  this._response = response;\n}\nChunk.prototype.then = function<T>(resolve: () => mixed) {\n  const chunk: SomeChunk<T> = this;\n  if (chunk._status === PENDING) {\n    if (chunk._value === null) {\n      chunk._value = [];\n    }\n    chunk._value.push(resolve);\n  } else {\n    resolve();\n  }\n};\n\nexport type ResponseBase = {\n  _chunks: Map<number, SomeChunk<any>>,\n  readRoot<T>(): T,\n  ...\n};\n\nexport type {Response};\n\nfunction readChunk<T>(chunk: SomeChunk<T>): T {\n  switch (chunk._status) {\n    case INITIALIZED:\n      return chunk._value;\n    case RESOLVED_MODEL:\n      return initializeModelChunk(chunk);\n    case PENDING:\n      // eslint-disable-next-line no-throw-literal\n      throw (chunk: Wakeable);\n    default:\n      throw chunk._value;\n  }\n}\n\nfunction readRoot<T>(): T {\n  const response: Response = this;\n  const chunk = getChunk(response, 0);\n  return readChunk(chunk);\n}\n\nfunction createPendingChunk(response: Response): PendingChunk {\n  return new Chunk(PENDING, null, response);\n}\n\nfunction createErrorChunk(response: Response, error: Error): ErroredChunk {\n  return new Chunk(ERRORED, error, response);\n}\n\nfunction wakeChunk(listeners: null | Array<() => mixed>) {\n  if (listeners !== null) {\n    for (let i = 0; i < listeners.length; i++) {\n      const listener = listeners[i];\n      listener();\n    }\n  }\n}\n\nfunction triggerErrorOnChunk<T>(chunk: SomeChunk<T>, error: Error): void {\n  if (chunk._status !== PENDING) {\n    // We already resolved. We didn't expect to see this.\n    return;\n  }\n  const listeners = chunk._value;\n  const erroredChunk: ErroredChunk = (chunk: any);\n  erroredChunk._status = ERRORED;\n  erroredChunk._value = error;\n  wakeChunk(listeners);\n}\n\nfunction createResolvedModelChunk(\n  response: Response,\n  value: UninitializedModel,\n): ResolvedModelChunk {\n  return new Chunk(RESOLVED_MODEL, value, response);\n}\n\nfunction resolveModelChunk<T>(\n  chunk: SomeChunk<T>,\n  value: UninitializedModel,\n): void {\n  if (chunk._status !== PENDING) {\n    // We already resolved. We didn't expect to see this.\n    return;\n  }\n  const listeners = chunk._value;\n  const resolvedChunk: ResolvedModelChunk = (chunk: any);\n  resolvedChunk._status = RESOLVED_MODEL;\n  resolvedChunk._value = value;\n  wakeChunk(listeners);\n}\n\nfunction initializeModelChunk<T>(chunk: ResolvedModelChunk): T {\n  const value: T = parseModel(chunk._response, chunk._value);\n  const initializedChunk: InitializedChunk<T> = (chunk: any);\n  initializedChunk._status = INITIALIZED;\n  initializedChunk._value = value;\n  return value;\n}\n\n// Report that any missing chunks in the model is now going to throw this\n// error upon read. Also notify any pending promises.\nexport function reportGlobalError(response: Response, error: Error): void {\n  response._chunks.forEach(chunk => {\n    // If this chunk was already resolved or errored, it won't\n    // trigger an error but if it wasn't then we need to\n    // because we won't be getting any new data to resolve it.\n    triggerErrorOnChunk(chunk, error);\n  });\n}\n\nfunction readMaybeChunk<T>(maybeChunk: SomeChunk<T> | T): T {\n  if (maybeChunk == null || !(maybeChunk instanceof Chunk)) {\n    // $FlowFixMe\n    return maybeChunk;\n  }\n  const chunk: SomeChunk<T> = (maybeChunk: any);\n  return readChunk(chunk);\n}\n\nfunction createElement(type, key, props): React$Element<any> {\n  const element: any = {\n    // This tag allows us to uniquely identify this as a React Element\n    $$typeof: REACT_ELEMENT_TYPE,\n\n    // Built-in properties that belong on the element\n    type: type,\n    key: key,\n    ref: null,\n    props: props,\n\n    // Record the component responsible for creating this element.\n    _owner: null,\n  };\n  if (__DEV__) {\n    // We don't really need to add any of these but keeping them for good measure.\n    // Unfortunately, _store is enumerable in jest matchers so for equality to\n    // work, I need to keep it or make _store non-enumerable in the other file.\n    element._store = {};\n    Object.defineProperty(element._store, 'validated', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: true, // This element has already been validated on the server.\n    });\n    Object.defineProperty(element, '_self', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: null,\n    });\n    Object.defineProperty(element, '_source', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: null,\n    });\n  }\n  return element;\n}\n\ntype UninitializedBlockPayload<Data> = [\n  mixed,\n  ModuleMetaData | SomeChunk<ModuleMetaData>,\n  Data | SomeChunk<Data>,\n  Response,\n];\n\nfunction initializeBlock<Props, Data>(\n  tuple: UninitializedBlockPayload<Data>,\n): BlockComponent<Props, Data> {\n  // Require module first and then data. The ordering matters.\n  const moduleMetaData: ModuleMetaData = readMaybeChunk(tuple[1]);\n  const moduleReference: ModuleReference<\n    BlockRenderFunction<Props, Data>,\n  > = resolveModuleReference(moduleMetaData);\n  // TODO: Do this earlier, as the chunk is resolved.\n  preloadModule(moduleReference);\n\n  const moduleExport = requireModule(moduleReference);\n\n  // The ordering here is important because this call might suspend.\n  // We don't want that to prevent the module graph for being initialized.\n  const data: Data = readMaybeChunk(tuple[2]);\n\n  return {\n    $$typeof: REACT_BLOCK_TYPE,\n    _status: -1,\n    _data: data,\n    _render: moduleExport,\n  };\n}\n\nfunction createLazyBlock<Props, Data>(\n  tuple: UninitializedBlockPayload<Data>,\n): LazyComponent<BlockComponent<Props, Data>, UninitializedBlockPayload<Data>> {\n  const lazyType: LazyComponent<\n    BlockComponent<Props, Data>,\n    UninitializedBlockPayload<Data>,\n  > = {\n    $$typeof: REACT_LAZY_TYPE,\n    _payload: tuple,\n    _init: initializeBlock,\n  };\n  return lazyType;\n}\n\nfunction getChunk(response: Response, id: number): SomeChunk<any> {\n  const chunks = response._chunks;\n  let chunk = chunks.get(id);\n  if (!chunk) {\n    chunk = createPendingChunk(response);\n    chunks.set(id, chunk);\n  }\n  return chunk;\n}\n\nexport function parseModelString(\n  response: Response,\n  parentObject: Object,\n  value: string,\n): any {\n  if (value[0] === '$') {\n    if (value === '$') {\n      return REACT_ELEMENT_TYPE;\n    } else if (value[1] === '$' || value[1] === '@') {\n      // This was an escaped string value.\n      return value.substring(1);\n    } else {\n      const id = parseInt(value.substring(1), 16);\n      const chunk = getChunk(response, id);\n      if (parentObject[0] === REACT_BLOCK_TYPE) {\n        // Block types know how to deal with lazy values.\n        return chunk;\n      }\n      // For anything else we must Suspend this block if\n      // we don't yet have the value.\n      return readChunk(chunk);\n    }\n  }\n  if (value === '@') {\n    return REACT_BLOCK_TYPE;\n  }\n  return value;\n}\n\nexport function parseModelTuple(\n  response: Response,\n  value: {+[key: string]: JSONValue} | $ReadOnlyArray<JSONValue>,\n): any {\n  const tuple: [mixed, mixed, mixed, mixed] = (value: any);\n  if (tuple[0] === REACT_ELEMENT_TYPE) {\n    // TODO: Consider having React just directly accept these arrays as elements.\n    // Or even change the ReactElement type to be an array.\n    return createElement(tuple[1], tuple[2], tuple[3]);\n  } else if (tuple[0] === REACT_BLOCK_TYPE) {\n    // TODO: Consider having React just directly accept these arrays as blocks.\n    return createLazyBlock((tuple: any));\n  }\n  return value;\n}\n\nexport function createResponse(): ResponseBase {\n  const chunks: Map<number, SomeChunk<any>> = new Map();\n  const response = {\n    _chunks: chunks,\n    readRoot: readRoot,\n  };\n  return response;\n}\n\nexport function resolveModel(\n  response: Response,\n  id: number,\n  model: UninitializedModel,\n): void {\n  const chunks = response._chunks;\n  const chunk = chunks.get(id);\n  if (!chunk) {\n    chunks.set(id, createResolvedModelChunk(response, model));\n  } else {\n    resolveModelChunk(chunk, model);\n  }\n}\n\nexport function resolveError(\n  response: Response,\n  id: number,\n  message: string,\n  stack: string,\n): void {\n  const error = new Error(message);\n  error.stack = stack;\n  const chunks = response._chunks;\n  const chunk = chunks.get(id);\n  if (!chunk) {\n    chunks.set(id, createErrorChunk(response, error));\n  } else {\n    triggerErrorOnChunk(chunk, error);\n  }\n}\n\nexport function close(response: Response): void {\n  // In case there are any remaining unresolved chunks, they won't\n  // be resolved now. So we need to issue an error to those.\n  // Ideally we should be able to early bail out if we kept a\n  // ref count of pending chunks.\n  reportGlobalError(response, new Error('Connection closed.'));\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Response} from './ReactFlightClientHostConfigStream';\n\nimport {\n  resolveModel,\n  resolveError,\n  createResponse as createResponseBase,\n  parseModelString,\n  parseModelTuple,\n} from './ReactFlightClient';\n\nimport {\n  readPartialStringChunk,\n  readFinalStringChunk,\n  supportsBinaryStreams,\n  createStringDecoder,\n} from './ReactFlightClientHostConfig';\n\nexport type {Response};\n\nfunction processFullRow(response: Response, row: string): void {\n  if (row === '') {\n    return;\n  }\n  const tag = row[0];\n  switch (tag) {\n    case 'J': {\n      const colon = row.indexOf(':', 1);\n      const id = parseInt(row.substring(1, colon), 16);\n      const json = row.substring(colon + 1);\n      resolveModel(response, id, json);\n      return;\n    }\n    case 'E': {\n      const colon = row.indexOf(':', 1);\n      const id = parseInt(row.substring(1, colon), 16);\n      const json = row.substring(colon + 1);\n      const errorInfo = JSON.parse(json);\n      resolveError(response, id, errorInfo.message, errorInfo.stack);\n      return;\n    }\n    default: {\n      // Assume this is the root model.\n      resolveModel(response, 0, row);\n      return;\n    }\n  }\n}\n\nexport function processStringChunk(\n  response: Response,\n  chunk: string,\n  offset: number,\n): void {\n  let linebreak = chunk.indexOf('\\n', offset);\n  while (linebreak > -1) {\n    const fullrow = response._partialRow + chunk.substring(offset, linebreak);\n    processFullRow(response, fullrow);\n    response._partialRow = '';\n    offset = linebreak + 1;\n    linebreak = chunk.indexOf('\\n', offset);\n  }\n  response._partialRow += chunk.substring(offset);\n}\n\nexport function processBinaryChunk(\n  response: Response,\n  chunk: Uint8Array,\n): void {\n  if (!supportsBinaryStreams) {\n    throw new Error(\"This environment don't support binary chunks.\");\n  }\n  const stringDecoder = response._stringDecoder;\n  let linebreak = chunk.indexOf(10); // newline\n  while (linebreak > -1) {\n    const fullrow =\n      response._partialRow +\n      readFinalStringChunk(stringDecoder, chunk.subarray(0, linebreak));\n    processFullRow(response, fullrow);\n    response._partialRow = '';\n    chunk = chunk.subarray(linebreak + 1);\n    linebreak = chunk.indexOf(10); // newline\n  }\n  response._partialRow += readPartialStringChunk(stringDecoder, chunk);\n}\n\nfunction createFromJSONCallback(response: Response) {\n  return function(key: string, value: JSONValue) {\n    if (typeof value === 'string') {\n      // We can't use .bind here because we need the \"this\" value.\n      return parseModelString(response, this, value);\n    }\n    if (typeof value === 'object' && value !== null) {\n      return parseModelTuple(response, value);\n    }\n    return value;\n  };\n}\n\nexport function createResponse(): Response {\n  // NOTE: CHECK THE COMPILER OUTPUT EACH TIME YOU CHANGE THIS.\n  // It should be inlined to one object literal but minor changes can break it.\n  const stringDecoder = supportsBinaryStreams ? createStringDecoder() : null;\n  const response: any = createResponseBase();\n  response._partialRow = '';\n  if (supportsBinaryStreams) {\n    response._stringDecoder = stringDecoder;\n  }\n  // Don't inline this call because it causes closure to outline the call above.\n  response._fromJSON = createFromJSONCallback(response);\n  return response;\n}\n\nexport {reportGlobalError, close} from './ReactFlightClient';\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Response as FlightResponse} from 'react-client/src/ReactFlightClientStream';\n\nimport {\n  createResponse,\n  reportGlobalError,\n  processStringChunk,\n  processBinaryChunk,\n  close,\n} from 'react-client/src/ReactFlightClientStream';\n\nfunction startReadingFromStream(\n  response: FlightResponse,\n  stream: ReadableStream,\n): void {\n  const reader = stream.getReader();\n  function progress({done, value}) {\n    if (done) {\n      close(response);\n      return;\n    }\n    const buffer: Uint8Array = (value: any);\n    processBinaryChunk(response, buffer);\n    return reader.read().then(progress, error);\n  }\n  function error(e) {\n    reportGlobalError(response, e);\n  }\n  reader.read().then(progress, error);\n}\n\nfunction createFromReadableStream(stream: ReadableStream): FlightResponse {\n  const response: FlightResponse = createResponse();\n  startReadingFromStream(response, stream);\n  return response;\n}\n\nfunction createFromFetch(\n  promiseForResponse: Promise<Response>,\n): FlightResponse {\n  const response: FlightResponse = createResponse();\n  promiseForResponse.then(\n    function(r) {\n      startReadingFromStream(response, (r.body: any));\n    },\n    function(e) {\n      reportGlobalError(response, e);\n    },\n  );\n  return response;\n}\n\nfunction createFromXHR(request: XMLHttpRequest): FlightResponse {\n  const response: FlightResponse = createResponse();\n  let processedLength = 0;\n  function progress(e: ProgressEvent): void {\n    const chunk = request.responseText;\n    processStringChunk(response, chunk, processedLength);\n    processedLength = chunk.length;\n  }\n  function load(e: ProgressEvent): void {\n    progress(e);\n    close(response);\n  }\n  function error(e: ProgressEvent): void {\n    reportGlobalError(response, new TypeError('Network error'));\n  }\n  request.addEventListener('progress', progress);\n  request.addEventListener('load', load);\n  request.addEventListener('error', error);\n  request.addEventListener('abort', error);\n  request.addEventListener('timeout', error);\n  return response;\n}\n\nexport {createFromXHR, createFromFetch, createFromReadableStream};\n"],"names":["createStringDecoder","TextDecoder","decoderOptions","stream","readPartialStringChunk","decoder","buffer","decode","readFinalStringChunk","parseModel","response","json","JSON","parse","_fromJSON","resolveModuleReference","moduleData","chunkCache","Map","preloadModule","chunks","i","length","chunkId","entry","get","undefined","thenable","__webpack_chunk_load__","resolve","set","bind","reject","then","requireModule","__webpack_require__","id","name","REACT_ELEMENT_TYPE","REACT_LAZY_TYPE","REACT_BLOCK_TYPE","Symbol","for","symbolFor","REACT_PORTAL_TYPE","REACT_SERVER_BLOCK_TYPE","PENDING","RESOLVED_MODEL","INITIALIZED","ERRORED","Chunk","status","value","_status","_value","_response","prototype","chunk","push","readChunk","initializeModelChunk","readRoot","getChunk","createPendingChunk","createErrorChunk","error","wakeChunk","listeners","listener","triggerErrorOnChunk","erroredChunk","createResolvedModelChunk","resolveModelChunk","resolvedChunk","initializedChunk","reportGlobalError","_chunks","forEach","readMaybeChunk","maybeChunk","createElement","type","key","props","element","$$typeof","ref","_owner","initializeBlock","tuple","moduleMetaData","moduleReference","moduleExport","data","_data","_render","createLazyBlock","lazyType","_payload","_init","parseModelString","parentObject","substring","parseInt","parseModelTuple","createResponse","resolveModel","model","resolveError","message","stack","Error","close","processFullRow","row","tag","colon","indexOf","errorInfo","processStringChunk","offset","linebreak","fullrow","_partialRow","processBinaryChunk","stringDecoder","_stringDecoder","subarray","createFromJSONCallback","supportsBinaryStreams","createResponseBase","startReadingFromStream","reader","getReader","progress","done","read","e","createFromReadableStream","createFromFetch","promiseForResponse","r","body","createFromXHR","request","processedLength","responseText","load","TypeError","addEventListener"],"mappings":"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"}