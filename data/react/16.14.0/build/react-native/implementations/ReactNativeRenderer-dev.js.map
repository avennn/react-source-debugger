{"version":3,"file":"ReactNativeRenderer-dev.js","sources":["../../../packages/shared/ReactSharedInternals.js","../../../packages/shared/consoleWithStackDev.js","../../../packages/shared/invokeGuardedCallbackImpl.js","../../../packages/shared/ReactErrorUtils.js","../../../packages/react-native-renderer/src/legacy-events/EventPluginUtils.js","../../../packages/react-native-renderer/src/legacy-events/SyntheticEvent.js","../../../packages/react-native-renderer/src/legacy-events/ResponderSyntheticEvent.js","../../../packages/react-native-renderer/src/legacy-events/ResponderTopLevelEventTypes.js","../../../packages/react-native-renderer/src/legacy-events/ResponderTouchHistoryStore.js","../../../packages/react-native-renderer/src/legacy-events/accumulate.js","../../../packages/react-native-renderer/src/legacy-events/accumulateInto.js","../../../packages/react-native-renderer/src/legacy-events/forEachAccumulated.js","../../../packages/react-reconciler/src/ReactWorkTags.js","../../../packages/react-native-renderer/src/legacy-events/ResponderEventPlugin.js","../../../packages/react-native-renderer/src/legacy-events/EventPluginRegistry.js","../../../packages/react-native-renderer/src/ReactNativeGetListener.js","../../../packages/react-native-renderer/src/ReactNativeBridgeEventPlugin.js","../../../packages/react-native-renderer/src/ReactNativeEventPluginOrder.js","../../../packages/react-native-renderer/src/ReactNativeInjectionShared.js","../../../packages/react-native-renderer/src/ReactNativeComponentTree.js","../../../packages/react-native-renderer/src/legacy-events/ReactGenericBatching.js","../../../packages/react-native-renderer/src/legacy-events/EventBatching.js","../../../packages/react-native-renderer/src/ReactNativeEventEmitter.js","../../../packages/react-native-renderer/src/ReactNativeGlobalResponderHandler.js","../../../packages/react-native-renderer/src/ReactNativeInjection.js","../../../packages/shared/ReactInstanceMap.js","../../../packages/shared/ReactSymbols.js","../../../packages/shared/getComponentName.js","../../../packages/react-reconciler/src/ReactFiberFlags.js","../../../packages/shared/forks/ReactFeatureFlags.native-oss.js","../../../packages/react-reconciler/src/ReactFiberTreeReflection.js","../../../packages/react-native-renderer/src/ReactNativeAttributePayload.js","../../../packages/react-native-renderer/src/NativeMethodsMixinUtils.js","../../../packages/react-native-renderer/src/ReactNativeFiberHostComponent.js","../../../packages/react-reconciler/src/ReactFiberHostConfigWithNoHydration.js","../../../packages/react-native-renderer/src/ReactNativeHostConfig.js","../../../packages/shared/ReactComponentStackFrame.js","../../../packages/shared/checkPropTypes.js","../../../packages/react-reconciler/src/ReactFiberStack.old.js","../../../packages/react-reconciler/src/ReactFiberContext.old.js","../../../packages/react-reconciler/src/ReactRootTags.js","../../../packages/react-reconciler/src/ReactFiberDevToolsHook.old.js","../../../packages/react-reconciler/src/SchedulerWithReactIntegration.new.js","../../../packages/react-reconciler/src/ReactFiberLane.js","../../../packages/react-reconciler/src/SchedulerWithReactIntegration.old.js","../../../packages/shared/ReactVersion.js","../../../packages/react-reconciler/src/ReactTypeOfMode.js","../../../packages/react-reconciler/src/ReactFiberTransition.js","../../../packages/shared/objectIs.js","../../../packages/shared/shallowEqual.js","../../../packages/react-reconciler/src/ReactFiberComponentStack.js","../../../packages/react-reconciler/src/ReactCurrentFiber.js","../../../packages/react-reconciler/src/ReactStrictModeWarnings.old.js","../../../packages/react-reconciler/src/ReactFiberLazyComponent.old.js","../../../packages/react-reconciler/src/MaxInts.js","../../../packages/react-reconciler/src/ReactFiberNewContext.old.js","../../../packages/react-reconciler/src/ReactUpdateQueue.old.js","../../../packages/react-reconciler/src/ReactFiberClassComponent.old.js","../../../packages/react-reconciler/src/ReactChildFiber.old.js","../../../packages/react-reconciler/src/ReactFiberHostContext.old.js","../../../packages/react-reconciler/src/ReactFiberSuspenseContext.old.js","../../../packages/react-reconciler/src/ReactFiberSuspenseComponent.old.js","../../../packages/react-reconciler/src/ReactHookEffectTags.js","../../../packages/react-reconciler/src/ReactFiberHydrationContext.old.js","../../../packages/react-reconciler/src/ReactMutableSource.old.js","../../../packages/react-reconciler/src/ReactFiberHooks.old.js","../../../packages/react-reconciler/src/ReactProfilerTimer.old.js","../../../packages/react-reconciler/src/ReactFiberBeginWork.old.js","../../../packages/react-reconciler/src/ReactFiberCompleteWork.old.js","../../../packages/react-reconciler/src/ReactFiberUnwindWork.old.js","../../../packages/react-reconciler/src/ReactCapturedValue.js","../../../packages/react-reconciler/src/forks/ReactFiberErrorDialog.native.js","../../../packages/react-reconciler/src/ReactFiberErrorLogger.js","../../../packages/react-reconciler/src/ReactFiberThrow.old.js","../../../packages/react-reconciler/src/ReactFiberCommitWork.old.js","../../../packages/react-reconciler/src/ReactTestSelectors.js","../../../packages/react-reconciler/src/ReactFiberWorkLoop.old.js","../../../packages/react-reconciler/src/ReactFiberHotReloading.old.js","../../../packages/react-reconciler/src/ReactFiber.old.js","../../../packages/react-reconciler/src/ReactFiberRoot.old.js","../../../packages/react-reconciler/src/ReactPortal.js","../../../packages/react-reconciler/src/ReactFiberReconciler.old.js","../../../packages/react-native-renderer/src/ReactNativeFiberInspector.js","../../../packages/react-native-renderer/src/ReactNativeRenderer.js"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport * as React from 'react';\n\nconst ReactSharedInternals =\n  React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n\nexport default ReactSharedInternals;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\n\n// In DEV, calls to console.warn and console.error get replaced\n// by calls to these methods by a Babel plugin.\n//\n// In PROD (or in packages without access to React internals),\n// they are left as they are instead.\n\nexport function warn(format, ...args) {\n  if (__DEV__) {\n    printWarning('warn', format, args);\n  }\n}\n\nexport function error(format, ...args) {\n  if (__DEV__) {\n    printWarning('error', format, args);\n  }\n}\n\nfunction printWarning(level, format, args) {\n  // When changing this logic, you might want to also\n  // update consoleWithStackDev.www.js as well.\n  if (__DEV__) {\n    const ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    const stack = ReactDebugCurrentFrame.getStackAddendum();\n    if (stack !== '') {\n      format += '%s';\n      args = args.concat([stack]);\n    }\n\n    const argsWithFormat = args.map(item => '' + item);\n    // Careful: RN currently depends on this prefix\n    argsWithFormat.unshift('Warning: ' + format);\n    // We intentionally don't use spread (or .apply) directly because it\n    // breaks IE9: https://github.com/facebook/react/issues/13610\n    // eslint-disable-next-line react-internal/no-production-logging\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport invariant from 'shared/invariant';\n\nfunction invokeGuardedCallbackProd<A, B, C, D, E, F, Context>(\n  name: string | null,\n  func: (a: A, b: B, c: C, d: D, e: E, f: F) => mixed,\n  context: Context,\n  a: A,\n  b: B,\n  c: C,\n  d: D,\n  e: E,\n  f: F,\n) {\n  const funcArgs = Array.prototype.slice.call(arguments, 3);\n  try {\n    func.apply(context, funcArgs);\n  } catch (error) {\n    this.onError(error);\n  }\n}\n\nlet invokeGuardedCallbackImpl = invokeGuardedCallbackProd;\n\nif (__DEV__) {\n  // In DEV mode, we swap out invokeGuardedCallback for a special version\n  // that plays more nicely with the browser's DevTools. The idea is to preserve\n  // \"Pause on exceptions\" behavior. Because React wraps all user-provided\n  // functions in invokeGuardedCallback, and the production version of\n  // invokeGuardedCallback uses a try-catch, all user exceptions are treated\n  // like caught exceptions, and the DevTools won't pause unless the developer\n  // takes the extra step of enabling pause on caught exceptions. This is\n  // unintuitive, though, because even though React has caught the error, from\n  // the developer's perspective, the error is uncaught.\n  //\n  // To preserve the expected \"Pause on exceptions\" behavior, we don't use a\n  // try-catch in DEV. Instead, we synchronously dispatch a fake event to a fake\n  // DOM node, and call the user-provided callback from inside an event handler\n  // for that fake event. If the callback throws, the error is \"captured\" using\n  // a global event handler. But because the error happens in a different\n  // event loop context, it does not interrupt the normal program flow.\n  // Effectively, this gives us try-catch behavior without actually using\n  // try-catch. Neat!\n\n  // Check that the browser supports the APIs we need to implement our special\n  // DEV version of invokeGuardedCallback\n  if (\n    typeof window !== 'undefined' &&\n    typeof window.dispatchEvent === 'function' &&\n    typeof document !== 'undefined' &&\n    typeof document.createEvent === 'function'\n  ) {\n    const fakeNode = document.createElement('react');\n\n    invokeGuardedCallbackImpl = function invokeGuardedCallbackDev<\n      A,\n      B,\n      C,\n      D,\n      E,\n      F,\n      Context,\n    >(\n      name: string | null,\n      func: (a: A, b: B, c: C, d: D, e: E, f: F) => mixed,\n      context: Context,\n      a: A,\n      b: B,\n      c: C,\n      d: D,\n      e: E,\n      f: F,\n    ) {\n      // If document doesn't exist we know for sure we will crash in this method\n      // when we call document.createEvent(). However this can cause confusing\n      // errors: https://github.com/facebook/create-react-app/issues/3482\n      // So we preemptively throw with a better message instead.\n      invariant(\n        typeof document !== 'undefined',\n        'The `document` global was defined when React was initialized, but is not ' +\n          'defined anymore. This can happen in a test environment if a component ' +\n          'schedules an update from an asynchronous callback, but the test has already ' +\n          'finished running. To solve this, you can either unmount the component at ' +\n          'the end of your test (and ensure that any asynchronous operations get ' +\n          'canceled in `componentWillUnmount`), or you can change the test itself ' +\n          'to be asynchronous.',\n      );\n      const evt = document.createEvent('Event');\n\n      let didCall = false;\n      // Keeps track of whether the user-provided callback threw an error. We\n      // set this to true at the beginning, then set it to false right after\n      // calling the function. If the function errors, `didError` will never be\n      // set to false. This strategy works even if the browser is flaky and\n      // fails to call our global error handler, because it doesn't rely on\n      // the error event at all.\n      let didError = true;\n\n      // Keeps track of the value of window.event so that we can reset it\n      // during the callback to let user code access window.event in the\n      // browsers that support it.\n      const windowEvent = window.event;\n\n      // Keeps track of the descriptor of window.event to restore it after event\n      // dispatching: https://github.com/facebook/react/issues/13688\n      const windowEventDescriptor = Object.getOwnPropertyDescriptor(\n        window,\n        'event',\n      );\n\n      function restoreAfterDispatch() {\n        // We immediately remove the callback from event listeners so that\n        // nested `invokeGuardedCallback` calls do not clash. Otherwise, a\n        // nested call would trigger the fake event handlers of any call higher\n        // in the stack.\n        fakeNode.removeEventListener(evtType, callCallback, false);\n\n        // We check for window.hasOwnProperty('event') to prevent the\n        // window.event assignment in both IE <= 10 as they throw an error\n        // \"Member not found\" in strict mode, and in Firefox which does not\n        // support window.event.\n        if (\n          typeof window.event !== 'undefined' &&\n          window.hasOwnProperty('event')\n        ) {\n          window.event = windowEvent;\n        }\n      }\n\n      // Create an event handler for our fake event. We will synchronously\n      // dispatch our fake event using `dispatchEvent`. Inside the handler, we\n      // call the user-provided callback.\n      const funcArgs = Array.prototype.slice.call(arguments, 3);\n      function callCallback() {\n        didCall = true;\n        restoreAfterDispatch();\n        func.apply(context, funcArgs);\n        didError = false;\n      }\n\n      // Create a global error event handler. We use this to capture the value\n      // that was thrown. It's possible that this error handler will fire more\n      // than once; for example, if non-React code also calls `dispatchEvent`\n      // and a handler for that event throws. We should be resilient to most of\n      // those cases. Even if our error event handler fires more than once, the\n      // last error event is always used. If the callback actually does error,\n      // we know that the last error event is the correct one, because it's not\n      // possible for anything else to have happened in between our callback\n      // erroring and the code that follows the `dispatchEvent` call below. If\n      // the callback doesn't error, but the error event was fired, we know to\n      // ignore it because `didError` will be false, as described above.\n      let error;\n      // Use this to track whether the error event is ever called.\n      let didSetError = false;\n      let isCrossOriginError = false;\n\n      function handleWindowError(event) {\n        error = event.error;\n        didSetError = true;\n        if (error === null && event.colno === 0 && event.lineno === 0) {\n          isCrossOriginError = true;\n        }\n        if (event.defaultPrevented) {\n          // Some other error handler has prevented default.\n          // Browsers silence the error report if this happens.\n          // We'll remember this to later decide whether to log it or not.\n          if (error != null && typeof error === 'object') {\n            try {\n              error._suppressLogging = true;\n            } catch (inner) {\n              // Ignore.\n            }\n          }\n        }\n      }\n\n      // Create a fake event type.\n      const evtType = `react-${name ? name : 'invokeguardedcallback'}`;\n\n      // Attach our event handlers\n      window.addEventListener('error', handleWindowError);\n      fakeNode.addEventListener(evtType, callCallback, false);\n\n      // Synchronously dispatch our fake event. If the user-provided function\n      // errors, it will trigger our global error handler.\n      evt.initEvent(evtType, false, false);\n      fakeNode.dispatchEvent(evt);\n\n      if (windowEventDescriptor) {\n        Object.defineProperty(window, 'event', windowEventDescriptor);\n      }\n\n      if (didCall && didError) {\n        if (!didSetError) {\n          // The callback errored, but the error event never fired.\n          error = new Error(\n            'An error was thrown inside one of your components, but React ' +\n              \"doesn't know what it was. This is likely due to browser \" +\n              'flakiness. React does its best to preserve the \"Pause on ' +\n              'exceptions\" behavior of the DevTools, which requires some ' +\n              \"DEV-mode only tricks. It's possible that these don't work in \" +\n              'your browser. Try triggering the error in production mode, ' +\n              'or switching to a modern browser. If you suspect that this is ' +\n              'actually an issue with React, please file an issue.',\n          );\n        } else if (isCrossOriginError) {\n          error = new Error(\n            \"A cross-origin error was thrown. React doesn't have access to \" +\n              'the actual error object in development. ' +\n              'See https://reactjs.org/link/crossorigin-error for more information.',\n          );\n        }\n        this.onError(error);\n      }\n\n      // Remove our event listeners\n      window.removeEventListener('error', handleWindowError);\n\n      if (!didCall) {\n        // Something went really wrong, and our event was not dispatched.\n        // https://github.com/facebook/react/issues/16734\n        // https://github.com/facebook/react/issues/16585\n        // Fall back to the production implementation.\n        restoreAfterDispatch();\n        return invokeGuardedCallbackProd.apply(this, arguments);\n      }\n    };\n  }\n}\n\nexport default invokeGuardedCallbackImpl;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport invariant from 'shared/invariant';\nimport invokeGuardedCallbackImpl from './invokeGuardedCallbackImpl';\n\n// Used by Fiber to simulate a try-catch.\nlet hasError: boolean = false;\nlet caughtError: mixed = null;\n\n// Used by event system to capture/rethrow the first error.\nlet hasRethrowError: boolean = false;\nlet rethrowError: mixed = null;\n\nconst reporter = {\n  onError(error: mixed) {\n    hasError = true;\n    caughtError = error;\n  },\n};\n\n/**\n * Call a function while guarding against errors that happens within it.\n * Returns an error if it throws, otherwise null.\n *\n * In production, this is implemented using a try-catch. The reason we don't\n * use a try-catch directly is so that we can swap out a different\n * implementation in DEV mode.\n *\n * @param {String} name of the guard to use for logging or debugging\n * @param {Function} func The function to invoke\n * @param {*} context The context to use when calling the function\n * @param {...*} args Arguments for function\n */\nexport function invokeGuardedCallback<A, B, C, D, E, F, Context>(\n  name: string | null,\n  func: (a: A, b: B, c: C, d: D, e: E, f: F) => mixed,\n  context: Context,\n  a: A,\n  b: B,\n  c: C,\n  d: D,\n  e: E,\n  f: F,\n): void {\n  hasError = false;\n  caughtError = null;\n  invokeGuardedCallbackImpl.apply(reporter, arguments);\n}\n\n/**\n * Same as invokeGuardedCallback, but instead of returning an error, it stores\n * it in a global so it can be rethrown by `rethrowCaughtError` later.\n * TODO: See if caughtError and rethrowError can be unified.\n *\n * @param {String} name of the guard to use for logging or debugging\n * @param {Function} func The function to invoke\n * @param {*} context The context to use when calling the function\n * @param {...*} args Arguments for function\n */\nexport function invokeGuardedCallbackAndCatchFirstError<\n  A,\n  B,\n  C,\n  D,\n  E,\n  F,\n  Context,\n>(\n  name: string | null,\n  func: (a: A, b: B, c: C, d: D, e: E, f: F) => void,\n  context: Context,\n  a: A,\n  b: B,\n  c: C,\n  d: D,\n  e: E,\n  f: F,\n): void {\n  invokeGuardedCallback.apply(this, arguments);\n  if (hasError) {\n    const error = clearCaughtError();\n    if (!hasRethrowError) {\n      hasRethrowError = true;\n      rethrowError = error;\n    }\n  }\n}\n\n/**\n * During execution of guarded functions we will capture the first error which\n * we will rethrow to be handled by the top level error handler.\n */\nexport function rethrowCaughtError() {\n  if (hasRethrowError) {\n    const error = rethrowError;\n    hasRethrowError = false;\n    rethrowError = null;\n    throw error;\n  }\n}\n\nexport function hasCaughtError() {\n  return hasError;\n}\n\nexport function clearCaughtError() {\n  if (hasError) {\n    const error = caughtError;\n    hasError = false;\n    caughtError = null;\n    return error;\n  } else {\n    invariant(\n      false,\n      'clearCaughtError was called but no error was captured. This error ' +\n        'is likely caused by a bug in React. Please file an issue.',\n    );\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {invokeGuardedCallbackAndCatchFirstError} from 'shared/ReactErrorUtils';\nimport invariant from 'shared/invariant';\n\nexport let getFiberCurrentPropsFromNode = null;\nexport let getInstanceFromNode = null;\nexport let getNodeFromInstance = null;\n\nexport function setComponentTree(\n  getFiberCurrentPropsFromNodeImpl,\n  getInstanceFromNodeImpl,\n  getNodeFromInstanceImpl,\n) {\n  getFiberCurrentPropsFromNode = getFiberCurrentPropsFromNodeImpl;\n  getInstanceFromNode = getInstanceFromNodeImpl;\n  getNodeFromInstance = getNodeFromInstanceImpl;\n  if (__DEV__) {\n    if (!getNodeFromInstance || !getInstanceFromNode) {\n      console.error(\n        'EventPluginUtils.setComponentTree(...): Injected ' +\n          'module is missing getNodeFromInstance or getInstanceFromNode.',\n      );\n    }\n  }\n}\n\nlet validateEventDispatches;\nif (__DEV__) {\n  validateEventDispatches = function(event) {\n    const dispatchListeners = event._dispatchListeners;\n    const dispatchInstances = event._dispatchInstances;\n\n    const listenersIsArr = Array.isArray(dispatchListeners);\n    const listenersLen = listenersIsArr\n      ? dispatchListeners.length\n      : dispatchListeners\n      ? 1\n      : 0;\n\n    const instancesIsArr = Array.isArray(dispatchInstances);\n    const instancesLen = instancesIsArr\n      ? dispatchInstances.length\n      : dispatchInstances\n      ? 1\n      : 0;\n\n    if (instancesIsArr !== listenersIsArr || instancesLen !== listenersLen) {\n      console.error('EventPluginUtils: Invalid `event`.');\n    }\n  };\n}\n\n/**\n * Dispatch the event to the listener.\n * @param {SyntheticEvent} event SyntheticEvent to handle\n * @param {function} listener Application-level callback\n * @param {*} inst Internal component instance\n */\nexport function executeDispatch(event, listener, inst) {\n  const type = event.type || 'unknown-event';\n  event.currentTarget = getNodeFromInstance(inst);\n  invokeGuardedCallbackAndCatchFirstError(type, listener, undefined, event);\n  event.currentTarget = null;\n}\n\n/**\n * Standard/simple iteration through an event's collected dispatches.\n */\nexport function executeDispatchesInOrder(event) {\n  const dispatchListeners = event._dispatchListeners;\n  const dispatchInstances = event._dispatchInstances;\n  if (__DEV__) {\n    validateEventDispatches(event);\n  }\n  if (Array.isArray(dispatchListeners)) {\n    for (let i = 0; i < dispatchListeners.length; i++) {\n      if (event.isPropagationStopped()) {\n        break;\n      }\n      // Listeners and Instances are two parallel arrays that are always in sync.\n      executeDispatch(event, dispatchListeners[i], dispatchInstances[i]);\n    }\n  } else if (dispatchListeners) {\n    executeDispatch(event, dispatchListeners, dispatchInstances);\n  }\n  event._dispatchListeners = null;\n  event._dispatchInstances = null;\n}\n\n/**\n * Standard/simple iteration through an event's collected dispatches, but stops\n * at the first dispatch execution returning true, and returns that id.\n *\n * @return {?string} id of the first dispatch execution who's listener returns\n * true, or null if no listener returned true.\n */\nfunction executeDispatchesInOrderStopAtTrueImpl(event) {\n  const dispatchListeners = event._dispatchListeners;\n  const dispatchInstances = event._dispatchInstances;\n  if (__DEV__) {\n    validateEventDispatches(event);\n  }\n  if (Array.isArray(dispatchListeners)) {\n    for (let i = 0; i < dispatchListeners.length; i++) {\n      if (event.isPropagationStopped()) {\n        break;\n      }\n      // Listeners and Instances are two parallel arrays that are always in sync.\n      if (dispatchListeners[i](event, dispatchInstances[i])) {\n        return dispatchInstances[i];\n      }\n    }\n  } else if (dispatchListeners) {\n    if (dispatchListeners(event, dispatchInstances)) {\n      return dispatchInstances;\n    }\n  }\n  return null;\n}\n\n/**\n * @see executeDispatchesInOrderStopAtTrueImpl\n */\nexport function executeDispatchesInOrderStopAtTrue(event) {\n  const ret = executeDispatchesInOrderStopAtTrueImpl(event);\n  event._dispatchInstances = null;\n  event._dispatchListeners = null;\n  return ret;\n}\n\n/**\n * Execution of a \"direct\" dispatch - there must be at most one dispatch\n * accumulated on the event or it is considered an error. It doesn't really make\n * sense for an event with multiple dispatches (bubbled) to keep track of the\n * return values at each dispatch execution, but it does tend to make sense when\n * dealing with \"direct\" dispatches.\n *\n * @return {*} The return value of executing the single dispatch.\n */\nexport function executeDirectDispatch(event) {\n  if (__DEV__) {\n    validateEventDispatches(event);\n  }\n  const dispatchListener = event._dispatchListeners;\n  const dispatchInstance = event._dispatchInstances;\n  invariant(\n    !Array.isArray(dispatchListener),\n    'executeDirectDispatch(...): Invalid `event`.',\n  );\n  event.currentTarget = dispatchListener\n    ? getNodeFromInstance(dispatchInstance)\n    : null;\n  const res = dispatchListener ? dispatchListener(event) : null;\n  event.currentTarget = null;\n  event._dispatchListeners = null;\n  event._dispatchInstances = null;\n  return res;\n}\n\n/**\n * @param {SyntheticEvent} event\n * @return {boolean} True iff number of dispatches accumulated is greater than 0.\n */\nexport function hasDispatches(event) {\n  return !!event._dispatchListeners;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/* eslint valid-typeof: 0 */\n\nimport invariant from 'shared/invariant';\n\nconst EVENT_POOL_SIZE = 10;\n\n/**\n * @interface Event\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\nconst EventInterface = {\n  type: null,\n  target: null,\n  // currentTarget is set when dispatching; no use in copying it here\n  currentTarget: function() {\n    return null;\n  },\n  eventPhase: null,\n  bubbles: null,\n  cancelable: null,\n  timeStamp: function(event) {\n    return event.timeStamp || Date.now();\n  },\n  defaultPrevented: null,\n  isTrusted: null,\n};\n\nfunction functionThatReturnsTrue() {\n  return true;\n}\n\nfunction functionThatReturnsFalse() {\n  return false;\n}\n\n/**\n * Synthetic events are dispatched by event plugins, typically in response to a\n * top-level event delegation handler.\n *\n * These systems should generally use pooling to reduce the frequency of garbage\n * collection. The system should check `isPersistent` to determine whether the\n * event should be released into the pool after being dispatched. Users that\n * need a persisted event should invoke `persist`.\n *\n * Synthetic events (and subclasses) implement the DOM Level 3 Events API by\n * normalizing browser quirks. Subclasses do not necessarily have to implement a\n * DOM interface; custom application-specific events can also subclass this.\n *\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {*} targetInst Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @param {DOMEventTarget} nativeEventTarget Target node.\n */\nfunction SyntheticEvent(\n  dispatchConfig,\n  targetInst,\n  nativeEvent,\n  nativeEventTarget,\n) {\n  if (__DEV__) {\n    // these have a getter/setter for warnings\n    delete this.nativeEvent;\n    delete this.preventDefault;\n    delete this.stopPropagation;\n    delete this.isDefaultPrevented;\n    delete this.isPropagationStopped;\n  }\n\n  this.dispatchConfig = dispatchConfig;\n  this._targetInst = targetInst;\n  this.nativeEvent = nativeEvent;\n  this._dispatchListeners = null;\n  this._dispatchInstances = null;\n\n  const Interface = this.constructor.Interface;\n  for (const propName in Interface) {\n    if (!Interface.hasOwnProperty(propName)) {\n      continue;\n    }\n    if (__DEV__) {\n      delete this[propName]; // this has a getter/setter for warnings\n    }\n    const normalize = Interface[propName];\n    if (normalize) {\n      this[propName] = normalize(nativeEvent);\n    } else {\n      if (propName === 'target') {\n        this.target = nativeEventTarget;\n      } else {\n        this[propName] = nativeEvent[propName];\n      }\n    }\n  }\n\n  const defaultPrevented =\n    nativeEvent.defaultPrevented != null\n      ? nativeEvent.defaultPrevented\n      : nativeEvent.returnValue === false;\n  if (defaultPrevented) {\n    this.isDefaultPrevented = functionThatReturnsTrue;\n  } else {\n    this.isDefaultPrevented = functionThatReturnsFalse;\n  }\n  this.isPropagationStopped = functionThatReturnsFalse;\n  return this;\n}\n\nObject.assign(SyntheticEvent.prototype, {\n  preventDefault: function() {\n    this.defaultPrevented = true;\n    const event = this.nativeEvent;\n    if (!event) {\n      return;\n    }\n\n    if (event.preventDefault) {\n      event.preventDefault();\n    } else if (typeof event.returnValue !== 'unknown') {\n      event.returnValue = false;\n    }\n    this.isDefaultPrevented = functionThatReturnsTrue;\n  },\n\n  stopPropagation: function() {\n    const event = this.nativeEvent;\n    if (!event) {\n      return;\n    }\n\n    if (event.stopPropagation) {\n      event.stopPropagation();\n    } else if (typeof event.cancelBubble !== 'unknown') {\n      // The ChangeEventPlugin registers a \"propertychange\" event for\n      // IE. This event does not support bubbling or cancelling, and\n      // any references to cancelBubble throw \"Member not found\".  A\n      // typeof check of \"unknown\" circumvents this issue (and is also\n      // IE specific).\n      event.cancelBubble = true;\n    }\n\n    this.isPropagationStopped = functionThatReturnsTrue;\n  },\n\n  /**\n   * We release all dispatched `SyntheticEvent`s after each event loop, adding\n   * them back into the pool. This allows a way to hold onto a reference that\n   * won't be added back into the pool.\n   */\n  persist: function() {\n    this.isPersistent = functionThatReturnsTrue;\n  },\n\n  /**\n   * Checks if this event should be released back into the pool.\n   *\n   * @return {boolean} True if this should not be released, false otherwise.\n   */\n  isPersistent: functionThatReturnsFalse,\n\n  /**\n   * `PooledClass` looks for `destructor` on each instance it releases.\n   */\n  destructor: function() {\n    const Interface = this.constructor.Interface;\n    for (const propName in Interface) {\n      if (__DEV__) {\n        Object.defineProperty(\n          this,\n          propName,\n          getPooledWarningPropertyDefinition(propName, Interface[propName]),\n        );\n      } else {\n        this[propName] = null;\n      }\n    }\n    this.dispatchConfig = null;\n    this._targetInst = null;\n    this.nativeEvent = null;\n    this.isDefaultPrevented = functionThatReturnsFalse;\n    this.isPropagationStopped = functionThatReturnsFalse;\n    this._dispatchListeners = null;\n    this._dispatchInstances = null;\n    if (__DEV__) {\n      Object.defineProperty(\n        this,\n        'nativeEvent',\n        getPooledWarningPropertyDefinition('nativeEvent', null),\n      );\n      Object.defineProperty(\n        this,\n        'isDefaultPrevented',\n        getPooledWarningPropertyDefinition(\n          'isDefaultPrevented',\n          functionThatReturnsFalse,\n        ),\n      );\n      Object.defineProperty(\n        this,\n        'isPropagationStopped',\n        getPooledWarningPropertyDefinition(\n          'isPropagationStopped',\n          functionThatReturnsFalse,\n        ),\n      );\n      Object.defineProperty(\n        this,\n        'preventDefault',\n        getPooledWarningPropertyDefinition('preventDefault', () => {}),\n      );\n      Object.defineProperty(\n        this,\n        'stopPropagation',\n        getPooledWarningPropertyDefinition('stopPropagation', () => {}),\n      );\n    }\n  },\n});\n\nSyntheticEvent.Interface = EventInterface;\n\n/**\n * Helper to reduce boilerplate when creating subclasses.\n */\nSyntheticEvent.extend = function(Interface) {\n  const Super = this;\n\n  const E = function() {};\n  E.prototype = Super.prototype;\n  const prototype = new E();\n\n  function Class() {\n    return Super.apply(this, arguments);\n  }\n  Object.assign(prototype, Class.prototype);\n  Class.prototype = prototype;\n  Class.prototype.constructor = Class;\n\n  Class.Interface = Object.assign({}, Super.Interface, Interface);\n  Class.extend = Super.extend;\n  addEventPoolingTo(Class);\n\n  return Class;\n};\n\naddEventPoolingTo(SyntheticEvent);\n\n/**\n * Helper to nullify syntheticEvent instance properties when destructing\n *\n * @param {String} propName\n * @param {?object} getVal\n * @return {object} defineProperty object\n */\nfunction getPooledWarningPropertyDefinition(propName, getVal) {\n  function set(val) {\n    const action = isFunction ? 'setting the method' : 'setting the property';\n    warn(action, 'This is effectively a no-op');\n    return val;\n  }\n\n  function get() {\n    const action = isFunction\n      ? 'accessing the method'\n      : 'accessing the property';\n    const result = isFunction\n      ? 'This is a no-op function'\n      : 'This is set to null';\n    warn(action, result);\n    return getVal;\n  }\n\n  function warn(action, result) {\n    if (__DEV__) {\n      console.error(\n        \"This synthetic event is reused for performance reasons. If you're seeing this, \" +\n          \"you're %s `%s` on a released/nullified synthetic event. %s. \" +\n          'If you must keep the original synthetic event around, use event.persist(). ' +\n          'See https://reactjs.org/link/event-pooling for more information.',\n        action,\n        propName,\n        result,\n      );\n    }\n  }\n  const isFunction = typeof getVal === 'function';\n  return {\n    configurable: true,\n    set: set,\n    get: get,\n  };\n}\n\nfunction createOrGetPooledEvent(\n  dispatchConfig,\n  targetInst,\n  nativeEvent,\n  nativeInst,\n) {\n  const EventConstructor = this;\n  if (EventConstructor.eventPool.length) {\n    const instance = EventConstructor.eventPool.pop();\n    EventConstructor.call(\n      instance,\n      dispatchConfig,\n      targetInst,\n      nativeEvent,\n      nativeInst,\n    );\n    return instance;\n  }\n  return new EventConstructor(\n    dispatchConfig,\n    targetInst,\n    nativeEvent,\n    nativeInst,\n  );\n}\n\nfunction releasePooledEvent(event) {\n  const EventConstructor = this;\n  invariant(\n    event instanceof EventConstructor,\n    'Trying to release an event instance into a pool of a different type.',\n  );\n  event.destructor();\n  if (EventConstructor.eventPool.length < EVENT_POOL_SIZE) {\n    EventConstructor.eventPool.push(event);\n  }\n}\n\nfunction addEventPoolingTo(EventConstructor) {\n  EventConstructor.getPooled = createOrGetPooledEvent;\n  EventConstructor.eventPool = [];\n  EventConstructor.release = releasePooledEvent;\n}\n\nexport default SyntheticEvent;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport SyntheticEvent from './SyntheticEvent';\n\n/**\n * `touchHistory` isn't actually on the native event, but putting it in the\n * interface will ensure that it is cleaned up when pooled/destroyed. The\n * `ResponderEventPlugin` will populate it appropriately.\n */\nconst ResponderSyntheticEvent = SyntheticEvent.extend({\n  touchHistory: function(nativeEvent) {\n    return null; // Actually doesn't even look at the native event.\n  },\n});\n\nexport default ResponderSyntheticEvent;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nexport const TOP_TOUCH_START = 'topTouchStart';\nexport const TOP_TOUCH_MOVE = 'topTouchMove';\nexport const TOP_TOUCH_END = 'topTouchEnd';\nexport const TOP_TOUCH_CANCEL = 'topTouchCancel';\nexport const TOP_SCROLL = 'topScroll';\nexport const TOP_SELECTION_CHANGE = 'topSelectionChange';\n\nexport function isStartish(topLevelType: mixed): boolean {\n  return topLevelType === TOP_TOUCH_START;\n}\n\nexport function isMoveish(topLevelType: mixed): boolean {\n  return topLevelType === TOP_TOUCH_MOVE;\n}\n\nexport function isEndish(topLevelType: mixed): boolean {\n  return topLevelType === TOP_TOUCH_END || topLevelType === TOP_TOUCH_CANCEL;\n}\n\nexport const startDependencies = [TOP_TOUCH_START];\nexport const moveDependencies = [TOP_TOUCH_MOVE];\nexport const endDependencies = [TOP_TOUCH_CANCEL, TOP_TOUCH_END];\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport invariant from 'shared/invariant';\n\nimport {isStartish, isMoveish, isEndish} from './ResponderTopLevelEventTypes';\n\n/**\n * Tracks the position and time of each active touch by `touch.identifier`. We\n * should typically only see IDs in the range of 1-20 because IDs get recycled\n * when touches end and start again.\n */\ntype TouchRecord = {|\n  touchActive: boolean,\n  startPageX: number,\n  startPageY: number,\n  startTimeStamp: number,\n  currentPageX: number,\n  currentPageY: number,\n  currentTimeStamp: number,\n  previousPageX: number,\n  previousPageY: number,\n  previousTimeStamp: number,\n|};\n\nconst MAX_TOUCH_BANK = 20;\nconst touchBank: Array<TouchRecord> = [];\nconst touchHistory = {\n  touchBank,\n  numberActiveTouches: 0,\n  // If there is only one active touch, we remember its location. This prevents\n  // us having to loop through all of the touches all the time in the most\n  // common case.\n  indexOfSingleActiveTouch: -1,\n  mostRecentTimeStamp: 0,\n};\n\ntype Touch = {\n  identifier: ?number,\n  pageX: number,\n  pageY: number,\n  timestamp: number,\n  ...\n};\ntype TouchEvent = {\n  changedTouches: Array<Touch>,\n  touches: Array<Touch>,\n  ...\n};\n\nfunction timestampForTouch(touch: Touch): number {\n  // The legacy internal implementation provides \"timeStamp\", which has been\n  // renamed to \"timestamp\". Let both work for now while we iron it out\n  // TODO (evv): rename timeStamp to timestamp in internal code\n  return (touch: any).timeStamp || touch.timestamp;\n}\n\n/**\n * TODO: Instead of making gestures recompute filtered velocity, we could\n * include a built in velocity computation that can be reused globally.\n */\nfunction createTouchRecord(touch: Touch): TouchRecord {\n  return {\n    touchActive: true,\n    startPageX: touch.pageX,\n    startPageY: touch.pageY,\n    startTimeStamp: timestampForTouch(touch),\n    currentPageX: touch.pageX,\n    currentPageY: touch.pageY,\n    currentTimeStamp: timestampForTouch(touch),\n    previousPageX: touch.pageX,\n    previousPageY: touch.pageY,\n    previousTimeStamp: timestampForTouch(touch),\n  };\n}\n\nfunction resetTouchRecord(touchRecord: TouchRecord, touch: Touch): void {\n  touchRecord.touchActive = true;\n  touchRecord.startPageX = touch.pageX;\n  touchRecord.startPageY = touch.pageY;\n  touchRecord.startTimeStamp = timestampForTouch(touch);\n  touchRecord.currentPageX = touch.pageX;\n  touchRecord.currentPageY = touch.pageY;\n  touchRecord.currentTimeStamp = timestampForTouch(touch);\n  touchRecord.previousPageX = touch.pageX;\n  touchRecord.previousPageY = touch.pageY;\n  touchRecord.previousTimeStamp = timestampForTouch(touch);\n}\n\nfunction getTouchIdentifier({identifier}: Touch): number {\n  invariant(identifier != null, 'Touch object is missing identifier.');\n  if (__DEV__) {\n    if (identifier > MAX_TOUCH_BANK) {\n      console.error(\n        'Touch identifier %s is greater than maximum supported %s which causes ' +\n          'performance issues backfilling array locations for all of the indices.',\n        identifier,\n        MAX_TOUCH_BANK,\n      );\n    }\n  }\n  return identifier;\n}\n\nfunction recordTouchStart(touch: Touch): void {\n  const identifier = getTouchIdentifier(touch);\n  const touchRecord = touchBank[identifier];\n  if (touchRecord) {\n    resetTouchRecord(touchRecord, touch);\n  } else {\n    touchBank[identifier] = createTouchRecord(touch);\n  }\n  touchHistory.mostRecentTimeStamp = timestampForTouch(touch);\n}\n\nfunction recordTouchMove(touch: Touch): void {\n  const touchRecord = touchBank[getTouchIdentifier(touch)];\n  if (touchRecord) {\n    touchRecord.touchActive = true;\n    touchRecord.previousPageX = touchRecord.currentPageX;\n    touchRecord.previousPageY = touchRecord.currentPageY;\n    touchRecord.previousTimeStamp = touchRecord.currentTimeStamp;\n    touchRecord.currentPageX = touch.pageX;\n    touchRecord.currentPageY = touch.pageY;\n    touchRecord.currentTimeStamp = timestampForTouch(touch);\n    touchHistory.mostRecentTimeStamp = timestampForTouch(touch);\n  } else {\n    if (__DEV__) {\n      console.warn(\n        'Cannot record touch move without a touch start.\\n' +\n          'Touch Move: %s\\n' +\n          'Touch Bank: %s',\n        printTouch(touch),\n        printTouchBank(),\n      );\n    }\n  }\n}\n\nfunction recordTouchEnd(touch: Touch): void {\n  const touchRecord = touchBank[getTouchIdentifier(touch)];\n  if (touchRecord) {\n    touchRecord.touchActive = false;\n    touchRecord.previousPageX = touchRecord.currentPageX;\n    touchRecord.previousPageY = touchRecord.currentPageY;\n    touchRecord.previousTimeStamp = touchRecord.currentTimeStamp;\n    touchRecord.currentPageX = touch.pageX;\n    touchRecord.currentPageY = touch.pageY;\n    touchRecord.currentTimeStamp = timestampForTouch(touch);\n    touchHistory.mostRecentTimeStamp = timestampForTouch(touch);\n  } else {\n    if (__DEV__) {\n      console.warn(\n        'Cannot record touch end without a touch start.\\n' +\n          'Touch End: %s\\n' +\n          'Touch Bank: %s',\n        printTouch(touch),\n        printTouchBank(),\n      );\n    }\n  }\n}\n\nfunction printTouch(touch: Touch): string {\n  return JSON.stringify({\n    identifier: touch.identifier,\n    pageX: touch.pageX,\n    pageY: touch.pageY,\n    timestamp: timestampForTouch(touch),\n  });\n}\n\nfunction printTouchBank(): string {\n  let printed = JSON.stringify(touchBank.slice(0, MAX_TOUCH_BANK));\n  if (touchBank.length > MAX_TOUCH_BANK) {\n    printed += ' (original size: ' + touchBank.length + ')';\n  }\n  return printed;\n}\n\nconst ResponderTouchHistoryStore = {\n  recordTouchTrack(topLevelType: string, nativeEvent: TouchEvent): void {\n    if (isMoveish(topLevelType)) {\n      nativeEvent.changedTouches.forEach(recordTouchMove);\n    } else if (isStartish(topLevelType)) {\n      nativeEvent.changedTouches.forEach(recordTouchStart);\n      touchHistory.numberActiveTouches = nativeEvent.touches.length;\n      if (touchHistory.numberActiveTouches === 1) {\n        touchHistory.indexOfSingleActiveTouch =\n          nativeEvent.touches[0].identifier;\n      }\n    } else if (isEndish(topLevelType)) {\n      nativeEvent.changedTouches.forEach(recordTouchEnd);\n      touchHistory.numberActiveTouches = nativeEvent.touches.length;\n      if (touchHistory.numberActiveTouches === 1) {\n        for (let i = 0; i < touchBank.length; i++) {\n          const touchTrackToCheck = touchBank[i];\n          if (touchTrackToCheck != null && touchTrackToCheck.touchActive) {\n            touchHistory.indexOfSingleActiveTouch = i;\n            break;\n          }\n        }\n        if (__DEV__) {\n          const activeRecord = touchBank[touchHistory.indexOfSingleActiveTouch];\n          if (activeRecord == null || !activeRecord.touchActive) {\n            console.error('Cannot find single active touch.');\n          }\n        }\n      }\n    }\n  },\n\n  touchHistory,\n};\n\nexport default ResponderTouchHistoryStore;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport invariant from 'shared/invariant';\n\n/**\n * Accumulates items that must not be null or undefined.\n *\n * This is used to conserve memory by avoiding array allocations.\n *\n * @return {*|array<*>} An accumulation of items.\n */\nfunction accumulate<T>(\n  current: ?(T | Array<T>),\n  next: T | Array<T>,\n): T | Array<T> {\n  invariant(\n    next != null,\n    'accumulate(...): Accumulated items must not be null or undefined.',\n  );\n\n  if (current == null) {\n    return next;\n  }\n\n  // Both are not empty. Warning: Never call x.concat(y) when you are not\n  // certain that x is an Array (x could be a string with concat method).\n  if (Array.isArray(current)) {\n    return current.concat(next);\n  }\n\n  if (Array.isArray(next)) {\n    return [current].concat(next);\n  }\n\n  return [current, next];\n}\n\nexport default accumulate;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport invariant from 'shared/invariant';\n\n/**\n * Accumulates items that must not be null or undefined into the first one. This\n * is used to conserve memory by avoiding array allocations, and thus sacrifices\n * API cleanness. Since `current` can be null before being passed in and not\n * null after this function, make sure to assign it back to `current`:\n *\n * `a = accumulateInto(a, b);`\n *\n * This API should be sparingly used. Try `accumulate` for something cleaner.\n *\n * @return {*|array<*>} An accumulation of items.\n */\n\nfunction accumulateInto<T>(\n  current: ?(Array<T> | T),\n  next: T | Array<T>,\n): T | Array<T> {\n  invariant(\n    next != null,\n    'accumulateInto(...): Accumulated items must not be null or undefined.',\n  );\n\n  if (current == null) {\n    return next;\n  }\n\n  // Both are not empty. Warning: Never call x.concat(y) when you are not\n  // certain that x is an Array (x could be a string with concat method).\n  if (Array.isArray(current)) {\n    if (Array.isArray(next)) {\n      current.push.apply(current, next);\n      return current;\n    }\n    current.push(next);\n    return current;\n  }\n\n  if (Array.isArray(next)) {\n    // A bit too dangerous to mutate `next`.\n    return [current].concat(next);\n  }\n\n  return [current, next];\n}\n\nexport default accumulateInto;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\n/**\n * @param {array} arr an \"accumulation\" of items which is either an Array or\n * a single item. Useful when paired with the `accumulate` module. This is a\n * simple utility that allows us to reason about a collection of items, but\n * handling the case when there is exactly one item (and we do not need to\n * allocate an array).\n * @param {function} cb Callback invoked with each element or a collection.\n * @param {?} [scope] Scope used as `this` in a callback.\n */\nfunction forEachAccumulated<T>(\n  arr: ?(Array<T> | T),\n  cb: (elem: T) => void,\n  scope: ?any,\n) {\n  if (Array.isArray(arr)) {\n    arr.forEach(cb, scope);\n  } else if (arr) {\n    cb.call(scope, arr);\n  }\n}\n\nexport default forEachAccumulated;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nexport type WorkTag =\n  | 0\n  | 1\n  | 2\n  | 3\n  | 4\n  | 5\n  | 6\n  | 7\n  | 8\n  | 9\n  | 10\n  | 11\n  | 12\n  | 13\n  | 14\n  | 15\n  | 16\n  | 17\n  | 18\n  | 19\n  | 20\n  | 21\n  | 22\n  | 23\n  | 24;\n\nexport const FunctionComponent = 0;\nexport const ClassComponent = 1;\nexport const IndeterminateComponent = 2; // Before we know whether it is function or class\nexport const HostRoot = 3; // Root of a host tree. Could be nested inside another node.\nexport const HostPortal = 4; // A subtree. Could be an entry point to a different renderer.\nexport const HostComponent = 5;\nexport const HostText = 6;\nexport const Fragment = 7;\nexport const Mode = 8;\nexport const ContextConsumer = 9;\nexport const ContextProvider = 10;\nexport const ForwardRef = 11;\nexport const Profiler = 12;\nexport const SuspenseComponent = 13;\nexport const MemoComponent = 14;\nexport const SimpleMemoComponent = 15;\nexport const LazyComponent = 16;\nexport const IncompleteClassComponent = 17;\nexport const DehydratedFragment = 18;\nexport const SuspenseListComponent = 19;\nexport const FundamentalComponent = 20;\nexport const ScopeComponent = 21;\nexport const Block = 22;\nexport const OffscreenComponent = 23;\nexport const LegacyHiddenComponent = 24;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {\n  executeDirectDispatch,\n  hasDispatches,\n  executeDispatchesInOrderStopAtTrue,\n  getInstanceFromNode,\n  getFiberCurrentPropsFromNode,\n} from './EventPluginUtils';\nimport ResponderSyntheticEvent from './ResponderSyntheticEvent';\nimport ResponderTouchHistoryStore from './ResponderTouchHistoryStore';\nimport accumulate from './accumulate';\nimport {\n  TOP_SCROLL,\n  TOP_SELECTION_CHANGE,\n  TOP_TOUCH_CANCEL,\n  isStartish,\n  isMoveish,\n  isEndish,\n  startDependencies,\n  moveDependencies,\n  endDependencies,\n} from './ResponderTopLevelEventTypes';\nimport accumulateInto from './accumulateInto';\nimport forEachAccumulated from './forEachAccumulated';\nimport {HostComponent} from 'react-reconciler/src/ReactWorkTags';\nimport invariant from 'shared/invariant';\n\n/**\n * Instance of element that should respond to touch/move types of interactions,\n * as indicated explicitly by relevant callbacks.\n */\nlet responderInst = null;\n\n/**\n * Count of current touches. A textInput should become responder iff the\n * selection changes while there is a touch on the screen.\n */\nlet trackedTouchCount = 0;\n\nconst changeResponder = function(nextResponderInst, blockHostResponder) {\n  const oldResponderInst = responderInst;\n  responderInst = nextResponderInst;\n  if (ResponderEventPlugin.GlobalResponderHandler !== null) {\n    ResponderEventPlugin.GlobalResponderHandler.onChange(\n      oldResponderInst,\n      nextResponderInst,\n      blockHostResponder,\n    );\n  }\n};\n\nconst eventTypes = {\n  /**\n   * On a `touchStart`/`mouseDown`, is it desired that this element become the\n   * responder?\n   */\n  startShouldSetResponder: {\n    phasedRegistrationNames: {\n      bubbled: 'onStartShouldSetResponder',\n      captured: 'onStartShouldSetResponderCapture',\n    },\n    dependencies: startDependencies,\n  },\n\n  /**\n   * On a `scroll`, is it desired that this element become the responder? This\n   * is usually not needed, but should be used to retroactively infer that a\n   * `touchStart` had occurred during momentum scroll. During a momentum scroll,\n   * a touch start will be immediately followed by a scroll event if the view is\n   * currently scrolling.\n   *\n   * TODO: This shouldn't bubble.\n   */\n  scrollShouldSetResponder: {\n    phasedRegistrationNames: {\n      bubbled: 'onScrollShouldSetResponder',\n      captured: 'onScrollShouldSetResponderCapture',\n    },\n    dependencies: [TOP_SCROLL],\n  },\n\n  /**\n   * On text selection change, should this element become the responder? This\n   * is needed for text inputs or other views with native selection, so the\n   * JS view can claim the responder.\n   *\n   * TODO: This shouldn't bubble.\n   */\n  selectionChangeShouldSetResponder: {\n    phasedRegistrationNames: {\n      bubbled: 'onSelectionChangeShouldSetResponder',\n      captured: 'onSelectionChangeShouldSetResponderCapture',\n    },\n    dependencies: [TOP_SELECTION_CHANGE],\n  },\n\n  /**\n   * On a `touchMove`/`mouseMove`, is it desired that this element become the\n   * responder?\n   */\n  moveShouldSetResponder: {\n    phasedRegistrationNames: {\n      bubbled: 'onMoveShouldSetResponder',\n      captured: 'onMoveShouldSetResponderCapture',\n    },\n    dependencies: moveDependencies,\n  },\n\n  /**\n   * Direct responder events dispatched directly to responder. Do not bubble.\n   */\n  responderStart: {\n    registrationName: 'onResponderStart',\n    dependencies: startDependencies,\n  },\n  responderMove: {\n    registrationName: 'onResponderMove',\n    dependencies: moveDependencies,\n  },\n  responderEnd: {\n    registrationName: 'onResponderEnd',\n    dependencies: endDependencies,\n  },\n  responderRelease: {\n    registrationName: 'onResponderRelease',\n    dependencies: endDependencies,\n  },\n  responderTerminationRequest: {\n    registrationName: 'onResponderTerminationRequest',\n    dependencies: [],\n  },\n  responderGrant: {\n    registrationName: 'onResponderGrant',\n    dependencies: [],\n  },\n  responderReject: {\n    registrationName: 'onResponderReject',\n    dependencies: [],\n  },\n  responderTerminate: {\n    registrationName: 'onResponderTerminate',\n    dependencies: [],\n  },\n};\n\n// Start of inline: the below functions were inlined from\n// EventPropagator.js, as they deviated from ReactDOM's newer\n// implementations.\n\nfunction getParent(inst) {\n  do {\n    inst = inst.return;\n    // TODO: If this is a HostRoot we might want to bail out.\n    // That is depending on if we want nested subtrees (layers) to bubble\n    // events to their parent. We could also go through parentNode on the\n    // host node but that wouldn't work for React Native and doesn't let us\n    // do the portal feature.\n  } while (inst && inst.tag !== HostComponent);\n  if (inst) {\n    return inst;\n  }\n  return null;\n}\n\n/**\n * Return the lowest common ancestor of A and B, or null if they are in\n * different trees.\n */\nexport function getLowestCommonAncestor(instA, instB) {\n  let depthA = 0;\n  for (let tempA = instA; tempA; tempA = getParent(tempA)) {\n    depthA++;\n  }\n  let depthB = 0;\n  for (let tempB = instB; tempB; tempB = getParent(tempB)) {\n    depthB++;\n  }\n\n  // If A is deeper, crawl up.\n  while (depthA - depthB > 0) {\n    instA = getParent(instA);\n    depthA--;\n  }\n\n  // If B is deeper, crawl up.\n  while (depthB - depthA > 0) {\n    instB = getParent(instB);\n    depthB--;\n  }\n\n  // Walk in lockstep until we find a match.\n  let depth = depthA;\n  while (depth--) {\n    if (instA === instB || instA === instB.alternate) {\n      return instA;\n    }\n    instA = getParent(instA);\n    instB = getParent(instB);\n  }\n  return null;\n}\n\n/**\n * Return if A is an ancestor of B.\n */\nfunction isAncestor(instA, instB) {\n  while (instB) {\n    if (instA === instB || instA === instB.alternate) {\n      return true;\n    }\n    instB = getParent(instB);\n  }\n  return false;\n}\n\n/**\n * Simulates the traversal of a two-phase, capture/bubble event dispatch.\n */\nfunction traverseTwoPhase(inst, fn, arg) {\n  const path = [];\n  while (inst) {\n    path.push(inst);\n    inst = getParent(inst);\n  }\n  let i;\n  for (i = path.length; i-- > 0; ) {\n    fn(path[i], 'captured', arg);\n  }\n  for (i = 0; i < path.length; i++) {\n    fn(path[i], 'bubbled', arg);\n  }\n}\n\nfunction getListener(inst, registrationName) {\n  const stateNode = inst.stateNode;\n  if (stateNode === null) {\n    // Work in progress (ex: onload events in incremental mode).\n    return null;\n  }\n  const props = getFiberCurrentPropsFromNode(stateNode);\n  if (props === null) {\n    // Work in progress.\n    return null;\n  }\n  const listener = props[registrationName];\n  invariant(\n    !listener || typeof listener === 'function',\n    'Expected `%s` listener to be a function, instead got a value of `%s` type.',\n    registrationName,\n    typeof listener,\n  );\n  return listener;\n}\n\nfunction listenerAtPhase(inst, event, propagationPhase: PropagationPhases) {\n  const registrationName =\n    event.dispatchConfig.phasedRegistrationNames[propagationPhase];\n  return getListener(inst, registrationName);\n}\n\nfunction accumulateDirectionalDispatches(inst, phase, event) {\n  if (__DEV__) {\n    if (!inst) {\n      console.error('Dispatching inst must not be null');\n    }\n  }\n  const listener = listenerAtPhase(inst, event, phase);\n  if (listener) {\n    event._dispatchListeners = accumulateInto(\n      event._dispatchListeners,\n      listener,\n    );\n    event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);\n  }\n}\n\n/**\n * Accumulates without regard to direction, does not look for phased\n * registration names. Same as `accumulateDirectDispatchesSingle` but without\n * requiring that the `dispatchMarker` be the same as the dispatched ID.\n */\nfunction accumulateDispatches(\n  inst: Object,\n  ignoredDirection: ?boolean,\n  event: Object,\n): void {\n  if (inst && event && event.dispatchConfig.registrationName) {\n    const registrationName = event.dispatchConfig.registrationName;\n    const listener = getListener(inst, registrationName);\n    if (listener) {\n      event._dispatchListeners = accumulateInto(\n        event._dispatchListeners,\n        listener,\n      );\n      event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);\n    }\n  }\n}\n\n/**\n * Accumulates dispatches on an `SyntheticEvent`, but only for the\n * `dispatchMarker`.\n * @param {SyntheticEvent} event\n */\nfunction accumulateDirectDispatchesSingle(event: Object) {\n  if (event && event.dispatchConfig.registrationName) {\n    accumulateDispatches(event._targetInst, null, event);\n  }\n}\n\nfunction accumulateDirectDispatches(events: ?(Array<Object> | Object)) {\n  forEachAccumulated(events, accumulateDirectDispatchesSingle);\n}\n\nfunction accumulateTwoPhaseDispatchesSingleSkipTarget(event) {\n  if (event && event.dispatchConfig.phasedRegistrationNames) {\n    const targetInst = event._targetInst;\n    const parentInst = targetInst ? getParent(targetInst) : null;\n    traverseTwoPhase(parentInst, accumulateDirectionalDispatches, event);\n  }\n}\n\nfunction accumulateTwoPhaseDispatchesSkipTarget(events) {\n  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingleSkipTarget);\n}\n\nfunction accumulateTwoPhaseDispatchesSingle(event) {\n  if (event && event.dispatchConfig.phasedRegistrationNames) {\n    traverseTwoPhase(event._targetInst, accumulateDirectionalDispatches, event);\n  }\n}\n\nfunction accumulateTwoPhaseDispatches(events) {\n  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingle);\n}\n// End of inline\n\n/**\n *\n * Responder System:\n * ----------------\n *\n * - A global, solitary \"interaction lock\" on a view.\n * - If a node becomes the responder, it should convey visual feedback\n *   immediately to indicate so, either by highlighting or moving accordingly.\n * - To be the responder means, that touches are exclusively important to that\n *   responder view, and no other view.\n * - While touches are still occurring, the responder lock can be transferred to\n *   a new view, but only to increasingly \"higher\" views (meaning ancestors of\n *   the current responder).\n *\n * Responder being granted:\n * ------------------------\n *\n * - Touch starts, moves, and scrolls can cause an ID to become the responder.\n * - We capture/bubble `startShouldSetResponder`/`moveShouldSetResponder` to\n *   the \"appropriate place\".\n * - If nothing is currently the responder, the \"appropriate place\" is the\n *   initiating event's `targetID`.\n * - If something *is* already the responder, the \"appropriate place\" is the\n *   first common ancestor of the event target and the current `responderInst`.\n * - Some negotiation happens: See the timing diagram below.\n * - Scrolled views automatically become responder. The reasoning is that a\n *   platform scroll view that isn't built on top of the responder system has\n *   began scrolling, and the active responder must now be notified that the\n *   interaction is no longer locked to it - the system has taken over.\n *\n * - Responder being released:\n *   As soon as no more touches that *started* inside of descendants of the\n *   *current* responderInst, an `onResponderRelease` event is dispatched to the\n *   current responder, and the responder lock is released.\n *\n * TODO:\n * - on \"end\", a callback hook for `onResponderEndShouldRemainResponder` that\n *   determines if the responder lock should remain.\n * - If a view shouldn't \"remain\" the responder, any active touches should by\n *   default be considered \"dead\" and do not influence future negotiations or\n *   bubble paths. It should be as if those touches do not exist.\n * -- For multitouch: Usually a translate-z will choose to \"remain\" responder\n *  after one out of many touches ended. For translate-y, usually the view\n *  doesn't wish to \"remain\" responder after one of many touches end.\n * - Consider building this on top of a `stopPropagation` model similar to\n *   `W3C` events.\n * - Ensure that `onResponderTerminate` is called on touch cancels, whether or\n *   not `onResponderTerminationRequest` returns `true` or `false`.\n *\n */\n\n/*                                             Negotiation Performed\n                                             +-----------------------+\n                                            /                         \\\nProcess low level events to    +     Current Responder      +   wantsResponderID\ndetermine who to perform negot-|   (if any exists at all)   |\niation/transition              | Otherwise just pass through|\n-------------------------------+----------------------------+------------------+\nBubble to find first ID        |                            |\nto return true:wantsResponderID|                            |\n                               |                            |\n     +-------------+           |                            |\n     | onTouchStart|           |                            |\n     +------+------+     none  |                            |\n            |            return|                            |\n+-----------v-------------+true| +------------------------+ |\n|onStartShouldSetResponder|----->|onResponderStart (cur)  |<-----------+\n+-----------+-------------+    | +------------------------+ |          |\n            |                  |                            | +--------+-------+\n            | returned true for|       false:REJECT +-------->|onResponderReject\n            | wantsResponderID |                    |       | +----------------+\n            | (now attempt     | +------------------+-----+ |\n            |  handoff)        | |   onResponder          | |\n            +------------------->|      TerminationRequest| |\n                               | +------------------+-----+ |\n                               |                    |       | +----------------+\n                               |         true:GRANT +-------->|onResponderGrant|\n                               |                            | +--------+-------+\n                               | +------------------------+ |          |\n                               | |   onResponderTerminate |<-----------+\n                               | +------------------+-----+ |\n                               |                    |       | +----------------+\n                               |                    +-------->|onResponderStart|\n                               |                            | +----------------+\nBubble to find first ID        |                            |\nto return true:wantsResponderID|                            |\n                               |                            |\n     +-------------+           |                            |\n     | onTouchMove |           |                            |\n     +------+------+     none  |                            |\n            |            return|                            |\n+-----------v-------------+true| +------------------------+ |\n|onMoveShouldSetResponder |----->|onResponderMove (cur)   |<-----------+\n+-----------+-------------+    | +------------------------+ |          |\n            |                  |                            | +--------+-------+\n            | returned true for|       false:REJECT +-------->|onResponderRejec|\n            | wantsResponderID |                    |       | +----------------+\n            | (now attempt     | +------------------+-----+ |\n            |  handoff)        | |   onResponder          | |\n            +------------------->|      TerminationRequest| |\n                               | +------------------+-----+ |\n                               |                    |       | +----------------+\n                               |         true:GRANT +-------->|onResponderGrant|\n                               |                            | +--------+-------+\n                               | +------------------------+ |          |\n                               | |   onResponderTerminate |<-----------+\n                               | +------------------+-----+ |\n                               |                    |       | +----------------+\n                               |                    +-------->|onResponderMove |\n                               |                            | +----------------+\n                               |                            |\n                               |                            |\n      Some active touch started|                            |\n      inside current responder | +------------------------+ |\n      +------------------------->|      onResponderEnd    | |\n      |                        | +------------------------+ |\n  +---+---------+              |                            |\n  | onTouchEnd  |              |                            |\n  +---+---------+              |                            |\n      |                        | +------------------------+ |\n      +------------------------->|     onResponderEnd     | |\n      No active touches started| +-----------+------------+ |\n      inside current responder |             |              |\n                               |             v              |\n                               | +------------------------+ |\n                               | |    onResponderRelease  | |\n                               | +------------------------+ |\n                               |                            |\n                               +                            + */\n\n/**\n * A note about event ordering in the `EventPluginRegistry`.\n *\n * Suppose plugins are injected in the following order:\n *\n * `[R, S, C]`\n *\n * To help illustrate the example, assume `S` is `SimpleEventPlugin` (for\n * `onClick` etc) and `R` is `ResponderEventPlugin`.\n *\n * \"Deferred-Dispatched Events\":\n *\n * - The current event plugin system will traverse the list of injected plugins,\n *   in order, and extract events by collecting the plugin's return value of\n *   `extractEvents()`.\n * - These events that are returned from `extractEvents` are \"deferred\n *   dispatched events\".\n * - When returned from `extractEvents`, deferred-dispatched events contain an\n *   \"accumulation\" of deferred dispatches.\n * - These deferred dispatches are accumulated/collected before they are\n *   returned, but processed at a later time by the `EventPluginRegistry` (hence the\n *   name deferred).\n *\n * In the process of returning their deferred-dispatched events, event plugins\n * themselves can dispatch events on-demand without returning them from\n * `extractEvents`. Plugins might want to do this, so that they can use event\n * dispatching as a tool that helps them decide which events should be extracted\n * in the first place.\n *\n * \"On-Demand-Dispatched Events\":\n *\n * - On-demand-dispatched events are not returned from `extractEvents`.\n * - On-demand-dispatched events are dispatched during the process of returning\n *   the deferred-dispatched events.\n * - They should not have side effects.\n * - They should be avoided, and/or eventually be replaced with another\n *   abstraction that allows event plugins to perform multiple \"rounds\" of event\n *   extraction.\n *\n * Therefore, the sequence of event dispatches becomes:\n *\n * - `R`s on-demand events (if any)   (dispatched by `R` on-demand)\n * - `S`s on-demand events (if any)   (dispatched by `S` on-demand)\n * - `C`s on-demand events (if any)   (dispatched by `C` on-demand)\n * - `R`s extracted events (if any)   (dispatched by `EventPluginRegistry`)\n * - `S`s extracted events (if any)   (dispatched by `EventPluginRegistry`)\n * - `C`s extracted events (if any)   (dispatched by `EventPluginRegistry`)\n *\n * In the case of `ResponderEventPlugin`: If the `startShouldSetResponder`\n * on-demand dispatch returns `true` (and some other details are satisfied) the\n * `onResponderGrant` deferred dispatched event is returned from\n * `extractEvents`. The sequence of dispatch executions in this case\n * will appear as follows:\n *\n * - `startShouldSetResponder` (`ResponderEventPlugin` dispatches on-demand)\n * - `touchStartCapture`       (`EventPluginRegistry` dispatches as usual)\n * - `touchStart`              (`EventPluginRegistry` dispatches as usual)\n * - `responderGrant/Reject`   (`EventPluginRegistry` dispatches as usual)\n */\n\nfunction setResponderAndExtractTransfer(\n  topLevelType,\n  targetInst,\n  nativeEvent,\n  nativeEventTarget,\n) {\n  const shouldSetEventType = isStartish(topLevelType)\n    ? eventTypes.startShouldSetResponder\n    : isMoveish(topLevelType)\n    ? eventTypes.moveShouldSetResponder\n    : topLevelType === TOP_SELECTION_CHANGE\n    ? eventTypes.selectionChangeShouldSetResponder\n    : eventTypes.scrollShouldSetResponder;\n\n  // TODO: stop one short of the current responder.\n  const bubbleShouldSetFrom = !responderInst\n    ? targetInst\n    : getLowestCommonAncestor(responderInst, targetInst);\n\n  // When capturing/bubbling the \"shouldSet\" event, we want to skip the target\n  // (deepest ID) if it happens to be the current responder. The reasoning:\n  // It's strange to get an `onMoveShouldSetResponder` when you're *already*\n  // the responder.\n  const skipOverBubbleShouldSetFrom = bubbleShouldSetFrom === responderInst;\n  const shouldSetEvent = ResponderSyntheticEvent.getPooled(\n    shouldSetEventType,\n    bubbleShouldSetFrom,\n    nativeEvent,\n    nativeEventTarget,\n  );\n  shouldSetEvent.touchHistory = ResponderTouchHistoryStore.touchHistory;\n  if (skipOverBubbleShouldSetFrom) {\n    accumulateTwoPhaseDispatchesSkipTarget(shouldSetEvent);\n  } else {\n    accumulateTwoPhaseDispatches(shouldSetEvent);\n  }\n  const wantsResponderInst = executeDispatchesInOrderStopAtTrue(shouldSetEvent);\n  if (!shouldSetEvent.isPersistent()) {\n    shouldSetEvent.constructor.release(shouldSetEvent);\n  }\n\n  if (!wantsResponderInst || wantsResponderInst === responderInst) {\n    return null;\n  }\n  let extracted;\n  const grantEvent = ResponderSyntheticEvent.getPooled(\n    eventTypes.responderGrant,\n    wantsResponderInst,\n    nativeEvent,\n    nativeEventTarget,\n  );\n  grantEvent.touchHistory = ResponderTouchHistoryStore.touchHistory;\n\n  accumulateDirectDispatches(grantEvent);\n  const blockHostResponder = executeDirectDispatch(grantEvent) === true;\n  if (responderInst) {\n    const terminationRequestEvent = ResponderSyntheticEvent.getPooled(\n      eventTypes.responderTerminationRequest,\n      responderInst,\n      nativeEvent,\n      nativeEventTarget,\n    );\n    terminationRequestEvent.touchHistory =\n      ResponderTouchHistoryStore.touchHistory;\n    accumulateDirectDispatches(terminationRequestEvent);\n    const shouldSwitch =\n      !hasDispatches(terminationRequestEvent) ||\n      executeDirectDispatch(terminationRequestEvent);\n    if (!terminationRequestEvent.isPersistent()) {\n      terminationRequestEvent.constructor.release(terminationRequestEvent);\n    }\n\n    if (shouldSwitch) {\n      const terminateEvent = ResponderSyntheticEvent.getPooled(\n        eventTypes.responderTerminate,\n        responderInst,\n        nativeEvent,\n        nativeEventTarget,\n      );\n      terminateEvent.touchHistory = ResponderTouchHistoryStore.touchHistory;\n      accumulateDirectDispatches(terminateEvent);\n      extracted = accumulate(extracted, [grantEvent, terminateEvent]);\n      changeResponder(wantsResponderInst, blockHostResponder);\n    } else {\n      const rejectEvent = ResponderSyntheticEvent.getPooled(\n        eventTypes.responderReject,\n        wantsResponderInst,\n        nativeEvent,\n        nativeEventTarget,\n      );\n      rejectEvent.touchHistory = ResponderTouchHistoryStore.touchHistory;\n      accumulateDirectDispatches(rejectEvent);\n      extracted = accumulate(extracted, rejectEvent);\n    }\n  } else {\n    extracted = accumulate(extracted, grantEvent);\n    changeResponder(wantsResponderInst, blockHostResponder);\n  }\n  return extracted;\n}\n\n/**\n * A transfer is a negotiation between a currently set responder and the next\n * element to claim responder status. Any start event could trigger a transfer\n * of responderInst. Any move event could trigger a transfer.\n *\n * @param {string} topLevelType Record from `BrowserEventConstants`.\n * @return {boolean} True if a transfer of responder could possibly occur.\n */\nfunction canTriggerTransfer(topLevelType, topLevelInst, nativeEvent) {\n  return (\n    topLevelInst &&\n    // responderIgnoreScroll: We are trying to migrate away from specifically\n    // tracking native scroll events here and responderIgnoreScroll indicates we\n    // will send topTouchCancel to handle canceling touch events instead\n    ((topLevelType === TOP_SCROLL && !nativeEvent.responderIgnoreScroll) ||\n      (trackedTouchCount > 0 && topLevelType === TOP_SELECTION_CHANGE) ||\n      isStartish(topLevelType) ||\n      isMoveish(topLevelType))\n  );\n}\n\n/**\n * Returns whether or not this touch end event makes it such that there are no\n * longer any touches that started inside of the current `responderInst`.\n *\n * @param {NativeEvent} nativeEvent Native touch end event.\n * @return {boolean} Whether or not this touch end event ends the responder.\n */\nfunction noResponderTouches(nativeEvent) {\n  const touches = nativeEvent.touches;\n  if (!touches || touches.length === 0) {\n    return true;\n  }\n  for (let i = 0; i < touches.length; i++) {\n    const activeTouch = touches[i];\n    const target = activeTouch.target;\n    if (target !== null && target !== undefined && target !== 0) {\n      // Is the original touch location inside of the current responder?\n      const targetInst = getInstanceFromNode(target);\n      if (isAncestor(responderInst, targetInst)) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\nconst ResponderEventPlugin = {\n  /* For unit testing only */\n  _getResponder: function() {\n    return responderInst;\n  },\n\n  eventTypes: eventTypes,\n\n  /**\n   * We must be resilient to `targetInst` being `null` on `touchMove` or\n   * `touchEnd`. On certain platforms, this means that a native scroll has\n   * assumed control and the original touch targets are destroyed.\n   */\n  extractEvents: function(\n    topLevelType,\n    targetInst,\n    nativeEvent,\n    nativeEventTarget,\n    eventSystemFlags,\n  ) {\n    if (isStartish(topLevelType)) {\n      trackedTouchCount += 1;\n    } else if (isEndish(topLevelType)) {\n      if (trackedTouchCount >= 0) {\n        trackedTouchCount -= 1;\n      } else {\n        if (__DEV__) {\n          console.warn(\n            'Ended a touch event which was not counted in `trackedTouchCount`.',\n          );\n        }\n        return null;\n      }\n    }\n\n    ResponderTouchHistoryStore.recordTouchTrack(topLevelType, nativeEvent);\n\n    let extracted = canTriggerTransfer(topLevelType, targetInst, nativeEvent)\n      ? setResponderAndExtractTransfer(\n          topLevelType,\n          targetInst,\n          nativeEvent,\n          nativeEventTarget,\n        )\n      : null;\n    // Responder may or may not have transferred on a new touch start/move.\n    // Regardless, whoever is the responder after any potential transfer, we\n    // direct all touch start/move/ends to them in the form of\n    // `onResponderMove/Start/End`. These will be called for *every* additional\n    // finger that move/start/end, dispatched directly to whoever is the\n    // current responder at that moment, until the responder is \"released\".\n    //\n    // These multiple individual change touch events are are always bookended\n    // by `onResponderGrant`, and one of\n    // (`onResponderRelease/onResponderTerminate`).\n    const isResponderTouchStart = responderInst && isStartish(topLevelType);\n    const isResponderTouchMove = responderInst && isMoveish(topLevelType);\n    const isResponderTouchEnd = responderInst && isEndish(topLevelType);\n    const incrementalTouch = isResponderTouchStart\n      ? eventTypes.responderStart\n      : isResponderTouchMove\n      ? eventTypes.responderMove\n      : isResponderTouchEnd\n      ? eventTypes.responderEnd\n      : null;\n\n    if (incrementalTouch) {\n      const gesture = ResponderSyntheticEvent.getPooled(\n        incrementalTouch,\n        responderInst,\n        nativeEvent,\n        nativeEventTarget,\n      );\n      gesture.touchHistory = ResponderTouchHistoryStore.touchHistory;\n      accumulateDirectDispatches(gesture);\n      extracted = accumulate(extracted, gesture);\n    }\n\n    const isResponderTerminate =\n      responderInst && topLevelType === TOP_TOUCH_CANCEL;\n    const isResponderRelease =\n      responderInst &&\n      !isResponderTerminate &&\n      isEndish(topLevelType) &&\n      noResponderTouches(nativeEvent);\n    const finalTouch = isResponderTerminate\n      ? eventTypes.responderTerminate\n      : isResponderRelease\n      ? eventTypes.responderRelease\n      : null;\n    if (finalTouch) {\n      const finalEvent = ResponderSyntheticEvent.getPooled(\n        finalTouch,\n        responderInst,\n        nativeEvent,\n        nativeEventTarget,\n      );\n      finalEvent.touchHistory = ResponderTouchHistoryStore.touchHistory;\n      accumulateDirectDispatches(finalEvent);\n      extracted = accumulate(extracted, finalEvent);\n      changeResponder(null);\n    }\n\n    return extracted;\n  },\n\n  GlobalResponderHandler: null,\n\n  injection: {\n    /**\n     * @param {{onChange: (ReactID, ReactID) => void} GlobalResponderHandler\n     * Object that handles any change in responder. Use this to inject\n     * integration with an existing touch handling system etc.\n     */\n    injectGlobalResponderHandler(GlobalResponderHandler) {\n      ResponderEventPlugin.GlobalResponderHandler = GlobalResponderHandler;\n    },\n  },\n};\n\nexport default ResponderEventPlugin;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {DispatchConfig} from './ReactSyntheticEventType';\nimport type {\n  AnyNativeEvent,\n  PluginName,\n  LegacyPluginModule,\n} from './PluginModuleType';\n\nimport invariant from 'shared/invariant';\n\ntype NamesToPlugins = {\n  [key: PluginName]: LegacyPluginModule<AnyNativeEvent>,\n  ...,\n};\ntype EventPluginOrder = null | Array<PluginName>;\n\n/**\n * Injectable ordering of event plugins.\n */\nlet eventPluginOrder: EventPluginOrder = null;\n\n/**\n * Injectable mapping from names to event plugin modules.\n */\nconst namesToPlugins: NamesToPlugins = {};\n\n/**\n * Recomputes the plugin list using the injected plugins and plugin ordering.\n *\n * @private\n */\nfunction recomputePluginOrdering(): void {\n  if (!eventPluginOrder) {\n    // Wait until an `eventPluginOrder` is injected.\n    return;\n  }\n  for (const pluginName in namesToPlugins) {\n    const pluginModule = namesToPlugins[pluginName];\n    const pluginIndex = eventPluginOrder.indexOf(pluginName);\n    invariant(\n      pluginIndex > -1,\n      'EventPluginRegistry: Cannot inject event plugins that do not exist in ' +\n        'the plugin ordering, `%s`.',\n      pluginName,\n    );\n    if (plugins[pluginIndex]) {\n      continue;\n    }\n    invariant(\n      pluginModule.extractEvents,\n      'EventPluginRegistry: Event plugins must implement an `extractEvents` ' +\n        'method, but `%s` does not.',\n      pluginName,\n    );\n    plugins[pluginIndex] = pluginModule;\n    const publishedEvents = pluginModule.eventTypes;\n    for (const eventName in publishedEvents) {\n      invariant(\n        publishEventForPlugin(\n          publishedEvents[eventName],\n          pluginModule,\n          eventName,\n        ),\n        'EventPluginRegistry: Failed to publish event `%s` for plugin `%s`.',\n        eventName,\n        pluginName,\n      );\n    }\n  }\n}\n\n/**\n * Publishes an event so that it can be dispatched by the supplied plugin.\n *\n * @param {object} dispatchConfig Dispatch configuration for the event.\n * @param {object} PluginModule Plugin publishing the event.\n * @return {boolean} True if the event was successfully published.\n * @private\n */\nfunction publishEventForPlugin(\n  dispatchConfig: DispatchConfig,\n  pluginModule: LegacyPluginModule<AnyNativeEvent>,\n  eventName: string,\n): boolean {\n  invariant(\n    !eventNameDispatchConfigs.hasOwnProperty(eventName),\n    'EventPluginRegistry: More than one plugin attempted to publish the same ' +\n      'event name, `%s`.',\n    eventName,\n  );\n  eventNameDispatchConfigs[eventName] = dispatchConfig;\n\n  const phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;\n  if (phasedRegistrationNames) {\n    for (const phaseName in phasedRegistrationNames) {\n      if (phasedRegistrationNames.hasOwnProperty(phaseName)) {\n        const phasedRegistrationName = phasedRegistrationNames[phaseName];\n        publishRegistrationName(\n          phasedRegistrationName,\n          pluginModule,\n          eventName,\n        );\n      }\n    }\n    return true;\n  } else if (dispatchConfig.registrationName) {\n    publishRegistrationName(\n      dispatchConfig.registrationName,\n      pluginModule,\n      eventName,\n    );\n    return true;\n  }\n  return false;\n}\n\n/**\n * Publishes a registration name that is used to identify dispatched events.\n *\n * @param {string} registrationName Registration name to add.\n * @param {object} PluginModule Plugin publishing the event.\n * @private\n */\nfunction publishRegistrationName(\n  registrationName: string,\n  pluginModule: LegacyPluginModule<AnyNativeEvent>,\n  eventName: string,\n): void {\n  invariant(\n    !registrationNameModules[registrationName],\n    'EventPluginRegistry: More than one plugin attempted to publish the same ' +\n      'registration name, `%s`.',\n    registrationName,\n  );\n  registrationNameModules[registrationName] = pluginModule;\n  registrationNameDependencies[registrationName] =\n    pluginModule.eventTypes[eventName].dependencies;\n\n  if (__DEV__) {\n    const lowerCasedName = registrationName.toLowerCase();\n    possibleRegistrationNames[lowerCasedName] = registrationName;\n\n    if (registrationName === 'onDoubleClick') {\n      possibleRegistrationNames.ondblclick = registrationName;\n    }\n  }\n}\n\n/**\n * Registers plugins so that they can extract and dispatch events.\n */\n\n/**\n * Ordered list of injected plugins.\n */\nexport const plugins = [];\n\n/**\n * Mapping from event name to dispatch config\n */\nexport const eventNameDispatchConfigs = {};\n\n/**\n * Mapping from registration name to plugin module\n */\nexport const registrationNameModules = {};\n\n/**\n * Mapping from registration name to event name\n */\nexport const registrationNameDependencies = {};\n\n/**\n * Mapping from lowercase registration names to the properly cased version,\n * used to warn in the case of missing event handlers. Available\n * only in __DEV__.\n * @type {Object}\n */\nexport const possibleRegistrationNames = __DEV__ ? {} : (null: any);\n// Trust the developer to only use possibleRegistrationNames in __DEV__\n\n/**\n * Injects an ordering of plugins (by plugin name). This allows the ordering\n * to be decoupled from injection of the actual plugins so that ordering is\n * always deterministic regardless of packaging, on-the-fly injection, etc.\n *\n * @param {array} InjectedEventPluginOrder\n * @internal\n */\nexport function injectEventPluginOrder(\n  injectedEventPluginOrder: EventPluginOrder,\n): void {\n  invariant(\n    !eventPluginOrder,\n    'EventPluginRegistry: Cannot inject event plugin ordering more than ' +\n      'once. You are likely trying to load more than one copy of React.',\n  );\n  // Clone the ordering so it cannot be dynamically mutated.\n  eventPluginOrder = Array.prototype.slice.call(injectedEventPluginOrder);\n  recomputePluginOrdering();\n}\n\n/**\n * Injects plugins to be used by plugin event system. The plugin names must be\n * in the ordering injected by `injectEventPluginOrder`.\n *\n * Plugins can be injected as part of page initialization or on-the-fly.\n *\n * @param {object} injectedNamesToPlugins Map from names to plugin modules.\n * @internal\n */\nexport function injectEventPluginsByName(\n  injectedNamesToPlugins: NamesToPlugins,\n): void {\n  let isOrderingDirty = false;\n  for (const pluginName in injectedNamesToPlugins) {\n    if (!injectedNamesToPlugins.hasOwnProperty(pluginName)) {\n      continue;\n    }\n    const pluginModule = injectedNamesToPlugins[pluginName];\n    if (\n      !namesToPlugins.hasOwnProperty(pluginName) ||\n      namesToPlugins[pluginName] !== pluginModule\n    ) {\n      invariant(\n        !namesToPlugins[pluginName],\n        'EventPluginRegistry: Cannot inject two different event plugins ' +\n          'using the same name, `%s`.',\n        pluginName,\n      );\n      namesToPlugins[pluginName] = pluginModule;\n      isOrderingDirty = true;\n    }\n  }\n  if (isOrderingDirty) {\n    recomputePluginOrdering();\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n * @flow\n */\n\nimport type {Fiber} from 'react-reconciler/src/ReactInternalTypes';\n\nimport invariant from 'shared/invariant';\nimport {getFiberCurrentPropsFromNode} from './legacy-events/EventPluginUtils';\n\nexport default function getListener(\n  inst: Fiber,\n  registrationName: string,\n): Function | null {\n  const stateNode = inst.stateNode;\n  if (stateNode === null) {\n    // Work in progress (ex: onload events in incremental mode).\n    return null;\n  }\n  const props = getFiberCurrentPropsFromNode(stateNode);\n  if (props === null) {\n    // Work in progress.\n    return null;\n  }\n  const listener = props[registrationName];\n  invariant(\n    !listener || typeof listener === 'function',\n    'Expected `%s` listener to be a function, instead got a value of `%s` type.',\n    registrationName,\n    typeof listener,\n  );\n  return listener;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {AnyNativeEvent} from './legacy-events/PluginModuleType';\nimport type {TopLevelType} from './legacy-events/TopLevelEventTypes';\nimport SyntheticEvent from './legacy-events/SyntheticEvent';\nimport invariant from 'shared/invariant';\n\n// Module provided by RN:\nimport {ReactNativeViewConfigRegistry} from 'react-native/Libraries/ReactPrivate/ReactNativePrivateInterface';\nimport accumulateInto from './legacy-events/accumulateInto';\nimport getListener from './ReactNativeGetListener';\nimport forEachAccumulated from './legacy-events/forEachAccumulated';\nimport {HostComponent} from 'react-reconciler/src/ReactWorkTags';\n\nconst {\n  customBubblingEventTypes,\n  customDirectEventTypes,\n} = ReactNativeViewConfigRegistry;\n\n// Start of inline: the below functions were inlined from\n// EventPropagator.js, as they deviated from ReactDOM's newer\n// implementations.\nfunction listenerAtPhase(inst, event, propagationPhase: PropagationPhases) {\n  const registrationName =\n    event.dispatchConfig.phasedRegistrationNames[propagationPhase];\n  return getListener(inst, registrationName);\n}\n\nfunction accumulateDirectionalDispatches(inst, phase, event) {\n  if (__DEV__) {\n    if (!inst) {\n      console.error('Dispatching inst must not be null');\n    }\n  }\n  const listener = listenerAtPhase(inst, event, phase);\n  if (listener) {\n    event._dispatchListeners = accumulateInto(\n      event._dispatchListeners,\n      listener,\n    );\n    event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);\n  }\n}\n\nfunction getParent(inst) {\n  do {\n    inst = inst.return;\n    // TODO: If this is a HostRoot we might want to bail out.\n    // That is depending on if we want nested subtrees (layers) to bubble\n    // events to their parent. We could also go through parentNode on the\n    // host node but that wouldn't work for React Native and doesn't let us\n    // do the portal feature.\n  } while (inst && inst.tag !== HostComponent);\n  if (inst) {\n    return inst;\n  }\n  return null;\n}\n\n/**\n * Simulates the traversal of a two-phase, capture/bubble event dispatch.\n */\nexport function traverseTwoPhase(inst: Object, fn: Function, arg: Function) {\n  const path = [];\n  while (inst) {\n    path.push(inst);\n    inst = getParent(inst);\n  }\n  let i;\n  for (i = path.length; i-- > 0; ) {\n    fn(path[i], 'captured', arg);\n  }\n  for (i = 0; i < path.length; i++) {\n    fn(path[i], 'bubbled', arg);\n  }\n}\n\nfunction accumulateTwoPhaseDispatchesSingle(event) {\n  if (event && event.dispatchConfig.phasedRegistrationNames) {\n    traverseTwoPhase(event._targetInst, accumulateDirectionalDispatches, event);\n  }\n}\n\nfunction accumulateTwoPhaseDispatches(events) {\n  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingle);\n}\n\n/**\n * Accumulates without regard to direction, does not look for phased\n * registration names. Same as `accumulateDirectDispatchesSingle` but without\n * requiring that the `dispatchMarker` be the same as the dispatched ID.\n */\nfunction accumulateDispatches(\n  inst: Object,\n  ignoredDirection: ?boolean,\n  event: Object,\n): void {\n  if (inst && event && event.dispatchConfig.registrationName) {\n    const registrationName = event.dispatchConfig.registrationName;\n    const listener = getListener(inst, registrationName);\n    if (listener) {\n      event._dispatchListeners = accumulateInto(\n        event._dispatchListeners,\n        listener,\n      );\n      event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);\n    }\n  }\n}\n\n/**\n * Accumulates dispatches on an `SyntheticEvent`, but only for the\n * `dispatchMarker`.\n * @param {SyntheticEvent} event\n */\nfunction accumulateDirectDispatchesSingle(event: Object) {\n  if (event && event.dispatchConfig.registrationName) {\n    accumulateDispatches(event._targetInst, null, event);\n  }\n}\n\nfunction accumulateDirectDispatches(events: ?(Array<Object> | Object)) {\n  forEachAccumulated(events, accumulateDirectDispatchesSingle);\n}\n\n// End of inline\ntype PropagationPhases = 'bubbled' | 'captured';\n\nconst ReactNativeBridgeEventPlugin = {\n  eventTypes: {},\n\n  extractEvents: function(\n    topLevelType: TopLevelType,\n    targetInst: null | Object,\n    nativeEvent: AnyNativeEvent,\n    nativeEventTarget: null | Object,\n  ): ?Object {\n    if (targetInst == null) {\n      // Probably a node belonging to another renderer's tree.\n      return null;\n    }\n    const bubbleDispatchConfig = customBubblingEventTypes[topLevelType];\n    const directDispatchConfig = customDirectEventTypes[topLevelType];\n    invariant(\n      bubbleDispatchConfig || directDispatchConfig,\n      'Unsupported top level event type \"%s\" dispatched',\n      topLevelType,\n    );\n    const event = SyntheticEvent.getPooled(\n      bubbleDispatchConfig || directDispatchConfig,\n      targetInst,\n      nativeEvent,\n      nativeEventTarget,\n    );\n    if (bubbleDispatchConfig) {\n      accumulateTwoPhaseDispatches(event);\n    } else if (directDispatchConfig) {\n      accumulateDirectDispatches(event);\n    } else {\n      return null;\n    }\n    return event;\n  },\n};\n\nexport default ReactNativeBridgeEventPlugin;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nconst ReactNativeEventPluginOrder = [\n  'ResponderEventPlugin',\n  'ReactNativeBridgeEventPlugin',\n];\n\nexport default ReactNativeEventPluginOrder;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\n/**\n * Make sure essential globals are available and are patched correctly. Please don't remove this\n * line. Bundles created by react-packager `require` it before executing any application code. This\n * ensures it exists in the dependency graph and can be `require`d.\n * TODO: require this in packager, not in React #10932517\n */\n// Module provided by RN:\nimport 'react-native/Libraries/ReactPrivate/ReactNativePrivateInitializeCore';\n\nimport ResponderEventPlugin from './legacy-events/ResponderEventPlugin';\nimport {\n  injectEventPluginOrder,\n  injectEventPluginsByName,\n} from './legacy-events/EventPluginRegistry';\n\nimport ReactNativeBridgeEventPlugin from './ReactNativeBridgeEventPlugin';\nimport ReactNativeEventPluginOrder from './ReactNativeEventPluginOrder';\n\n/**\n * Inject module for resolving DOM hierarchy and plugin ordering.\n */\ninjectEventPluginOrder(ReactNativeEventPluginOrder);\n\n/**\n * Some important event plugins included by default (without having to require\n * them).\n */\ninjectEventPluginsByName({\n  ResponderEventPlugin: ResponderEventPlugin,\n  ReactNativeBridgeEventPlugin: ReactNativeBridgeEventPlugin,\n});\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport invariant from 'shared/invariant';\n\nconst instanceCache = new Map();\nconst instanceProps = new Map();\n\nexport function precacheFiberNode(hostInst, tag) {\n  instanceCache.set(tag, hostInst);\n}\n\nexport function uncacheFiberNode(tag) {\n  instanceCache.delete(tag);\n  instanceProps.delete(tag);\n}\n\nfunction getInstanceFromTag(tag) {\n  return instanceCache.get(tag) || null;\n}\n\nfunction getTagFromInstance(inst) {\n  let nativeInstance = inst.stateNode;\n  let tag = nativeInstance._nativeTag;\n  if (tag === undefined) {\n    nativeInstance = nativeInstance.canonical;\n    tag = nativeInstance._nativeTag;\n  }\n  invariant(tag, 'All native instances should have a tag.');\n  return nativeInstance;\n}\n\nexport {\n  getInstanceFromTag as getClosestInstanceFromNode,\n  getInstanceFromTag as getInstanceFromNode,\n  getTagFromInstance as getNodeFromInstance,\n};\n\nexport function getFiberCurrentPropsFromNode(stateNode) {\n  return instanceProps.get(stateNode._nativeTag) || null;\n}\n\nexport function updateFiberProps(tag, props) {\n  instanceProps.set(tag, props);\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// Used as a way to call batchedUpdates when we don't have a reference to\n// the renderer. Such as when we're dispatching events or if third party\n// libraries need to call batchedUpdates. Eventually, this API will go away when\n// everything is batched by default. We'll then have a similar API to opt-out of\n// scheduled work and instead do synchronous work.\n\n// Defaults\nlet batchedUpdatesImpl = function(fn, bookkeeping) {\n  return fn(bookkeeping);\n};\nlet discreteUpdatesImpl = function(fn, a, b, c, d) {\n  return fn(a, b, c, d);\n};\nlet flushDiscreteUpdatesImpl = function() {};\nlet batchedEventUpdatesImpl = batchedUpdatesImpl;\n\nlet isInsideEventHandler = false;\nlet isBatchingEventUpdates = false;\n\nexport function batchedUpdates(fn, bookkeeping) {\n  if (isInsideEventHandler) {\n    // If we are currently inside another batch, we need to wait until it\n    // fully completes before restoring state.\n    return fn(bookkeeping);\n  }\n  isInsideEventHandler = true;\n  try {\n    return batchedUpdatesImpl(fn, bookkeeping);\n  } finally {\n    isInsideEventHandler = false;\n  }\n}\n\nexport function batchedEventUpdates(fn, a, b) {\n  if (isBatchingEventUpdates) {\n    // If we are currently inside another batch, we need to wait until it\n    // fully completes before restoring state.\n    return fn(a, b);\n  }\n  isBatchingEventUpdates = true;\n  try {\n    return batchedEventUpdatesImpl(fn, a, b);\n  } finally {\n    isBatchingEventUpdates = false;\n  }\n}\n\nexport function discreteUpdates(fn, a, b, c, d) {\n  const prevIsInsideEventHandler = isInsideEventHandler;\n  isInsideEventHandler = true;\n  try {\n    return discreteUpdatesImpl(fn, a, b, c, d);\n  } finally {\n    isInsideEventHandler = prevIsInsideEventHandler;\n    if (!isInsideEventHandler) {\n    }\n  }\n}\n\nexport function flushDiscreteUpdatesIfNeeded() {\n  if (!isInsideEventHandler) {\n    flushDiscreteUpdatesImpl();\n  }\n}\n\nexport function setBatchingImplementation(\n  _batchedUpdatesImpl,\n  _discreteUpdatesImpl,\n  _flushDiscreteUpdatesImpl,\n  _batchedEventUpdatesImpl,\n) {\n  batchedUpdatesImpl = _batchedUpdatesImpl;\n  discreteUpdatesImpl = _discreteUpdatesImpl;\n  flushDiscreteUpdatesImpl = _flushDiscreteUpdatesImpl;\n  batchedEventUpdatesImpl = _batchedEventUpdatesImpl;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n * @flow\n */\n\nimport invariant from 'shared/invariant';\nimport {rethrowCaughtError} from 'shared/ReactErrorUtils';\n\nimport type {ReactSyntheticEvent} from './ReactSyntheticEventType';\nimport accumulateInto from './accumulateInto';\nimport forEachAccumulated from './forEachAccumulated';\nimport {executeDispatchesInOrder} from './EventPluginUtils';\n\n/**\n * Internal queue of events that have accumulated their dispatches and are\n * waiting to have their dispatches executed.\n */\nlet eventQueue: ?(Array<ReactSyntheticEvent> | ReactSyntheticEvent) = null;\n\n/**\n * Dispatches an event and releases it back into the pool, unless persistent.\n *\n * @param {?object} event Synthetic event to be dispatched.\n * @private\n */\nconst executeDispatchesAndRelease = function(event: ReactSyntheticEvent) {\n  if (event) {\n    executeDispatchesInOrder(event);\n\n    if (!event.isPersistent()) {\n      event.constructor.release(event);\n    }\n  }\n};\nconst executeDispatchesAndReleaseTopLevel = function(e) {\n  return executeDispatchesAndRelease(e);\n};\n\nexport function runEventsInBatch(\n  events: Array<ReactSyntheticEvent> | ReactSyntheticEvent | null,\n) {\n  if (events !== null) {\n    eventQueue = accumulateInto(eventQueue, events);\n  }\n\n  // Set `eventQueue` to null before processing it so that we can tell if more\n  // events get enqueued while processing.\n  const processingEventQueue = eventQueue;\n  eventQueue = null;\n\n  if (!processingEventQueue) {\n    return;\n  }\n\n  forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseTopLevel);\n  invariant(\n    !eventQueue,\n    'processEventQueue(): Additional events were enqueued while processing ' +\n      'an event queue. Support for this has not yet been implemented.',\n  );\n  // This would be a good time to rethrow if any of the event handlers threw.\n  rethrowCaughtError();\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {AnyNativeEvent} from './legacy-events/PluginModuleType';\nimport type {Fiber} from 'react-reconciler/src/ReactInternalTypes';\nimport type {LegacyPluginModule} from './legacy-events/PluginModuleType';\nimport type {ReactSyntheticEvent} from './legacy-events/ReactSyntheticEventType';\nimport type {TopLevelType} from './legacy-events/TopLevelEventTypes';\n\nimport {registrationNameModules} from './legacy-events/EventPluginRegistry';\nimport {batchedUpdates} from './legacy-events/ReactGenericBatching';\nimport {runEventsInBatch} from './legacy-events/EventBatching';\nimport {plugins} from './legacy-events/EventPluginRegistry';\nimport getListener from './ReactNativeGetListener';\nimport accumulateInto from './legacy-events/accumulateInto';\n\nimport {getInstanceFromNode} from './ReactNativeComponentTree';\n\nexport {getListener, registrationNameModules as registrationNames};\n\n/**\n * Version of `ReactBrowserEventEmitter` that works on the receiving side of a\n * serialized worker boundary.\n */\n\n// Shared default empty native event - conserve memory.\nconst EMPTY_NATIVE_EVENT = (({}: any): AnyNativeEvent);\n\n/**\n * Selects a subsequence of `Touch`es, without destroying `touches`.\n *\n * @param {Array<Touch>} touches Deserialized touch objects.\n * @param {Array<number>} indices Indices by which to pull subsequence.\n * @return {Array<Touch>} Subsequence of touch objects.\n */\nconst touchSubsequence = function(touches, indices) {\n  const ret = [];\n  for (let i = 0; i < indices.length; i++) {\n    ret.push(touches[indices[i]]);\n  }\n  return ret;\n};\n\n/**\n * TODO: Pool all of this.\n *\n * Destroys `touches` by removing touch objects at indices `indices`. This is\n * to maintain compatibility with W3C touch \"end\" events, where the active\n * touches don't include the set that has just been \"ended\".\n *\n * @param {Array<Touch>} touches Deserialized touch objects.\n * @param {Array<number>} indices Indices to remove from `touches`.\n * @return {Array<Touch>} Subsequence of removed touch objects.\n */\nconst removeTouchesAtIndices = function(\n  touches: Array<Object>,\n  indices: Array<number>,\n): Array<Object> {\n  const rippedOut = [];\n  // use an unsafe downcast to alias to nullable elements,\n  // so we can delete and then compact.\n  const temp: Array<?Object> = (touches: Array<any>);\n  for (let i = 0; i < indices.length; i++) {\n    const index = indices[i];\n    rippedOut.push(touches[index]);\n    temp[index] = null;\n  }\n  let fillAt = 0;\n  for (let j = 0; j < temp.length; j++) {\n    const cur = temp[j];\n    if (cur !== null) {\n      temp[fillAt++] = cur;\n    }\n  }\n  temp.length = fillAt;\n  return rippedOut;\n};\n\n/**\n * Internal version of `receiveEvent` in terms of normalized (non-tag)\n * `rootNodeID`.\n *\n * @see receiveEvent.\n *\n * @param {rootNodeID} rootNodeID React root node ID that event occurred on.\n * @param {TopLevelType} topLevelType Top level type of event.\n * @param {?object} nativeEventParam Object passed from native.\n */\nfunction _receiveRootNodeIDEvent(\n  rootNodeID: number,\n  topLevelType: TopLevelType,\n  nativeEventParam: ?AnyNativeEvent,\n) {\n  const nativeEvent = nativeEventParam || EMPTY_NATIVE_EVENT;\n  const inst = getInstanceFromNode(rootNodeID);\n\n  let target = null;\n  if (inst != null) {\n    target = inst.stateNode;\n  }\n\n  batchedUpdates(function() {\n    runExtractedPluginEventsInBatch(topLevelType, inst, nativeEvent, target);\n  });\n  // React Native doesn't use ReactControlledComponent but if it did, here's\n  // where it would do it.\n}\n\n/**\n * Allows registered plugins an opportunity to extract events from top-level\n * native browser events.\n *\n * @return {*} An accumulation of synthetic events.\n * @internal\n */\nfunction extractPluginEvents(\n  topLevelType: TopLevelType,\n  targetInst: null | Fiber,\n  nativeEvent: AnyNativeEvent,\n  nativeEventTarget: null | EventTarget,\n): Array<ReactSyntheticEvent> | ReactSyntheticEvent | null {\n  let events = null;\n  const legacyPlugins = ((plugins: any): Array<LegacyPluginModule<Event>>);\n  for (let i = 0; i < legacyPlugins.length; i++) {\n    // Not every plugin in the ordering may be loaded at runtime.\n    const possiblePlugin: LegacyPluginModule<AnyNativeEvent> = legacyPlugins[i];\n    if (possiblePlugin) {\n      const extractedEvents = possiblePlugin.extractEvents(\n        topLevelType,\n        targetInst,\n        nativeEvent,\n        nativeEventTarget,\n      );\n      if (extractedEvents) {\n        events = accumulateInto(events, extractedEvents);\n      }\n    }\n  }\n  return events;\n}\n\nfunction runExtractedPluginEventsInBatch(\n  topLevelType: TopLevelType,\n  targetInst: null | Fiber,\n  nativeEvent: AnyNativeEvent,\n  nativeEventTarget: null | EventTarget,\n) {\n  const events = extractPluginEvents(\n    topLevelType,\n    targetInst,\n    nativeEvent,\n    nativeEventTarget,\n  );\n  runEventsInBatch(events);\n}\n\n/**\n * Publicly exposed method on module for native objc to invoke when a top\n * level event is extracted.\n * @param {rootNodeID} rootNodeID React root node ID that event occurred on.\n * @param {TopLevelType} topLevelType Top level type of event.\n * @param {object} nativeEventParam Object passed from native.\n */\nexport function receiveEvent(\n  rootNodeID: number,\n  topLevelType: TopLevelType,\n  nativeEventParam: AnyNativeEvent,\n) {\n  _receiveRootNodeIDEvent(rootNodeID, topLevelType, nativeEventParam);\n}\n\n/**\n * Simple multi-wrapper around `receiveEvent` that is intended to receive an\n * efficient representation of `Touch` objects, and other information that\n * can be used to construct W3C compliant `Event` and `Touch` lists.\n *\n * This may create dispatch behavior that differs than web touch handling. We\n * loop through each of the changed touches and receive it as a single event.\n * So two `touchStart`/`touchMove`s that occur simultaneously are received as\n * two separate touch event dispatches - when they arguably should be one.\n *\n * This implementation reuses the `Touch` objects themselves as the `Event`s\n * since we dispatch an event for each touch (though that might not be spec\n * compliant). The main purpose of reusing them is to save allocations.\n *\n * TODO: Dispatch multiple changed touches in one event. The bubble path\n * could be the first common ancestor of all the `changedTouches`.\n *\n * One difference between this behavior and W3C spec: cancelled touches will\n * not appear in `.touches`, or in any future `.touches`, though they may\n * still be \"actively touching the surface\".\n *\n * Web desktop polyfills only need to construct a fake touch event with\n * identifier 0, also abandoning traditional click handlers.\n */\nexport function receiveTouches(\n  eventTopLevelType: TopLevelType,\n  touches: Array<Object>,\n  changedIndices: Array<number>,\n) {\n  const changedTouches =\n    eventTopLevelType === 'topTouchEnd' ||\n    eventTopLevelType === 'topTouchCancel'\n      ? removeTouchesAtIndices(touches, changedIndices)\n      : touchSubsequence(touches, changedIndices);\n\n  for (let jj = 0; jj < changedTouches.length; jj++) {\n    const touch = changedTouches[jj];\n    // Touch objects can fulfill the role of `DOM` `Event` objects if we set\n    // the `changedTouches`/`touches`. This saves allocations.\n    touch.changedTouches = changedTouches;\n    touch.touches = touches;\n    const nativeEvent = touch;\n    let rootNodeID = null;\n    const target = nativeEvent.target;\n    if (target !== null && target !== undefined) {\n      if (target < 1) {\n        if (__DEV__) {\n          console.error(\n            'A view is reporting that a touch occurred on tag zero.',\n          );\n        }\n      } else {\n        rootNodeID = target;\n      }\n    }\n    // $FlowFixMe Shouldn't we *not* call it if rootNodeID is null?\n    _receiveRootNodeIDEvent(rootNodeID, eventTopLevelType, nativeEvent);\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\n// Module provided by RN:\nimport {UIManager} from 'react-native/Libraries/ReactPrivate/ReactNativePrivateInterface';\n\nconst ReactNativeGlobalResponderHandler = {\n  onChange: function(from: any, to: any, blockNativeResponder: boolean) {\n    if (to !== null) {\n      const tag = to.stateNode._nativeTag;\n      UIManager.setJSResponder(tag, blockNativeResponder);\n    } else {\n      UIManager.clearJSResponder();\n    }\n  },\n};\n\nexport default ReactNativeGlobalResponderHandler;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport './ReactNativeInjectionShared';\n\nimport {\n  getFiberCurrentPropsFromNode,\n  getInstanceFromNode,\n  getNodeFromInstance,\n} from './ReactNativeComponentTree';\nimport {setComponentTree} from './legacy-events/EventPluginUtils';\nimport {receiveEvent, receiveTouches} from './ReactNativeEventEmitter';\nimport ReactNativeGlobalResponderHandler from './ReactNativeGlobalResponderHandler';\nimport ResponderEventPlugin from './legacy-events/ResponderEventPlugin';\n\n// Module provided by RN:\nimport {RCTEventEmitter} from 'react-native/Libraries/ReactPrivate/ReactNativePrivateInterface';\n\n/**\n * Register the event emitter with the native bridge\n */\nRCTEventEmitter.register({\n  receiveEvent,\n  receiveTouches,\n});\n\nsetComponentTree(\n  getFiberCurrentPropsFromNode,\n  getInstanceFromNode,\n  getNodeFromInstance,\n);\n\nResponderEventPlugin.injection.injectGlobalResponderHandler(\n  ReactNativeGlobalResponderHandler,\n);\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/**\n * `ReactInstanceMap` maintains a mapping from a public facing stateful\n * instance (key) and the internal representation (value). This allows public\n * methods to accept the user facing instance as an argument and map them back\n * to internal methods.\n *\n * Note that this module is currently shared and assumed to be stateless.\n * If this becomes an actual Map, that will break.\n */\n\n/**\n * This API should be called `delete` but we'd have to make sure to always\n * transform these to strings for IE support. When this transform is fully\n * supported we can rename it.\n */\nexport function remove(key) {\n  key._reactInternals = undefined;\n}\n\nexport function get(key) {\n  return key._reactInternals;\n}\n\nexport function has(key) {\n  return key._reactInternals !== undefined;\n}\n\nexport function set(key, value) {\n  key._reactInternals = value;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\n// ATTENTION\n// When adding new symbols to this file,\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n\n// The Symbol used to tag the ReactElement-like types. If there is no native Symbol\n// nor polyfill, then a plain number is used for performance.\nexport let REACT_ELEMENT_TYPE = 0xeac7;\nexport let REACT_PORTAL_TYPE = 0xeaca;\nexport let REACT_FRAGMENT_TYPE = 0xeacb;\nexport let REACT_STRICT_MODE_TYPE = 0xeacc;\nexport let REACT_PROFILER_TYPE = 0xead2;\nexport let REACT_PROVIDER_TYPE = 0xeacd;\nexport let REACT_CONTEXT_TYPE = 0xeace;\nexport let REACT_FORWARD_REF_TYPE = 0xead0;\nexport let REACT_SUSPENSE_TYPE = 0xead1;\nexport let REACT_SUSPENSE_LIST_TYPE = 0xead8;\nexport let REACT_MEMO_TYPE = 0xead3;\nexport let REACT_LAZY_TYPE = 0xead4;\nexport let REACT_BLOCK_TYPE = 0xead9;\nexport let REACT_SERVER_BLOCK_TYPE = 0xeada;\nexport let REACT_FUNDAMENTAL_TYPE = 0xead5;\nexport let REACT_SCOPE_TYPE = 0xead7;\nexport let REACT_OPAQUE_ID_TYPE = 0xeae0;\nexport let REACT_DEBUG_TRACING_MODE_TYPE = 0xeae1;\nexport let REACT_OFFSCREEN_TYPE = 0xeae2;\nexport let REACT_LEGACY_HIDDEN_TYPE = 0xeae3;\n\nif (typeof Symbol === 'function' && Symbol.for) {\n  const symbolFor = Symbol.for;\n  REACT_ELEMENT_TYPE = symbolFor('react.element');\n  REACT_PORTAL_TYPE = symbolFor('react.portal');\n  REACT_FRAGMENT_TYPE = symbolFor('react.fragment');\n  REACT_STRICT_MODE_TYPE = symbolFor('react.strict_mode');\n  REACT_PROFILER_TYPE = symbolFor('react.profiler');\n  REACT_PROVIDER_TYPE = symbolFor('react.provider');\n  REACT_CONTEXT_TYPE = symbolFor('react.context');\n  REACT_FORWARD_REF_TYPE = symbolFor('react.forward_ref');\n  REACT_SUSPENSE_TYPE = symbolFor('react.suspense');\n  REACT_SUSPENSE_LIST_TYPE = symbolFor('react.suspense_list');\n  REACT_MEMO_TYPE = symbolFor('react.memo');\n  REACT_LAZY_TYPE = symbolFor('react.lazy');\n  REACT_BLOCK_TYPE = symbolFor('react.block');\n  REACT_SERVER_BLOCK_TYPE = symbolFor('react.server.block');\n  REACT_FUNDAMENTAL_TYPE = symbolFor('react.fundamental');\n  REACT_SCOPE_TYPE = symbolFor('react.scope');\n  REACT_OPAQUE_ID_TYPE = symbolFor('react.opaque.id');\n  REACT_DEBUG_TRACING_MODE_TYPE = symbolFor('react.debug_trace_mode');\n  REACT_OFFSCREEN_TYPE = symbolFor('react.offscreen');\n  REACT_LEGACY_HIDDEN_TYPE = symbolFor('react.legacy_hidden');\n}\n\nconst MAYBE_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\nconst FAUX_ITERATOR_SYMBOL = '@@iterator';\n\nexport function getIteratorFn(maybeIterable: ?any): ?() => ?Iterator<*> {\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\n    return null;\n  }\n  const maybeIterator =\n    (MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL]) ||\n    maybeIterable[FAUX_ITERATOR_SYMBOL];\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n  return null;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {LazyComponent} from 'react/src/ReactLazy';\n\nimport {\n  REACT_CONTEXT_TYPE,\n  REACT_FORWARD_REF_TYPE,\n  REACT_FRAGMENT_TYPE,\n  REACT_PORTAL_TYPE,\n  REACT_MEMO_TYPE,\n  REACT_PROFILER_TYPE,\n  REACT_PROVIDER_TYPE,\n  REACT_STRICT_MODE_TYPE,\n  REACT_SUSPENSE_TYPE,\n  REACT_SUSPENSE_LIST_TYPE,\n  REACT_LAZY_TYPE,\n  REACT_BLOCK_TYPE,\n} from 'shared/ReactSymbols';\nimport type {ReactContext, ReactProviderType} from 'shared/ReactTypes';\n\nfunction getWrappedName(\n  outerType: mixed,\n  innerType: any,\n  wrapperName: string,\n): string {\n  const functionName = innerType.displayName || innerType.name || '';\n  return (\n    (outerType: any).displayName ||\n    (functionName !== '' ? `${wrapperName}(${functionName})` : wrapperName)\n  );\n}\n\nfunction getContextName(type: ReactContext<any>) {\n  return type.displayName || 'Context';\n}\n\nfunction getComponentName(type: mixed): string | null {\n  if (type == null) {\n    // Host root, text node or just invalid type.\n    return null;\n  }\n  if (__DEV__) {\n    if (typeof (type: any).tag === 'number') {\n      console.error(\n        'Received an unexpected object in getComponentName(). ' +\n          'This is likely a bug in React. Please file an issue.',\n      );\n    }\n  }\n  if (typeof type === 'function') {\n    return (type: any).displayName || type.name || null;\n  }\n  if (typeof type === 'string') {\n    return type;\n  }\n  switch (type) {\n    case REACT_FRAGMENT_TYPE:\n      return 'Fragment';\n    case REACT_PORTAL_TYPE:\n      return 'Portal';\n    case REACT_PROFILER_TYPE:\n      return 'Profiler';\n    case REACT_STRICT_MODE_TYPE:\n      return 'StrictMode';\n    case REACT_SUSPENSE_TYPE:\n      return 'Suspense';\n    case REACT_SUSPENSE_LIST_TYPE:\n      return 'SuspenseList';\n  }\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_CONTEXT_TYPE:\n        const context: ReactContext<any> = (type: any);\n        return getContextName(context) + '.Consumer';\n      case REACT_PROVIDER_TYPE:\n        const provider: ReactProviderType<any> = (type: any);\n        return getContextName(provider._context) + '.Provider';\n      case REACT_FORWARD_REF_TYPE:\n        return getWrappedName(type, type.render, 'ForwardRef');\n      case REACT_MEMO_TYPE:\n        return getComponentName(type.type);\n      case REACT_BLOCK_TYPE:\n        return getComponentName(type._render);\n      case REACT_LAZY_TYPE: {\n        const lazyComponent: LazyComponent<any, any> = (type: any);\n        const payload = lazyComponent._payload;\n        const init = lazyComponent._init;\n        try {\n          return getComponentName(init(payload));\n        } catch (x) {\n          return null;\n        }\n      }\n    }\n  }\n  return null;\n}\n\nexport default getComponentName;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nexport type Flags = number;\n\n// Don't change these two values. They're used by React Dev Tools.\nexport const NoFlags = /*                      */ 0b000000000000000000;\nexport const PerformedWork = /*                */ 0b000000000000000001;\n\n// You can change the rest (and add more).\nexport const Placement = /*                    */ 0b000000000000000010;\nexport const Update = /*                       */ 0b000000000000000100;\nexport const PlacementAndUpdate = /*           */ 0b000000000000000110;\nexport const Deletion = /*                     */ 0b000000000000001000;\nexport const ContentReset = /*                 */ 0b000000000000010000;\nexport const Callback = /*                     */ 0b000000000000100000;\nexport const DidCapture = /*                   */ 0b000000000001000000;\nexport const Ref = /*                          */ 0b000000000010000000;\nexport const Snapshot = /*                     */ 0b000000000100000000;\nexport const Passive = /*                      */ 0b000000001000000000;\n// TODO (effects) Remove this bit once the new reconciler is synced to the old.\nexport const PassiveUnmountPendingDev = /*     */ 0b000010000000000000;\nexport const Hydrating = /*                    */ 0b000000010000000000;\nexport const HydratingAndUpdate = /*           */ 0b000000010000000100;\n\n// Passive & Update & Callback & Ref & Snapshot\nexport const LifecycleEffectMask = /*          */ 0b000000001110100100;\n\n// Union of all host effects\nexport const HostEffectMask = /*               */ 0b000000011111111111;\n\n// These are not really side effects, but we still reuse this field.\nexport const Incomplete = /*                   */ 0b000000100000000000;\nexport const ShouldCapture = /*                */ 0b000001000000000000;\nexport const ForceUpdateForLegacySuspense = /* */ 0b000100000000000000;\n\n// Static tags describe aspects of a fiber that are not specific to a render,\n// e.g. a fiber uses a passive effect (even if there are no updates on this particular render).\n// This enables us to defer more work in the unmount case,\n// since we can defer traversing the tree during layout to look for Passive effects,\n// and instead rely on the static flag as a signal that there may be cleanup work.\nexport const PassiveStatic = /*                */ 0b001000000000000000;\n\n// Union of side effect groupings as pertains to subtreeFlags\nexport const BeforeMutationMask = /*           */ 0b000000001100001010;\nexport const MutationMask = /*                 */ 0b000000010010011110;\nexport const LayoutMask = /*                   */ 0b000000000010100100;\nexport const PassiveMask = /*                  */ 0b000000001000001000;\n\n// Union of tags that don't get reset on clones.\n// This allows certain concepts to persist without recalculting them,\n// e.g. whether a subtree contains passive effects or portals.\nexport const StaticMask = /*                   */ 0b001000000000000000;\n\n// These flags allow us to traverse to fibers that have effects on mount\n// without traversing the entire tree after every commit for\n// double invoking\nexport const MountLayoutDev = /*               */ 0b010000000000000000;\nexport const MountPassiveDev = /*              */ 0b100000000000000000;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport typeof * as FeatureFlagsType from 'shared/ReactFeatureFlags';\nimport typeof * as ExportsType from './ReactFeatureFlags.native-oss';\n\nexport const debugRenderPhaseSideEffectsForStrictMode = false;\nexport const enableDebugTracing = false;\nexport const enableSchedulingProfiler = false;\nexport const replayFailedUnitOfWorkWithInvokeGuardedCallback = __DEV__;\nexport const warnAboutDeprecatedLifecycles = true;\nexport const enableProfilerTimer = __PROFILE__;\nexport const enableProfilerCommitHooks = false;\nexport const enableSchedulerTracing = __PROFILE__;\nexport const enableSuspenseServerRenderer = false;\nexport const enableSelectiveHydration = false;\nexport const enableBlocksAPI = false;\nexport const enableLazyElements = false;\nexport const disableJavaScriptURLs = false;\nexport const disableInputAttributeSyncing = false;\nexport const enableSchedulerDebugging = false;\nexport const enableFundamentalAPI = false;\nexport const enableScopeAPI = false;\nexport const enableCreateEventHandleAPI = false;\nexport const warnAboutUnmockedScheduler = false;\nexport const enableSuspenseCallback = false;\nexport const warnAboutDefaultPropsOnFunctionComponents = false;\nexport const warnAboutStringRefs = false;\nexport const disableLegacyContext = false;\nexport const disableSchedulerTimeoutBasedOnReactExpirationTime = false;\nexport const enableTrustedTypesIntegration = false;\nexport const disableTextareaChildren = false;\nexport const disableModulePatternComponents = false;\nexport const warnUnstableRenderSubtreeIntoContainer = false;\nexport const warnAboutSpreadingKeyToJSX = false;\nexport const enableComponentStackLocations = false;\nexport const enableLegacyFBSupport = false;\nexport const enableFilterEmptyStringAttributesDOM = false;\nexport const skipUnmountedBoundaries = false;\n\nexport const enableNewReconciler = false;\nexport const deferRenderPhaseUpdateToNextBatch = true;\nexport const decoupleUpdatePriorityFromScheduler = false;\nexport const enableDiscreteEventFlushingChange = false;\n\nexport const enableDoubleInvokingEffects = false;\n\n// Flow magic to verify the exports of this file match the original version.\n// eslint-disable-next-line no-unused-vars\ntype Check<_X, Y: _X, X: Y = _X> = null;\n// eslint-disable-next-line no-unused-expressions\n(null: Check<ExportsType, FeatureFlagsType>);\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactInternalTypes';\nimport type {Container, SuspenseInstance} from './ReactFiberHostConfig';\nimport type {SuspenseState} from './ReactFiberSuspenseComponent.old';\n\nimport invariant from 'shared/invariant';\n\nimport {get as getInstance} from 'shared/ReactInstanceMap';\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\nimport getComponentName from 'shared/getComponentName';\nimport {\n  ClassComponent,\n  HostComponent,\n  HostRoot,\n  HostPortal,\n  HostText,\n  FundamentalComponent,\n  SuspenseComponent,\n} from './ReactWorkTags';\nimport {NoFlags, Placement, Hydrating} from './ReactFiberFlags';\nimport {enableFundamentalAPI} from 'shared/ReactFeatureFlags';\n\nconst ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\n\nexport function getNearestMountedFiber(fiber: Fiber): null | Fiber {\n  let node = fiber;\n  let nearestMounted = fiber;\n  if (!fiber.alternate) {\n    // If there is no alternate, this might be a new tree that isn't inserted\n    // yet. If it is, then it will have a pending insertion effect on it.\n    let nextNode = node;\n    do {\n      node = nextNode;\n      if ((node.flags & (Placement | Hydrating)) !== NoFlags) {\n        // This is an insertion or in-progress hydration. The nearest possible\n        // mounted fiber is the parent but we need to continue to figure out\n        // if that one is still mounted.\n        nearestMounted = node.return;\n      }\n      nextNode = node.return;\n    } while (nextNode);\n  } else {\n    while (node.return) {\n      node = node.return;\n    }\n  }\n  if (node.tag === HostRoot) {\n    // TODO: Check if this was a nested HostRoot when used with\n    // renderContainerIntoSubtree.\n    return nearestMounted;\n  }\n  // If we didn't hit the root, that means that we're in an disconnected tree\n  // that has been unmounted.\n  return null;\n}\n\nexport function getSuspenseInstanceFromFiber(\n  fiber: Fiber,\n): null | SuspenseInstance {\n  if (fiber.tag === SuspenseComponent) {\n    let suspenseState: SuspenseState | null = fiber.memoizedState;\n    if (suspenseState === null) {\n      const current = fiber.alternate;\n      if (current !== null) {\n        suspenseState = current.memoizedState;\n      }\n    }\n    if (suspenseState !== null) {\n      return suspenseState.dehydrated;\n    }\n  }\n  return null;\n}\n\nexport function getContainerFromFiber(fiber: Fiber): null | Container {\n  return fiber.tag === HostRoot\n    ? (fiber.stateNode.containerInfo: Container)\n    : null;\n}\n\nexport function isFiberMounted(fiber: Fiber): boolean {\n  return getNearestMountedFiber(fiber) === fiber;\n}\n\nexport function isMounted(component: React$Component<any, any>): boolean {\n  if (__DEV__) {\n    const owner = (ReactCurrentOwner.current: any);\n    if (owner !== null && owner.tag === ClassComponent) {\n      const ownerFiber: Fiber = owner;\n      const instance = ownerFiber.stateNode;\n      if (!instance._warnedAboutRefsInRender) {\n        console.error(\n          '%s is accessing isMounted inside its render() function. ' +\n            'render() should be a pure function of props and state. It should ' +\n            'never access something that requires stale data from the previous ' +\n            'render, such as refs. Move this logic to componentDidMount and ' +\n            'componentDidUpdate instead.',\n          getComponentName(ownerFiber.type) || 'A component',\n        );\n      }\n      instance._warnedAboutRefsInRender = true;\n    }\n  }\n\n  const fiber: ?Fiber = getInstance(component);\n  if (!fiber) {\n    return false;\n  }\n  return getNearestMountedFiber(fiber) === fiber;\n}\n\nfunction assertIsMounted(fiber) {\n  invariant(\n    getNearestMountedFiber(fiber) === fiber,\n    'Unable to find node on an unmounted component.',\n  );\n}\n\nexport function findCurrentFiberUsingSlowPath(fiber: Fiber): Fiber | null {\n  const alternate = fiber.alternate;\n  if (!alternate) {\n    // If there is no alternate, then we only need to check if it is mounted.\n    const nearestMounted = getNearestMountedFiber(fiber);\n    invariant(\n      nearestMounted !== null,\n      'Unable to find node on an unmounted component.',\n    );\n    if (nearestMounted !== fiber) {\n      return null;\n    }\n    return fiber;\n  }\n  // If we have two possible branches, we'll walk backwards up to the root\n  // to see what path the root points to. On the way we may hit one of the\n  // special cases and we'll deal with them.\n  let a: Fiber = fiber;\n  let b: Fiber = alternate;\n  while (true) {\n    const parentA = a.return;\n    if (parentA === null) {\n      // We're at the root.\n      break;\n    }\n    const parentB = parentA.alternate;\n    if (parentB === null) {\n      // There is no alternate. This is an unusual case. Currently, it only\n      // happens when a Suspense component is hidden. An extra fragment fiber\n      // is inserted in between the Suspense fiber and its children. Skip\n      // over this extra fragment fiber and proceed to the next parent.\n      const nextParent = parentA.return;\n      if (nextParent !== null) {\n        a = b = nextParent;\n        continue;\n      }\n      // If there's no parent, we're at the root.\n      break;\n    }\n\n    // If both copies of the parent fiber point to the same child, we can\n    // assume that the child is current. This happens when we bailout on low\n    // priority: the bailed out fiber's child reuses the current child.\n    if (parentA.child === parentB.child) {\n      let child = parentA.child;\n      while (child) {\n        if (child === a) {\n          // We've determined that A is the current branch.\n          assertIsMounted(parentA);\n          return fiber;\n        }\n        if (child === b) {\n          // We've determined that B is the current branch.\n          assertIsMounted(parentA);\n          return alternate;\n        }\n        child = child.sibling;\n      }\n      // We should never have an alternate for any mounting node. So the only\n      // way this could possibly happen is if this was unmounted, if at all.\n      invariant(false, 'Unable to find node on an unmounted component.');\n    }\n\n    if (a.return !== b.return) {\n      // The return pointer of A and the return pointer of B point to different\n      // fibers. We assume that return pointers never criss-cross, so A must\n      // belong to the child set of A.return, and B must belong to the child\n      // set of B.return.\n      a = parentA;\n      b = parentB;\n    } else {\n      // The return pointers point to the same fiber. We'll have to use the\n      // default, slow path: scan the child sets of each parent alternate to see\n      // which child belongs to which set.\n      //\n      // Search parent A's child set\n      let didFindChild = false;\n      let child = parentA.child;\n      while (child) {\n        if (child === a) {\n          didFindChild = true;\n          a = parentA;\n          b = parentB;\n          break;\n        }\n        if (child === b) {\n          didFindChild = true;\n          b = parentA;\n          a = parentB;\n          break;\n        }\n        child = child.sibling;\n      }\n      if (!didFindChild) {\n        // Search parent B's child set\n        child = parentB.child;\n        while (child) {\n          if (child === a) {\n            didFindChild = true;\n            a = parentB;\n            b = parentA;\n            break;\n          }\n          if (child === b) {\n            didFindChild = true;\n            b = parentB;\n            a = parentA;\n            break;\n          }\n          child = child.sibling;\n        }\n        invariant(\n          didFindChild,\n          'Child was not found in either parent set. This indicates a bug ' +\n            'in React related to the return pointer. Please file an issue.',\n        );\n      }\n    }\n\n    invariant(\n      a.alternate === b,\n      \"Return fibers should always be each others' alternates. \" +\n        'This error is likely caused by a bug in React. Please file an issue.',\n    );\n  }\n  // If the root is not a host container, we're in a disconnected tree. I.e.\n  // unmounted.\n  invariant(\n    a.tag === HostRoot,\n    'Unable to find node on an unmounted component.',\n  );\n  if (a.stateNode.current === a) {\n    // We've determined that A is the current branch.\n    return fiber;\n  }\n  // Otherwise B has to be current branch.\n  return alternate;\n}\n\nexport function findCurrentHostFiber(parent: Fiber): Fiber | null {\n  const currentParent = findCurrentFiberUsingSlowPath(parent);\n  if (!currentParent) {\n    return null;\n  }\n\n  // Next we'll drill down this component to find the first HostComponent/Text.\n  let node: Fiber = currentParent;\n  while (true) {\n    if (node.tag === HostComponent || node.tag === HostText) {\n      return node;\n    } else if (node.child) {\n      node.child.return = node;\n      node = node.child;\n      continue;\n    }\n    if (node === currentParent) {\n      return null;\n    }\n    while (!node.sibling) {\n      if (!node.return || node.return === currentParent) {\n        return null;\n      }\n      node = node.return;\n    }\n    node.sibling.return = node.return;\n    node = node.sibling;\n  }\n  // Flow needs the return null here, but ESLint complains about it.\n  // eslint-disable-next-line no-unreachable\n  return null;\n}\n\nexport function findCurrentHostFiberWithNoPortals(parent: Fiber): Fiber | null {\n  const currentParent = findCurrentFiberUsingSlowPath(parent);\n  if (!currentParent) {\n    return null;\n  }\n\n  // Next we'll drill down this component to find the first HostComponent/Text.\n  let node: Fiber = currentParent;\n  while (true) {\n    if (\n      node.tag === HostComponent ||\n      node.tag === HostText ||\n      (enableFundamentalAPI && node.tag === FundamentalComponent)\n    ) {\n      return node;\n    } else if (node.child && node.tag !== HostPortal) {\n      node.child.return = node;\n      node = node.child;\n      continue;\n    }\n    if (node === currentParent) {\n      return null;\n    }\n    while (!node.sibling) {\n      if (!node.return || node.return === currentParent) {\n        return null;\n      }\n      node = node.return;\n    }\n    node.sibling.return = node.return;\n    node = node.sibling;\n  }\n  // Flow needs the return null here, but ESLint complains about it.\n  // eslint-disable-next-line no-unreachable\n  return null;\n}\n\nexport function isFiberSuspenseAndTimedOut(fiber: Fiber): boolean {\n  const memoizedState = fiber.memoizedState;\n  return (\n    fiber.tag === SuspenseComponent &&\n    memoizedState !== null &&\n    memoizedState.dehydrated === null\n  );\n}\n\nexport function doesFiberContain(\n  parentFiber: Fiber,\n  childFiber: Fiber,\n): boolean {\n  let node = childFiber;\n  const parentFiberAlternate = parentFiber.alternate;\n  while (node !== null) {\n    if (node === parentFiber || node === parentFiberAlternate) {\n      return true;\n    }\n    node = node.return;\n  }\n  return false;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\n// Modules provided by RN:\nimport {\n  deepDiffer,\n  flattenStyle,\n} from 'react-native/Libraries/ReactPrivate/ReactNativePrivateInterface';\n\nimport type {AttributeConfiguration} from './ReactNativeTypes';\n\nconst emptyObject = {};\n\n/**\n * Create a payload that contains all the updates between two sets of props.\n *\n * These helpers are all encapsulated into a single module, because they use\n * mutation as a performance optimization which leads to subtle shared\n * dependencies between the code paths. To avoid this mutable state leaking\n * across modules, I've kept them isolated to this module.\n */\n\ntype NestedNode = Array<NestedNode> | Object;\n\n// Tracks removed keys\nlet removedKeys = null;\nlet removedKeyCount = 0;\n\nconst deepDifferOptions = {\n  unsafelyIgnoreFunctions: true,\n};\n\nfunction defaultDiffer(prevProp: mixed, nextProp: mixed): boolean {\n  if (typeof nextProp !== 'object' || nextProp === null) {\n    // Scalars have already been checked for equality\n    return true;\n  } else {\n    // For objects and arrays, the default diffing algorithm is a deep compare\n    return deepDiffer(prevProp, nextProp, deepDifferOptions);\n  }\n}\n\nfunction restoreDeletedValuesInNestedArray(\n  updatePayload: Object,\n  node: NestedNode,\n  validAttributes: AttributeConfiguration<>,\n) {\n  if (Array.isArray(node)) {\n    let i = node.length;\n    while (i-- && removedKeyCount > 0) {\n      restoreDeletedValuesInNestedArray(\n        updatePayload,\n        node[i],\n        validAttributes,\n      );\n    }\n  } else if (node && removedKeyCount > 0) {\n    const obj = node;\n    for (const propKey in removedKeys) {\n      if (!removedKeys[propKey]) {\n        continue;\n      }\n      let nextProp = obj[propKey];\n      if (nextProp === undefined) {\n        continue;\n      }\n\n      const attributeConfig = validAttributes[propKey];\n      if (!attributeConfig) {\n        continue; // not a valid native prop\n      }\n\n      if (typeof nextProp === 'function') {\n        nextProp = true;\n      }\n      if (typeof nextProp === 'undefined') {\n        nextProp = null;\n      }\n\n      if (typeof attributeConfig !== 'object') {\n        // case: !Object is the default case\n        updatePayload[propKey] = nextProp;\n      } else if (\n        typeof attributeConfig.diff === 'function' ||\n        typeof attributeConfig.process === 'function'\n      ) {\n        // case: CustomAttributeConfiguration\n        const nextValue =\n          typeof attributeConfig.process === 'function'\n            ? attributeConfig.process(nextProp)\n            : nextProp;\n        updatePayload[propKey] = nextValue;\n      }\n      removedKeys[propKey] = false;\n      removedKeyCount--;\n    }\n  }\n}\n\nfunction diffNestedArrayProperty(\n  updatePayload: null | Object,\n  prevArray: Array<NestedNode>,\n  nextArray: Array<NestedNode>,\n  validAttributes: AttributeConfiguration<>,\n): null | Object {\n  const minLength =\n    prevArray.length < nextArray.length ? prevArray.length : nextArray.length;\n  let i;\n  for (i = 0; i < minLength; i++) {\n    // Diff any items in the array in the forward direction. Repeated keys\n    // will be overwritten by later values.\n    updatePayload = diffNestedProperty(\n      updatePayload,\n      prevArray[i],\n      nextArray[i],\n      validAttributes,\n    );\n  }\n  for (; i < prevArray.length; i++) {\n    // Clear out all remaining properties.\n    updatePayload = clearNestedProperty(\n      updatePayload,\n      prevArray[i],\n      validAttributes,\n    );\n  }\n  for (; i < nextArray.length; i++) {\n    // Add all remaining properties.\n    updatePayload = addNestedProperty(\n      updatePayload,\n      nextArray[i],\n      validAttributes,\n    );\n  }\n  return updatePayload;\n}\n\nfunction diffNestedProperty(\n  updatePayload: null | Object,\n  prevProp: NestedNode,\n  nextProp: NestedNode,\n  validAttributes: AttributeConfiguration<>,\n): null | Object {\n  if (!updatePayload && prevProp === nextProp) {\n    // If no properties have been added, then we can bail out quickly on object\n    // equality.\n    return updatePayload;\n  }\n\n  if (!prevProp || !nextProp) {\n    if (nextProp) {\n      return addNestedProperty(updatePayload, nextProp, validAttributes);\n    }\n    if (prevProp) {\n      return clearNestedProperty(updatePayload, prevProp, validAttributes);\n    }\n    return updatePayload;\n  }\n\n  if (!Array.isArray(prevProp) && !Array.isArray(nextProp)) {\n    // Both are leaves, we can diff the leaves.\n    return diffProperties(updatePayload, prevProp, nextProp, validAttributes);\n  }\n\n  if (Array.isArray(prevProp) && Array.isArray(nextProp)) {\n    // Both are arrays, we can diff the arrays.\n    return diffNestedArrayProperty(\n      updatePayload,\n      prevProp,\n      nextProp,\n      validAttributes,\n    );\n  }\n\n  if (Array.isArray(prevProp)) {\n    return diffProperties(\n      updatePayload,\n      // $FlowFixMe - We know that this is always an object when the input is.\n      flattenStyle(prevProp),\n      // $FlowFixMe - We know that this isn't an array because of above flow.\n      nextProp,\n      validAttributes,\n    );\n  }\n\n  return diffProperties(\n    updatePayload,\n    prevProp,\n    // $FlowFixMe - We know that this is always an object when the input is.\n    flattenStyle(nextProp),\n    validAttributes,\n  );\n}\n\n/**\n * addNestedProperty takes a single set of props and valid attribute\n * attribute configurations. It processes each prop and adds it to the\n * updatePayload.\n */\nfunction addNestedProperty(\n  updatePayload: null | Object,\n  nextProp: NestedNode,\n  validAttributes: AttributeConfiguration<>,\n) {\n  if (!nextProp) {\n    return updatePayload;\n  }\n\n  if (!Array.isArray(nextProp)) {\n    // Add each property of the leaf.\n    return addProperties(updatePayload, nextProp, validAttributes);\n  }\n\n  for (let i = 0; i < nextProp.length; i++) {\n    // Add all the properties of the array.\n    updatePayload = addNestedProperty(\n      updatePayload,\n      nextProp[i],\n      validAttributes,\n    );\n  }\n\n  return updatePayload;\n}\n\n/**\n * clearNestedProperty takes a single set of props and valid attributes. It\n * adds a null sentinel to the updatePayload, for each prop key.\n */\nfunction clearNestedProperty(\n  updatePayload: null | Object,\n  prevProp: NestedNode,\n  validAttributes: AttributeConfiguration<>,\n): null | Object {\n  if (!prevProp) {\n    return updatePayload;\n  }\n\n  if (!Array.isArray(prevProp)) {\n    // Add each property of the leaf.\n    return clearProperties(updatePayload, prevProp, validAttributes);\n  }\n\n  for (let i = 0; i < prevProp.length; i++) {\n    // Add all the properties of the array.\n    updatePayload = clearNestedProperty(\n      updatePayload,\n      prevProp[i],\n      validAttributes,\n    );\n  }\n  return updatePayload;\n}\n\n/**\n * diffProperties takes two sets of props and a set of valid attributes\n * and write to updatePayload the values that changed or were deleted.\n * If no updatePayload is provided, a new one is created and returned if\n * anything changed.\n */\nfunction diffProperties(\n  updatePayload: null | Object,\n  prevProps: Object,\n  nextProps: Object,\n  validAttributes: AttributeConfiguration<>,\n): null | Object {\n  let attributeConfig;\n  let nextProp;\n  let prevProp;\n\n  for (const propKey in nextProps) {\n    attributeConfig = validAttributes[propKey];\n    if (!attributeConfig) {\n      continue; // not a valid native prop\n    }\n\n    prevProp = prevProps[propKey];\n    nextProp = nextProps[propKey];\n\n    // functions are converted to booleans as markers that the associated\n    // events should be sent from native.\n    if (typeof nextProp === 'function') {\n      nextProp = (true: any);\n      // If nextProp is not a function, then don't bother changing prevProp\n      // since nextProp will win and go into the updatePayload regardless.\n      if (typeof prevProp === 'function') {\n        prevProp = (true: any);\n      }\n    }\n\n    // An explicit value of undefined is treated as a null because it overrides\n    // any other preceding value.\n    if (typeof nextProp === 'undefined') {\n      nextProp = (null: any);\n      if (typeof prevProp === 'undefined') {\n        prevProp = (null: any);\n      }\n    }\n\n    if (removedKeys) {\n      removedKeys[propKey] = false;\n    }\n\n    if (updatePayload && updatePayload[propKey] !== undefined) {\n      // Something else already triggered an update to this key because another\n      // value diffed. Since we're now later in the nested arrays our value is\n      // more important so we need to calculate it and override the existing\n      // value. It doesn't matter if nothing changed, we'll set it anyway.\n\n      // Pattern match on: attributeConfig\n      if (typeof attributeConfig !== 'object') {\n        // case: !Object is the default case\n        updatePayload[propKey] = nextProp;\n      } else if (\n        typeof attributeConfig.diff === 'function' ||\n        typeof attributeConfig.process === 'function'\n      ) {\n        // case: CustomAttributeConfiguration\n        const nextValue =\n          typeof attributeConfig.process === 'function'\n            ? attributeConfig.process(nextProp)\n            : nextProp;\n        updatePayload[propKey] = nextValue;\n      }\n      continue;\n    }\n\n    if (prevProp === nextProp) {\n      continue; // nothing changed\n    }\n\n    // Pattern match on: attributeConfig\n    if (typeof attributeConfig !== 'object') {\n      // case: !Object is the default case\n      if (defaultDiffer(prevProp, nextProp)) {\n        // a normal leaf has changed\n        (updatePayload || (updatePayload = {}))[propKey] = nextProp;\n      }\n    } else if (\n      typeof attributeConfig.diff === 'function' ||\n      typeof attributeConfig.process === 'function'\n    ) {\n      // case: CustomAttributeConfiguration\n      const shouldUpdate =\n        prevProp === undefined ||\n        (typeof attributeConfig.diff === 'function'\n          ? attributeConfig.diff(prevProp, nextProp)\n          : defaultDiffer(prevProp, nextProp));\n      if (shouldUpdate) {\n        const nextValue =\n          typeof attributeConfig.process === 'function'\n            ? attributeConfig.process(nextProp)\n            : nextProp;\n        (updatePayload || (updatePayload = {}))[propKey] = nextValue;\n      }\n    } else {\n      // default: fallthrough case when nested properties are defined\n      removedKeys = null;\n      removedKeyCount = 0;\n      // We think that attributeConfig is not CustomAttributeConfiguration at\n      // this point so we assume it must be AttributeConfiguration.\n      updatePayload = diffNestedProperty(\n        updatePayload,\n        prevProp,\n        nextProp,\n        ((attributeConfig: any): AttributeConfiguration<>),\n      );\n      if (removedKeyCount > 0 && updatePayload) {\n        restoreDeletedValuesInNestedArray(\n          updatePayload,\n          nextProp,\n          ((attributeConfig: any): AttributeConfiguration<>),\n        );\n        removedKeys = null;\n      }\n    }\n  }\n\n  // Also iterate through all the previous props to catch any that have been\n  // removed and make sure native gets the signal so it can reset them to the\n  // default.\n  for (const propKey in prevProps) {\n    if (nextProps[propKey] !== undefined) {\n      continue; // we've already covered this key in the previous pass\n    }\n    attributeConfig = validAttributes[propKey];\n    if (!attributeConfig) {\n      continue; // not a valid native prop\n    }\n\n    if (updatePayload && updatePayload[propKey] !== undefined) {\n      // This was already updated to a diff result earlier.\n      continue;\n    }\n\n    prevProp = prevProps[propKey];\n    if (prevProp === undefined) {\n      continue; // was already empty anyway\n    }\n    // Pattern match on: attributeConfig\n    if (\n      typeof attributeConfig !== 'object' ||\n      typeof attributeConfig.diff === 'function' ||\n      typeof attributeConfig.process === 'function'\n    ) {\n      // case: CustomAttributeConfiguration | !Object\n      // Flag the leaf property for removal by sending a sentinel.\n      (updatePayload || (updatePayload = {}))[propKey] = null;\n      if (!removedKeys) {\n        removedKeys = {};\n      }\n      if (!removedKeys[propKey]) {\n        removedKeys[propKey] = true;\n        removedKeyCount++;\n      }\n    } else {\n      // default:\n      // This is a nested attribute configuration where all the properties\n      // were removed so we need to go through and clear out all of them.\n      updatePayload = clearNestedProperty(\n        updatePayload,\n        prevProp,\n        ((attributeConfig: any): AttributeConfiguration<>),\n      );\n    }\n  }\n  return updatePayload;\n}\n\n/**\n * addProperties adds all the valid props to the payload after being processed.\n */\nfunction addProperties(\n  updatePayload: null | Object,\n  props: Object,\n  validAttributes: AttributeConfiguration<>,\n): null | Object {\n  // TODO: Fast path\n  return diffProperties(updatePayload, emptyObject, props, validAttributes);\n}\n\n/**\n * clearProperties clears all the previous props by adding a null sentinel\n * to the payload for each valid key.\n */\nfunction clearProperties(\n  updatePayload: null | Object,\n  prevProps: Object,\n  validAttributes: AttributeConfiguration<>,\n): null | Object {\n  // TODO: Fast path\n  return diffProperties(updatePayload, prevProps, emptyObject, validAttributes);\n}\n\nexport function create(\n  props: Object,\n  validAttributes: AttributeConfiguration<>,\n): null | Object {\n  return addProperties(\n    null, // updatePayload\n    props,\n    validAttributes,\n  );\n}\n\nexport function diff(\n  prevProps: Object,\n  nextProps: Object,\n  validAttributes: AttributeConfiguration<>,\n): null | Object {\n  return diffProperties(\n    null, // updatePayload\n    prevProps,\n    nextProps,\n    validAttributes,\n  );\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\n/**\n * In the future, we should cleanup callbacks by cancelling them instead of\n * using this.\n */\nexport function mountSafeCallback_NOT_REALLY_SAFE(\n  context: any,\n  callback: ?Function,\n): any {\n  return function() {\n    if (!callback) {\n      return undefined;\n    }\n    // This protects against createClass() components.\n    // We don't know if there is code depending on it.\n    // We intentionally don't use isMounted() because even accessing\n    // isMounted property on a React ES6 class will trigger a warning.\n    if (typeof context.__isMounted === 'boolean') {\n      if (!context.__isMounted) {\n        return undefined;\n      }\n    }\n\n    // FIXME: there used to be other branches that protected\n    // against unmounted host components. But RN host components don't\n    // define isMounted() anymore, so those checks didn't do anything.\n\n    // They caused false positive warning noise so we removed them:\n    // https://github.com/facebook/react-native/issues/18868#issuecomment-413579095\n\n    // However, this means that the callback is NOT guaranteed to be safe\n    // for host components. The solution we should implement is to make\n    // UIManager.measure() and similar calls truly cancelable. Then we\n    // can change our own code calling them to cancel when something unmounts.\n\n    return callback.apply(context, arguments);\n  };\n}\n\nexport function throwOnStylesProp(component: any, props: any) {\n  if (props.styles !== undefined) {\n    const owner = component._owner || null;\n    const name = component.constructor.displayName;\n    let msg =\n      '`styles` is not a supported property of `' +\n      name +\n      '`, did ' +\n      'you mean `style` (singular)?';\n    if (owner && owner.constructor && owner.constructor.displayName) {\n      msg +=\n        '\\n\\nCheck the `' +\n        owner.constructor.displayName +\n        '` parent ' +\n        ' component.';\n    }\n    throw new Error(msg);\n  }\n}\n\nexport function warnForStyleProps(props: any, validAttributes: any) {\n  if (__DEV__) {\n    for (const key in validAttributes.style) {\n      if (!(validAttributes[key] || props[key] === undefined)) {\n        console.error(\n          'You are setting the style `{ %s' +\n            ': ... }` as a prop. You ' +\n            'should nest it in a style object. ' +\n            'E.g. `{ style: { %s' +\n            ': ... } }`',\n          key,\n          key,\n        );\n      }\n    }\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {ElementRef} from 'react';\nimport type {\n  HostComponent,\n  MeasureInWindowOnSuccessCallback,\n  MeasureLayoutOnSuccessCallback,\n  MeasureOnSuccessCallback,\n  NativeMethods,\n  ReactNativeBaseComponentViewConfig,\n} from './ReactNativeTypes';\nimport type {Instance} from './ReactNativeHostConfig';\n\n// Modules provided by RN:\nimport {\n  TextInputState,\n  UIManager,\n} from 'react-native/Libraries/ReactPrivate/ReactNativePrivateInterface';\n\nimport {create} from './ReactNativeAttributePayload';\nimport {\n  mountSafeCallback_NOT_REALLY_SAFE,\n  warnForStyleProps,\n} from './NativeMethodsMixinUtils';\n\nclass ReactNativeFiberHostComponent {\n  _children: Array<Instance | number>;\n  _nativeTag: number;\n  _internalFiberInstanceHandleDEV: Object;\n  viewConfig: ReactNativeBaseComponentViewConfig<>;\n\n  constructor(\n    tag: number,\n    viewConfig: ReactNativeBaseComponentViewConfig<>,\n    internalInstanceHandleDEV: Object,\n  ) {\n    this._nativeTag = tag;\n    this._children = [];\n    this.viewConfig = viewConfig;\n    if (__DEV__) {\n      this._internalFiberInstanceHandleDEV = internalInstanceHandleDEV;\n    }\n  }\n\n  blur() {\n    TextInputState.blurTextInput(this);\n  }\n\n  focus() {\n    TextInputState.focusTextInput(this);\n  }\n\n  measure(callback: MeasureOnSuccessCallback) {\n    UIManager.measure(\n      this._nativeTag,\n      mountSafeCallback_NOT_REALLY_SAFE(this, callback),\n    );\n  }\n\n  measureInWindow(callback: MeasureInWindowOnSuccessCallback) {\n    UIManager.measureInWindow(\n      this._nativeTag,\n      mountSafeCallback_NOT_REALLY_SAFE(this, callback),\n    );\n  }\n\n  measureLayout(\n    relativeToNativeNode: number | ElementRef<HostComponent<mixed>>,\n    onSuccess: MeasureLayoutOnSuccessCallback,\n    onFail?: () => void /* currently unused */,\n  ) {\n    let relativeNode: ?number;\n\n    if (typeof relativeToNativeNode === 'number') {\n      // Already a node handle\n      relativeNode = relativeToNativeNode;\n    } else {\n      const nativeNode: ReactNativeFiberHostComponent = (relativeToNativeNode: any);\n      if (nativeNode._nativeTag) {\n        relativeNode = nativeNode._nativeTag;\n      }\n    }\n\n    if (relativeNode == null) {\n      if (__DEV__) {\n        console.error(\n          'Warning: ref.measureLayout must be called with a node handle or a ref to a native component.',\n        );\n      }\n\n      return;\n    }\n\n    UIManager.measureLayout(\n      this._nativeTag,\n      relativeNode,\n      mountSafeCallback_NOT_REALLY_SAFE(this, onFail),\n      mountSafeCallback_NOT_REALLY_SAFE(this, onSuccess),\n    );\n  }\n\n  setNativeProps(nativeProps: Object) {\n    if (__DEV__) {\n      warnForStyleProps(nativeProps, this.viewConfig.validAttributes);\n    }\n\n    const updatePayload = create(nativeProps, this.viewConfig.validAttributes);\n\n    // Avoid the overhead of bridge calls if there's no update.\n    // This is an expensive no-op for Android, and causes an unnecessary\n    // view invalidation for certain components (eg RCTTextInput) on iOS.\n    if (updatePayload != null) {\n      UIManager.updateView(\n        this._nativeTag,\n        this.viewConfig.uiViewClassName,\n        updatePayload,\n      );\n    }\n  }\n}\n\n// eslint-disable-next-line no-unused-expressions\n(ReactNativeFiberHostComponent.prototype: NativeMethods);\n\nexport default ReactNativeFiberHostComponent;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport invariant from 'shared/invariant';\n\n// Renderers that don't support hydration\n// can re-export everything from this module.\n\nfunction shim(...args: any) {\n  invariant(\n    false,\n    'The current renderer does not support hydration. ' +\n      'This error is likely caused by a bug in React. ' +\n      'Please file an issue.',\n  );\n}\n\n// Hydration (when unsupported)\nexport type SuspenseInstance = mixed;\nexport const supportsHydration = false;\nexport const canHydrateInstance = shim;\nexport const canHydrateTextInstance = shim;\nexport const canHydrateSuspenseInstance = shim;\nexport const isSuspenseInstancePending = shim;\nexport const isSuspenseInstanceFallback = shim;\nexport const registerSuspenseInstanceRetry = shim;\nexport const getNextHydratableSibling = shim;\nexport const getFirstHydratableChild = shim;\nexport const hydrateInstance = shim;\nexport const hydrateTextInstance = shim;\nexport const hydrateSuspenseInstance = shim;\nexport const getNextHydratableInstanceAfterSuspenseInstance = shim;\nexport const commitHydratedContainer = shim;\nexport const commitHydratedSuspenseInstance = shim;\nexport const clearSuspenseBoundary = shim;\nexport const clearSuspenseBoundaryFromContainer = shim;\nexport const didNotMatchHydratedContainerTextInstance = shim;\nexport const didNotMatchHydratedTextInstance = shim;\nexport const didNotHydrateContainerInstance = shim;\nexport const didNotHydrateInstance = shim;\nexport const didNotFindHydratableContainerInstance = shim;\nexport const didNotFindHydratableContainerTextInstance = shim;\nexport const didNotFindHydratableContainerSuspenseInstance = shim;\nexport const didNotFindHydratableInstance = shim;\nexport const didNotFindHydratableTextInstance = shim;\nexport const didNotFindHydratableSuspenseInstance = shim;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {TouchedViewDataAtPoint} from './ReactNativeTypes';\n\nimport invariant from 'shared/invariant';\n\n// Modules provided by RN:\nimport {\n  ReactNativeViewConfigRegistry,\n  UIManager,\n  deepFreezeAndThrowOnMutationInDev,\n} from 'react-native/Libraries/ReactPrivate/ReactNativePrivateInterface';\n\nimport {create, diff} from './ReactNativeAttributePayload';\nimport {\n  precacheFiberNode,\n  uncacheFiberNode,\n  updateFiberProps,\n} from './ReactNativeComponentTree';\nimport ReactNativeFiberHostComponent from './ReactNativeFiberHostComponent';\n\nconst {get: getViewConfigForType} = ReactNativeViewConfigRegistry;\n\nexport type Type = string;\nexport type Props = Object;\nexport type Container = number;\nexport type Instance = ReactNativeFiberHostComponent;\nexport type TextInstance = number;\nexport type HydratableInstance = Instance | TextInstance;\nexport type PublicInstance = Instance;\nexport type HostContext = $ReadOnly<{|\n  isInAParentText: boolean,\n|}>;\nexport type UpdatePayload = Object; // Unused\nexport type ChildSet = void; // Unused\n\nexport type TimeoutHandle = TimeoutID;\nexport type NoTimeout = -1;\nexport type OpaqueIDType = void;\n\nexport type RendererInspectionConfig = $ReadOnly<{|\n  // Deprecated. Replaced with getInspectorDataForViewAtPoint.\n  getInspectorDataForViewTag?: (tag: number) => Object,\n  getInspectorDataForViewAtPoint?: (\n    inspectedView: Object,\n    locationX: number,\n    locationY: number,\n    callback: (viewData: TouchedViewDataAtPoint) => mixed,\n  ) => void,\n|}>;\n\nconst UPDATE_SIGNAL = {};\nif (__DEV__) {\n  Object.freeze(UPDATE_SIGNAL);\n}\n\n// Counter for uniquely identifying views.\n// % 10 === 1 means it is a rootTag.\n// % 2 === 0 means it is a Fabric tag.\nlet nextReactTag = 3;\nfunction allocateTag() {\n  let tag = nextReactTag;\n  if (tag % 10 === 1) {\n    tag += 2;\n  }\n  nextReactTag = tag + 2;\n  return tag;\n}\n\nfunction recursivelyUncacheFiberNode(node: Instance | TextInstance) {\n  if (typeof node === 'number') {\n    // Leaf node (eg text)\n    uncacheFiberNode(node);\n  } else {\n    uncacheFiberNode((node: any)._nativeTag);\n\n    (node: any)._children.forEach(recursivelyUncacheFiberNode);\n  }\n}\n\nexport * from 'react-reconciler/src/ReactFiberHostConfigWithNoPersistence';\nexport * from 'react-reconciler/src/ReactFiberHostConfigWithNoHydration';\nexport * from 'react-reconciler/src/ReactFiberHostConfigWithNoScopes';\nexport * from 'react-reconciler/src/ReactFiberHostConfigWithNoTestSelectors';\n\nexport function appendInitialChild(\n  parentInstance: Instance,\n  child: Instance | TextInstance,\n): void {\n  parentInstance._children.push(child);\n}\n\nexport function createInstance(\n  type: string,\n  props: Props,\n  rootContainerInstance: Container,\n  hostContext: HostContext,\n  internalInstanceHandle: Object,\n): Instance {\n  const tag = allocateTag();\n  const viewConfig = getViewConfigForType(type);\n\n  if (__DEV__) {\n    for (const key in viewConfig.validAttributes) {\n      if (props.hasOwnProperty(key)) {\n        deepFreezeAndThrowOnMutationInDev(props[key]);\n      }\n    }\n  }\n\n  const updatePayload = create(props, viewConfig.validAttributes);\n\n  UIManager.createView(\n    tag, // reactTag\n    viewConfig.uiViewClassName, // viewName\n    rootContainerInstance, // rootTag\n    updatePayload, // props\n  );\n\n  const component = new ReactNativeFiberHostComponent(\n    tag,\n    viewConfig,\n    internalInstanceHandle,\n  );\n\n  precacheFiberNode(internalInstanceHandle, tag);\n  updateFiberProps(tag, props);\n\n  // Not sure how to avoid this cast. Flow is okay if the component is defined\n  // in the same file but if it's external it can't see the types.\n  return ((component: any): Instance);\n}\n\nexport function createTextInstance(\n  text: string,\n  rootContainerInstance: Container,\n  hostContext: HostContext,\n  internalInstanceHandle: Object,\n): TextInstance {\n  invariant(\n    hostContext.isInAParentText,\n    'Text strings must be rendered within a <Text> component.',\n  );\n\n  const tag = allocateTag();\n\n  UIManager.createView(\n    tag, // reactTag\n    'RCTRawText', // viewName\n    rootContainerInstance, // rootTag\n    {text: text}, // props\n  );\n\n  precacheFiberNode(internalInstanceHandle, tag);\n\n  return tag;\n}\n\nexport function finalizeInitialChildren(\n  parentInstance: Instance,\n  type: string,\n  props: Props,\n  rootContainerInstance: Container,\n  hostContext: HostContext,\n): boolean {\n  // Don't send a no-op message over the bridge.\n  if (parentInstance._children.length === 0) {\n    return false;\n  }\n\n  // Map from child objects to native tags.\n  // Either way we need to pass a copy of the Array to prevent it from being frozen.\n  const nativeTags = parentInstance._children.map(child =>\n    typeof child === 'number'\n      ? child // Leaf node (eg text)\n      : child._nativeTag,\n  );\n\n  UIManager.setChildren(\n    parentInstance._nativeTag, // containerTag\n    nativeTags, // reactTags\n  );\n\n  return false;\n}\n\nexport function getRootHostContext(\n  rootContainerInstance: Container,\n): HostContext {\n  return {isInAParentText: false};\n}\n\nexport function getChildHostContext(\n  parentHostContext: HostContext,\n  type: string,\n  rootContainerInstance: Container,\n): HostContext {\n  const prevIsInAParentText = parentHostContext.isInAParentText;\n  const isInAParentText =\n    type === 'AndroidTextInput' || // Android\n    type === 'RCTMultilineTextInputView' || // iOS\n    type === 'RCTSinglelineTextInputView' || // iOS\n    type === 'RCTText' ||\n    type === 'RCTVirtualText';\n\n  if (prevIsInAParentText !== isInAParentText) {\n    return {isInAParentText};\n  } else {\n    return parentHostContext;\n  }\n}\n\nexport function getPublicInstance(instance: Instance): * {\n  return instance;\n}\n\nexport function prepareForCommit(containerInfo: Container): null | Object {\n  // Noop\n  return null;\n}\n\nexport function prepareUpdate(\n  instance: Instance,\n  type: string,\n  oldProps: Props,\n  newProps: Props,\n  rootContainerInstance: Container,\n  hostContext: HostContext,\n): null | Object {\n  return UPDATE_SIGNAL;\n}\n\nexport function resetAfterCommit(containerInfo: Container): void {\n  // Noop\n}\n\nexport const isPrimaryRenderer = true;\nexport const warnsIfNotActing = true;\n\nexport const scheduleTimeout = setTimeout;\nexport const cancelTimeout = clearTimeout;\nexport const noTimeout = -1;\n\nexport function shouldSetTextContent(type: string, props: Props): boolean {\n  // TODO (bvaughn) Revisit this decision.\n  // Always returning false simplifies the createInstance() implementation,\n  // But creates an additional child Fiber for raw text children.\n  // No additional native views are created though.\n  // It's not clear to me which is better so I'm deferring for now.\n  // More context @ github.com/facebook/react/pull/8560#discussion_r92111303\n  return false;\n}\n\n// -------------------\n//     Mutation\n// -------------------\n\nexport const supportsMutation = true;\n\nexport function appendChild(\n  parentInstance: Instance,\n  child: Instance | TextInstance,\n): void {\n  const childTag = typeof child === 'number' ? child : child._nativeTag;\n  const children = parentInstance._children;\n  const index = children.indexOf(child);\n\n  if (index >= 0) {\n    children.splice(index, 1);\n    children.push(child);\n\n    UIManager.manageChildren(\n      parentInstance._nativeTag, // containerTag\n      [index], // moveFromIndices\n      [children.length - 1], // moveToIndices\n      [], // addChildReactTags\n      [], // addAtIndices\n      [], // removeAtIndices\n    );\n  } else {\n    children.push(child);\n\n    UIManager.manageChildren(\n      parentInstance._nativeTag, // containerTag\n      [], // moveFromIndices\n      [], // moveToIndices\n      [childTag], // addChildReactTags\n      [children.length - 1], // addAtIndices\n      [], // removeAtIndices\n    );\n  }\n}\n\nexport function appendChildToContainer(\n  parentInstance: Container,\n  child: Instance | TextInstance,\n): void {\n  const childTag = typeof child === 'number' ? child : child._nativeTag;\n  UIManager.setChildren(\n    parentInstance, // containerTag\n    [childTag], // reactTags\n  );\n}\n\nexport function commitTextUpdate(\n  textInstance: TextInstance,\n  oldText: string,\n  newText: string,\n): void {\n  UIManager.updateView(\n    textInstance, // reactTag\n    'RCTRawText', // viewName\n    {text: newText}, // props\n  );\n}\n\nexport function commitMount(\n  instance: Instance,\n  type: string,\n  newProps: Props,\n  internalInstanceHandle: Object,\n): void {\n  // Noop\n}\n\nexport function commitUpdate(\n  instance: Instance,\n  updatePayloadTODO: Object,\n  type: string,\n  oldProps: Props,\n  newProps: Props,\n  internalInstanceHandle: Object,\n): void {\n  const viewConfig = instance.viewConfig;\n\n  updateFiberProps(instance._nativeTag, newProps);\n\n  const updatePayload = diff(oldProps, newProps, viewConfig.validAttributes);\n\n  // Avoid the overhead of bridge calls if there's no update.\n  // This is an expensive no-op for Android, and causes an unnecessary\n  // view invalidation for certain components (eg RCTTextInput) on iOS.\n  if (updatePayload != null) {\n    UIManager.updateView(\n      instance._nativeTag, // reactTag\n      viewConfig.uiViewClassName, // viewName\n      updatePayload, // props\n    );\n  }\n}\n\nexport function insertBefore(\n  parentInstance: Instance,\n  child: Instance | TextInstance,\n  beforeChild: Instance | TextInstance,\n): void {\n  const children = (parentInstance: any)._children;\n  const index = children.indexOf(child);\n\n  // Move existing child or add new child?\n  if (index >= 0) {\n    children.splice(index, 1);\n    const beforeChildIndex = children.indexOf(beforeChild);\n    children.splice(beforeChildIndex, 0, child);\n\n    UIManager.manageChildren(\n      (parentInstance: any)._nativeTag, // containerID\n      [index], // moveFromIndices\n      [beforeChildIndex], // moveToIndices\n      [], // addChildReactTags\n      [], // addAtIndices\n      [], // removeAtIndices\n    );\n  } else {\n    const beforeChildIndex = children.indexOf(beforeChild);\n    children.splice(beforeChildIndex, 0, child);\n\n    const childTag = typeof child === 'number' ? child : child._nativeTag;\n\n    UIManager.manageChildren(\n      (parentInstance: any)._nativeTag, // containerID\n      [], // moveFromIndices\n      [], // moveToIndices\n      [childTag], // addChildReactTags\n      [beforeChildIndex], // addAtIndices\n      [], // removeAtIndices\n    );\n  }\n}\n\nexport function insertInContainerBefore(\n  parentInstance: Container,\n  child: Instance | TextInstance,\n  beforeChild: Instance | TextInstance,\n): void {\n  // TODO (bvaughn): Remove this check when...\n  // We create a wrapper object for the container in ReactNative render()\n  // Or we refactor to remove wrapper objects entirely.\n  // For more info on pros/cons see PR #8560 description.\n  invariant(\n    typeof parentInstance !== 'number',\n    'Container does not support insertBefore operation',\n  );\n}\n\nexport function removeChild(\n  parentInstance: Instance,\n  child: Instance | TextInstance,\n): void {\n  recursivelyUncacheFiberNode(child);\n  const children = parentInstance._children;\n  const index = children.indexOf(child);\n\n  children.splice(index, 1);\n\n  UIManager.manageChildren(\n    parentInstance._nativeTag, // containerID\n    [], // moveFromIndices\n    [], // moveToIndices\n    [], // addChildReactTags\n    [], // addAtIndices\n    [index], // removeAtIndices\n  );\n}\n\nexport function removeChildFromContainer(\n  parentInstance: Container,\n  child: Instance | TextInstance,\n): void {\n  recursivelyUncacheFiberNode(child);\n  UIManager.manageChildren(\n    parentInstance, // containerID\n    [], // moveFromIndices\n    [], // moveToIndices\n    [], // addChildReactTags\n    [], // addAtIndices\n    [0], // removeAtIndices\n  );\n}\n\nexport function resetTextContent(instance: Instance): void {\n  // Noop\n}\n\nexport function hideInstance(instance: Instance): void {\n  const viewConfig = instance.viewConfig;\n  const updatePayload = create(\n    {style: {display: 'none'}},\n    viewConfig.validAttributes,\n  );\n  UIManager.updateView(\n    instance._nativeTag,\n    viewConfig.uiViewClassName,\n    updatePayload,\n  );\n}\n\nexport function hideTextInstance(textInstance: TextInstance): void {\n  throw new Error('Not yet implemented.');\n}\n\nexport function unhideInstance(instance: Instance, props: Props): void {\n  const viewConfig = instance.viewConfig;\n  const updatePayload = diff(\n    {...props, style: [props.style, {display: 'none'}]},\n    props,\n    viewConfig.validAttributes,\n  );\n  UIManager.updateView(\n    instance._nativeTag,\n    viewConfig.uiViewClassName,\n    updatePayload,\n  );\n}\n\nexport function clearContainer(container: Container): void {\n  // TODO Implement this for React Native\n  // UIManager does not expose a \"remove all\" type method.\n}\n\nexport function unhideTextInstance(\n  textInstance: TextInstance,\n  text: string,\n): void {\n  throw new Error('Not yet implemented.');\n}\n\nexport function getFundamentalComponentInstance(fundamentalInstance: any) {\n  throw new Error('Not yet implemented.');\n}\n\nexport function mountFundamentalComponent(fundamentalInstance: any) {\n  throw new Error('Not yet implemented.');\n}\n\nexport function shouldUpdateFundamentalComponent(fundamentalInstance: any) {\n  throw new Error('Not yet implemented.');\n}\n\nexport function updateFundamentalComponent(fundamentalInstance: any) {\n  throw new Error('Not yet implemented.');\n}\n\nexport function unmountFundamentalComponent(fundamentalInstance: any) {\n  throw new Error('Not yet implemented.');\n}\n\nexport function getInstanceFromNode(node: any) {\n  throw new Error('Not yet implemented.');\n}\n\nexport function isOpaqueHydratingObject(value: mixed): boolean {\n  throw new Error('Not yet implemented');\n}\n\nexport function makeOpaqueHydratingObject(\n  attemptToReadValue: () => void,\n): OpaqueIDType {\n  throw new Error('Not yet implemented.');\n}\n\nexport function makeClientId(): OpaqueIDType {\n  throw new Error('Not yet implemented');\n}\n\nexport function makeClientIdInDEV(warnOnAccessInDEV: () => void): OpaqueIDType {\n  throw new Error('Not yet implemented');\n}\n\nexport function beforeActiveInstanceBlur() {\n  // noop\n}\n\nexport function afterActiveInstanceBlur() {\n  // noop\n}\n\nexport function preparePortalMount(portalInstance: Instance): void {\n  // noop\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Source} from 'shared/ReactElementType';\nimport type {LazyComponent} from 'react/src/ReactLazy';\n\nimport {enableComponentStackLocations} from 'shared/ReactFeatureFlags';\n\nimport {\n  REACT_SUSPENSE_TYPE,\n  REACT_SUSPENSE_LIST_TYPE,\n  REACT_FORWARD_REF_TYPE,\n  REACT_MEMO_TYPE,\n  REACT_BLOCK_TYPE,\n  REACT_LAZY_TYPE,\n} from 'shared/ReactSymbols';\n\nimport {disableLogs, reenableLogs} from 'shared/ConsolePatchingDev';\n\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\n\nconst {ReactCurrentDispatcher} = ReactSharedInternals;\n\nlet prefix;\nexport function describeBuiltInComponentFrame(\n  name: string,\n  source: void | null | Source,\n  ownerFn: void | null | Function,\n): string {\n  if (enableComponentStackLocations) {\n    if (prefix === undefined) {\n      // Extract the VM specific prefix used by each line.\n      try {\n        throw Error();\n      } catch (x) {\n        const match = x.stack.trim().match(/\\n( *(at )?)/);\n        prefix = (match && match[1]) || '';\n      }\n    }\n    // We use the prefix to ensure our stacks line up with native stack frames.\n    return '\\n' + prefix + name;\n  } else {\n    let ownerName = null;\n    if (__DEV__ && ownerFn) {\n      ownerName = ownerFn.displayName || ownerFn.name || null;\n    }\n    return describeComponentFrame(name, source, ownerName);\n  }\n}\n\nlet reentry = false;\nlet componentFrameCache;\nif (__DEV__) {\n  const PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\n  componentFrameCache = new PossiblyWeakMap();\n}\n\nexport function describeNativeComponentFrame(\n  fn: Function,\n  construct: boolean,\n): string {\n  // If something asked for a stack inside a fake render, it should get ignored.\n  if (!fn || reentry) {\n    return '';\n  }\n\n  if (__DEV__) {\n    const frame = componentFrameCache.get(fn);\n    if (frame !== undefined) {\n      return frame;\n    }\n  }\n\n  let control;\n\n  reentry = true;\n  const previousPrepareStackTrace = Error.prepareStackTrace;\n  // $FlowFixMe It does accept undefined.\n  Error.prepareStackTrace = undefined;\n  let previousDispatcher;\n  if (__DEV__) {\n    previousDispatcher = ReactCurrentDispatcher.current;\n    // Set the dispatcher in DEV because this might be call in the render function\n    // for warnings.\n    ReactCurrentDispatcher.current = null;\n    disableLogs();\n  }\n  try {\n    // This should throw.\n    if (construct) {\n      // Something should be setting the props in the constructor.\n      const Fake = function() {\n        throw Error();\n      };\n      // $FlowFixMe\n      Object.defineProperty(Fake.prototype, 'props', {\n        set: function() {\n          // We use a throwing setter instead of frozen or non-writable props\n          // because that won't throw in a non-strict mode function.\n          throw Error();\n        },\n      });\n      if (typeof Reflect === 'object' && Reflect.construct) {\n        // We construct a different control for this case to include any extra\n        // frames added by the construct call.\n        try {\n          Reflect.construct(Fake, []);\n        } catch (x) {\n          control = x;\n        }\n        Reflect.construct(fn, [], Fake);\n      } else {\n        try {\n          Fake.call();\n        } catch (x) {\n          control = x;\n        }\n        fn.call(Fake.prototype);\n      }\n    } else {\n      try {\n        throw Error();\n      } catch (x) {\n        control = x;\n      }\n      fn();\n    }\n  } catch (sample) {\n    // This is inlined manually because closure doesn't do it for us.\n    if (sample && control && typeof sample.stack === 'string') {\n      // This extracts the first frame from the sample that isn't also in the control.\n      // Skipping one frame that we assume is the frame that calls the two.\n      const sampleLines = sample.stack.split('\\n');\n      const controlLines = control.stack.split('\\n');\n      let s = sampleLines.length - 1;\n      let c = controlLines.length - 1;\n      while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {\n        // We expect at least one stack frame to be shared.\n        // Typically this will be the root most one. However, stack frames may be\n        // cut off due to maximum stack limits. In this case, one maybe cut off\n        // earlier than the other. We assume that the sample is longer or the same\n        // and there for cut off earlier. So we should find the root most frame in\n        // the sample somewhere in the control.\n        c--;\n      }\n      for (; s >= 1 && c >= 0; s--, c--) {\n        // Next we find the first one that isn't the same which should be the\n        // frame that called our sample function and the control.\n        if (sampleLines[s] !== controlLines[c]) {\n          // In V8, the first line is describing the message but other VMs don't.\n          // If we're about to return the first line, and the control is also on the same\n          // line, that's a pretty good indicator that our sample threw at same line as\n          // the control. I.e. before we entered the sample frame. So we ignore this result.\n          // This can happen if you passed a class to function component, or non-function.\n          if (s !== 1 || c !== 1) {\n            do {\n              s--;\n              c--;\n              // We may still have similar intermediate frames from the construct call.\n              // The next one that isn't the same should be our match though.\n              if (c < 0 || sampleLines[s] !== controlLines[c]) {\n                // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\n                const frame = '\\n' + sampleLines[s].replace(' at new ', ' at ');\n                if (__DEV__) {\n                  if (typeof fn === 'function') {\n                    componentFrameCache.set(fn, frame);\n                  }\n                }\n                // Return the line we found.\n                return frame;\n              }\n            } while (s >= 1 && c >= 0);\n          }\n          break;\n        }\n      }\n    }\n  } finally {\n    reentry = false;\n    if (__DEV__) {\n      ReactCurrentDispatcher.current = previousDispatcher;\n      reenableLogs();\n    }\n    Error.prepareStackTrace = previousPrepareStackTrace;\n  }\n  // Fallback to just using the name if we couldn't make it throw.\n  const name = fn ? fn.displayName || fn.name : '';\n  const syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';\n  if (__DEV__) {\n    if (typeof fn === 'function') {\n      componentFrameCache.set(fn, syntheticFrame);\n    }\n  }\n  return syntheticFrame;\n}\n\nconst BEFORE_SLASH_RE = /^(.*)[\\\\\\/]/;\n\nfunction describeComponentFrame(\n  name: null | string,\n  source: void | null | Source,\n  ownerName: null | string,\n) {\n  let sourceInfo = '';\n  if (__DEV__ && source) {\n    const path = source.fileName;\n    let fileName = path.replace(BEFORE_SLASH_RE, '');\n    // In DEV, include code for a common special case:\n    // prefer \"folder/index.js\" instead of just \"index.js\".\n    if (/^index\\./.test(fileName)) {\n      const match = path.match(BEFORE_SLASH_RE);\n      if (match) {\n        const pathBeforeSlash = match[1];\n        if (pathBeforeSlash) {\n          const folderName = pathBeforeSlash.replace(BEFORE_SLASH_RE, '');\n          fileName = folderName + '/' + fileName;\n        }\n      }\n    }\n    sourceInfo = ' (at ' + fileName + ':' + source.lineNumber + ')';\n  } else if (ownerName) {\n    sourceInfo = ' (created by ' + ownerName + ')';\n  }\n  return '\\n    in ' + (name || 'Unknown') + sourceInfo;\n}\n\nexport function describeClassComponentFrame(\n  ctor: Function,\n  source: void | null | Source,\n  ownerFn: void | null | Function,\n): string {\n  if (enableComponentStackLocations) {\n    return describeNativeComponentFrame(ctor, true);\n  } else {\n    return describeFunctionComponentFrame(ctor, source, ownerFn);\n  }\n}\n\nexport function describeFunctionComponentFrame(\n  fn: Function,\n  source: void | null | Source,\n  ownerFn: void | null | Function,\n): string {\n  if (enableComponentStackLocations) {\n    return describeNativeComponentFrame(fn, false);\n  } else {\n    if (!fn) {\n      return '';\n    }\n    const name = fn.displayName || fn.name || null;\n    let ownerName = null;\n    if (__DEV__ && ownerFn) {\n      ownerName = ownerFn.displayName || ownerFn.name || null;\n    }\n    return describeComponentFrame(name, source, ownerName);\n  }\n}\n\nfunction shouldConstruct(Component: Function) {\n  const prototype = Component.prototype;\n  return !!(prototype && prototype.isReactComponent);\n}\n\nexport function describeUnknownElementTypeFrameInDEV(\n  type: any,\n  source: void | null | Source,\n  ownerFn: void | null | Function,\n): string {\n  if (!__DEV__) {\n    return '';\n  }\n  if (type == null) {\n    return '';\n  }\n  if (typeof type === 'function') {\n    if (enableComponentStackLocations) {\n      return describeNativeComponentFrame(type, shouldConstruct(type));\n    } else {\n      return describeFunctionComponentFrame(type, source, ownerFn);\n    }\n  }\n  if (typeof type === 'string') {\n    return describeBuiltInComponentFrame(type, source, ownerFn);\n  }\n  switch (type) {\n    case REACT_SUSPENSE_TYPE:\n      return describeBuiltInComponentFrame('Suspense', source, ownerFn);\n    case REACT_SUSPENSE_LIST_TYPE:\n      return describeBuiltInComponentFrame('SuspenseList', source, ownerFn);\n  }\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_FORWARD_REF_TYPE:\n        return describeFunctionComponentFrame(type.render, source, ownerFn);\n      case REACT_MEMO_TYPE:\n        // Memo may contain any component type so we recursively resolve it.\n        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);\n      case REACT_BLOCK_TYPE:\n        return describeFunctionComponentFrame(type._render, source, ownerFn);\n      case REACT_LAZY_TYPE: {\n        const lazyComponent: LazyComponent<any, any> = (type: any);\n        const payload = lazyComponent._payload;\n        const init = lazyComponent._init;\n        try {\n          // Lazy may contain any component type so we recursively resolve it.\n          return describeUnknownElementTypeFrameInDEV(\n            init(payload),\n            source,\n            ownerFn,\n          );\n        } catch (x) {}\n      }\n    }\n  }\n  return '';\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nconst loggedTypeFailures = {};\n\nimport {describeUnknownElementTypeFrameInDEV} from 'shared/ReactComponentStackFrame';\n\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\n\nconst ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n\nfunction setCurrentlyValidatingElement(element) {\n  if (__DEV__) {\n    if (element) {\n      const owner = element._owner;\n      const stack = describeUnknownElementTypeFrameInDEV(\n        element.type,\n        element._source,\n        owner ? owner.type : null,\n      );\n      ReactDebugCurrentFrame.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame.setExtraStackFrame(null);\n    }\n  }\n}\n\nexport default function checkPropTypes(\n  typeSpecs: Object,\n  values: Object,\n  location: string,\n  componentName: ?string,\n  element?: any,\n): void {\n  if (__DEV__) {\n    // $FlowFixMe This is okay but Flow doesn't know it.\n    const has = Function.call.bind(Object.prototype.hasOwnProperty);\n    for (const typeSpecName in typeSpecs) {\n      if (has(typeSpecs, typeSpecName)) {\n        let error;\n        // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\n            const err = Error(\n              (componentName || 'React class') +\n                ': ' +\n                location +\n                ' type `' +\n                typeSpecName +\n                '` is invalid; ' +\n                'it must be a function, usually from the `prop-types` package, but received `' +\n                typeof typeSpecs[typeSpecName] +\n                '`.' +\n                'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.',\n            );\n            err.name = 'Invariant Violation';\n            throw err;\n          }\n          error = typeSpecs[typeSpecName](\n            values,\n            typeSpecName,\n            componentName,\n            location,\n            null,\n            'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED',\n          );\n        } catch (ex) {\n          error = ex;\n        }\n        if (error && !(error instanceof Error)) {\n          setCurrentlyValidatingElement(element);\n          console.error(\n            '%s: type specification of %s' +\n              ' `%s` is invalid; the type checker ' +\n              'function must return `null` or an `Error` but returned a %s. ' +\n              'You may have forgotten to pass an argument to the type checker ' +\n              'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' +\n              'shape all require an argument).',\n            componentName || 'React class',\n            location,\n            typeSpecName,\n            typeof error,\n          );\n          setCurrentlyValidatingElement(null);\n        }\n        if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error.message] = true;\n          setCurrentlyValidatingElement(element);\n          console.error('Failed %s type: %s', location, error.message);\n          setCurrentlyValidatingElement(null);\n        }\n      }\n    }\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactInternalTypes';\n\nexport type StackCursor<T> = {|current: T|};\n\nconst valueStack: Array<any> = [];\n\nlet fiberStack: Array<Fiber | null>;\n\nif (__DEV__) {\n  fiberStack = [];\n}\n\nlet index = -1;\n\nfunction createCursor<T>(defaultValue: T): StackCursor<T> {\n  return {\n    current: defaultValue,\n  };\n}\n\nfunction isEmpty(): boolean {\n  return index === -1;\n}\n\nfunction pop<T>(cursor: StackCursor<T>, fiber: Fiber): void {\n  if (index < 0) {\n    if (__DEV__) {\n      console.error('Unexpected pop.');\n    }\n    return;\n  }\n\n  if (__DEV__) {\n    if (fiber !== fiberStack[index]) {\n      console.error('Unexpected Fiber popped.');\n    }\n  }\n\n  cursor.current = valueStack[index];\n\n  valueStack[index] = null;\n\n  if (__DEV__) {\n    fiberStack[index] = null;\n  }\n\n  index--;\n}\n\nfunction push<T>(cursor: StackCursor<T>, value: T, fiber: Fiber): void {\n  index++;\n\n  valueStack[index] = cursor.current;\n\n  if (__DEV__) {\n    fiberStack[index] = fiber;\n  }\n\n  cursor.current = value;\n}\n\nfunction checkThatStackIsEmpty() {\n  if (__DEV__) {\n    if (index !== -1) {\n      console.error(\n        'Expected an empty stack. Something was not reset properly.',\n      );\n    }\n  }\n}\n\nfunction resetStackAfterFatalErrorInDev() {\n  if (__DEV__) {\n    index = -1;\n    valueStack.length = 0;\n    fiberStack.length = 0;\n  }\n}\n\nexport {\n  createCursor,\n  isEmpty,\n  pop,\n  push,\n  // DEV only:\n  checkThatStackIsEmpty,\n  resetStackAfterFatalErrorInDev,\n};\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactInternalTypes';\nimport type {StackCursor} from './ReactFiberStack.old';\n\nimport {isFiberMounted} from './ReactFiberTreeReflection';\nimport {disableLegacyContext} from 'shared/ReactFeatureFlags';\nimport {ClassComponent, HostRoot} from './ReactWorkTags';\nimport getComponentName from 'shared/getComponentName';\nimport invariant from 'shared/invariant';\nimport checkPropTypes from 'shared/checkPropTypes';\n\nimport {createCursor, push, pop} from './ReactFiberStack.old';\n\nlet warnedAboutMissingGetChildContext;\n\nif (__DEV__) {\n  warnedAboutMissingGetChildContext = {};\n}\n\nexport const emptyContextObject = {};\nif (__DEV__) {\n  Object.freeze(emptyContextObject);\n}\n\n// A cursor to the current merged context object on the stack.\nconst contextStackCursor: StackCursor<Object> = createCursor(\n  emptyContextObject,\n);\n// A cursor to a boolean indicating whether the context has changed.\nconst didPerformWorkStackCursor: StackCursor<boolean> = createCursor(false);\n// Keep track of the previous context object that was on the stack.\n// We use this to get access to the parent context after we have already\n// pushed the next context provider, and now need to merge their contexts.\nlet previousContext: Object = emptyContextObject;\n\nfunction getUnmaskedContext(\n  workInProgress: Fiber,\n  Component: Function,\n  didPushOwnContextIfProvider: boolean,\n): Object {\n  if (disableLegacyContext) {\n    return emptyContextObject;\n  } else {\n    if (didPushOwnContextIfProvider && isContextProvider(Component)) {\n      // If the fiber is a context provider itself, when we read its context\n      // we may have already pushed its own child context on the stack. A context\n      // provider should not \"see\" its own child context. Therefore we read the\n      // previous (parent) context instead for a context provider.\n      return previousContext;\n    }\n    return contextStackCursor.current;\n  }\n}\n\nfunction cacheContext(\n  workInProgress: Fiber,\n  unmaskedContext: Object,\n  maskedContext: Object,\n): void {\n  if (disableLegacyContext) {\n    return;\n  } else {\n    const instance = workInProgress.stateNode;\n    instance.__reactInternalMemoizedUnmaskedChildContext = unmaskedContext;\n    instance.__reactInternalMemoizedMaskedChildContext = maskedContext;\n  }\n}\n\nfunction getMaskedContext(\n  workInProgress: Fiber,\n  unmaskedContext: Object,\n): Object {\n  if (disableLegacyContext) {\n    return emptyContextObject;\n  } else {\n    const type = workInProgress.type;\n    const contextTypes = type.contextTypes;\n    if (!contextTypes) {\n      return emptyContextObject;\n    }\n\n    // Avoid recreating masked context unless unmasked context has changed.\n    // Failing to do this will result in unnecessary calls to componentWillReceiveProps.\n    // This may trigger infinite loops if componentWillReceiveProps calls setState.\n    const instance = workInProgress.stateNode;\n    if (\n      instance &&\n      instance.__reactInternalMemoizedUnmaskedChildContext === unmaskedContext\n    ) {\n      return instance.__reactInternalMemoizedMaskedChildContext;\n    }\n\n    const context = {};\n    for (const key in contextTypes) {\n      context[key] = unmaskedContext[key];\n    }\n\n    if (__DEV__) {\n      const name = getComponentName(type) || 'Unknown';\n      checkPropTypes(contextTypes, context, 'context', name);\n    }\n\n    // Cache unmasked context so we can avoid recreating masked context unless necessary.\n    // Context is created before the class component is instantiated so check for instance.\n    if (instance) {\n      cacheContext(workInProgress, unmaskedContext, context);\n    }\n\n    return context;\n  }\n}\n\nfunction hasContextChanged(): boolean {\n  if (disableLegacyContext) {\n    return false;\n  } else {\n    return didPerformWorkStackCursor.current;\n  }\n}\n\nfunction isContextProvider(type: Function): boolean {\n  if (disableLegacyContext) {\n    return false;\n  } else {\n    const childContextTypes = type.childContextTypes;\n    return childContextTypes !== null && childContextTypes !== undefined;\n  }\n}\n\nfunction popContext(fiber: Fiber): void {\n  if (disableLegacyContext) {\n    return;\n  } else {\n    pop(didPerformWorkStackCursor, fiber);\n    pop(contextStackCursor, fiber);\n  }\n}\n\nfunction popTopLevelContextObject(fiber: Fiber): void {\n  if (disableLegacyContext) {\n    return;\n  } else {\n    pop(didPerformWorkStackCursor, fiber);\n    pop(contextStackCursor, fiber);\n  }\n}\n\nfunction pushTopLevelContextObject(\n  fiber: Fiber,\n  context: Object,\n  didChange: boolean,\n): void {\n  if (disableLegacyContext) {\n    return;\n  } else {\n    invariant(\n      contextStackCursor.current === emptyContextObject,\n      'Unexpected context found on stack. ' +\n        'This error is likely caused by a bug in React. Please file an issue.',\n    );\n\n    push(contextStackCursor, context, fiber);\n    push(didPerformWorkStackCursor, didChange, fiber);\n  }\n}\n\nfunction processChildContext(\n  fiber: Fiber,\n  type: any,\n  parentContext: Object,\n): Object {\n  if (disableLegacyContext) {\n    return parentContext;\n  } else {\n    const instance = fiber.stateNode;\n    const childContextTypes = type.childContextTypes;\n\n    // TODO (bvaughn) Replace this behavior with an invariant() in the future.\n    // It has only been added in Fiber to match the (unintentional) behavior in Stack.\n    if (typeof instance.getChildContext !== 'function') {\n      if (__DEV__) {\n        const componentName = getComponentName(type) || 'Unknown';\n\n        if (!warnedAboutMissingGetChildContext[componentName]) {\n          warnedAboutMissingGetChildContext[componentName] = true;\n          console.error(\n            '%s.childContextTypes is specified but there is no getChildContext() method ' +\n              'on the instance. You can either define getChildContext() on %s or remove ' +\n              'childContextTypes from it.',\n            componentName,\n            componentName,\n          );\n        }\n      }\n      return parentContext;\n    }\n\n    const childContext = instance.getChildContext();\n    for (const contextKey in childContext) {\n      invariant(\n        contextKey in childContextTypes,\n        '%s.getChildContext(): key \"%s\" is not defined in childContextTypes.',\n        getComponentName(type) || 'Unknown',\n        contextKey,\n      );\n    }\n    if (__DEV__) {\n      const name = getComponentName(type) || 'Unknown';\n      checkPropTypes(childContextTypes, childContext, 'child context', name);\n    }\n\n    return {...parentContext, ...childContext};\n  }\n}\n\nfunction pushContextProvider(workInProgress: Fiber): boolean {\n  if (disableLegacyContext) {\n    return false;\n  } else {\n    const instance = workInProgress.stateNode;\n    // We push the context as early as possible to ensure stack integrity.\n    // If the instance does not exist yet, we will push null at first,\n    // and replace it on the stack later when invalidating the context.\n    const memoizedMergedChildContext =\n      (instance && instance.__reactInternalMemoizedMergedChildContext) ||\n      emptyContextObject;\n\n    // Remember the parent context so we can merge with it later.\n    // Inherit the parent's did-perform-work value to avoid inadvertently blocking updates.\n    previousContext = contextStackCursor.current;\n    push(contextStackCursor, memoizedMergedChildContext, workInProgress);\n    push(\n      didPerformWorkStackCursor,\n      didPerformWorkStackCursor.current,\n      workInProgress,\n    );\n\n    return true;\n  }\n}\n\nfunction invalidateContextProvider(\n  workInProgress: Fiber,\n  type: any,\n  didChange: boolean,\n): void {\n  if (disableLegacyContext) {\n    return;\n  } else {\n    const instance = workInProgress.stateNode;\n    invariant(\n      instance,\n      'Expected to have an instance by this point. ' +\n        'This error is likely caused by a bug in React. Please file an issue.',\n    );\n\n    if (didChange) {\n      // Merge parent and own context.\n      // Skip this if we're not updating due to sCU.\n      // This avoids unnecessarily recomputing memoized values.\n      const mergedContext = processChildContext(\n        workInProgress,\n        type,\n        previousContext,\n      );\n      instance.__reactInternalMemoizedMergedChildContext = mergedContext;\n\n      // Replace the old (or empty) context with the new one.\n      // It is important to unwind the context in the reverse order.\n      pop(didPerformWorkStackCursor, workInProgress);\n      pop(contextStackCursor, workInProgress);\n      // Now push the new context and mark that it has changed.\n      push(contextStackCursor, mergedContext, workInProgress);\n      push(didPerformWorkStackCursor, didChange, workInProgress);\n    } else {\n      pop(didPerformWorkStackCursor, workInProgress);\n      push(didPerformWorkStackCursor, didChange, workInProgress);\n    }\n  }\n}\n\nfunction findCurrentUnmaskedContext(fiber: Fiber): Object {\n  if (disableLegacyContext) {\n    return emptyContextObject;\n  } else {\n    // Currently this is only used with renderSubtreeIntoContainer; not sure if it\n    // makes sense elsewhere\n    invariant(\n      isFiberMounted(fiber) && fiber.tag === ClassComponent,\n      'Expected subtree parent to be a mounted class component. ' +\n        'This error is likely caused by a bug in React. Please file an issue.',\n    );\n\n    let node = fiber;\n    do {\n      switch (node.tag) {\n        case HostRoot:\n          return node.stateNode.context;\n        case ClassComponent: {\n          const Component = node.type;\n          if (isContextProvider(Component)) {\n            return node.stateNode.__reactInternalMemoizedMergedChildContext;\n          }\n          break;\n        }\n      }\n      node = node.return;\n    } while (node !== null);\n    invariant(\n      false,\n      'Found unexpected detached subtree parent. ' +\n        'This error is likely caused by a bug in React. Please file an issue.',\n    );\n  }\n}\n\nexport {\n  getUnmaskedContext,\n  cacheContext,\n  getMaskedContext,\n  hasContextChanged,\n  popContext,\n  popTopLevelContextObject,\n  pushTopLevelContextObject,\n  processChildContext,\n  isContextProvider,\n  pushContextProvider,\n  invalidateContextProvider,\n  findCurrentUnmaskedContext,\n};\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nexport type RootTag = 0 | 1 | 2;\n\nexport const LegacyRoot = 0;\nexport const BlockingRoot = 1;\nexport const ConcurrentRoot = 2;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport {enableProfilerTimer} from 'shared/ReactFeatureFlags';\n\nimport type {Fiber, FiberRoot, ReactPriorityLevel} from './ReactInternalTypes';\nimport type {ReactNodeList} from 'shared/ReactTypes';\n\nimport {DidCapture} from './ReactFiberFlags';\n\ndeclare var __REACT_DEVTOOLS_GLOBAL_HOOK__: Object | void;\n\nlet rendererID = null;\nlet injectedHook = null;\nlet hasLoggedError = false;\n\nexport const isDevToolsPresent =\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined';\n\nexport function injectInternals(internals: Object): boolean {\n  if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {\n    // No DevTools\n    return false;\n  }\n  const hook = __REACT_DEVTOOLS_GLOBAL_HOOK__;\n  if (hook.isDisabled) {\n    // This isn't a real property on the hook, but it can be set to opt out\n    // of DevTools integration and associated warnings and logs.\n    // https://github.com/facebook/react/issues/3877\n    return true;\n  }\n  if (!hook.supportsFiber) {\n    if (__DEV__) {\n      console.error(\n        'The installed version of React DevTools is too old and will not work ' +\n          'with the current version of React. Please update React DevTools. ' +\n          'https://reactjs.org/link/react-devtools',\n      );\n    }\n    // DevTools exists, even though it doesn't support Fiber.\n    return true;\n  }\n  try {\n    rendererID = hook.inject(internals);\n    // We have successfully injected, so now it is safe to set up hooks.\n    injectedHook = hook;\n  } catch (err) {\n    // Catch all errors because it is unsafe to throw during initialization.\n    if (__DEV__) {\n      console.error('React instrumentation encountered an error: %s.', err);\n    }\n  }\n  // DevTools exists\n  return true;\n}\n\nexport function onScheduleRoot(root: FiberRoot, children: ReactNodeList) {\n  if (__DEV__) {\n    if (\n      injectedHook &&\n      typeof injectedHook.onScheduleFiberRoot === 'function'\n    ) {\n      try {\n        injectedHook.onScheduleFiberRoot(rendererID, root, children);\n      } catch (err) {\n        if (__DEV__ && !hasLoggedError) {\n          hasLoggedError = true;\n          console.error('React instrumentation encountered an error: %s', err);\n        }\n      }\n    }\n  }\n}\n\nexport function onCommitRoot(\n  root: FiberRoot,\n  priorityLevel: ReactPriorityLevel,\n) {\n  if (injectedHook && typeof injectedHook.onCommitFiberRoot === 'function') {\n    try {\n      const didError = (root.current.flags & DidCapture) === DidCapture;\n      if (enableProfilerTimer) {\n        injectedHook.onCommitFiberRoot(\n          rendererID,\n          root,\n          priorityLevel,\n          didError,\n        );\n      } else {\n        injectedHook.onCommitFiberRoot(rendererID, root, undefined, didError);\n      }\n    } catch (err) {\n      if (__DEV__) {\n        if (!hasLoggedError) {\n          hasLoggedError = true;\n          console.error('React instrumentation encountered an error: %s', err);\n        }\n      }\n    }\n  }\n}\n\nexport function onCommitUnmount(fiber: Fiber) {\n  if (injectedHook && typeof injectedHook.onCommitFiberUnmount === 'function') {\n    try {\n      injectedHook.onCommitFiberUnmount(rendererID, fiber);\n    } catch (err) {\n      if (__DEV__) {\n        if (!hasLoggedError) {\n          hasLoggedError = true;\n          console.error('React instrumentation encountered an error: %s', err);\n        }\n      }\n    }\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {ReactPriorityLevel} from './ReactInternalTypes';\n\n// Intentionally not named imports because Rollup would use dynamic dispatch for\n// CommonJS interop named imports.\nimport * as Scheduler from 'scheduler';\nimport {__interactionsRef} from 'scheduler/tracing';\nimport {\n  enableSchedulerTracing,\n  decoupleUpdatePriorityFromScheduler,\n} from 'shared/ReactFeatureFlags';\nimport invariant from 'shared/invariant';\nimport {\n  SyncLanePriority,\n  getCurrentUpdateLanePriority,\n  setCurrentUpdateLanePriority,\n} from './ReactFiberLane';\n\nconst {\n  unstable_runWithPriority: Scheduler_runWithPriority,\n  unstable_scheduleCallback: Scheduler_scheduleCallback,\n  unstable_cancelCallback: Scheduler_cancelCallback,\n  unstable_shouldYield: Scheduler_shouldYield,\n  unstable_requestPaint: Scheduler_requestPaint,\n  unstable_now: Scheduler_now,\n  unstable_getCurrentPriorityLevel: Scheduler_getCurrentPriorityLevel,\n  unstable_ImmediatePriority: Scheduler_ImmediatePriority,\n  unstable_UserBlockingPriority: Scheduler_UserBlockingPriority,\n  unstable_NormalPriority: Scheduler_NormalPriority,\n  unstable_LowPriority: Scheduler_LowPriority,\n  unstable_IdlePriority: Scheduler_IdlePriority,\n} = Scheduler;\n\nif (enableSchedulerTracing) {\n  // Provide explicit error message when production+profiling bundle of e.g.\n  // react-dom is used with production (non-profiling) bundle of\n  // scheduler/tracing\n  invariant(\n    __interactionsRef != null && __interactionsRef.current != null,\n    'It is not supported to run the profiling version of a renderer (for ' +\n      'example, `react-dom/profiling`) without also replacing the ' +\n      '`scheduler/tracing` module with `scheduler/tracing-profiling`. Your ' +\n      'bundler might have a setting for aliasing both modules. Learn more at ' +\n      'https://reactjs.org/link/profiling',\n  );\n}\n\nexport type SchedulerCallback = (isSync: boolean) => SchedulerCallback | null;\n\ntype SchedulerCallbackOptions = {timeout?: number, ...};\n\nconst fakeCallbackNode = {};\n\n// Except for NoPriority, these correspond to Scheduler priorities. We use\n// ascending numbers so we can compare them like numbers. They start at 90 to\n// avoid clashing with Scheduler's priorities.\nexport const ImmediatePriority: ReactPriorityLevel = 99;\nexport const UserBlockingPriority: ReactPriorityLevel = 98;\nexport const NormalPriority: ReactPriorityLevel = 97;\nexport const LowPriority: ReactPriorityLevel = 96;\nexport const IdlePriority: ReactPriorityLevel = 95;\n// NoPriority is the absence of priority. Also React-only.\nexport const NoPriority: ReactPriorityLevel = 90;\n\nexport const shouldYield = Scheduler_shouldYield;\nexport const requestPaint =\n  // Fall back gracefully if we're running an older version of Scheduler.\n  Scheduler_requestPaint !== undefined ? Scheduler_requestPaint : () => {};\n\nlet syncQueue: Array<SchedulerCallback> | null = null;\nlet immediateQueueCallbackNode: mixed | null = null;\nlet isFlushingSyncQueue: boolean = false;\nconst initialTimeMs: number = Scheduler_now();\n\n// If the initial timestamp is reasonably small, use Scheduler's `now` directly.\n// This will be the case for modern browsers that support `performance.now`. In\n// older browsers, Scheduler falls back to `Date.now`, which returns a Unix\n// timestamp. In that case, subtract the module initialization time to simulate\n// the behavior of performance.now and keep our times small enough to fit\n// within 32 bits.\n// TODO: Consider lifting this into Scheduler.\nexport const now =\n  initialTimeMs < 10000 ? Scheduler_now : () => Scheduler_now() - initialTimeMs;\n\nexport function getCurrentPriorityLevel(): ReactPriorityLevel {\n  switch (Scheduler_getCurrentPriorityLevel()) {\n    case Scheduler_ImmediatePriority:\n      return ImmediatePriority;\n    case Scheduler_UserBlockingPriority:\n      return UserBlockingPriority;\n    case Scheduler_NormalPriority:\n      return NormalPriority;\n    case Scheduler_LowPriority:\n      return LowPriority;\n    case Scheduler_IdlePriority:\n      return IdlePriority;\n    default:\n      invariant(false, 'Unknown priority level.');\n  }\n}\n\nfunction reactPriorityToSchedulerPriority(reactPriorityLevel) {\n  switch (reactPriorityLevel) {\n    case ImmediatePriority:\n      return Scheduler_ImmediatePriority;\n    case UserBlockingPriority:\n      return Scheduler_UserBlockingPriority;\n    case NormalPriority:\n      return Scheduler_NormalPriority;\n    case LowPriority:\n      return Scheduler_LowPriority;\n    case IdlePriority:\n      return Scheduler_IdlePriority;\n    default:\n      invariant(false, 'Unknown priority level.');\n  }\n}\n\nexport function runWithPriority<T>(\n  reactPriorityLevel: ReactPriorityLevel,\n  fn: () => T,\n): T {\n  const priorityLevel = reactPriorityToSchedulerPriority(reactPriorityLevel);\n  return Scheduler_runWithPriority(priorityLevel, fn);\n}\n\nexport function scheduleCallback(\n  reactPriorityLevel: ReactPriorityLevel,\n  callback: SchedulerCallback,\n  options: SchedulerCallbackOptions | void | null,\n) {\n  const priorityLevel = reactPriorityToSchedulerPriority(reactPriorityLevel);\n  return Scheduler_scheduleCallback(priorityLevel, callback, options);\n}\n\nexport function scheduleSyncCallback(callback: SchedulerCallback) {\n  // Push this callback into an internal queue. We'll flush these either in\n  // the next tick, or earlier if something calls `flushSyncCallbackQueue`.\n  if (syncQueue === null) {\n    syncQueue = [callback];\n    // Flush the queue in the next tick, at the earliest.\n    immediateQueueCallbackNode = Scheduler_scheduleCallback(\n      Scheduler_ImmediatePriority,\n      flushSyncCallbackQueueImpl,\n    );\n  } else {\n    // Push onto existing queue. Don't need to schedule a callback because\n    // we already scheduled one when we created the queue.\n    syncQueue.push(callback);\n  }\n  return fakeCallbackNode;\n}\n\nexport function cancelCallback(callbackNode: mixed) {\n  if (callbackNode !== fakeCallbackNode) {\n    Scheduler_cancelCallback(callbackNode);\n  }\n}\n\nexport function flushSyncCallbackQueue(): boolean {\n  if (immediateQueueCallbackNode !== null) {\n    const node = immediateQueueCallbackNode;\n    immediateQueueCallbackNode = null;\n    Scheduler_cancelCallback(node);\n  }\n  return flushSyncCallbackQueueImpl();\n}\n\nfunction flushSyncCallbackQueueImpl() {\n  if (!isFlushingSyncQueue && syncQueue !== null) {\n    // Prevent re-entrancy.\n    isFlushingSyncQueue = true;\n    let i = 0;\n    if (decoupleUpdatePriorityFromScheduler) {\n      const previousLanePriority = getCurrentUpdateLanePriority();\n      try {\n        const isSync = true;\n        const queue = syncQueue;\n        setCurrentUpdateLanePriority(SyncLanePriority);\n        runWithPriority(ImmediatePriority, () => {\n          for (; i < queue.length; i++) {\n            let callback = queue[i];\n            do {\n              callback = callback(isSync);\n            } while (callback !== null);\n          }\n        });\n        syncQueue = null;\n      } catch (error) {\n        // If something throws, leave the remaining callbacks on the queue.\n        if (syncQueue !== null) {\n          syncQueue = syncQueue.slice(i + 1);\n        }\n        // Resume flushing in the next tick\n        Scheduler_scheduleCallback(\n          Scheduler_ImmediatePriority,\n          flushSyncCallbackQueue,\n        );\n        throw error;\n      } finally {\n        setCurrentUpdateLanePriority(previousLanePriority);\n        isFlushingSyncQueue = false;\n      }\n    } else {\n      try {\n        const isSync = true;\n        const queue = syncQueue;\n        runWithPriority(ImmediatePriority, () => {\n          for (; i < queue.length; i++) {\n            let callback = queue[i];\n            do {\n              callback = callback(isSync);\n            } while (callback !== null);\n          }\n        });\n        syncQueue = null;\n      } catch (error) {\n        // If something throws, leave the remaining callbacks on the queue.\n        if (syncQueue !== null) {\n          syncQueue = syncQueue.slice(i + 1);\n        }\n        // Resume flushing in the next tick\n        Scheduler_scheduleCallback(\n          Scheduler_ImmediatePriority,\n          flushSyncCallbackQueue,\n        );\n        throw error;\n      } finally {\n        isFlushingSyncQueue = false;\n      }\n    }\n    return true;\n  } else {\n    return false;\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {FiberRoot, ReactPriorityLevel} from './ReactInternalTypes';\n\nexport opaque type LanePriority =\n  | 0\n  | 1\n  | 2\n  | 3\n  | 4\n  | 5\n  | 6\n  | 7\n  | 8\n  | 9\n  | 10\n  | 11\n  | 12\n  | 13\n  | 14\n  | 15\n  | 16\n  | 17;\nexport opaque type Lanes = number;\nexport opaque type Lane = number;\nexport opaque type LaneMap<T> = Array<T>;\n\nimport invariant from 'shared/invariant';\n\nimport {\n  ImmediatePriority as ImmediateSchedulerPriority,\n  UserBlockingPriority as UserBlockingSchedulerPriority,\n  NormalPriority as NormalSchedulerPriority,\n  LowPriority as LowSchedulerPriority,\n  IdlePriority as IdleSchedulerPriority,\n  NoPriority as NoSchedulerPriority,\n} from './SchedulerWithReactIntegration.new';\n\nexport const SyncLanePriority: LanePriority = 15;\nexport const SyncBatchedLanePriority: LanePriority = 14;\n\nconst InputDiscreteHydrationLanePriority: LanePriority = 13;\nexport const InputDiscreteLanePriority: LanePriority = 12;\n\nconst InputContinuousHydrationLanePriority: LanePriority = 11;\nexport const InputContinuousLanePriority: LanePriority = 10;\n\nconst DefaultHydrationLanePriority: LanePriority = 9;\nexport const DefaultLanePriority: LanePriority = 8;\n\nconst TransitionHydrationPriority: LanePriority = 7;\nexport const TransitionPriority: LanePriority = 6;\n\nconst RetryLanePriority: LanePriority = 5;\n\nconst SelectiveHydrationLanePriority: LanePriority = 4;\n\nconst IdleHydrationLanePriority: LanePriority = 3;\nconst IdleLanePriority: LanePriority = 2;\n\nconst OffscreenLanePriority: LanePriority = 1;\n\nexport const NoLanePriority: LanePriority = 0;\n\nconst TotalLanes = 31;\n\nexport const NoLanes: Lanes = /*                        */ 0b0000000000000000000000000000000;\nexport const NoLane: Lane = /*                          */ 0b0000000000000000000000000000000;\n\nexport const SyncLane: Lane = /*                        */ 0b0000000000000000000000000000001;\nexport const SyncBatchedLane: Lane = /*                 */ 0b0000000000000000000000000000010;\n\nexport const InputDiscreteHydrationLane: Lane = /*      */ 0b0000000000000000000000000000100;\nconst InputDiscreteLanes: Lanes = /*                    */ 0b0000000000000000000000000011000;\n\nconst InputContinuousHydrationLane: Lane = /*           */ 0b0000000000000000000000000100000;\nconst InputContinuousLanes: Lanes = /*                  */ 0b0000000000000000000000011000000;\n\nexport const DefaultHydrationLane: Lane = /*            */ 0b0000000000000000000000100000000;\nexport const DefaultLanes: Lanes = /*                   */ 0b0000000000000000000111000000000;\n\nconst TransitionHydrationLane: Lane = /*                */ 0b0000000000000000001000000000000;\nconst TransitionLanes: Lanes = /*                       */ 0b0000000001111111110000000000000;\n\nconst RetryLanes: Lanes = /*                            */ 0b0000011110000000000000000000000;\n\nexport const SomeRetryLane: Lanes = /*                  */ 0b0000010000000000000000000000000;\n\nexport const SelectiveHydrationLane: Lane = /*          */ 0b0000100000000000000000000000000;\n\nconst NonIdleLanes = /*                                 */ 0b0000111111111111111111111111111;\n\nexport const IdleHydrationLane: Lane = /*               */ 0b0001000000000000000000000000000;\nconst IdleLanes: Lanes = /*                             */ 0b0110000000000000000000000000000;\n\nexport const OffscreenLane: Lane = /*                   */ 0b1000000000000000000000000000000;\n\nexport const NoTimestamp = -1;\n\nlet currentUpdateLanePriority: LanePriority = NoLanePriority;\n\nexport function getCurrentUpdateLanePriority(): LanePriority {\n  return currentUpdateLanePriority;\n}\n\nexport function setCurrentUpdateLanePriority(newLanePriority: LanePriority) {\n  currentUpdateLanePriority = newLanePriority;\n}\n\n// \"Registers\" used to \"return\" multiple values\n// Used by getHighestPriorityLanes and getNextLanes:\nlet return_highestLanePriority: LanePriority = DefaultLanePriority;\n\nfunction getHighestPriorityLanes(lanes: Lanes | Lane): Lanes {\n  if ((SyncLane & lanes) !== NoLanes) {\n    return_highestLanePriority = SyncLanePriority;\n    return SyncLane;\n  }\n  if ((SyncBatchedLane & lanes) !== NoLanes) {\n    return_highestLanePriority = SyncBatchedLanePriority;\n    return SyncBatchedLane;\n  }\n  if ((InputDiscreteHydrationLane & lanes) !== NoLanes) {\n    return_highestLanePriority = InputDiscreteHydrationLanePriority;\n    return InputDiscreteHydrationLane;\n  }\n  const inputDiscreteLanes = InputDiscreteLanes & lanes;\n  if (inputDiscreteLanes !== NoLanes) {\n    return_highestLanePriority = InputDiscreteLanePriority;\n    return inputDiscreteLanes;\n  }\n  if ((lanes & InputContinuousHydrationLane) !== NoLanes) {\n    return_highestLanePriority = InputContinuousHydrationLanePriority;\n    return InputContinuousHydrationLane;\n  }\n  const inputContinuousLanes = InputContinuousLanes & lanes;\n  if (inputContinuousLanes !== NoLanes) {\n    return_highestLanePriority = InputContinuousLanePriority;\n    return inputContinuousLanes;\n  }\n  if ((lanes & DefaultHydrationLane) !== NoLanes) {\n    return_highestLanePriority = DefaultHydrationLanePriority;\n    return DefaultHydrationLane;\n  }\n  const defaultLanes = DefaultLanes & lanes;\n  if (defaultLanes !== NoLanes) {\n    return_highestLanePriority = DefaultLanePriority;\n    return defaultLanes;\n  }\n  if ((lanes & TransitionHydrationLane) !== NoLanes) {\n    return_highestLanePriority = TransitionHydrationPriority;\n    return TransitionHydrationLane;\n  }\n  const transitionLanes = TransitionLanes & lanes;\n  if (transitionLanes !== NoLanes) {\n    return_highestLanePriority = TransitionPriority;\n    return transitionLanes;\n  }\n  const retryLanes = RetryLanes & lanes;\n  if (retryLanes !== NoLanes) {\n    return_highestLanePriority = RetryLanePriority;\n    return retryLanes;\n  }\n  if (lanes & SelectiveHydrationLane) {\n    return_highestLanePriority = SelectiveHydrationLanePriority;\n    return SelectiveHydrationLane;\n  }\n  if ((lanes & IdleHydrationLane) !== NoLanes) {\n    return_highestLanePriority = IdleHydrationLanePriority;\n    return IdleHydrationLane;\n  }\n  const idleLanes = IdleLanes & lanes;\n  if (idleLanes !== NoLanes) {\n    return_highestLanePriority = IdleLanePriority;\n    return idleLanes;\n  }\n  if ((OffscreenLane & lanes) !== NoLanes) {\n    return_highestLanePriority = OffscreenLanePriority;\n    return OffscreenLane;\n  }\n  if (__DEV__) {\n    console.error('Should have found matching lanes. This is a bug in React.');\n  }\n  // This shouldn't be reachable, but as a fallback, return the entire bitmask.\n  return_highestLanePriority = DefaultLanePriority;\n  return lanes;\n}\n\nexport function schedulerPriorityToLanePriority(\n  schedulerPriorityLevel: ReactPriorityLevel,\n): LanePriority {\n  switch (schedulerPriorityLevel) {\n    case ImmediateSchedulerPriority:\n      return SyncLanePriority;\n    case UserBlockingSchedulerPriority:\n      return InputContinuousLanePriority;\n    case NormalSchedulerPriority:\n    case LowSchedulerPriority:\n      // TODO: Handle LowSchedulerPriority, somehow. Maybe the same lane as hydration.\n      return DefaultLanePriority;\n    case IdleSchedulerPriority:\n      return IdleLanePriority;\n    default:\n      return NoLanePriority;\n  }\n}\n\nexport function lanePriorityToSchedulerPriority(\n  lanePriority: LanePriority,\n): ReactPriorityLevel {\n  switch (lanePriority) {\n    case SyncLanePriority:\n    case SyncBatchedLanePriority:\n      return ImmediateSchedulerPriority;\n    case InputDiscreteHydrationLanePriority:\n    case InputDiscreteLanePriority:\n    case InputContinuousHydrationLanePriority:\n    case InputContinuousLanePriority:\n      return UserBlockingSchedulerPriority;\n    case DefaultHydrationLanePriority:\n    case DefaultLanePriority:\n    case TransitionHydrationPriority:\n    case TransitionPriority:\n    case SelectiveHydrationLanePriority:\n    case RetryLanePriority:\n      return NormalSchedulerPriority;\n    case IdleHydrationLanePriority:\n    case IdleLanePriority:\n    case OffscreenLanePriority:\n      return IdleSchedulerPriority;\n    case NoLanePriority:\n      return NoSchedulerPriority;\n    default:\n      invariant(\n        false,\n        'Invalid update priority: %s. This is a bug in React.',\n        lanePriority,\n      );\n  }\n}\n\nexport function getNextLanes(root: FiberRoot, wipLanes: Lanes): Lanes {\n  // Early bailout if there's no pending work left.\n  const pendingLanes = root.pendingLanes;\n  if (pendingLanes === NoLanes) {\n    return_highestLanePriority = NoLanePriority;\n    return NoLanes;\n  }\n\n  let nextLanes = NoLanes;\n  let nextLanePriority = NoLanePriority;\n\n  const expiredLanes = root.expiredLanes;\n  const suspendedLanes = root.suspendedLanes;\n  const pingedLanes = root.pingedLanes;\n\n  // Check if any work has expired.\n  if (expiredLanes !== NoLanes) {\n    nextLanes = expiredLanes;\n    nextLanePriority = return_highestLanePriority = SyncLanePriority;\n  } else {\n    // Do not work on any idle work until all the non-idle work has finished,\n    // even if the work is suspended.\n    const nonIdlePendingLanes = pendingLanes & NonIdleLanes;\n    if (nonIdlePendingLanes !== NoLanes) {\n      const nonIdleUnblockedLanes = nonIdlePendingLanes & ~suspendedLanes;\n      if (nonIdleUnblockedLanes !== NoLanes) {\n        nextLanes = getHighestPriorityLanes(nonIdleUnblockedLanes);\n        nextLanePriority = return_highestLanePriority;\n      } else {\n        const nonIdlePingedLanes = nonIdlePendingLanes & pingedLanes;\n        if (nonIdlePingedLanes !== NoLanes) {\n          nextLanes = getHighestPriorityLanes(nonIdlePingedLanes);\n          nextLanePriority = return_highestLanePriority;\n        }\n      }\n    } else {\n      // The only remaining work is Idle.\n      const unblockedLanes = pendingLanes & ~suspendedLanes;\n      if (unblockedLanes !== NoLanes) {\n        nextLanes = getHighestPriorityLanes(unblockedLanes);\n        nextLanePriority = return_highestLanePriority;\n      } else {\n        if (pingedLanes !== NoLanes) {\n          nextLanes = getHighestPriorityLanes(pingedLanes);\n          nextLanePriority = return_highestLanePriority;\n        }\n      }\n    }\n  }\n\n  if (nextLanes === NoLanes) {\n    // This should only be reachable if we're suspended\n    // TODO: Consider warning in this path if a fallback timer is not scheduled.\n    return NoLanes;\n  }\n\n  // If there are higher priority lanes, we'll include them even if they\n  // are suspended.\n  nextLanes = pendingLanes & getEqualOrHigherPriorityLanes(nextLanes);\n\n  // If we're already in the middle of a render, switching lanes will interrupt\n  // it and we'll lose our progress. We should only do this if the new lanes are\n  // higher priority.\n  if (\n    wipLanes !== NoLanes &&\n    wipLanes !== nextLanes &&\n    // If we already suspended with a delay, then interrupting is fine. Don't\n    // bother waiting until the root is complete.\n    (wipLanes & suspendedLanes) === NoLanes\n  ) {\n    getHighestPriorityLanes(wipLanes);\n    const wipLanePriority = return_highestLanePriority;\n    if (nextLanePriority <= wipLanePriority) {\n      return wipLanes;\n    } else {\n      return_highestLanePriority = nextLanePriority;\n    }\n  }\n\n  // Check for entangled lanes and add them to the batch.\n  //\n  // A lane is said to be entangled with another when it's not allowed to render\n  // in a batch that does not also include the other lane. Typically we do this\n  // when multiple updates have the same source, and we only want to respond to\n  // the most recent event from that source.\n  //\n  // Note that we apply entanglements *after* checking for partial work above.\n  // This means that if a lane is entangled during an interleaved event while\n  // it's already rendering, we won't interrupt it. This is intentional, since\n  // entanglement is usually \"best effort\": we'll try our best to render the\n  // lanes in the same batch, but it's not worth throwing out partially\n  // completed work in order to do it.\n  //\n  // For those exceptions where entanglement is semantically important, like\n  // useMutableSource, we should ensure that there is no partial work at the\n  // time we apply the entanglement.\n  const entangledLanes = root.entangledLanes;\n  if (entangledLanes !== NoLanes) {\n    const entanglements = root.entanglements;\n    let lanes = nextLanes & entangledLanes;\n    while (lanes > 0) {\n      const index = pickArbitraryLaneIndex(lanes);\n      const lane = 1 << index;\n\n      nextLanes |= entanglements[index];\n\n      lanes &= ~lane;\n    }\n  }\n\n  return nextLanes;\n}\n\nexport function getMostRecentEventTime(root: FiberRoot, lanes: Lanes): number {\n  const eventTimes = root.eventTimes;\n\n  let mostRecentEventTime = NoTimestamp;\n  while (lanes > 0) {\n    const index = pickArbitraryLaneIndex(lanes);\n    const lane = 1 << index;\n\n    const eventTime = eventTimes[index];\n    if (eventTime > mostRecentEventTime) {\n      mostRecentEventTime = eventTime;\n    }\n\n    lanes &= ~lane;\n  }\n\n  return mostRecentEventTime;\n}\n\nfunction computeExpirationTime(lane: Lane, currentTime: number) {\n  // TODO: Expiration heuristic is constant per lane, so could use a map.\n  getHighestPriorityLanes(lane);\n  const priority = return_highestLanePriority;\n  if (priority >= InputContinuousLanePriority) {\n    // User interactions should expire slightly more quickly.\n    //\n    // NOTE: This is set to the corresponding constant as in Scheduler.js. When\n    // we made it larger, a product metric in www regressed, suggesting there's\n    // a user interaction that's being starved by a series of synchronous\n    // updates. If that theory is correct, the proper solution is to fix the\n    // starvation. However, this scenario supports the idea that expiration\n    // times are an important safeguard when starvation does happen.\n    //\n    // Also note that, in the case of user input specifically, this will soon no\n    // longer be an issue because we plan to make user input synchronous by\n    // default (until you enter `startTransition`, of course.)\n    //\n    // If weren't planning to make these updates synchronous soon anyway, I\n    // would probably make this number a configurable parameter.\n    return currentTime + 250;\n  } else if (priority >= TransitionPriority) {\n    return currentTime + 5000;\n  } else {\n    // Anything idle priority or lower should never expire.\n    return NoTimestamp;\n  }\n}\n\nexport function markStarvedLanesAsExpired(\n  root: FiberRoot,\n  currentTime: number,\n): void {\n  // TODO: This gets called every time we yield. We can optimize by storing\n  // the earliest expiration time on the root. Then use that to quickly bail out\n  // of this function.\n\n  const pendingLanes = root.pendingLanes;\n  const suspendedLanes = root.suspendedLanes;\n  const pingedLanes = root.pingedLanes;\n  const expirationTimes = root.expirationTimes;\n\n  // Iterate through the pending lanes and check if we've reached their\n  // expiration time. If so, we'll assume the update is being starved and mark\n  // it as expired to force it to finish.\n  let lanes = pendingLanes;\n  while (lanes > 0) {\n    const index = pickArbitraryLaneIndex(lanes);\n    const lane = 1 << index;\n\n    const expirationTime = expirationTimes[index];\n    if (expirationTime === NoTimestamp) {\n      // Found a pending lane with no expiration time. If it's not suspended, or\n      // if it's pinged, assume it's CPU-bound. Compute a new expiration time\n      // using the current time.\n      if (\n        (lane & suspendedLanes) === NoLanes ||\n        (lane & pingedLanes) !== NoLanes\n      ) {\n        // Assumes timestamps are monotonically increasing.\n        expirationTimes[index] = computeExpirationTime(lane, currentTime);\n      }\n    } else if (expirationTime <= currentTime) {\n      // This lane expired\n      root.expiredLanes |= lane;\n    }\n\n    lanes &= ~lane;\n  }\n}\n\n// This returns the highest priority pending lanes regardless of whether they\n// are suspended.\nexport function getHighestPriorityPendingLanes(root: FiberRoot) {\n  return getHighestPriorityLanes(root.pendingLanes);\n}\n\nexport function getLanesToRetrySynchronouslyOnError(root: FiberRoot): Lanes {\n  const everythingButOffscreen = root.pendingLanes & ~OffscreenLane;\n  if (everythingButOffscreen !== NoLanes) {\n    return everythingButOffscreen;\n  }\n  if (everythingButOffscreen & OffscreenLane) {\n    return OffscreenLane;\n  }\n  return NoLanes;\n}\n\nexport function returnNextLanesPriority() {\n  return return_highestLanePriority;\n}\nexport function includesNonIdleWork(lanes: Lanes) {\n  return (lanes & NonIdleLanes) !== NoLanes;\n}\nexport function includesOnlyRetries(lanes: Lanes) {\n  return (lanes & RetryLanes) === lanes;\n}\nexport function includesOnlyTransitions(lanes: Lanes) {\n  return (lanes & TransitionLanes) === lanes;\n}\n\n// To ensure consistency across multiple updates in the same event, this should\n// be a pure function, so that it always returns the same lane for given inputs.\nexport function findUpdateLane(\n  lanePriority: LanePriority,\n  wipLanes: Lanes,\n): Lane {\n  switch (lanePriority) {\n    case NoLanePriority:\n      break;\n    case SyncLanePriority:\n      return SyncLane;\n    case SyncBatchedLanePriority:\n      return SyncBatchedLane;\n    case InputDiscreteLanePriority: {\n      const lane = pickArbitraryLane(InputDiscreteLanes & ~wipLanes);\n      if (lane === NoLane) {\n        // Shift to the next priority level\n        return findUpdateLane(InputContinuousLanePriority, wipLanes);\n      }\n      return lane;\n    }\n    case InputContinuousLanePriority: {\n      const lane = pickArbitraryLane(InputContinuousLanes & ~wipLanes);\n      if (lane === NoLane) {\n        // Shift to the next priority level\n        return findUpdateLane(DefaultLanePriority, wipLanes);\n      }\n      return lane;\n    }\n    case DefaultLanePriority: {\n      let lane = pickArbitraryLane(DefaultLanes & ~wipLanes);\n      if (lane === NoLane) {\n        // If all the default lanes are already being worked on, look for a\n        // lane in the transition range.\n        lane = pickArbitraryLane(TransitionLanes & ~wipLanes);\n        if (lane === NoLane) {\n          // All the transition lanes are taken, too. This should be very\n          // rare, but as a last resort, pick a default lane. This will have\n          // the effect of interrupting the current work-in-progress render.\n          lane = pickArbitraryLane(DefaultLanes);\n        }\n      }\n      return lane;\n    }\n    case TransitionPriority: // Should be handled by findTransitionLane instead\n    case RetryLanePriority: // Should be handled by findRetryLane instead\n      break;\n    case IdleLanePriority:\n      let lane = pickArbitraryLane(IdleLanes & ~wipLanes);\n      if (lane === NoLane) {\n        lane = pickArbitraryLane(IdleLanes);\n      }\n      return lane;\n    default:\n      // The remaining priorities are not valid for updates\n      break;\n  }\n  invariant(\n    false,\n    'Invalid update priority: %s. This is a bug in React.',\n    lanePriority,\n  );\n}\n\n// To ensure consistency across multiple updates in the same event, this should\n// be pure function, so that it always returns the same lane for given inputs.\nexport function findTransitionLane(wipLanes: Lanes, pendingLanes: Lanes): Lane {\n  // First look for lanes that are completely unclaimed, i.e. have no\n  // pending work.\n  let lane = pickArbitraryLane(TransitionLanes & ~pendingLanes);\n  if (lane === NoLane) {\n    // If all lanes have pending work, look for a lane that isn't currently\n    // being worked on.\n    lane = pickArbitraryLane(TransitionLanes & ~wipLanes);\n    if (lane === NoLane) {\n      // If everything is being worked on, pick any lane. This has the\n      // effect of interrupting the current work-in-progress.\n      lane = pickArbitraryLane(TransitionLanes);\n    }\n  }\n  return lane;\n}\n\n// To ensure consistency across multiple updates in the same event, this should\n// be pure function, so that it always returns the same lane for given inputs.\nexport function findRetryLane(wipLanes: Lanes): Lane {\n  // This is a fork of `findUpdateLane` designed specifically for Suspense\n  // \"retries\" — a special update that attempts to flip a Suspense boundary\n  // from its placeholder state to its primary/resolved state.\n  let lane = pickArbitraryLane(RetryLanes & ~wipLanes);\n  if (lane === NoLane) {\n    lane = pickArbitraryLane(RetryLanes);\n  }\n  return lane;\n}\n\nfunction getHighestPriorityLane(lanes: Lanes) {\n  return lanes & -lanes;\n}\n\nfunction getLowestPriorityLane(lanes: Lanes): Lane {\n  // This finds the most significant non-zero bit.\n  const index = 31 - clz32(lanes);\n  return index < 0 ? NoLanes : 1 << index;\n}\n\nfunction getEqualOrHigherPriorityLanes(lanes: Lanes | Lane): Lanes {\n  return (getLowestPriorityLane(lanes) << 1) - 1;\n}\n\nexport function pickArbitraryLane(lanes: Lanes): Lane {\n  // This wrapper function gets inlined. Only exists so to communicate that it\n  // doesn't matter which bit is selected; you can pick any bit without\n  // affecting the algorithms where its used. Here I'm using\n  // getHighestPriorityLane because it requires the fewest operations.\n  return getHighestPriorityLane(lanes);\n}\n\nfunction pickArbitraryLaneIndex(lanes: Lanes) {\n  return 31 - clz32(lanes);\n}\n\nfunction laneToIndex(lane: Lane) {\n  return pickArbitraryLaneIndex(lane);\n}\n\nexport function includesSomeLane(a: Lanes | Lane, b: Lanes | Lane) {\n  return (a & b) !== NoLanes;\n}\n\nexport function isSubsetOfLanes(set: Lanes, subset: Lanes | Lane) {\n  return (set & subset) === subset;\n}\n\nexport function mergeLanes(a: Lanes | Lane, b: Lanes | Lane): Lanes {\n  return a | b;\n}\n\nexport function removeLanes(set: Lanes, subset: Lanes | Lane): Lanes {\n  return set & ~subset;\n}\n\n// Seems redundant, but it changes the type from a single lane (used for\n// updates) to a group of lanes (used for flushing work).\nexport function laneToLanes(lane: Lane): Lanes {\n  return lane;\n}\n\nexport function higherPriorityLane(a: Lane, b: Lane) {\n  // This works because the bit ranges decrease in priority as you go left.\n  return a !== NoLane && a < b ? a : b;\n}\n\nexport function higherLanePriority(\n  a: LanePriority,\n  b: LanePriority,\n): LanePriority {\n  return a !== NoLanePriority && a > b ? a : b;\n}\n\nexport function createLaneMap<T>(initial: T): LaneMap<T> {\n  return new Array(TotalLanes).fill(initial);\n}\n\nexport function markRootUpdated(\n  root: FiberRoot,\n  updateLane: Lane,\n  eventTime: number,\n) {\n  root.pendingLanes |= updateLane;\n\n  // TODO: Theoretically, any update to any lane can unblock any other lane. But\n  // it's not practical to try every single possible combination. We need a\n  // heuristic to decide which lanes to attempt to render, and in which batches.\n  // For now, we use the same heuristic as in the old ExpirationTimes model:\n  // retry any lane at equal or lower priority, but don't try updates at higher\n  // priority without also including the lower priority updates. This works well\n  // when considering updates across different priority levels, but isn't\n  // sufficient for updates within the same priority, since we want to treat\n  // those updates as parallel.\n\n  // Unsuspend any update at equal or lower priority.\n  const higherPriorityLanes = updateLane - 1; // Turns 0b1000 into 0b0111\n\n  root.suspendedLanes &= higherPriorityLanes;\n  root.pingedLanes &= higherPriorityLanes;\n\n  const eventTimes = root.eventTimes;\n  const index = laneToIndex(updateLane);\n  // We can always overwrite an existing timestamp because we prefer the most\n  // recent event, and we assume time is monotonically increasing.\n  eventTimes[index] = eventTime;\n}\n\nexport function markRootSuspended(root: FiberRoot, suspendedLanes: Lanes) {\n  root.suspendedLanes |= suspendedLanes;\n  root.pingedLanes &= ~suspendedLanes;\n\n  // The suspended lanes are no longer CPU-bound. Clear their expiration times.\n  const expirationTimes = root.expirationTimes;\n  let lanes = suspendedLanes;\n  while (lanes > 0) {\n    const index = pickArbitraryLaneIndex(lanes);\n    const lane = 1 << index;\n\n    expirationTimes[index] = NoTimestamp;\n\n    lanes &= ~lane;\n  }\n}\n\nexport function markRootPinged(\n  root: FiberRoot,\n  pingedLanes: Lanes,\n  eventTime: number,\n) {\n  root.pingedLanes |= root.suspendedLanes & pingedLanes;\n}\n\nexport function markRootExpired(root: FiberRoot, expiredLanes: Lanes) {\n  root.expiredLanes |= expiredLanes & root.pendingLanes;\n}\n\nexport function markDiscreteUpdatesExpired(root: FiberRoot) {\n  root.expiredLanes |= InputDiscreteLanes & root.pendingLanes;\n}\n\nexport function hasDiscreteLanes(lanes: Lanes) {\n  return (lanes & InputDiscreteLanes) !== NoLanes;\n}\n\nexport function markRootMutableRead(root: FiberRoot, updateLane: Lane) {\n  root.mutableReadLanes |= updateLane & root.pendingLanes;\n}\n\nexport function markRootFinished(root: FiberRoot, remainingLanes: Lanes) {\n  const noLongerPendingLanes = root.pendingLanes & ~remainingLanes;\n\n  root.pendingLanes = remainingLanes;\n\n  // Let's try everything again\n  root.suspendedLanes = 0;\n  root.pingedLanes = 0;\n\n  root.expiredLanes &= remainingLanes;\n  root.mutableReadLanes &= remainingLanes;\n\n  root.entangledLanes &= remainingLanes;\n\n  const entanglements = root.entanglements;\n  const eventTimes = root.eventTimes;\n  const expirationTimes = root.expirationTimes;\n\n  // Clear the lanes that no longer have pending work\n  let lanes = noLongerPendingLanes;\n  while (lanes > 0) {\n    const index = pickArbitraryLaneIndex(lanes);\n    const lane = 1 << index;\n\n    entanglements[index] = NoLanes;\n    eventTimes[index] = NoTimestamp;\n    expirationTimes[index] = NoTimestamp;\n\n    lanes &= ~lane;\n  }\n}\n\nexport function markRootEntangled(root: FiberRoot, entangledLanes: Lanes) {\n  root.entangledLanes |= entangledLanes;\n\n  const entanglements = root.entanglements;\n  let lanes = entangledLanes;\n  while (lanes > 0) {\n    const index = pickArbitraryLaneIndex(lanes);\n    const lane = 1 << index;\n\n    entanglements[index] |= entangledLanes;\n\n    lanes &= ~lane;\n  }\n}\n\nexport function getBumpedLaneForHydration(\n  root: FiberRoot,\n  renderLanes: Lanes,\n): Lane {\n  getHighestPriorityLanes(renderLanes);\n  const highestLanePriority = return_highestLanePriority;\n\n  let lane;\n  switch (highestLanePriority) {\n    case SyncLanePriority:\n    case SyncBatchedLanePriority:\n      lane = NoLane;\n      break;\n    case InputDiscreteHydrationLanePriority:\n    case InputDiscreteLanePriority:\n      lane = InputDiscreteHydrationLane;\n      break;\n    case InputContinuousHydrationLanePriority:\n    case InputContinuousLanePriority:\n      lane = InputContinuousHydrationLane;\n      break;\n    case DefaultHydrationLanePriority:\n    case DefaultLanePriority:\n      lane = DefaultHydrationLane;\n      break;\n    case TransitionHydrationPriority:\n    case TransitionPriority:\n      lane = TransitionHydrationLane;\n      break;\n    case RetryLanePriority:\n      // Shouldn't be reachable under normal circumstances, so there's no\n      // dedicated lane for retry priority. Use the one for long transitions.\n      lane = TransitionHydrationLane;\n      break;\n    case SelectiveHydrationLanePriority:\n      lane = SelectiveHydrationLane;\n      break;\n    case IdleHydrationLanePriority:\n    case IdleLanePriority:\n      lane = IdleHydrationLane;\n      break;\n    case OffscreenLanePriority:\n    case NoLanePriority:\n      lane = NoLane;\n      break;\n    default:\n      invariant(false, 'Invalid lane: %s. This is a bug in React.', lane);\n  }\n\n  // Check if the lane we chose is suspended. If so, that indicates that we\n  // already attempted and failed to hydrate at that level. Also check if we're\n  // already rendering that lane, which is rare but could happen.\n  if ((lane & (root.suspendedLanes | renderLanes)) !== NoLane) {\n    // Give up trying to hydrate and fall back to client render.\n    return NoLane;\n  }\n\n  return lane;\n}\n\nconst clz32 = Math.clz32 ? Math.clz32 : clz32Fallback;\n\n// Count leading zeros. Only used on lanes, so assume input is an integer.\n// Based on:\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/clz32\nconst log = Math.log;\nconst LN2 = Math.LN2;\nfunction clz32Fallback(lanes: Lanes | Lane) {\n  if (lanes === 0) {\n    return 32;\n  }\n  return (31 - ((log(lanes) / LN2) | 0)) | 0;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {ReactPriorityLevel} from './ReactInternalTypes';\n\n// Intentionally not named imports because Rollup would use dynamic dispatch for\n// CommonJS interop named imports.\nimport * as Scheduler from 'scheduler';\nimport {__interactionsRef} from 'scheduler/tracing';\nimport {\n  enableSchedulerTracing,\n  decoupleUpdatePriorityFromScheduler,\n} from 'shared/ReactFeatureFlags';\nimport invariant from 'shared/invariant';\nimport {\n  SyncLanePriority,\n  getCurrentUpdateLanePriority,\n  setCurrentUpdateLanePriority,\n} from './ReactFiberLane';\n\nconst {\n  unstable_runWithPriority: Scheduler_runWithPriority,\n  unstable_scheduleCallback: Scheduler_scheduleCallback,\n  unstable_cancelCallback: Scheduler_cancelCallback,\n  unstable_shouldYield: Scheduler_shouldYield,\n  unstable_requestPaint: Scheduler_requestPaint,\n  unstable_now: Scheduler_now,\n  unstable_getCurrentPriorityLevel: Scheduler_getCurrentPriorityLevel,\n  unstable_ImmediatePriority: Scheduler_ImmediatePriority,\n  unstable_UserBlockingPriority: Scheduler_UserBlockingPriority,\n  unstable_NormalPriority: Scheduler_NormalPriority,\n  unstable_LowPriority: Scheduler_LowPriority,\n  unstable_IdlePriority: Scheduler_IdlePriority,\n} = Scheduler;\n\nif (enableSchedulerTracing) {\n  // Provide explicit error message when production+profiling bundle of e.g.\n  // react-dom is used with production (non-profiling) bundle of\n  // scheduler/tracing\n  invariant(\n    __interactionsRef != null && __interactionsRef.current != null,\n    'It is not supported to run the profiling version of a renderer (for ' +\n      'example, `react-dom/profiling`) without also replacing the ' +\n      '`scheduler/tracing` module with `scheduler/tracing-profiling`. Your ' +\n      'bundler might have a setting for aliasing both modules. Learn more at ' +\n      'https://reactjs.org/link/profiling',\n  );\n}\n\nexport type SchedulerCallback = (isSync: boolean) => SchedulerCallback | null;\n\ntype SchedulerCallbackOptions = {timeout?: number, ...};\n\nconst fakeCallbackNode = {};\n\n// Except for NoPriority, these correspond to Scheduler priorities. We use\n// ascending numbers so we can compare them like numbers. They start at 90 to\n// avoid clashing with Scheduler's priorities.\nexport const ImmediatePriority: ReactPriorityLevel = 99;\nexport const UserBlockingPriority: ReactPriorityLevel = 98;\nexport const NormalPriority: ReactPriorityLevel = 97;\nexport const LowPriority: ReactPriorityLevel = 96;\nexport const IdlePriority: ReactPriorityLevel = 95;\n// NoPriority is the absence of priority. Also React-only.\nexport const NoPriority: ReactPriorityLevel = 90;\n\nexport const shouldYield = Scheduler_shouldYield;\nexport const requestPaint =\n  // Fall back gracefully if we're running an older version of Scheduler.\n  Scheduler_requestPaint !== undefined ? Scheduler_requestPaint : () => {};\n\nlet syncQueue: Array<SchedulerCallback> | null = null;\nlet immediateQueueCallbackNode: mixed | null = null;\nlet isFlushingSyncQueue: boolean = false;\nconst initialTimeMs: number = Scheduler_now();\n\n// If the initial timestamp is reasonably small, use Scheduler's `now` directly.\n// This will be the case for modern browsers that support `performance.now`. In\n// older browsers, Scheduler falls back to `Date.now`, which returns a Unix\n// timestamp. In that case, subtract the module initialization time to simulate\n// the behavior of performance.now and keep our times small enough to fit\n// within 32 bits.\n// TODO: Consider lifting this into Scheduler.\nexport const now =\n  initialTimeMs < 10000 ? Scheduler_now : () => Scheduler_now() - initialTimeMs;\n\nexport function getCurrentPriorityLevel(): ReactPriorityLevel {\n  switch (Scheduler_getCurrentPriorityLevel()) {\n    case Scheduler_ImmediatePriority:\n      return ImmediatePriority;\n    case Scheduler_UserBlockingPriority:\n      return UserBlockingPriority;\n    case Scheduler_NormalPriority:\n      return NormalPriority;\n    case Scheduler_LowPriority:\n      return LowPriority;\n    case Scheduler_IdlePriority:\n      return IdlePriority;\n    default:\n      invariant(false, 'Unknown priority level.');\n  }\n}\n\nfunction reactPriorityToSchedulerPriority(reactPriorityLevel) {\n  switch (reactPriorityLevel) {\n    case ImmediatePriority:\n      return Scheduler_ImmediatePriority;\n    case UserBlockingPriority:\n      return Scheduler_UserBlockingPriority;\n    case NormalPriority:\n      return Scheduler_NormalPriority;\n    case LowPriority:\n      return Scheduler_LowPriority;\n    case IdlePriority:\n      return Scheduler_IdlePriority;\n    default:\n      invariant(false, 'Unknown priority level.');\n  }\n}\n\nexport function runWithPriority<T>(\n  reactPriorityLevel: ReactPriorityLevel,\n  fn: () => T,\n): T {\n  const priorityLevel = reactPriorityToSchedulerPriority(reactPriorityLevel);\n  return Scheduler_runWithPriority(priorityLevel, fn);\n}\n\nexport function scheduleCallback(\n  reactPriorityLevel: ReactPriorityLevel,\n  callback: SchedulerCallback,\n  options: SchedulerCallbackOptions | void | null,\n) {\n  const priorityLevel = reactPriorityToSchedulerPriority(reactPriorityLevel);\n  return Scheduler_scheduleCallback(priorityLevel, callback, options);\n}\n\nexport function scheduleSyncCallback(callback: SchedulerCallback) {\n  // Push this callback into an internal queue. We'll flush these either in\n  // the next tick, or earlier if something calls `flushSyncCallbackQueue`.\n  if (syncQueue === null) {\n    syncQueue = [callback];\n    // Flush the queue in the next tick, at the earliest.\n    immediateQueueCallbackNode = Scheduler_scheduleCallback(\n      Scheduler_ImmediatePriority,\n      flushSyncCallbackQueueImpl,\n    );\n  } else {\n    // Push onto existing queue. Don't need to schedule a callback because\n    // we already scheduled one when we created the queue.\n    syncQueue.push(callback);\n  }\n  return fakeCallbackNode;\n}\n\nexport function cancelCallback(callbackNode: mixed) {\n  if (callbackNode !== fakeCallbackNode) {\n    Scheduler_cancelCallback(callbackNode);\n  }\n}\n\nexport function flushSyncCallbackQueue() {\n  if (immediateQueueCallbackNode !== null) {\n    const node = immediateQueueCallbackNode;\n    immediateQueueCallbackNode = null;\n    Scheduler_cancelCallback(node);\n  }\n  flushSyncCallbackQueueImpl();\n}\n\nfunction flushSyncCallbackQueueImpl() {\n  if (!isFlushingSyncQueue && syncQueue !== null) {\n    // Prevent re-entrancy.\n    isFlushingSyncQueue = true;\n    let i = 0;\n    if (decoupleUpdatePriorityFromScheduler) {\n      const previousLanePriority = getCurrentUpdateLanePriority();\n      try {\n        const isSync = true;\n        const queue = syncQueue;\n        setCurrentUpdateLanePriority(SyncLanePriority);\n        runWithPriority(ImmediatePriority, () => {\n          for (; i < queue.length; i++) {\n            let callback = queue[i];\n            do {\n              callback = callback(isSync);\n            } while (callback !== null);\n          }\n        });\n        syncQueue = null;\n      } catch (error) {\n        // If something throws, leave the remaining callbacks on the queue.\n        if (syncQueue !== null) {\n          syncQueue = syncQueue.slice(i + 1);\n        }\n        // Resume flushing in the next tick\n        Scheduler_scheduleCallback(\n          Scheduler_ImmediatePriority,\n          flushSyncCallbackQueue,\n        );\n        throw error;\n      } finally {\n        setCurrentUpdateLanePriority(previousLanePriority);\n        isFlushingSyncQueue = false;\n      }\n    } else {\n      try {\n        const isSync = true;\n        const queue = syncQueue;\n        runWithPriority(ImmediatePriority, () => {\n          for (; i < queue.length; i++) {\n            let callback = queue[i];\n            do {\n              callback = callback(isSync);\n            } while (callback !== null);\n          }\n        });\n        syncQueue = null;\n      } catch (error) {\n        // If something throws, leave the remaining callbacks on the queue.\n        if (syncQueue !== null) {\n          syncQueue = syncQueue.slice(i + 1);\n        }\n        // Resume flushing in the next tick\n        Scheduler_scheduleCallback(\n          Scheduler_ImmediatePriority,\n          flushSyncCallbackQueue,\n        );\n        throw error;\n      } finally {\n        isFlushingSyncQueue = false;\n      }\n    }\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// TODO: this is special because it gets imported during build.\nexport default '17.0.0-alpha.0';\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nexport type TypeOfMode = number;\n\nexport const NoMode = 0b00000;\nexport const StrictMode = 0b00001;\n// TODO: Remove BlockingMode and ConcurrentMode by reading from the root\n// tag instead\nexport const BlockingMode = 0b00010;\nexport const ConcurrentMode = 0b00100;\nexport const ProfileMode = 0b01000;\nexport const DebugTracingMode = 0b10000;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\n\nconst {ReactCurrentBatchConfig} = ReactSharedInternals;\n\nexport const NoTransition = 0;\n\nexport function requestCurrentTransition(): number {\n  return ReactCurrentBatchConfig.transition;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\n/**\n * inlined Object.is polyfill to avoid requiring consumers ship their own\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n */\nfunction is(x: any, y: any) {\n  return (\n    (x === y && (x !== 0 || 1 / x === 1 / y)) || (x !== x && y !== y) // eslint-disable-line no-self-compare\n  );\n}\n\nconst objectIs: (x: any, y: any) => boolean =\n  typeof Object.is === 'function' ? Object.is : is;\n\nexport default objectIs;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport is from './objectIs';\n\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * Performs equality by iterating through keys on an object and returning false\n * when any key has values which are not strictly equal between the arguments.\n * Returns true when the values of all keys are strictly equal.\n */\nfunction shallowEqual(objA: mixed, objB: mixed): boolean {\n  if (is(objA, objB)) {\n    return true;\n  }\n\n  if (\n    typeof objA !== 'object' ||\n    objA === null ||\n    typeof objB !== 'object' ||\n    objB === null\n  ) {\n    return false;\n  }\n\n  const keysA = Object.keys(objA);\n  const keysB = Object.keys(objB);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  }\n\n  // Test for A's keys different from B.\n  for (let i = 0; i < keysA.length; i++) {\n    if (\n      !hasOwnProperty.call(objB, keysA[i]) ||\n      !is(objA[keysA[i]], objB[keysA[i]])\n    ) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport default shallowEqual;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactInternalTypes';\n\nimport {\n  HostComponent,\n  LazyComponent,\n  SuspenseComponent,\n  SuspenseListComponent,\n  FunctionComponent,\n  IndeterminateComponent,\n  ForwardRef,\n  SimpleMemoComponent,\n  Block,\n  ClassComponent,\n} from './ReactWorkTags';\nimport {\n  describeBuiltInComponentFrame,\n  describeFunctionComponentFrame,\n  describeClassComponentFrame,\n} from 'shared/ReactComponentStackFrame';\n\nfunction describeFiber(fiber: Fiber): string {\n  const owner: null | Function = __DEV__\n    ? fiber._debugOwner\n      ? fiber._debugOwner.type\n      : null\n    : null;\n  const source = __DEV__ ? fiber._debugSource : null;\n  switch (fiber.tag) {\n    case HostComponent:\n      return describeBuiltInComponentFrame(fiber.type, source, owner);\n    case LazyComponent:\n      return describeBuiltInComponentFrame('Lazy', source, owner);\n    case SuspenseComponent:\n      return describeBuiltInComponentFrame('Suspense', source, owner);\n    case SuspenseListComponent:\n      return describeBuiltInComponentFrame('SuspenseList', source, owner);\n    case FunctionComponent:\n    case IndeterminateComponent:\n    case SimpleMemoComponent:\n      return describeFunctionComponentFrame(fiber.type, source, owner);\n    case ForwardRef:\n      return describeFunctionComponentFrame(fiber.type.render, source, owner);\n    case Block:\n      return describeFunctionComponentFrame(fiber.type._render, source, owner);\n    case ClassComponent:\n      return describeClassComponentFrame(fiber.type, source, owner);\n    default:\n      return '';\n  }\n}\n\nexport function getStackByFiberInDevAndProd(workInProgress: Fiber): string {\n  try {\n    let info = '';\n    let node = workInProgress;\n    do {\n      info += describeFiber(node);\n      node = node.return;\n    } while (node);\n    return info;\n  } catch (x) {\n    return '\\nError generating stack: ' + x.message + '\\n' + x.stack;\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactInternalTypes';\n\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\nimport {getStackByFiberInDevAndProd} from './ReactFiberComponentStack';\nimport getComponentName from 'shared/getComponentName';\n\nconst ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n\nexport let current: Fiber | null = null;\nexport let isRendering: boolean = false;\n\nexport function getCurrentFiberOwnerNameInDevOrNull(): string | null {\n  if (__DEV__) {\n    if (current === null) {\n      return null;\n    }\n    const owner = current._debugOwner;\n    if (owner !== null && typeof owner !== 'undefined') {\n      return getComponentName(owner.type);\n    }\n  }\n  return null;\n}\n\nfunction getCurrentFiberStackInDev(): string {\n  if (__DEV__) {\n    if (current === null) {\n      return '';\n    }\n    // Safe because if current fiber exists, we are reconciling,\n    // and it is guaranteed to be the work-in-progress version.\n    return getStackByFiberInDevAndProd(current);\n  }\n  return '';\n}\n\nexport function resetCurrentFiber() {\n  if (__DEV__) {\n    ReactDebugCurrentFrame.getCurrentStack = null;\n    current = null;\n    isRendering = false;\n  }\n}\n\nexport function setCurrentFiber(fiber: Fiber) {\n  if (__DEV__) {\n    ReactDebugCurrentFrame.getCurrentStack = getCurrentFiberStackInDev;\n    current = fiber;\n    isRendering = false;\n  }\n}\n\nexport function setIsRendering(rendering: boolean) {\n  if (__DEV__) {\n    isRendering = rendering;\n  }\n}\n\nexport function getIsRendering() {\n  if (__DEV__) {\n    return isRendering;\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactInternalTypes';\n\nimport {\n  resetCurrentFiber as resetCurrentDebugFiberInDEV,\n  setCurrentFiber as setCurrentDebugFiberInDEV,\n} from './ReactCurrentFiber';\nimport getComponentName from 'shared/getComponentName';\nimport {StrictMode} from './ReactTypeOfMode';\n\ntype FiberArray = Array<Fiber>;\ntype FiberToFiberComponentsMap = Map<Fiber, FiberArray>;\n\nconst ReactStrictModeWarnings = {\n  recordUnsafeLifecycleWarnings(fiber: Fiber, instance: any): void {},\n  flushPendingUnsafeLifecycleWarnings(): void {},\n  recordLegacyContextWarning(fiber: Fiber, instance: any): void {},\n  flushLegacyContextWarning(): void {},\n  discardPendingWarnings(): void {},\n};\n\nif (__DEV__) {\n  const findStrictRoot = (fiber: Fiber): Fiber | null => {\n    let maybeStrictRoot = null;\n\n    let node = fiber;\n    while (node !== null) {\n      if (node.mode & StrictMode) {\n        maybeStrictRoot = node;\n      }\n      node = node.return;\n    }\n\n    return maybeStrictRoot;\n  };\n\n  const setToSortedString = set => {\n    const array = [];\n    set.forEach(value => {\n      array.push(value);\n    });\n    return array.sort().join(', ');\n  };\n\n  let pendingComponentWillMountWarnings: Array<Fiber> = [];\n  let pendingUNSAFE_ComponentWillMountWarnings: Array<Fiber> = [];\n  let pendingComponentWillReceivePropsWarnings: Array<Fiber> = [];\n  let pendingUNSAFE_ComponentWillReceivePropsWarnings: Array<Fiber> = [];\n  let pendingComponentWillUpdateWarnings: Array<Fiber> = [];\n  let pendingUNSAFE_ComponentWillUpdateWarnings: Array<Fiber> = [];\n\n  // Tracks components we have already warned about.\n  const didWarnAboutUnsafeLifecycles = new Set();\n\n  ReactStrictModeWarnings.recordUnsafeLifecycleWarnings = (\n    fiber: Fiber,\n    instance: any,\n  ) => {\n    // Dedup strategy: Warn once per component.\n    if (didWarnAboutUnsafeLifecycles.has(fiber.type)) {\n      return;\n    }\n\n    if (\n      typeof instance.componentWillMount === 'function' &&\n      // Don't warn about react-lifecycles-compat polyfilled components.\n      instance.componentWillMount.__suppressDeprecationWarning !== true\n    ) {\n      pendingComponentWillMountWarnings.push(fiber);\n    }\n\n    if (\n      fiber.mode & StrictMode &&\n      typeof instance.UNSAFE_componentWillMount === 'function'\n    ) {\n      pendingUNSAFE_ComponentWillMountWarnings.push(fiber);\n    }\n\n    if (\n      typeof instance.componentWillReceiveProps === 'function' &&\n      instance.componentWillReceiveProps.__suppressDeprecationWarning !== true\n    ) {\n      pendingComponentWillReceivePropsWarnings.push(fiber);\n    }\n\n    if (\n      fiber.mode & StrictMode &&\n      typeof instance.UNSAFE_componentWillReceiveProps === 'function'\n    ) {\n      pendingUNSAFE_ComponentWillReceivePropsWarnings.push(fiber);\n    }\n\n    if (\n      typeof instance.componentWillUpdate === 'function' &&\n      instance.componentWillUpdate.__suppressDeprecationWarning !== true\n    ) {\n      pendingComponentWillUpdateWarnings.push(fiber);\n    }\n\n    if (\n      fiber.mode & StrictMode &&\n      typeof instance.UNSAFE_componentWillUpdate === 'function'\n    ) {\n      pendingUNSAFE_ComponentWillUpdateWarnings.push(fiber);\n    }\n  };\n\n  ReactStrictModeWarnings.flushPendingUnsafeLifecycleWarnings = () => {\n    // We do an initial pass to gather component names\n    const componentWillMountUniqueNames = new Set();\n    if (pendingComponentWillMountWarnings.length > 0) {\n      pendingComponentWillMountWarnings.forEach(fiber => {\n        componentWillMountUniqueNames.add(\n          getComponentName(fiber.type) || 'Component',\n        );\n        didWarnAboutUnsafeLifecycles.add(fiber.type);\n      });\n      pendingComponentWillMountWarnings = [];\n    }\n\n    const UNSAFE_componentWillMountUniqueNames = new Set();\n    if (pendingUNSAFE_ComponentWillMountWarnings.length > 0) {\n      pendingUNSAFE_ComponentWillMountWarnings.forEach(fiber => {\n        UNSAFE_componentWillMountUniqueNames.add(\n          getComponentName(fiber.type) || 'Component',\n        );\n        didWarnAboutUnsafeLifecycles.add(fiber.type);\n      });\n      pendingUNSAFE_ComponentWillMountWarnings = [];\n    }\n\n    const componentWillReceivePropsUniqueNames = new Set();\n    if (pendingComponentWillReceivePropsWarnings.length > 0) {\n      pendingComponentWillReceivePropsWarnings.forEach(fiber => {\n        componentWillReceivePropsUniqueNames.add(\n          getComponentName(fiber.type) || 'Component',\n        );\n        didWarnAboutUnsafeLifecycles.add(fiber.type);\n      });\n\n      pendingComponentWillReceivePropsWarnings = [];\n    }\n\n    const UNSAFE_componentWillReceivePropsUniqueNames = new Set();\n    if (pendingUNSAFE_ComponentWillReceivePropsWarnings.length > 0) {\n      pendingUNSAFE_ComponentWillReceivePropsWarnings.forEach(fiber => {\n        UNSAFE_componentWillReceivePropsUniqueNames.add(\n          getComponentName(fiber.type) || 'Component',\n        );\n        didWarnAboutUnsafeLifecycles.add(fiber.type);\n      });\n\n      pendingUNSAFE_ComponentWillReceivePropsWarnings = [];\n    }\n\n    const componentWillUpdateUniqueNames = new Set();\n    if (pendingComponentWillUpdateWarnings.length > 0) {\n      pendingComponentWillUpdateWarnings.forEach(fiber => {\n        componentWillUpdateUniqueNames.add(\n          getComponentName(fiber.type) || 'Component',\n        );\n        didWarnAboutUnsafeLifecycles.add(fiber.type);\n      });\n\n      pendingComponentWillUpdateWarnings = [];\n    }\n\n    const UNSAFE_componentWillUpdateUniqueNames = new Set();\n    if (pendingUNSAFE_ComponentWillUpdateWarnings.length > 0) {\n      pendingUNSAFE_ComponentWillUpdateWarnings.forEach(fiber => {\n        UNSAFE_componentWillUpdateUniqueNames.add(\n          getComponentName(fiber.type) || 'Component',\n        );\n        didWarnAboutUnsafeLifecycles.add(fiber.type);\n      });\n\n      pendingUNSAFE_ComponentWillUpdateWarnings = [];\n    }\n\n    // Finally, we flush all the warnings\n    // UNSAFE_ ones before the deprecated ones, since they'll be 'louder'\n    if (UNSAFE_componentWillMountUniqueNames.size > 0) {\n      const sortedNames = setToSortedString(\n        UNSAFE_componentWillMountUniqueNames,\n      );\n      console.error(\n        'Using UNSAFE_componentWillMount in strict mode is not recommended and may indicate bugs in your code. ' +\n          'See https://reactjs.org/link/unsafe-component-lifecycles for details.\\n\\n' +\n          '* Move code with side effects to componentDidMount, and set initial state in the constructor.\\n' +\n          '\\nPlease update the following components: %s',\n        sortedNames,\n      );\n    }\n\n    if (UNSAFE_componentWillReceivePropsUniqueNames.size > 0) {\n      const sortedNames = setToSortedString(\n        UNSAFE_componentWillReceivePropsUniqueNames,\n      );\n      console.error(\n        'Using UNSAFE_componentWillReceiveProps in strict mode is not recommended ' +\n          'and may indicate bugs in your code. ' +\n          'See https://reactjs.org/link/unsafe-component-lifecycles for details.\\n\\n' +\n          '* Move data fetching code or side effects to componentDidUpdate.\\n' +\n          \"* If you're updating state whenever props change, \" +\n          'refactor your code to use memoization techniques or move it to ' +\n          'static getDerivedStateFromProps. Learn more at: https://reactjs.org/link/derived-state\\n' +\n          '\\nPlease update the following components: %s',\n        sortedNames,\n      );\n    }\n\n    if (UNSAFE_componentWillUpdateUniqueNames.size > 0) {\n      const sortedNames = setToSortedString(\n        UNSAFE_componentWillUpdateUniqueNames,\n      );\n      console.error(\n        'Using UNSAFE_componentWillUpdate in strict mode is not recommended ' +\n          'and may indicate bugs in your code. ' +\n          'See https://reactjs.org/link/unsafe-component-lifecycles for details.\\n\\n' +\n          '* Move data fetching code or side effects to componentDidUpdate.\\n' +\n          '\\nPlease update the following components: %s',\n        sortedNames,\n      );\n    }\n\n    if (componentWillMountUniqueNames.size > 0) {\n      const sortedNames = setToSortedString(componentWillMountUniqueNames);\n\n      console.warn(\n        'componentWillMount has been renamed, and is not recommended for use. ' +\n          'See https://reactjs.org/link/unsafe-component-lifecycles for details.\\n\\n' +\n          '* Move code with side effects to componentDidMount, and set initial state in the constructor.\\n' +\n          '* Rename componentWillMount to UNSAFE_componentWillMount to suppress ' +\n          'this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. ' +\n          'To rename all deprecated lifecycles to their new names, you can run ' +\n          '`npx react-codemod rename-unsafe-lifecycles` in your project source folder.\\n' +\n          '\\nPlease update the following components: %s',\n        sortedNames,\n      );\n    }\n\n    if (componentWillReceivePropsUniqueNames.size > 0) {\n      const sortedNames = setToSortedString(\n        componentWillReceivePropsUniqueNames,\n      );\n\n      console.warn(\n        'componentWillReceiveProps has been renamed, and is not recommended for use. ' +\n          'See https://reactjs.org/link/unsafe-component-lifecycles for details.\\n\\n' +\n          '* Move data fetching code or side effects to componentDidUpdate.\\n' +\n          \"* If you're updating state whenever props change, refactor your \" +\n          'code to use memoization techniques or move it to ' +\n          'static getDerivedStateFromProps. Learn more at: https://reactjs.org/link/derived-state\\n' +\n          '* Rename componentWillReceiveProps to UNSAFE_componentWillReceiveProps to suppress ' +\n          'this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. ' +\n          'To rename all deprecated lifecycles to their new names, you can run ' +\n          '`npx react-codemod rename-unsafe-lifecycles` in your project source folder.\\n' +\n          '\\nPlease update the following components: %s',\n        sortedNames,\n      );\n    }\n\n    if (componentWillUpdateUniqueNames.size > 0) {\n      const sortedNames = setToSortedString(componentWillUpdateUniqueNames);\n\n      console.warn(\n        'componentWillUpdate has been renamed, and is not recommended for use. ' +\n          'See https://reactjs.org/link/unsafe-component-lifecycles for details.\\n\\n' +\n          '* Move data fetching code or side effects to componentDidUpdate.\\n' +\n          '* Rename componentWillUpdate to UNSAFE_componentWillUpdate to suppress ' +\n          'this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. ' +\n          'To rename all deprecated lifecycles to their new names, you can run ' +\n          '`npx react-codemod rename-unsafe-lifecycles` in your project source folder.\\n' +\n          '\\nPlease update the following components: %s',\n        sortedNames,\n      );\n    }\n  };\n\n  let pendingLegacyContextWarning: FiberToFiberComponentsMap = new Map();\n\n  // Tracks components we have already warned about.\n  const didWarnAboutLegacyContext = new Set();\n\n  ReactStrictModeWarnings.recordLegacyContextWarning = (\n    fiber: Fiber,\n    instance: any,\n  ) => {\n    const strictRoot = findStrictRoot(fiber);\n    if (strictRoot === null) {\n      console.error(\n        'Expected to find a StrictMode component in a strict mode tree. ' +\n          'This error is likely caused by a bug in React. Please file an issue.',\n      );\n      return;\n    }\n\n    // Dedup strategy: Warn once per component.\n    if (didWarnAboutLegacyContext.has(fiber.type)) {\n      return;\n    }\n\n    let warningsForRoot = pendingLegacyContextWarning.get(strictRoot);\n\n    if (\n      fiber.type.contextTypes != null ||\n      fiber.type.childContextTypes != null ||\n      (instance !== null && typeof instance.getChildContext === 'function')\n    ) {\n      if (warningsForRoot === undefined) {\n        warningsForRoot = [];\n        pendingLegacyContextWarning.set(strictRoot, warningsForRoot);\n      }\n      warningsForRoot.push(fiber);\n    }\n  };\n\n  ReactStrictModeWarnings.flushLegacyContextWarning = () => {\n    ((pendingLegacyContextWarning: any): FiberToFiberComponentsMap).forEach(\n      (fiberArray: FiberArray, strictRoot) => {\n        if (fiberArray.length === 0) {\n          return;\n        }\n        const firstFiber = fiberArray[0];\n\n        const uniqueNames = new Set();\n        fiberArray.forEach(fiber => {\n          uniqueNames.add(getComponentName(fiber.type) || 'Component');\n          didWarnAboutLegacyContext.add(fiber.type);\n        });\n\n        const sortedNames = setToSortedString(uniqueNames);\n\n        try {\n          setCurrentDebugFiberInDEV(firstFiber);\n          console.error(\n            'Legacy context API has been detected within a strict-mode tree.' +\n              '\\n\\nThe old API will be supported in all 16.x releases, but applications ' +\n              'using it should migrate to the new version.' +\n              '\\n\\nPlease update the following components: %s' +\n              '\\n\\nLearn more about this warning here: https://reactjs.org/link/legacy-context',\n            sortedNames,\n          );\n        } finally {\n          resetCurrentDebugFiberInDEV();\n        }\n      },\n    );\n  };\n\n  ReactStrictModeWarnings.discardPendingWarnings = () => {\n    pendingComponentWillMountWarnings = [];\n    pendingUNSAFE_ComponentWillMountWarnings = [];\n    pendingComponentWillReceivePropsWarnings = [];\n    pendingUNSAFE_ComponentWillReceivePropsWarnings = [];\n    pendingComponentWillUpdateWarnings = [];\n    pendingUNSAFE_ComponentWillUpdateWarnings = [];\n    pendingLegacyContextWarning = new Map();\n  };\n}\n\nexport default ReactStrictModeWarnings;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nexport function resolveDefaultProps(Component: any, baseProps: Object): Object {\n  if (Component && Component.defaultProps) {\n    // Resolve default props. Taken from ReactElement\n    const props = Object.assign({}, baseProps);\n    const defaultProps = Component.defaultProps;\n    for (const propName in defaultProps) {\n      if (props[propName] === undefined) {\n        props[propName] = defaultProps[propName];\n      }\n    }\n    return props;\n  }\n  return baseProps;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\n// Max 31 bit integer. The max integer size in V8 for 32-bit systems.\n// Math.pow(2, 30) - 1\n// 0b111111111111111111111111111111\nexport const MAX_SIGNED_31_BIT_INT = 1073741823;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {ReactContext} from 'shared/ReactTypes';\nimport type {Fiber, ContextDependency} from './ReactInternalTypes';\nimport type {StackCursor} from './ReactFiberStack.old';\nimport type {Lanes} from './ReactFiberLane';\n\nimport {isPrimaryRenderer} from './ReactFiberHostConfig';\nimport {createCursor, push, pop} from './ReactFiberStack.old';\nimport {MAX_SIGNED_31_BIT_INT} from './MaxInts';\nimport {\n  ContextProvider,\n  ClassComponent,\n  DehydratedFragment,\n} from './ReactWorkTags';\nimport {\n  NoLanes,\n  NoTimestamp,\n  isSubsetOfLanes,\n  includesSomeLane,\n  mergeLanes,\n  pickArbitraryLane,\n} from './ReactFiberLane';\n\nimport invariant from 'shared/invariant';\nimport is from 'shared/objectIs';\nimport {createUpdate, enqueueUpdate, ForceUpdate} from './ReactUpdateQueue.old';\nimport {markWorkInProgressReceivedUpdate} from './ReactFiberBeginWork.old';\nimport {enableSuspenseServerRenderer} from 'shared/ReactFeatureFlags';\n\nconst valueCursor: StackCursor<mixed> = createCursor(null);\n\nlet rendererSigil;\nif (__DEV__) {\n  // Use this to detect multiple renderers using the same context\n  rendererSigil = {};\n}\n\nlet currentlyRenderingFiber: Fiber | null = null;\nlet lastContextDependency: ContextDependency<mixed> | null = null;\nlet lastContextWithAllBitsObserved: ReactContext<any> | null = null;\n\nlet isDisallowedContextReadInDEV: boolean = false;\n\nexport function resetContextDependencies(): void {\n  // This is called right before React yields execution, to ensure `readContext`\n  // cannot be called outside the render phase.\n  currentlyRenderingFiber = null;\n  lastContextDependency = null;\n  lastContextWithAllBitsObserved = null;\n  if (__DEV__) {\n    isDisallowedContextReadInDEV = false;\n  }\n}\n\nexport function enterDisallowedContextReadInDEV(): void {\n  if (__DEV__) {\n    isDisallowedContextReadInDEV = true;\n  }\n}\n\nexport function exitDisallowedContextReadInDEV(): void {\n  if (__DEV__) {\n    isDisallowedContextReadInDEV = false;\n  }\n}\n\nexport function pushProvider<T>(providerFiber: Fiber, nextValue: T): void {\n  const context: ReactContext<T> = providerFiber.type._context;\n\n  if (isPrimaryRenderer) {\n    push(valueCursor, context._currentValue, providerFiber);\n\n    context._currentValue = nextValue;\n    if (__DEV__) {\n      if (\n        context._currentRenderer !== undefined &&\n        context._currentRenderer !== null &&\n        context._currentRenderer !== rendererSigil\n      ) {\n        console.error(\n          'Detected multiple renderers concurrently rendering the ' +\n            'same context provider. This is currently unsupported.',\n        );\n      }\n      context._currentRenderer = rendererSigil;\n    }\n  } else {\n    push(valueCursor, context._currentValue2, providerFiber);\n\n    context._currentValue2 = nextValue;\n    if (__DEV__) {\n      if (\n        context._currentRenderer2 !== undefined &&\n        context._currentRenderer2 !== null &&\n        context._currentRenderer2 !== rendererSigil\n      ) {\n        console.error(\n          'Detected multiple renderers concurrently rendering the ' +\n            'same context provider. This is currently unsupported.',\n        );\n      }\n      context._currentRenderer2 = rendererSigil;\n    }\n  }\n}\n\nexport function popProvider(providerFiber: Fiber): void {\n  const currentValue = valueCursor.current;\n\n  pop(valueCursor, providerFiber);\n\n  const context: ReactContext<any> = providerFiber.type._context;\n  if (isPrimaryRenderer) {\n    context._currentValue = currentValue;\n  } else {\n    context._currentValue2 = currentValue;\n  }\n}\n\nexport function calculateChangedBits<T>(\n  context: ReactContext<T>,\n  newValue: T,\n  oldValue: T,\n) {\n  if (is(oldValue, newValue)) {\n    // No change\n    return 0;\n  } else {\n    const changedBits =\n      typeof context._calculateChangedBits === 'function'\n        ? context._calculateChangedBits(oldValue, newValue)\n        : MAX_SIGNED_31_BIT_INT;\n\n    if (__DEV__) {\n      if ((changedBits & MAX_SIGNED_31_BIT_INT) !== changedBits) {\n        console.error(\n          'calculateChangedBits: Expected the return value to be a ' +\n            '31-bit integer. Instead received: %s',\n          changedBits,\n        );\n      }\n    }\n    return changedBits | 0;\n  }\n}\n\nexport function scheduleWorkOnParentPath(\n  parent: Fiber | null,\n  renderLanes: Lanes,\n) {\n  // Update the child lanes of all the ancestors, including the alternates.\n  let node = parent;\n  while (node !== null) {\n    const alternate = node.alternate;\n    if (!isSubsetOfLanes(node.childLanes, renderLanes)) {\n      node.childLanes = mergeLanes(node.childLanes, renderLanes);\n      if (alternate !== null) {\n        alternate.childLanes = mergeLanes(alternate.childLanes, renderLanes);\n      }\n    } else if (\n      alternate !== null &&\n      !isSubsetOfLanes(alternate.childLanes, renderLanes)\n    ) {\n      alternate.childLanes = mergeLanes(alternate.childLanes, renderLanes);\n    } else {\n      // Neither alternate was updated, which means the rest of the\n      // ancestor path already has sufficient priority.\n      break;\n    }\n    node = node.return;\n  }\n}\n\nexport function propagateContextChange(\n  workInProgress: Fiber,\n  context: ReactContext<mixed>,\n  changedBits: number,\n  renderLanes: Lanes,\n): void {\n  let fiber = workInProgress.child;\n  if (fiber !== null) {\n    // Set the return pointer of the child to the work-in-progress fiber.\n    fiber.return = workInProgress;\n  }\n  while (fiber !== null) {\n    let nextFiber;\n\n    // Visit this fiber.\n    const list = fiber.dependencies;\n    if (list !== null) {\n      nextFiber = fiber.child;\n\n      let dependency = list.firstContext;\n      while (dependency !== null) {\n        // Check if the context matches.\n        if (\n          dependency.context === context &&\n          (dependency.observedBits & changedBits) !== 0\n        ) {\n          // Match! Schedule an update on this fiber.\n\n          if (fiber.tag === ClassComponent) {\n            // Schedule a force update on the work-in-progress.\n            const update = createUpdate(\n              NoTimestamp,\n              pickArbitraryLane(renderLanes),\n            );\n            update.tag = ForceUpdate;\n            // TODO: Because we don't have a work-in-progress, this will add the\n            // update to the current fiber, too, which means it will persist even if\n            // this render is thrown away. Since it's a race condition, not sure it's\n            // worth fixing.\n            enqueueUpdate(fiber, update);\n          }\n          fiber.lanes = mergeLanes(fiber.lanes, renderLanes);\n          const alternate = fiber.alternate;\n          if (alternate !== null) {\n            alternate.lanes = mergeLanes(alternate.lanes, renderLanes);\n          }\n          scheduleWorkOnParentPath(fiber.return, renderLanes);\n\n          // Mark the updated lanes on the list, too.\n          list.lanes = mergeLanes(list.lanes, renderLanes);\n\n          // Since we already found a match, we can stop traversing the\n          // dependency list.\n          break;\n        }\n        dependency = dependency.next;\n      }\n    } else if (fiber.tag === ContextProvider) {\n      // Don't scan deeper if this is a matching provider\n      nextFiber = fiber.type === workInProgress.type ? null : fiber.child;\n    } else if (\n      enableSuspenseServerRenderer &&\n      fiber.tag === DehydratedFragment\n    ) {\n      // If a dehydrated suspense boundary is in this subtree, we don't know\n      // if it will have any context consumers in it. The best we can do is\n      // mark it as having updates.\n      const parentSuspense = fiber.return;\n      invariant(\n        parentSuspense !== null,\n        'We just came from a parent so we must have had a parent. This is a bug in React.',\n      );\n      parentSuspense.lanes = mergeLanes(parentSuspense.lanes, renderLanes);\n      const alternate = parentSuspense.alternate;\n      if (alternate !== null) {\n        alternate.lanes = mergeLanes(alternate.lanes, renderLanes);\n      }\n      // This is intentionally passing this fiber as the parent\n      // because we want to schedule this fiber as having work\n      // on its children. We'll use the childLanes on\n      // this fiber to indicate that a context has changed.\n      scheduleWorkOnParentPath(parentSuspense, renderLanes);\n      nextFiber = fiber.sibling;\n    } else {\n      // Traverse down.\n      nextFiber = fiber.child;\n    }\n\n    if (nextFiber !== null) {\n      // Set the return pointer of the child to the work-in-progress fiber.\n      nextFiber.return = fiber;\n    } else {\n      // No child. Traverse to next sibling.\n      nextFiber = fiber;\n      while (nextFiber !== null) {\n        if (nextFiber === workInProgress) {\n          // We're back to the root of this subtree. Exit.\n          nextFiber = null;\n          break;\n        }\n        const sibling = nextFiber.sibling;\n        if (sibling !== null) {\n          // Set the return pointer of the sibling to the work-in-progress fiber.\n          sibling.return = nextFiber.return;\n          nextFiber = sibling;\n          break;\n        }\n        // No more siblings. Traverse up.\n        nextFiber = nextFiber.return;\n      }\n    }\n    fiber = nextFiber;\n  }\n}\n\nexport function prepareToReadContext(\n  workInProgress: Fiber,\n  renderLanes: Lanes,\n): void {\n  currentlyRenderingFiber = workInProgress;\n  lastContextDependency = null;\n  lastContextWithAllBitsObserved = null;\n\n  const dependencies = workInProgress.dependencies;\n  if (dependencies !== null) {\n    const firstContext = dependencies.firstContext;\n    if (firstContext !== null) {\n      if (includesSomeLane(dependencies.lanes, renderLanes)) {\n        // Context list has a pending update. Mark that this fiber performed work.\n        markWorkInProgressReceivedUpdate();\n      }\n      // Reset the work-in-progress list\n      dependencies.firstContext = null;\n    }\n  }\n}\n\nexport function readContext<T>(\n  context: ReactContext<T>,\n  observedBits: void | number | boolean,\n): T {\n  if (__DEV__) {\n    // This warning would fire if you read context inside a Hook like useMemo.\n    // Unlike the class check below, it's not enforced in production for perf.\n    if (isDisallowedContextReadInDEV) {\n      console.error(\n        'Context can only be read while React is rendering. ' +\n          'In classes, you can read it in the render method or getDerivedStateFromProps. ' +\n          'In function components, you can read it directly in the function body, but not ' +\n          'inside Hooks like useReducer() or useMemo().',\n      );\n    }\n  }\n\n  if (lastContextWithAllBitsObserved === context) {\n    // Nothing to do. We already observe everything in this context.\n  } else if (observedBits === false || observedBits === 0) {\n    // Do not observe any updates.\n  } else {\n    let resolvedObservedBits; // Avoid deopting on observable arguments or heterogeneous types.\n    if (\n      typeof observedBits !== 'number' ||\n      observedBits === MAX_SIGNED_31_BIT_INT\n    ) {\n      // Observe all updates.\n      lastContextWithAllBitsObserved = ((context: any): ReactContext<mixed>);\n      resolvedObservedBits = MAX_SIGNED_31_BIT_INT;\n    } else {\n      resolvedObservedBits = observedBits;\n    }\n\n    const contextItem = {\n      context: ((context: any): ReactContext<mixed>),\n      observedBits: resolvedObservedBits,\n      next: null,\n    };\n\n    if (lastContextDependency === null) {\n      invariant(\n        currentlyRenderingFiber !== null,\n        'Context can only be read while React is rendering. ' +\n          'In classes, you can read it in the render method or getDerivedStateFromProps. ' +\n          'In function components, you can read it directly in the function body, but not ' +\n          'inside Hooks like useReducer() or useMemo().',\n      );\n\n      // This is the first dependency for this component. Create a new list.\n      lastContextDependency = contextItem;\n      currentlyRenderingFiber.dependencies = {\n        lanes: NoLanes,\n        firstContext: contextItem,\n        responders: null,\n      };\n    } else {\n      // Append a new context item.\n      lastContextDependency = lastContextDependency.next = contextItem;\n    }\n  }\n  return isPrimaryRenderer ? context._currentValue : context._currentValue2;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\n// UpdateQueue is a linked list of prioritized updates.\n//\n// Like fibers, update queues come in pairs: a current queue, which represents\n// the visible state of the screen, and a work-in-progress queue, which can be\n// mutated and processed asynchronously before it is committed — a form of\n// double buffering. If a work-in-progress render is discarded before finishing,\n// we create a new work-in-progress by cloning the current queue.\n//\n// Both queues share a persistent, singly-linked list structure. To schedule an\n// update, we append it to the end of both queues. Each queue maintains a\n// pointer to first update in the persistent list that hasn't been processed.\n// The work-in-progress pointer always has a position equal to or greater than\n// the current queue, since we always work on that one. The current queue's\n// pointer is only updated during the commit phase, when we swap in the\n// work-in-progress.\n//\n// For example:\n//\n//   Current pointer:           A - B - C - D - E - F\n//   Work-in-progress pointer:              D - E - F\n//                                          ^\n//                                          The work-in-progress queue has\n//                                          processed more updates than current.\n//\n// The reason we append to both queues is because otherwise we might drop\n// updates without ever processing them. For example, if we only add updates to\n// the work-in-progress queue, some updates could be lost whenever a work-in\n// -progress render restarts by cloning from current. Similarly, if we only add\n// updates to the current queue, the updates will be lost whenever an already\n// in-progress queue commits and swaps with the current queue. However, by\n// adding to both queues, we guarantee that the update will be part of the next\n// work-in-progress. (And because the work-in-progress queue becomes the\n// current queue once it commits, there's no danger of applying the same\n// update twice.)\n//\n// Prioritization\n// --------------\n//\n// Updates are not sorted by priority, but by insertion; new updates are always\n// appended to the end of the list.\n//\n// The priority is still important, though. When processing the update queue\n// during the render phase, only the updates with sufficient priority are\n// included in the result. If we skip an update because it has insufficient\n// priority, it remains in the queue to be processed later, during a lower\n// priority render. Crucially, all updates subsequent to a skipped update also\n// remain in the queue *regardless of their priority*. That means high priority\n// updates are sometimes processed twice, at two separate priorities. We also\n// keep track of a base state, that represents the state before the first\n// update in the queue is applied.\n//\n// For example:\n//\n//   Given a base state of '', and the following queue of updates\n//\n//     A1 - B2 - C1 - D2\n//\n//   where the number indicates the priority, and the update is applied to the\n//   previous state by appending a letter, React will process these updates as\n//   two separate renders, one per distinct priority level:\n//\n//   First render, at priority 1:\n//     Base state: ''\n//     Updates: [A1, C1]\n//     Result state: 'AC'\n//\n//   Second render, at priority 2:\n//     Base state: 'A'            <-  The base state does not include C1,\n//                                    because B2 was skipped.\n//     Updates: [B2, C1, D2]      <-  C1 was rebased on top of B2\n//     Result state: 'ABCD'\n//\n// Because we process updates in insertion order, and rebase high priority\n// updates when preceding updates are skipped, the final result is deterministic\n// regardless of priority. Intermediate state may vary according to system\n// resources, but the final state is always the same.\n\nimport type {Fiber} from './ReactInternalTypes';\nimport type {Lanes, Lane} from './ReactFiberLane';\n\nimport {NoLane, NoLanes, isSubsetOfLanes, mergeLanes} from './ReactFiberLane';\nimport {\n  enterDisallowedContextReadInDEV,\n  exitDisallowedContextReadInDEV,\n} from './ReactFiberNewContext.old';\nimport {Callback, ShouldCapture, DidCapture} from './ReactFiberFlags';\n\nimport {debugRenderPhaseSideEffectsForStrictMode} from 'shared/ReactFeatureFlags';\n\nimport {StrictMode} from './ReactTypeOfMode';\nimport {markSkippedUpdateLanes} from './ReactFiberWorkLoop.old';\n\nimport invariant from 'shared/invariant';\n\nimport {disableLogs, reenableLogs} from 'shared/ConsolePatchingDev';\n\nexport type Update<State> = {|\n  // TODO: Temporary field. Will remove this by storing a map of\n  // transition -> event time on the root.\n  eventTime: number,\n  lane: Lane,\n\n  tag: 0 | 1 | 2 | 3,\n  payload: any,\n  callback: (() => mixed) | null,\n\n  next: Update<State> | null,\n|};\n\ntype SharedQueue<State> = {|\n  pending: Update<State> | null,\n|};\n\nexport type UpdateQueue<State> = {|\n  baseState: State,\n  firstBaseUpdate: Update<State> | null,\n  lastBaseUpdate: Update<State> | null,\n  shared: SharedQueue<State>,\n  effects: Array<Update<State>> | null,\n|};\n\nexport const UpdateState = 0;\nexport const ReplaceState = 1;\nexport const ForceUpdate = 2;\nexport const CaptureUpdate = 3;\n\n// Global state that is reset at the beginning of calling `processUpdateQueue`.\n// It should only be read right after calling `processUpdateQueue`, via\n// `checkHasForceUpdateAfterProcessing`.\nlet hasForceUpdate = false;\n\nlet didWarnUpdateInsideUpdate;\nlet currentlyProcessingQueue;\nexport let resetCurrentlyProcessingQueue;\nif (__DEV__) {\n  didWarnUpdateInsideUpdate = false;\n  currentlyProcessingQueue = null;\n  resetCurrentlyProcessingQueue = () => {\n    currentlyProcessingQueue = null;\n  };\n}\n\nexport function initializeUpdateQueue<State>(fiber: Fiber): void {\n  const queue: UpdateQueue<State> = {\n    baseState: fiber.memoizedState,\n    firstBaseUpdate: null,\n    lastBaseUpdate: null,\n    shared: {\n      pending: null,\n    },\n    effects: null,\n  };\n  fiber.updateQueue = queue;\n}\n\nexport function cloneUpdateQueue<State>(\n  current: Fiber,\n  workInProgress: Fiber,\n): void {\n  // Clone the update queue from current. Unless it's already a clone.\n  const queue: UpdateQueue<State> = (workInProgress.updateQueue: any);\n  const currentQueue: UpdateQueue<State> = (current.updateQueue: any);\n  if (queue === currentQueue) {\n    const clone: UpdateQueue<State> = {\n      baseState: currentQueue.baseState,\n      firstBaseUpdate: currentQueue.firstBaseUpdate,\n      lastBaseUpdate: currentQueue.lastBaseUpdate,\n      shared: currentQueue.shared,\n      effects: currentQueue.effects,\n    };\n    workInProgress.updateQueue = clone;\n  }\n}\n\nexport function createUpdate(eventTime: number, lane: Lane): Update<*> {\n  const update: Update<*> = {\n    eventTime,\n    lane,\n\n    tag: UpdateState,\n    payload: null,\n    callback: null,\n\n    next: null,\n  };\n  return update;\n}\n\nexport function enqueueUpdate<State>(fiber: Fiber, update: Update<State>) {\n  const updateQueue = fiber.updateQueue;\n  if (updateQueue === null) {\n    // Only occurs if the fiber has been unmounted.\n    return;\n  }\n\n  const sharedQueue: SharedQueue<State> = (updateQueue: any).shared;\n  const pending = sharedQueue.pending;\n  if (pending === null) {\n    // This is the first update. Create a circular list.\n    update.next = update;\n  } else {\n    update.next = pending.next;\n    pending.next = update;\n  }\n  sharedQueue.pending = update;\n\n  if (__DEV__) {\n    if (\n      currentlyProcessingQueue === sharedQueue &&\n      !didWarnUpdateInsideUpdate\n    ) {\n      console.error(\n        'An update (setState, replaceState, or forceUpdate) was scheduled ' +\n          'from inside an update function. Update functions should be pure, ' +\n          'with zero side-effects. Consider using componentDidUpdate or a ' +\n          'callback.',\n      );\n      didWarnUpdateInsideUpdate = true;\n    }\n  }\n}\n\nexport function enqueueCapturedUpdate<State>(\n  workInProgress: Fiber,\n  capturedUpdate: Update<State>,\n) {\n  // Captured updates are updates that are thrown by a child during the render\n  // phase. They should be discarded if the render is aborted. Therefore,\n  // we should only put them on the work-in-progress queue, not the current one.\n  let queue: UpdateQueue<State> = (workInProgress.updateQueue: any);\n\n  // Check if the work-in-progress queue is a clone.\n  const current = workInProgress.alternate;\n  if (current !== null) {\n    const currentQueue: UpdateQueue<State> = (current.updateQueue: any);\n    if (queue === currentQueue) {\n      // The work-in-progress queue is the same as current. This happens when\n      // we bail out on a parent fiber that then captures an error thrown by\n      // a child. Since we want to append the update only to the work-in\n      // -progress queue, we need to clone the updates. We usually clone during\n      // processUpdateQueue, but that didn't happen in this case because we\n      // skipped over the parent when we bailed out.\n      let newFirst = null;\n      let newLast = null;\n      const firstBaseUpdate = queue.firstBaseUpdate;\n      if (firstBaseUpdate !== null) {\n        // Loop through the updates and clone them.\n        let update = firstBaseUpdate;\n        do {\n          const clone: Update<State> = {\n            eventTime: update.eventTime,\n            lane: update.lane,\n\n            tag: update.tag,\n            payload: update.payload,\n            callback: update.callback,\n\n            next: null,\n          };\n          if (newLast === null) {\n            newFirst = newLast = clone;\n          } else {\n            newLast.next = clone;\n            newLast = clone;\n          }\n          update = update.next;\n        } while (update !== null);\n\n        // Append the captured update the end of the cloned list.\n        if (newLast === null) {\n          newFirst = newLast = capturedUpdate;\n        } else {\n          newLast.next = capturedUpdate;\n          newLast = capturedUpdate;\n        }\n      } else {\n        // There are no base updates.\n        newFirst = newLast = capturedUpdate;\n      }\n      queue = {\n        baseState: currentQueue.baseState,\n        firstBaseUpdate: newFirst,\n        lastBaseUpdate: newLast,\n        shared: currentQueue.shared,\n        effects: currentQueue.effects,\n      };\n      workInProgress.updateQueue = queue;\n      return;\n    }\n  }\n\n  // Append the update to the end of the list.\n  const lastBaseUpdate = queue.lastBaseUpdate;\n  if (lastBaseUpdate === null) {\n    queue.firstBaseUpdate = capturedUpdate;\n  } else {\n    lastBaseUpdate.next = capturedUpdate;\n  }\n  queue.lastBaseUpdate = capturedUpdate;\n}\n\nfunction getStateFromUpdate<State>(\n  workInProgress: Fiber,\n  queue: UpdateQueue<State>,\n  update: Update<State>,\n  prevState: State,\n  nextProps: any,\n  instance: any,\n): any {\n  switch (update.tag) {\n    case ReplaceState: {\n      const payload = update.payload;\n      if (typeof payload === 'function') {\n        // Updater function\n        if (__DEV__) {\n          enterDisallowedContextReadInDEV();\n        }\n        const nextState = payload.call(instance, prevState, nextProps);\n        if (__DEV__) {\n          if (\n            debugRenderPhaseSideEffectsForStrictMode &&\n            workInProgress.mode & StrictMode\n          ) {\n            disableLogs();\n            try {\n              payload.call(instance, prevState, nextProps);\n            } finally {\n              reenableLogs();\n            }\n          }\n          exitDisallowedContextReadInDEV();\n        }\n        return nextState;\n      }\n      // State object\n      return payload;\n    }\n    case CaptureUpdate: {\n      workInProgress.flags =\n        (workInProgress.flags & ~ShouldCapture) | DidCapture;\n    }\n    // Intentional fallthrough\n    case UpdateState: {\n      const payload = update.payload;\n      let partialState;\n      if (typeof payload === 'function') {\n        // Updater function\n        if (__DEV__) {\n          enterDisallowedContextReadInDEV();\n        }\n        partialState = payload.call(instance, prevState, nextProps);\n        if (__DEV__) {\n          if (\n            debugRenderPhaseSideEffectsForStrictMode &&\n            workInProgress.mode & StrictMode\n          ) {\n            disableLogs();\n            try {\n              payload.call(instance, prevState, nextProps);\n            } finally {\n              reenableLogs();\n            }\n          }\n          exitDisallowedContextReadInDEV();\n        }\n      } else {\n        // Partial state object\n        partialState = payload;\n      }\n      if (partialState === null || partialState === undefined) {\n        // Null and undefined are treated as no-ops.\n        return prevState;\n      }\n      // Merge the partial state and the previous state.\n      return Object.assign({}, prevState, partialState);\n    }\n    case ForceUpdate: {\n      hasForceUpdate = true;\n      return prevState;\n    }\n  }\n  return prevState;\n}\n\nexport function processUpdateQueue<State>(\n  workInProgress: Fiber,\n  props: any,\n  instance: any,\n  renderLanes: Lanes,\n): void {\n  // This is always non-null on a ClassComponent or HostRoot\n  const queue: UpdateQueue<State> = (workInProgress.updateQueue: any);\n\n  hasForceUpdate = false;\n\n  if (__DEV__) {\n    currentlyProcessingQueue = queue.shared;\n  }\n\n  let firstBaseUpdate = queue.firstBaseUpdate;\n  let lastBaseUpdate = queue.lastBaseUpdate;\n\n  // Check if there are pending updates. If so, transfer them to the base queue.\n  let pendingQueue = queue.shared.pending;\n  if (pendingQueue !== null) {\n    queue.shared.pending = null;\n\n    // The pending queue is circular. Disconnect the pointer between first\n    // and last so that it's non-circular.\n    const lastPendingUpdate = pendingQueue;\n    const firstPendingUpdate = lastPendingUpdate.next;\n    lastPendingUpdate.next = null;\n    // Append pending updates to base queue\n    if (lastBaseUpdate === null) {\n      firstBaseUpdate = firstPendingUpdate;\n    } else {\n      lastBaseUpdate.next = firstPendingUpdate;\n    }\n    lastBaseUpdate = lastPendingUpdate;\n\n    // If there's a current queue, and it's different from the base queue, then\n    // we need to transfer the updates to that queue, too. Because the base\n    // queue is a singly-linked list with no cycles, we can append to both\n    // lists and take advantage of structural sharing.\n    // TODO: Pass `current` as argument\n    const current = workInProgress.alternate;\n    if (current !== null) {\n      // This is always non-null on a ClassComponent or HostRoot\n      const currentQueue: UpdateQueue<State> = (current.updateQueue: any);\n      const currentLastBaseUpdate = currentQueue.lastBaseUpdate;\n      if (currentLastBaseUpdate !== lastBaseUpdate) {\n        if (currentLastBaseUpdate === null) {\n          currentQueue.firstBaseUpdate = firstPendingUpdate;\n        } else {\n          currentLastBaseUpdate.next = firstPendingUpdate;\n        }\n        currentQueue.lastBaseUpdate = lastPendingUpdate;\n      }\n    }\n  }\n\n  // These values may change as we process the queue.\n  if (firstBaseUpdate !== null) {\n    // Iterate through the list of updates to compute the result.\n    let newState = queue.baseState;\n    // TODO: Don't need to accumulate this. Instead, we can remove renderLanes\n    // from the original lanes.\n    let newLanes = NoLanes;\n\n    let newBaseState = null;\n    let newFirstBaseUpdate = null;\n    let newLastBaseUpdate = null;\n\n    let update = firstBaseUpdate;\n    do {\n      const updateLane = update.lane;\n      const updateEventTime = update.eventTime;\n      if (!isSubsetOfLanes(renderLanes, updateLane)) {\n        // Priority is insufficient. Skip this update. If this is the first\n        // skipped update, the previous update/state is the new base\n        // update/state.\n        const clone: Update<State> = {\n          eventTime: updateEventTime,\n          lane: updateLane,\n\n          tag: update.tag,\n          payload: update.payload,\n          callback: update.callback,\n\n          next: null,\n        };\n        if (newLastBaseUpdate === null) {\n          newFirstBaseUpdate = newLastBaseUpdate = clone;\n          newBaseState = newState;\n        } else {\n          newLastBaseUpdate = newLastBaseUpdate.next = clone;\n        }\n        // Update the remaining priority in the queue.\n        newLanes = mergeLanes(newLanes, updateLane);\n      } else {\n        // This update does have sufficient priority.\n\n        if (newLastBaseUpdate !== null) {\n          const clone: Update<State> = {\n            eventTime: updateEventTime,\n            // This update is going to be committed so we never want uncommit\n            // it. Using NoLane works because 0 is a subset of all bitmasks, so\n            // this will never be skipped by the check above.\n            lane: NoLane,\n\n            tag: update.tag,\n            payload: update.payload,\n            callback: update.callback,\n\n            next: null,\n          };\n          newLastBaseUpdate = newLastBaseUpdate.next = clone;\n        }\n\n        // Process this update.\n        newState = getStateFromUpdate(\n          workInProgress,\n          queue,\n          update,\n          newState,\n          props,\n          instance,\n        );\n        const callback = update.callback;\n        if (callback !== null) {\n          workInProgress.flags |= Callback;\n          const effects = queue.effects;\n          if (effects === null) {\n            queue.effects = [update];\n          } else {\n            effects.push(update);\n          }\n        }\n      }\n      update = update.next;\n      if (update === null) {\n        pendingQueue = queue.shared.pending;\n        if (pendingQueue === null) {\n          break;\n        } else {\n          // An update was scheduled from inside a reducer. Add the new\n          // pending updates to the end of the list and keep processing.\n          const lastPendingUpdate = pendingQueue;\n          // Intentionally unsound. Pending updates form a circular list, but we\n          // unravel them when transferring them to the base queue.\n          const firstPendingUpdate = ((lastPendingUpdate.next: any): Update<State>);\n          lastPendingUpdate.next = null;\n          update = firstPendingUpdate;\n          queue.lastBaseUpdate = lastPendingUpdate;\n          queue.shared.pending = null;\n        }\n      }\n    } while (true);\n\n    if (newLastBaseUpdate === null) {\n      newBaseState = newState;\n    }\n\n    queue.baseState = ((newBaseState: any): State);\n    queue.firstBaseUpdate = newFirstBaseUpdate;\n    queue.lastBaseUpdate = newLastBaseUpdate;\n\n    // Set the remaining expiration time to be whatever is remaining in the queue.\n    // This should be fine because the only two other things that contribute to\n    // expiration time are props and context. We're already in the middle of the\n    // begin phase by the time we start processing the queue, so we've already\n    // dealt with the props. Context in components that specify\n    // shouldComponentUpdate is tricky; but we'll have to account for\n    // that regardless.\n    markSkippedUpdateLanes(newLanes);\n    workInProgress.lanes = newLanes;\n    workInProgress.memoizedState = newState;\n  }\n\n  if (__DEV__) {\n    currentlyProcessingQueue = null;\n  }\n}\n\nfunction callCallback(callback, context) {\n  invariant(\n    typeof callback === 'function',\n    'Invalid argument passed as callback. Expected a function. Instead ' +\n      'received: %s',\n    callback,\n  );\n  callback.call(context);\n}\n\nexport function resetHasForceUpdateBeforeProcessing() {\n  hasForceUpdate = false;\n}\n\nexport function checkHasForceUpdateAfterProcessing(): boolean {\n  return hasForceUpdate;\n}\n\nexport function commitUpdateQueue<State>(\n  finishedWork: Fiber,\n  finishedQueue: UpdateQueue<State>,\n  instance: any,\n): void {\n  // Commit the effects\n  const effects = finishedQueue.effects;\n  finishedQueue.effects = null;\n  if (effects !== null) {\n    for (let i = 0; i < effects.length; i++) {\n      const effect = effects[i];\n      const callback = effect.callback;\n      if (callback !== null) {\n        effect.callback = null;\n        callCallback(callback, instance);\n      }\n    }\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactInternalTypes';\nimport type {Lanes} from './ReactFiberLane';\nimport type {UpdateQueue} from './ReactUpdateQueue.old';\n\nimport * as React from 'react';\nimport {Update, Snapshot} from './ReactFiberFlags';\nimport {\n  debugRenderPhaseSideEffectsForStrictMode,\n  disableLegacyContext,\n  enableDebugTracing,\n  enableSchedulingProfiler,\n  warnAboutDeprecatedLifecycles,\n} from 'shared/ReactFeatureFlags';\nimport ReactStrictModeWarnings from './ReactStrictModeWarnings.old';\nimport {isMounted} from './ReactFiberTreeReflection';\nimport {get as getInstance, set as setInstance} from 'shared/ReactInstanceMap';\nimport shallowEqual from 'shared/shallowEqual';\nimport getComponentName from 'shared/getComponentName';\nimport invariant from 'shared/invariant';\nimport {REACT_CONTEXT_TYPE, REACT_PROVIDER_TYPE} from 'shared/ReactSymbols';\n\nimport {resolveDefaultProps} from './ReactFiberLazyComponent.old';\nimport {DebugTracingMode, StrictMode} from './ReactTypeOfMode';\n\nimport {\n  enqueueUpdate,\n  processUpdateQueue,\n  checkHasForceUpdateAfterProcessing,\n  resetHasForceUpdateBeforeProcessing,\n  createUpdate,\n  ReplaceState,\n  ForceUpdate,\n  initializeUpdateQueue,\n  cloneUpdateQueue,\n} from './ReactUpdateQueue.old';\nimport {NoLanes} from './ReactFiberLane';\nimport {\n  cacheContext,\n  getMaskedContext,\n  getUnmaskedContext,\n  hasContextChanged,\n  emptyContextObject,\n} from './ReactFiberContext.old';\nimport {readContext} from './ReactFiberNewContext.old';\nimport {\n  requestEventTime,\n  requestUpdateLane,\n  scheduleUpdateOnFiber,\n} from './ReactFiberWorkLoop.old';\nimport {logForceUpdateScheduled, logStateUpdateScheduled} from './DebugTracing';\n\nimport {disableLogs, reenableLogs} from 'shared/ConsolePatchingDev';\nimport {\n  markForceUpdateScheduled,\n  markStateUpdateScheduled,\n} from './SchedulingProfiler';\n\nconst fakeInternalInstance = {};\nconst isArray = Array.isArray;\n\n// React.Component uses a shared frozen object by default.\n// We'll use it to determine whether we need to initialize legacy refs.\nexport const emptyRefsObject = new React.Component().refs;\n\nlet didWarnAboutStateAssignmentForComponent;\nlet didWarnAboutUninitializedState;\nlet didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate;\nlet didWarnAboutLegacyLifecyclesAndDerivedState;\nlet didWarnAboutUndefinedDerivedState;\nlet warnOnUndefinedDerivedState;\nlet warnOnInvalidCallback;\nlet didWarnAboutDirectlyAssigningPropsToState;\nlet didWarnAboutContextTypeAndContextTypes;\nlet didWarnAboutInvalidateContextType;\n\nif (__DEV__) {\n  didWarnAboutStateAssignmentForComponent = new Set();\n  didWarnAboutUninitializedState = new Set();\n  didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate = new Set();\n  didWarnAboutLegacyLifecyclesAndDerivedState = new Set();\n  didWarnAboutDirectlyAssigningPropsToState = new Set();\n  didWarnAboutUndefinedDerivedState = new Set();\n  didWarnAboutContextTypeAndContextTypes = new Set();\n  didWarnAboutInvalidateContextType = new Set();\n\n  const didWarnOnInvalidCallback = new Set();\n\n  warnOnInvalidCallback = function(callback: mixed, callerName: string) {\n    if (callback === null || typeof callback === 'function') {\n      return;\n    }\n    const key = callerName + '_' + (callback: any);\n    if (!didWarnOnInvalidCallback.has(key)) {\n      didWarnOnInvalidCallback.add(key);\n      console.error(\n        '%s(...): Expected the last optional `callback` argument to be a ' +\n          'function. Instead received: %s.',\n        callerName,\n        callback,\n      );\n    }\n  };\n\n  warnOnUndefinedDerivedState = function(type, partialState) {\n    if (partialState === undefined) {\n      const componentName = getComponentName(type) || 'Component';\n      if (!didWarnAboutUndefinedDerivedState.has(componentName)) {\n        didWarnAboutUndefinedDerivedState.add(componentName);\n        console.error(\n          '%s.getDerivedStateFromProps(): A valid state object (or null) must be returned. ' +\n            'You have returned undefined.',\n          componentName,\n        );\n      }\n    }\n  };\n\n  // This is so gross but it's at least non-critical and can be removed if\n  // it causes problems. This is meant to give a nicer error message for\n  // ReactDOM15.unstable_renderSubtreeIntoContainer(reactDOM16Component,\n  // ...)) which otherwise throws a \"_processChildContext is not a function\"\n  // exception.\n  Object.defineProperty(fakeInternalInstance, '_processChildContext', {\n    enumerable: false,\n    value: function() {\n      invariant(\n        false,\n        '_processChildContext is not available in React 16+. This likely ' +\n          'means you have multiple copies of React and are attempting to nest ' +\n          'a React 15 tree inside a React 16 tree using ' +\n          \"unstable_renderSubtreeIntoContainer, which isn't supported. Try \" +\n          'to make sure you have only one copy of React (and ideally, switch ' +\n          'to ReactDOM.createPortal).',\n      );\n    },\n  });\n  Object.freeze(fakeInternalInstance);\n}\n\nexport function applyDerivedStateFromProps(\n  workInProgress: Fiber,\n  ctor: any,\n  getDerivedStateFromProps: (props: any, state: any) => any,\n  nextProps: any,\n) {\n  const prevState = workInProgress.memoizedState;\n\n  if (__DEV__) {\n    if (\n      debugRenderPhaseSideEffectsForStrictMode &&\n      workInProgress.mode & StrictMode\n    ) {\n      disableLogs();\n      try {\n        // Invoke the function an extra time to help detect side-effects.\n        getDerivedStateFromProps(nextProps, prevState);\n      } finally {\n        reenableLogs();\n      }\n    }\n  }\n\n  const partialState = getDerivedStateFromProps(nextProps, prevState);\n\n  if (__DEV__) {\n    warnOnUndefinedDerivedState(ctor, partialState);\n  }\n  // Merge the partial state and the previous state.\n  const memoizedState =\n    partialState === null || partialState === undefined\n      ? prevState\n      : Object.assign({}, prevState, partialState);\n  workInProgress.memoizedState = memoizedState;\n\n  // Once the update queue is empty, persist the derived state onto the\n  // base state.\n  if (workInProgress.lanes === NoLanes) {\n    // Queue is always non-null for classes\n    const updateQueue: UpdateQueue<any> = (workInProgress.updateQueue: any);\n    updateQueue.baseState = memoizedState;\n  }\n}\n\nconst classComponentUpdater = {\n  isMounted,\n  enqueueSetState(inst, payload, callback) {\n    const fiber = getInstance(inst);\n    const eventTime = requestEventTime();\n    const lane = requestUpdateLane(fiber);\n\n    const update = createUpdate(eventTime, lane);\n    update.payload = payload;\n    if (callback !== undefined && callback !== null) {\n      if (__DEV__) {\n        warnOnInvalidCallback(callback, 'setState');\n      }\n      update.callback = callback;\n    }\n\n    enqueueUpdate(fiber, update);\n    scheduleUpdateOnFiber(fiber, lane, eventTime);\n\n    if (__DEV__) {\n      if (enableDebugTracing) {\n        if (fiber.mode & DebugTracingMode) {\n          const name = getComponentName(fiber.type) || 'Unknown';\n          logStateUpdateScheduled(name, lane, payload);\n        }\n      }\n    }\n\n    if (enableSchedulingProfiler) {\n      markStateUpdateScheduled(fiber, lane);\n    }\n  },\n  enqueueReplaceState(inst, payload, callback) {\n    const fiber = getInstance(inst);\n    const eventTime = requestEventTime();\n    const lane = requestUpdateLane(fiber);\n\n    const update = createUpdate(eventTime, lane);\n    update.tag = ReplaceState;\n    update.payload = payload;\n\n    if (callback !== undefined && callback !== null) {\n      if (__DEV__) {\n        warnOnInvalidCallback(callback, 'replaceState');\n      }\n      update.callback = callback;\n    }\n\n    enqueueUpdate(fiber, update);\n    scheduleUpdateOnFiber(fiber, lane, eventTime);\n\n    if (__DEV__) {\n      if (enableDebugTracing) {\n        if (fiber.mode & DebugTracingMode) {\n          const name = getComponentName(fiber.type) || 'Unknown';\n          logStateUpdateScheduled(name, lane, payload);\n        }\n      }\n    }\n\n    if (enableSchedulingProfiler) {\n      markStateUpdateScheduled(fiber, lane);\n    }\n  },\n  enqueueForceUpdate(inst, callback) {\n    const fiber = getInstance(inst);\n    const eventTime = requestEventTime();\n    const lane = requestUpdateLane(fiber);\n\n    const update = createUpdate(eventTime, lane);\n    update.tag = ForceUpdate;\n\n    if (callback !== undefined && callback !== null) {\n      if (__DEV__) {\n        warnOnInvalidCallback(callback, 'forceUpdate');\n      }\n      update.callback = callback;\n    }\n\n    enqueueUpdate(fiber, update);\n    scheduleUpdateOnFiber(fiber, lane, eventTime);\n\n    if (__DEV__) {\n      if (enableDebugTracing) {\n        if (fiber.mode & DebugTracingMode) {\n          const name = getComponentName(fiber.type) || 'Unknown';\n          logForceUpdateScheduled(name, lane);\n        }\n      }\n    }\n\n    if (enableSchedulingProfiler) {\n      markForceUpdateScheduled(fiber, lane);\n    }\n  },\n};\n\nfunction checkShouldComponentUpdate(\n  workInProgress,\n  ctor,\n  oldProps,\n  newProps,\n  oldState,\n  newState,\n  nextContext,\n) {\n  const instance = workInProgress.stateNode;\n  if (typeof instance.shouldComponentUpdate === 'function') {\n    if (__DEV__) {\n      if (\n        debugRenderPhaseSideEffectsForStrictMode &&\n        workInProgress.mode & StrictMode\n      ) {\n        disableLogs();\n        try {\n          // Invoke the function an extra time to help detect side-effects.\n          instance.shouldComponentUpdate(newProps, newState, nextContext);\n        } finally {\n          reenableLogs();\n        }\n      }\n    }\n    const shouldUpdate = instance.shouldComponentUpdate(\n      newProps,\n      newState,\n      nextContext,\n    );\n\n    if (__DEV__) {\n      if (shouldUpdate === undefined) {\n        console.error(\n          '%s.shouldComponentUpdate(): Returned undefined instead of a ' +\n            'boolean value. Make sure to return true or false.',\n          getComponentName(ctor) || 'Component',\n        );\n      }\n    }\n\n    return shouldUpdate;\n  }\n\n  if (ctor.prototype && ctor.prototype.isPureReactComponent) {\n    return (\n      !shallowEqual(oldProps, newProps) || !shallowEqual(oldState, newState)\n    );\n  }\n\n  return true;\n}\n\nfunction checkClassInstance(workInProgress: Fiber, ctor: any, newProps: any) {\n  const instance = workInProgress.stateNode;\n  if (__DEV__) {\n    const name = getComponentName(ctor) || 'Component';\n    const renderPresent = instance.render;\n\n    if (!renderPresent) {\n      if (ctor.prototype && typeof ctor.prototype.render === 'function') {\n        console.error(\n          '%s(...): No `render` method found on the returned component ' +\n            'instance: did you accidentally return an object from the constructor?',\n          name,\n        );\n      } else {\n        console.error(\n          '%s(...): No `render` method found on the returned component ' +\n            'instance: you may have forgotten to define `render`.',\n          name,\n        );\n      }\n    }\n\n    if (\n      instance.getInitialState &&\n      !instance.getInitialState.isReactClassApproved &&\n      !instance.state\n    ) {\n      console.error(\n        'getInitialState was defined on %s, a plain JavaScript class. ' +\n          'This is only supported for classes created using React.createClass. ' +\n          'Did you mean to define a state property instead?',\n        name,\n      );\n    }\n    if (\n      instance.getDefaultProps &&\n      !instance.getDefaultProps.isReactClassApproved\n    ) {\n      console.error(\n        'getDefaultProps was defined on %s, a plain JavaScript class. ' +\n          'This is only supported for classes created using React.createClass. ' +\n          'Use a static property to define defaultProps instead.',\n        name,\n      );\n    }\n    if (instance.propTypes) {\n      console.error(\n        'propTypes was defined as an instance property on %s. Use a static ' +\n          'property to define propTypes instead.',\n        name,\n      );\n    }\n    if (instance.contextType) {\n      console.error(\n        'contextType was defined as an instance property on %s. Use a static ' +\n          'property to define contextType instead.',\n        name,\n      );\n    }\n\n    if (disableLegacyContext) {\n      if (ctor.childContextTypes) {\n        console.error(\n          '%s uses the legacy childContextTypes API which is no longer supported. ' +\n            'Use React.createContext() instead.',\n          name,\n        );\n      }\n      if (ctor.contextTypes) {\n        console.error(\n          '%s uses the legacy contextTypes API which is no longer supported. ' +\n            'Use React.createContext() with static contextType instead.',\n          name,\n        );\n      }\n    } else {\n      if (instance.contextTypes) {\n        console.error(\n          'contextTypes was defined as an instance property on %s. Use a static ' +\n            'property to define contextTypes instead.',\n          name,\n        );\n      }\n\n      if (\n        ctor.contextType &&\n        ctor.contextTypes &&\n        !didWarnAboutContextTypeAndContextTypes.has(ctor)\n      ) {\n        didWarnAboutContextTypeAndContextTypes.add(ctor);\n        console.error(\n          '%s declares both contextTypes and contextType static properties. ' +\n            'The legacy contextTypes property will be ignored.',\n          name,\n        );\n      }\n    }\n\n    if (typeof instance.componentShouldUpdate === 'function') {\n      console.error(\n        '%s has a method called ' +\n          'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' +\n          'The name is phrased as a question because the function is ' +\n          'expected to return a value.',\n        name,\n      );\n    }\n    if (\n      ctor.prototype &&\n      ctor.prototype.isPureReactComponent &&\n      typeof instance.shouldComponentUpdate !== 'undefined'\n    ) {\n      console.error(\n        '%s has a method called shouldComponentUpdate(). ' +\n          'shouldComponentUpdate should not be used when extending React.PureComponent. ' +\n          'Please extend React.Component if shouldComponentUpdate is used.',\n        getComponentName(ctor) || 'A pure component',\n      );\n    }\n    if (typeof instance.componentDidUnmount === 'function') {\n      console.error(\n        '%s has a method called ' +\n          'componentDidUnmount(). But there is no such lifecycle method. ' +\n          'Did you mean componentWillUnmount()?',\n        name,\n      );\n    }\n    if (typeof instance.componentDidReceiveProps === 'function') {\n      console.error(\n        '%s has a method called ' +\n          'componentDidReceiveProps(). But there is no such lifecycle method. ' +\n          'If you meant to update the state in response to changing props, ' +\n          'use componentWillReceiveProps(). If you meant to fetch data or ' +\n          'run side-effects or mutations after React has updated the UI, use componentDidUpdate().',\n        name,\n      );\n    }\n    if (typeof instance.componentWillRecieveProps === 'function') {\n      console.error(\n        '%s has a method called ' +\n          'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?',\n        name,\n      );\n    }\n    if (typeof instance.UNSAFE_componentWillRecieveProps === 'function') {\n      console.error(\n        '%s has a method called ' +\n          'UNSAFE_componentWillRecieveProps(). Did you mean UNSAFE_componentWillReceiveProps()?',\n        name,\n      );\n    }\n    const hasMutatedProps = instance.props !== newProps;\n    if (instance.props !== undefined && hasMutatedProps) {\n      console.error(\n        '%s(...): When calling super() in `%s`, make sure to pass ' +\n          \"up the same props that your component's constructor was passed.\",\n        name,\n        name,\n      );\n    }\n    if (instance.defaultProps) {\n      console.error(\n        'Setting defaultProps as an instance property on %s is not supported and will be ignored.' +\n          ' Instead, define defaultProps as a static property on %s.',\n        name,\n        name,\n      );\n    }\n\n    if (\n      typeof instance.getSnapshotBeforeUpdate === 'function' &&\n      typeof instance.componentDidUpdate !== 'function' &&\n      !didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.has(ctor)\n    ) {\n      didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.add(ctor);\n      console.error(\n        '%s: getSnapshotBeforeUpdate() should be used with componentDidUpdate(). ' +\n          'This component defines getSnapshotBeforeUpdate() only.',\n        getComponentName(ctor),\n      );\n    }\n\n    if (typeof instance.getDerivedStateFromProps === 'function') {\n      console.error(\n        '%s: getDerivedStateFromProps() is defined as an instance method ' +\n          'and will be ignored. Instead, declare it as a static method.',\n        name,\n      );\n    }\n    if (typeof instance.getDerivedStateFromError === 'function') {\n      console.error(\n        '%s: getDerivedStateFromError() is defined as an instance method ' +\n          'and will be ignored. Instead, declare it as a static method.',\n        name,\n      );\n    }\n    if (typeof ctor.getSnapshotBeforeUpdate === 'function') {\n      console.error(\n        '%s: getSnapshotBeforeUpdate() is defined as a static method ' +\n          'and will be ignored. Instead, declare it as an instance method.',\n        name,\n      );\n    }\n    const state = instance.state;\n    if (state && (typeof state !== 'object' || isArray(state))) {\n      console.error('%s.state: must be set to an object or null', name);\n    }\n    if (\n      typeof instance.getChildContext === 'function' &&\n      typeof ctor.childContextTypes !== 'object'\n    ) {\n      console.error(\n        '%s.getChildContext(): childContextTypes must be defined in order to ' +\n          'use getChildContext().',\n        name,\n      );\n    }\n  }\n}\n\nfunction adoptClassInstance(workInProgress: Fiber, instance: any): void {\n  instance.updater = classComponentUpdater;\n  workInProgress.stateNode = instance;\n  // The instance needs access to the fiber so that it can schedule updates\n  setInstance(instance, workInProgress);\n  if (__DEV__) {\n    instance._reactInternalInstance = fakeInternalInstance;\n  }\n}\n\nfunction constructClassInstance(\n  workInProgress: Fiber,\n  ctor: any,\n  props: any,\n): any {\n  let isLegacyContextConsumer = false;\n  let unmaskedContext = emptyContextObject;\n  let context = emptyContextObject;\n  const contextType = ctor.contextType;\n\n  if (__DEV__) {\n    if ('contextType' in ctor) {\n      const isValid =\n        // Allow null for conditional declaration\n        contextType === null ||\n        (contextType !== undefined &&\n          contextType.$$typeof === REACT_CONTEXT_TYPE &&\n          contextType._context === undefined); // Not a <Context.Consumer>\n\n      if (!isValid && !didWarnAboutInvalidateContextType.has(ctor)) {\n        didWarnAboutInvalidateContextType.add(ctor);\n\n        let addendum = '';\n        if (contextType === undefined) {\n          addendum =\n            ' However, it is set to undefined. ' +\n            'This can be caused by a typo or by mixing up named and default imports. ' +\n            'This can also happen due to a circular dependency, so ' +\n            'try moving the createContext() call to a separate file.';\n        } else if (typeof contextType !== 'object') {\n          addendum = ' However, it is set to a ' + typeof contextType + '.';\n        } else if (contextType.$$typeof === REACT_PROVIDER_TYPE) {\n          addendum = ' Did you accidentally pass the Context.Provider instead?';\n        } else if (contextType._context !== undefined) {\n          // <Context.Consumer>\n          addendum = ' Did you accidentally pass the Context.Consumer instead?';\n        } else {\n          addendum =\n            ' However, it is set to an object with keys {' +\n            Object.keys(contextType).join(', ') +\n            '}.';\n        }\n        console.error(\n          '%s defines an invalid contextType. ' +\n            'contextType should point to the Context object returned by React.createContext().%s',\n          getComponentName(ctor) || 'Component',\n          addendum,\n        );\n      }\n    }\n  }\n\n  if (typeof contextType === 'object' && contextType !== null) {\n    context = readContext((contextType: any));\n  } else if (!disableLegacyContext) {\n    unmaskedContext = getUnmaskedContext(workInProgress, ctor, true);\n    const contextTypes = ctor.contextTypes;\n    isLegacyContextConsumer =\n      contextTypes !== null && contextTypes !== undefined;\n    context = isLegacyContextConsumer\n      ? getMaskedContext(workInProgress, unmaskedContext)\n      : emptyContextObject;\n  }\n\n  // Instantiate twice to help detect side-effects.\n  if (__DEV__) {\n    if (\n      debugRenderPhaseSideEffectsForStrictMode &&\n      workInProgress.mode & StrictMode\n    ) {\n      disableLogs();\n      try {\n        new ctor(props, context); // eslint-disable-line no-new\n      } finally {\n        reenableLogs();\n      }\n    }\n  }\n\n  const instance = new ctor(props, context);\n  const state = (workInProgress.memoizedState =\n    instance.state !== null && instance.state !== undefined\n      ? instance.state\n      : null);\n  adoptClassInstance(workInProgress, instance);\n\n  if (__DEV__) {\n    if (typeof ctor.getDerivedStateFromProps === 'function' && state === null) {\n      const componentName = getComponentName(ctor) || 'Component';\n      if (!didWarnAboutUninitializedState.has(componentName)) {\n        didWarnAboutUninitializedState.add(componentName);\n        console.error(\n          '`%s` uses `getDerivedStateFromProps` but its initial state is ' +\n            '%s. This is not recommended. Instead, define the initial state by ' +\n            'assigning an object to `this.state` in the constructor of `%s`. ' +\n            'This ensures that `getDerivedStateFromProps` arguments have a consistent shape.',\n          componentName,\n          instance.state === null ? 'null' : 'undefined',\n          componentName,\n        );\n      }\n    }\n\n    // If new component APIs are defined, \"unsafe\" lifecycles won't be called.\n    // Warn about these lifecycles if they are present.\n    // Don't warn about react-lifecycles-compat polyfilled methods though.\n    if (\n      typeof ctor.getDerivedStateFromProps === 'function' ||\n      typeof instance.getSnapshotBeforeUpdate === 'function'\n    ) {\n      let foundWillMountName = null;\n      let foundWillReceivePropsName = null;\n      let foundWillUpdateName = null;\n      if (\n        typeof instance.componentWillMount === 'function' &&\n        instance.componentWillMount.__suppressDeprecationWarning !== true\n      ) {\n        foundWillMountName = 'componentWillMount';\n      } else if (typeof instance.UNSAFE_componentWillMount === 'function') {\n        foundWillMountName = 'UNSAFE_componentWillMount';\n      }\n      if (\n        typeof instance.componentWillReceiveProps === 'function' &&\n        instance.componentWillReceiveProps.__suppressDeprecationWarning !== true\n      ) {\n        foundWillReceivePropsName = 'componentWillReceiveProps';\n      } else if (\n        typeof instance.UNSAFE_componentWillReceiveProps === 'function'\n      ) {\n        foundWillReceivePropsName = 'UNSAFE_componentWillReceiveProps';\n      }\n      if (\n        typeof instance.componentWillUpdate === 'function' &&\n        instance.componentWillUpdate.__suppressDeprecationWarning !== true\n      ) {\n        foundWillUpdateName = 'componentWillUpdate';\n      } else if (typeof instance.UNSAFE_componentWillUpdate === 'function') {\n        foundWillUpdateName = 'UNSAFE_componentWillUpdate';\n      }\n      if (\n        foundWillMountName !== null ||\n        foundWillReceivePropsName !== null ||\n        foundWillUpdateName !== null\n      ) {\n        const componentName = getComponentName(ctor) || 'Component';\n        const newApiName =\n          typeof ctor.getDerivedStateFromProps === 'function'\n            ? 'getDerivedStateFromProps()'\n            : 'getSnapshotBeforeUpdate()';\n        if (!didWarnAboutLegacyLifecyclesAndDerivedState.has(componentName)) {\n          didWarnAboutLegacyLifecyclesAndDerivedState.add(componentName);\n          console.error(\n            'Unsafe legacy lifecycles will not be called for components using new component APIs.\\n\\n' +\n              '%s uses %s but also contains the following legacy lifecycles:%s%s%s\\n\\n' +\n              'The above lifecycles should be removed. Learn more about this warning here:\\n' +\n              'https://reactjs.org/link/unsafe-component-lifecycles',\n            componentName,\n            newApiName,\n            foundWillMountName !== null ? `\\n  ${foundWillMountName}` : '',\n            foundWillReceivePropsName !== null\n              ? `\\n  ${foundWillReceivePropsName}`\n              : '',\n            foundWillUpdateName !== null ? `\\n  ${foundWillUpdateName}` : '',\n          );\n        }\n      }\n    }\n  }\n\n  // Cache unmasked context so we can avoid recreating masked context unless necessary.\n  // ReactFiberContext usually updates this cache but can't for newly-created instances.\n  if (isLegacyContextConsumer) {\n    cacheContext(workInProgress, unmaskedContext, context);\n  }\n\n  return instance;\n}\n\nfunction callComponentWillMount(workInProgress, instance) {\n  const oldState = instance.state;\n\n  if (typeof instance.componentWillMount === 'function') {\n    instance.componentWillMount();\n  }\n  if (typeof instance.UNSAFE_componentWillMount === 'function') {\n    instance.UNSAFE_componentWillMount();\n  }\n\n  if (oldState !== instance.state) {\n    if (__DEV__) {\n      console.error(\n        '%s.componentWillMount(): Assigning directly to this.state is ' +\n          \"deprecated (except inside a component's \" +\n          'constructor). Use setState instead.',\n        getComponentName(workInProgress.type) || 'Component',\n      );\n    }\n    classComponentUpdater.enqueueReplaceState(instance, instance.state, null);\n  }\n}\n\nfunction callComponentWillReceiveProps(\n  workInProgress,\n  instance,\n  newProps,\n  nextContext,\n) {\n  const oldState = instance.state;\n  if (typeof instance.componentWillReceiveProps === 'function') {\n    instance.componentWillReceiveProps(newProps, nextContext);\n  }\n  if (typeof instance.UNSAFE_componentWillReceiveProps === 'function') {\n    instance.UNSAFE_componentWillReceiveProps(newProps, nextContext);\n  }\n\n  if (instance.state !== oldState) {\n    if (__DEV__) {\n      const componentName =\n        getComponentName(workInProgress.type) || 'Component';\n      if (!didWarnAboutStateAssignmentForComponent.has(componentName)) {\n        didWarnAboutStateAssignmentForComponent.add(componentName);\n        console.error(\n          '%s.componentWillReceiveProps(): Assigning directly to ' +\n            \"this.state is deprecated (except inside a component's \" +\n            'constructor). Use setState instead.',\n          componentName,\n        );\n      }\n    }\n    classComponentUpdater.enqueueReplaceState(instance, instance.state, null);\n  }\n}\n\n// Invokes the mount life-cycles on a previously never rendered instance.\nfunction mountClassInstance(\n  workInProgress: Fiber,\n  ctor: any,\n  newProps: any,\n  renderLanes: Lanes,\n): void {\n  if (__DEV__) {\n    checkClassInstance(workInProgress, ctor, newProps);\n  }\n\n  const instance = workInProgress.stateNode;\n  instance.props = newProps;\n  instance.state = workInProgress.memoizedState;\n  instance.refs = emptyRefsObject;\n\n  initializeUpdateQueue(workInProgress);\n\n  const contextType = ctor.contextType;\n  if (typeof contextType === 'object' && contextType !== null) {\n    instance.context = readContext(contextType);\n  } else if (disableLegacyContext) {\n    instance.context = emptyContextObject;\n  } else {\n    const unmaskedContext = getUnmaskedContext(workInProgress, ctor, true);\n    instance.context = getMaskedContext(workInProgress, unmaskedContext);\n  }\n\n  if (__DEV__) {\n    if (instance.state === newProps) {\n      const componentName = getComponentName(ctor) || 'Component';\n      if (!didWarnAboutDirectlyAssigningPropsToState.has(componentName)) {\n        didWarnAboutDirectlyAssigningPropsToState.add(componentName);\n        console.error(\n          '%s: It is not recommended to assign props directly to state ' +\n            \"because updates to props won't be reflected in state. \" +\n            'In most cases, it is better to use props directly.',\n          componentName,\n        );\n      }\n    }\n\n    if (workInProgress.mode & StrictMode) {\n      ReactStrictModeWarnings.recordLegacyContextWarning(\n        workInProgress,\n        instance,\n      );\n    }\n\n    if (warnAboutDeprecatedLifecycles) {\n      ReactStrictModeWarnings.recordUnsafeLifecycleWarnings(\n        workInProgress,\n        instance,\n      );\n    }\n  }\n\n  processUpdateQueue(workInProgress, newProps, instance, renderLanes);\n  instance.state = workInProgress.memoizedState;\n\n  const getDerivedStateFromProps = ctor.getDerivedStateFromProps;\n  if (typeof getDerivedStateFromProps === 'function') {\n    applyDerivedStateFromProps(\n      workInProgress,\n      ctor,\n      getDerivedStateFromProps,\n      newProps,\n    );\n    instance.state = workInProgress.memoizedState;\n  }\n\n  // In order to support react-lifecycles-compat polyfilled components,\n  // Unsafe lifecycles should not be invoked for components using the new APIs.\n  if (\n    typeof ctor.getDerivedStateFromProps !== 'function' &&\n    typeof instance.getSnapshotBeforeUpdate !== 'function' &&\n    (typeof instance.UNSAFE_componentWillMount === 'function' ||\n      typeof instance.componentWillMount === 'function')\n  ) {\n    callComponentWillMount(workInProgress, instance);\n    // If we had additional state updates during this life-cycle, let's\n    // process them now.\n    processUpdateQueue(workInProgress, newProps, instance, renderLanes);\n    instance.state = workInProgress.memoizedState;\n  }\n\n  if (typeof instance.componentDidMount === 'function') {\n    workInProgress.flags |= Update;\n  }\n}\n\nfunction resumeMountClassInstance(\n  workInProgress: Fiber,\n  ctor: any,\n  newProps: any,\n  renderLanes: Lanes,\n): boolean {\n  const instance = workInProgress.stateNode;\n\n  const oldProps = workInProgress.memoizedProps;\n  instance.props = oldProps;\n\n  const oldContext = instance.context;\n  const contextType = ctor.contextType;\n  let nextContext = emptyContextObject;\n  if (typeof contextType === 'object' && contextType !== null) {\n    nextContext = readContext(contextType);\n  } else if (!disableLegacyContext) {\n    const nextLegacyUnmaskedContext = getUnmaskedContext(\n      workInProgress,\n      ctor,\n      true,\n    );\n    nextContext = getMaskedContext(workInProgress, nextLegacyUnmaskedContext);\n  }\n\n  const getDerivedStateFromProps = ctor.getDerivedStateFromProps;\n  const hasNewLifecycles =\n    typeof getDerivedStateFromProps === 'function' ||\n    typeof instance.getSnapshotBeforeUpdate === 'function';\n\n  // Note: During these life-cycles, instance.props/instance.state are what\n  // ever the previously attempted to render - not the \"current\". However,\n  // during componentDidUpdate we pass the \"current\" props.\n\n  // In order to support react-lifecycles-compat polyfilled components,\n  // Unsafe lifecycles should not be invoked for components using the new APIs.\n  if (\n    !hasNewLifecycles &&\n    (typeof instance.UNSAFE_componentWillReceiveProps === 'function' ||\n      typeof instance.componentWillReceiveProps === 'function')\n  ) {\n    if (oldProps !== newProps || oldContext !== nextContext) {\n      callComponentWillReceiveProps(\n        workInProgress,\n        instance,\n        newProps,\n        nextContext,\n      );\n    }\n  }\n\n  resetHasForceUpdateBeforeProcessing();\n\n  const oldState = workInProgress.memoizedState;\n  let newState = (instance.state = oldState);\n  processUpdateQueue(workInProgress, newProps, instance, renderLanes);\n  newState = workInProgress.memoizedState;\n  if (\n    oldProps === newProps &&\n    oldState === newState &&\n    !hasContextChanged() &&\n    !checkHasForceUpdateAfterProcessing()\n  ) {\n    // If an update was already in progress, we should schedule an Update\n    // effect even though we're bailing out, so that cWU/cDU are called.\n    if (typeof instance.componentDidMount === 'function') {\n      workInProgress.flags |= Update;\n    }\n    return false;\n  }\n\n  if (typeof getDerivedStateFromProps === 'function') {\n    applyDerivedStateFromProps(\n      workInProgress,\n      ctor,\n      getDerivedStateFromProps,\n      newProps,\n    );\n    newState = workInProgress.memoizedState;\n  }\n\n  const shouldUpdate =\n    checkHasForceUpdateAfterProcessing() ||\n    checkShouldComponentUpdate(\n      workInProgress,\n      ctor,\n      oldProps,\n      newProps,\n      oldState,\n      newState,\n      nextContext,\n    );\n\n  if (shouldUpdate) {\n    // In order to support react-lifecycles-compat polyfilled components,\n    // Unsafe lifecycles should not be invoked for components using the new APIs.\n    if (\n      !hasNewLifecycles &&\n      (typeof instance.UNSAFE_componentWillMount === 'function' ||\n        typeof instance.componentWillMount === 'function')\n    ) {\n      if (typeof instance.componentWillMount === 'function') {\n        instance.componentWillMount();\n      }\n      if (typeof instance.UNSAFE_componentWillMount === 'function') {\n        instance.UNSAFE_componentWillMount();\n      }\n    }\n    if (typeof instance.componentDidMount === 'function') {\n      workInProgress.flags |= Update;\n    }\n  } else {\n    // If an update was already in progress, we should schedule an Update\n    // effect even though we're bailing out, so that cWU/cDU are called.\n    if (typeof instance.componentDidMount === 'function') {\n      workInProgress.flags |= Update;\n    }\n\n    // If shouldComponentUpdate returned false, we should still update the\n    // memoized state to indicate that this work can be reused.\n    workInProgress.memoizedProps = newProps;\n    workInProgress.memoizedState = newState;\n  }\n\n  // Update the existing instance's state, props, and context pointers even\n  // if shouldComponentUpdate returns false.\n  instance.props = newProps;\n  instance.state = newState;\n  instance.context = nextContext;\n\n  return shouldUpdate;\n}\n\n// Invokes the update life-cycles and returns false if it shouldn't rerender.\nfunction updateClassInstance(\n  current: Fiber,\n  workInProgress: Fiber,\n  ctor: any,\n  newProps: any,\n  renderLanes: Lanes,\n): boolean {\n  const instance = workInProgress.stateNode;\n\n  cloneUpdateQueue(current, workInProgress);\n\n  const unresolvedOldProps = workInProgress.memoizedProps;\n  const oldProps =\n    workInProgress.type === workInProgress.elementType\n      ? unresolvedOldProps\n      : resolveDefaultProps(workInProgress.type, unresolvedOldProps);\n  instance.props = oldProps;\n  const unresolvedNewProps = workInProgress.pendingProps;\n\n  const oldContext = instance.context;\n  const contextType = ctor.contextType;\n  let nextContext = emptyContextObject;\n  if (typeof contextType === 'object' && contextType !== null) {\n    nextContext = readContext(contextType);\n  } else if (!disableLegacyContext) {\n    const nextUnmaskedContext = getUnmaskedContext(workInProgress, ctor, true);\n    nextContext = getMaskedContext(workInProgress, nextUnmaskedContext);\n  }\n\n  const getDerivedStateFromProps = ctor.getDerivedStateFromProps;\n  const hasNewLifecycles =\n    typeof getDerivedStateFromProps === 'function' ||\n    typeof instance.getSnapshotBeforeUpdate === 'function';\n\n  // Note: During these life-cycles, instance.props/instance.state are what\n  // ever the previously attempted to render - not the \"current\". However,\n  // during componentDidUpdate we pass the \"current\" props.\n\n  // In order to support react-lifecycles-compat polyfilled components,\n  // Unsafe lifecycles should not be invoked for components using the new APIs.\n  if (\n    !hasNewLifecycles &&\n    (typeof instance.UNSAFE_componentWillReceiveProps === 'function' ||\n      typeof instance.componentWillReceiveProps === 'function')\n  ) {\n    if (\n      unresolvedOldProps !== unresolvedNewProps ||\n      oldContext !== nextContext\n    ) {\n      callComponentWillReceiveProps(\n        workInProgress,\n        instance,\n        newProps,\n        nextContext,\n      );\n    }\n  }\n\n  resetHasForceUpdateBeforeProcessing();\n\n  const oldState = workInProgress.memoizedState;\n  let newState = (instance.state = oldState);\n  processUpdateQueue(workInProgress, newProps, instance, renderLanes);\n  newState = workInProgress.memoizedState;\n\n  if (\n    unresolvedOldProps === unresolvedNewProps &&\n    oldState === newState &&\n    !hasContextChanged() &&\n    !checkHasForceUpdateAfterProcessing()\n  ) {\n    // If an update was already in progress, we should schedule an Update\n    // effect even though we're bailing out, so that cWU/cDU are called.\n    if (typeof instance.componentDidUpdate === 'function') {\n      if (\n        unresolvedOldProps !== current.memoizedProps ||\n        oldState !== current.memoizedState\n      ) {\n        workInProgress.flags |= Update;\n      }\n    }\n    if (typeof instance.getSnapshotBeforeUpdate === 'function') {\n      if (\n        unresolvedOldProps !== current.memoizedProps ||\n        oldState !== current.memoizedState\n      ) {\n        workInProgress.flags |= Snapshot;\n      }\n    }\n    return false;\n  }\n\n  if (typeof getDerivedStateFromProps === 'function') {\n    applyDerivedStateFromProps(\n      workInProgress,\n      ctor,\n      getDerivedStateFromProps,\n      newProps,\n    );\n    newState = workInProgress.memoizedState;\n  }\n\n  const shouldUpdate =\n    checkHasForceUpdateAfterProcessing() ||\n    checkShouldComponentUpdate(\n      workInProgress,\n      ctor,\n      oldProps,\n      newProps,\n      oldState,\n      newState,\n      nextContext,\n    );\n\n  if (shouldUpdate) {\n    // In order to support react-lifecycles-compat polyfilled components,\n    // Unsafe lifecycles should not be invoked for components using the new APIs.\n    if (\n      !hasNewLifecycles &&\n      (typeof instance.UNSAFE_componentWillUpdate === 'function' ||\n        typeof instance.componentWillUpdate === 'function')\n    ) {\n      if (typeof instance.componentWillUpdate === 'function') {\n        instance.componentWillUpdate(newProps, newState, nextContext);\n      }\n      if (typeof instance.UNSAFE_componentWillUpdate === 'function') {\n        instance.UNSAFE_componentWillUpdate(newProps, newState, nextContext);\n      }\n    }\n    if (typeof instance.componentDidUpdate === 'function') {\n      workInProgress.flags |= Update;\n    }\n    if (typeof instance.getSnapshotBeforeUpdate === 'function') {\n      workInProgress.flags |= Snapshot;\n    }\n  } else {\n    // If an update was already in progress, we should schedule an Update\n    // effect even though we're bailing out, so that cWU/cDU are called.\n    if (typeof instance.componentDidUpdate === 'function') {\n      if (\n        unresolvedOldProps !== current.memoizedProps ||\n        oldState !== current.memoizedState\n      ) {\n        workInProgress.flags |= Update;\n      }\n    }\n    if (typeof instance.getSnapshotBeforeUpdate === 'function') {\n      if (\n        unresolvedOldProps !== current.memoizedProps ||\n        oldState !== current.memoizedState\n      ) {\n        workInProgress.flags |= Snapshot;\n      }\n    }\n\n    // If shouldComponentUpdate returned false, we should still update the\n    // memoized props/state to indicate that this work can be reused.\n    workInProgress.memoizedProps = newProps;\n    workInProgress.memoizedState = newState;\n  }\n\n  // Update the existing instance's state, props, and context pointers even\n  // if shouldComponentUpdate returns false.\n  instance.props = newProps;\n  instance.state = newState;\n  instance.context = nextContext;\n\n  return shouldUpdate;\n}\n\nexport {\n  adoptClassInstance,\n  constructClassInstance,\n  mountClassInstance,\n  resumeMountClassInstance,\n  updateClassInstance,\n};\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {ReactElement} from 'shared/ReactElementType';\nimport type {ReactPortal} from 'shared/ReactTypes';\nimport type {BlockComponent} from 'react/src/ReactBlock';\nimport type {LazyComponent} from 'react/src/ReactLazy';\nimport type {Fiber} from './ReactInternalTypes';\nimport type {Lanes} from './ReactFiberLane';\n\nimport getComponentName from 'shared/getComponentName';\nimport {Placement, Deletion} from './ReactFiberFlags';\nimport {\n  getIteratorFn,\n  REACT_ELEMENT_TYPE,\n  REACT_FRAGMENT_TYPE,\n  REACT_PORTAL_TYPE,\n  REACT_LAZY_TYPE,\n  REACT_BLOCK_TYPE,\n} from 'shared/ReactSymbols';\nimport {\n  FunctionComponent,\n  ClassComponent,\n  HostText,\n  HostPortal,\n  ForwardRef,\n  Fragment,\n  SimpleMemoComponent,\n  Block,\n} from './ReactWorkTags';\nimport invariant from 'shared/invariant';\nimport {\n  warnAboutStringRefs,\n  enableBlocksAPI,\n  enableLazyElements,\n} from 'shared/ReactFeatureFlags';\n\nimport {\n  createWorkInProgress,\n  resetWorkInProgress,\n  createFiberFromElement,\n  createFiberFromFragment,\n  createFiberFromText,\n  createFiberFromPortal,\n} from './ReactFiber.old';\nimport {emptyRefsObject} from './ReactFiberClassComponent.old';\nimport {isCompatibleFamilyForHotReloading} from './ReactFiberHotReloading.old';\nimport {StrictMode} from './ReactTypeOfMode';\n\nlet didWarnAboutMaps;\nlet didWarnAboutGenerators;\nlet didWarnAboutStringRefs;\nlet ownerHasKeyUseWarning;\nlet ownerHasFunctionTypeWarning;\nlet warnForMissingKey = (child: mixed, returnFiber: Fiber) => {};\n\nif (__DEV__) {\n  didWarnAboutMaps = false;\n  didWarnAboutGenerators = false;\n  didWarnAboutStringRefs = {};\n\n  /**\n   * Warn if there's no key explicitly set on dynamic arrays of children or\n   * object keys are not valid. This allows us to keep track of children between\n   * updates.\n   */\n  ownerHasKeyUseWarning = {};\n  ownerHasFunctionTypeWarning = {};\n\n  warnForMissingKey = (child: mixed, returnFiber: Fiber) => {\n    if (child === null || typeof child !== 'object') {\n      return;\n    }\n    if (!child._store || child._store.validated || child.key != null) {\n      return;\n    }\n    invariant(\n      typeof child._store === 'object',\n      'React Component in warnForMissingKey should have a _store. ' +\n        'This error is likely caused by a bug in React. Please file an issue.',\n    );\n    child._store.validated = true;\n\n    const componentName = getComponentName(returnFiber.type) || 'Component';\n\n    if (ownerHasKeyUseWarning[componentName]) {\n      return;\n    }\n    ownerHasKeyUseWarning[componentName] = true;\n\n    console.error(\n      'Each child in a list should have a unique ' +\n        '\"key\" prop. See https://reactjs.org/link/warning-keys for ' +\n        'more information.',\n    );\n  };\n}\n\nconst isArray = Array.isArray;\n\nfunction coerceRef(\n  returnFiber: Fiber,\n  current: Fiber | null,\n  element: ReactElement,\n) {\n  const mixedRef = element.ref;\n  if (\n    mixedRef !== null &&\n    typeof mixedRef !== 'function' &&\n    typeof mixedRef !== 'object'\n  ) {\n    if (__DEV__) {\n      // TODO: Clean this up once we turn on the string ref warning for\n      // everyone, because the strict mode case will no longer be relevant\n      if (\n        (returnFiber.mode & StrictMode || warnAboutStringRefs) &&\n        // We warn in ReactElement.js if owner and self are equal for string refs\n        // because these cannot be automatically converted to an arrow function\n        // using a codemod. Therefore, we don't have to warn about string refs again.\n        !(\n          element._owner &&\n          element._self &&\n          element._owner.stateNode !== element._self\n        )\n      ) {\n        const componentName = getComponentName(returnFiber.type) || 'Component';\n        if (!didWarnAboutStringRefs[componentName]) {\n          if (warnAboutStringRefs) {\n            console.error(\n              'Component \"%s\" contains the string ref \"%s\". Support for string refs ' +\n                'will be removed in a future major release. We recommend using ' +\n                'useRef() or createRef() instead. ' +\n                'Learn more about using refs safely here: ' +\n                'https://reactjs.org/link/strict-mode-string-ref',\n              componentName,\n              mixedRef,\n            );\n          } else {\n            console.error(\n              'A string ref, \"%s\", has been found within a strict mode tree. ' +\n                'String refs are a source of potential bugs and should be avoided. ' +\n                'We recommend using useRef() or createRef() instead. ' +\n                'Learn more about using refs safely here: ' +\n                'https://reactjs.org/link/strict-mode-string-ref',\n              mixedRef,\n            );\n          }\n          didWarnAboutStringRefs[componentName] = true;\n        }\n      }\n    }\n\n    if (element._owner) {\n      const owner: ?Fiber = (element._owner: any);\n      let inst;\n      if (owner) {\n        const ownerFiber = ((owner: any): Fiber);\n        invariant(\n          ownerFiber.tag === ClassComponent,\n          'Function components cannot have string refs. ' +\n            'We recommend using useRef() instead. ' +\n            'Learn more about using refs safely here: ' +\n            'https://reactjs.org/link/strict-mode-string-ref',\n        );\n        inst = ownerFiber.stateNode;\n      }\n      invariant(\n        inst,\n        'Missing owner for string ref %s. This error is likely caused by a ' +\n          'bug in React. Please file an issue.',\n        mixedRef,\n      );\n      const stringRef = '' + mixedRef;\n      // Check if previous string ref matches new string ref\n      if (\n        current !== null &&\n        current.ref !== null &&\n        typeof current.ref === 'function' &&\n        current.ref._stringRef === stringRef\n      ) {\n        return current.ref;\n      }\n      const ref = function(value) {\n        let refs = inst.refs;\n        if (refs === emptyRefsObject) {\n          // This is a lazy pooled frozen object, so we need to initialize.\n          refs = inst.refs = {};\n        }\n        if (value === null) {\n          delete refs[stringRef];\n        } else {\n          refs[stringRef] = value;\n        }\n      };\n      ref._stringRef = stringRef;\n      return ref;\n    } else {\n      invariant(\n        typeof mixedRef === 'string',\n        'Expected ref to be a function, a string, an object returned by React.createRef(), or null.',\n      );\n      invariant(\n        element._owner,\n        'Element ref was specified as a string (%s) but no owner was set. This could happen for one of' +\n          ' the following reasons:\\n' +\n          '1. You may be adding a ref to a function component\\n' +\n          \"2. You may be adding a ref to a component that was not created inside a component's render method\\n\" +\n          '3. You have multiple copies of React loaded\\n' +\n          'See https://reactjs.org/link/refs-must-have-owner for more information.',\n        mixedRef,\n      );\n    }\n  }\n  return mixedRef;\n}\n\nfunction throwOnInvalidObjectType(returnFiber: Fiber, newChild: Object) {\n  if (returnFiber.type !== 'textarea') {\n    invariant(\n      false,\n      'Objects are not valid as a React child (found: %s). ' +\n        'If you meant to render a collection of children, use an array ' +\n        'instead.',\n      Object.prototype.toString.call(newChild) === '[object Object]'\n        ? 'object with keys {' + Object.keys(newChild).join(', ') + '}'\n        : newChild,\n    );\n  }\n}\n\nfunction warnOnFunctionType(returnFiber: Fiber) {\n  if (__DEV__) {\n    const componentName = getComponentName(returnFiber.type) || 'Component';\n\n    if (ownerHasFunctionTypeWarning[componentName]) {\n      return;\n    }\n    ownerHasFunctionTypeWarning[componentName] = true;\n\n    console.error(\n      'Functions are not valid as a React child. This may happen if ' +\n        'you return a Component instead of <Component /> from render. ' +\n        'Or maybe you meant to call this function rather than return it.',\n    );\n  }\n}\n\n// We avoid inlining this to avoid potential deopts from using try/catch.\n/** @noinline */\nfunction resolveLazyType<T, P>(\n  lazyComponent: LazyComponent<T, P>,\n): LazyComponent<T, P> | T {\n  try {\n    // If we can, let's peek at the resulting type.\n    const payload = lazyComponent._payload;\n    const init = lazyComponent._init;\n    return init(payload);\n  } catch (x) {\n    // Leave it in place and let it throw again in the begin phase.\n    return lazyComponent;\n  }\n}\n\n// This wrapper function exists because I expect to clone the code in each path\n// to be able to optimize each path individually by branching early. This needs\n// a compiler or we can do it manually. Helpers that don't need this branching\n// live outside of this function.\nfunction ChildReconciler(shouldTrackSideEffects) {\n  function deleteChild(returnFiber: Fiber, childToDelete: Fiber): void {\n    if (!shouldTrackSideEffects) {\n      // Noop.\n      return;\n    }\n    // Deletions are added in reversed order so we add it to the front.\n    // At this point, the return fiber's effect list is empty except for\n    // deletions, so we can just append the deletion to the list. The remaining\n    // effects aren't added until the complete phase. Once we implement\n    // resuming, this may not be true.\n    const last = returnFiber.lastEffect;\n    if (last !== null) {\n      last.nextEffect = childToDelete;\n      returnFiber.lastEffect = childToDelete;\n    } else {\n      returnFiber.firstEffect = returnFiber.lastEffect = childToDelete;\n    }\n    childToDelete.nextEffect = null;\n    childToDelete.flags = Deletion;\n  }\n\n  function deleteRemainingChildren(\n    returnFiber: Fiber,\n    currentFirstChild: Fiber | null,\n  ): null {\n    if (!shouldTrackSideEffects) {\n      // Noop.\n      return null;\n    }\n\n    // TODO: For the shouldClone case, this could be micro-optimized a bit by\n    // assuming that after the first child we've already added everything.\n    let childToDelete = currentFirstChild;\n    while (childToDelete !== null) {\n      deleteChild(returnFiber, childToDelete);\n      childToDelete = childToDelete.sibling;\n    }\n    return null;\n  }\n\n  function mapRemainingChildren(\n    returnFiber: Fiber,\n    currentFirstChild: Fiber,\n  ): Map<string | number, Fiber> {\n    // Add the remaining children to a temporary map so that we can find them by\n    // keys quickly. Implicit (null) keys get added to this set with their index\n    // instead.\n    const existingChildren: Map<string | number, Fiber> = new Map();\n\n    let existingChild = currentFirstChild;\n    while (existingChild !== null) {\n      if (existingChild.key !== null) {\n        existingChildren.set(existingChild.key, existingChild);\n      } else {\n        existingChildren.set(existingChild.index, existingChild);\n      }\n      existingChild = existingChild.sibling;\n    }\n    return existingChildren;\n  }\n\n  function useFiber(fiber: Fiber, pendingProps: mixed): Fiber {\n    // We currently set sibling to null and index to 0 here because it is easy\n    // to forget to do before returning it. E.g. for the single child case.\n    const clone = createWorkInProgress(fiber, pendingProps);\n    clone.index = 0;\n    clone.sibling = null;\n    return clone;\n  }\n\n  function placeChild(\n    newFiber: Fiber,\n    lastPlacedIndex: number,\n    newIndex: number,\n  ): number {\n    newFiber.index = newIndex;\n    if (!shouldTrackSideEffects) {\n      // Noop.\n      return lastPlacedIndex;\n    }\n    const current = newFiber.alternate;\n    if (current !== null) {\n      const oldIndex = current.index;\n      if (oldIndex < lastPlacedIndex) {\n        // This is a move.\n        newFiber.flags = Placement;\n        return lastPlacedIndex;\n      } else {\n        // This item can stay in place.\n        return oldIndex;\n      }\n    } else {\n      // This is an insertion.\n      newFiber.flags = Placement;\n      return lastPlacedIndex;\n    }\n  }\n\n  function placeSingleChild(newFiber: Fiber): Fiber {\n    // This is simpler for the single child case. We only need to do a\n    // placement for inserting new children.\n    if (shouldTrackSideEffects && newFiber.alternate === null) {\n      newFiber.flags = Placement;\n    }\n    return newFiber;\n  }\n\n  function updateTextNode(\n    returnFiber: Fiber,\n    current: Fiber | null,\n    textContent: string,\n    lanes: Lanes,\n  ) {\n    if (current === null || current.tag !== HostText) {\n      // Insert\n      const created = createFiberFromText(textContent, returnFiber.mode, lanes);\n      created.return = returnFiber;\n      return created;\n    } else {\n      // Update\n      const existing = useFiber(current, textContent);\n      existing.return = returnFiber;\n      return existing;\n    }\n  }\n\n  function updateElement(\n    returnFiber: Fiber,\n    current: Fiber | null,\n    element: ReactElement,\n    lanes: Lanes,\n  ): Fiber {\n    if (current !== null) {\n      if (\n        current.elementType === element.type ||\n        // Keep this check inline so it only runs on the false path:\n        (__DEV__ ? isCompatibleFamilyForHotReloading(current, element) : false)\n      ) {\n        // Move based on index\n        const existing = useFiber(current, element.props);\n        existing.ref = coerceRef(returnFiber, current, element);\n        existing.return = returnFiber;\n        if (__DEV__) {\n          existing._debugSource = element._source;\n          existing._debugOwner = element._owner;\n        }\n        return existing;\n      } else if (enableBlocksAPI && current.tag === Block) {\n        // The new Block might not be initialized yet. We need to initialize\n        // it in case initializing it turns out it would match.\n        let type = element.type;\n        if (type.$$typeof === REACT_LAZY_TYPE) {\n          type = resolveLazyType(type);\n        }\n        if (\n          type.$$typeof === REACT_BLOCK_TYPE &&\n          ((type: any): BlockComponent<any, any>)._render ===\n            (current.type: BlockComponent<any, any>)._render\n        ) {\n          // Same as above but also update the .type field.\n          const existing = useFiber(current, element.props);\n          existing.return = returnFiber;\n          existing.type = type;\n          if (__DEV__) {\n            existing._debugSource = element._source;\n            existing._debugOwner = element._owner;\n          }\n          return existing;\n        }\n      }\n    }\n    // Insert\n    const created = createFiberFromElement(element, returnFiber.mode, lanes);\n    created.ref = coerceRef(returnFiber, current, element);\n    created.return = returnFiber;\n    return created;\n  }\n\n  function updatePortal(\n    returnFiber: Fiber,\n    current: Fiber | null,\n    portal: ReactPortal,\n    lanes: Lanes,\n  ): Fiber {\n    if (\n      current === null ||\n      current.tag !== HostPortal ||\n      current.stateNode.containerInfo !== portal.containerInfo ||\n      current.stateNode.implementation !== portal.implementation\n    ) {\n      // Insert\n      const created = createFiberFromPortal(portal, returnFiber.mode, lanes);\n      created.return = returnFiber;\n      return created;\n    } else {\n      // Update\n      const existing = useFiber(current, portal.children || []);\n      existing.return = returnFiber;\n      return existing;\n    }\n  }\n\n  function updateFragment(\n    returnFiber: Fiber,\n    current: Fiber | null,\n    fragment: Iterable<*>,\n    lanes: Lanes,\n    key: null | string,\n  ): Fiber {\n    if (current === null || current.tag !== Fragment) {\n      // Insert\n      const created = createFiberFromFragment(\n        fragment,\n        returnFiber.mode,\n        lanes,\n        key,\n      );\n      created.return = returnFiber;\n      return created;\n    } else {\n      // Update\n      const existing = useFiber(current, fragment);\n      existing.return = returnFiber;\n      return existing;\n    }\n  }\n\n  function createChild(\n    returnFiber: Fiber,\n    newChild: any,\n    lanes: Lanes,\n  ): Fiber | null {\n    if (typeof newChild === 'string' || typeof newChild === 'number') {\n      // Text nodes don't have keys. If the previous node is implicitly keyed\n      // we can continue to replace it without aborting even if it is not a text\n      // node.\n      const created = createFiberFromText(\n        '' + newChild,\n        returnFiber.mode,\n        lanes,\n      );\n      created.return = returnFiber;\n      return created;\n    }\n\n    if (typeof newChild === 'object' && newChild !== null) {\n      switch (newChild.$$typeof) {\n        case REACT_ELEMENT_TYPE: {\n          const created = createFiberFromElement(\n            newChild,\n            returnFiber.mode,\n            lanes,\n          );\n          created.ref = coerceRef(returnFiber, null, newChild);\n          created.return = returnFiber;\n          return created;\n        }\n        case REACT_PORTAL_TYPE: {\n          const created = createFiberFromPortal(\n            newChild,\n            returnFiber.mode,\n            lanes,\n          );\n          created.return = returnFiber;\n          return created;\n        }\n        case REACT_LAZY_TYPE: {\n          if (enableLazyElements) {\n            const payload = newChild._payload;\n            const init = newChild._init;\n            return createChild(returnFiber, init(payload), lanes);\n          }\n        }\n      }\n\n      if (isArray(newChild) || getIteratorFn(newChild)) {\n        const created = createFiberFromFragment(\n          newChild,\n          returnFiber.mode,\n          lanes,\n          null,\n        );\n        created.return = returnFiber;\n        return created;\n      }\n\n      throwOnInvalidObjectType(returnFiber, newChild);\n    }\n\n    if (__DEV__) {\n      if (typeof newChild === 'function') {\n        warnOnFunctionType(returnFiber);\n      }\n    }\n\n    return null;\n  }\n\n  function updateSlot(\n    returnFiber: Fiber,\n    oldFiber: Fiber | null,\n    newChild: any,\n    lanes: Lanes,\n  ): Fiber | null {\n    // Update the fiber if the keys match, otherwise return null.\n\n    const key = oldFiber !== null ? oldFiber.key : null;\n\n    if (typeof newChild === 'string' || typeof newChild === 'number') {\n      // Text nodes don't have keys. If the previous node is implicitly keyed\n      // we can continue to replace it without aborting even if it is not a text\n      // node.\n      if (key !== null) {\n        return null;\n      }\n      return updateTextNode(returnFiber, oldFiber, '' + newChild, lanes);\n    }\n\n    if (typeof newChild === 'object' && newChild !== null) {\n      switch (newChild.$$typeof) {\n        case REACT_ELEMENT_TYPE: {\n          if (newChild.key === key) {\n            if (newChild.type === REACT_FRAGMENT_TYPE) {\n              return updateFragment(\n                returnFiber,\n                oldFiber,\n                newChild.props.children,\n                lanes,\n                key,\n              );\n            }\n            return updateElement(returnFiber, oldFiber, newChild, lanes);\n          } else {\n            return null;\n          }\n        }\n        case REACT_PORTAL_TYPE: {\n          if (newChild.key === key) {\n            return updatePortal(returnFiber, oldFiber, newChild, lanes);\n          } else {\n            return null;\n          }\n        }\n        case REACT_LAZY_TYPE: {\n          if (enableLazyElements) {\n            const payload = newChild._payload;\n            const init = newChild._init;\n            return updateSlot(returnFiber, oldFiber, init(payload), lanes);\n          }\n        }\n      }\n\n      if (isArray(newChild) || getIteratorFn(newChild)) {\n        if (key !== null) {\n          return null;\n        }\n\n        return updateFragment(returnFiber, oldFiber, newChild, lanes, null);\n      }\n\n      throwOnInvalidObjectType(returnFiber, newChild);\n    }\n\n    if (__DEV__) {\n      if (typeof newChild === 'function') {\n        warnOnFunctionType(returnFiber);\n      }\n    }\n\n    return null;\n  }\n\n  function updateFromMap(\n    existingChildren: Map<string | number, Fiber>,\n    returnFiber: Fiber,\n    newIdx: number,\n    newChild: any,\n    lanes: Lanes,\n  ): Fiber | null {\n    if (typeof newChild === 'string' || typeof newChild === 'number') {\n      // Text nodes don't have keys, so we neither have to check the old nor\n      // new node for the key. If both are text nodes, they match.\n      const matchedFiber = existingChildren.get(newIdx) || null;\n      return updateTextNode(returnFiber, matchedFiber, '' + newChild, lanes);\n    }\n\n    if (typeof newChild === 'object' && newChild !== null) {\n      switch (newChild.$$typeof) {\n        case REACT_ELEMENT_TYPE: {\n          const matchedFiber =\n            existingChildren.get(\n              newChild.key === null ? newIdx : newChild.key,\n            ) || null;\n          if (newChild.type === REACT_FRAGMENT_TYPE) {\n            return updateFragment(\n              returnFiber,\n              matchedFiber,\n              newChild.props.children,\n              lanes,\n              newChild.key,\n            );\n          }\n          return updateElement(returnFiber, matchedFiber, newChild, lanes);\n        }\n        case REACT_PORTAL_TYPE: {\n          const matchedFiber =\n            existingChildren.get(\n              newChild.key === null ? newIdx : newChild.key,\n            ) || null;\n          return updatePortal(returnFiber, matchedFiber, newChild, lanes);\n        }\n        case REACT_LAZY_TYPE:\n          if (enableLazyElements) {\n            const payload = newChild._payload;\n            const init = newChild._init;\n            return updateFromMap(\n              existingChildren,\n              returnFiber,\n              newIdx,\n              init(payload),\n              lanes,\n            );\n          }\n      }\n\n      if (isArray(newChild) || getIteratorFn(newChild)) {\n        const matchedFiber = existingChildren.get(newIdx) || null;\n        return updateFragment(returnFiber, matchedFiber, newChild, lanes, null);\n      }\n\n      throwOnInvalidObjectType(returnFiber, newChild);\n    }\n\n    if (__DEV__) {\n      if (typeof newChild === 'function') {\n        warnOnFunctionType(returnFiber);\n      }\n    }\n\n    return null;\n  }\n\n  /**\n   * Warns if there is a duplicate or missing key\n   */\n  function warnOnInvalidKey(\n    child: mixed,\n    knownKeys: Set<string> | null,\n    returnFiber: Fiber,\n  ): Set<string> | null {\n    if (__DEV__) {\n      if (typeof child !== 'object' || child === null) {\n        return knownKeys;\n      }\n      switch (child.$$typeof) {\n        case REACT_ELEMENT_TYPE:\n        case REACT_PORTAL_TYPE:\n          warnForMissingKey(child, returnFiber);\n          const key = child.key;\n          if (typeof key !== 'string') {\n            break;\n          }\n          if (knownKeys === null) {\n            knownKeys = new Set();\n            knownKeys.add(key);\n            break;\n          }\n          if (!knownKeys.has(key)) {\n            knownKeys.add(key);\n            break;\n          }\n          console.error(\n            'Encountered two children with the same key, `%s`. ' +\n              'Keys should be unique so that components maintain their identity ' +\n              'across updates. Non-unique keys may cause children to be ' +\n              'duplicated and/or omitted — the behavior is unsupported and ' +\n              'could change in a future version.',\n            key,\n          );\n          break;\n        case REACT_LAZY_TYPE:\n          if (enableLazyElements) {\n            const payload = child._payload;\n            const init = (child._init: any);\n            warnOnInvalidKey(init(payload), knownKeys, returnFiber);\n            break;\n          }\n        // We intentionally fallthrough here if enableLazyElements is not on.\n        // eslint-disable-next-lined no-fallthrough\n        default:\n          break;\n      }\n    }\n    return knownKeys;\n  }\n\n  function reconcileChildrenArray(\n    returnFiber: Fiber,\n    currentFirstChild: Fiber | null,\n    newChildren: Array<*>,\n    lanes: Lanes,\n  ): Fiber | null {\n    // This algorithm can't optimize by searching from both ends since we\n    // don't have backpointers on fibers. I'm trying to see how far we can get\n    // with that model. If it ends up not being worth the tradeoffs, we can\n    // add it later.\n\n    // Even with a two ended optimization, we'd want to optimize for the case\n    // where there are few changes and brute force the comparison instead of\n    // going for the Map. It'd like to explore hitting that path first in\n    // forward-only mode and only go for the Map once we notice that we need\n    // lots of look ahead. This doesn't handle reversal as well as two ended\n    // search but that's unusual. Besides, for the two ended optimization to\n    // work on Iterables, we'd need to copy the whole set.\n\n    // In this first iteration, we'll just live with hitting the bad case\n    // (adding everything to a Map) in for every insert/move.\n\n    // If you change this code, also update reconcileChildrenIterator() which\n    // uses the same algorithm.\n\n    if (__DEV__) {\n      // First, validate keys.\n      let knownKeys = null;\n      for (let i = 0; i < newChildren.length; i++) {\n        const child = newChildren[i];\n        knownKeys = warnOnInvalidKey(child, knownKeys, returnFiber);\n      }\n    }\n\n    let resultingFirstChild: Fiber | null = null;\n    let previousNewFiber: Fiber | null = null;\n\n    let oldFiber = currentFirstChild;\n    let lastPlacedIndex = 0;\n    let newIdx = 0;\n    let nextOldFiber = null;\n    for (; oldFiber !== null && newIdx < newChildren.length; newIdx++) {\n      if (oldFiber.index > newIdx) {\n        nextOldFiber = oldFiber;\n        oldFiber = null;\n      } else {\n        nextOldFiber = oldFiber.sibling;\n      }\n      const newFiber = updateSlot(\n        returnFiber,\n        oldFiber,\n        newChildren[newIdx],\n        lanes,\n      );\n      if (newFiber === null) {\n        // TODO: This breaks on empty slots like null children. That's\n        // unfortunate because it triggers the slow path all the time. We need\n        // a better way to communicate whether this was a miss or null,\n        // boolean, undefined, etc.\n        if (oldFiber === null) {\n          oldFiber = nextOldFiber;\n        }\n        break;\n      }\n      if (shouldTrackSideEffects) {\n        if (oldFiber && newFiber.alternate === null) {\n          // We matched the slot, but we didn't reuse the existing fiber, so we\n          // need to delete the existing child.\n          deleteChild(returnFiber, oldFiber);\n        }\n      }\n      lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);\n      if (previousNewFiber === null) {\n        // TODO: Move out of the loop. This only happens for the first run.\n        resultingFirstChild = newFiber;\n      } else {\n        // TODO: Defer siblings if we're not at the right index for this slot.\n        // I.e. if we had null values before, then we want to defer this\n        // for each null value. However, we also don't want to call updateSlot\n        // with the previous one.\n        previousNewFiber.sibling = newFiber;\n      }\n      previousNewFiber = newFiber;\n      oldFiber = nextOldFiber;\n    }\n\n    if (newIdx === newChildren.length) {\n      // We've reached the end of the new children. We can delete the rest.\n      deleteRemainingChildren(returnFiber, oldFiber);\n      return resultingFirstChild;\n    }\n\n    if (oldFiber === null) {\n      // If we don't have any more existing children we can choose a fast path\n      // since the rest will all be insertions.\n      for (; newIdx < newChildren.length; newIdx++) {\n        const newFiber = createChild(returnFiber, newChildren[newIdx], lanes);\n        if (newFiber === null) {\n          continue;\n        }\n        lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);\n        if (previousNewFiber === null) {\n          // TODO: Move out of the loop. This only happens for the first run.\n          resultingFirstChild = newFiber;\n        } else {\n          previousNewFiber.sibling = newFiber;\n        }\n        previousNewFiber = newFiber;\n      }\n      return resultingFirstChild;\n    }\n\n    // Add all children to a key map for quick lookups.\n    const existingChildren = mapRemainingChildren(returnFiber, oldFiber);\n\n    // Keep scanning and use the map to restore deleted items as moves.\n    for (; newIdx < newChildren.length; newIdx++) {\n      const newFiber = updateFromMap(\n        existingChildren,\n        returnFiber,\n        newIdx,\n        newChildren[newIdx],\n        lanes,\n      );\n      if (newFiber !== null) {\n        if (shouldTrackSideEffects) {\n          if (newFiber.alternate !== null) {\n            // The new fiber is a work in progress, but if there exists a\n            // current, that means that we reused the fiber. We need to delete\n            // it from the child list so that we don't add it to the deletion\n            // list.\n            existingChildren.delete(\n              newFiber.key === null ? newIdx : newFiber.key,\n            );\n          }\n        }\n        lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);\n        if (previousNewFiber === null) {\n          resultingFirstChild = newFiber;\n        } else {\n          previousNewFiber.sibling = newFiber;\n        }\n        previousNewFiber = newFiber;\n      }\n    }\n\n    if (shouldTrackSideEffects) {\n      // Any existing children that weren't consumed above were deleted. We need\n      // to add them to the deletion list.\n      existingChildren.forEach(child => deleteChild(returnFiber, child));\n    }\n\n    return resultingFirstChild;\n  }\n\n  function reconcileChildrenIterator(\n    returnFiber: Fiber,\n    currentFirstChild: Fiber | null,\n    newChildrenIterable: Iterable<*>,\n    lanes: Lanes,\n  ): Fiber | null {\n    // This is the same implementation as reconcileChildrenArray(),\n    // but using the iterator instead.\n\n    const iteratorFn = getIteratorFn(newChildrenIterable);\n    invariant(\n      typeof iteratorFn === 'function',\n      'An object is not an iterable. This error is likely caused by a bug in ' +\n        'React. Please file an issue.',\n    );\n\n    if (__DEV__) {\n      // We don't support rendering Generators because it's a mutation.\n      // See https://github.com/facebook/react/issues/12995\n      if (\n        typeof Symbol === 'function' &&\n        // $FlowFixMe Flow doesn't know about toStringTag\n        newChildrenIterable[Symbol.toStringTag] === 'Generator'\n      ) {\n        if (!didWarnAboutGenerators) {\n          console.error(\n            'Using Generators as children is unsupported and will likely yield ' +\n              'unexpected results because enumerating a generator mutates it. ' +\n              'You may convert it to an array with `Array.from()` or the ' +\n              '`[...spread]` operator before rendering. Keep in mind ' +\n              'you might need to polyfill these features for older browsers.',\n          );\n        }\n        didWarnAboutGenerators = true;\n      }\n\n      // Warn about using Maps as children\n      if ((newChildrenIterable: any).entries === iteratorFn) {\n        if (!didWarnAboutMaps) {\n          console.error(\n            'Using Maps as children is not supported. ' +\n              'Use an array of keyed ReactElements instead.',\n          );\n        }\n        didWarnAboutMaps = true;\n      }\n\n      // First, validate keys.\n      // We'll get a different iterator later for the main pass.\n      const newChildren = iteratorFn.call(newChildrenIterable);\n      if (newChildren) {\n        let knownKeys = null;\n        let step = newChildren.next();\n        for (; !step.done; step = newChildren.next()) {\n          const child = step.value;\n          knownKeys = warnOnInvalidKey(child, knownKeys, returnFiber);\n        }\n      }\n    }\n\n    const newChildren = iteratorFn.call(newChildrenIterable);\n    invariant(newChildren != null, 'An iterable object provided no iterator.');\n\n    let resultingFirstChild: Fiber | null = null;\n    let previousNewFiber: Fiber | null = null;\n\n    let oldFiber = currentFirstChild;\n    let lastPlacedIndex = 0;\n    let newIdx = 0;\n    let nextOldFiber = null;\n\n    let step = newChildren.next();\n    for (\n      ;\n      oldFiber !== null && !step.done;\n      newIdx++, step = newChildren.next()\n    ) {\n      if (oldFiber.index > newIdx) {\n        nextOldFiber = oldFiber;\n        oldFiber = null;\n      } else {\n        nextOldFiber = oldFiber.sibling;\n      }\n      const newFiber = updateSlot(returnFiber, oldFiber, step.value, lanes);\n      if (newFiber === null) {\n        // TODO: This breaks on empty slots like null children. That's\n        // unfortunate because it triggers the slow path all the time. We need\n        // a better way to communicate whether this was a miss or null,\n        // boolean, undefined, etc.\n        if (oldFiber === null) {\n          oldFiber = nextOldFiber;\n        }\n        break;\n      }\n      if (shouldTrackSideEffects) {\n        if (oldFiber && newFiber.alternate === null) {\n          // We matched the slot, but we didn't reuse the existing fiber, so we\n          // need to delete the existing child.\n          deleteChild(returnFiber, oldFiber);\n        }\n      }\n      lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);\n      if (previousNewFiber === null) {\n        // TODO: Move out of the loop. This only happens for the first run.\n        resultingFirstChild = newFiber;\n      } else {\n        // TODO: Defer siblings if we're not at the right index for this slot.\n        // I.e. if we had null values before, then we want to defer this\n        // for each null value. However, we also don't want to call updateSlot\n        // with the previous one.\n        previousNewFiber.sibling = newFiber;\n      }\n      previousNewFiber = newFiber;\n      oldFiber = nextOldFiber;\n    }\n\n    if (step.done) {\n      // We've reached the end of the new children. We can delete the rest.\n      deleteRemainingChildren(returnFiber, oldFiber);\n      return resultingFirstChild;\n    }\n\n    if (oldFiber === null) {\n      // If we don't have any more existing children we can choose a fast path\n      // since the rest will all be insertions.\n      for (; !step.done; newIdx++, step = newChildren.next()) {\n        const newFiber = createChild(returnFiber, step.value, lanes);\n        if (newFiber === null) {\n          continue;\n        }\n        lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);\n        if (previousNewFiber === null) {\n          // TODO: Move out of the loop. This only happens for the first run.\n          resultingFirstChild = newFiber;\n        } else {\n          previousNewFiber.sibling = newFiber;\n        }\n        previousNewFiber = newFiber;\n      }\n      return resultingFirstChild;\n    }\n\n    // Add all children to a key map for quick lookups.\n    const existingChildren = mapRemainingChildren(returnFiber, oldFiber);\n\n    // Keep scanning and use the map to restore deleted items as moves.\n    for (; !step.done; newIdx++, step = newChildren.next()) {\n      const newFiber = updateFromMap(\n        existingChildren,\n        returnFiber,\n        newIdx,\n        step.value,\n        lanes,\n      );\n      if (newFiber !== null) {\n        if (shouldTrackSideEffects) {\n          if (newFiber.alternate !== null) {\n            // The new fiber is a work in progress, but if there exists a\n            // current, that means that we reused the fiber. We need to delete\n            // it from the child list so that we don't add it to the deletion\n            // list.\n            existingChildren.delete(\n              newFiber.key === null ? newIdx : newFiber.key,\n            );\n          }\n        }\n        lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);\n        if (previousNewFiber === null) {\n          resultingFirstChild = newFiber;\n        } else {\n          previousNewFiber.sibling = newFiber;\n        }\n        previousNewFiber = newFiber;\n      }\n    }\n\n    if (shouldTrackSideEffects) {\n      // Any existing children that weren't consumed above were deleted. We need\n      // to add them to the deletion list.\n      existingChildren.forEach(child => deleteChild(returnFiber, child));\n    }\n\n    return resultingFirstChild;\n  }\n\n  function reconcileSingleTextNode(\n    returnFiber: Fiber,\n    currentFirstChild: Fiber | null,\n    textContent: string,\n    lanes: Lanes,\n  ): Fiber {\n    // There's no need to check for keys on text nodes since we don't have a\n    // way to define them.\n    if (currentFirstChild !== null && currentFirstChild.tag === HostText) {\n      // We already have an existing node so let's just update it and delete\n      // the rest.\n      deleteRemainingChildren(returnFiber, currentFirstChild.sibling);\n      const existing = useFiber(currentFirstChild, textContent);\n      existing.return = returnFiber;\n      return existing;\n    }\n    // The existing first child is not a text node so we need to create one\n    // and delete the existing ones.\n    deleteRemainingChildren(returnFiber, currentFirstChild);\n    const created = createFiberFromText(textContent, returnFiber.mode, lanes);\n    created.return = returnFiber;\n    return created;\n  }\n\n  function reconcileSingleElement(\n    returnFiber: Fiber,\n    currentFirstChild: Fiber | null,\n    element: ReactElement,\n    lanes: Lanes,\n  ): Fiber {\n    const key = element.key;\n    let child = currentFirstChild;\n    while (child !== null) {\n      // TODO: If key === null and child.key === null, then this only applies to\n      // the first item in the list.\n      if (child.key === key) {\n        switch (child.tag) {\n          case Fragment: {\n            if (element.type === REACT_FRAGMENT_TYPE) {\n              deleteRemainingChildren(returnFiber, child.sibling);\n              const existing = useFiber(child, element.props.children);\n              existing.return = returnFiber;\n              if (__DEV__) {\n                existing._debugSource = element._source;\n                existing._debugOwner = element._owner;\n              }\n              return existing;\n            }\n            break;\n          }\n          case Block:\n            if (enableBlocksAPI) {\n              let type = element.type;\n              if (type.$$typeof === REACT_LAZY_TYPE) {\n                type = resolveLazyType(type);\n              }\n              if (type.$$typeof === REACT_BLOCK_TYPE) {\n                // The new Block might not be initialized yet. We need to initialize\n                // it in case initializing it turns out it would match.\n                if (\n                  ((type: any): BlockComponent<any, any>)._render ===\n                  (child.type: BlockComponent<any, any>)._render\n                ) {\n                  deleteRemainingChildren(returnFiber, child.sibling);\n                  const existing = useFiber(child, element.props);\n                  existing.type = type;\n                  existing.return = returnFiber;\n                  if (__DEV__) {\n                    existing._debugSource = element._source;\n                    existing._debugOwner = element._owner;\n                  }\n                  return existing;\n                }\n              }\n            }\n          // We intentionally fallthrough here if enableBlocksAPI is not on.\n          // eslint-disable-next-lined no-fallthrough\n          default: {\n            if (\n              child.elementType === element.type ||\n              // Keep this check inline so it only runs on the false path:\n              (__DEV__\n                ? isCompatibleFamilyForHotReloading(child, element)\n                : false)\n            ) {\n              deleteRemainingChildren(returnFiber, child.sibling);\n              const existing = useFiber(child, element.props);\n              existing.ref = coerceRef(returnFiber, child, element);\n              existing.return = returnFiber;\n              if (__DEV__) {\n                existing._debugSource = element._source;\n                existing._debugOwner = element._owner;\n              }\n              return existing;\n            }\n            break;\n          }\n        }\n        // Didn't match.\n        deleteRemainingChildren(returnFiber, child);\n        break;\n      } else {\n        deleteChild(returnFiber, child);\n      }\n      child = child.sibling;\n    }\n\n    if (element.type === REACT_FRAGMENT_TYPE) {\n      const created = createFiberFromFragment(\n        element.props.children,\n        returnFiber.mode,\n        lanes,\n        element.key,\n      );\n      created.return = returnFiber;\n      return created;\n    } else {\n      const created = createFiberFromElement(element, returnFiber.mode, lanes);\n      created.ref = coerceRef(returnFiber, currentFirstChild, element);\n      created.return = returnFiber;\n      return created;\n    }\n  }\n\n  function reconcileSinglePortal(\n    returnFiber: Fiber,\n    currentFirstChild: Fiber | null,\n    portal: ReactPortal,\n    lanes: Lanes,\n  ): Fiber {\n    const key = portal.key;\n    let child = currentFirstChild;\n    while (child !== null) {\n      // TODO: If key === null and child.key === null, then this only applies to\n      // the first item in the list.\n      if (child.key === key) {\n        if (\n          child.tag === HostPortal &&\n          child.stateNode.containerInfo === portal.containerInfo &&\n          child.stateNode.implementation === portal.implementation\n        ) {\n          deleteRemainingChildren(returnFiber, child.sibling);\n          const existing = useFiber(child, portal.children || []);\n          existing.return = returnFiber;\n          return existing;\n        } else {\n          deleteRemainingChildren(returnFiber, child);\n          break;\n        }\n      } else {\n        deleteChild(returnFiber, child);\n      }\n      child = child.sibling;\n    }\n\n    const created = createFiberFromPortal(portal, returnFiber.mode, lanes);\n    created.return = returnFiber;\n    return created;\n  }\n\n  // This API will tag the children with the side-effect of the reconciliation\n  // itself. They will be added to the side-effect list as we pass through the\n  // children and the parent.\n  function reconcileChildFibers(\n    returnFiber: Fiber,\n    currentFirstChild: Fiber | null,\n    newChild: any,\n    lanes: Lanes,\n  ): Fiber | null {\n    // This function is not recursive.\n    // If the top level item is an array, we treat it as a set of children,\n    // not as a fragment. Nested arrays on the other hand will be treated as\n    // fragment nodes. Recursion happens at the normal flow.\n\n    // Handle top level unkeyed fragments as if they were arrays.\n    // This leads to an ambiguity between <>{[...]}</> and <>...</>.\n    // We treat the ambiguous cases above the same.\n    const isUnkeyedTopLevelFragment =\n      typeof newChild === 'object' &&\n      newChild !== null &&\n      newChild.type === REACT_FRAGMENT_TYPE &&\n      newChild.key === null;\n    if (isUnkeyedTopLevelFragment) {\n      newChild = newChild.props.children;\n    }\n\n    // Handle object types\n    const isObject = typeof newChild === 'object' && newChild !== null;\n\n    if (isObject) {\n      switch (newChild.$$typeof) {\n        case REACT_ELEMENT_TYPE:\n          return placeSingleChild(\n            reconcileSingleElement(\n              returnFiber,\n              currentFirstChild,\n              newChild,\n              lanes,\n            ),\n          );\n        case REACT_PORTAL_TYPE:\n          return placeSingleChild(\n            reconcileSinglePortal(\n              returnFiber,\n              currentFirstChild,\n              newChild,\n              lanes,\n            ),\n          );\n        case REACT_LAZY_TYPE:\n          if (enableLazyElements) {\n            const payload = newChild._payload;\n            const init = newChild._init;\n            // TODO: This function is supposed to be non-recursive.\n            return reconcileChildFibers(\n              returnFiber,\n              currentFirstChild,\n              init(payload),\n              lanes,\n            );\n          }\n      }\n    }\n\n    if (typeof newChild === 'string' || typeof newChild === 'number') {\n      return placeSingleChild(\n        reconcileSingleTextNode(\n          returnFiber,\n          currentFirstChild,\n          '' + newChild,\n          lanes,\n        ),\n      );\n    }\n\n    if (isArray(newChild)) {\n      return reconcileChildrenArray(\n        returnFiber,\n        currentFirstChild,\n        newChild,\n        lanes,\n      );\n    }\n\n    if (getIteratorFn(newChild)) {\n      return reconcileChildrenIterator(\n        returnFiber,\n        currentFirstChild,\n        newChild,\n        lanes,\n      );\n    }\n\n    if (isObject) {\n      throwOnInvalidObjectType(returnFiber, newChild);\n    }\n\n    if (__DEV__) {\n      if (typeof newChild === 'function') {\n        warnOnFunctionType(returnFiber);\n      }\n    }\n    if (typeof newChild === 'undefined' && !isUnkeyedTopLevelFragment) {\n      // If the new child is undefined, and the return fiber is a composite\n      // component, throw an error. If Fiber return types are disabled,\n      // we already threw above.\n      switch (returnFiber.tag) {\n        case ClassComponent: {\n          if (__DEV__) {\n            const instance = returnFiber.stateNode;\n            if (instance.render._isMockFunction) {\n              // We allow auto-mocks to proceed as if they're returning null.\n              break;\n            }\n          }\n        }\n        // Intentionally fall through to the next case, which handles both\n        // functions and classes\n        // eslint-disable-next-lined no-fallthrough\n        case Block:\n        case FunctionComponent:\n        case ForwardRef:\n        case SimpleMemoComponent: {\n          invariant(\n            false,\n            '%s(...): Nothing was returned from render. This usually means a ' +\n              'return statement is missing. Or, to render nothing, ' +\n              'return null.',\n            getComponentName(returnFiber.type) || 'Component',\n          );\n        }\n      }\n    }\n\n    // Remaining cases are all treated as empty.\n    return deleteRemainingChildren(returnFiber, currentFirstChild);\n  }\n\n  return reconcileChildFibers;\n}\n\nexport const reconcileChildFibers = ChildReconciler(true);\nexport const mountChildFibers = ChildReconciler(false);\n\nexport function cloneChildFibers(\n  current: Fiber | null,\n  workInProgress: Fiber,\n): void {\n  invariant(\n    current === null || workInProgress.child === current.child,\n    'Resuming work not yet implemented.',\n  );\n\n  if (workInProgress.child === null) {\n    return;\n  }\n\n  let currentChild = workInProgress.child;\n  let newChild = createWorkInProgress(currentChild, currentChild.pendingProps);\n  workInProgress.child = newChild;\n\n  newChild.return = workInProgress;\n  while (currentChild.sibling !== null) {\n    currentChild = currentChild.sibling;\n    newChild = newChild.sibling = createWorkInProgress(\n      currentChild,\n      currentChild.pendingProps,\n    );\n    newChild.return = workInProgress;\n  }\n  newChild.sibling = null;\n}\n\n// Reset a workInProgress child set to prepare it for a second pass.\nexport function resetChildFibers(workInProgress: Fiber, lanes: Lanes): void {\n  let child = workInProgress.child;\n  while (child !== null) {\n    resetWorkInProgress(child, lanes);\n    child = child.sibling;\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactInternalTypes';\nimport type {StackCursor} from './ReactFiberStack.old';\nimport type {Container, HostContext} from './ReactFiberHostConfig';\n\nimport invariant from 'shared/invariant';\n\nimport {getChildHostContext, getRootHostContext} from './ReactFiberHostConfig';\nimport {createCursor, push, pop} from './ReactFiberStack.old';\n\ndeclare class NoContextT {}\nconst NO_CONTEXT: NoContextT = ({}: any);\n\nconst contextStackCursor: StackCursor<HostContext | NoContextT> = createCursor(\n  NO_CONTEXT,\n);\nconst contextFiberStackCursor: StackCursor<Fiber | NoContextT> = createCursor(\n  NO_CONTEXT,\n);\nconst rootInstanceStackCursor: StackCursor<\n  Container | NoContextT,\n> = createCursor(NO_CONTEXT);\n\nfunction requiredContext<Value>(c: Value | NoContextT): Value {\n  invariant(\n    c !== NO_CONTEXT,\n    'Expected host context to exist. This error is likely caused by a bug ' +\n      'in React. Please file an issue.',\n  );\n  return (c: any);\n}\n\nfunction getRootHostContainer(): Container {\n  const rootInstance = requiredContext(rootInstanceStackCursor.current);\n  return rootInstance;\n}\n\nfunction pushHostContainer(fiber: Fiber, nextRootInstance: Container) {\n  // Push current root instance onto the stack;\n  // This allows us to reset root when portals are popped.\n  push(rootInstanceStackCursor, nextRootInstance, fiber);\n  // Track the context and the Fiber that provided it.\n  // This enables us to pop only Fibers that provide unique contexts.\n  push(contextFiberStackCursor, fiber, fiber);\n\n  // Finally, we need to push the host context to the stack.\n  // However, we can't just call getRootHostContext() and push it because\n  // we'd have a different number of entries on the stack depending on\n  // whether getRootHostContext() throws somewhere in renderer code or not.\n  // So we push an empty value first. This lets us safely unwind on errors.\n  push(contextStackCursor, NO_CONTEXT, fiber);\n  const nextRootContext = getRootHostContext(nextRootInstance);\n  // Now that we know this function doesn't throw, replace it.\n  pop(contextStackCursor, fiber);\n  push(contextStackCursor, nextRootContext, fiber);\n}\n\nfunction popHostContainer(fiber: Fiber) {\n  pop(contextStackCursor, fiber);\n  pop(contextFiberStackCursor, fiber);\n  pop(rootInstanceStackCursor, fiber);\n}\n\nfunction getHostContext(): HostContext {\n  const context = requiredContext(contextStackCursor.current);\n  return context;\n}\n\nfunction pushHostContext(fiber: Fiber): void {\n  const rootInstance: Container = requiredContext(\n    rootInstanceStackCursor.current,\n  );\n  const context: HostContext = requiredContext(contextStackCursor.current);\n  const nextContext = getChildHostContext(context, fiber.type, rootInstance);\n\n  // Don't push this Fiber's context unless it's unique.\n  if (context === nextContext) {\n    return;\n  }\n\n  // Track the context and the Fiber that provided it.\n  // This enables us to pop only Fibers that provide unique contexts.\n  push(contextFiberStackCursor, fiber, fiber);\n  push(contextStackCursor, nextContext, fiber);\n}\n\nfunction popHostContext(fiber: Fiber): void {\n  // Do not pop unless this Fiber provided the current context.\n  // pushHostContext() only pushes Fibers that provide unique contexts.\n  if (contextFiberStackCursor.current !== fiber) {\n    return;\n  }\n\n  pop(contextStackCursor, fiber);\n  pop(contextFiberStackCursor, fiber);\n}\n\nexport {\n  getHostContext,\n  getRootHostContainer,\n  popHostContainer,\n  popHostContext,\n  pushHostContainer,\n  pushHostContext,\n};\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactInternalTypes';\nimport type {StackCursor} from './ReactFiberStack.old';\n\nimport {createCursor, push, pop} from './ReactFiberStack.old';\n\nexport opaque type SuspenseContext = number;\nexport opaque type SubtreeSuspenseContext: SuspenseContext = number;\nexport opaque type ShallowSuspenseContext: SuspenseContext = number;\n\nconst DefaultSuspenseContext: SuspenseContext = 0b00;\n\n// The Suspense Context is split into two parts. The lower bits is\n// inherited deeply down the subtree. The upper bits only affect\n// this immediate suspense boundary and gets reset each new\n// boundary or suspense list.\nconst SubtreeSuspenseContextMask: SuspenseContext = 0b01;\n\n// Subtree Flags:\n\n// InvisibleParentSuspenseContext indicates that one of our parent Suspense\n// boundaries is not currently showing visible main content.\n// Either because it is already showing a fallback or is not mounted at all.\n// We can use this to determine if it is desirable to trigger a fallback at\n// the parent. If not, then we might need to trigger undesirable boundaries\n// and/or suspend the commit to avoid hiding the parent content.\nexport const InvisibleParentSuspenseContext: SubtreeSuspenseContext = 0b01;\n\n// Shallow Flags:\n\n// ForceSuspenseFallback can be used by SuspenseList to force newly added\n// items into their fallback state during one of the render passes.\nexport const ForceSuspenseFallback: ShallowSuspenseContext = 0b10;\n\nexport const suspenseStackCursor: StackCursor<SuspenseContext> = createCursor(\n  DefaultSuspenseContext,\n);\n\nexport function hasSuspenseContext(\n  parentContext: SuspenseContext,\n  flag: SuspenseContext,\n): boolean {\n  return (parentContext & flag) !== 0;\n}\n\nexport function setDefaultShallowSuspenseContext(\n  parentContext: SuspenseContext,\n): SuspenseContext {\n  return parentContext & SubtreeSuspenseContextMask;\n}\n\nexport function setShallowSuspenseContext(\n  parentContext: SuspenseContext,\n  shallowContext: ShallowSuspenseContext,\n): SuspenseContext {\n  return (parentContext & SubtreeSuspenseContextMask) | shallowContext;\n}\n\nexport function addSubtreeSuspenseContext(\n  parentContext: SuspenseContext,\n  subtreeContext: SubtreeSuspenseContext,\n): SuspenseContext {\n  return parentContext | subtreeContext;\n}\n\nexport function pushSuspenseContext(\n  fiber: Fiber,\n  newContext: SuspenseContext,\n): void {\n  push(suspenseStackCursor, newContext, fiber);\n}\n\nexport function popSuspenseContext(fiber: Fiber): void {\n  pop(suspenseStackCursor, fiber);\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {ReactNodeList, Wakeable} from 'shared/ReactTypes';\nimport type {Fiber} from './ReactInternalTypes';\nimport type {SuspenseInstance} from './ReactFiberHostConfig';\nimport type {Lane} from './ReactFiberLane';\nimport {SuspenseComponent, SuspenseListComponent} from './ReactWorkTags';\nimport {NoFlags, DidCapture} from './ReactFiberFlags';\nimport {\n  isSuspenseInstancePending,\n  isSuspenseInstanceFallback,\n} from './ReactFiberHostConfig';\n\nexport type SuspenseProps = {|\n  children?: ReactNodeList,\n  fallback?: ReactNodeList,\n\n  // TODO: Add \"unstable_\" prefix?\n  suspenseCallback?: (Set<Wakeable> | null) => mixed,\n\n  unstable_expectedLoadTime?: number,\n|};\n\n// A null SuspenseState represents an unsuspended normal Suspense boundary.\n// A non-null SuspenseState means that it is blocked for one reason or another.\n// - A non-null dehydrated field means it's blocked pending hydration.\n//   - A non-null dehydrated field can use isSuspenseInstancePending or\n//     isSuspenseInstanceFallback to query the reason for being dehydrated.\n// - A null dehydrated field means it's blocked by something suspending and\n//   we're currently showing a fallback instead.\nexport type SuspenseState = {|\n  // If this boundary is still dehydrated, we store the SuspenseInstance\n  // here to indicate that it is dehydrated (flag) and for quick access\n  // to check things like isSuspenseInstancePending.\n  dehydrated: null | SuspenseInstance,\n  // Represents the lane we should attempt to hydrate a dehydrated boundary at.\n  // OffscreenLane is the default for dehydrated boundaries.\n  // NoLane is the default for normal boundaries, which turns into \"normal\" pri.\n  retryLane: Lane,\n|};\n\nexport type SuspenseListTailMode = 'collapsed' | 'hidden' | void;\n\nexport type SuspenseListRenderState = {|\n  isBackwards: boolean,\n  // The currently rendering tail row.\n  rendering: null | Fiber,\n  // The absolute time when we started rendering the most recent tail row.\n  renderingStartTime: number,\n  // The last of the already rendered children.\n  last: null | Fiber,\n  // Remaining rows on the tail of the list.\n  tail: null | Fiber,\n  // Tail insertions setting.\n  tailMode: SuspenseListTailMode,\n  // Last Effect before we rendered the \"rendering\" item.\n  // Used to remove new effects added by the rendered item.\n  lastEffect: null | Fiber,\n|};\n\nexport function shouldCaptureSuspense(\n  workInProgress: Fiber,\n  hasInvisibleParent: boolean,\n): boolean {\n  // If it was the primary children that just suspended, capture and render the\n  // fallback. Otherwise, don't capture and bubble to the next boundary.\n  const nextState: SuspenseState | null = workInProgress.memoizedState;\n  if (nextState !== null) {\n    if (nextState.dehydrated !== null) {\n      // A dehydrated boundary always captures.\n      return true;\n    }\n    return false;\n  }\n  const props = workInProgress.memoizedProps;\n  // In order to capture, the Suspense component must have a fallback prop.\n  if (props.fallback === undefined) {\n    return false;\n  }\n  // Regular boundaries always capture.\n  if (props.unstable_avoidThisFallback !== true) {\n    return true;\n  }\n  // If it's a boundary we should avoid, then we prefer to bubble up to the\n  // parent boundary if it is currently invisible.\n  if (hasInvisibleParent) {\n    return false;\n  }\n  // If the parent is not able to handle it, we must handle it.\n  return true;\n}\n\nexport function findFirstSuspended(row: Fiber): null | Fiber {\n  let node = row;\n  while (node !== null) {\n    if (node.tag === SuspenseComponent) {\n      const state: SuspenseState | null = node.memoizedState;\n      if (state !== null) {\n        const dehydrated: null | SuspenseInstance = state.dehydrated;\n        if (\n          dehydrated === null ||\n          isSuspenseInstancePending(dehydrated) ||\n          isSuspenseInstanceFallback(dehydrated)\n        ) {\n          return node;\n        }\n      }\n    } else if (\n      node.tag === SuspenseListComponent &&\n      // revealOrder undefined can't be trusted because it don't\n      // keep track of whether it suspended or not.\n      node.memoizedProps.revealOrder !== undefined\n    ) {\n      const didSuspend = (node.flags & DidCapture) !== NoFlags;\n      if (didSuspend) {\n        return node;\n      }\n    } else if (node.child !== null) {\n      node.child.return = node;\n      node = node.child;\n      continue;\n    }\n    if (node === row) {\n      return null;\n    }\n    while (node.sibling === null) {\n      if (node.return === null || node.return === row) {\n        return null;\n      }\n      node = node.return;\n    }\n    node.sibling.return = node.return;\n    node = node.sibling;\n  }\n  return null;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nexport type HookFlags = number;\n\nexport const NoFlags = /*  */ 0b000;\n\n// Represents whether effect should fire.\nexport const HasEffect = /* */ 0b001;\n\n// Represents the phase in which the effect (not the clean-up) fires.\nexport const Layout = /*    */ 0b010;\nexport const Passive = /*   */ 0b100;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactInternalTypes';\nimport type {\n  Instance,\n  TextInstance,\n  HydratableInstance,\n  SuspenseInstance,\n  Container,\n  HostContext,\n} from './ReactFiberHostConfig';\nimport type {SuspenseState} from './ReactFiberSuspenseComponent.old';\n\nimport {\n  HostComponent,\n  HostText,\n  HostRoot,\n  SuspenseComponent,\n} from './ReactWorkTags';\nimport {Deletion, Placement, Hydrating} from './ReactFiberFlags';\nimport invariant from 'shared/invariant';\n\nimport {\n  createFiberFromHostInstanceForDeletion,\n  createFiberFromDehydratedFragment,\n} from './ReactFiber.old';\nimport {\n  shouldSetTextContent,\n  supportsHydration,\n  canHydrateInstance,\n  canHydrateTextInstance,\n  canHydrateSuspenseInstance,\n  getNextHydratableSibling,\n  getFirstHydratableChild,\n  hydrateInstance,\n  hydrateTextInstance,\n  hydrateSuspenseInstance,\n  getNextHydratableInstanceAfterSuspenseInstance,\n  didNotMatchHydratedContainerTextInstance,\n  didNotMatchHydratedTextInstance,\n  didNotHydrateContainerInstance,\n  didNotHydrateInstance,\n  didNotFindHydratableContainerInstance,\n  didNotFindHydratableContainerTextInstance,\n  didNotFindHydratableContainerSuspenseInstance,\n  didNotFindHydratableInstance,\n  didNotFindHydratableTextInstance,\n  didNotFindHydratableSuspenseInstance,\n} from './ReactFiberHostConfig';\nimport {enableSuspenseServerRenderer} from 'shared/ReactFeatureFlags';\nimport {OffscreenLane} from './ReactFiberLane';\n\n// The deepest Fiber on the stack involved in a hydration context.\n// This may have been an insertion or a hydration.\nlet hydrationParentFiber: null | Fiber = null;\nlet nextHydratableInstance: null | HydratableInstance = null;\nlet isHydrating: boolean = false;\n\nfunction warnIfHydrating() {\n  if (__DEV__) {\n    if (isHydrating) {\n      console.error(\n        'We should not be hydrating here. This is a bug in React. Please file a bug.',\n      );\n    }\n  }\n}\n\nfunction enterHydrationState(fiber: Fiber): boolean {\n  if (!supportsHydration) {\n    return false;\n  }\n\n  const parentInstance = fiber.stateNode.containerInfo;\n  nextHydratableInstance = getFirstHydratableChild(parentInstance);\n  hydrationParentFiber = fiber;\n  isHydrating = true;\n  return true;\n}\n\nfunction reenterHydrationStateFromDehydratedSuspenseInstance(\n  fiber: Fiber,\n  suspenseInstance: SuspenseInstance,\n): boolean {\n  if (!supportsHydration) {\n    return false;\n  }\n  nextHydratableInstance = getNextHydratableSibling(suspenseInstance);\n  popToNextHostParent(fiber);\n  isHydrating = true;\n  return true;\n}\n\nfunction deleteHydratableInstance(\n  returnFiber: Fiber,\n  instance: HydratableInstance,\n) {\n  if (__DEV__) {\n    switch (returnFiber.tag) {\n      case HostRoot:\n        didNotHydrateContainerInstance(\n          returnFiber.stateNode.containerInfo,\n          instance,\n        );\n        break;\n      case HostComponent:\n        didNotHydrateInstance(\n          returnFiber.type,\n          returnFiber.memoizedProps,\n          returnFiber.stateNode,\n          instance,\n        );\n        break;\n    }\n  }\n\n  const childToDelete = createFiberFromHostInstanceForDeletion();\n  childToDelete.stateNode = instance;\n  childToDelete.return = returnFiber;\n  childToDelete.flags = Deletion;\n\n  // This might seem like it belongs on progressedFirstDeletion. However,\n  // these children are not part of the reconciliation list of children.\n  // Even if we abort and rereconcile the children, that will try to hydrate\n  // again and the nodes are still in the host tree so these will be\n  // recreated.\n  if (returnFiber.lastEffect !== null) {\n    returnFiber.lastEffect.nextEffect = childToDelete;\n    returnFiber.lastEffect = childToDelete;\n  } else {\n    returnFiber.firstEffect = returnFiber.lastEffect = childToDelete;\n  }\n}\n\nfunction insertNonHydratedInstance(returnFiber: Fiber, fiber: Fiber) {\n  fiber.flags = (fiber.flags & ~Hydrating) | Placement;\n  if (__DEV__) {\n    switch (returnFiber.tag) {\n      case HostRoot: {\n        const parentContainer = returnFiber.stateNode.containerInfo;\n        switch (fiber.tag) {\n          case HostComponent:\n            const type = fiber.type;\n            const props = fiber.pendingProps;\n            didNotFindHydratableContainerInstance(parentContainer, type, props);\n            break;\n          case HostText:\n            const text = fiber.pendingProps;\n            didNotFindHydratableContainerTextInstance(parentContainer, text);\n            break;\n          case SuspenseComponent:\n            didNotFindHydratableContainerSuspenseInstance(parentContainer);\n            break;\n        }\n        break;\n      }\n      case HostComponent: {\n        const parentType = returnFiber.type;\n        const parentProps = returnFiber.memoizedProps;\n        const parentInstance = returnFiber.stateNode;\n        switch (fiber.tag) {\n          case HostComponent:\n            const type = fiber.type;\n            const props = fiber.pendingProps;\n            didNotFindHydratableInstance(\n              parentType,\n              parentProps,\n              parentInstance,\n              type,\n              props,\n            );\n            break;\n          case HostText:\n            const text = fiber.pendingProps;\n            didNotFindHydratableTextInstance(\n              parentType,\n              parentProps,\n              parentInstance,\n              text,\n            );\n            break;\n          case SuspenseComponent:\n            didNotFindHydratableSuspenseInstance(\n              parentType,\n              parentProps,\n              parentInstance,\n            );\n            break;\n        }\n        break;\n      }\n      default:\n        return;\n    }\n  }\n}\n\nfunction tryHydrate(fiber, nextInstance) {\n  switch (fiber.tag) {\n    case HostComponent: {\n      const type = fiber.type;\n      const props = fiber.pendingProps;\n      const instance = canHydrateInstance(nextInstance, type, props);\n      if (instance !== null) {\n        fiber.stateNode = (instance: Instance);\n        return true;\n      }\n      return false;\n    }\n    case HostText: {\n      const text = fiber.pendingProps;\n      const textInstance = canHydrateTextInstance(nextInstance, text);\n      if (textInstance !== null) {\n        fiber.stateNode = (textInstance: TextInstance);\n        return true;\n      }\n      return false;\n    }\n    case SuspenseComponent: {\n      if (enableSuspenseServerRenderer) {\n        const suspenseInstance: null | SuspenseInstance = canHydrateSuspenseInstance(\n          nextInstance,\n        );\n        if (suspenseInstance !== null) {\n          const suspenseState: SuspenseState = {\n            dehydrated: suspenseInstance,\n            retryLane: OffscreenLane,\n          };\n          fiber.memoizedState = suspenseState;\n          // Store the dehydrated fragment as a child fiber.\n          // This simplifies the code for getHostSibling and deleting nodes,\n          // since it doesn't have to consider all Suspense boundaries and\n          // check if they're dehydrated ones or not.\n          const dehydratedFragment = createFiberFromDehydratedFragment(\n            suspenseInstance,\n          );\n          dehydratedFragment.return = fiber;\n          fiber.child = dehydratedFragment;\n          return true;\n        }\n      }\n      return false;\n    }\n    default:\n      return false;\n  }\n}\n\nfunction tryToClaimNextHydratableInstance(fiber: Fiber): void {\n  if (!isHydrating) {\n    return;\n  }\n  let nextInstance = nextHydratableInstance;\n  if (!nextInstance) {\n    // Nothing to hydrate. Make it an insertion.\n    insertNonHydratedInstance((hydrationParentFiber: any), fiber);\n    isHydrating = false;\n    hydrationParentFiber = fiber;\n    return;\n  }\n  const firstAttemptedInstance = nextInstance;\n  if (!tryHydrate(fiber, nextInstance)) {\n    // If we can't hydrate this instance let's try the next one.\n    // We use this as a heuristic. It's based on intuition and not data so it\n    // might be flawed or unnecessary.\n    nextInstance = getNextHydratableSibling(firstAttemptedInstance);\n    if (!nextInstance || !tryHydrate(fiber, nextInstance)) {\n      // Nothing to hydrate. Make it an insertion.\n      insertNonHydratedInstance((hydrationParentFiber: any), fiber);\n      isHydrating = false;\n      hydrationParentFiber = fiber;\n      return;\n    }\n    // We matched the next one, we'll now assume that the first one was\n    // superfluous and we'll delete it. Since we can't eagerly delete it\n    // we'll have to schedule a deletion. To do that, this node needs a dummy\n    // fiber associated with it.\n    deleteHydratableInstance(\n      (hydrationParentFiber: any),\n      firstAttemptedInstance,\n    );\n  }\n  hydrationParentFiber = fiber;\n  nextHydratableInstance = getFirstHydratableChild((nextInstance: any));\n}\n\nfunction prepareToHydrateHostInstance(\n  fiber: Fiber,\n  rootContainerInstance: Container,\n  hostContext: HostContext,\n): boolean {\n  if (!supportsHydration) {\n    invariant(\n      false,\n      'Expected prepareToHydrateHostInstance() to never be called. ' +\n        'This error is likely caused by a bug in React. Please file an issue.',\n    );\n  }\n\n  const instance: Instance = fiber.stateNode;\n  const updatePayload = hydrateInstance(\n    instance,\n    fiber.type,\n    fiber.memoizedProps,\n    rootContainerInstance,\n    hostContext,\n    fiber,\n  );\n  // TODO: Type this specific to this type of component.\n  fiber.updateQueue = (updatePayload: any);\n  // If the update payload indicates that there is a change or if there\n  // is a new ref we mark this as an update.\n  if (updatePayload !== null) {\n    return true;\n  }\n  return false;\n}\n\nfunction prepareToHydrateHostTextInstance(fiber: Fiber): boolean {\n  if (!supportsHydration) {\n    invariant(\n      false,\n      'Expected prepareToHydrateHostTextInstance() to never be called. ' +\n        'This error is likely caused by a bug in React. Please file an issue.',\n    );\n  }\n\n  const textInstance: TextInstance = fiber.stateNode;\n  const textContent: string = fiber.memoizedProps;\n  const shouldUpdate = hydrateTextInstance(textInstance, textContent, fiber);\n  if (__DEV__) {\n    if (shouldUpdate) {\n      // We assume that prepareToHydrateHostTextInstance is called in a context where the\n      // hydration parent is the parent host component of this host text.\n      const returnFiber = hydrationParentFiber;\n      if (returnFiber !== null) {\n        switch (returnFiber.tag) {\n          case HostRoot: {\n            const parentContainer = returnFiber.stateNode.containerInfo;\n            didNotMatchHydratedContainerTextInstance(\n              parentContainer,\n              textInstance,\n              textContent,\n            );\n            break;\n          }\n          case HostComponent: {\n            const parentType = returnFiber.type;\n            const parentProps = returnFiber.memoizedProps;\n            const parentInstance = returnFiber.stateNode;\n            didNotMatchHydratedTextInstance(\n              parentType,\n              parentProps,\n              parentInstance,\n              textInstance,\n              textContent,\n            );\n            break;\n          }\n        }\n      }\n    }\n  }\n  return shouldUpdate;\n}\n\nfunction prepareToHydrateHostSuspenseInstance(fiber: Fiber): void {\n  if (!supportsHydration) {\n    invariant(\n      false,\n      'Expected prepareToHydrateHostSuspenseInstance() to never be called. ' +\n        'This error is likely caused by a bug in React. Please file an issue.',\n    );\n  }\n\n  const suspenseState: null | SuspenseState = fiber.memoizedState;\n  const suspenseInstance: null | SuspenseInstance =\n    suspenseState !== null ? suspenseState.dehydrated : null;\n  invariant(\n    suspenseInstance,\n    'Expected to have a hydrated suspense instance. ' +\n      'This error is likely caused by a bug in React. Please file an issue.',\n  );\n  hydrateSuspenseInstance(suspenseInstance, fiber);\n}\n\nfunction skipPastDehydratedSuspenseInstance(\n  fiber: Fiber,\n): null | HydratableInstance {\n  if (!supportsHydration) {\n    invariant(\n      false,\n      'Expected skipPastDehydratedSuspenseInstance() to never be called. ' +\n        'This error is likely caused by a bug in React. Please file an issue.',\n    );\n  }\n  const suspenseState: null | SuspenseState = fiber.memoizedState;\n  const suspenseInstance: null | SuspenseInstance =\n    suspenseState !== null ? suspenseState.dehydrated : null;\n  invariant(\n    suspenseInstance,\n    'Expected to have a hydrated suspense instance. ' +\n      'This error is likely caused by a bug in React. Please file an issue.',\n  );\n  return getNextHydratableInstanceAfterSuspenseInstance(suspenseInstance);\n}\n\nfunction popToNextHostParent(fiber: Fiber): void {\n  let parent = fiber.return;\n  while (\n    parent !== null &&\n    parent.tag !== HostComponent &&\n    parent.tag !== HostRoot &&\n    parent.tag !== SuspenseComponent\n  ) {\n    parent = parent.return;\n  }\n  hydrationParentFiber = parent;\n}\n\nfunction popHydrationState(fiber: Fiber): boolean {\n  if (!supportsHydration) {\n    return false;\n  }\n  if (fiber !== hydrationParentFiber) {\n    // We're deeper than the current hydration context, inside an inserted\n    // tree.\n    return false;\n  }\n  if (!isHydrating) {\n    // If we're not currently hydrating but we're in a hydration context, then\n    // we were an insertion and now need to pop up reenter hydration of our\n    // siblings.\n    popToNextHostParent(fiber);\n    isHydrating = true;\n    return false;\n  }\n\n  const type = fiber.type;\n\n  // If we have any remaining hydratable nodes, we need to delete them now.\n  // We only do this deeper than head and body since they tend to have random\n  // other nodes in them. We also ignore components with pure text content in\n  // side of them.\n  // TODO: Better heuristic.\n  if (\n    fiber.tag !== HostComponent ||\n    (type !== 'head' &&\n      type !== 'body' &&\n      !shouldSetTextContent(type, fiber.memoizedProps))\n  ) {\n    let nextInstance = nextHydratableInstance;\n    while (nextInstance) {\n      deleteHydratableInstance(fiber, nextInstance);\n      nextInstance = getNextHydratableSibling(nextInstance);\n    }\n  }\n\n  popToNextHostParent(fiber);\n  if (fiber.tag === SuspenseComponent) {\n    nextHydratableInstance = skipPastDehydratedSuspenseInstance(fiber);\n  } else {\n    nextHydratableInstance = hydrationParentFiber\n      ? getNextHydratableSibling(fiber.stateNode)\n      : null;\n  }\n  return true;\n}\n\nfunction resetHydrationState(): void {\n  if (!supportsHydration) {\n    return;\n  }\n\n  hydrationParentFiber = null;\n  nextHydratableInstance = null;\n  isHydrating = false;\n}\n\nfunction getIsHydrating(): boolean {\n  return isHydrating;\n}\n\nexport {\n  warnIfHydrating,\n  enterHydrationState,\n  getIsHydrating,\n  reenterHydrationStateFromDehydratedSuspenseInstance,\n  resetHydrationState,\n  tryToClaimNextHydratableInstance,\n  prepareToHydrateHostInstance,\n  prepareToHydrateHostTextInstance,\n  prepareToHydrateHostSuspenseInstance,\n  popHydrationState,\n};\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {MutableSource, MutableSourceVersion} from 'shared/ReactTypes';\nimport type {FiberRoot} from './ReactInternalTypes';\n\nimport {isPrimaryRenderer} from './ReactFiberHostConfig';\n\n// Work in progress version numbers only apply to a single render,\n// and should be reset before starting a new render.\n// This tracks which mutable sources need to be reset after a render.\nconst workInProgressSources: Array<MutableSource<any>> = [];\n\nlet rendererSigil;\nif (__DEV__) {\n  // Used to detect multiple renderers using the same mutable source.\n  rendererSigil = {};\n}\n\nexport function markSourceAsDirty(mutableSource: MutableSource<any>): void {\n  workInProgressSources.push(mutableSource);\n}\n\nexport function resetWorkInProgressVersions(): void {\n  for (let i = 0; i < workInProgressSources.length; i++) {\n    const mutableSource = workInProgressSources[i];\n    if (isPrimaryRenderer) {\n      mutableSource._workInProgressVersionPrimary = null;\n    } else {\n      mutableSource._workInProgressVersionSecondary = null;\n    }\n  }\n  workInProgressSources.length = 0;\n}\n\nexport function getWorkInProgressVersion(\n  mutableSource: MutableSource<any>,\n): null | MutableSourceVersion {\n  if (isPrimaryRenderer) {\n    return mutableSource._workInProgressVersionPrimary;\n  } else {\n    return mutableSource._workInProgressVersionSecondary;\n  }\n}\n\nexport function setWorkInProgressVersion(\n  mutableSource: MutableSource<any>,\n  version: MutableSourceVersion,\n): void {\n  if (isPrimaryRenderer) {\n    mutableSource._workInProgressVersionPrimary = version;\n  } else {\n    mutableSource._workInProgressVersionSecondary = version;\n  }\n  workInProgressSources.push(mutableSource);\n}\n\nexport function warnAboutMultipleRenderersDEV(\n  mutableSource: MutableSource<any>,\n): void {\n  if (__DEV__) {\n    if (isPrimaryRenderer) {\n      if (mutableSource._currentPrimaryRenderer == null) {\n        mutableSource._currentPrimaryRenderer = rendererSigil;\n      } else if (mutableSource._currentPrimaryRenderer !== rendererSigil) {\n        console.error(\n          'Detected multiple renderers concurrently rendering the ' +\n            'same mutable source. This is currently unsupported.',\n        );\n      }\n    } else {\n      if (mutableSource._currentSecondaryRenderer == null) {\n        mutableSource._currentSecondaryRenderer = rendererSigil;\n      } else if (mutableSource._currentSecondaryRenderer !== rendererSigil) {\n        console.error(\n          'Detected multiple renderers concurrently rendering the ' +\n            'same mutable source. This is currently unsupported.',\n        );\n      }\n    }\n  }\n}\n\n// Eager reads the version of a mutable source and stores it on the root.\n// This ensures that the version used for server rendering matches the one\n// that is eventually read during hydration.\n// If they don't match there's a potential tear and a full deopt render is required.\nexport function registerMutableSourceForHydration(\n  root: FiberRoot,\n  mutableSource: MutableSource<any>,\n): void {\n  const getVersion = mutableSource._getVersion;\n  const version = getVersion(mutableSource._source);\n\n  // TODO Clear this data once all pending hydration work is finished.\n  // Retaining it forever may interfere with GC.\n  if (root.mutableSourceEagerHydrationData == null) {\n    root.mutableSourceEagerHydrationData = [mutableSource, version];\n  } else {\n    root.mutableSourceEagerHydrationData.push(mutableSource, version);\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {\n  MutableSource,\n  MutableSourceGetSnapshotFn,\n  MutableSourceSubscribeFn,\n  ReactContext,\n} from 'shared/ReactTypes';\nimport type {Fiber, Dispatcher} from './ReactInternalTypes';\nimport type {Lanes, Lane} from './ReactFiberLane';\nimport type {HookFlags} from './ReactHookEffectTags';\nimport type {ReactPriorityLevel} from './ReactInternalTypes';\nimport type {FiberRoot} from './ReactInternalTypes';\nimport type {OpaqueIDType} from './ReactFiberHostConfig';\n\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\nimport {\n  enableDebugTracing,\n  enableSchedulingProfiler,\n  enableNewReconciler,\n  decoupleUpdatePriorityFromScheduler,\n} from 'shared/ReactFeatureFlags';\n\nimport {NoMode, BlockingMode, DebugTracingMode} from './ReactTypeOfMode';\nimport {\n  NoLane,\n  NoLanes,\n  InputContinuousLanePriority,\n  isSubsetOfLanes,\n  mergeLanes,\n  removeLanes,\n  markRootEntangled,\n  markRootMutableRead,\n  getCurrentUpdateLanePriority,\n  setCurrentUpdateLanePriority,\n  higherLanePriority,\n  DefaultLanePriority,\n} from './ReactFiberLane';\nimport {readContext} from './ReactFiberNewContext.old';\nimport {\n  Update as UpdateEffect,\n  Passive as PassiveEffect,\n} from './ReactFiberFlags';\nimport {\n  HasEffect as HookHasEffect,\n  Layout as HookLayout,\n  Passive as HookPassive,\n} from './ReactHookEffectTags';\nimport {\n  getWorkInProgressRoot,\n  scheduleUpdateOnFiber,\n  requestUpdateLane,\n  requestEventTime,\n  warnIfNotCurrentlyActingEffectsInDEV,\n  warnIfNotCurrentlyActingUpdatesInDev,\n  warnIfNotScopedWithMatchingAct,\n  markSkippedUpdateLanes,\n} from './ReactFiberWorkLoop.old';\n\nimport invariant from 'shared/invariant';\nimport getComponentName from 'shared/getComponentName';\nimport is from 'shared/objectIs';\nimport {markWorkInProgressReceivedUpdate} from './ReactFiberBeginWork.old';\nimport {\n  UserBlockingPriority,\n  NormalPriority,\n  runWithPriority,\n  getCurrentPriorityLevel,\n} from './SchedulerWithReactIntegration.old';\nimport {getIsHydrating} from './ReactFiberHydrationContext.old';\nimport {\n  makeClientId,\n  makeClientIdInDEV,\n  makeOpaqueHydratingObject,\n} from './ReactFiberHostConfig';\nimport {\n  getWorkInProgressVersion,\n  markSourceAsDirty,\n  setWorkInProgressVersion,\n  warnAboutMultipleRenderersDEV,\n} from './ReactMutableSource.old';\nimport {getIsRendering} from './ReactCurrentFiber';\nimport {logStateUpdateScheduled} from './DebugTracing';\nimport {markStateUpdateScheduled} from './SchedulingProfiler';\n\nconst {ReactCurrentDispatcher, ReactCurrentBatchConfig} = ReactSharedInternals;\n\ntype Update<S, A> = {|\n  lane: Lane,\n  action: A,\n  eagerReducer: ((S, A) => S) | null,\n  eagerState: S | null,\n  next: Update<S, A>,\n  priority?: ReactPriorityLevel,\n|};\n\ntype UpdateQueue<S, A> = {|\n  pending: Update<S, A> | null,\n  dispatch: (A => mixed) | null,\n  lastRenderedReducer: ((S, A) => S) | null,\n  lastRenderedState: S | null,\n|};\n\nexport type HookType =\n  | 'useState'\n  | 'useReducer'\n  | 'useContext'\n  | 'useRef'\n  | 'useEffect'\n  | 'useLayoutEffect'\n  | 'useCallback'\n  | 'useMemo'\n  | 'useImperativeHandle'\n  | 'useDebugValue'\n  | 'useDeferredValue'\n  | 'useTransition'\n  | 'useMutableSource'\n  | 'useOpaqueIdentifier';\n\nlet didWarnAboutMismatchedHooksForComponent;\nlet didWarnAboutUseOpaqueIdentifier;\nif (__DEV__) {\n  didWarnAboutUseOpaqueIdentifier = {};\n  didWarnAboutMismatchedHooksForComponent = new Set();\n}\n\nexport type Hook = {|\n  memoizedState: any,\n  baseState: any,\n  baseQueue: Update<any, any> | null,\n  queue: UpdateQueue<any, any> | null,\n  next: Hook | null,\n|};\n\nexport type Effect = {|\n  tag: HookFlags,\n  create: () => (() => void) | void,\n  destroy: (() => void) | void,\n  deps: Array<mixed> | null,\n  next: Effect,\n|};\n\nexport type FunctionComponentUpdateQueue = {|lastEffect: Effect | null|};\n\ntype BasicStateAction<S> = (S => S) | S;\n\ntype Dispatch<A> = A => void;\n\n// These are set right before calling the component.\nlet renderLanes: Lanes = NoLanes;\n// The work-in-progress fiber. I've named it differently to distinguish it from\n// the work-in-progress hook.\nlet currentlyRenderingFiber: Fiber = (null: any);\n\n// Hooks are stored as a linked list on the fiber's memoizedState field. The\n// current hook list is the list that belongs to the current fiber. The\n// work-in-progress hook list is a new list that will be added to the\n// work-in-progress fiber.\nlet currentHook: Hook | null = null;\nlet workInProgressHook: Hook | null = null;\n\n// Whether an update was scheduled at any point during the render phase. This\n// does not get reset if we do another render pass; only when we're completely\n// finished evaluating this component. This is an optimization so we know\n// whether we need to clear render phase updates after a throw.\nlet didScheduleRenderPhaseUpdate: boolean = false;\n// Where an update was scheduled only during the current render pass. This\n// gets reset after each attempt.\n// TODO: Maybe there's some way to consolidate this with\n// `didScheduleRenderPhaseUpdate`. Or with `numberOfReRenders`.\nlet didScheduleRenderPhaseUpdateDuringThisPass: boolean = false;\n\nconst RE_RENDER_LIMIT = 25;\n\n// In DEV, this is the name of the currently executing primitive hook\nlet currentHookNameInDev: ?HookType = null;\n\n// In DEV, this list ensures that hooks are called in the same order between renders.\n// The list stores the order of hooks used during the initial render (mount).\n// Subsequent renders (updates) reference this list.\nlet hookTypesDev: Array<HookType> | null = null;\nlet hookTypesUpdateIndexDev: number = -1;\n\n// In DEV, this tracks whether currently rendering component needs to ignore\n// the dependencies for Hooks that need them (e.g. useEffect or useMemo).\n// When true, such Hooks will always be \"remounted\". Only used during hot reload.\nlet ignorePreviousDependencies: boolean = false;\n\nfunction mountHookTypesDev() {\n  if (__DEV__) {\n    const hookName = ((currentHookNameInDev: any): HookType);\n\n    if (hookTypesDev === null) {\n      hookTypesDev = [hookName];\n    } else {\n      hookTypesDev.push(hookName);\n    }\n  }\n}\n\nfunction updateHookTypesDev() {\n  if (__DEV__) {\n    const hookName = ((currentHookNameInDev: any): HookType);\n\n    if (hookTypesDev !== null) {\n      hookTypesUpdateIndexDev++;\n      if (hookTypesDev[hookTypesUpdateIndexDev] !== hookName) {\n        warnOnHookMismatchInDev(hookName);\n      }\n    }\n  }\n}\n\nfunction checkDepsAreArrayDev(deps: mixed) {\n  if (__DEV__) {\n    if (deps !== undefined && deps !== null && !Array.isArray(deps)) {\n      // Verify deps, but only on mount to avoid extra checks.\n      // It's unlikely their type would change as usually you define them inline.\n      console.error(\n        '%s received a final argument that is not an array (instead, received `%s`). When ' +\n          'specified, the final argument must be an array.',\n        currentHookNameInDev,\n        typeof deps,\n      );\n    }\n  }\n}\n\nfunction warnOnHookMismatchInDev(currentHookName: HookType) {\n  if (__DEV__) {\n    const componentName = getComponentName(currentlyRenderingFiber.type);\n    if (!didWarnAboutMismatchedHooksForComponent.has(componentName)) {\n      didWarnAboutMismatchedHooksForComponent.add(componentName);\n\n      if (hookTypesDev !== null) {\n        let table = '';\n\n        const secondColumnStart = 30;\n\n        for (let i = 0; i <= ((hookTypesUpdateIndexDev: any): number); i++) {\n          const oldHookName = hookTypesDev[i];\n          const newHookName =\n            i === ((hookTypesUpdateIndexDev: any): number)\n              ? currentHookName\n              : oldHookName;\n\n          let row = `${i + 1}. ${oldHookName}`;\n\n          // Extra space so second column lines up\n          // lol @ IE not supporting String#repeat\n          while (row.length < secondColumnStart) {\n            row += ' ';\n          }\n\n          row += newHookName + '\\n';\n\n          table += row;\n        }\n\n        console.error(\n          'React has detected a change in the order of Hooks called by %s. ' +\n            'This will lead to bugs and errors if not fixed. ' +\n            'For more information, read the Rules of Hooks: https://reactjs.org/link/rules-of-hooks\\n\\n' +\n            '   Previous render            Next render\\n' +\n            '   ------------------------------------------------------\\n' +\n            '%s' +\n            '   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n',\n          componentName,\n          table,\n        );\n      }\n    }\n  }\n}\n\nfunction throwInvalidHookError() {\n  invariant(\n    false,\n    'Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for' +\n      ' one of the following reasons:\\n' +\n      '1. You might have mismatching versions of React and the renderer (such as React DOM)\\n' +\n      '2. You might be breaking the Rules of Hooks\\n' +\n      '3. You might have more than one copy of React in the same app\\n' +\n      'See https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.',\n  );\n}\n\nfunction areHookInputsEqual(\n  nextDeps: Array<mixed>,\n  prevDeps: Array<mixed> | null,\n) {\n  if (__DEV__) {\n    if (ignorePreviousDependencies) {\n      // Only true when this component is being hot reloaded.\n      return false;\n    }\n  }\n\n  if (prevDeps === null) {\n    if (__DEV__) {\n      console.error(\n        '%s received a final argument during this render, but not during ' +\n          'the previous render. Even though the final argument is optional, ' +\n          'its type cannot change between renders.',\n        currentHookNameInDev,\n      );\n    }\n    return false;\n  }\n\n  if (__DEV__) {\n    // Don't bother comparing lengths in prod because these arrays should be\n    // passed inline.\n    if (nextDeps.length !== prevDeps.length) {\n      console.error(\n        'The final argument passed to %s changed size between renders. The ' +\n          'order and size of this array must remain constant.\\n\\n' +\n          'Previous: %s\\n' +\n          'Incoming: %s',\n        currentHookNameInDev,\n        `[${prevDeps.join(', ')}]`,\n        `[${nextDeps.join(', ')}]`,\n      );\n    }\n  }\n  for (let i = 0; i < prevDeps.length && i < nextDeps.length; i++) {\n    if (is(nextDeps[i], prevDeps[i])) {\n      continue;\n    }\n    return false;\n  }\n  return true;\n}\n\nexport function renderWithHooks<Props, SecondArg>(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  Component: (p: Props, arg: SecondArg) => any,\n  props: Props,\n  secondArg: SecondArg,\n  nextRenderLanes: Lanes,\n): any {\n  renderLanes = nextRenderLanes;\n  currentlyRenderingFiber = workInProgress;\n\n  if (__DEV__) {\n    hookTypesDev =\n      current !== null\n        ? ((current._debugHookTypes: any): Array<HookType>)\n        : null;\n    hookTypesUpdateIndexDev = -1;\n    // Used for hot reloading:\n    ignorePreviousDependencies =\n      current !== null && current.type !== workInProgress.type;\n  }\n\n  workInProgress.memoizedState = null;\n  workInProgress.updateQueue = null;\n  workInProgress.lanes = NoLanes;\n\n  // The following should have already been reset\n  // currentHook = null;\n  // workInProgressHook = null;\n\n  // didScheduleRenderPhaseUpdate = false;\n\n  // TODO Warn if no hooks are used at all during mount, then some are used during update.\n  // Currently we will identify the update render as a mount because memoizedState === null.\n  // This is tricky because it's valid for certain types of components (e.g. React.lazy)\n\n  // Using memoizedState to differentiate between mount/update only works if at least one stateful hook is used.\n  // Non-stateful hooks (e.g. context) don't get added to memoizedState,\n  // so memoizedState would be null during updates and mounts.\n  if (__DEV__) {\n    if (current !== null && current.memoizedState !== null) {\n      ReactCurrentDispatcher.current = HooksDispatcherOnUpdateInDEV;\n    } else if (hookTypesDev !== null) {\n      // This dispatcher handles an edge case where a component is updating,\n      // but no stateful hooks have been used.\n      // We want to match the production code behavior (which will use HooksDispatcherOnMount),\n      // but with the extra DEV validation to ensure hooks ordering hasn't changed.\n      // This dispatcher does that.\n      ReactCurrentDispatcher.current = HooksDispatcherOnMountWithHookTypesInDEV;\n    } else {\n      ReactCurrentDispatcher.current = HooksDispatcherOnMountInDEV;\n    }\n  } else {\n    ReactCurrentDispatcher.current =\n      current === null || current.memoizedState === null\n        ? HooksDispatcherOnMount\n        : HooksDispatcherOnUpdate;\n  }\n\n  let children = Component(props, secondArg);\n\n  // Check if there was a render phase update\n  if (didScheduleRenderPhaseUpdateDuringThisPass) {\n    // Keep rendering in a loop for as long as render phase updates continue to\n    // be scheduled. Use a counter to prevent infinite loops.\n    let numberOfReRenders: number = 0;\n    do {\n      didScheduleRenderPhaseUpdateDuringThisPass = false;\n      invariant(\n        numberOfReRenders < RE_RENDER_LIMIT,\n        'Too many re-renders. React limits the number of renders to prevent ' +\n          'an infinite loop.',\n      );\n\n      numberOfReRenders += 1;\n      if (__DEV__) {\n        // Even when hot reloading, allow dependencies to stabilize\n        // after first render to prevent infinite render phase updates.\n        ignorePreviousDependencies = false;\n      }\n\n      // Start over from the beginning of the list\n      currentHook = null;\n      workInProgressHook = null;\n\n      workInProgress.updateQueue = null;\n\n      if (__DEV__) {\n        // Also validate hook order for cascading updates.\n        hookTypesUpdateIndexDev = -1;\n      }\n\n      ReactCurrentDispatcher.current = __DEV__\n        ? HooksDispatcherOnRerenderInDEV\n        : HooksDispatcherOnRerender;\n\n      children = Component(props, secondArg);\n    } while (didScheduleRenderPhaseUpdateDuringThisPass);\n  }\n\n  // We can assume the previous dispatcher is always this one, since we set it\n  // at the beginning of the render phase and there's no re-entrancy.\n  ReactCurrentDispatcher.current = ContextOnlyDispatcher;\n\n  if (__DEV__) {\n    workInProgress._debugHookTypes = hookTypesDev;\n  }\n\n  // This check uses currentHook so that it works the same in DEV and prod bundles.\n  // hookTypesDev could catch more cases (e.g. context) but only in DEV bundles.\n  const didRenderTooFewHooks =\n    currentHook !== null && currentHook.next !== null;\n\n  renderLanes = NoLanes;\n  currentlyRenderingFiber = (null: any);\n\n  currentHook = null;\n  workInProgressHook = null;\n\n  if (__DEV__) {\n    currentHookNameInDev = null;\n    hookTypesDev = null;\n    hookTypesUpdateIndexDev = -1;\n  }\n\n  didScheduleRenderPhaseUpdate = false;\n\n  invariant(\n    !didRenderTooFewHooks,\n    'Rendered fewer hooks than expected. This may be caused by an accidental ' +\n      'early return statement.',\n  );\n\n  return children;\n}\n\nexport function bailoutHooks(\n  current: Fiber,\n  workInProgress: Fiber,\n  lanes: Lanes,\n) {\n  workInProgress.updateQueue = current.updateQueue;\n  workInProgress.flags &= ~(PassiveEffect | UpdateEffect);\n  current.lanes = removeLanes(current.lanes, lanes);\n}\n\nexport function resetHooksAfterThrow(): void {\n  // We can assume the previous dispatcher is always this one, since we set it\n  // at the beginning of the render phase and there's no re-entrancy.\n  ReactCurrentDispatcher.current = ContextOnlyDispatcher;\n\n  if (didScheduleRenderPhaseUpdate) {\n    // There were render phase updates. These are only valid for this render\n    // phase, which we are now aborting. Remove the updates from the queues so\n    // they do not persist to the next render. Do not remove updates from hooks\n    // that weren't processed.\n    //\n    // Only reset the updates from the queue if it has a clone. If it does\n    // not have a clone, that means it wasn't processed, and the updates were\n    // scheduled before we entered the render phase.\n    let hook: Hook | null = currentlyRenderingFiber.memoizedState;\n    while (hook !== null) {\n      const queue = hook.queue;\n      if (queue !== null) {\n        queue.pending = null;\n      }\n      hook = hook.next;\n    }\n    didScheduleRenderPhaseUpdate = false;\n  }\n\n  renderLanes = NoLanes;\n  currentlyRenderingFiber = (null: any);\n\n  currentHook = null;\n  workInProgressHook = null;\n\n  if (__DEV__) {\n    hookTypesDev = null;\n    hookTypesUpdateIndexDev = -1;\n\n    currentHookNameInDev = null;\n\n    isUpdatingOpaqueValueInRenderPhase = false;\n  }\n\n  didScheduleRenderPhaseUpdateDuringThisPass = false;\n}\n\nfunction mountWorkInProgressHook(): Hook {\n  const hook: Hook = {\n    memoizedState: null,\n\n    baseState: null,\n    baseQueue: null,\n    queue: null,\n\n    next: null,\n  };\n\n  if (workInProgressHook === null) {\n    // This is the first hook in the list\n    currentlyRenderingFiber.memoizedState = workInProgressHook = hook;\n  } else {\n    // Append to the end of the list\n    workInProgressHook = workInProgressHook.next = hook;\n  }\n  return workInProgressHook;\n}\n\nfunction updateWorkInProgressHook(): Hook {\n  // This function is used both for updates and for re-renders triggered by a\n  // render phase update. It assumes there is either a current hook we can\n  // clone, or a work-in-progress hook from a previous render pass that we can\n  // use as a base. When we reach the end of the base list, we must switch to\n  // the dispatcher used for mounts.\n  let nextCurrentHook: null | Hook;\n  if (currentHook === null) {\n    const current = currentlyRenderingFiber.alternate;\n    if (current !== null) {\n      nextCurrentHook = current.memoizedState;\n    } else {\n      nextCurrentHook = null;\n    }\n  } else {\n    nextCurrentHook = currentHook.next;\n  }\n\n  let nextWorkInProgressHook: null | Hook;\n  if (workInProgressHook === null) {\n    nextWorkInProgressHook = currentlyRenderingFiber.memoizedState;\n  } else {\n    nextWorkInProgressHook = workInProgressHook.next;\n  }\n\n  if (nextWorkInProgressHook !== null) {\n    // There's already a work-in-progress. Reuse it.\n    workInProgressHook = nextWorkInProgressHook;\n    nextWorkInProgressHook = workInProgressHook.next;\n\n    currentHook = nextCurrentHook;\n  } else {\n    // Clone from the current hook.\n\n    invariant(\n      nextCurrentHook !== null,\n      'Rendered more hooks than during the previous render.',\n    );\n    currentHook = nextCurrentHook;\n\n    const newHook: Hook = {\n      memoizedState: currentHook.memoizedState,\n\n      baseState: currentHook.baseState,\n      baseQueue: currentHook.baseQueue,\n      queue: currentHook.queue,\n\n      next: null,\n    };\n\n    if (workInProgressHook === null) {\n      // This is the first hook in the list.\n      currentlyRenderingFiber.memoizedState = workInProgressHook = newHook;\n    } else {\n      // Append to the end of the list.\n      workInProgressHook = workInProgressHook.next = newHook;\n    }\n  }\n  return workInProgressHook;\n}\n\nfunction createFunctionComponentUpdateQueue(): FunctionComponentUpdateQueue {\n  return {\n    lastEffect: null,\n  };\n}\n\nfunction basicStateReducer<S>(state: S, action: BasicStateAction<S>): S {\n  // $FlowFixMe: Flow doesn't like mixed types\n  return typeof action === 'function' ? action(state) : action;\n}\n\nfunction mountReducer<S, I, A>(\n  reducer: (S, A) => S,\n  initialArg: I,\n  init?: I => S,\n): [S, Dispatch<A>] {\n  const hook = mountWorkInProgressHook();\n  let initialState;\n  if (init !== undefined) {\n    initialState = init(initialArg);\n  } else {\n    initialState = ((initialArg: any): S);\n  }\n  hook.memoizedState = hook.baseState = initialState;\n  const queue = (hook.queue = {\n    pending: null,\n    dispatch: null,\n    lastRenderedReducer: reducer,\n    lastRenderedState: (initialState: any),\n  });\n  const dispatch: Dispatch<A> = (queue.dispatch = (dispatchAction.bind(\n    null,\n    currentlyRenderingFiber,\n    queue,\n  ): any));\n  return [hook.memoizedState, dispatch];\n}\n\nfunction updateReducer<S, I, A>(\n  reducer: (S, A) => S,\n  initialArg: I,\n  init?: I => S,\n): [S, Dispatch<A>] {\n  const hook = updateWorkInProgressHook();\n  const queue = hook.queue;\n  invariant(\n    queue !== null,\n    'Should have a queue. This is likely a bug in React. Please file an issue.',\n  );\n\n  queue.lastRenderedReducer = reducer;\n\n  const current: Hook = (currentHook: any);\n\n  // The last rebase update that is NOT part of the base state.\n  let baseQueue = current.baseQueue;\n\n  // The last pending update that hasn't been processed yet.\n  const pendingQueue = queue.pending;\n  if (pendingQueue !== null) {\n    // We have new updates that haven't been processed yet.\n    // We'll add them to the base queue.\n    if (baseQueue !== null) {\n      // Merge the pending queue and the base queue.\n      const baseFirst = baseQueue.next;\n      const pendingFirst = pendingQueue.next;\n      baseQueue.next = pendingFirst;\n      pendingQueue.next = baseFirst;\n    }\n    if (__DEV__) {\n      if (current.baseQueue !== baseQueue) {\n        // Internal invariant that should never happen, but feasibly could in\n        // the future if we implement resuming, or some form of that.\n        console.error(\n          'Internal error: Expected work-in-progress queue to be a clone. ' +\n            'This is a bug in React.',\n        );\n      }\n    }\n    current.baseQueue = baseQueue = pendingQueue;\n    queue.pending = null;\n  }\n\n  if (baseQueue !== null) {\n    // We have a queue to process.\n    const first = baseQueue.next;\n    let newState = current.baseState;\n\n    let newBaseState = null;\n    let newBaseQueueFirst = null;\n    let newBaseQueueLast = null;\n    let update = first;\n    do {\n      const updateLane = update.lane;\n      if (!isSubsetOfLanes(renderLanes, updateLane)) {\n        // Priority is insufficient. Skip this update. If this is the first\n        // skipped update, the previous update/state is the new base\n        // update/state.\n        const clone: Update<S, A> = {\n          lane: updateLane,\n          action: update.action,\n          eagerReducer: update.eagerReducer,\n          eagerState: update.eagerState,\n          next: (null: any),\n        };\n        if (newBaseQueueLast === null) {\n          newBaseQueueFirst = newBaseQueueLast = clone;\n          newBaseState = newState;\n        } else {\n          newBaseQueueLast = newBaseQueueLast.next = clone;\n        }\n        // Update the remaining priority in the queue.\n        // TODO: Don't need to accumulate this. Instead, we can remove\n        // renderLanes from the original lanes.\n        currentlyRenderingFiber.lanes = mergeLanes(\n          currentlyRenderingFiber.lanes,\n          updateLane,\n        );\n        markSkippedUpdateLanes(updateLane);\n      } else {\n        // This update does have sufficient priority.\n\n        if (newBaseQueueLast !== null) {\n          const clone: Update<S, A> = {\n            // This update is going to be committed so we never want uncommit\n            // it. Using NoLane works because 0 is a subset of all bitmasks, so\n            // this will never be skipped by the check above.\n            lane: NoLane,\n            action: update.action,\n            eagerReducer: update.eagerReducer,\n            eagerState: update.eagerState,\n            next: (null: any),\n          };\n          newBaseQueueLast = newBaseQueueLast.next = clone;\n        }\n\n        // Process this update.\n        if (update.eagerReducer === reducer) {\n          // If this update was processed eagerly, and its reducer matches the\n          // current reducer, we can use the eagerly computed state.\n          newState = ((update.eagerState: any): S);\n        } else {\n          const action = update.action;\n          newState = reducer(newState, action);\n        }\n      }\n      update = update.next;\n    } while (update !== null && update !== first);\n\n    if (newBaseQueueLast === null) {\n      newBaseState = newState;\n    } else {\n      newBaseQueueLast.next = (newBaseQueueFirst: any);\n    }\n\n    // Mark that the fiber performed work, but only if the new state is\n    // different from the current state.\n    if (!is(newState, hook.memoizedState)) {\n      markWorkInProgressReceivedUpdate();\n    }\n\n    hook.memoizedState = newState;\n    hook.baseState = newBaseState;\n    hook.baseQueue = newBaseQueueLast;\n\n    queue.lastRenderedState = newState;\n  }\n\n  const dispatch: Dispatch<A> = (queue.dispatch: any);\n  return [hook.memoizedState, dispatch];\n}\n\nfunction rerenderReducer<S, I, A>(\n  reducer: (S, A) => S,\n  initialArg: I,\n  init?: I => S,\n): [S, Dispatch<A>] {\n  const hook = updateWorkInProgressHook();\n  const queue = hook.queue;\n  invariant(\n    queue !== null,\n    'Should have a queue. This is likely a bug in React. Please file an issue.',\n  );\n\n  queue.lastRenderedReducer = reducer;\n\n  // This is a re-render. Apply the new render phase updates to the previous\n  // work-in-progress hook.\n  const dispatch: Dispatch<A> = (queue.dispatch: any);\n  const lastRenderPhaseUpdate = queue.pending;\n  let newState = hook.memoizedState;\n  if (lastRenderPhaseUpdate !== null) {\n    // The queue doesn't persist past this render pass.\n    queue.pending = null;\n\n    const firstRenderPhaseUpdate = lastRenderPhaseUpdate.next;\n    let update = firstRenderPhaseUpdate;\n    do {\n      // Process this render phase update. We don't have to check the\n      // priority because it will always be the same as the current\n      // render's.\n      const action = update.action;\n      newState = reducer(newState, action);\n      update = update.next;\n    } while (update !== firstRenderPhaseUpdate);\n\n    // Mark that the fiber performed work, but only if the new state is\n    // different from the current state.\n    if (!is(newState, hook.memoizedState)) {\n      markWorkInProgressReceivedUpdate();\n    }\n\n    hook.memoizedState = newState;\n    // Don't persist the state accumulated from the render phase updates to\n    // the base state unless the queue is empty.\n    // TODO: Not sure if this is the desired semantics, but it's what we\n    // do for gDSFP. I can't remember why.\n    if (hook.baseQueue === null) {\n      hook.baseState = newState;\n    }\n\n    queue.lastRenderedState = newState;\n  }\n  return [newState, dispatch];\n}\n\ntype MutableSourceMemoizedState<Source, Snapshot> = {|\n  refs: {\n    getSnapshot: MutableSourceGetSnapshotFn<Source, Snapshot>,\n    setSnapshot: Snapshot => void,\n  },\n  source: MutableSource<any>,\n  subscribe: MutableSourceSubscribeFn<Source, Snapshot>,\n|};\n\nfunction readFromUnsubcribedMutableSource<Source, Snapshot>(\n  root: FiberRoot,\n  source: MutableSource<Source>,\n  getSnapshot: MutableSourceGetSnapshotFn<Source, Snapshot>,\n): Snapshot {\n  if (__DEV__) {\n    warnAboutMultipleRenderersDEV(source);\n  }\n\n  const getVersion = source._getVersion;\n  const version = getVersion(source._source);\n\n  // Is it safe for this component to read from this source during the current render?\n  let isSafeToReadFromSource = false;\n\n  // Check the version first.\n  // If this render has already been started with a specific version,\n  // we can use it alone to determine if we can safely read from the source.\n  const currentRenderVersion = getWorkInProgressVersion(source);\n  if (currentRenderVersion !== null) {\n    // It's safe to read if the store hasn't been mutated since the last time\n    // we read something.\n    isSafeToReadFromSource = currentRenderVersion === version;\n  } else {\n    // If there's no version, then this is the first time we've read from the\n    // source during the current render pass, so we need to do a bit more work.\n    // What we need to determine is if there are any hooks that already\n    // subscribed to the source, and if so, whether there are any pending\n    // mutations that haven't been synchronized yet.\n    //\n    // If there are no pending mutations, then `root.mutableReadLanes` will be\n    // empty, and we know we can safely read.\n    //\n    // If there *are* pending mutations, we may still be able to safely read\n    // if the currently rendering lanes are inclusive of the pending mutation\n    // lanes, since that guarantees that the value we're about to read from\n    // the source is consistent with the values that we read during the most\n    // recent mutation.\n    isSafeToReadFromSource = isSubsetOfLanes(\n      renderLanes,\n      root.mutableReadLanes,\n    );\n\n    if (isSafeToReadFromSource) {\n      // If it's safe to read from this source during the current render,\n      // store the version in case other components read from it.\n      // A changed version number will let those components know to throw and restart the render.\n      setWorkInProgressVersion(source, version);\n    }\n  }\n\n  if (isSafeToReadFromSource) {\n    const snapshot = getSnapshot(source._source);\n    if (__DEV__) {\n      if (typeof snapshot === 'function') {\n        console.error(\n          'Mutable source should not return a function as the snapshot value. ' +\n            'Functions may close over mutable values and cause tearing.',\n        );\n      }\n    }\n    return snapshot;\n  } else {\n    // This handles the special case of a mutable source being shared between renderers.\n    // In that case, if the source is mutated between the first and second renderer,\n    // The second renderer don't know that it needs to reset the WIP version during unwind,\n    // (because the hook only marks sources as dirty if it's written to their WIP version).\n    // That would cause this tear check to throw again and eventually be visible to the user.\n    // We can avoid this infinite loop by explicitly marking the source as dirty.\n    //\n    // This can lead to tearing in the first renderer when it resumes,\n    // but there's nothing we can do about that (short of throwing here and refusing to continue the render).\n    markSourceAsDirty(source);\n\n    invariant(\n      false,\n      'Cannot read from mutable source during the current render without tearing. This is a bug in React. Please file an issue.',\n    );\n  }\n}\n\nfunction useMutableSource<Source, Snapshot>(\n  hook: Hook,\n  source: MutableSource<Source>,\n  getSnapshot: MutableSourceGetSnapshotFn<Source, Snapshot>,\n  subscribe: MutableSourceSubscribeFn<Source, Snapshot>,\n): Snapshot {\n  const root = ((getWorkInProgressRoot(): any): FiberRoot);\n  invariant(\n    root !== null,\n    'Expected a work-in-progress root. This is a bug in React. Please file an issue.',\n  );\n\n  const getVersion = source._getVersion;\n  const version = getVersion(source._source);\n\n  const dispatcher = ReactCurrentDispatcher.current;\n\n  // eslint-disable-next-line prefer-const\n  let [currentSnapshot, setSnapshot] = dispatcher.useState(() =>\n    readFromUnsubcribedMutableSource(root, source, getSnapshot),\n  );\n  let snapshot = currentSnapshot;\n\n  // Grab a handle to the state hook as well.\n  // We use it to clear the pending update queue if we have a new source.\n  const stateHook = ((workInProgressHook: any): Hook);\n\n  const memoizedState = ((hook.memoizedState: any): MutableSourceMemoizedState<\n    Source,\n    Snapshot,\n  >);\n  const refs = memoizedState.refs;\n  const prevGetSnapshot = refs.getSnapshot;\n  const prevSource = memoizedState.source;\n  const prevSubscribe = memoizedState.subscribe;\n\n  const fiber = currentlyRenderingFiber;\n\n  hook.memoizedState = ({\n    refs,\n    source,\n    subscribe,\n  }: MutableSourceMemoizedState<Source, Snapshot>);\n\n  // Sync the values needed by our subscription handler after each commit.\n  dispatcher.useEffect(() => {\n    refs.getSnapshot = getSnapshot;\n\n    // Normally the dispatch function for a state hook never changes,\n    // but this hook recreates the queue in certain cases  to avoid updates from stale sources.\n    // handleChange() below needs to reference the dispatch function without re-subscribing,\n    // so we use a ref to ensure that it always has the latest version.\n    refs.setSnapshot = setSnapshot;\n\n    // Check for a possible change between when we last rendered now.\n    const maybeNewVersion = getVersion(source._source);\n    if (!is(version, maybeNewVersion)) {\n      const maybeNewSnapshot = getSnapshot(source._source);\n      if (__DEV__) {\n        if (typeof maybeNewSnapshot === 'function') {\n          console.error(\n            'Mutable source should not return a function as the snapshot value. ' +\n              'Functions may close over mutable values and cause tearing.',\n          );\n        }\n      }\n\n      if (!is(snapshot, maybeNewSnapshot)) {\n        setSnapshot(maybeNewSnapshot);\n\n        const lane = requestUpdateLane(fiber);\n        markRootMutableRead(root, lane);\n      }\n      // If the source mutated between render and now,\n      // there may be state updates already scheduled from the old source.\n      // Entangle the updates so that they render in the same batch.\n      markRootEntangled(root, root.mutableReadLanes);\n    }\n  }, [getSnapshot, source, subscribe]);\n\n  // If we got a new source or subscribe function, re-subscribe in a passive effect.\n  dispatcher.useEffect(() => {\n    const handleChange = () => {\n      const latestGetSnapshot = refs.getSnapshot;\n      const latestSetSnapshot = refs.setSnapshot;\n\n      try {\n        latestSetSnapshot(latestGetSnapshot(source._source));\n\n        // Record a pending mutable source update with the same expiration time.\n        const lane = requestUpdateLane(fiber);\n\n        markRootMutableRead(root, lane);\n      } catch (error) {\n        // A selector might throw after a source mutation.\n        // e.g. it might try to read from a part of the store that no longer exists.\n        // In this case we should still schedule an update with React.\n        // Worst case the selector will throw again and then an error boundary will handle it.\n        latestSetSnapshot(\n          (() => {\n            throw error;\n          }: any),\n        );\n      }\n    };\n\n    const unsubscribe = subscribe(source._source, handleChange);\n    if (__DEV__) {\n      if (typeof unsubscribe !== 'function') {\n        console.error(\n          'Mutable source subscribe function must return an unsubscribe function.',\n        );\n      }\n    }\n\n    return unsubscribe;\n  }, [source, subscribe]);\n\n  // If any of the inputs to useMutableSource change, reading is potentially unsafe.\n  //\n  // If either the source or the subscription have changed we can't can't trust the update queue.\n  // Maybe the source changed in a way that the old subscription ignored but the new one depends on.\n  //\n  // If the getSnapshot function changed, we also shouldn't rely on the update queue.\n  // It's possible that the underlying source was mutated between the when the last \"change\" event fired,\n  // and when the current render (with the new getSnapshot function) is processed.\n  //\n  // In both cases, we need to throw away pending updates (since they are no longer relevant)\n  // and treat reading from the source as we do in the mount case.\n  if (\n    !is(prevGetSnapshot, getSnapshot) ||\n    !is(prevSource, source) ||\n    !is(prevSubscribe, subscribe)\n  ) {\n    // Create a new queue and setState method,\n    // So if there are interleaved updates, they get pushed to the older queue.\n    // When this becomes current, the previous queue and dispatch method will be discarded,\n    // including any interleaving updates that occur.\n    const newQueue = {\n      pending: null,\n      dispatch: null,\n      lastRenderedReducer: basicStateReducer,\n      lastRenderedState: snapshot,\n    };\n    newQueue.dispatch = setSnapshot = (dispatchAction.bind(\n      null,\n      currentlyRenderingFiber,\n      newQueue,\n    ): any);\n    stateHook.queue = newQueue;\n    stateHook.baseQueue = null;\n    snapshot = readFromUnsubcribedMutableSource(root, source, getSnapshot);\n    stateHook.memoizedState = stateHook.baseState = snapshot;\n  }\n\n  return snapshot;\n}\n\nfunction mountMutableSource<Source, Snapshot>(\n  source: MutableSource<Source>,\n  getSnapshot: MutableSourceGetSnapshotFn<Source, Snapshot>,\n  subscribe: MutableSourceSubscribeFn<Source, Snapshot>,\n): Snapshot {\n  const hook = mountWorkInProgressHook();\n  hook.memoizedState = ({\n    refs: {\n      getSnapshot,\n      setSnapshot: (null: any),\n    },\n    source,\n    subscribe,\n  }: MutableSourceMemoizedState<Source, Snapshot>);\n  return useMutableSource(hook, source, getSnapshot, subscribe);\n}\n\nfunction updateMutableSource<Source, Snapshot>(\n  source: MutableSource<Source>,\n  getSnapshot: MutableSourceGetSnapshotFn<Source, Snapshot>,\n  subscribe: MutableSourceSubscribeFn<Source, Snapshot>,\n): Snapshot {\n  const hook = updateWorkInProgressHook();\n  return useMutableSource(hook, source, getSnapshot, subscribe);\n}\n\nfunction mountState<S>(\n  initialState: (() => S) | S,\n): [S, Dispatch<BasicStateAction<S>>] {\n  const hook = mountWorkInProgressHook();\n  if (typeof initialState === 'function') {\n    // $FlowFixMe: Flow doesn't like mixed types\n    initialState = initialState();\n  }\n  hook.memoizedState = hook.baseState = initialState;\n  const queue = (hook.queue = {\n    pending: null,\n    dispatch: null,\n    lastRenderedReducer: basicStateReducer,\n    lastRenderedState: (initialState: any),\n  });\n  const dispatch: Dispatch<\n    BasicStateAction<S>,\n  > = (queue.dispatch = (dispatchAction.bind(\n    null,\n    currentlyRenderingFiber,\n    queue,\n  ): any));\n  return [hook.memoizedState, dispatch];\n}\n\nfunction updateState<S>(\n  initialState: (() => S) | S,\n): [S, Dispatch<BasicStateAction<S>>] {\n  return updateReducer(basicStateReducer, (initialState: any));\n}\n\nfunction rerenderState<S>(\n  initialState: (() => S) | S,\n): [S, Dispatch<BasicStateAction<S>>] {\n  return rerenderReducer(basicStateReducer, (initialState: any));\n}\n\nfunction pushEffect(tag, create, destroy, deps) {\n  const effect: Effect = {\n    tag,\n    create,\n    destroy,\n    deps,\n    // Circular\n    next: (null: any),\n  };\n  let componentUpdateQueue: null | FunctionComponentUpdateQueue = (currentlyRenderingFiber.updateQueue: any);\n  if (componentUpdateQueue === null) {\n    componentUpdateQueue = createFunctionComponentUpdateQueue();\n    currentlyRenderingFiber.updateQueue = (componentUpdateQueue: any);\n    componentUpdateQueue.lastEffect = effect.next = effect;\n  } else {\n    const lastEffect = componentUpdateQueue.lastEffect;\n    if (lastEffect === null) {\n      componentUpdateQueue.lastEffect = effect.next = effect;\n    } else {\n      const firstEffect = lastEffect.next;\n      lastEffect.next = effect;\n      effect.next = firstEffect;\n      componentUpdateQueue.lastEffect = effect;\n    }\n  }\n  return effect;\n}\n\nfunction mountRef<T>(initialValue: T): {|current: T|} {\n  const hook = mountWorkInProgressHook();\n  const ref = {current: initialValue};\n  if (__DEV__) {\n    Object.seal(ref);\n  }\n  hook.memoizedState = ref;\n  return ref;\n}\n\nfunction updateRef<T>(initialValue: T): {|current: T|} {\n  const hook = updateWorkInProgressHook();\n  return hook.memoizedState;\n}\n\nfunction mountEffectImpl(fiberFlags, hookFlags, create, deps): void {\n  const hook = mountWorkInProgressHook();\n  const nextDeps = deps === undefined ? null : deps;\n  currentlyRenderingFiber.flags |= fiberFlags;\n  hook.memoizedState = pushEffect(\n    HookHasEffect | hookFlags,\n    create,\n    undefined,\n    nextDeps,\n  );\n}\n\nfunction updateEffectImpl(fiberFlags, hookFlags, create, deps): void {\n  const hook = updateWorkInProgressHook();\n  const nextDeps = deps === undefined ? null : deps;\n  let destroy = undefined;\n\n  if (currentHook !== null) {\n    const prevEffect = currentHook.memoizedState;\n    destroy = prevEffect.destroy;\n    if (nextDeps !== null) {\n      const prevDeps = prevEffect.deps;\n      if (areHookInputsEqual(nextDeps, prevDeps)) {\n        pushEffect(hookFlags, create, destroy, nextDeps);\n        return;\n      }\n    }\n  }\n\n  currentlyRenderingFiber.flags |= fiberFlags;\n\n  hook.memoizedState = pushEffect(\n    HookHasEffect | hookFlags,\n    create,\n    destroy,\n    nextDeps,\n  );\n}\n\nfunction mountEffect(\n  create: () => (() => void) | void,\n  deps: Array<mixed> | void | null,\n): void {\n  if (__DEV__) {\n    // $FlowExpectedError - jest isn't a global, and isn't recognized outside of tests\n    if ('undefined' !== typeof jest) {\n      warnIfNotCurrentlyActingEffectsInDEV(currentlyRenderingFiber);\n    }\n  }\n  return mountEffectImpl(\n    UpdateEffect | PassiveEffect,\n    HookPassive,\n    create,\n    deps,\n  );\n}\n\nfunction updateEffect(\n  create: () => (() => void) | void,\n  deps: Array<mixed> | void | null,\n): void {\n  if (__DEV__) {\n    // $FlowExpectedError - jest isn't a global, and isn't recognized outside of tests\n    if ('undefined' !== typeof jest) {\n      warnIfNotCurrentlyActingEffectsInDEV(currentlyRenderingFiber);\n    }\n  }\n  return updateEffectImpl(\n    UpdateEffect | PassiveEffect,\n    HookPassive,\n    create,\n    deps,\n  );\n}\n\nfunction mountLayoutEffect(\n  create: () => (() => void) | void,\n  deps: Array<mixed> | void | null,\n): void {\n  return mountEffectImpl(UpdateEffect, HookLayout, create, deps);\n}\n\nfunction updateLayoutEffect(\n  create: () => (() => void) | void,\n  deps: Array<mixed> | void | null,\n): void {\n  return updateEffectImpl(UpdateEffect, HookLayout, create, deps);\n}\n\nfunction imperativeHandleEffect<T>(\n  create: () => T,\n  ref: {|current: T | null|} | ((inst: T | null) => mixed) | null | void,\n) {\n  if (typeof ref === 'function') {\n    const refCallback = ref;\n    const inst = create();\n    refCallback(inst);\n    return () => {\n      refCallback(null);\n    };\n  } else if (ref !== null && ref !== undefined) {\n    const refObject = ref;\n    if (__DEV__) {\n      if (!refObject.hasOwnProperty('current')) {\n        console.error(\n          'Expected useImperativeHandle() first argument to either be a ' +\n            'ref callback or React.createRef() object. Instead received: %s.',\n          'an object with keys {' + Object.keys(refObject).join(', ') + '}',\n        );\n      }\n    }\n    const inst = create();\n    refObject.current = inst;\n    return () => {\n      refObject.current = null;\n    };\n  }\n}\n\nfunction mountImperativeHandle<T>(\n  ref: {|current: T | null|} | ((inst: T | null) => mixed) | null | void,\n  create: () => T,\n  deps: Array<mixed> | void | null,\n): void {\n  if (__DEV__) {\n    if (typeof create !== 'function') {\n      console.error(\n        'Expected useImperativeHandle() second argument to be a function ' +\n          'that creates a handle. Instead received: %s.',\n        create !== null ? typeof create : 'null',\n      );\n    }\n  }\n\n  // TODO: If deps are provided, should we skip comparing the ref itself?\n  const effectDeps =\n    deps !== null && deps !== undefined ? deps.concat([ref]) : null;\n\n  return mountEffectImpl(\n    UpdateEffect,\n    HookLayout,\n    imperativeHandleEffect.bind(null, create, ref),\n    effectDeps,\n  );\n}\n\nfunction updateImperativeHandle<T>(\n  ref: {|current: T | null|} | ((inst: T | null) => mixed) | null | void,\n  create: () => T,\n  deps: Array<mixed> | void | null,\n): void {\n  if (__DEV__) {\n    if (typeof create !== 'function') {\n      console.error(\n        'Expected useImperativeHandle() second argument to be a function ' +\n          'that creates a handle. Instead received: %s.',\n        create !== null ? typeof create : 'null',\n      );\n    }\n  }\n\n  // TODO: If deps are provided, should we skip comparing the ref itself?\n  const effectDeps =\n    deps !== null && deps !== undefined ? deps.concat([ref]) : null;\n\n  return updateEffectImpl(\n    UpdateEffect,\n    HookLayout,\n    imperativeHandleEffect.bind(null, create, ref),\n    effectDeps,\n  );\n}\n\nfunction mountDebugValue<T>(value: T, formatterFn: ?(value: T) => mixed): void {\n  // This hook is normally a no-op.\n  // The react-debug-hooks package injects its own implementation\n  // so that e.g. DevTools can display custom hook values.\n}\n\nconst updateDebugValue = mountDebugValue;\n\nfunction mountCallback<T>(callback: T, deps: Array<mixed> | void | null): T {\n  const hook = mountWorkInProgressHook();\n  const nextDeps = deps === undefined ? null : deps;\n  hook.memoizedState = [callback, nextDeps];\n  return callback;\n}\n\nfunction updateCallback<T>(callback: T, deps: Array<mixed> | void | null): T {\n  const hook = updateWorkInProgressHook();\n  const nextDeps = deps === undefined ? null : deps;\n  const prevState = hook.memoizedState;\n  if (prevState !== null) {\n    if (nextDeps !== null) {\n      const prevDeps: Array<mixed> | null = prevState[1];\n      if (areHookInputsEqual(nextDeps, prevDeps)) {\n        return prevState[0];\n      }\n    }\n  }\n  hook.memoizedState = [callback, nextDeps];\n  return callback;\n}\n\nfunction mountMemo<T>(\n  nextCreate: () => T,\n  deps: Array<mixed> | void | null,\n): T {\n  const hook = mountWorkInProgressHook();\n  const nextDeps = deps === undefined ? null : deps;\n  const nextValue = nextCreate();\n  hook.memoizedState = [nextValue, nextDeps];\n  return nextValue;\n}\n\nfunction updateMemo<T>(\n  nextCreate: () => T,\n  deps: Array<mixed> | void | null,\n): T {\n  const hook = updateWorkInProgressHook();\n  const nextDeps = deps === undefined ? null : deps;\n  const prevState = hook.memoizedState;\n  if (prevState !== null) {\n    // Assume these are defined. If they're not, areHookInputsEqual will warn.\n    if (nextDeps !== null) {\n      const prevDeps: Array<mixed> | null = prevState[1];\n      if (areHookInputsEqual(nextDeps, prevDeps)) {\n        return prevState[0];\n      }\n    }\n  }\n  const nextValue = nextCreate();\n  hook.memoizedState = [nextValue, nextDeps];\n  return nextValue;\n}\n\nfunction mountDeferredValue<T>(value: T): T {\n  const [prevValue, setValue] = mountState(value);\n  mountEffect(() => {\n    const prevTransition = ReactCurrentBatchConfig.transition;\n    ReactCurrentBatchConfig.transition = 1;\n    try {\n      setValue(value);\n    } finally {\n      ReactCurrentBatchConfig.transition = prevTransition;\n    }\n  }, [value]);\n  return prevValue;\n}\n\nfunction updateDeferredValue<T>(value: T): T {\n  const [prevValue, setValue] = updateState(value);\n  updateEffect(() => {\n    const prevTransition = ReactCurrentBatchConfig.transition;\n    ReactCurrentBatchConfig.transition = 1;\n    try {\n      setValue(value);\n    } finally {\n      ReactCurrentBatchConfig.transition = prevTransition;\n    }\n  }, [value]);\n  return prevValue;\n}\n\nfunction rerenderDeferredValue<T>(value: T): T {\n  const [prevValue, setValue] = rerenderState(value);\n  updateEffect(() => {\n    const prevTransition = ReactCurrentBatchConfig.transition;\n    ReactCurrentBatchConfig.transition = 1;\n    try {\n      setValue(value);\n    } finally {\n      ReactCurrentBatchConfig.transition = prevTransition;\n    }\n  }, [value]);\n  return prevValue;\n}\n\nfunction startTransition(setPending, callback) {\n  const priorityLevel = getCurrentPriorityLevel();\n  if (decoupleUpdatePriorityFromScheduler) {\n    const previousLanePriority = getCurrentUpdateLanePriority();\n    setCurrentUpdateLanePriority(\n      higherLanePriority(previousLanePriority, InputContinuousLanePriority),\n    );\n\n    runWithPriority(\n      priorityLevel < UserBlockingPriority\n        ? UserBlockingPriority\n        : priorityLevel,\n      () => {\n        setPending(true);\n      },\n    );\n\n    // TODO: Can remove this. Was only necessary because we used to give\n    // different behavior to transitions without a config object. Now they are\n    // all treated the same.\n    setCurrentUpdateLanePriority(DefaultLanePriority);\n\n    runWithPriority(\n      priorityLevel > NormalPriority ? NormalPriority : priorityLevel,\n      () => {\n        const prevTransition = ReactCurrentBatchConfig.transition;\n        ReactCurrentBatchConfig.transition = 1;\n        try {\n          setPending(false);\n          callback();\n        } finally {\n          if (decoupleUpdatePriorityFromScheduler) {\n            setCurrentUpdateLanePriority(previousLanePriority);\n          }\n          ReactCurrentBatchConfig.transition = prevTransition;\n        }\n      },\n    );\n  } else {\n    runWithPriority(\n      priorityLevel < UserBlockingPriority\n        ? UserBlockingPriority\n        : priorityLevel,\n      () => {\n        setPending(true);\n      },\n    );\n\n    runWithPriority(\n      priorityLevel > NormalPriority ? NormalPriority : priorityLevel,\n      () => {\n        const prevTransition = ReactCurrentBatchConfig.transition;\n        ReactCurrentBatchConfig.transition = 1;\n        try {\n          setPending(false);\n          callback();\n        } finally {\n          ReactCurrentBatchConfig.transition = prevTransition;\n        }\n      },\n    );\n  }\n}\n\nfunction mountTransition(): [(() => void) => void, boolean] {\n  const [isPending, setPending] = mountState(false);\n  // The `start` method can be stored on a ref, since `setPending`\n  // never changes.\n  const start = startTransition.bind(null, setPending);\n  mountRef(start);\n  return [start, isPending];\n}\n\nfunction updateTransition(): [(() => void) => void, boolean] {\n  const [isPending] = updateState(false);\n  const startRef = updateRef();\n  const start: (() => void) => void = (startRef.current: any);\n  return [start, isPending];\n}\n\nfunction rerenderTransition(): [(() => void) => void, boolean] {\n  const [isPending] = rerenderState(false);\n  const startRef = updateRef();\n  const start: (() => void) => void = (startRef.current: any);\n  return [start, isPending];\n}\n\nlet isUpdatingOpaqueValueInRenderPhase = false;\nexport function getIsUpdatingOpaqueValueInRenderPhaseInDEV(): boolean | void {\n  if (__DEV__) {\n    return isUpdatingOpaqueValueInRenderPhase;\n  }\n}\n\nfunction warnOnOpaqueIdentifierAccessInDEV(fiber) {\n  if (__DEV__) {\n    // TODO: Should warn in effects and callbacks, too\n    const name = getComponentName(fiber.type) || 'Unknown';\n    if (getIsRendering() && !didWarnAboutUseOpaqueIdentifier[name]) {\n      console.error(\n        'The object passed back from useOpaqueIdentifier is meant to be ' +\n          'passed through to attributes only. Do not read the ' +\n          'value directly.',\n      );\n      didWarnAboutUseOpaqueIdentifier[name] = true;\n    }\n  }\n}\n\nfunction mountOpaqueIdentifier(): OpaqueIDType | void {\n  const makeId = __DEV__\n    ? makeClientIdInDEV.bind(\n        null,\n        warnOnOpaqueIdentifierAccessInDEV.bind(null, currentlyRenderingFiber),\n      )\n    : makeClientId;\n\n  if (getIsHydrating()) {\n    let didUpgrade = false;\n    const fiber = currentlyRenderingFiber;\n    const readValue = () => {\n      if (!didUpgrade) {\n        // Only upgrade once. This works even inside the render phase because\n        // the update is added to a shared queue, which outlasts the\n        // in-progress render.\n        didUpgrade = true;\n        if (__DEV__) {\n          isUpdatingOpaqueValueInRenderPhase = true;\n          setId(makeId());\n          isUpdatingOpaqueValueInRenderPhase = false;\n          warnOnOpaqueIdentifierAccessInDEV(fiber);\n        } else {\n          setId(makeId());\n        }\n      }\n      invariant(\n        false,\n        'The object passed back from useOpaqueIdentifier is meant to be ' +\n          'passed through to attributes only. Do not read the value directly.',\n      );\n    };\n    const id = makeOpaqueHydratingObject(readValue);\n\n    const setId = mountState(id)[1];\n\n    if ((currentlyRenderingFiber.mode & BlockingMode) === NoMode) {\n      currentlyRenderingFiber.flags |= UpdateEffect | PassiveEffect;\n      pushEffect(\n        HookHasEffect | HookPassive,\n        () => {\n          setId(makeId());\n        },\n        undefined,\n        null,\n      );\n    }\n    return id;\n  } else {\n    const id = makeId();\n    mountState(id);\n    return id;\n  }\n}\n\nfunction updateOpaqueIdentifier(): OpaqueIDType | void {\n  const id = updateState(undefined)[0];\n  return id;\n}\n\nfunction rerenderOpaqueIdentifier(): OpaqueIDType | void {\n  const id = rerenderState(undefined)[0];\n  return id;\n}\n\nfunction dispatchAction<S, A>(\n  fiber: Fiber,\n  queue: UpdateQueue<S, A>,\n  action: A,\n) {\n  if (__DEV__) {\n    if (typeof arguments[3] === 'function') {\n      console.error(\n        \"State updates from the useState() and useReducer() Hooks don't support the \" +\n          'second callback argument. To execute a side effect after ' +\n          'rendering, declare it in the component body with useEffect().',\n      );\n    }\n  }\n\n  const eventTime = requestEventTime();\n  const lane = requestUpdateLane(fiber);\n\n  const update: Update<S, A> = {\n    lane,\n    action,\n    eagerReducer: null,\n    eagerState: null,\n    next: (null: any),\n  };\n\n  // Append the update to the end of the list.\n  const pending = queue.pending;\n  if (pending === null) {\n    // This is the first update. Create a circular list.\n    update.next = update;\n  } else {\n    update.next = pending.next;\n    pending.next = update;\n  }\n  queue.pending = update;\n\n  const alternate = fiber.alternate;\n  if (\n    fiber === currentlyRenderingFiber ||\n    (alternate !== null && alternate === currentlyRenderingFiber)\n  ) {\n    // This is a render phase update. Stash it in a lazily-created map of\n    // queue -> linked list of updates. After this render pass, we'll restart\n    // and apply the stashed updates on top of the work-in-progress hook.\n    didScheduleRenderPhaseUpdateDuringThisPass = didScheduleRenderPhaseUpdate = true;\n  } else {\n    if (\n      fiber.lanes === NoLanes &&\n      (alternate === null || alternate.lanes === NoLanes)\n    ) {\n      // The queue is currently empty, which means we can eagerly compute the\n      // next state before entering the render phase. If the new state is the\n      // same as the current state, we may be able to bail out entirely.\n      const lastRenderedReducer = queue.lastRenderedReducer;\n      if (lastRenderedReducer !== null) {\n        let prevDispatcher;\n        if (__DEV__) {\n          prevDispatcher = ReactCurrentDispatcher.current;\n          ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n        }\n        try {\n          const currentState: S = (queue.lastRenderedState: any);\n          const eagerState = lastRenderedReducer(currentState, action);\n          // Stash the eagerly computed state, and the reducer used to compute\n          // it, on the update object. If the reducer hasn't changed by the\n          // time we enter the render phase, then the eager state can be used\n          // without calling the reducer again.\n          update.eagerReducer = lastRenderedReducer;\n          update.eagerState = eagerState;\n          if (is(eagerState, currentState)) {\n            // Fast path. We can bail out without scheduling React to re-render.\n            // It's still possible that we'll need to rebase this update later,\n            // if the component re-renders for a different reason and by that\n            // time the reducer has changed.\n            return;\n          }\n        } catch (error) {\n          // Suppress the error. It will throw again in the render phase.\n        } finally {\n          if (__DEV__) {\n            ReactCurrentDispatcher.current = prevDispatcher;\n          }\n        }\n      }\n    }\n    if (__DEV__) {\n      // $FlowExpectedError - jest isn't a global, and isn't recognized outside of tests\n      if ('undefined' !== typeof jest) {\n        warnIfNotScopedWithMatchingAct(fiber);\n        warnIfNotCurrentlyActingUpdatesInDev(fiber);\n      }\n    }\n    scheduleUpdateOnFiber(fiber, lane, eventTime);\n  }\n\n  if (__DEV__) {\n    if (enableDebugTracing) {\n      if (fiber.mode & DebugTracingMode) {\n        const name = getComponentName(fiber.type) || 'Unknown';\n        logStateUpdateScheduled(name, lane, action);\n      }\n    }\n  }\n\n  if (enableSchedulingProfiler) {\n    markStateUpdateScheduled(fiber, lane);\n  }\n}\n\nexport const ContextOnlyDispatcher: Dispatcher = {\n  readContext,\n\n  useCallback: throwInvalidHookError,\n  useContext: throwInvalidHookError,\n  useEffect: throwInvalidHookError,\n  useImperativeHandle: throwInvalidHookError,\n  useLayoutEffect: throwInvalidHookError,\n  useMemo: throwInvalidHookError,\n  useReducer: throwInvalidHookError,\n  useRef: throwInvalidHookError,\n  useState: throwInvalidHookError,\n  useDebugValue: throwInvalidHookError,\n  useDeferredValue: throwInvalidHookError,\n  useTransition: throwInvalidHookError,\n  useMutableSource: throwInvalidHookError,\n  useOpaqueIdentifier: throwInvalidHookError,\n\n  unstable_isNewReconciler: enableNewReconciler,\n};\n\nconst HooksDispatcherOnMount: Dispatcher = {\n  readContext,\n\n  useCallback: mountCallback,\n  useContext: readContext,\n  useEffect: mountEffect,\n  useImperativeHandle: mountImperativeHandle,\n  useLayoutEffect: mountLayoutEffect,\n  useMemo: mountMemo,\n  useReducer: mountReducer,\n  useRef: mountRef,\n  useState: mountState,\n  useDebugValue: mountDebugValue,\n  useDeferredValue: mountDeferredValue,\n  useTransition: mountTransition,\n  useMutableSource: mountMutableSource,\n  useOpaqueIdentifier: mountOpaqueIdentifier,\n\n  unstable_isNewReconciler: enableNewReconciler,\n};\n\nconst HooksDispatcherOnUpdate: Dispatcher = {\n  readContext,\n\n  useCallback: updateCallback,\n  useContext: readContext,\n  useEffect: updateEffect,\n  useImperativeHandle: updateImperativeHandle,\n  useLayoutEffect: updateLayoutEffect,\n  useMemo: updateMemo,\n  useReducer: updateReducer,\n  useRef: updateRef,\n  useState: updateState,\n  useDebugValue: updateDebugValue,\n  useDeferredValue: updateDeferredValue,\n  useTransition: updateTransition,\n  useMutableSource: updateMutableSource,\n  useOpaqueIdentifier: updateOpaqueIdentifier,\n\n  unstable_isNewReconciler: enableNewReconciler,\n};\n\nconst HooksDispatcherOnRerender: Dispatcher = {\n  readContext,\n\n  useCallback: updateCallback,\n  useContext: readContext,\n  useEffect: updateEffect,\n  useImperativeHandle: updateImperativeHandle,\n  useLayoutEffect: updateLayoutEffect,\n  useMemo: updateMemo,\n  useReducer: rerenderReducer,\n  useRef: updateRef,\n  useState: rerenderState,\n  useDebugValue: updateDebugValue,\n  useDeferredValue: rerenderDeferredValue,\n  useTransition: rerenderTransition,\n  useMutableSource: updateMutableSource,\n  useOpaqueIdentifier: rerenderOpaqueIdentifier,\n\n  unstable_isNewReconciler: enableNewReconciler,\n};\n\nlet HooksDispatcherOnMountInDEV: Dispatcher | null = null;\nlet HooksDispatcherOnMountWithHookTypesInDEV: Dispatcher | null = null;\nlet HooksDispatcherOnUpdateInDEV: Dispatcher | null = null;\nlet HooksDispatcherOnRerenderInDEV: Dispatcher | null = null;\nlet InvalidNestedHooksDispatcherOnMountInDEV: Dispatcher | null = null;\nlet InvalidNestedHooksDispatcherOnUpdateInDEV: Dispatcher | null = null;\nlet InvalidNestedHooksDispatcherOnRerenderInDEV: Dispatcher | null = null;\n\nif (__DEV__) {\n  const warnInvalidContextAccess = () => {\n    console.error(\n      'Context can only be read while React is rendering. ' +\n        'In classes, you can read it in the render method or getDerivedStateFromProps. ' +\n        'In function components, you can read it directly in the function body, but not ' +\n        'inside Hooks like useReducer() or useMemo().',\n    );\n  };\n\n  const warnInvalidHookAccess = () => {\n    console.error(\n      'Do not call Hooks inside useEffect(...), useMemo(...), or other built-in Hooks. ' +\n        'You can only call Hooks at the top level of your React function. ' +\n        'For more information, see ' +\n        'https://reactjs.org/link/rules-of-hooks',\n    );\n  };\n\n  HooksDispatcherOnMountInDEV = {\n    readContext<T>(\n      context: ReactContext<T>,\n      observedBits: void | number | boolean,\n    ): T {\n      return readContext(context, observedBits);\n    },\n    useCallback<T>(callback: T, deps: Array<mixed> | void | null): T {\n      currentHookNameInDev = 'useCallback';\n      mountHookTypesDev();\n      checkDepsAreArrayDev(deps);\n      return mountCallback(callback, deps);\n    },\n    useContext<T>(\n      context: ReactContext<T>,\n      observedBits: void | number | boolean,\n    ): T {\n      currentHookNameInDev = 'useContext';\n      mountHookTypesDev();\n      return readContext(context, observedBits);\n    },\n    useEffect(\n      create: () => (() => void) | void,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useEffect';\n      mountHookTypesDev();\n      checkDepsAreArrayDev(deps);\n      return mountEffect(create, deps);\n    },\n    useImperativeHandle<T>(\n      ref: {|current: T | null|} | ((inst: T | null) => mixed) | null | void,\n      create: () => T,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useImperativeHandle';\n      mountHookTypesDev();\n      checkDepsAreArrayDev(deps);\n      return mountImperativeHandle(ref, create, deps);\n    },\n    useLayoutEffect(\n      create: () => (() => void) | void,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useLayoutEffect';\n      mountHookTypesDev();\n      checkDepsAreArrayDev(deps);\n      return mountLayoutEffect(create, deps);\n    },\n    useMemo<T>(create: () => T, deps: Array<mixed> | void | null): T {\n      currentHookNameInDev = 'useMemo';\n      mountHookTypesDev();\n      checkDepsAreArrayDev(deps);\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnMountInDEV;\n      try {\n        return mountMemo(create, deps);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useReducer<S, I, A>(\n      reducer: (S, A) => S,\n      initialArg: I,\n      init?: I => S,\n    ): [S, Dispatch<A>] {\n      currentHookNameInDev = 'useReducer';\n      mountHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnMountInDEV;\n      try {\n        return mountReducer(reducer, initialArg, init);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useRef<T>(initialValue: T): {|current: T|} {\n      currentHookNameInDev = 'useRef';\n      mountHookTypesDev();\n      return mountRef(initialValue);\n    },\n    useState<S>(\n      initialState: (() => S) | S,\n    ): [S, Dispatch<BasicStateAction<S>>] {\n      currentHookNameInDev = 'useState';\n      mountHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnMountInDEV;\n      try {\n        return mountState(initialState);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useDebugValue<T>(value: T, formatterFn: ?(value: T) => mixed): void {\n      currentHookNameInDev = 'useDebugValue';\n      mountHookTypesDev();\n      return mountDebugValue(value, formatterFn);\n    },\n    useDeferredValue<T>(value: T): T {\n      currentHookNameInDev = 'useDeferredValue';\n      mountHookTypesDev();\n      return mountDeferredValue(value);\n    },\n    useTransition(): [(() => void) => void, boolean] {\n      currentHookNameInDev = 'useTransition';\n      mountHookTypesDev();\n      return mountTransition();\n    },\n    useMutableSource<Source, Snapshot>(\n      source: MutableSource<Source>,\n      getSnapshot: MutableSourceGetSnapshotFn<Source, Snapshot>,\n      subscribe: MutableSourceSubscribeFn<Source, Snapshot>,\n    ): Snapshot {\n      currentHookNameInDev = 'useMutableSource';\n      mountHookTypesDev();\n      return mountMutableSource(source, getSnapshot, subscribe);\n    },\n    useOpaqueIdentifier(): OpaqueIDType | void {\n      currentHookNameInDev = 'useOpaqueIdentifier';\n      mountHookTypesDev();\n      return mountOpaqueIdentifier();\n    },\n\n    unstable_isNewReconciler: enableNewReconciler,\n  };\n\n  HooksDispatcherOnMountWithHookTypesInDEV = {\n    readContext<T>(\n      context: ReactContext<T>,\n      observedBits: void | number | boolean,\n    ): T {\n      return readContext(context, observedBits);\n    },\n    useCallback<T>(callback: T, deps: Array<mixed> | void | null): T {\n      currentHookNameInDev = 'useCallback';\n      updateHookTypesDev();\n      return mountCallback(callback, deps);\n    },\n    useContext<T>(\n      context: ReactContext<T>,\n      observedBits: void | number | boolean,\n    ): T {\n      currentHookNameInDev = 'useContext';\n      updateHookTypesDev();\n      return readContext(context, observedBits);\n    },\n    useEffect(\n      create: () => (() => void) | void,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useEffect';\n      updateHookTypesDev();\n      return mountEffect(create, deps);\n    },\n    useImperativeHandle<T>(\n      ref: {|current: T | null|} | ((inst: T | null) => mixed) | null | void,\n      create: () => T,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useImperativeHandle';\n      updateHookTypesDev();\n      return mountImperativeHandle(ref, create, deps);\n    },\n    useLayoutEffect(\n      create: () => (() => void) | void,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useLayoutEffect';\n      updateHookTypesDev();\n      return mountLayoutEffect(create, deps);\n    },\n    useMemo<T>(create: () => T, deps: Array<mixed> | void | null): T {\n      currentHookNameInDev = 'useMemo';\n      updateHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnMountInDEV;\n      try {\n        return mountMemo(create, deps);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useReducer<S, I, A>(\n      reducer: (S, A) => S,\n      initialArg: I,\n      init?: I => S,\n    ): [S, Dispatch<A>] {\n      currentHookNameInDev = 'useReducer';\n      updateHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnMountInDEV;\n      try {\n        return mountReducer(reducer, initialArg, init);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useRef<T>(initialValue: T): {|current: T|} {\n      currentHookNameInDev = 'useRef';\n      updateHookTypesDev();\n      return mountRef(initialValue);\n    },\n    useState<S>(\n      initialState: (() => S) | S,\n    ): [S, Dispatch<BasicStateAction<S>>] {\n      currentHookNameInDev = 'useState';\n      updateHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnMountInDEV;\n      try {\n        return mountState(initialState);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useDebugValue<T>(value: T, formatterFn: ?(value: T) => mixed): void {\n      currentHookNameInDev = 'useDebugValue';\n      updateHookTypesDev();\n      return mountDebugValue(value, formatterFn);\n    },\n    useDeferredValue<T>(value: T): T {\n      currentHookNameInDev = 'useDeferredValue';\n      updateHookTypesDev();\n      return mountDeferredValue(value);\n    },\n    useTransition(): [(() => void) => void, boolean] {\n      currentHookNameInDev = 'useTransition';\n      updateHookTypesDev();\n      return mountTransition();\n    },\n    useMutableSource<Source, Snapshot>(\n      source: MutableSource<Source>,\n      getSnapshot: MutableSourceGetSnapshotFn<Source, Snapshot>,\n      subscribe: MutableSourceSubscribeFn<Source, Snapshot>,\n    ): Snapshot {\n      currentHookNameInDev = 'useMutableSource';\n      updateHookTypesDev();\n      return mountMutableSource(source, getSnapshot, subscribe);\n    },\n    useOpaqueIdentifier(): OpaqueIDType | void {\n      currentHookNameInDev = 'useOpaqueIdentifier';\n      updateHookTypesDev();\n      return mountOpaqueIdentifier();\n    },\n\n    unstable_isNewReconciler: enableNewReconciler,\n  };\n\n  HooksDispatcherOnUpdateInDEV = {\n    readContext<T>(\n      context: ReactContext<T>,\n      observedBits: void | number | boolean,\n    ): T {\n      return readContext(context, observedBits);\n    },\n    useCallback<T>(callback: T, deps: Array<mixed> | void | null): T {\n      currentHookNameInDev = 'useCallback';\n      updateHookTypesDev();\n      return updateCallback(callback, deps);\n    },\n    useContext<T>(\n      context: ReactContext<T>,\n      observedBits: void | number | boolean,\n    ): T {\n      currentHookNameInDev = 'useContext';\n      updateHookTypesDev();\n      return readContext(context, observedBits);\n    },\n    useEffect(\n      create: () => (() => void) | void,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useEffect';\n      updateHookTypesDev();\n      return updateEffect(create, deps);\n    },\n    useImperativeHandle<T>(\n      ref: {|current: T | null|} | ((inst: T | null) => mixed) | null | void,\n      create: () => T,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useImperativeHandle';\n      updateHookTypesDev();\n      return updateImperativeHandle(ref, create, deps);\n    },\n    useLayoutEffect(\n      create: () => (() => void) | void,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useLayoutEffect';\n      updateHookTypesDev();\n      return updateLayoutEffect(create, deps);\n    },\n    useMemo<T>(create: () => T, deps: Array<mixed> | void | null): T {\n      currentHookNameInDev = 'useMemo';\n      updateHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n      try {\n        return updateMemo(create, deps);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useReducer<S, I, A>(\n      reducer: (S, A) => S,\n      initialArg: I,\n      init?: I => S,\n    ): [S, Dispatch<A>] {\n      currentHookNameInDev = 'useReducer';\n      updateHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n      try {\n        return updateReducer(reducer, initialArg, init);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useRef<T>(initialValue: T): {|current: T|} {\n      currentHookNameInDev = 'useRef';\n      updateHookTypesDev();\n      return updateRef(initialValue);\n    },\n    useState<S>(\n      initialState: (() => S) | S,\n    ): [S, Dispatch<BasicStateAction<S>>] {\n      currentHookNameInDev = 'useState';\n      updateHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n      try {\n        return updateState(initialState);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useDebugValue<T>(value: T, formatterFn: ?(value: T) => mixed): void {\n      currentHookNameInDev = 'useDebugValue';\n      updateHookTypesDev();\n      return updateDebugValue(value, formatterFn);\n    },\n    useDeferredValue<T>(value: T): T {\n      currentHookNameInDev = 'useDeferredValue';\n      updateHookTypesDev();\n      return updateDeferredValue(value);\n    },\n    useTransition(): [(() => void) => void, boolean] {\n      currentHookNameInDev = 'useTransition';\n      updateHookTypesDev();\n      return updateTransition();\n    },\n    useMutableSource<Source, Snapshot>(\n      source: MutableSource<Source>,\n      getSnapshot: MutableSourceGetSnapshotFn<Source, Snapshot>,\n      subscribe: MutableSourceSubscribeFn<Source, Snapshot>,\n    ): Snapshot {\n      currentHookNameInDev = 'useMutableSource';\n      updateHookTypesDev();\n      return updateMutableSource(source, getSnapshot, subscribe);\n    },\n    useOpaqueIdentifier(): OpaqueIDType | void {\n      currentHookNameInDev = 'useOpaqueIdentifier';\n      updateHookTypesDev();\n      return updateOpaqueIdentifier();\n    },\n\n    unstable_isNewReconciler: enableNewReconciler,\n  };\n\n  HooksDispatcherOnRerenderInDEV = {\n    readContext<T>(\n      context: ReactContext<T>,\n      observedBits: void | number | boolean,\n    ): T {\n      return readContext(context, observedBits);\n    },\n\n    useCallback<T>(callback: T, deps: Array<mixed> | void | null): T {\n      currentHookNameInDev = 'useCallback';\n      updateHookTypesDev();\n      return updateCallback(callback, deps);\n    },\n    useContext<T>(\n      context: ReactContext<T>,\n      observedBits: void | number | boolean,\n    ): T {\n      currentHookNameInDev = 'useContext';\n      updateHookTypesDev();\n      return readContext(context, observedBits);\n    },\n    useEffect(\n      create: () => (() => void) | void,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useEffect';\n      updateHookTypesDev();\n      return updateEffect(create, deps);\n    },\n    useImperativeHandle<T>(\n      ref: {|current: T | null|} | ((inst: T | null) => mixed) | null | void,\n      create: () => T,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useImperativeHandle';\n      updateHookTypesDev();\n      return updateImperativeHandle(ref, create, deps);\n    },\n    useLayoutEffect(\n      create: () => (() => void) | void,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useLayoutEffect';\n      updateHookTypesDev();\n      return updateLayoutEffect(create, deps);\n    },\n    useMemo<T>(create: () => T, deps: Array<mixed> | void | null): T {\n      currentHookNameInDev = 'useMemo';\n      updateHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnRerenderInDEV;\n      try {\n        return updateMemo(create, deps);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useReducer<S, I, A>(\n      reducer: (S, A) => S,\n      initialArg: I,\n      init?: I => S,\n    ): [S, Dispatch<A>] {\n      currentHookNameInDev = 'useReducer';\n      updateHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnRerenderInDEV;\n      try {\n        return rerenderReducer(reducer, initialArg, init);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useRef<T>(initialValue: T): {|current: T|} {\n      currentHookNameInDev = 'useRef';\n      updateHookTypesDev();\n      return updateRef(initialValue);\n    },\n    useState<S>(\n      initialState: (() => S) | S,\n    ): [S, Dispatch<BasicStateAction<S>>] {\n      currentHookNameInDev = 'useState';\n      updateHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnRerenderInDEV;\n      try {\n        return rerenderState(initialState);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useDebugValue<T>(value: T, formatterFn: ?(value: T) => mixed): void {\n      currentHookNameInDev = 'useDebugValue';\n      updateHookTypesDev();\n      return updateDebugValue(value, formatterFn);\n    },\n    useDeferredValue<T>(value: T): T {\n      currentHookNameInDev = 'useDeferredValue';\n      updateHookTypesDev();\n      return rerenderDeferredValue(value);\n    },\n    useTransition(): [(() => void) => void, boolean] {\n      currentHookNameInDev = 'useTransition';\n      updateHookTypesDev();\n      return rerenderTransition();\n    },\n    useMutableSource<Source, Snapshot>(\n      source: MutableSource<Source>,\n      getSnapshot: MutableSourceGetSnapshotFn<Source, Snapshot>,\n      subscribe: MutableSourceSubscribeFn<Source, Snapshot>,\n    ): Snapshot {\n      currentHookNameInDev = 'useMutableSource';\n      updateHookTypesDev();\n      return updateMutableSource(source, getSnapshot, subscribe);\n    },\n    useOpaqueIdentifier(): OpaqueIDType | void {\n      currentHookNameInDev = 'useOpaqueIdentifier';\n      updateHookTypesDev();\n      return rerenderOpaqueIdentifier();\n    },\n\n    unstable_isNewReconciler: enableNewReconciler,\n  };\n\n  InvalidNestedHooksDispatcherOnMountInDEV = {\n    readContext<T>(\n      context: ReactContext<T>,\n      observedBits: void | number | boolean,\n    ): T {\n      warnInvalidContextAccess();\n      return readContext(context, observedBits);\n    },\n    useCallback<T>(callback: T, deps: Array<mixed> | void | null): T {\n      currentHookNameInDev = 'useCallback';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountCallback(callback, deps);\n    },\n    useContext<T>(\n      context: ReactContext<T>,\n      observedBits: void | number | boolean,\n    ): T {\n      currentHookNameInDev = 'useContext';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return readContext(context, observedBits);\n    },\n    useEffect(\n      create: () => (() => void) | void,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useEffect';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountEffect(create, deps);\n    },\n    useImperativeHandle<T>(\n      ref: {|current: T | null|} | ((inst: T | null) => mixed) | null | void,\n      create: () => T,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useImperativeHandle';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountImperativeHandle(ref, create, deps);\n    },\n    useLayoutEffect(\n      create: () => (() => void) | void,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useLayoutEffect';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountLayoutEffect(create, deps);\n    },\n    useMemo<T>(create: () => T, deps: Array<mixed> | void | null): T {\n      currentHookNameInDev = 'useMemo';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnMountInDEV;\n      try {\n        return mountMemo(create, deps);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useReducer<S, I, A>(\n      reducer: (S, A) => S,\n      initialArg: I,\n      init?: I => S,\n    ): [S, Dispatch<A>] {\n      currentHookNameInDev = 'useReducer';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnMountInDEV;\n      try {\n        return mountReducer(reducer, initialArg, init);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useRef<T>(initialValue: T): {|current: T|} {\n      currentHookNameInDev = 'useRef';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountRef(initialValue);\n    },\n    useState<S>(\n      initialState: (() => S) | S,\n    ): [S, Dispatch<BasicStateAction<S>>] {\n      currentHookNameInDev = 'useState';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnMountInDEV;\n      try {\n        return mountState(initialState);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useDebugValue<T>(value: T, formatterFn: ?(value: T) => mixed): void {\n      currentHookNameInDev = 'useDebugValue';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountDebugValue(value, formatterFn);\n    },\n    useDeferredValue<T>(value: T): T {\n      currentHookNameInDev = 'useDeferredValue';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountDeferredValue(value);\n    },\n    useTransition(): [(() => void) => void, boolean] {\n      currentHookNameInDev = 'useTransition';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountTransition();\n    },\n    useMutableSource<Source, Snapshot>(\n      source: MutableSource<Source>,\n      getSnapshot: MutableSourceGetSnapshotFn<Source, Snapshot>,\n      subscribe: MutableSourceSubscribeFn<Source, Snapshot>,\n    ): Snapshot {\n      currentHookNameInDev = 'useMutableSource';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountMutableSource(source, getSnapshot, subscribe);\n    },\n    useOpaqueIdentifier(): OpaqueIDType | void {\n      currentHookNameInDev = 'useOpaqueIdentifier';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountOpaqueIdentifier();\n    },\n\n    unstable_isNewReconciler: enableNewReconciler,\n  };\n\n  InvalidNestedHooksDispatcherOnUpdateInDEV = {\n    readContext<T>(\n      context: ReactContext<T>,\n      observedBits: void | number | boolean,\n    ): T {\n      warnInvalidContextAccess();\n      return readContext(context, observedBits);\n    },\n    useCallback<T>(callback: T, deps: Array<mixed> | void | null): T {\n      currentHookNameInDev = 'useCallback';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateCallback(callback, deps);\n    },\n    useContext<T>(\n      context: ReactContext<T>,\n      observedBits: void | number | boolean,\n    ): T {\n      currentHookNameInDev = 'useContext';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return readContext(context, observedBits);\n    },\n    useEffect(\n      create: () => (() => void) | void,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useEffect';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateEffect(create, deps);\n    },\n    useImperativeHandle<T>(\n      ref: {|current: T | null|} | ((inst: T | null) => mixed) | null | void,\n      create: () => T,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useImperativeHandle';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateImperativeHandle(ref, create, deps);\n    },\n    useLayoutEffect(\n      create: () => (() => void) | void,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useLayoutEffect';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateLayoutEffect(create, deps);\n    },\n    useMemo<T>(create: () => T, deps: Array<mixed> | void | null): T {\n      currentHookNameInDev = 'useMemo';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n      try {\n        return updateMemo(create, deps);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useReducer<S, I, A>(\n      reducer: (S, A) => S,\n      initialArg: I,\n      init?: I => S,\n    ): [S, Dispatch<A>] {\n      currentHookNameInDev = 'useReducer';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n      try {\n        return updateReducer(reducer, initialArg, init);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useRef<T>(initialValue: T): {|current: T|} {\n      currentHookNameInDev = 'useRef';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateRef(initialValue);\n    },\n    useState<S>(\n      initialState: (() => S) | S,\n    ): [S, Dispatch<BasicStateAction<S>>] {\n      currentHookNameInDev = 'useState';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n      try {\n        return updateState(initialState);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useDebugValue<T>(value: T, formatterFn: ?(value: T) => mixed): void {\n      currentHookNameInDev = 'useDebugValue';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateDebugValue(value, formatterFn);\n    },\n    useDeferredValue<T>(value: T): T {\n      currentHookNameInDev = 'useDeferredValue';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateDeferredValue(value);\n    },\n    useTransition(): [(() => void) => void, boolean] {\n      currentHookNameInDev = 'useTransition';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateTransition();\n    },\n    useMutableSource<Source, Snapshot>(\n      source: MutableSource<Source>,\n      getSnapshot: MutableSourceGetSnapshotFn<Source, Snapshot>,\n      subscribe: MutableSourceSubscribeFn<Source, Snapshot>,\n    ): Snapshot {\n      currentHookNameInDev = 'useMutableSource';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateMutableSource(source, getSnapshot, subscribe);\n    },\n    useOpaqueIdentifier(): OpaqueIDType | void {\n      currentHookNameInDev = 'useOpaqueIdentifier';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateOpaqueIdentifier();\n    },\n\n    unstable_isNewReconciler: enableNewReconciler,\n  };\n\n  InvalidNestedHooksDispatcherOnRerenderInDEV = {\n    readContext<T>(\n      context: ReactContext<T>,\n      observedBits: void | number | boolean,\n    ): T {\n      warnInvalidContextAccess();\n      return readContext(context, observedBits);\n    },\n\n    useCallback<T>(callback: T, deps: Array<mixed> | void | null): T {\n      currentHookNameInDev = 'useCallback';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateCallback(callback, deps);\n    },\n    useContext<T>(\n      context: ReactContext<T>,\n      observedBits: void | number | boolean,\n    ): T {\n      currentHookNameInDev = 'useContext';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return readContext(context, observedBits);\n    },\n    useEffect(\n      create: () => (() => void) | void,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useEffect';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateEffect(create, deps);\n    },\n    useImperativeHandle<T>(\n      ref: {|current: T | null|} | ((inst: T | null) => mixed) | null | void,\n      create: () => T,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useImperativeHandle';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateImperativeHandle(ref, create, deps);\n    },\n    useLayoutEffect(\n      create: () => (() => void) | void,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useLayoutEffect';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateLayoutEffect(create, deps);\n    },\n    useMemo<T>(create: () => T, deps: Array<mixed> | void | null): T {\n      currentHookNameInDev = 'useMemo';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n      try {\n        return updateMemo(create, deps);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useReducer<S, I, A>(\n      reducer: (S, A) => S,\n      initialArg: I,\n      init?: I => S,\n    ): [S, Dispatch<A>] {\n      currentHookNameInDev = 'useReducer';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n      try {\n        return rerenderReducer(reducer, initialArg, init);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useRef<T>(initialValue: T): {|current: T|} {\n      currentHookNameInDev = 'useRef';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateRef(initialValue);\n    },\n    useState<S>(\n      initialState: (() => S) | S,\n    ): [S, Dispatch<BasicStateAction<S>>] {\n      currentHookNameInDev = 'useState';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n      try {\n        return rerenderState(initialState);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useDebugValue<T>(value: T, formatterFn: ?(value: T) => mixed): void {\n      currentHookNameInDev = 'useDebugValue';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateDebugValue(value, formatterFn);\n    },\n    useDeferredValue<T>(value: T): T {\n      currentHookNameInDev = 'useDeferredValue';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return rerenderDeferredValue(value);\n    },\n    useTransition(): [(() => void) => void, boolean] {\n      currentHookNameInDev = 'useTransition';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return rerenderTransition();\n    },\n    useMutableSource<Source, Snapshot>(\n      source: MutableSource<Source>,\n      getSnapshot: MutableSourceGetSnapshotFn<Source, Snapshot>,\n      subscribe: MutableSourceSubscribeFn<Source, Snapshot>,\n    ): Snapshot {\n      currentHookNameInDev = 'useMutableSource';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateMutableSource(source, getSnapshot, subscribe);\n    },\n    useOpaqueIdentifier(): OpaqueIDType | void {\n      currentHookNameInDev = 'useOpaqueIdentifier';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return rerenderOpaqueIdentifier();\n    },\n\n    unstable_isNewReconciler: enableNewReconciler,\n  };\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactInternalTypes';\n\nimport {\n  enableProfilerTimer,\n  enableProfilerCommitHooks,\n} from 'shared/ReactFeatureFlags';\nimport {Profiler} from './ReactWorkTags';\n\n// Intentionally not named imports because Rollup would use dynamic dispatch for\n// CommonJS interop named imports.\nimport * as Scheduler from 'scheduler';\n\nconst {unstable_now: now} = Scheduler;\n\nexport type ProfilerTimer = {\n  getCommitTime(): number,\n  recordCommitTime(): void,\n  startProfilerTimer(fiber: Fiber): void,\n  stopProfilerTimerIfRunning(fiber: Fiber): void,\n  stopProfilerTimerIfRunningAndRecordDelta(fiber: Fiber): void,\n  ...\n};\n\nlet commitTime: number = 0;\nlet layoutEffectStartTime: number = -1;\nlet profilerStartTime: number = -1;\nlet passiveEffectStartTime: number = -1;\n\nfunction getCommitTime(): number {\n  return commitTime;\n}\n\nfunction recordCommitTime(): void {\n  if (!enableProfilerTimer) {\n    return;\n  }\n  commitTime = now();\n}\n\nfunction startProfilerTimer(fiber: Fiber): void {\n  if (!enableProfilerTimer) {\n    return;\n  }\n\n  profilerStartTime = now();\n\n  if (((fiber.actualStartTime: any): number) < 0) {\n    fiber.actualStartTime = now();\n  }\n}\n\nfunction stopProfilerTimerIfRunning(fiber: Fiber): void {\n  if (!enableProfilerTimer) {\n    return;\n  }\n  profilerStartTime = -1;\n}\n\nfunction stopProfilerTimerIfRunningAndRecordDelta(\n  fiber: Fiber,\n  overrideBaseTime: boolean,\n): void {\n  if (!enableProfilerTimer) {\n    return;\n  }\n\n  if (profilerStartTime >= 0) {\n    const elapsedTime = now() - profilerStartTime;\n    fiber.actualDuration += elapsedTime;\n    if (overrideBaseTime) {\n      fiber.selfBaseDuration = elapsedTime;\n    }\n    profilerStartTime = -1;\n  }\n}\n\nfunction recordLayoutEffectDuration(fiber: Fiber): void {\n  if (!enableProfilerTimer || !enableProfilerCommitHooks) {\n    return;\n  }\n\n  if (layoutEffectStartTime >= 0) {\n    const elapsedTime = now() - layoutEffectStartTime;\n\n    layoutEffectStartTime = -1;\n\n    // Store duration on the next nearest Profiler ancestor.\n    let parentFiber = fiber.return;\n    while (parentFiber !== null) {\n      if (parentFiber.tag === Profiler) {\n        const parentStateNode = parentFiber.stateNode;\n        parentStateNode.effectDuration += elapsedTime;\n        break;\n      }\n      parentFiber = parentFiber.return;\n    }\n  }\n}\n\nfunction recordPassiveEffectDuration(fiber: Fiber): void {\n  if (!enableProfilerTimer || !enableProfilerCommitHooks) {\n    return;\n  }\n\n  if (passiveEffectStartTime >= 0) {\n    const elapsedTime = now() - passiveEffectStartTime;\n\n    passiveEffectStartTime = -1;\n\n    // Store duration on the next nearest Profiler ancestor.\n    let parentFiber = fiber.return;\n    while (parentFiber !== null) {\n      if (parentFiber.tag === Profiler) {\n        const parentStateNode = parentFiber.stateNode;\n        if (parentStateNode !== null) {\n          // Detached fibers have their state node cleared out.\n          // In this case, the return pointer is also cleared out,\n          // so we won't be able to report the time spent in this Profiler's subtree.\n          parentStateNode.passiveEffectDuration += elapsedTime;\n        }\n        break;\n      }\n      parentFiber = parentFiber.return;\n    }\n  }\n}\n\nfunction startLayoutEffectTimer(): void {\n  if (!enableProfilerTimer || !enableProfilerCommitHooks) {\n    return;\n  }\n  layoutEffectStartTime = now();\n}\n\nfunction startPassiveEffectTimer(): void {\n  if (!enableProfilerTimer || !enableProfilerCommitHooks) {\n    return;\n  }\n  passiveEffectStartTime = now();\n}\n\nfunction transferActualDuration(fiber: Fiber): void {\n  // Transfer time spent rendering these children so we don't lose it\n  // after we rerender. This is used as a helper in special cases\n  // where we should count the work of multiple passes.\n  let child = fiber.child;\n  while (child) {\n    fiber.actualDuration += child.actualDuration;\n    child = child.sibling;\n  }\n}\n\nexport {\n  getCommitTime,\n  recordCommitTime,\n  recordLayoutEffectDuration,\n  recordPassiveEffectDuration,\n  startLayoutEffectTimer,\n  startPassiveEffectTimer,\n  startProfilerTimer,\n  stopProfilerTimerIfRunning,\n  stopProfilerTimerIfRunningAndRecordDelta,\n  transferActualDuration,\n};\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {ReactProviderType, ReactContext} from 'shared/ReactTypes';\nimport type {BlockComponent} from 'react/src/ReactBlock';\nimport type {LazyComponent as LazyComponentType} from 'react/src/ReactLazy';\nimport type {Fiber} from './ReactInternalTypes';\nimport type {FiberRoot} from './ReactInternalTypes';\nimport type {Lanes, Lane} from './ReactFiberLane';\nimport type {MutableSource} from 'shared/ReactTypes';\nimport type {\n  SuspenseState,\n  SuspenseListRenderState,\n  SuspenseListTailMode,\n} from './ReactFiberSuspenseComponent.old';\nimport type {SuspenseContext} from './ReactFiberSuspenseContext.old';\nimport type {\n  OffscreenProps,\n  OffscreenState,\n} from './ReactFiberOffscreenComponent';\n\nimport checkPropTypes from 'shared/checkPropTypes';\n\nimport {\n  IndeterminateComponent,\n  FunctionComponent,\n  ClassComponent,\n  HostRoot,\n  HostComponent,\n  HostText,\n  HostPortal,\n  ForwardRef,\n  Fragment,\n  Mode,\n  ContextProvider,\n  ContextConsumer,\n  Profiler,\n  SuspenseComponent,\n  SuspenseListComponent,\n  MemoComponent,\n  SimpleMemoComponent,\n  LazyComponent,\n  IncompleteClassComponent,\n  FundamentalComponent,\n  ScopeComponent,\n  Block,\n  OffscreenComponent,\n  LegacyHiddenComponent,\n} from './ReactWorkTags';\nimport {\n  NoFlags,\n  PerformedWork,\n  Placement,\n  Hydrating,\n  ContentReset,\n  DidCapture,\n  Update,\n  Ref,\n  Deletion,\n  ForceUpdateForLegacySuspense,\n} from './ReactFiberFlags';\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\nimport {\n  debugRenderPhaseSideEffectsForStrictMode,\n  disableLegacyContext,\n  disableModulePatternComponents,\n  enableProfilerTimer,\n  enableSchedulerTracing,\n  enableSuspenseServerRenderer,\n  enableFundamentalAPI,\n  warnAboutDefaultPropsOnFunctionComponents,\n  enableScopeAPI,\n  enableBlocksAPI,\n} from 'shared/ReactFeatureFlags';\nimport invariant from 'shared/invariant';\nimport shallowEqual from 'shared/shallowEqual';\nimport getComponentName from 'shared/getComponentName';\nimport ReactStrictModeWarnings from './ReactStrictModeWarnings.old';\nimport {REACT_LAZY_TYPE, getIteratorFn} from 'shared/ReactSymbols';\nimport {\n  getCurrentFiberOwnerNameInDevOrNull,\n  setIsRendering,\n} from './ReactCurrentFiber';\nimport {\n  resolveFunctionForHotReloading,\n  resolveForwardRefForHotReloading,\n  resolveClassForHotReloading,\n} from './ReactFiberHotReloading.old';\n\nimport {\n  mountChildFibers,\n  reconcileChildFibers,\n  cloneChildFibers,\n} from './ReactChildFiber.old';\nimport {\n  processUpdateQueue,\n  cloneUpdateQueue,\n  initializeUpdateQueue,\n} from './ReactUpdateQueue.old';\nimport {\n  NoLane,\n  NoLanes,\n  SyncLane,\n  OffscreenLane,\n  DefaultHydrationLane,\n  SomeRetryLane,\n  NoTimestamp,\n  includesSomeLane,\n  laneToLanes,\n  removeLanes,\n  mergeLanes,\n  getBumpedLaneForHydration,\n} from './ReactFiberLane';\nimport {\n  ConcurrentMode,\n  NoMode,\n  ProfileMode,\n  StrictMode,\n  BlockingMode,\n} from './ReactTypeOfMode';\nimport {\n  shouldSetTextContent,\n  isSuspenseInstancePending,\n  isSuspenseInstanceFallback,\n  registerSuspenseInstanceRetry,\n  supportsHydration,\n} from './ReactFiberHostConfig';\nimport type {SuspenseInstance} from './ReactFiberHostConfig';\nimport {shouldSuspend} from './ReactFiberReconciler';\nimport {pushHostContext, pushHostContainer} from './ReactFiberHostContext.old';\nimport {\n  suspenseStackCursor,\n  pushSuspenseContext,\n  InvisibleParentSuspenseContext,\n  ForceSuspenseFallback,\n  hasSuspenseContext,\n  setDefaultShallowSuspenseContext,\n  addSubtreeSuspenseContext,\n  setShallowSuspenseContext,\n} from './ReactFiberSuspenseContext.old';\nimport {findFirstSuspended} from './ReactFiberSuspenseComponent.old';\nimport {\n  pushProvider,\n  propagateContextChange,\n  readContext,\n  prepareToReadContext,\n  calculateChangedBits,\n  scheduleWorkOnParentPath,\n} from './ReactFiberNewContext.old';\nimport {renderWithHooks, bailoutHooks} from './ReactFiberHooks.old';\nimport {stopProfilerTimerIfRunning} from './ReactProfilerTimer.old';\nimport {\n  getMaskedContext,\n  getUnmaskedContext,\n  hasContextChanged as hasLegacyContextChanged,\n  pushContextProvider as pushLegacyContextProvider,\n  isContextProvider as isLegacyContextProvider,\n  pushTopLevelContextObject,\n  invalidateContextProvider,\n} from './ReactFiberContext.old';\nimport {\n  enterHydrationState,\n  reenterHydrationStateFromDehydratedSuspenseInstance,\n  resetHydrationState,\n  tryToClaimNextHydratableInstance,\n  warnIfHydrating,\n} from './ReactFiberHydrationContext.old';\nimport {\n  adoptClassInstance,\n  applyDerivedStateFromProps,\n  constructClassInstance,\n  mountClassInstance,\n  resumeMountClassInstance,\n  updateClassInstance,\n} from './ReactFiberClassComponent.old';\nimport {resolveDefaultProps} from './ReactFiberLazyComponent.old';\nimport {\n  resolveLazyComponentTag,\n  createFiberFromTypeAndProps,\n  createFiberFromFragment,\n  createFiberFromOffscreen,\n  createWorkInProgress,\n  isSimpleFunctionComponent,\n} from './ReactFiber.old';\nimport {\n  markSpawnedWork,\n  retryDehydratedSuspenseBoundary,\n  scheduleUpdateOnFiber,\n  renderDidSuspendDelayIfPossible,\n  markSkippedUpdateLanes,\n  getWorkInProgressRoot,\n  pushRenderLanes,\n  getExecutionContext,\n  RetryAfterError,\n  NoContext,\n} from './ReactFiberWorkLoop.old';\nimport {unstable_wrap as Schedule_tracing_wrap} from 'scheduler/tracing';\nimport {setWorkInProgressVersion} from './ReactMutableSource.old';\n\nimport {disableLogs, reenableLogs} from 'shared/ConsolePatchingDev';\n\nconst ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\n\nlet didReceiveUpdate: boolean = false;\n\nlet didWarnAboutBadClass;\nlet didWarnAboutModulePatternComponent;\nlet didWarnAboutContextTypeOnFunctionComponent;\nlet didWarnAboutGetDerivedStateOnFunctionComponent;\nlet didWarnAboutFunctionRefs;\nexport let didWarnAboutReassigningProps;\nlet didWarnAboutRevealOrder;\nlet didWarnAboutTailOptions;\nlet didWarnAboutDefaultPropsOnFunctionComponent;\n\nif (__DEV__) {\n  didWarnAboutBadClass = {};\n  didWarnAboutModulePatternComponent = {};\n  didWarnAboutContextTypeOnFunctionComponent = {};\n  didWarnAboutGetDerivedStateOnFunctionComponent = {};\n  didWarnAboutFunctionRefs = {};\n  didWarnAboutReassigningProps = false;\n  didWarnAboutRevealOrder = {};\n  didWarnAboutTailOptions = {};\n  didWarnAboutDefaultPropsOnFunctionComponent = {};\n}\n\nexport function reconcileChildren(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  nextChildren: any,\n  renderLanes: Lanes,\n) {\n  if (current === null) {\n    // If this is a fresh new component that hasn't been rendered yet, we\n    // won't update its child set by applying minimal side-effects. Instead,\n    // we will add them all to the child before it gets rendered. That means\n    // we can optimize this reconciliation pass by not tracking side-effects.\n    workInProgress.child = mountChildFibers(\n      workInProgress,\n      null,\n      nextChildren,\n      renderLanes,\n    );\n  } else {\n    // If the current child is the same as the work in progress, it means that\n    // we haven't yet started any work on these children. Therefore, we use\n    // the clone algorithm to create a copy of all the current children.\n\n    // If we had any progressed work already, that is invalid at this point so\n    // let's throw it out.\n    workInProgress.child = reconcileChildFibers(\n      workInProgress,\n      current.child,\n      nextChildren,\n      renderLanes,\n    );\n  }\n}\n\nfunction forceUnmountCurrentAndReconcile(\n  current: Fiber,\n  workInProgress: Fiber,\n  nextChildren: any,\n  renderLanes: Lanes,\n) {\n  // This function is fork of reconcileChildren. It's used in cases where we\n  // want to reconcile without matching against the existing set. This has the\n  // effect of all current children being unmounted; even if the type and key\n  // are the same, the old child is unmounted and a new child is created.\n  //\n  // To do this, we're going to go through the reconcile algorithm twice. In\n  // the first pass, we schedule a deletion for all the current children by\n  // passing null.\n  workInProgress.child = reconcileChildFibers(\n    workInProgress,\n    current.child,\n    null,\n    renderLanes,\n  );\n  // In the second pass, we mount the new children. The trick here is that we\n  // pass null in place of where we usually pass the current child set. This has\n  // the effect of remounting all children regardless of whether their\n  // identities match.\n  workInProgress.child = reconcileChildFibers(\n    workInProgress,\n    null,\n    nextChildren,\n    renderLanes,\n  );\n}\n\nfunction updateForwardRef(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  Component: any,\n  nextProps: any,\n  renderLanes: Lanes,\n) {\n  // TODO: current can be non-null here even if the component\n  // hasn't yet mounted. This happens after the first render suspends.\n  // We'll need to figure out if this is fine or can cause issues.\n\n  if (__DEV__) {\n    if (workInProgress.type !== workInProgress.elementType) {\n      // Lazy component props can't be validated in createElement\n      // because they're only guaranteed to be resolved here.\n      const innerPropTypes = Component.propTypes;\n      if (innerPropTypes) {\n        checkPropTypes(\n          innerPropTypes,\n          nextProps, // Resolved props\n          'prop',\n          getComponentName(Component),\n        );\n      }\n    }\n  }\n\n  const render = Component.render;\n  const ref = workInProgress.ref;\n\n  // The rest is a fork of updateFunctionComponent\n  let nextChildren;\n  prepareToReadContext(workInProgress, renderLanes);\n  if (__DEV__) {\n    ReactCurrentOwner.current = workInProgress;\n    setIsRendering(true);\n    nextChildren = renderWithHooks(\n      current,\n      workInProgress,\n      render,\n      nextProps,\n      ref,\n      renderLanes,\n    );\n    if (\n      debugRenderPhaseSideEffectsForStrictMode &&\n      workInProgress.mode & StrictMode\n    ) {\n      disableLogs();\n      try {\n        nextChildren = renderWithHooks(\n          current,\n          workInProgress,\n          render,\n          nextProps,\n          ref,\n          renderLanes,\n        );\n      } finally {\n        reenableLogs();\n      }\n    }\n    setIsRendering(false);\n  } else {\n    nextChildren = renderWithHooks(\n      current,\n      workInProgress,\n      render,\n      nextProps,\n      ref,\n      renderLanes,\n    );\n  }\n\n  if (current !== null && !didReceiveUpdate) {\n    bailoutHooks(current, workInProgress, renderLanes);\n    return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n  }\n\n  // React DevTools reads this flag.\n  workInProgress.flags |= PerformedWork;\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  return workInProgress.child;\n}\n\nfunction updateMemoComponent(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  Component: any,\n  nextProps: any,\n  updateLanes: Lanes,\n  renderLanes: Lanes,\n): null | Fiber {\n  if (current === null) {\n    const type = Component.type;\n    if (\n      isSimpleFunctionComponent(type) &&\n      Component.compare === null &&\n      // SimpleMemoComponent codepath doesn't resolve outer props either.\n      Component.defaultProps === undefined\n    ) {\n      let resolvedType = type;\n      if (__DEV__) {\n        resolvedType = resolveFunctionForHotReloading(type);\n      }\n      // If this is a plain function component without default props,\n      // and with only the default shallow comparison, we upgrade it\n      // to a SimpleMemoComponent to allow fast path updates.\n      workInProgress.tag = SimpleMemoComponent;\n      workInProgress.type = resolvedType;\n      if (__DEV__) {\n        validateFunctionComponentInDev(workInProgress, type);\n      }\n      return updateSimpleMemoComponent(\n        current,\n        workInProgress,\n        resolvedType,\n        nextProps,\n        updateLanes,\n        renderLanes,\n      );\n    }\n    if (__DEV__) {\n      const innerPropTypes = type.propTypes;\n      if (innerPropTypes) {\n        // Inner memo component props aren't currently validated in createElement.\n        // We could move it there, but we'd still need this for lazy code path.\n        checkPropTypes(\n          innerPropTypes,\n          nextProps, // Resolved props\n          'prop',\n          getComponentName(type),\n        );\n      }\n    }\n    const child = createFiberFromTypeAndProps(\n      Component.type,\n      null,\n      nextProps,\n      workInProgress,\n      workInProgress.mode,\n      renderLanes,\n    );\n    child.ref = workInProgress.ref;\n    child.return = workInProgress;\n    workInProgress.child = child;\n    return child;\n  }\n  if (__DEV__) {\n    const type = Component.type;\n    const innerPropTypes = type.propTypes;\n    if (innerPropTypes) {\n      // Inner memo component props aren't currently validated in createElement.\n      // We could move it there, but we'd still need this for lazy code path.\n      checkPropTypes(\n        innerPropTypes,\n        nextProps, // Resolved props\n        'prop',\n        getComponentName(type),\n      );\n    }\n  }\n  const currentChild = ((current.child: any): Fiber); // This is always exactly one child\n  if (!includesSomeLane(updateLanes, renderLanes)) {\n    // This will be the props with resolved defaultProps,\n    // unlike current.memoizedProps which will be the unresolved ones.\n    const prevProps = currentChild.memoizedProps;\n    // Default to shallow comparison\n    let compare = Component.compare;\n    compare = compare !== null ? compare : shallowEqual;\n    if (compare(prevProps, nextProps) && current.ref === workInProgress.ref) {\n      return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n    }\n  }\n  // React DevTools reads this flag.\n  workInProgress.flags |= PerformedWork;\n  const newChild = createWorkInProgress(currentChild, nextProps);\n  newChild.ref = workInProgress.ref;\n  newChild.return = workInProgress;\n  workInProgress.child = newChild;\n  return newChild;\n}\n\nfunction updateSimpleMemoComponent(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  Component: any,\n  nextProps: any,\n  updateLanes: Lanes,\n  renderLanes: Lanes,\n): null | Fiber {\n  // TODO: current can be non-null here even if the component\n  // hasn't yet mounted. This happens when the inner render suspends.\n  // We'll need to figure out if this is fine or can cause issues.\n\n  if (__DEV__) {\n    if (workInProgress.type !== workInProgress.elementType) {\n      // Lazy component props can't be validated in createElement\n      // because they're only guaranteed to be resolved here.\n      let outerMemoType = workInProgress.elementType;\n      if (outerMemoType.$$typeof === REACT_LAZY_TYPE) {\n        // We warn when you define propTypes on lazy()\n        // so let's just skip over it to find memo() outer wrapper.\n        // Inner props for memo are validated later.\n        const lazyComponent: LazyComponentType<any, any> = outerMemoType;\n        const payload = lazyComponent._payload;\n        const init = lazyComponent._init;\n        try {\n          outerMemoType = init(payload);\n        } catch (x) {\n          outerMemoType = null;\n        }\n        // Inner propTypes will be validated in the function component path.\n        const outerPropTypes = outerMemoType && (outerMemoType: any).propTypes;\n        if (outerPropTypes) {\n          checkPropTypes(\n            outerPropTypes,\n            nextProps, // Resolved (SimpleMemoComponent has no defaultProps)\n            'prop',\n            getComponentName(outerMemoType),\n          );\n        }\n      }\n    }\n  }\n  if (current !== null) {\n    const prevProps = current.memoizedProps;\n    if (\n      shallowEqual(prevProps, nextProps) &&\n      current.ref === workInProgress.ref &&\n      // Prevent bailout if the implementation changed due to hot reload.\n      (__DEV__ ? workInProgress.type === current.type : true)\n    ) {\n      didReceiveUpdate = false;\n      if (!includesSomeLane(renderLanes, updateLanes)) {\n        // The pending lanes were cleared at the beginning of beginWork. We're\n        // about to bail out, but there might be other lanes that weren't\n        // included in the current render. Usually, the priority level of the\n        // remaining updates is accumlated during the evaluation of the\n        // component (i.e. when processing the update queue). But since since\n        // we're bailing out early *without* evaluating the component, we need\n        // to account for it here, too. Reset to the value of the current fiber.\n        // NOTE: This only applies to SimpleMemoComponent, not MemoComponent,\n        // because a MemoComponent fiber does not have hooks or an update queue;\n        // rather, it wraps around an inner component, which may or may not\n        // contains hooks.\n        // TODO: Move the reset at in beginWork out of the common path so that\n        // this is no longer necessary.\n        workInProgress.lanes = current.lanes;\n        return bailoutOnAlreadyFinishedWork(\n          current,\n          workInProgress,\n          renderLanes,\n        );\n      } else if ((current.flags & ForceUpdateForLegacySuspense) !== NoFlags) {\n        // This is a special case that only exists for legacy mode.\n        // See https://github.com/facebook/react/pull/19216.\n        didReceiveUpdate = true;\n      }\n    }\n  }\n  return updateFunctionComponent(\n    current,\n    workInProgress,\n    Component,\n    nextProps,\n    renderLanes,\n  );\n}\n\nfunction updateOffscreenComponent(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  renderLanes: Lanes,\n) {\n  const nextProps: OffscreenProps = workInProgress.pendingProps;\n  const nextChildren = nextProps.children;\n\n  const prevState: OffscreenState | null =\n    current !== null ? current.memoizedState : null;\n\n  if (\n    nextProps.mode === 'hidden' ||\n    nextProps.mode === 'unstable-defer-without-hiding'\n  ) {\n    if ((workInProgress.mode & ConcurrentMode) === NoMode) {\n      // In legacy sync mode, don't defer the subtree. Render it now.\n      // TODO: Figure out what we should do in Blocking mode.\n      const nextState: OffscreenState = {\n        baseLanes: NoLanes,\n      };\n      workInProgress.memoizedState = nextState;\n      pushRenderLanes(workInProgress, renderLanes);\n    } else if (!includesSomeLane(renderLanes, (OffscreenLane: Lane))) {\n      let nextBaseLanes;\n      if (prevState !== null) {\n        const prevBaseLanes = prevState.baseLanes;\n        nextBaseLanes = mergeLanes(prevBaseLanes, renderLanes);\n      } else {\n        nextBaseLanes = renderLanes;\n      }\n\n      // Schedule this fiber to re-render at offscreen priority. Then bailout.\n      if (enableSchedulerTracing) {\n        markSpawnedWork((OffscreenLane: Lane));\n      }\n      workInProgress.lanes = workInProgress.childLanes = laneToLanes(\n        OffscreenLane,\n      );\n      const nextState: OffscreenState = {\n        baseLanes: nextBaseLanes,\n      };\n      workInProgress.memoizedState = nextState;\n      // We're about to bail out, but we need to push this to the stack anyway\n      // to avoid a push/pop misalignment.\n      pushRenderLanes(workInProgress, nextBaseLanes);\n      return null;\n    } else {\n      // Rendering at offscreen, so we can clear the base lanes.\n      const nextState: OffscreenState = {\n        baseLanes: NoLanes,\n      };\n      workInProgress.memoizedState = nextState;\n      // Push the lanes that were skipped when we bailed out.\n      const subtreeRenderLanes =\n        prevState !== null ? prevState.baseLanes : renderLanes;\n      pushRenderLanes(workInProgress, subtreeRenderLanes);\n    }\n  } else {\n    let subtreeRenderLanes;\n    if (prevState !== null) {\n      subtreeRenderLanes = mergeLanes(prevState.baseLanes, renderLanes);\n      // Since we're not hidden anymore, reset the state\n      workInProgress.memoizedState = null;\n    } else {\n      // We weren't previously hidden, and we still aren't, so there's nothing\n      // special to do. Need to push to the stack regardless, though, to avoid\n      // a push/pop misalignment.\n      subtreeRenderLanes = renderLanes;\n    }\n    pushRenderLanes(workInProgress, subtreeRenderLanes);\n  }\n\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  return workInProgress.child;\n}\n\n// Note: These happen to have identical begin phases, for now. We shouldn't hold\n// ourselves to this constraint, though. If the behavior diverges, we should\n// fork the function.\nconst updateLegacyHiddenComponent = updateOffscreenComponent;\n\nfunction updateFragment(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  renderLanes: Lanes,\n) {\n  const nextChildren = workInProgress.pendingProps;\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  return workInProgress.child;\n}\n\nfunction updateMode(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  renderLanes: Lanes,\n) {\n  const nextChildren = workInProgress.pendingProps.children;\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  return workInProgress.child;\n}\n\nfunction updateProfiler(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  renderLanes: Lanes,\n) {\n  if (enableProfilerTimer) {\n    workInProgress.flags |= Update;\n\n    // Reset effect durations for the next eventual effect phase.\n    // These are reset during render to allow the DevTools commit hook a chance to read them,\n    const stateNode = workInProgress.stateNode;\n    stateNode.effectDuration = 0;\n    stateNode.passiveEffectDuration = 0;\n  }\n  const nextProps = workInProgress.pendingProps;\n  const nextChildren = nextProps.children;\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  return workInProgress.child;\n}\n\nfunction markRef(current: Fiber | null, workInProgress: Fiber) {\n  const ref = workInProgress.ref;\n  if (\n    (current === null && ref !== null) ||\n    (current !== null && current.ref !== ref)\n  ) {\n    // Schedule a Ref effect\n    workInProgress.flags |= Ref;\n  }\n}\n\nfunction updateFunctionComponent(\n  current,\n  workInProgress,\n  Component,\n  nextProps: any,\n  renderLanes,\n) {\n  if (__DEV__) {\n    if (workInProgress.type !== workInProgress.elementType) {\n      // Lazy component props can't be validated in createElement\n      // because they're only guaranteed to be resolved here.\n      const innerPropTypes = Component.propTypes;\n      if (innerPropTypes) {\n        checkPropTypes(\n          innerPropTypes,\n          nextProps, // Resolved props\n          'prop',\n          getComponentName(Component),\n        );\n      }\n    }\n  }\n\n  let context;\n  if (!disableLegacyContext) {\n    const unmaskedContext = getUnmaskedContext(workInProgress, Component, true);\n    context = getMaskedContext(workInProgress, unmaskedContext);\n  }\n\n  let nextChildren;\n  prepareToReadContext(workInProgress, renderLanes);\n  if (__DEV__) {\n    ReactCurrentOwner.current = workInProgress;\n    setIsRendering(true);\n    nextChildren = renderWithHooks(\n      current,\n      workInProgress,\n      Component,\n      nextProps,\n      context,\n      renderLanes,\n    );\n    if (\n      debugRenderPhaseSideEffectsForStrictMode &&\n      workInProgress.mode & StrictMode\n    ) {\n      disableLogs();\n      try {\n        nextChildren = renderWithHooks(\n          current,\n          workInProgress,\n          Component,\n          nextProps,\n          context,\n          renderLanes,\n        );\n      } finally {\n        reenableLogs();\n      }\n    }\n    setIsRendering(false);\n  } else {\n    nextChildren = renderWithHooks(\n      current,\n      workInProgress,\n      Component,\n      nextProps,\n      context,\n      renderLanes,\n    );\n  }\n\n  if (current !== null && !didReceiveUpdate) {\n    bailoutHooks(current, workInProgress, renderLanes);\n    return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n  }\n\n  // React DevTools reads this flag.\n  workInProgress.flags |= PerformedWork;\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  return workInProgress.child;\n}\n\nfunction updateBlock<Props, Data>(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  block: BlockComponent<Props, Data>,\n  nextProps: any,\n  renderLanes: Lanes,\n) {\n  // TODO: current can be non-null here even if the component\n  // hasn't yet mounted. This happens after the first render suspends.\n  // We'll need to figure out if this is fine or can cause issues.\n\n  const render = block._render;\n  const data = block._data;\n\n  // The rest is a fork of updateFunctionComponent\n  let nextChildren;\n  prepareToReadContext(workInProgress, renderLanes);\n  if (__DEV__) {\n    ReactCurrentOwner.current = workInProgress;\n    setIsRendering(true);\n    nextChildren = renderWithHooks(\n      current,\n      workInProgress,\n      render,\n      nextProps,\n      data,\n      renderLanes,\n    );\n    if (\n      debugRenderPhaseSideEffectsForStrictMode &&\n      workInProgress.mode & StrictMode\n    ) {\n      disableLogs();\n      try {\n        nextChildren = renderWithHooks(\n          current,\n          workInProgress,\n          render,\n          nextProps,\n          data,\n          renderLanes,\n        );\n      } finally {\n        reenableLogs();\n      }\n    }\n    setIsRendering(false);\n  } else {\n    nextChildren = renderWithHooks(\n      current,\n      workInProgress,\n      render,\n      nextProps,\n      data,\n      renderLanes,\n    );\n  }\n\n  if (current !== null && !didReceiveUpdate) {\n    bailoutHooks(current, workInProgress, renderLanes);\n    return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n  }\n\n  // React DevTools reads this flag.\n  workInProgress.flags |= PerformedWork;\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  return workInProgress.child;\n}\n\nfunction updateClassComponent(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  Component: any,\n  nextProps: any,\n  renderLanes: Lanes,\n) {\n  if (__DEV__) {\n    if (workInProgress.type !== workInProgress.elementType) {\n      // Lazy component props can't be validated in createElement\n      // because they're only guaranteed to be resolved here.\n      const innerPropTypes = Component.propTypes;\n      if (innerPropTypes) {\n        checkPropTypes(\n          innerPropTypes,\n          nextProps, // Resolved props\n          'prop',\n          getComponentName(Component),\n        );\n      }\n    }\n  }\n\n  // Push context providers early to prevent context stack mismatches.\n  // During mounting we don't know the child context yet as the instance doesn't exist.\n  // We will invalidate the child context in finishClassComponent() right after rendering.\n  let hasContext;\n  if (isLegacyContextProvider(Component)) {\n    hasContext = true;\n    pushLegacyContextProvider(workInProgress);\n  } else {\n    hasContext = false;\n  }\n  prepareToReadContext(workInProgress, renderLanes);\n\n  const instance = workInProgress.stateNode;\n  let shouldUpdate;\n  if (instance === null) {\n    if (current !== null) {\n      // A class component without an instance only mounts if it suspended\n      // inside a non-concurrent tree, in an inconsistent state. We want to\n      // treat it like a new mount, even though an empty version of it already\n      // committed. Disconnect the alternate pointers.\n      current.alternate = null;\n      workInProgress.alternate = null;\n      // Since this is conceptually a new fiber, schedule a Placement effect\n      workInProgress.flags |= Placement;\n    }\n    // In the initial pass we might need to construct the instance.\n    constructClassInstance(workInProgress, Component, nextProps);\n    mountClassInstance(workInProgress, Component, nextProps, renderLanes);\n    shouldUpdate = true;\n  } else if (current === null) {\n    // In a resume, we'll already have an instance we can reuse.\n    shouldUpdate = resumeMountClassInstance(\n      workInProgress,\n      Component,\n      nextProps,\n      renderLanes,\n    );\n  } else {\n    shouldUpdate = updateClassInstance(\n      current,\n      workInProgress,\n      Component,\n      nextProps,\n      renderLanes,\n    );\n  }\n  const nextUnitOfWork = finishClassComponent(\n    current,\n    workInProgress,\n    Component,\n    shouldUpdate,\n    hasContext,\n    renderLanes,\n  );\n  if (__DEV__) {\n    const inst = workInProgress.stateNode;\n    if (shouldUpdate && inst.props !== nextProps) {\n      if (!didWarnAboutReassigningProps) {\n        console.error(\n          'It looks like %s is reassigning its own `this.props` while rendering. ' +\n            'This is not supported and can lead to confusing bugs.',\n          getComponentName(workInProgress.type) || 'a component',\n        );\n      }\n      didWarnAboutReassigningProps = true;\n    }\n  }\n  return nextUnitOfWork;\n}\n\nfunction finishClassComponent(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  Component: any,\n  shouldUpdate: boolean,\n  hasContext: boolean,\n  renderLanes: Lanes,\n) {\n  // Refs should update even if shouldComponentUpdate returns false\n  markRef(current, workInProgress);\n\n  const didCaptureError = (workInProgress.flags & DidCapture) !== NoFlags;\n\n  if (!shouldUpdate && !didCaptureError) {\n    // Context providers should defer to sCU for rendering\n    if (hasContext) {\n      invalidateContextProvider(workInProgress, Component, false);\n    }\n\n    return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n  }\n\n  const instance = workInProgress.stateNode;\n\n  // Rerender\n  ReactCurrentOwner.current = workInProgress;\n  let nextChildren;\n  if (\n    didCaptureError &&\n    typeof Component.getDerivedStateFromError !== 'function'\n  ) {\n    // If we captured an error, but getDerivedStateFromError is not defined,\n    // unmount all the children. componentDidCatch will schedule an update to\n    // re-render a fallback. This is temporary until we migrate everyone to\n    // the new API.\n    // TODO: Warn in a future release.\n    nextChildren = null;\n\n    if (enableProfilerTimer) {\n      stopProfilerTimerIfRunning(workInProgress);\n    }\n  } else {\n    if (__DEV__) {\n      setIsRendering(true);\n      nextChildren = instance.render();\n      if (\n        debugRenderPhaseSideEffectsForStrictMode &&\n        workInProgress.mode & StrictMode\n      ) {\n        disableLogs();\n        try {\n          instance.render();\n        } finally {\n          reenableLogs();\n        }\n      }\n      setIsRendering(false);\n    } else {\n      nextChildren = instance.render();\n    }\n  }\n\n  // React DevTools reads this flag.\n  workInProgress.flags |= PerformedWork;\n  if (current !== null && didCaptureError) {\n    // If we're recovering from an error, reconcile without reusing any of\n    // the existing children. Conceptually, the normal children and the children\n    // that are shown on error are two different sets, so we shouldn't reuse\n    // normal children even if their identities match.\n    forceUnmountCurrentAndReconcile(\n      current,\n      workInProgress,\n      nextChildren,\n      renderLanes,\n    );\n  } else {\n    reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  }\n\n  // Memoize state using the values we just used to render.\n  // TODO: Restructure so we never read values from the instance.\n  workInProgress.memoizedState = instance.state;\n\n  // The context might have changed so we need to recalculate it.\n  if (hasContext) {\n    invalidateContextProvider(workInProgress, Component, true);\n  }\n\n  return workInProgress.child;\n}\n\nfunction pushHostRootContext(workInProgress) {\n  const root = (workInProgress.stateNode: FiberRoot);\n  if (root.pendingContext) {\n    pushTopLevelContextObject(\n      workInProgress,\n      root.pendingContext,\n      root.pendingContext !== root.context,\n    );\n  } else if (root.context) {\n    // Should always be set\n    pushTopLevelContextObject(workInProgress, root.context, false);\n  }\n  pushHostContainer(workInProgress, root.containerInfo);\n}\n\nfunction updateHostRoot(current, workInProgress, renderLanes) {\n  pushHostRootContext(workInProgress);\n  const updateQueue = workInProgress.updateQueue;\n  invariant(\n    current !== null && updateQueue !== null,\n    'If the root does not have an updateQueue, we should have already ' +\n      'bailed out. This error is likely caused by a bug in React. Please ' +\n      'file an issue.',\n  );\n  const nextProps = workInProgress.pendingProps;\n  const prevState = workInProgress.memoizedState;\n  const prevChildren = prevState !== null ? prevState.element : null;\n  cloneUpdateQueue(current, workInProgress);\n  processUpdateQueue(workInProgress, nextProps, null, renderLanes);\n  const nextState = workInProgress.memoizedState;\n  // Caution: React DevTools currently depends on this property\n  // being called \"element\".\n  const nextChildren = nextState.element;\n  if (nextChildren === prevChildren) {\n    resetHydrationState();\n    return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n  }\n  const root: FiberRoot = workInProgress.stateNode;\n  if (root.hydrate && enterHydrationState(workInProgress)) {\n    // If we don't have any current children this might be the first pass.\n    // We always try to hydrate. If this isn't a hydration pass there won't\n    // be any children to hydrate which is effectively the same thing as\n    // not hydrating.\n\n    if (supportsHydration) {\n      const mutableSourceEagerHydrationData =\n        root.mutableSourceEagerHydrationData;\n      if (mutableSourceEagerHydrationData != null) {\n        for (let i = 0; i < mutableSourceEagerHydrationData.length; i += 2) {\n          const mutableSource = ((mutableSourceEagerHydrationData[\n            i\n          ]: any): MutableSource<any>);\n          const version = mutableSourceEagerHydrationData[i + 1];\n          setWorkInProgressVersion(mutableSource, version);\n        }\n      }\n    }\n\n    const child = mountChildFibers(\n      workInProgress,\n      null,\n      nextChildren,\n      renderLanes,\n    );\n    workInProgress.child = child;\n\n    let node = child;\n    while (node) {\n      // Mark each child as hydrating. This is a fast path to know whether this\n      // tree is part of a hydrating tree. This is used to determine if a child\n      // node has fully mounted yet, and for scheduling event replaying.\n      // Conceptually this is similar to Placement in that a new subtree is\n      // inserted into the React tree here. It just happens to not need DOM\n      // mutations because it already exists.\n      node.flags = (node.flags & ~Placement) | Hydrating;\n      node = node.sibling;\n    }\n  } else {\n    // Otherwise reset hydration state in case we aborted and resumed another\n    // root.\n    reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n    resetHydrationState();\n  }\n  return workInProgress.child;\n}\n\nfunction updateHostComponent(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  renderLanes: Lanes,\n) {\n  pushHostContext(workInProgress);\n\n  if (current === null) {\n    tryToClaimNextHydratableInstance(workInProgress);\n  }\n\n  const type = workInProgress.type;\n  const nextProps = workInProgress.pendingProps;\n  const prevProps = current !== null ? current.memoizedProps : null;\n\n  let nextChildren = nextProps.children;\n  const isDirectTextChild = shouldSetTextContent(type, nextProps);\n\n  if (isDirectTextChild) {\n    // We special case a direct text child of a host node. This is a common\n    // case. We won't handle it as a reified child. We will instead handle\n    // this in the host environment that also has access to this prop. That\n    // avoids allocating another HostText fiber and traversing it.\n    nextChildren = null;\n  } else if (prevProps !== null && shouldSetTextContent(type, prevProps)) {\n    // If we're switching from a direct text child to a normal child, or to\n    // empty, we need to schedule the text content to be reset.\n    workInProgress.flags |= ContentReset;\n  }\n\n  markRef(current, workInProgress);\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  return workInProgress.child;\n}\n\nfunction updateHostText(current, workInProgress) {\n  if (current === null) {\n    tryToClaimNextHydratableInstance(workInProgress);\n  }\n  // Nothing to do here. This is terminal. We'll do the completion step\n  // immediately after.\n  return null;\n}\n\nfunction mountLazyComponent(\n  _current,\n  workInProgress,\n  elementType,\n  updateLanes,\n  renderLanes,\n) {\n  if (_current !== null) {\n    // A lazy component only mounts if it suspended inside a non-\n    // concurrent tree, in an inconsistent state. We want to treat it like\n    // a new mount, even though an empty version of it already committed.\n    // Disconnect the alternate pointers.\n    _current.alternate = null;\n    workInProgress.alternate = null;\n    // Since this is conceptually a new fiber, schedule a Placement effect\n    workInProgress.flags |= Placement;\n  }\n\n  const props = workInProgress.pendingProps;\n  const lazyComponent: LazyComponentType<any, any> = elementType;\n  const payload = lazyComponent._payload;\n  const init = lazyComponent._init;\n  let Component = init(payload);\n  // Store the unwrapped component in the type.\n  workInProgress.type = Component;\n  const resolvedTag = (workInProgress.tag = resolveLazyComponentTag(Component));\n  const resolvedProps = resolveDefaultProps(Component, props);\n  let child;\n  switch (resolvedTag) {\n    case FunctionComponent: {\n      if (__DEV__) {\n        validateFunctionComponentInDev(workInProgress, Component);\n        workInProgress.type = Component = resolveFunctionForHotReloading(\n          Component,\n        );\n      }\n      child = updateFunctionComponent(\n        null,\n        workInProgress,\n        Component,\n        resolvedProps,\n        renderLanes,\n      );\n      return child;\n    }\n    case ClassComponent: {\n      if (__DEV__) {\n        workInProgress.type = Component = resolveClassForHotReloading(\n          Component,\n        );\n      }\n      child = updateClassComponent(\n        null,\n        workInProgress,\n        Component,\n        resolvedProps,\n        renderLanes,\n      );\n      return child;\n    }\n    case ForwardRef: {\n      if (__DEV__) {\n        workInProgress.type = Component = resolveForwardRefForHotReloading(\n          Component,\n        );\n      }\n      child = updateForwardRef(\n        null,\n        workInProgress,\n        Component,\n        resolvedProps,\n        renderLanes,\n      );\n      return child;\n    }\n    case MemoComponent: {\n      if (__DEV__) {\n        if (workInProgress.type !== workInProgress.elementType) {\n          const outerPropTypes = Component.propTypes;\n          if (outerPropTypes) {\n            checkPropTypes(\n              outerPropTypes,\n              resolvedProps, // Resolved for outer only\n              'prop',\n              getComponentName(Component),\n            );\n          }\n        }\n      }\n      child = updateMemoComponent(\n        null,\n        workInProgress,\n        Component,\n        resolveDefaultProps(Component.type, resolvedProps), // The inner type can have defaults too\n        updateLanes,\n        renderLanes,\n      );\n      return child;\n    }\n    case Block: {\n      if (enableBlocksAPI) {\n        // TODO: Resolve for Hot Reloading.\n        child = updateBlock(\n          null,\n          workInProgress,\n          Component,\n          props,\n          renderLanes,\n        );\n        return child;\n      }\n      break;\n    }\n  }\n  let hint = '';\n  if (__DEV__) {\n    if (\n      Component !== null &&\n      typeof Component === 'object' &&\n      Component.$$typeof === REACT_LAZY_TYPE\n    ) {\n      hint = ' Did you wrap a component in React.lazy() more than once?';\n    }\n  }\n  // This message intentionally doesn't mention ForwardRef or MemoComponent\n  // because the fact that it's a separate type of work is an\n  // implementation detail.\n  invariant(\n    false,\n    'Element type is invalid. Received a promise that resolves to: %s. ' +\n      'Lazy element type must resolve to a class or function.%s',\n    Component,\n    hint,\n  );\n}\n\nfunction mountIncompleteClassComponent(\n  _current,\n  workInProgress,\n  Component,\n  nextProps,\n  renderLanes,\n) {\n  if (_current !== null) {\n    // An incomplete component only mounts if it suspended inside a non-\n    // concurrent tree, in an inconsistent state. We want to treat it like\n    // a new mount, even though an empty version of it already committed.\n    // Disconnect the alternate pointers.\n    _current.alternate = null;\n    workInProgress.alternate = null;\n    // Since this is conceptually a new fiber, schedule a Placement effect\n    workInProgress.flags |= Placement;\n  }\n\n  // Promote the fiber to a class and try rendering again.\n  workInProgress.tag = ClassComponent;\n\n  // The rest of this function is a fork of `updateClassComponent`\n\n  // Push context providers early to prevent context stack mismatches.\n  // During mounting we don't know the child context yet as the instance doesn't exist.\n  // We will invalidate the child context in finishClassComponent() right after rendering.\n  let hasContext;\n  if (isLegacyContextProvider(Component)) {\n    hasContext = true;\n    pushLegacyContextProvider(workInProgress);\n  } else {\n    hasContext = false;\n  }\n  prepareToReadContext(workInProgress, renderLanes);\n\n  constructClassInstance(workInProgress, Component, nextProps);\n  mountClassInstance(workInProgress, Component, nextProps, renderLanes);\n\n  return finishClassComponent(\n    null,\n    workInProgress,\n    Component,\n    true,\n    hasContext,\n    renderLanes,\n  );\n}\n\nfunction mountIndeterminateComponent(\n  _current,\n  workInProgress,\n  Component,\n  renderLanes,\n) {\n  if (_current !== null) {\n    // An indeterminate component only mounts if it suspended inside a non-\n    // concurrent tree, in an inconsistent state. We want to treat it like\n    // a new mount, even though an empty version of it already committed.\n    // Disconnect the alternate pointers.\n    _current.alternate = null;\n    workInProgress.alternate = null;\n    // Since this is conceptually a new fiber, schedule a Placement effect\n    workInProgress.flags |= Placement;\n  }\n\n  const props = workInProgress.pendingProps;\n  let context;\n  if (!disableLegacyContext) {\n    const unmaskedContext = getUnmaskedContext(\n      workInProgress,\n      Component,\n      false,\n    );\n    context = getMaskedContext(workInProgress, unmaskedContext);\n  }\n\n  prepareToReadContext(workInProgress, renderLanes);\n  let value;\n\n  if (__DEV__) {\n    if (\n      Component.prototype &&\n      typeof Component.prototype.render === 'function'\n    ) {\n      const componentName = getComponentName(Component) || 'Unknown';\n\n      if (!didWarnAboutBadClass[componentName]) {\n        console.error(\n          \"The <%s /> component appears to have a render method, but doesn't extend React.Component. \" +\n            'This is likely to cause errors. Change %s to extend React.Component instead.',\n          componentName,\n          componentName,\n        );\n        didWarnAboutBadClass[componentName] = true;\n      }\n    }\n\n    if (workInProgress.mode & StrictMode) {\n      ReactStrictModeWarnings.recordLegacyContextWarning(workInProgress, null);\n    }\n\n    setIsRendering(true);\n    ReactCurrentOwner.current = workInProgress;\n    value = renderWithHooks(\n      null,\n      workInProgress,\n      Component,\n      props,\n      context,\n      renderLanes,\n    );\n    setIsRendering(false);\n  } else {\n    value = renderWithHooks(\n      null,\n      workInProgress,\n      Component,\n      props,\n      context,\n      renderLanes,\n    );\n  }\n  // React DevTools reads this flag.\n  workInProgress.flags |= PerformedWork;\n\n  if (__DEV__) {\n    // Support for module components is deprecated and is removed behind a flag.\n    // Whether or not it would crash later, we want to show a good message in DEV first.\n    if (\n      typeof value === 'object' &&\n      value !== null &&\n      typeof value.render === 'function' &&\n      value.$$typeof === undefined\n    ) {\n      const componentName = getComponentName(Component) || 'Unknown';\n      if (!didWarnAboutModulePatternComponent[componentName]) {\n        console.error(\n          'The <%s /> component appears to be a function component that returns a class instance. ' +\n            'Change %s to a class that extends React.Component instead. ' +\n            \"If you can't use a class try assigning the prototype on the function as a workaround. \" +\n            \"`%s.prototype = React.Component.prototype`. Don't use an arrow function since it \" +\n            'cannot be called with `new` by React.',\n          componentName,\n          componentName,\n          componentName,\n        );\n        didWarnAboutModulePatternComponent[componentName] = true;\n      }\n    }\n  }\n\n  if (\n    // Run these checks in production only if the flag is off.\n    // Eventually we'll delete this branch altogether.\n    !disableModulePatternComponents &&\n    typeof value === 'object' &&\n    value !== null &&\n    typeof value.render === 'function' &&\n    value.$$typeof === undefined\n  ) {\n    if (__DEV__) {\n      const componentName = getComponentName(Component) || 'Unknown';\n      if (!didWarnAboutModulePatternComponent[componentName]) {\n        console.error(\n          'The <%s /> component appears to be a function component that returns a class instance. ' +\n            'Change %s to a class that extends React.Component instead. ' +\n            \"If you can't use a class try assigning the prototype on the function as a workaround. \" +\n            \"`%s.prototype = React.Component.prototype`. Don't use an arrow function since it \" +\n            'cannot be called with `new` by React.',\n          componentName,\n          componentName,\n          componentName,\n        );\n        didWarnAboutModulePatternComponent[componentName] = true;\n      }\n    }\n\n    // Proceed under the assumption that this is a class instance\n    workInProgress.tag = ClassComponent;\n\n    // Throw out any hooks that were used.\n    workInProgress.memoizedState = null;\n    workInProgress.updateQueue = null;\n\n    // Push context providers early to prevent context stack mismatches.\n    // During mounting we don't know the child context yet as the instance doesn't exist.\n    // We will invalidate the child context in finishClassComponent() right after rendering.\n    let hasContext = false;\n    if (isLegacyContextProvider(Component)) {\n      hasContext = true;\n      pushLegacyContextProvider(workInProgress);\n    } else {\n      hasContext = false;\n    }\n\n    workInProgress.memoizedState =\n      value.state !== null && value.state !== undefined ? value.state : null;\n\n    initializeUpdateQueue(workInProgress);\n\n    const getDerivedStateFromProps = Component.getDerivedStateFromProps;\n    if (typeof getDerivedStateFromProps === 'function') {\n      applyDerivedStateFromProps(\n        workInProgress,\n        Component,\n        getDerivedStateFromProps,\n        props,\n      );\n    }\n\n    adoptClassInstance(workInProgress, value);\n    mountClassInstance(workInProgress, Component, props, renderLanes);\n    return finishClassComponent(\n      null,\n      workInProgress,\n      Component,\n      true,\n      hasContext,\n      renderLanes,\n    );\n  } else {\n    // Proceed under the assumption that this is a function component\n    workInProgress.tag = FunctionComponent;\n    if (__DEV__) {\n      if (disableLegacyContext && Component.contextTypes) {\n        console.error(\n          '%s uses the legacy contextTypes API which is no longer supported. ' +\n            'Use React.createContext() with React.useContext() instead.',\n          getComponentName(Component) || 'Unknown',\n        );\n      }\n\n      if (\n        debugRenderPhaseSideEffectsForStrictMode &&\n        workInProgress.mode & StrictMode\n      ) {\n        disableLogs();\n        try {\n          value = renderWithHooks(\n            null,\n            workInProgress,\n            Component,\n            props,\n            context,\n            renderLanes,\n          );\n        } finally {\n          reenableLogs();\n        }\n      }\n    }\n    reconcileChildren(null, workInProgress, value, renderLanes);\n    if (__DEV__) {\n      validateFunctionComponentInDev(workInProgress, Component);\n    }\n    return workInProgress.child;\n  }\n}\n\nfunction validateFunctionComponentInDev(workInProgress: Fiber, Component: any) {\n  if (__DEV__) {\n    if (Component) {\n      if (Component.childContextTypes) {\n        console.error(\n          '%s(...): childContextTypes cannot be defined on a function component.',\n          Component.displayName || Component.name || 'Component',\n        );\n      }\n    }\n    if (workInProgress.ref !== null) {\n      let info = '';\n      const ownerName = getCurrentFiberOwnerNameInDevOrNull();\n      if (ownerName) {\n        info += '\\n\\nCheck the render method of `' + ownerName + '`.';\n      }\n\n      let warningKey = ownerName || workInProgress._debugID || '';\n      const debugSource = workInProgress._debugSource;\n      if (debugSource) {\n        warningKey = debugSource.fileName + ':' + debugSource.lineNumber;\n      }\n      if (!didWarnAboutFunctionRefs[warningKey]) {\n        didWarnAboutFunctionRefs[warningKey] = true;\n        console.error(\n          'Function components cannot be given refs. ' +\n            'Attempts to access this ref will fail. ' +\n            'Did you mean to use React.forwardRef()?%s',\n          info,\n        );\n      }\n    }\n\n    if (\n      warnAboutDefaultPropsOnFunctionComponents &&\n      Component.defaultProps !== undefined\n    ) {\n      const componentName = getComponentName(Component) || 'Unknown';\n\n      if (!didWarnAboutDefaultPropsOnFunctionComponent[componentName]) {\n        console.error(\n          '%s: Support for defaultProps will be removed from function components ' +\n            'in a future major release. Use JavaScript default parameters instead.',\n          componentName,\n        );\n        didWarnAboutDefaultPropsOnFunctionComponent[componentName] = true;\n      }\n    }\n\n    if (typeof Component.getDerivedStateFromProps === 'function') {\n      const componentName = getComponentName(Component) || 'Unknown';\n\n      if (!didWarnAboutGetDerivedStateOnFunctionComponent[componentName]) {\n        console.error(\n          '%s: Function components do not support getDerivedStateFromProps.',\n          componentName,\n        );\n        didWarnAboutGetDerivedStateOnFunctionComponent[componentName] = true;\n      }\n    }\n\n    if (\n      typeof Component.contextType === 'object' &&\n      Component.contextType !== null\n    ) {\n      const componentName = getComponentName(Component) || 'Unknown';\n\n      if (!didWarnAboutContextTypeOnFunctionComponent[componentName]) {\n        console.error(\n          '%s: Function components do not support contextType.',\n          componentName,\n        );\n        didWarnAboutContextTypeOnFunctionComponent[componentName] = true;\n      }\n    }\n  }\n}\n\nconst SUSPENDED_MARKER: SuspenseState = {\n  dehydrated: null,\n  retryLane: NoLane,\n};\n\nfunction mountSuspenseOffscreenState(renderLanes: Lanes): OffscreenState {\n  return {\n    baseLanes: renderLanes,\n  };\n}\n\nfunction updateSuspenseOffscreenState(\n  prevOffscreenState: OffscreenState,\n  renderLanes: Lanes,\n): OffscreenState {\n  return {\n    baseLanes: mergeLanes(prevOffscreenState.baseLanes, renderLanes),\n  };\n}\n\n// TODO: Probably should inline this back\nfunction shouldRemainOnFallback(\n  suspenseContext: SuspenseContext,\n  current: null | Fiber,\n  workInProgress: Fiber,\n  renderLanes: Lanes,\n) {\n  // If we're already showing a fallback, there are cases where we need to\n  // remain on that fallback regardless of whether the content has resolved.\n  // For example, SuspenseList coordinates when nested content appears.\n  if (current !== null) {\n    const suspenseState: SuspenseState = current.memoizedState;\n    if (suspenseState === null) {\n      // Currently showing content. Don't hide it, even if ForceSuspenseFallack\n      // is true. More precise name might be \"ForceRemainSuspenseFallback\".\n      // Note: This is a factoring smell. Can't remain on a fallback if there's\n      // no fallback to remain on.\n      return false;\n    }\n  }\n\n  // Not currently showing content. Consult the Suspense context.\n  return hasSuspenseContext(\n    suspenseContext,\n    (ForceSuspenseFallback: SuspenseContext),\n  );\n}\n\nfunction getRemainingWorkInPrimaryTree(current: Fiber, renderLanes) {\n  // TODO: Should not remove render lanes that were pinged during this render\n  return removeLanes(current.childLanes, renderLanes);\n}\n\nfunction updateSuspenseComponent(current, workInProgress, renderLanes) {\n  const nextProps = workInProgress.pendingProps;\n\n  // This is used by DevTools to force a boundary to suspend.\n  if (__DEV__) {\n    if (shouldSuspend(workInProgress)) {\n      workInProgress.flags |= DidCapture;\n    }\n  }\n\n  let suspenseContext: SuspenseContext = suspenseStackCursor.current;\n\n  let showFallback = false;\n  const didSuspend = (workInProgress.flags & DidCapture) !== NoFlags;\n\n  if (\n    didSuspend ||\n    shouldRemainOnFallback(\n      suspenseContext,\n      current,\n      workInProgress,\n      renderLanes,\n    )\n  ) {\n    // Something in this boundary's subtree already suspended. Switch to\n    // rendering the fallback children.\n    showFallback = true;\n    workInProgress.flags &= ~DidCapture;\n  } else {\n    // Attempting the main content\n    if (\n      current === null ||\n      (current.memoizedState: null | SuspenseState) !== null\n    ) {\n      // This is a new mount or this boundary is already showing a fallback state.\n      // Mark this subtree context as having at least one invisible parent that could\n      // handle the fallback state.\n      // Boundaries without fallbacks or should be avoided are not considered since\n      // they cannot handle preferred fallback states.\n      if (\n        nextProps.fallback !== undefined &&\n        nextProps.unstable_avoidThisFallback !== true\n      ) {\n        suspenseContext = addSubtreeSuspenseContext(\n          suspenseContext,\n          InvisibleParentSuspenseContext,\n        );\n      }\n    }\n  }\n\n  suspenseContext = setDefaultShallowSuspenseContext(suspenseContext);\n\n  pushSuspenseContext(workInProgress, suspenseContext);\n\n  // OK, the next part is confusing. We're about to reconcile the Suspense\n  // boundary's children. This involves some custom reconcilation logic. Two\n  // main reasons this is so complicated.\n  //\n  // First, Legacy Mode has different semantics for backwards compatibility. The\n  // primary tree will commit in an inconsistent state, so when we do the\n  // second pass to render the fallback, we do some exceedingly, uh, clever\n  // hacks to make that not totally break. Like transferring effects and\n  // deletions from hidden tree. In Concurrent Mode, it's much simpler,\n  // because we bailout on the primary tree completely and leave it in its old\n  // state, no effects. Same as what we do for Offscreen (except that\n  // Offscreen doesn't have the first render pass).\n  //\n  // Second is hydration. During hydration, the Suspense fiber has a slightly\n  // different layout, where the child points to a dehydrated fragment, which\n  // contains the DOM rendered by the server.\n  //\n  // Third, even if you set all that aside, Suspense is like error boundaries in\n  // that we first we try to render one tree, and if that fails, we render again\n  // and switch to a different tree. Like a try/catch block. So we have to track\n  // which branch we're currently rendering. Ideally we would model this using\n  // a stack.\n  if (current === null) {\n    // Initial mount\n    // If we're currently hydrating, try to hydrate this boundary.\n    // But only if this has a fallback.\n    if (nextProps.fallback !== undefined) {\n      tryToClaimNextHydratableInstance(workInProgress);\n      // This could've been a dehydrated suspense component.\n      if (enableSuspenseServerRenderer) {\n        const suspenseState: null | SuspenseState =\n          workInProgress.memoizedState;\n        if (suspenseState !== null) {\n          const dehydrated = suspenseState.dehydrated;\n          if (dehydrated !== null) {\n            return mountDehydratedSuspenseComponent(\n              workInProgress,\n              dehydrated,\n              renderLanes,\n            );\n          }\n        }\n      }\n    }\n\n    const nextPrimaryChildren = nextProps.children;\n    const nextFallbackChildren = nextProps.fallback;\n    if (showFallback) {\n      const fallbackFragment = mountSuspenseFallbackChildren(\n        workInProgress,\n        nextPrimaryChildren,\n        nextFallbackChildren,\n        renderLanes,\n      );\n      const primaryChildFragment: Fiber = (workInProgress.child: any);\n      primaryChildFragment.memoizedState = mountSuspenseOffscreenState(\n        renderLanes,\n      );\n      workInProgress.memoizedState = SUSPENDED_MARKER;\n      return fallbackFragment;\n    } else if (typeof nextProps.unstable_expectedLoadTime === 'number') {\n      // This is a CPU-bound tree. Skip this tree and show a placeholder to\n      // unblock the surrounding content. Then immediately retry after the\n      // initial commit.\n      const fallbackFragment = mountSuspenseFallbackChildren(\n        workInProgress,\n        nextPrimaryChildren,\n        nextFallbackChildren,\n        renderLanes,\n      );\n      const primaryChildFragment: Fiber = (workInProgress.child: any);\n      primaryChildFragment.memoizedState = mountSuspenseOffscreenState(\n        renderLanes,\n      );\n      workInProgress.memoizedState = SUSPENDED_MARKER;\n\n      // Since nothing actually suspended, there will nothing to ping this to\n      // get it started back up to attempt the next item. While in terms of\n      // priority this work has the same priority as this current render, it's\n      // not part of the same transition once the transition has committed. If\n      // it's sync, we still want to yield so that it can be painted.\n      // Conceptually, this is really the same as pinging. We can use any\n      // RetryLane even if it's the one currently rendering since we're leaving\n      // it behind on this node.\n      workInProgress.lanes = SomeRetryLane;\n      if (enableSchedulerTracing) {\n        markSpawnedWork(SomeRetryLane);\n      }\n      return fallbackFragment;\n    } else {\n      return mountSuspensePrimaryChildren(\n        workInProgress,\n        nextPrimaryChildren,\n        renderLanes,\n      );\n    }\n  } else {\n    // This is an update.\n\n    // If the current fiber has a SuspenseState, that means it's already showing\n    // a fallback.\n    const prevState: null | SuspenseState = current.memoizedState;\n    if (prevState !== null) {\n      // The current tree is already showing a fallback\n\n      // Special path for hydration\n      if (enableSuspenseServerRenderer) {\n        const dehydrated = prevState.dehydrated;\n        if (dehydrated !== null) {\n          if (!didSuspend) {\n            return updateDehydratedSuspenseComponent(\n              current,\n              workInProgress,\n              dehydrated,\n              prevState,\n              renderLanes,\n            );\n          } else if (\n            (workInProgress.memoizedState: null | SuspenseState) !== null\n          ) {\n            // Something suspended and we should still be in dehydrated mode.\n            // Leave the existing child in place.\n            workInProgress.child = current.child;\n            // The dehydrated completion pass expects this flag to be there\n            // but the normal suspense pass doesn't.\n            workInProgress.flags |= DidCapture;\n            return null;\n          } else {\n            // Suspended but we should no longer be in dehydrated mode.\n            // Therefore we now have to render the fallback.\n            const nextPrimaryChildren = nextProps.children;\n            const nextFallbackChildren = nextProps.fallback;\n            const fallbackChildFragment = mountSuspenseFallbackAfterRetryWithoutHydrating(\n              current,\n              workInProgress,\n              nextPrimaryChildren,\n              nextFallbackChildren,\n              renderLanes,\n            );\n            const primaryChildFragment: Fiber = (workInProgress.child: any);\n            primaryChildFragment.memoizedState = mountSuspenseOffscreenState(\n              renderLanes,\n            );\n            workInProgress.memoizedState = SUSPENDED_MARKER;\n            return fallbackChildFragment;\n          }\n        }\n      }\n\n      if (showFallback) {\n        const nextFallbackChildren = nextProps.fallback;\n        const nextPrimaryChildren = nextProps.children;\n        const fallbackChildFragment = updateSuspenseFallbackChildren(\n          current,\n          workInProgress,\n          nextPrimaryChildren,\n          nextFallbackChildren,\n          renderLanes,\n        );\n        const primaryChildFragment: Fiber = (workInProgress.child: any);\n        const prevOffscreenState: OffscreenState | null = (current.child: any)\n          .memoizedState;\n        primaryChildFragment.memoizedState =\n          prevOffscreenState === null\n            ? mountSuspenseOffscreenState(renderLanes)\n            : updateSuspenseOffscreenState(prevOffscreenState, renderLanes);\n        primaryChildFragment.childLanes = getRemainingWorkInPrimaryTree(\n          current,\n          renderLanes,\n        );\n        workInProgress.memoizedState = SUSPENDED_MARKER;\n        return fallbackChildFragment;\n      } else {\n        const nextPrimaryChildren = nextProps.children;\n        const primaryChildFragment = updateSuspensePrimaryChildren(\n          current,\n          workInProgress,\n          nextPrimaryChildren,\n          renderLanes,\n        );\n        workInProgress.memoizedState = null;\n        return primaryChildFragment;\n      }\n    } else {\n      // The current tree is not already showing a fallback.\n      if (showFallback) {\n        // Timed out.\n        const nextFallbackChildren = nextProps.fallback;\n        const nextPrimaryChildren = nextProps.children;\n        const fallbackChildFragment = updateSuspenseFallbackChildren(\n          current,\n          workInProgress,\n          nextPrimaryChildren,\n          nextFallbackChildren,\n          renderLanes,\n        );\n        const primaryChildFragment: Fiber = (workInProgress.child: any);\n        const prevOffscreenState: OffscreenState | null = (current.child: any)\n          .memoizedState;\n        primaryChildFragment.memoizedState =\n          prevOffscreenState === null\n            ? mountSuspenseOffscreenState(renderLanes)\n            : updateSuspenseOffscreenState(prevOffscreenState, renderLanes);\n        primaryChildFragment.childLanes = getRemainingWorkInPrimaryTree(\n          current,\n          renderLanes,\n        );\n        // Skip the primary children, and continue working on the\n        // fallback children.\n        workInProgress.memoizedState = SUSPENDED_MARKER;\n        return fallbackChildFragment;\n      } else {\n        // Still haven't timed out. Continue rendering the children, like we\n        // normally do.\n        const nextPrimaryChildren = nextProps.children;\n        const primaryChildFragment = updateSuspensePrimaryChildren(\n          current,\n          workInProgress,\n          nextPrimaryChildren,\n          renderLanes,\n        );\n        workInProgress.memoizedState = null;\n        return primaryChildFragment;\n      }\n    }\n  }\n}\n\nfunction mountSuspensePrimaryChildren(\n  workInProgress,\n  primaryChildren,\n  renderLanes,\n) {\n  const mode = workInProgress.mode;\n  const primaryChildProps: OffscreenProps = {\n    mode: 'visible',\n    children: primaryChildren,\n  };\n  const primaryChildFragment = createFiberFromOffscreen(\n    primaryChildProps,\n    mode,\n    renderLanes,\n    null,\n  );\n  primaryChildFragment.return = workInProgress;\n  workInProgress.child = primaryChildFragment;\n  return primaryChildFragment;\n}\n\nfunction mountSuspenseFallbackChildren(\n  workInProgress,\n  primaryChildren,\n  fallbackChildren,\n  renderLanes,\n) {\n  const mode = workInProgress.mode;\n  const progressedPrimaryFragment: Fiber | null = workInProgress.child;\n\n  const primaryChildProps: OffscreenProps = {\n    mode: 'hidden',\n    children: primaryChildren,\n  };\n\n  let primaryChildFragment;\n  let fallbackChildFragment;\n  if ((mode & BlockingMode) === NoMode && progressedPrimaryFragment !== null) {\n    // In legacy mode, we commit the primary tree as if it successfully\n    // completed, even though it's in an inconsistent state.\n    primaryChildFragment = progressedPrimaryFragment;\n    primaryChildFragment.childLanes = NoLanes;\n    primaryChildFragment.pendingProps = primaryChildProps;\n\n    if (enableProfilerTimer && workInProgress.mode & ProfileMode) {\n      // Reset the durations from the first pass so they aren't included in the\n      // final amounts. This seems counterintuitive, since we're intentionally\n      // not measuring part of the render phase, but this makes it match what we\n      // do in Concurrent Mode.\n      primaryChildFragment.actualDuration = 0;\n      primaryChildFragment.actualStartTime = -1;\n      primaryChildFragment.selfBaseDuration = 0;\n      primaryChildFragment.treeBaseDuration = 0;\n    }\n\n    fallbackChildFragment = createFiberFromFragment(\n      fallbackChildren,\n      mode,\n      renderLanes,\n      null,\n    );\n  } else {\n    primaryChildFragment = createFiberFromOffscreen(\n      primaryChildProps,\n      mode,\n      NoLanes,\n      null,\n    );\n    fallbackChildFragment = createFiberFromFragment(\n      fallbackChildren,\n      mode,\n      renderLanes,\n      null,\n    );\n  }\n\n  primaryChildFragment.return = workInProgress;\n  fallbackChildFragment.return = workInProgress;\n  primaryChildFragment.sibling = fallbackChildFragment;\n  workInProgress.child = primaryChildFragment;\n  return fallbackChildFragment;\n}\n\nfunction createWorkInProgressOffscreenFiber(\n  current: Fiber,\n  offscreenProps: OffscreenProps,\n) {\n  // The props argument to `createWorkInProgress` is `any` typed, so we use this\n  // wrapper function to constrain it.\n  return createWorkInProgress(current, offscreenProps);\n}\n\nfunction updateSuspensePrimaryChildren(\n  current,\n  workInProgress,\n  primaryChildren,\n  renderLanes,\n) {\n  const currentPrimaryChildFragment: Fiber = (current.child: any);\n  const currentFallbackChildFragment: Fiber | null =\n    currentPrimaryChildFragment.sibling;\n\n  const primaryChildFragment = createWorkInProgressOffscreenFiber(\n    currentPrimaryChildFragment,\n    {\n      mode: 'visible',\n      children: primaryChildren,\n    },\n  );\n  if ((workInProgress.mode & BlockingMode) === NoMode) {\n    primaryChildFragment.lanes = renderLanes;\n  }\n  primaryChildFragment.return = workInProgress;\n  primaryChildFragment.sibling = null;\n  if (currentFallbackChildFragment !== null) {\n    // Delete the fallback child fragment\n    currentFallbackChildFragment.nextEffect = null;\n    currentFallbackChildFragment.flags = Deletion;\n    workInProgress.firstEffect = workInProgress.lastEffect = currentFallbackChildFragment;\n  }\n\n  workInProgress.child = primaryChildFragment;\n  return primaryChildFragment;\n}\n\nfunction updateSuspenseFallbackChildren(\n  current,\n  workInProgress,\n  primaryChildren,\n  fallbackChildren,\n  renderLanes,\n) {\n  const mode = workInProgress.mode;\n  const currentPrimaryChildFragment: Fiber = (current.child: any);\n  const currentFallbackChildFragment: Fiber | null =\n    currentPrimaryChildFragment.sibling;\n\n  const primaryChildProps: OffscreenProps = {\n    mode: 'hidden',\n    children: primaryChildren,\n  };\n\n  let primaryChildFragment;\n  if (\n    // In legacy mode, we commit the primary tree as if it successfully\n    // completed, even though it's in an inconsistent state.\n    (mode & BlockingMode) === NoMode &&\n    // Make sure we're on the second pass, i.e. the primary child fragment was\n    // already cloned. In legacy mode, the only case where this isn't true is\n    // when DevTools forces us to display a fallback; we skip the first render\n    // pass entirely and go straight to rendering the fallback. (In Concurrent\n    // Mode, SuspenseList can also trigger this scenario, but this is a legacy-\n    // only codepath.)\n    workInProgress.child !== currentPrimaryChildFragment\n  ) {\n    const progressedPrimaryFragment: Fiber = (workInProgress.child: any);\n    primaryChildFragment = progressedPrimaryFragment;\n    primaryChildFragment.childLanes = NoLanes;\n    primaryChildFragment.pendingProps = primaryChildProps;\n\n    if (enableProfilerTimer && workInProgress.mode & ProfileMode) {\n      // Reset the durations from the first pass so they aren't included in the\n      // final amounts. This seems counterintuitive, since we're intentionally\n      // not measuring part of the render phase, but this makes it match what we\n      // do in Concurrent Mode.\n      primaryChildFragment.actualDuration = 0;\n      primaryChildFragment.actualStartTime = -1;\n      primaryChildFragment.selfBaseDuration =\n        currentPrimaryChildFragment.selfBaseDuration;\n      primaryChildFragment.treeBaseDuration =\n        currentPrimaryChildFragment.treeBaseDuration;\n    }\n\n    // The fallback fiber was added as a deletion effect during the first pass.\n    // However, since we're going to remain on the fallback, we no longer want\n    // to delete it. So we need to remove it from the list. Deletions are stored\n    // on the same list as effects. We want to keep the effects from the primary\n    // tree. So we copy the primary child fragment's effect list, which does not\n    // include the fallback deletion effect.\n    const progressedLastEffect = primaryChildFragment.lastEffect;\n    if (progressedLastEffect !== null) {\n      workInProgress.firstEffect = primaryChildFragment.firstEffect;\n      workInProgress.lastEffect = progressedLastEffect;\n      progressedLastEffect.nextEffect = null;\n    } else {\n      // TODO: Reset this somewhere else? Lol legacy mode is so weird.\n      workInProgress.firstEffect = workInProgress.lastEffect = null;\n    }\n  } else {\n    primaryChildFragment = createWorkInProgressOffscreenFiber(\n      currentPrimaryChildFragment,\n      primaryChildProps,\n    );\n  }\n  let fallbackChildFragment;\n  if (currentFallbackChildFragment !== null) {\n    fallbackChildFragment = createWorkInProgress(\n      currentFallbackChildFragment,\n      fallbackChildren,\n    );\n  } else {\n    fallbackChildFragment = createFiberFromFragment(\n      fallbackChildren,\n      mode,\n      renderLanes,\n      null,\n    );\n    // Needs a placement effect because the parent (the Suspense boundary) already\n    // mounted but this is a new fiber.\n    fallbackChildFragment.flags |= Placement;\n  }\n\n  fallbackChildFragment.return = workInProgress;\n  primaryChildFragment.return = workInProgress;\n  primaryChildFragment.sibling = fallbackChildFragment;\n  workInProgress.child = primaryChildFragment;\n\n  return fallbackChildFragment;\n}\n\nfunction retrySuspenseComponentWithoutHydrating(\n  current: Fiber,\n  workInProgress: Fiber,\n  renderLanes: Lanes,\n) {\n  // This will add the old fiber to the deletion list\n  reconcileChildFibers(workInProgress, current.child, null, renderLanes);\n\n  // We're now not suspended nor dehydrated.\n  const nextProps = workInProgress.pendingProps;\n  const primaryChildren = nextProps.children;\n  const primaryChildFragment = mountSuspensePrimaryChildren(\n    workInProgress,\n    primaryChildren,\n    renderLanes,\n  );\n  // Needs a placement effect because the parent (the Suspense boundary) already\n  // mounted but this is a new fiber.\n  primaryChildFragment.flags |= Placement;\n  workInProgress.memoizedState = null;\n\n  return primaryChildFragment;\n}\n\nfunction mountSuspenseFallbackAfterRetryWithoutHydrating(\n  current,\n  workInProgress,\n  primaryChildren,\n  fallbackChildren,\n  renderLanes,\n) {\n  const mode = workInProgress.mode;\n  const primaryChildFragment = createFiberFromOffscreen(\n    primaryChildren,\n    mode,\n    NoLanes,\n    null,\n  );\n  const fallbackChildFragment = createFiberFromFragment(\n    fallbackChildren,\n    mode,\n    renderLanes,\n    null,\n  );\n  // Needs a placement effect because the parent (the Suspense\n  // boundary) already mounted but this is a new fiber.\n  fallbackChildFragment.flags |= Placement;\n\n  primaryChildFragment.return = workInProgress;\n  fallbackChildFragment.return = workInProgress;\n  primaryChildFragment.sibling = fallbackChildFragment;\n  workInProgress.child = primaryChildFragment;\n\n  if ((workInProgress.mode & BlockingMode) !== NoMode) {\n    // We will have dropped the effect list which contains the\n    // deletion. We need to reconcile to delete the current child.\n    reconcileChildFibers(workInProgress, current.child, null, renderLanes);\n  }\n\n  return fallbackChildFragment;\n}\n\nfunction mountDehydratedSuspenseComponent(\n  workInProgress: Fiber,\n  suspenseInstance: SuspenseInstance,\n  renderLanes: Lanes,\n): null | Fiber {\n  // During the first pass, we'll bail out and not drill into the children.\n  // Instead, we'll leave the content in place and try to hydrate it later.\n  if ((workInProgress.mode & BlockingMode) === NoMode) {\n    if (__DEV__) {\n      console.error(\n        'Cannot hydrate Suspense in legacy mode. Switch from ' +\n          'ReactDOM.hydrate(element, container) to ' +\n          'ReactDOM.createBlockingRoot(container, { hydrate: true })' +\n          '.render(element) or remove the Suspense components from ' +\n          'the server rendered components.',\n      );\n    }\n    workInProgress.lanes = laneToLanes(SyncLane);\n  } else if (isSuspenseInstanceFallback(suspenseInstance)) {\n    // This is a client-only boundary. Since we won't get any content from the server\n    // for this, we need to schedule that at a higher priority based on when it would\n    // have timed out. In theory we could render it in this pass but it would have the\n    // wrong priority associated with it and will prevent hydration of parent path.\n    // Instead, we'll leave work left on it to render it in a separate commit.\n\n    // TODO This time should be the time at which the server rendered response that is\n    // a parent to this boundary was displayed. However, since we currently don't have\n    // a protocol to transfer that time, we'll just estimate it by using the current\n    // time. This will mean that Suspense timeouts are slightly shifted to later than\n    // they should be.\n    // Schedule a normal pri update to render this content.\n    if (enableSchedulerTracing) {\n      markSpawnedWork(DefaultHydrationLane);\n    }\n    workInProgress.lanes = laneToLanes(DefaultHydrationLane);\n  } else {\n    // We'll continue hydrating the rest at offscreen priority since we'll already\n    // be showing the right content coming from the server, it is no rush.\n    workInProgress.lanes = laneToLanes(OffscreenLane);\n    if (enableSchedulerTracing) {\n      markSpawnedWork(OffscreenLane);\n    }\n  }\n  return null;\n}\n\nfunction updateDehydratedSuspenseComponent(\n  current: Fiber,\n  workInProgress: Fiber,\n  suspenseInstance: SuspenseInstance,\n  suspenseState: SuspenseState,\n  renderLanes: Lanes,\n): null | Fiber {\n  // We should never be hydrating at this point because it is the first pass,\n  // but after we've already committed once.\n  warnIfHydrating();\n\n  if ((getExecutionContext() & RetryAfterError) !== NoContext) {\n    return retrySuspenseComponentWithoutHydrating(\n      current,\n      workInProgress,\n      renderLanes,\n    );\n  }\n\n  if ((workInProgress.mode & BlockingMode) === NoMode) {\n    return retrySuspenseComponentWithoutHydrating(\n      current,\n      workInProgress,\n      renderLanes,\n    );\n  }\n\n  if (isSuspenseInstanceFallback(suspenseInstance)) {\n    // This boundary is in a permanent fallback state. In this case, we'll never\n    // get an update and we'll never be able to hydrate the final content. Let's just try the\n    // client side render instead.\n    return retrySuspenseComponentWithoutHydrating(\n      current,\n      workInProgress,\n      renderLanes,\n    );\n  }\n  // We use lanes to indicate that a child might depend on context, so if\n  // any context has changed, we need to treat is as if the input might have changed.\n  const hasContextChanged = includesSomeLane(renderLanes, current.childLanes);\n  if (didReceiveUpdate || hasContextChanged) {\n    // This boundary has changed since the first render. This means that we are now unable to\n    // hydrate it. We might still be able to hydrate it using a higher priority lane.\n    const root = getWorkInProgressRoot();\n    if (root !== null) {\n      const attemptHydrationAtLane = getBumpedLaneForHydration(\n        root,\n        renderLanes,\n      );\n      if (\n        attemptHydrationAtLane !== NoLane &&\n        attemptHydrationAtLane !== suspenseState.retryLane\n      ) {\n        // Intentionally mutating since this render will get interrupted. This\n        // is one of the very rare times where we mutate the current tree\n        // during the render phase.\n        suspenseState.retryLane = attemptHydrationAtLane;\n        // TODO: Ideally this would inherit the event time of the current render\n        const eventTime = NoTimestamp;\n        scheduleUpdateOnFiber(current, attemptHydrationAtLane, eventTime);\n      } else {\n        // We have already tried to ping at a higher priority than we're rendering with\n        // so if we got here, we must have failed to hydrate at those levels. We must\n        // now give up. Instead, we're going to delete the whole subtree and instead inject\n        // a new real Suspense boundary to take its place, which may render content\n        // or fallback. This might suspend for a while and if it does we might still have\n        // an opportunity to hydrate before this pass commits.\n      }\n    }\n\n    // If we have scheduled higher pri work above, this will probably just abort the render\n    // since we now have higher priority work, but in case it doesn't, we need to prepare to\n    // render something, if we time out. Even if that requires us to delete everything and\n    // skip hydration.\n    // Delay having to do this as long as the suspense timeout allows us.\n    renderDidSuspendDelayIfPossible();\n    return retrySuspenseComponentWithoutHydrating(\n      current,\n      workInProgress,\n      renderLanes,\n    );\n  } else if (isSuspenseInstancePending(suspenseInstance)) {\n    // This component is still pending more data from the server, so we can't hydrate its\n    // content. We treat it as if this component suspended itself. It might seem as if\n    // we could just try to render it client-side instead. However, this will perform a\n    // lot of unnecessary work and is unlikely to complete since it often will suspend\n    // on missing data anyway. Additionally, the server might be able to render more\n    // than we can on the client yet. In that case we'd end up with more fallback states\n    // on the client than if we just leave it alone. If the server times out or errors\n    // these should update this boundary to the permanent Fallback state instead.\n    // Mark it as having captured (i.e. suspended).\n    workInProgress.flags |= DidCapture;\n    // Leave the child in place. I.e. the dehydrated fragment.\n    workInProgress.child = current.child;\n    // Register a callback to retry this boundary once the server has sent the result.\n    let retry = retryDehydratedSuspenseBoundary.bind(null, current);\n    if (enableSchedulerTracing) {\n      retry = Schedule_tracing_wrap(retry);\n    }\n    registerSuspenseInstanceRetry(suspenseInstance, retry);\n    return null;\n  } else {\n    // This is the first attempt.\n    reenterHydrationStateFromDehydratedSuspenseInstance(\n      workInProgress,\n      suspenseInstance,\n    );\n    const nextProps = workInProgress.pendingProps;\n    const primaryChildren = nextProps.children;\n    const primaryChildFragment = mountSuspensePrimaryChildren(\n      workInProgress,\n      primaryChildren,\n      renderLanes,\n    );\n    // Mark the children as hydrating. This is a fast path to know whether this\n    // tree is part of a hydrating tree. This is used to determine if a child\n    // node has fully mounted yet, and for scheduling event replaying.\n    // Conceptually this is similar to Placement in that a new subtree is\n    // inserted into the React tree here. It just happens to not need DOM\n    // mutations because it already exists.\n    primaryChildFragment.flags |= Hydrating;\n    return primaryChildFragment;\n  }\n}\n\nfunction scheduleWorkOnFiber(fiber: Fiber, renderLanes: Lanes) {\n  fiber.lanes = mergeLanes(fiber.lanes, renderLanes);\n  const alternate = fiber.alternate;\n  if (alternate !== null) {\n    alternate.lanes = mergeLanes(alternate.lanes, renderLanes);\n  }\n  scheduleWorkOnParentPath(fiber.return, renderLanes);\n}\n\nfunction propagateSuspenseContextChange(\n  workInProgress: Fiber,\n  firstChild: null | Fiber,\n  renderLanes: Lanes,\n): void {\n  // Mark any Suspense boundaries with fallbacks as having work to do.\n  // If they were previously forced into fallbacks, they may now be able\n  // to unblock.\n  let node = firstChild;\n  while (node !== null) {\n    if (node.tag === SuspenseComponent) {\n      const state: SuspenseState | null = node.memoizedState;\n      if (state !== null) {\n        scheduleWorkOnFiber(node, renderLanes);\n      }\n    } else if (node.tag === SuspenseListComponent) {\n      // If the tail is hidden there might not be an Suspense boundaries\n      // to schedule work on. In this case we have to schedule it on the\n      // list itself.\n      // We don't have to traverse to the children of the list since\n      // the list will propagate the change when it rerenders.\n      scheduleWorkOnFiber(node, renderLanes);\n    } else if (node.child !== null) {\n      node.child.return = node;\n      node = node.child;\n      continue;\n    }\n    if (node === workInProgress) {\n      return;\n    }\n    while (node.sibling === null) {\n      if (node.return === null || node.return === workInProgress) {\n        return;\n      }\n      node = node.return;\n    }\n    node.sibling.return = node.return;\n    node = node.sibling;\n  }\n}\n\nfunction findLastContentRow(firstChild: null | Fiber): null | Fiber {\n  // This is going to find the last row among these children that is already\n  // showing content on the screen, as opposed to being in fallback state or\n  // new. If a row has multiple Suspense boundaries, any of them being in the\n  // fallback state, counts as the whole row being in a fallback state.\n  // Note that the \"rows\" will be workInProgress, but any nested children\n  // will still be current since we haven't rendered them yet. The mounted\n  // order may not be the same as the new order. We use the new order.\n  let row = firstChild;\n  let lastContentRow: null | Fiber = null;\n  while (row !== null) {\n    const currentRow = row.alternate;\n    // New rows can't be content rows.\n    if (currentRow !== null && findFirstSuspended(currentRow) === null) {\n      lastContentRow = row;\n    }\n    row = row.sibling;\n  }\n  return lastContentRow;\n}\n\ntype SuspenseListRevealOrder = 'forwards' | 'backwards' | 'together' | void;\n\nfunction validateRevealOrder(revealOrder: SuspenseListRevealOrder) {\n  if (__DEV__) {\n    if (\n      revealOrder !== undefined &&\n      revealOrder !== 'forwards' &&\n      revealOrder !== 'backwards' &&\n      revealOrder !== 'together' &&\n      !didWarnAboutRevealOrder[revealOrder]\n    ) {\n      didWarnAboutRevealOrder[revealOrder] = true;\n      if (typeof revealOrder === 'string') {\n        switch (revealOrder.toLowerCase()) {\n          case 'together':\n          case 'forwards':\n          case 'backwards': {\n            console.error(\n              '\"%s\" is not a valid value for revealOrder on <SuspenseList />. ' +\n                'Use lowercase \"%s\" instead.',\n              revealOrder,\n              revealOrder.toLowerCase(),\n            );\n            break;\n          }\n          case 'forward':\n          case 'backward': {\n            console.error(\n              '\"%s\" is not a valid value for revealOrder on <SuspenseList />. ' +\n                'React uses the -s suffix in the spelling. Use \"%ss\" instead.',\n              revealOrder,\n              revealOrder.toLowerCase(),\n            );\n            break;\n          }\n          default:\n            console.error(\n              '\"%s\" is not a supported revealOrder on <SuspenseList />. ' +\n                'Did you mean \"together\", \"forwards\" or \"backwards\"?',\n              revealOrder,\n            );\n            break;\n        }\n      } else {\n        console.error(\n          '%s is not a supported value for revealOrder on <SuspenseList />. ' +\n            'Did you mean \"together\", \"forwards\" or \"backwards\"?',\n          revealOrder,\n        );\n      }\n    }\n  }\n}\n\nfunction validateTailOptions(\n  tailMode: SuspenseListTailMode,\n  revealOrder: SuspenseListRevealOrder,\n) {\n  if (__DEV__) {\n    if (tailMode !== undefined && !didWarnAboutTailOptions[tailMode]) {\n      if (tailMode !== 'collapsed' && tailMode !== 'hidden') {\n        didWarnAboutTailOptions[tailMode] = true;\n        console.error(\n          '\"%s\" is not a supported value for tail on <SuspenseList />. ' +\n            'Did you mean \"collapsed\" or \"hidden\"?',\n          tailMode,\n        );\n      } else if (revealOrder !== 'forwards' && revealOrder !== 'backwards') {\n        didWarnAboutTailOptions[tailMode] = true;\n        console.error(\n          '<SuspenseList tail=\"%s\" /> is only valid if revealOrder is ' +\n            '\"forwards\" or \"backwards\". ' +\n            'Did you mean to specify revealOrder=\"forwards\"?',\n          tailMode,\n        );\n      }\n    }\n  }\n}\n\nfunction validateSuspenseListNestedChild(childSlot: mixed, index: number) {\n  if (__DEV__) {\n    const isArray = Array.isArray(childSlot);\n    const isIterable =\n      !isArray && typeof getIteratorFn(childSlot) === 'function';\n    if (isArray || isIterable) {\n      const type = isArray ? 'array' : 'iterable';\n      console.error(\n        'A nested %s was passed to row #%s in <SuspenseList />. Wrap it in ' +\n          'an additional SuspenseList to configure its revealOrder: ' +\n          '<SuspenseList revealOrder=...> ... ' +\n          '<SuspenseList revealOrder=...>{%s}</SuspenseList> ... ' +\n          '</SuspenseList>',\n        type,\n        index,\n        type,\n      );\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction validateSuspenseListChildren(\n  children: mixed,\n  revealOrder: SuspenseListRevealOrder,\n) {\n  if (__DEV__) {\n    if (\n      (revealOrder === 'forwards' || revealOrder === 'backwards') &&\n      children !== undefined &&\n      children !== null &&\n      children !== false\n    ) {\n      if (Array.isArray(children)) {\n        for (let i = 0; i < children.length; i++) {\n          if (!validateSuspenseListNestedChild(children[i], i)) {\n            return;\n          }\n        }\n      } else {\n        const iteratorFn = getIteratorFn(children);\n        if (typeof iteratorFn === 'function') {\n          const childrenIterator = iteratorFn.call(children);\n          if (childrenIterator) {\n            let step = childrenIterator.next();\n            let i = 0;\n            for (; !step.done; step = childrenIterator.next()) {\n              if (!validateSuspenseListNestedChild(step.value, i)) {\n                return;\n              }\n              i++;\n            }\n          }\n        } else {\n          console.error(\n            'A single row was passed to a <SuspenseList revealOrder=\"%s\" />. ' +\n              'This is not useful since it needs multiple rows. ' +\n              'Did you mean to pass multiple children or an array?',\n            revealOrder,\n          );\n        }\n      }\n    }\n  }\n}\n\nfunction initSuspenseListRenderState(\n  workInProgress: Fiber,\n  isBackwards: boolean,\n  tail: null | Fiber,\n  lastContentRow: null | Fiber,\n  tailMode: SuspenseListTailMode,\n  lastEffectBeforeRendering: null | Fiber,\n): void {\n  const renderState: null | SuspenseListRenderState =\n    workInProgress.memoizedState;\n  if (renderState === null) {\n    workInProgress.memoizedState = ({\n      isBackwards: isBackwards,\n      rendering: null,\n      renderingStartTime: 0,\n      last: lastContentRow,\n      tail: tail,\n      tailMode: tailMode,\n      lastEffect: lastEffectBeforeRendering,\n    }: SuspenseListRenderState);\n  } else {\n    // We can reuse the existing object from previous renders.\n    renderState.isBackwards = isBackwards;\n    renderState.rendering = null;\n    renderState.renderingStartTime = 0;\n    renderState.last = lastContentRow;\n    renderState.tail = tail;\n    renderState.tailMode = tailMode;\n    renderState.lastEffect = lastEffectBeforeRendering;\n  }\n}\n\n// This can end up rendering this component multiple passes.\n// The first pass splits the children fibers into two sets. A head and tail.\n// We first render the head. If anything is in fallback state, we do another\n// pass through beginWork to rerender all children (including the tail) with\n// the force suspend context. If the first render didn't have anything in\n// in fallback state. Then we render each row in the tail one-by-one.\n// That happens in the completeWork phase without going back to beginWork.\nfunction updateSuspenseListComponent(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  renderLanes: Lanes,\n) {\n  const nextProps = workInProgress.pendingProps;\n  const revealOrder: SuspenseListRevealOrder = nextProps.revealOrder;\n  const tailMode: SuspenseListTailMode = nextProps.tail;\n  const newChildren = nextProps.children;\n\n  validateRevealOrder(revealOrder);\n  validateTailOptions(tailMode, revealOrder);\n  validateSuspenseListChildren(newChildren, revealOrder);\n\n  reconcileChildren(current, workInProgress, newChildren, renderLanes);\n\n  let suspenseContext: SuspenseContext = suspenseStackCursor.current;\n\n  const shouldForceFallback = hasSuspenseContext(\n    suspenseContext,\n    (ForceSuspenseFallback: SuspenseContext),\n  );\n  if (shouldForceFallback) {\n    suspenseContext = setShallowSuspenseContext(\n      suspenseContext,\n      ForceSuspenseFallback,\n    );\n    workInProgress.flags |= DidCapture;\n  } else {\n    const didSuspendBefore =\n      current !== null && (current.flags & DidCapture) !== NoFlags;\n    if (didSuspendBefore) {\n      // If we previously forced a fallback, we need to schedule work\n      // on any nested boundaries to let them know to try to render\n      // again. This is the same as context updating.\n      propagateSuspenseContextChange(\n        workInProgress,\n        workInProgress.child,\n        renderLanes,\n      );\n    }\n    suspenseContext = setDefaultShallowSuspenseContext(suspenseContext);\n  }\n  pushSuspenseContext(workInProgress, suspenseContext);\n\n  if ((workInProgress.mode & BlockingMode) === NoMode) {\n    // In legacy mode, SuspenseList doesn't work so we just\n    // use make it a noop by treating it as the default revealOrder.\n    workInProgress.memoizedState = null;\n  } else {\n    switch (revealOrder) {\n      case 'forwards': {\n        const lastContentRow = findLastContentRow(workInProgress.child);\n        let tail;\n        if (lastContentRow === null) {\n          // The whole list is part of the tail.\n          // TODO: We could fast path by just rendering the tail now.\n          tail = workInProgress.child;\n          workInProgress.child = null;\n        } else {\n          // Disconnect the tail rows after the content row.\n          // We're going to render them separately later.\n          tail = lastContentRow.sibling;\n          lastContentRow.sibling = null;\n        }\n        initSuspenseListRenderState(\n          workInProgress,\n          false, // isBackwards\n          tail,\n          lastContentRow,\n          tailMode,\n          workInProgress.lastEffect,\n        );\n        break;\n      }\n      case 'backwards': {\n        // We're going to find the first row that has existing content.\n        // At the same time we're going to reverse the list of everything\n        // we pass in the meantime. That's going to be our tail in reverse\n        // order.\n        let tail = null;\n        let row = workInProgress.child;\n        workInProgress.child = null;\n        while (row !== null) {\n          const currentRow = row.alternate;\n          // New rows can't be content rows.\n          if (currentRow !== null && findFirstSuspended(currentRow) === null) {\n            // This is the beginning of the main content.\n            workInProgress.child = row;\n            break;\n          }\n          const nextRow = row.sibling;\n          row.sibling = tail;\n          tail = row;\n          row = nextRow;\n        }\n        // TODO: If workInProgress.child is null, we can continue on the tail immediately.\n        initSuspenseListRenderState(\n          workInProgress,\n          true, // isBackwards\n          tail,\n          null, // last\n          tailMode,\n          workInProgress.lastEffect,\n        );\n        break;\n      }\n      case 'together': {\n        initSuspenseListRenderState(\n          workInProgress,\n          false, // isBackwards\n          null, // tail\n          null, // last\n          undefined,\n          workInProgress.lastEffect,\n        );\n        break;\n      }\n      default: {\n        // The default reveal order is the same as not having\n        // a boundary.\n        workInProgress.memoizedState = null;\n      }\n    }\n  }\n  return workInProgress.child;\n}\n\nfunction updatePortalComponent(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  renderLanes: Lanes,\n) {\n  pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);\n  const nextChildren = workInProgress.pendingProps;\n  if (current === null) {\n    // Portals are special because we don't append the children during mount\n    // but at commit. Therefore we need to track insertions which the normal\n    // flow doesn't do during mount. This doesn't happen at the root because\n    // the root always starts with a \"current\" with a null child.\n    // TODO: Consider unifying this with how the root works.\n    workInProgress.child = reconcileChildFibers(\n      workInProgress,\n      null,\n      nextChildren,\n      renderLanes,\n    );\n  } else {\n    reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  }\n  return workInProgress.child;\n}\n\nlet hasWarnedAboutUsingNoValuePropOnContextProvider = false;\n\nfunction updateContextProvider(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  renderLanes: Lanes,\n) {\n  const providerType: ReactProviderType<any> = workInProgress.type;\n  const context: ReactContext<any> = providerType._context;\n\n  const newProps = workInProgress.pendingProps;\n  const oldProps = workInProgress.memoizedProps;\n\n  const newValue = newProps.value;\n\n  if (__DEV__) {\n    if (!('value' in newProps)) {\n      if (!hasWarnedAboutUsingNoValuePropOnContextProvider) {\n        hasWarnedAboutUsingNoValuePropOnContextProvider = true;\n        console.error(\n          'The `value` prop is required for the `<Context.Provider>`. Did you misspell it or forget to pass it?',\n        );\n      }\n    }\n    const providerPropTypes = workInProgress.type.propTypes;\n\n    if (providerPropTypes) {\n      checkPropTypes(providerPropTypes, newProps, 'prop', 'Context.Provider');\n    }\n  }\n\n  pushProvider(workInProgress, newValue);\n\n  if (oldProps !== null) {\n    const oldValue = oldProps.value;\n    const changedBits = calculateChangedBits(context, newValue, oldValue);\n    if (changedBits === 0) {\n      // No change. Bailout early if children are the same.\n      if (\n        oldProps.children === newProps.children &&\n        !hasLegacyContextChanged()\n      ) {\n        return bailoutOnAlreadyFinishedWork(\n          current,\n          workInProgress,\n          renderLanes,\n        );\n      }\n    } else {\n      // The context value changed. Search for matching consumers and schedule\n      // them to update.\n      propagateContextChange(workInProgress, context, changedBits, renderLanes);\n    }\n  }\n\n  const newChildren = newProps.children;\n  reconcileChildren(current, workInProgress, newChildren, renderLanes);\n  return workInProgress.child;\n}\n\nlet hasWarnedAboutUsingContextAsConsumer = false;\n\nfunction updateContextConsumer(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  renderLanes: Lanes,\n) {\n  let context: ReactContext<any> = workInProgress.type;\n  // The logic below for Context differs depending on PROD or DEV mode. In\n  // DEV mode, we create a separate object for Context.Consumer that acts\n  // like a proxy to Context. This proxy object adds unnecessary code in PROD\n  // so we use the old behaviour (Context.Consumer references Context) to\n  // reduce size and overhead. The separate object references context via\n  // a property called \"_context\", which also gives us the ability to check\n  // in DEV mode if this property exists or not and warn if it does not.\n  if (__DEV__) {\n    if ((context: any)._context === undefined) {\n      // This may be because it's a Context (rather than a Consumer).\n      // Or it may be because it's older React where they're the same thing.\n      // We only want to warn if we're sure it's a new React.\n      if (context !== context.Consumer) {\n        if (!hasWarnedAboutUsingContextAsConsumer) {\n          hasWarnedAboutUsingContextAsConsumer = true;\n          console.error(\n            'Rendering <Context> directly is not supported and will be removed in ' +\n              'a future major release. Did you mean to render <Context.Consumer> instead?',\n          );\n        }\n      }\n    } else {\n      context = (context: any)._context;\n    }\n  }\n  const newProps = workInProgress.pendingProps;\n  const render = newProps.children;\n\n  if (__DEV__) {\n    if (typeof render !== 'function') {\n      console.error(\n        'A context consumer was rendered with multiple children, or a child ' +\n          \"that isn't a function. A context consumer expects a single child \" +\n          'that is a function. If you did pass a function, make sure there ' +\n          'is no trailing or leading whitespace around it.',\n      );\n    }\n  }\n\n  prepareToReadContext(workInProgress, renderLanes);\n  const newValue = readContext(context, newProps.unstable_observedBits);\n  let newChildren;\n  if (__DEV__) {\n    ReactCurrentOwner.current = workInProgress;\n    setIsRendering(true);\n    newChildren = render(newValue);\n    setIsRendering(false);\n  } else {\n    newChildren = render(newValue);\n  }\n\n  // React DevTools reads this flag.\n  workInProgress.flags |= PerformedWork;\n  reconcileChildren(current, workInProgress, newChildren, renderLanes);\n  return workInProgress.child;\n}\n\nfunction updateFundamentalComponent(current, workInProgress, renderLanes) {\n  const fundamentalImpl = workInProgress.type.impl;\n  if (fundamentalImpl.reconcileChildren === false) {\n    return null;\n  }\n  const nextProps = workInProgress.pendingProps;\n  const nextChildren = nextProps.children;\n\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  return workInProgress.child;\n}\n\nfunction updateScopeComponent(current, workInProgress, renderLanes) {\n  const nextProps = workInProgress.pendingProps;\n  const nextChildren = nextProps.children;\n\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  return workInProgress.child;\n}\n\nexport function markWorkInProgressReceivedUpdate() {\n  didReceiveUpdate = true;\n}\n\nfunction bailoutOnAlreadyFinishedWork(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  renderLanes: Lanes,\n): Fiber | null {\n  if (current !== null) {\n    // Reuse previous dependencies\n    workInProgress.dependencies = current.dependencies;\n  }\n\n  if (enableProfilerTimer) {\n    // Don't update \"base\" render times for bailouts.\n    stopProfilerTimerIfRunning(workInProgress);\n  }\n\n  markSkippedUpdateLanes(workInProgress.lanes);\n\n  // Check if the children have any pending work.\n  if (!includesSomeLane(renderLanes, workInProgress.childLanes)) {\n    // The children don't have any work either. We can skip them.\n    // TODO: Once we add back resuming, we should check if the children are\n    // a work-in-progress set. If so, we need to transfer their effects.\n    return null;\n  } else {\n    // This fiber doesn't have work, but its subtree does. Clone the child\n    // fibers and continue.\n    cloneChildFibers(current, workInProgress);\n    return workInProgress.child;\n  }\n}\n\nfunction remountFiber(\n  current: Fiber,\n  oldWorkInProgress: Fiber,\n  newWorkInProgress: Fiber,\n): Fiber | null {\n  if (__DEV__) {\n    const returnFiber = oldWorkInProgress.return;\n    if (returnFiber === null) {\n      throw new Error('Cannot swap the root fiber.');\n    }\n\n    // Disconnect from the old current.\n    // It will get deleted.\n    current.alternate = null;\n    oldWorkInProgress.alternate = null;\n\n    // Connect to the new tree.\n    newWorkInProgress.index = oldWorkInProgress.index;\n    newWorkInProgress.sibling = oldWorkInProgress.sibling;\n    newWorkInProgress.return = oldWorkInProgress.return;\n    newWorkInProgress.ref = oldWorkInProgress.ref;\n\n    // Replace the child/sibling pointers above it.\n    if (oldWorkInProgress === returnFiber.child) {\n      returnFiber.child = newWorkInProgress;\n    } else {\n      let prevSibling = returnFiber.child;\n      if (prevSibling === null) {\n        throw new Error('Expected parent to have a child.');\n      }\n      while (prevSibling.sibling !== oldWorkInProgress) {\n        prevSibling = prevSibling.sibling;\n        if (prevSibling === null) {\n          throw new Error('Expected to find the previous sibling.');\n        }\n      }\n      prevSibling.sibling = newWorkInProgress;\n    }\n\n    // Delete the old fiber and place the new one.\n    // Since the old fiber is disconnected, we have to schedule it manually.\n    const last = returnFiber.lastEffect;\n    if (last !== null) {\n      last.nextEffect = current;\n      returnFiber.lastEffect = current;\n    } else {\n      returnFiber.firstEffect = returnFiber.lastEffect = current;\n    }\n    current.nextEffect = null;\n    current.flags = Deletion;\n\n    newWorkInProgress.flags |= Placement;\n\n    // Restart work from the new fiber.\n    return newWorkInProgress;\n  } else {\n    throw new Error(\n      'Did not expect this call in production. ' +\n        'This is a bug in React. Please file an issue.',\n    );\n  }\n}\n\nfunction beginWork(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  renderLanes: Lanes,\n): Fiber | null {\n  const updateLanes = workInProgress.lanes;\n\n  if (__DEV__) {\n    if (workInProgress._debugNeedsRemount && current !== null) {\n      // This will restart the begin phase with a new fiber.\n      return remountFiber(\n        current,\n        workInProgress,\n        createFiberFromTypeAndProps(\n          workInProgress.type,\n          workInProgress.key,\n          workInProgress.pendingProps,\n          workInProgress._debugOwner || null,\n          workInProgress.mode,\n          workInProgress.lanes,\n        ),\n      );\n    }\n  }\n\n  if (current !== null) {\n    const oldProps = current.memoizedProps;\n    const newProps = workInProgress.pendingProps;\n\n    if (\n      oldProps !== newProps ||\n      hasLegacyContextChanged() ||\n      // Force a re-render if the implementation changed due to hot reload:\n      (__DEV__ ? workInProgress.type !== current.type : false)\n    ) {\n      // If props or context changed, mark the fiber as having performed work.\n      // This may be unset if the props are determined to be equal later (memo).\n      didReceiveUpdate = true;\n    } else if (!includesSomeLane(renderLanes, updateLanes)) {\n      didReceiveUpdate = false;\n      // This fiber does not have any pending work. Bailout without entering\n      // the begin phase. There's still some bookkeeping we that needs to be done\n      // in this optimized path, mostly pushing stuff onto the stack.\n      switch (workInProgress.tag) {\n        case HostRoot:\n          pushHostRootContext(workInProgress);\n          resetHydrationState();\n          break;\n        case HostComponent:\n          pushHostContext(workInProgress);\n          break;\n        case ClassComponent: {\n          const Component = workInProgress.type;\n          if (isLegacyContextProvider(Component)) {\n            pushLegacyContextProvider(workInProgress);\n          }\n          break;\n        }\n        case HostPortal:\n          pushHostContainer(\n            workInProgress,\n            workInProgress.stateNode.containerInfo,\n          );\n          break;\n        case ContextProvider: {\n          const newValue = workInProgress.memoizedProps.value;\n          pushProvider(workInProgress, newValue);\n          break;\n        }\n        case Profiler:\n          if (enableProfilerTimer) {\n            // Profiler should only call onRender when one of its descendants actually rendered.\n            const hasChildWork = includesSomeLane(\n              renderLanes,\n              workInProgress.childLanes,\n            );\n            if (hasChildWork) {\n              workInProgress.flags |= Update;\n            }\n\n            // Reset effect durations for the next eventual effect phase.\n            // These are reset during render to allow the DevTools commit hook a chance to read them,\n            const stateNode = workInProgress.stateNode;\n            stateNode.effectDuration = 0;\n            stateNode.passiveEffectDuration = 0;\n          }\n          break;\n        case SuspenseComponent: {\n          const state: SuspenseState | null = workInProgress.memoizedState;\n          if (state !== null) {\n            if (enableSuspenseServerRenderer) {\n              if (state.dehydrated !== null) {\n                pushSuspenseContext(\n                  workInProgress,\n                  setDefaultShallowSuspenseContext(suspenseStackCursor.current),\n                );\n                // We know that this component will suspend again because if it has\n                // been unsuspended it has committed as a resolved Suspense component.\n                // If it needs to be retried, it should have work scheduled on it.\n                workInProgress.flags |= DidCapture;\n                // We should never render the children of a dehydrated boundary until we\n                // upgrade it. We return null instead of bailoutOnAlreadyFinishedWork.\n                return null;\n              }\n            }\n\n            // If this boundary is currently timed out, we need to decide\n            // whether to retry the primary children, or to skip over it and\n            // go straight to the fallback. Check the priority of the primary\n            // child fragment.\n            const primaryChildFragment: Fiber = (workInProgress.child: any);\n            const primaryChildLanes = primaryChildFragment.childLanes;\n            if (includesSomeLane(renderLanes, primaryChildLanes)) {\n              // The primary children have pending work. Use the normal path\n              // to attempt to render the primary children again.\n              return updateSuspenseComponent(\n                current,\n                workInProgress,\n                renderLanes,\n              );\n            } else {\n              // The primary child fragment does not have pending work marked\n              // on it\n              pushSuspenseContext(\n                workInProgress,\n                setDefaultShallowSuspenseContext(suspenseStackCursor.current),\n              );\n              // The primary children do not have pending work with sufficient\n              // priority. Bailout.\n              const child = bailoutOnAlreadyFinishedWork(\n                current,\n                workInProgress,\n                renderLanes,\n              );\n              if (child !== null) {\n                // The fallback children have pending work. Skip over the\n                // primary children and work on the fallback.\n                return child.sibling;\n              } else {\n                return null;\n              }\n            }\n          } else {\n            pushSuspenseContext(\n              workInProgress,\n              setDefaultShallowSuspenseContext(suspenseStackCursor.current),\n            );\n          }\n          break;\n        }\n        case SuspenseListComponent: {\n          const didSuspendBefore = (current.flags & DidCapture) !== NoFlags;\n\n          const hasChildWork = includesSomeLane(\n            renderLanes,\n            workInProgress.childLanes,\n          );\n\n          if (didSuspendBefore) {\n            if (hasChildWork) {\n              // If something was in fallback state last time, and we have all the\n              // same children then we're still in progressive loading state.\n              // Something might get unblocked by state updates or retries in the\n              // tree which will affect the tail. So we need to use the normal\n              // path to compute the correct tail.\n              return updateSuspenseListComponent(\n                current,\n                workInProgress,\n                renderLanes,\n              );\n            }\n            // If none of the children had any work, that means that none of\n            // them got retried so they'll still be blocked in the same way\n            // as before. We can fast bail out.\n            workInProgress.flags |= DidCapture;\n          }\n\n          // If nothing suspended before and we're rendering the same children,\n          // then the tail doesn't matter. Anything new that suspends will work\n          // in the \"together\" mode, so we can continue from the state we had.\n          const renderState = workInProgress.memoizedState;\n          if (renderState !== null) {\n            // Reset to the \"together\" mode in case we've started a different\n            // update in the past but didn't complete it.\n            renderState.rendering = null;\n            renderState.tail = null;\n            renderState.lastEffect = null;\n          }\n          pushSuspenseContext(workInProgress, suspenseStackCursor.current);\n\n          if (hasChildWork) {\n            break;\n          } else {\n            // If none of the children had any work, that means that none of\n            // them got retried so they'll still be blocked in the same way\n            // as before. We can fast bail out.\n            return null;\n          }\n        }\n        case OffscreenComponent:\n        case LegacyHiddenComponent: {\n          // Need to check if the tree still needs to be deferred. This is\n          // almost identical to the logic used in the normal update path,\n          // so we'll just enter that. The only difference is we'll bail out\n          // at the next level instead of this one, because the child props\n          // have not changed. Which is fine.\n          // TODO: Probably should refactor `beginWork` to split the bailout\n          // path from the normal path. I'm tempted to do a labeled break here\n          // but I won't :)\n          workInProgress.lanes = NoLanes;\n          return updateOffscreenComponent(current, workInProgress, renderLanes);\n        }\n      }\n      return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n    } else {\n      if ((current.flags & ForceUpdateForLegacySuspense) !== NoFlags) {\n        // This is a special case that only exists for legacy mode.\n        // See https://github.com/facebook/react/pull/19216.\n        didReceiveUpdate = true;\n      } else {\n        // An update was scheduled on this fiber, but there are no new props\n        // nor legacy context. Set this to false. If an update queue or context\n        // consumer produces a changed value, it will set this to true. Otherwise,\n        // the component will assume the children have not changed and bail out.\n        didReceiveUpdate = false;\n      }\n    }\n  } else {\n    didReceiveUpdate = false;\n  }\n\n  // Before entering the begin phase, clear pending update priority.\n  // TODO: This assumes that we're about to evaluate the component and process\n  // the update queue. However, there's an exception: SimpleMemoComponent\n  // sometimes bails out later in the begin phase. This indicates that we should\n  // move this assignment out of the common path and into each branch.\n  workInProgress.lanes = NoLanes;\n\n  switch (workInProgress.tag) {\n    case IndeterminateComponent: {\n      return mountIndeterminateComponent(\n        current,\n        workInProgress,\n        workInProgress.type,\n        renderLanes,\n      );\n    }\n    case LazyComponent: {\n      const elementType = workInProgress.elementType;\n      return mountLazyComponent(\n        current,\n        workInProgress,\n        elementType,\n        updateLanes,\n        renderLanes,\n      );\n    }\n    case FunctionComponent: {\n      const Component = workInProgress.type;\n      const unresolvedProps = workInProgress.pendingProps;\n      const resolvedProps =\n        workInProgress.elementType === Component\n          ? unresolvedProps\n          : resolveDefaultProps(Component, unresolvedProps);\n      return updateFunctionComponent(\n        current,\n        workInProgress,\n        Component,\n        resolvedProps,\n        renderLanes,\n      );\n    }\n    case ClassComponent: {\n      const Component = workInProgress.type;\n      const unresolvedProps = workInProgress.pendingProps;\n      const resolvedProps =\n        workInProgress.elementType === Component\n          ? unresolvedProps\n          : resolveDefaultProps(Component, unresolvedProps);\n      return updateClassComponent(\n        current,\n        workInProgress,\n        Component,\n        resolvedProps,\n        renderLanes,\n      );\n    }\n    case HostRoot:\n      return updateHostRoot(current, workInProgress, renderLanes);\n    case HostComponent:\n      return updateHostComponent(current, workInProgress, renderLanes);\n    case HostText:\n      return updateHostText(current, workInProgress);\n    case SuspenseComponent:\n      return updateSuspenseComponent(current, workInProgress, renderLanes);\n    case HostPortal:\n      return updatePortalComponent(current, workInProgress, renderLanes);\n    case ForwardRef: {\n      const type = workInProgress.type;\n      const unresolvedProps = workInProgress.pendingProps;\n      const resolvedProps =\n        workInProgress.elementType === type\n          ? unresolvedProps\n          : resolveDefaultProps(type, unresolvedProps);\n      return updateForwardRef(\n        current,\n        workInProgress,\n        type,\n        resolvedProps,\n        renderLanes,\n      );\n    }\n    case Fragment:\n      return updateFragment(current, workInProgress, renderLanes);\n    case Mode:\n      return updateMode(current, workInProgress, renderLanes);\n    case Profiler:\n      return updateProfiler(current, workInProgress, renderLanes);\n    case ContextProvider:\n      return updateContextProvider(current, workInProgress, renderLanes);\n    case ContextConsumer:\n      return updateContextConsumer(current, workInProgress, renderLanes);\n    case MemoComponent: {\n      const type = workInProgress.type;\n      const unresolvedProps = workInProgress.pendingProps;\n      // Resolve outer props first, then resolve inner props.\n      let resolvedProps = resolveDefaultProps(type, unresolvedProps);\n      if (__DEV__) {\n        if (workInProgress.type !== workInProgress.elementType) {\n          const outerPropTypes = type.propTypes;\n          if (outerPropTypes) {\n            checkPropTypes(\n              outerPropTypes,\n              resolvedProps, // Resolved for outer only\n              'prop',\n              getComponentName(type),\n            );\n          }\n        }\n      }\n      resolvedProps = resolveDefaultProps(type.type, resolvedProps);\n      return updateMemoComponent(\n        current,\n        workInProgress,\n        type,\n        resolvedProps,\n        updateLanes,\n        renderLanes,\n      );\n    }\n    case SimpleMemoComponent: {\n      return updateSimpleMemoComponent(\n        current,\n        workInProgress,\n        workInProgress.type,\n        workInProgress.pendingProps,\n        updateLanes,\n        renderLanes,\n      );\n    }\n    case IncompleteClassComponent: {\n      const Component = workInProgress.type;\n      const unresolvedProps = workInProgress.pendingProps;\n      const resolvedProps =\n        workInProgress.elementType === Component\n          ? unresolvedProps\n          : resolveDefaultProps(Component, unresolvedProps);\n      return mountIncompleteClassComponent(\n        current,\n        workInProgress,\n        Component,\n        resolvedProps,\n        renderLanes,\n      );\n    }\n    case SuspenseListComponent: {\n      return updateSuspenseListComponent(current, workInProgress, renderLanes);\n    }\n    case FundamentalComponent: {\n      if (enableFundamentalAPI) {\n        return updateFundamentalComponent(current, workInProgress, renderLanes);\n      }\n      break;\n    }\n    case ScopeComponent: {\n      if (enableScopeAPI) {\n        return updateScopeComponent(current, workInProgress, renderLanes);\n      }\n      break;\n    }\n    case Block: {\n      if (enableBlocksAPI) {\n        const block = workInProgress.type;\n        const props = workInProgress.pendingProps;\n        return updateBlock(current, workInProgress, block, props, renderLanes);\n      }\n      break;\n    }\n    case OffscreenComponent: {\n      return updateOffscreenComponent(current, workInProgress, renderLanes);\n    }\n    case LegacyHiddenComponent: {\n      return updateLegacyHiddenComponent(current, workInProgress, renderLanes);\n    }\n  }\n  invariant(\n    false,\n    'Unknown unit of work tag (%s). This error is likely caused by a bug in ' +\n      'React. Please file an issue.',\n    workInProgress.tag,\n  );\n}\n\nexport {beginWork};\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactInternalTypes';\nimport type {Lanes} from './ReactFiberLane';\nimport type {\n  ReactFundamentalComponentInstance,\n  ReactScopeInstance,\n} from 'shared/ReactTypes';\nimport type {FiberRoot} from './ReactInternalTypes';\nimport type {\n  Instance,\n  Type,\n  Props,\n  Container,\n  ChildSet,\n} from './ReactFiberHostConfig';\nimport type {\n  SuspenseState,\n  SuspenseListRenderState,\n} from './ReactFiberSuspenseComponent.old';\nimport type {SuspenseContext} from './ReactFiberSuspenseContext.old';\nimport type {OffscreenState} from './ReactFiberOffscreenComponent';\n\nimport {resetWorkInProgressVersions as resetMutableSourceWorkInProgressVersions} from './ReactMutableSource.old';\n\nimport {now} from './SchedulerWithReactIntegration.old';\n\nimport {\n  IndeterminateComponent,\n  FunctionComponent,\n  ClassComponent,\n  HostRoot,\n  HostComponent,\n  HostText,\n  HostPortal,\n  ContextProvider,\n  ContextConsumer,\n  ForwardRef,\n  Fragment,\n  Mode,\n  Profiler,\n  SuspenseComponent,\n  SuspenseListComponent,\n  MemoComponent,\n  SimpleMemoComponent,\n  LazyComponent,\n  IncompleteClassComponent,\n  FundamentalComponent,\n  ScopeComponent,\n  Block,\n  OffscreenComponent,\n  LegacyHiddenComponent,\n} from './ReactWorkTags';\nimport {NoMode, BlockingMode, ProfileMode} from './ReactTypeOfMode';\nimport {Ref, Update, NoFlags, DidCapture, Snapshot} from './ReactFiberFlags';\nimport invariant from 'shared/invariant';\n\nimport {\n  createInstance,\n  createTextInstance,\n  appendInitialChild,\n  finalizeInitialChildren,\n  prepareUpdate,\n  supportsMutation,\n  supportsPersistence,\n  cloneInstance,\n  cloneHiddenInstance,\n  cloneHiddenTextInstance,\n  createContainerChildSet,\n  appendChildToContainerChildSet,\n  finalizeContainerChildren,\n  getFundamentalComponentInstance,\n  mountFundamentalComponent,\n  cloneFundamentalInstance,\n  shouldUpdateFundamentalComponent,\n  preparePortalMount,\n  prepareScopeUpdate,\n} from './ReactFiberHostConfig';\nimport {\n  getRootHostContainer,\n  popHostContext,\n  getHostContext,\n  popHostContainer,\n} from './ReactFiberHostContext.old';\nimport {\n  suspenseStackCursor,\n  InvisibleParentSuspenseContext,\n  hasSuspenseContext,\n  popSuspenseContext,\n  pushSuspenseContext,\n  setShallowSuspenseContext,\n  ForceSuspenseFallback,\n  setDefaultShallowSuspenseContext,\n} from './ReactFiberSuspenseContext.old';\nimport {findFirstSuspended} from './ReactFiberSuspenseComponent.old';\nimport {\n  isContextProvider as isLegacyContextProvider,\n  popContext as popLegacyContext,\n  popTopLevelContextObject as popTopLevelLegacyContextObject,\n} from './ReactFiberContext.old';\nimport {popProvider} from './ReactFiberNewContext.old';\nimport {\n  prepareToHydrateHostInstance,\n  prepareToHydrateHostTextInstance,\n  prepareToHydrateHostSuspenseInstance,\n  popHydrationState,\n  resetHydrationState,\n  getIsHydrating,\n} from './ReactFiberHydrationContext.old';\nimport {\n  enableSchedulerTracing,\n  enableSuspenseCallback,\n  enableSuspenseServerRenderer,\n  enableFundamentalAPI,\n  enableScopeAPI,\n  enableBlocksAPI,\n  enableProfilerTimer,\n} from 'shared/ReactFeatureFlags';\nimport {\n  markSpawnedWork,\n  renderDidSuspend,\n  renderDidSuspendDelayIfPossible,\n  renderHasNotSuspendedYet,\n  popRenderLanes,\n  getRenderTargetTime,\n} from './ReactFiberWorkLoop.old';\nimport {createFundamentalStateInstance} from './ReactFiberFundamental.old';\nimport {OffscreenLane, SomeRetryLane} from './ReactFiberLane';\nimport {resetChildFibers} from './ReactChildFiber.old';\nimport {createScopeInstance} from './ReactFiberScope.old';\nimport {transferActualDuration} from './ReactProfilerTimer.old';\n\nfunction markUpdate(workInProgress: Fiber) {\n  // Tag the fiber with an update effect. This turns a Placement into\n  // a PlacementAndUpdate.\n  workInProgress.flags |= Update;\n}\n\nfunction markRef(workInProgress: Fiber) {\n  workInProgress.flags |= Ref;\n}\n\nlet appendAllChildren;\nlet updateHostContainer;\nlet updateHostComponent;\nlet updateHostText;\nif (supportsMutation) {\n  // Mutation mode\n\n  appendAllChildren = function(\n    parent: Instance,\n    workInProgress: Fiber,\n    needsVisibilityToggle: boolean,\n    isHidden: boolean,\n  ) {\n    // We only have the top Fiber that was created but we need recurse down its\n    // children to find all the terminal nodes.\n    let node = workInProgress.child;\n    while (node !== null) {\n      if (node.tag === HostComponent || node.tag === HostText) {\n        appendInitialChild(parent, node.stateNode);\n      } else if (enableFundamentalAPI && node.tag === FundamentalComponent) {\n        appendInitialChild(parent, node.stateNode.instance);\n      } else if (node.tag === HostPortal) {\n        // If we have a portal child, then we don't want to traverse\n        // down its children. Instead, we'll get insertions from each child in\n        // the portal directly.\n      } else if (node.child !== null) {\n        node.child.return = node;\n        node = node.child;\n        continue;\n      }\n      if (node === workInProgress) {\n        return;\n      }\n      while (node.sibling === null) {\n        if (node.return === null || node.return === workInProgress) {\n          return;\n        }\n        node = node.return;\n      }\n      node.sibling.return = node.return;\n      node = node.sibling;\n    }\n  };\n\n  updateHostContainer = function(workInProgress: Fiber) {\n    // Noop\n  };\n  updateHostComponent = function(\n    current: Fiber,\n    workInProgress: Fiber,\n    type: Type,\n    newProps: Props,\n    rootContainerInstance: Container,\n  ) {\n    // If we have an alternate, that means this is an update and we need to\n    // schedule a side-effect to do the updates.\n    const oldProps = current.memoizedProps;\n    if (oldProps === newProps) {\n      // In mutation mode, this is sufficient for a bailout because\n      // we won't touch this node even if children changed.\n      return;\n    }\n\n    // If we get updated because one of our children updated, we don't\n    // have newProps so we'll have to reuse them.\n    // TODO: Split the update API as separate for the props vs. children.\n    // Even better would be if children weren't special cased at all tho.\n    const instance: Instance = workInProgress.stateNode;\n    const currentHostContext = getHostContext();\n    // TODO: Experiencing an error where oldProps is null. Suggests a host\n    // component is hitting the resume path. Figure out why. Possibly\n    // related to `hidden`.\n    const updatePayload = prepareUpdate(\n      instance,\n      type,\n      oldProps,\n      newProps,\n      rootContainerInstance,\n      currentHostContext,\n    );\n    // TODO: Type this specific to this type of component.\n    workInProgress.updateQueue = (updatePayload: any);\n    // If the update payload indicates that there is a change or if there\n    // is a new ref we mark this as an update. All the work is done in commitWork.\n    if (updatePayload) {\n      markUpdate(workInProgress);\n    }\n  };\n  updateHostText = function(\n    current: Fiber,\n    workInProgress: Fiber,\n    oldText: string,\n    newText: string,\n  ) {\n    // If the text differs, mark it as an update. All the work in done in commitWork.\n    if (oldText !== newText) {\n      markUpdate(workInProgress);\n    }\n  };\n} else if (supportsPersistence) {\n  // Persistent host tree mode\n\n  appendAllChildren = function(\n    parent: Instance,\n    workInProgress: Fiber,\n    needsVisibilityToggle: boolean,\n    isHidden: boolean,\n  ) {\n    // We only have the top Fiber that was created but we need recurse down its\n    // children to find all the terminal nodes.\n    let node = workInProgress.child;\n    while (node !== null) {\n      // eslint-disable-next-line no-labels\n      branches: if (node.tag === HostComponent) {\n        let instance = node.stateNode;\n        if (needsVisibilityToggle && isHidden) {\n          // This child is inside a timed out tree. Hide it.\n          const props = node.memoizedProps;\n          const type = node.type;\n          instance = cloneHiddenInstance(instance, type, props, node);\n        }\n        appendInitialChild(parent, instance);\n      } else if (node.tag === HostText) {\n        let instance = node.stateNode;\n        if (needsVisibilityToggle && isHidden) {\n          // This child is inside a timed out tree. Hide it.\n          const text = node.memoizedProps;\n          instance = cloneHiddenTextInstance(instance, text, node);\n        }\n        appendInitialChild(parent, instance);\n      } else if (enableFundamentalAPI && node.tag === FundamentalComponent) {\n        let instance = node.stateNode.instance;\n        if (needsVisibilityToggle && isHidden) {\n          // This child is inside a timed out tree. Hide it.\n          const props = node.memoizedProps;\n          const type = node.type;\n          instance = cloneHiddenInstance(instance, type, props, node);\n        }\n        appendInitialChild(parent, instance);\n      } else if (node.tag === HostPortal) {\n        // If we have a portal child, then we don't want to traverse\n        // down its children. Instead, we'll get insertions from each child in\n        // the portal directly.\n      } else if (node.tag === SuspenseComponent) {\n        if ((node.flags & Update) !== NoFlags) {\n          // Need to toggle the visibility of the primary children.\n          const newIsHidden = node.memoizedState !== null;\n          if (newIsHidden) {\n            const primaryChildParent = node.child;\n            if (primaryChildParent !== null) {\n              if (primaryChildParent.child !== null) {\n                primaryChildParent.child.return = primaryChildParent;\n                appendAllChildren(\n                  parent,\n                  primaryChildParent,\n                  true,\n                  newIsHidden,\n                );\n              }\n              const fallbackChildParent = primaryChildParent.sibling;\n              if (fallbackChildParent !== null) {\n                fallbackChildParent.return = node;\n                node = fallbackChildParent;\n                continue;\n              }\n            }\n          }\n        }\n        if (node.child !== null) {\n          // Continue traversing like normal\n          node.child.return = node;\n          node = node.child;\n          continue;\n        }\n      } else if (node.child !== null) {\n        node.child.return = node;\n        node = node.child;\n        continue;\n      }\n      // $FlowFixMe This is correct but Flow is confused by the labeled break.\n      node = (node: Fiber);\n      if (node === workInProgress) {\n        return;\n      }\n      while (node.sibling === null) {\n        if (node.return === null || node.return === workInProgress) {\n          return;\n        }\n        node = node.return;\n      }\n      node.sibling.return = node.return;\n      node = node.sibling;\n    }\n  };\n\n  // An unfortunate fork of appendAllChildren because we have two different parent types.\n  const appendAllChildrenToContainer = function(\n    containerChildSet: ChildSet,\n    workInProgress: Fiber,\n    needsVisibilityToggle: boolean,\n    isHidden: boolean,\n  ) {\n    // We only have the top Fiber that was created but we need recurse down its\n    // children to find all the terminal nodes.\n    let node = workInProgress.child;\n    while (node !== null) {\n      // eslint-disable-next-line no-labels\n      branches: if (node.tag === HostComponent) {\n        let instance = node.stateNode;\n        if (needsVisibilityToggle && isHidden) {\n          // This child is inside a timed out tree. Hide it.\n          const props = node.memoizedProps;\n          const type = node.type;\n          instance = cloneHiddenInstance(instance, type, props, node);\n        }\n        appendChildToContainerChildSet(containerChildSet, instance);\n      } else if (node.tag === HostText) {\n        let instance = node.stateNode;\n        if (needsVisibilityToggle && isHidden) {\n          // This child is inside a timed out tree. Hide it.\n          const text = node.memoizedProps;\n          instance = cloneHiddenTextInstance(instance, text, node);\n        }\n        appendChildToContainerChildSet(containerChildSet, instance);\n      } else if (enableFundamentalAPI && node.tag === FundamentalComponent) {\n        let instance = node.stateNode.instance;\n        if (needsVisibilityToggle && isHidden) {\n          // This child is inside a timed out tree. Hide it.\n          const props = node.memoizedProps;\n          const type = node.type;\n          instance = cloneHiddenInstance(instance, type, props, node);\n        }\n        appendChildToContainerChildSet(containerChildSet, instance);\n      } else if (node.tag === HostPortal) {\n        // If we have a portal child, then we don't want to traverse\n        // down its children. Instead, we'll get insertions from each child in\n        // the portal directly.\n      } else if (node.tag === SuspenseComponent) {\n        if ((node.flags & Update) !== NoFlags) {\n          // Need to toggle the visibility of the primary children.\n          const newIsHidden = node.memoizedState !== null;\n          if (newIsHidden) {\n            const primaryChildParent = node.child;\n            if (primaryChildParent !== null) {\n              if (primaryChildParent.child !== null) {\n                primaryChildParent.child.return = primaryChildParent;\n                appendAllChildrenToContainer(\n                  containerChildSet,\n                  primaryChildParent,\n                  true,\n                  newIsHidden,\n                );\n              }\n              const fallbackChildParent = primaryChildParent.sibling;\n              if (fallbackChildParent !== null) {\n                fallbackChildParent.return = node;\n                node = fallbackChildParent;\n                continue;\n              }\n            }\n          }\n        }\n        if (node.child !== null) {\n          // Continue traversing like normal\n          node.child.return = node;\n          node = node.child;\n          continue;\n        }\n      } else if (node.child !== null) {\n        node.child.return = node;\n        node = node.child;\n        continue;\n      }\n      // $FlowFixMe This is correct but Flow is confused by the labeled break.\n      node = (node: Fiber);\n      if (node === workInProgress) {\n        return;\n      }\n      while (node.sibling === null) {\n        if (node.return === null || node.return === workInProgress) {\n          return;\n        }\n        node = node.return;\n      }\n      node.sibling.return = node.return;\n      node = node.sibling;\n    }\n  };\n  updateHostContainer = function(workInProgress: Fiber) {\n    const portalOrRoot: {\n      containerInfo: Container,\n      pendingChildren: ChildSet,\n      ...\n    } = workInProgress.stateNode;\n    const childrenUnchanged = workInProgress.firstEffect === null;\n    if (childrenUnchanged) {\n      // No changes, just reuse the existing instance.\n    } else {\n      const container = portalOrRoot.containerInfo;\n      const newChildSet = createContainerChildSet(container);\n      // If children might have changed, we have to add them all to the set.\n      appendAllChildrenToContainer(newChildSet, workInProgress, false, false);\n      portalOrRoot.pendingChildren = newChildSet;\n      // Schedule an update on the container to swap out the container.\n      markUpdate(workInProgress);\n      finalizeContainerChildren(container, newChildSet);\n    }\n  };\n  updateHostComponent = function(\n    current: Fiber,\n    workInProgress: Fiber,\n    type: Type,\n    newProps: Props,\n    rootContainerInstance: Container,\n  ) {\n    const currentInstance = current.stateNode;\n    const oldProps = current.memoizedProps;\n    // If there are no effects associated with this node, then none of our children had any updates.\n    // This guarantees that we can reuse all of them.\n    const childrenUnchanged = workInProgress.firstEffect === null;\n    if (childrenUnchanged && oldProps === newProps) {\n      // No changes, just reuse the existing instance.\n      // Note that this might release a previous clone.\n      workInProgress.stateNode = currentInstance;\n      return;\n    }\n    const recyclableInstance: Instance = workInProgress.stateNode;\n    const currentHostContext = getHostContext();\n    let updatePayload = null;\n    if (oldProps !== newProps) {\n      updatePayload = prepareUpdate(\n        recyclableInstance,\n        type,\n        oldProps,\n        newProps,\n        rootContainerInstance,\n        currentHostContext,\n      );\n    }\n    if (childrenUnchanged && updatePayload === null) {\n      // No changes, just reuse the existing instance.\n      // Note that this might release a previous clone.\n      workInProgress.stateNode = currentInstance;\n      return;\n    }\n    const newInstance = cloneInstance(\n      currentInstance,\n      updatePayload,\n      type,\n      oldProps,\n      newProps,\n      workInProgress,\n      childrenUnchanged,\n      recyclableInstance,\n    );\n    if (\n      finalizeInitialChildren(\n        newInstance,\n        type,\n        newProps,\n        rootContainerInstance,\n        currentHostContext,\n      )\n    ) {\n      markUpdate(workInProgress);\n    }\n    workInProgress.stateNode = newInstance;\n    if (childrenUnchanged) {\n      // If there are no other effects in this tree, we need to flag this node as having one.\n      // Even though we're not going to use it for anything.\n      // Otherwise parents won't know that there are new children to propagate upwards.\n      markUpdate(workInProgress);\n    } else {\n      // If children might have changed, we have to add them all to the set.\n      appendAllChildren(newInstance, workInProgress, false, false);\n    }\n  };\n  updateHostText = function(\n    current: Fiber,\n    workInProgress: Fiber,\n    oldText: string,\n    newText: string,\n  ) {\n    if (oldText !== newText) {\n      // If the text content differs, we'll create a new text instance for it.\n      const rootContainerInstance = getRootHostContainer();\n      const currentHostContext = getHostContext();\n      workInProgress.stateNode = createTextInstance(\n        newText,\n        rootContainerInstance,\n        currentHostContext,\n        workInProgress,\n      );\n      // We'll have to mark it as having an effect, even though we won't use the effect for anything.\n      // This lets the parents know that at least one of their children has changed.\n      markUpdate(workInProgress);\n    } else {\n      workInProgress.stateNode = current.stateNode;\n    }\n  };\n} else {\n  // No host operations\n  updateHostContainer = function(workInProgress: Fiber) {\n    // Noop\n  };\n  updateHostComponent = function(\n    current: Fiber,\n    workInProgress: Fiber,\n    type: Type,\n    newProps: Props,\n    rootContainerInstance: Container,\n  ) {\n    // Noop\n  };\n  updateHostText = function(\n    current: Fiber,\n    workInProgress: Fiber,\n    oldText: string,\n    newText: string,\n  ) {\n    // Noop\n  };\n}\n\nfunction cutOffTailIfNeeded(\n  renderState: SuspenseListRenderState,\n  hasRenderedATailFallback: boolean,\n) {\n  if (getIsHydrating()) {\n    // If we're hydrating, we should consume as many items as we can\n    // so we don't leave any behind.\n    return;\n  }\n  switch (renderState.tailMode) {\n    case 'hidden': {\n      // Any insertions at the end of the tail list after this point\n      // should be invisible. If there are already mounted boundaries\n      // anything before them are not considered for collapsing.\n      // Therefore we need to go through the whole tail to find if\n      // there are any.\n      let tailNode = renderState.tail;\n      let lastTailNode = null;\n      while (tailNode !== null) {\n        if (tailNode.alternate !== null) {\n          lastTailNode = tailNode;\n        }\n        tailNode = tailNode.sibling;\n      }\n      // Next we're simply going to delete all insertions after the\n      // last rendered item.\n      if (lastTailNode === null) {\n        // All remaining items in the tail are insertions.\n        renderState.tail = null;\n      } else {\n        // Detach the insertion after the last node that was already\n        // inserted.\n        lastTailNode.sibling = null;\n      }\n      break;\n    }\n    case 'collapsed': {\n      // Any insertions at the end of the tail list after this point\n      // should be invisible. If there are already mounted boundaries\n      // anything before them are not considered for collapsing.\n      // Therefore we need to go through the whole tail to find if\n      // there are any.\n      let tailNode = renderState.tail;\n      let lastTailNode = null;\n      while (tailNode !== null) {\n        if (tailNode.alternate !== null) {\n          lastTailNode = tailNode;\n        }\n        tailNode = tailNode.sibling;\n      }\n      // Next we're simply going to delete all insertions after the\n      // last rendered item.\n      if (lastTailNode === null) {\n        // All remaining items in the tail are insertions.\n        if (!hasRenderedATailFallback && renderState.tail !== null) {\n          // We suspended during the head. We want to show at least one\n          // row at the tail. So we'll keep on and cut off the rest.\n          renderState.tail.sibling = null;\n        } else {\n          renderState.tail = null;\n        }\n      } else {\n        // Detach the insertion after the last node that was already\n        // inserted.\n        lastTailNode.sibling = null;\n      }\n      break;\n    }\n  }\n}\n\nfunction completeWork(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  renderLanes: Lanes,\n): Fiber | null {\n  const newProps = workInProgress.pendingProps;\n\n  switch (workInProgress.tag) {\n    case IndeterminateComponent:\n    case LazyComponent:\n    case SimpleMemoComponent:\n    case FunctionComponent:\n    case ForwardRef:\n    case Fragment:\n    case Mode:\n    case Profiler:\n    case ContextConsumer:\n    case MemoComponent:\n      return null;\n    case ClassComponent: {\n      const Component = workInProgress.type;\n      if (isLegacyContextProvider(Component)) {\n        popLegacyContext(workInProgress);\n      }\n      return null;\n    }\n    case HostRoot: {\n      popHostContainer(workInProgress);\n      popTopLevelLegacyContextObject(workInProgress);\n      resetMutableSourceWorkInProgressVersions();\n      const fiberRoot = (workInProgress.stateNode: FiberRoot);\n      if (fiberRoot.pendingContext) {\n        fiberRoot.context = fiberRoot.pendingContext;\n        fiberRoot.pendingContext = null;\n      }\n      if (current === null || current.child === null) {\n        // If we hydrated, pop so that we can delete any remaining children\n        // that weren't hydrated.\n        const wasHydrated = popHydrationState(workInProgress);\n        if (wasHydrated) {\n          // If we hydrated, then we'll need to schedule an update for\n          // the commit side-effects on the root.\n          markUpdate(workInProgress);\n        } else if (!fiberRoot.hydrate) {\n          // Schedule an effect to clear this container at the start of the next commit.\n          // This handles the case of React rendering into a container with previous children.\n          // It's also safe to do for updates too, because current.child would only be null\n          // if the previous render was null (so the the container would already be empty).\n          workInProgress.flags |= Snapshot;\n        }\n      }\n      updateHostContainer(workInProgress);\n      return null;\n    }\n    case HostComponent: {\n      popHostContext(workInProgress);\n      const rootContainerInstance = getRootHostContainer();\n      const type = workInProgress.type;\n      if (current !== null && workInProgress.stateNode != null) {\n        updateHostComponent(\n          current,\n          workInProgress,\n          type,\n          newProps,\n          rootContainerInstance,\n        );\n\n        if (current.ref !== workInProgress.ref) {\n          markRef(workInProgress);\n        }\n      } else {\n        if (!newProps) {\n          invariant(\n            workInProgress.stateNode !== null,\n            'We must have new props for new mounts. This error is likely ' +\n              'caused by a bug in React. Please file an issue.',\n          );\n          // This can happen when we abort work.\n          return null;\n        }\n\n        const currentHostContext = getHostContext();\n        // TODO: Move createInstance to beginWork and keep it on a context\n        // \"stack\" as the parent. Then append children as we go in beginWork\n        // or completeWork depending on whether we want to add them top->down or\n        // bottom->up. Top->down is faster in IE11.\n        const wasHydrated = popHydrationState(workInProgress);\n        if (wasHydrated) {\n          // TODO: Move this and createInstance step into the beginPhase\n          // to consolidate.\n          if (\n            prepareToHydrateHostInstance(\n              workInProgress,\n              rootContainerInstance,\n              currentHostContext,\n            )\n          ) {\n            // If changes to the hydrated node need to be applied at the\n            // commit-phase we mark this as such.\n            markUpdate(workInProgress);\n          }\n        } else {\n          const instance = createInstance(\n            type,\n            newProps,\n            rootContainerInstance,\n            currentHostContext,\n            workInProgress,\n          );\n\n          appendAllChildren(instance, workInProgress, false, false);\n\n          workInProgress.stateNode = instance;\n\n          // Certain renderers require commit-time effects for initial mount.\n          // (eg DOM renderer supports auto-focus for certain elements).\n          // Make sure such renderers get scheduled for later work.\n          if (\n            finalizeInitialChildren(\n              instance,\n              type,\n              newProps,\n              rootContainerInstance,\n              currentHostContext,\n            )\n          ) {\n            markUpdate(workInProgress);\n          }\n        }\n\n        if (workInProgress.ref !== null) {\n          // If there is a ref on a host node we need to schedule a callback\n          markRef(workInProgress);\n        }\n      }\n      return null;\n    }\n    case HostText: {\n      const newText = newProps;\n      if (current && workInProgress.stateNode != null) {\n        const oldText = current.memoizedProps;\n        // If we have an alternate, that means this is an update and we need\n        // to schedule a side-effect to do the updates.\n        updateHostText(current, workInProgress, oldText, newText);\n      } else {\n        if (typeof newText !== 'string') {\n          invariant(\n            workInProgress.stateNode !== null,\n            'We must have new props for new mounts. This error is likely ' +\n              'caused by a bug in React. Please file an issue.',\n          );\n          // This can happen when we abort work.\n        }\n        const rootContainerInstance = getRootHostContainer();\n        const currentHostContext = getHostContext();\n        const wasHydrated = popHydrationState(workInProgress);\n        if (wasHydrated) {\n          if (prepareToHydrateHostTextInstance(workInProgress)) {\n            markUpdate(workInProgress);\n          }\n        } else {\n          workInProgress.stateNode = createTextInstance(\n            newText,\n            rootContainerInstance,\n            currentHostContext,\n            workInProgress,\n          );\n        }\n      }\n      return null;\n    }\n    case SuspenseComponent: {\n      popSuspenseContext(workInProgress);\n      const nextState: null | SuspenseState = workInProgress.memoizedState;\n\n      if (enableSuspenseServerRenderer) {\n        if (nextState !== null && nextState.dehydrated !== null) {\n          if (current === null) {\n            const wasHydrated = popHydrationState(workInProgress);\n            invariant(\n              wasHydrated,\n              'A dehydrated suspense component was completed without a hydrated node. ' +\n                'This is probably a bug in React.',\n            );\n            prepareToHydrateHostSuspenseInstance(workInProgress);\n            if (enableSchedulerTracing) {\n              markSpawnedWork(OffscreenLane);\n            }\n            return null;\n          } else {\n            // We should never have been in a hydration state if we didn't have a current.\n            // However, in some of those paths, we might have reentered a hydration state\n            // and then we might be inside a hydration state. In that case, we'll need to exit out of it.\n            resetHydrationState();\n            if ((workInProgress.flags & DidCapture) === NoFlags) {\n              // This boundary did not suspend so it's now hydrated and unsuspended.\n              workInProgress.memoizedState = null;\n            }\n            // If nothing suspended, we need to schedule an effect to mark this boundary\n            // as having hydrated so events know that they're free to be invoked.\n            // It's also a signal to replay events and the suspense callback.\n            // If something suspended, schedule an effect to attach retry listeners.\n            // So we might as well always mark this.\n            workInProgress.flags |= Update;\n            return null;\n          }\n        }\n      }\n\n      if ((workInProgress.flags & DidCapture) !== NoFlags) {\n        // Something suspended. Re-render with the fallback children.\n        workInProgress.lanes = renderLanes;\n        // Do not reset the effect list.\n        if (\n          enableProfilerTimer &&\n          (workInProgress.mode & ProfileMode) !== NoMode\n        ) {\n          transferActualDuration(workInProgress);\n        }\n        return workInProgress;\n      }\n\n      const nextDidTimeout = nextState !== null;\n      let prevDidTimeout = false;\n      if (current === null) {\n        if (workInProgress.memoizedProps.fallback !== undefined) {\n          popHydrationState(workInProgress);\n        }\n      } else {\n        const prevState: null | SuspenseState = current.memoizedState;\n        prevDidTimeout = prevState !== null;\n      }\n\n      if (nextDidTimeout && !prevDidTimeout) {\n        // If this subtreee is running in blocking mode we can suspend,\n        // otherwise we won't suspend.\n        // TODO: This will still suspend a synchronous tree if anything\n        // in the concurrent tree already suspended during this render.\n        // This is a known bug.\n        if ((workInProgress.mode & BlockingMode) !== NoMode) {\n          // TODO: Move this back to throwException because this is too late\n          // if this is a large tree which is common for initial loads. We\n          // don't know if we should restart a render or not until we get\n          // this marker, and this is too late.\n          // If this render already had a ping or lower pri updates,\n          // and this is the first time we know we're going to suspend we\n          // should be able to immediately restart from within throwException.\n          const hasInvisibleChildContext =\n            current === null &&\n            workInProgress.memoizedProps.unstable_avoidThisFallback !== true;\n          if (\n            hasInvisibleChildContext ||\n            hasSuspenseContext(\n              suspenseStackCursor.current,\n              (InvisibleParentSuspenseContext: SuspenseContext),\n            )\n          ) {\n            // If this was in an invisible tree or a new render, then showing\n            // this boundary is ok.\n            renderDidSuspend();\n          } else {\n            // Otherwise, we're going to have to hide content so we should\n            // suspend for longer if possible.\n            renderDidSuspendDelayIfPossible();\n          }\n        }\n      }\n\n      if (supportsPersistence) {\n        // TODO: Only schedule updates if not prevDidTimeout.\n        if (nextDidTimeout) {\n          // If this boundary just timed out, schedule an effect to attach a\n          // retry listener to the promise. This flag is also used to hide the\n          // primary children.\n          workInProgress.flags |= Update;\n        }\n      }\n      if (supportsMutation) {\n        // TODO: Only schedule updates if these values are non equal, i.e. it changed.\n        if (nextDidTimeout || prevDidTimeout) {\n          // If this boundary just timed out, schedule an effect to attach a\n          // retry listener to the promise. This flag is also used to hide the\n          // primary children. In mutation mode, we also need the flag to\n          // *unhide* children that were previously hidden, so check if this\n          // is currently timed out, too.\n          workInProgress.flags |= Update;\n        }\n      }\n      if (\n        enableSuspenseCallback &&\n        workInProgress.updateQueue !== null &&\n        workInProgress.memoizedProps.suspenseCallback != null\n      ) {\n        // Always notify the callback\n        workInProgress.flags |= Update;\n      }\n      return null;\n    }\n    case HostPortal:\n      popHostContainer(workInProgress);\n      updateHostContainer(workInProgress);\n      if (current === null) {\n        preparePortalMount(workInProgress.stateNode.containerInfo);\n      }\n      return null;\n    case ContextProvider:\n      // Pop provider fiber\n      popProvider(workInProgress);\n      return null;\n    case IncompleteClassComponent: {\n      // Same as class component case. I put it down here so that the tags are\n      // sequential to ensure this switch is compiled to a jump table.\n      const Component = workInProgress.type;\n      if (isLegacyContextProvider(Component)) {\n        popLegacyContext(workInProgress);\n      }\n      return null;\n    }\n    case SuspenseListComponent: {\n      popSuspenseContext(workInProgress);\n\n      const renderState: null | SuspenseListRenderState =\n        workInProgress.memoizedState;\n\n      if (renderState === null) {\n        // We're running in the default, \"independent\" mode.\n        // We don't do anything in this mode.\n        return null;\n      }\n\n      let didSuspendAlready = (workInProgress.flags & DidCapture) !== NoFlags;\n\n      const renderedTail = renderState.rendering;\n      if (renderedTail === null) {\n        // We just rendered the head.\n        if (!didSuspendAlready) {\n          // This is the first pass. We need to figure out if anything is still\n          // suspended in the rendered set.\n\n          // If new content unsuspended, but there's still some content that\n          // didn't. Then we need to do a second pass that forces everything\n          // to keep showing their fallbacks.\n\n          // We might be suspended if something in this render pass suspended, or\n          // something in the previous committed pass suspended. Otherwise,\n          // there's no chance so we can skip the expensive call to\n          // findFirstSuspended.\n          const cannotBeSuspended =\n            renderHasNotSuspendedYet() &&\n            (current === null || (current.flags & DidCapture) === NoFlags);\n          if (!cannotBeSuspended) {\n            let row = workInProgress.child;\n            while (row !== null) {\n              const suspended = findFirstSuspended(row);\n              if (suspended !== null) {\n                didSuspendAlready = true;\n                workInProgress.flags |= DidCapture;\n                cutOffTailIfNeeded(renderState, false);\n\n                // If this is a newly suspended tree, it might not get committed as\n                // part of the second pass. In that case nothing will subscribe to\n                // its thennables. Instead, we'll transfer its thennables to the\n                // SuspenseList so that it can retry if they resolve.\n                // There might be multiple of these in the list but since we're\n                // going to wait for all of them anyway, it doesn't really matter\n                // which ones gets to ping. In theory we could get clever and keep\n                // track of how many dependencies remain but it gets tricky because\n                // in the meantime, we can add/remove/change items and dependencies.\n                // We might bail out of the loop before finding any but that\n                // doesn't matter since that means that the other boundaries that\n                // we did find already has their listeners attached.\n                const newThennables = suspended.updateQueue;\n                if (newThennables !== null) {\n                  workInProgress.updateQueue = newThennables;\n                  workInProgress.flags |= Update;\n                }\n\n                // Rerender the whole list, but this time, we'll force fallbacks\n                // to stay in place.\n                // Reset the effect list before doing the second pass since that's now invalid.\n                if (renderState.lastEffect === null) {\n                  workInProgress.firstEffect = null;\n                }\n                workInProgress.lastEffect = renderState.lastEffect;\n                // Reset the child fibers to their original state.\n                resetChildFibers(workInProgress, renderLanes);\n\n                // Set up the Suspense Context to force suspense and immediately\n                // rerender the children.\n                pushSuspenseContext(\n                  workInProgress,\n                  setShallowSuspenseContext(\n                    suspenseStackCursor.current,\n                    ForceSuspenseFallback,\n                  ),\n                );\n                return workInProgress.child;\n              }\n              row = row.sibling;\n            }\n          }\n\n          if (renderState.tail !== null && now() > getRenderTargetTime()) {\n            // We have already passed our CPU deadline but we still have rows\n            // left in the tail. We'll just give up further attempts to render\n            // the main content and only render fallbacks.\n            workInProgress.flags |= DidCapture;\n            didSuspendAlready = true;\n\n            cutOffTailIfNeeded(renderState, false);\n\n            // Since nothing actually suspended, there will nothing to ping this\n            // to get it started back up to attempt the next item. While in terms\n            // of priority this work has the same priority as this current render,\n            // it's not part of the same transition once the transition has\n            // committed. If it's sync, we still want to yield so that it can be\n            // painted. Conceptually, this is really the same as pinging.\n            // We can use any RetryLane even if it's the one currently rendering\n            // since we're leaving it behind on this node.\n            workInProgress.lanes = SomeRetryLane;\n            if (enableSchedulerTracing) {\n              markSpawnedWork(SomeRetryLane);\n            }\n          }\n        } else {\n          cutOffTailIfNeeded(renderState, false);\n        }\n        // Next we're going to render the tail.\n      } else {\n        // Append the rendered row to the child list.\n        if (!didSuspendAlready) {\n          const suspended = findFirstSuspended(renderedTail);\n          if (suspended !== null) {\n            workInProgress.flags |= DidCapture;\n            didSuspendAlready = true;\n\n            // Ensure we transfer the update queue to the parent so that it doesn't\n            // get lost if this row ends up dropped during a second pass.\n            const newThennables = suspended.updateQueue;\n            if (newThennables !== null) {\n              workInProgress.updateQueue = newThennables;\n              workInProgress.flags |= Update;\n            }\n\n            cutOffTailIfNeeded(renderState, true);\n            // This might have been modified.\n            if (\n              renderState.tail === null &&\n              renderState.tailMode === 'hidden' &&\n              !renderedTail.alternate &&\n              !getIsHydrating() // We don't cut it if we're hydrating.\n            ) {\n              // We need to delete the row we just rendered.\n              // Reset the effect list to what it was before we rendered this\n              // child. The nested children have already appended themselves.\n              const lastEffect = (workInProgress.lastEffect =\n                renderState.lastEffect);\n              // Remove any effects that were appended after this point.\n              if (lastEffect !== null) {\n                lastEffect.nextEffect = null;\n              }\n              // We're done.\n              return null;\n            }\n          } else if (\n            // The time it took to render last row is greater than the remaining\n            // time we have to render. So rendering one more row would likely\n            // exceed it.\n            now() * 2 - renderState.renderingStartTime >\n              getRenderTargetTime() &&\n            renderLanes !== OffscreenLane\n          ) {\n            // We have now passed our CPU deadline and we'll just give up further\n            // attempts to render the main content and only render fallbacks.\n            // The assumption is that this is usually faster.\n            workInProgress.flags |= DidCapture;\n            didSuspendAlready = true;\n\n            cutOffTailIfNeeded(renderState, false);\n\n            // Since nothing actually suspended, there will nothing to ping this\n            // to get it started back up to attempt the next item. While in terms\n            // of priority this work has the same priority as this current render,\n            // it's not part of the same transition once the transition has\n            // committed. If it's sync, we still want to yield so that it can be\n            // painted. Conceptually, this is really the same as pinging.\n            // We can use any RetryLane even if it's the one currently rendering\n            // since we're leaving it behind on this node.\n            workInProgress.lanes = SomeRetryLane;\n            if (enableSchedulerTracing) {\n              markSpawnedWork(SomeRetryLane);\n            }\n          }\n        }\n        if (renderState.isBackwards) {\n          // The effect list of the backwards tail will have been added\n          // to the end. This breaks the guarantee that life-cycles fire in\n          // sibling order but that isn't a strong guarantee promised by React.\n          // Especially since these might also just pop in during future commits.\n          // Append to the beginning of the list.\n          renderedTail.sibling = workInProgress.child;\n          workInProgress.child = renderedTail;\n        } else {\n          const previousSibling = renderState.last;\n          if (previousSibling !== null) {\n            previousSibling.sibling = renderedTail;\n          } else {\n            workInProgress.child = renderedTail;\n          }\n          renderState.last = renderedTail;\n        }\n      }\n\n      if (renderState.tail !== null) {\n        // We still have tail rows to render.\n        // Pop a row.\n        const next = renderState.tail;\n        renderState.rendering = next;\n        renderState.tail = next.sibling;\n        renderState.lastEffect = workInProgress.lastEffect;\n        renderState.renderingStartTime = now();\n        next.sibling = null;\n\n        // Restore the context.\n        // TODO: We can probably just avoid popping it instead and only\n        // setting it the first time we go from not suspended to suspended.\n        let suspenseContext = suspenseStackCursor.current;\n        if (didSuspendAlready) {\n          suspenseContext = setShallowSuspenseContext(\n            suspenseContext,\n            ForceSuspenseFallback,\n          );\n        } else {\n          suspenseContext = setDefaultShallowSuspenseContext(suspenseContext);\n        }\n        pushSuspenseContext(workInProgress, suspenseContext);\n        // Do a pass over the next row.\n        return next;\n      }\n      return null;\n    }\n    case FundamentalComponent: {\n      if (enableFundamentalAPI) {\n        const fundamentalImpl = workInProgress.type.impl;\n        let fundamentalInstance: ReactFundamentalComponentInstance<\n          any,\n          any,\n        > | null = workInProgress.stateNode;\n\n        if (fundamentalInstance === null) {\n          const getInitialState = fundamentalImpl.getInitialState;\n          let fundamentalState;\n          if (getInitialState !== undefined) {\n            fundamentalState = getInitialState(newProps);\n          }\n          fundamentalInstance = workInProgress.stateNode = createFundamentalStateInstance(\n            workInProgress,\n            newProps,\n            fundamentalImpl,\n            fundamentalState || {},\n          );\n          const instance = ((getFundamentalComponentInstance(\n            fundamentalInstance,\n          ): any): Instance);\n          fundamentalInstance.instance = instance;\n          if (fundamentalImpl.reconcileChildren === false) {\n            return null;\n          }\n          appendAllChildren(instance, workInProgress, false, false);\n          mountFundamentalComponent(fundamentalInstance);\n        } else {\n          // We fire update in commit phase\n          const prevProps = fundamentalInstance.props;\n          fundamentalInstance.prevProps = prevProps;\n          fundamentalInstance.props = newProps;\n          fundamentalInstance.currentFiber = workInProgress;\n          if (supportsPersistence) {\n            const instance = cloneFundamentalInstance(fundamentalInstance);\n            fundamentalInstance.instance = instance;\n            appendAllChildren(instance, workInProgress, false, false);\n          }\n          const shouldUpdate = shouldUpdateFundamentalComponent(\n            fundamentalInstance,\n          );\n          if (shouldUpdate) {\n            markUpdate(workInProgress);\n          }\n        }\n        return null;\n      }\n      break;\n    }\n    case ScopeComponent: {\n      if (enableScopeAPI) {\n        if (current === null) {\n          const scopeInstance: ReactScopeInstance = createScopeInstance();\n          workInProgress.stateNode = scopeInstance;\n          prepareScopeUpdate(scopeInstance, workInProgress);\n          if (workInProgress.ref !== null) {\n            markRef(workInProgress);\n            markUpdate(workInProgress);\n          }\n        } else {\n          if (workInProgress.ref !== null) {\n            markUpdate(workInProgress);\n          }\n          if (current.ref !== workInProgress.ref) {\n            markRef(workInProgress);\n          }\n        }\n        return null;\n      }\n      break;\n    }\n    case Block:\n      if (enableBlocksAPI) {\n        return null;\n      }\n      break;\n    case OffscreenComponent:\n    case LegacyHiddenComponent: {\n      popRenderLanes(workInProgress);\n      if (current !== null) {\n        const nextState: OffscreenState | null = workInProgress.memoizedState;\n        const prevState: OffscreenState | null = current.memoizedState;\n\n        const prevIsHidden = prevState !== null;\n        const nextIsHidden = nextState !== null;\n        if (\n          prevIsHidden !== nextIsHidden &&\n          newProps.mode !== 'unstable-defer-without-hiding'\n        ) {\n          workInProgress.flags |= Update;\n        }\n      }\n      return null;\n    }\n  }\n  invariant(\n    false,\n    'Unknown unit of work tag (%s). This error is likely caused by a bug in ' +\n      'React. Please file an issue.',\n    workInProgress.tag,\n  );\n}\n\nexport {completeWork};\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactInternalTypes';\nimport type {Lanes} from './ReactFiberLane';\nimport type {SuspenseState} from './ReactFiberSuspenseComponent.old';\n\nimport {resetWorkInProgressVersions as resetMutableSourceWorkInProgressVersions} from './ReactMutableSource.old';\nimport {\n  ClassComponent,\n  HostRoot,\n  HostComponent,\n  HostPortal,\n  ContextProvider,\n  SuspenseComponent,\n  SuspenseListComponent,\n  OffscreenComponent,\n  LegacyHiddenComponent,\n} from './ReactWorkTags';\nimport {DidCapture, NoFlags, ShouldCapture} from './ReactFiberFlags';\nimport {NoMode, ProfileMode} from './ReactTypeOfMode';\nimport {\n  enableSuspenseServerRenderer,\n  enableProfilerTimer,\n} from 'shared/ReactFeatureFlags';\n\nimport {popHostContainer, popHostContext} from './ReactFiberHostContext.old';\nimport {popSuspenseContext} from './ReactFiberSuspenseContext.old';\nimport {resetHydrationState} from './ReactFiberHydrationContext.old';\nimport {\n  isContextProvider as isLegacyContextProvider,\n  popContext as popLegacyContext,\n  popTopLevelContextObject as popTopLevelLegacyContextObject,\n} from './ReactFiberContext.old';\nimport {popProvider} from './ReactFiberNewContext.old';\nimport {popRenderLanes} from './ReactFiberWorkLoop.old';\nimport {transferActualDuration} from './ReactProfilerTimer.old';\n\nimport invariant from 'shared/invariant';\n\nfunction unwindWork(workInProgress: Fiber, renderLanes: Lanes) {\n  switch (workInProgress.tag) {\n    case ClassComponent: {\n      const Component = workInProgress.type;\n      if (isLegacyContextProvider(Component)) {\n        popLegacyContext(workInProgress);\n      }\n      const flags = workInProgress.flags;\n      if (flags & ShouldCapture) {\n        workInProgress.flags = (flags & ~ShouldCapture) | DidCapture;\n        if (\n          enableProfilerTimer &&\n          (workInProgress.mode & ProfileMode) !== NoMode\n        ) {\n          transferActualDuration(workInProgress);\n        }\n        return workInProgress;\n      }\n      return null;\n    }\n    case HostRoot: {\n      popHostContainer(workInProgress);\n      popTopLevelLegacyContextObject(workInProgress);\n      resetMutableSourceWorkInProgressVersions();\n      const flags = workInProgress.flags;\n      invariant(\n        (flags & DidCapture) === NoFlags,\n        'The root failed to unmount after an error. This is likely a bug in ' +\n          'React. Please file an issue.',\n      );\n      workInProgress.flags = (flags & ~ShouldCapture) | DidCapture;\n      return workInProgress;\n    }\n    case HostComponent: {\n      // TODO: popHydrationState\n      popHostContext(workInProgress);\n      return null;\n    }\n    case SuspenseComponent: {\n      popSuspenseContext(workInProgress);\n      if (enableSuspenseServerRenderer) {\n        const suspenseState: null | SuspenseState =\n          workInProgress.memoizedState;\n        if (suspenseState !== null && suspenseState.dehydrated !== null) {\n          invariant(\n            workInProgress.alternate !== null,\n            'Threw in newly mounted dehydrated component. This is likely a bug in ' +\n              'React. Please file an issue.',\n          );\n          resetHydrationState();\n        }\n      }\n      const flags = workInProgress.flags;\n      if (flags & ShouldCapture) {\n        workInProgress.flags = (flags & ~ShouldCapture) | DidCapture;\n        // Captured a suspense effect. Re-render the boundary.\n        if (\n          enableProfilerTimer &&\n          (workInProgress.mode & ProfileMode) !== NoMode\n        ) {\n          transferActualDuration(workInProgress);\n        }\n        return workInProgress;\n      }\n      return null;\n    }\n    case SuspenseListComponent: {\n      popSuspenseContext(workInProgress);\n      // SuspenseList doesn't actually catch anything. It should've been\n      // caught by a nested boundary. If not, it should bubble through.\n      return null;\n    }\n    case HostPortal:\n      popHostContainer(workInProgress);\n      return null;\n    case ContextProvider:\n      popProvider(workInProgress);\n      return null;\n    case OffscreenComponent:\n    case LegacyHiddenComponent:\n      popRenderLanes(workInProgress);\n      return null;\n    default:\n      return null;\n  }\n}\n\nfunction unwindInterruptedWork(interruptedWork: Fiber) {\n  switch (interruptedWork.tag) {\n    case ClassComponent: {\n      const childContextTypes = interruptedWork.type.childContextTypes;\n      if (childContextTypes !== null && childContextTypes !== undefined) {\n        popLegacyContext(interruptedWork);\n      }\n      break;\n    }\n    case HostRoot: {\n      popHostContainer(interruptedWork);\n      popTopLevelLegacyContextObject(interruptedWork);\n      resetMutableSourceWorkInProgressVersions();\n      break;\n    }\n    case HostComponent: {\n      popHostContext(interruptedWork);\n      break;\n    }\n    case HostPortal:\n      popHostContainer(interruptedWork);\n      break;\n    case SuspenseComponent:\n      popSuspenseContext(interruptedWork);\n      break;\n    case SuspenseListComponent:\n      popSuspenseContext(interruptedWork);\n      break;\n    case ContextProvider:\n      popProvider(interruptedWork);\n      break;\n    case OffscreenComponent:\n    case LegacyHiddenComponent:\n      popRenderLanes(interruptedWork);\n      break;\n    default:\n      break;\n  }\n}\n\nexport {unwindWork, unwindInterruptedWork};\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactInternalTypes';\n\nimport {getStackByFiberInDevAndProd} from './ReactFiberComponentStack';\n\nexport type CapturedValue<T> = {|\n  value: T,\n  source: Fiber | null,\n  stack: string | null,\n|};\n\nexport function createCapturedValue<T>(\n  value: T,\n  source: Fiber,\n): CapturedValue<T> {\n  // If the value is an error, call this function immediately after it is thrown\n  // so the stack is accurate.\n  return {\n    value,\n    source,\n    stack: getStackByFiberInDevAndProd(source),\n  };\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from '../ReactFiber.old';\nimport type {CapturedValue} from '../ReactCapturedValue';\n\nimport {ClassComponent} from '../ReactWorkTags';\n\n// Module provided by RN:\nimport {ReactFiberErrorDialog as RNImpl} from 'react-native/Libraries/ReactPrivate/ReactNativePrivateInterface';\n\nimport invariant from 'shared/invariant';\n\ninvariant(\n  typeof RNImpl.showErrorDialog === 'function',\n  'Expected ReactFiberErrorDialog.showErrorDialog to be a function.',\n);\n\nexport function showErrorDialog(\n  boundary: Fiber,\n  errorInfo: CapturedValue<mixed>,\n): boolean {\n  const capturedError = {\n    componentStack: errorInfo.stack !== null ? errorInfo.stack : '',\n    error: errorInfo.value,\n    errorBoundary:\n      boundary !== null && boundary.tag === ClassComponent\n        ? boundary.stateNode\n        : null,\n  };\n  return RNImpl.showErrorDialog(capturedError);\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactInternalTypes';\nimport type {CapturedValue} from './ReactCapturedValue';\n\nimport {showErrorDialog} from './ReactFiberErrorDialog';\nimport {ClassComponent} from './ReactWorkTags';\nimport getComponentName from 'shared/getComponentName';\n\nexport function logCapturedError(\n  boundary: Fiber,\n  errorInfo: CapturedValue<mixed>,\n): void {\n  try {\n    const logError = showErrorDialog(boundary, errorInfo);\n\n    // Allow injected showErrorDialog() to prevent default console.error logging.\n    // This enables renderers like ReactNative to better manage redbox behavior.\n    if (logError === false) {\n      return;\n    }\n\n    const error = (errorInfo.value: any);\n    if (__DEV__) {\n      const source = errorInfo.source;\n      const stack = errorInfo.stack;\n      const componentStack = stack !== null ? stack : '';\n      // Browsers support silencing uncaught errors by calling\n      // `preventDefault()` in window `error` handler.\n      // We record this information as an expando on the error.\n      if (error != null && error._suppressLogging) {\n        if (boundary.tag === ClassComponent) {\n          // The error is recoverable and was silenced.\n          // Ignore it and don't print the stack addendum.\n          // This is handy for testing error boundaries without noise.\n          return;\n        }\n        // The error is fatal. Since the silencing might have\n        // been accidental, we'll surface it anyway.\n        // However, the browser would have silenced the original error\n        // so we'll print it first, and then print the stack addendum.\n        console['error'](error); // Don't transform to our wrapper\n        // For a more detailed description of this block, see:\n        // https://github.com/facebook/react/pull/13384\n      }\n\n      const componentName = source ? getComponentName(source.type) : null;\n      const componentNameMessage = componentName\n        ? `The above error occurred in the <${componentName}> component:`\n        : 'The above error occurred in one of your React components:';\n\n      let errorBoundaryMessage;\n      const errorBoundaryName = getComponentName(boundary.type);\n      if (errorBoundaryName) {\n        errorBoundaryMessage =\n          `React will try to recreate this component tree from scratch ` +\n          `using the error boundary you provided, ${errorBoundaryName}.`;\n      } else {\n        errorBoundaryMessage =\n          'Consider adding an error boundary to your tree to customize error handling behavior.\\n' +\n          'Visit https://reactjs.org/link/error-boundaries to learn more about error boundaries.';\n      }\n      const combinedMessage =\n        `${componentNameMessage}\\n${componentStack}\\n\\n` +\n        `${errorBoundaryMessage}`;\n\n      // In development, we provide our own message with just the component stack.\n      // We don't include the original error message and JS stack because the browser\n      // has already printed it. Even if the application swallows the error, it is still\n      // displayed by the browser thanks to the DEV-only fake event trick in ReactErrorUtils.\n      console['error'](combinedMessage); // Don't transform to our wrapper\n    } else {\n      // In production, we print the error directly.\n      // This will include the message, the JS stack, and anything the browser wants to show.\n      // We pass the error object instead of custom message so that the browser displays the error natively.\n      console['error'](error); // Don't transform to our wrapper\n    }\n  } catch (e) {\n    // This method must not throw, or React internal state will get messed up.\n    // If console.error is overridden, or logCapturedError() shows a dialog that throws,\n    // we want to report this error outside of the normal stack as a last resort.\n    // https://github.com/facebook/react/issues/13188\n    setTimeout(() => {\n      throw e;\n    });\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactInternalTypes';\nimport type {FiberRoot} from './ReactInternalTypes';\nimport type {Lane, Lanes} from './ReactFiberLane';\nimport type {CapturedValue} from './ReactCapturedValue';\nimport type {Update} from './ReactUpdateQueue.old';\nimport type {Wakeable} from 'shared/ReactTypes';\nimport type {SuspenseContext} from './ReactFiberSuspenseContext.old';\n\nimport getComponentName from 'shared/getComponentName';\nimport {\n  ClassComponent,\n  HostRoot,\n  SuspenseComponent,\n  IncompleteClassComponent,\n} from './ReactWorkTags';\nimport {\n  DidCapture,\n  Incomplete,\n  NoFlags,\n  ShouldCapture,\n  LifecycleEffectMask,\n  ForceUpdateForLegacySuspense,\n} from './ReactFiberFlags';\nimport {shouldCaptureSuspense} from './ReactFiberSuspenseComponent.old';\nimport {NoMode, BlockingMode, DebugTracingMode} from './ReactTypeOfMode';\nimport {\n  enableDebugTracing,\n  enableSchedulingProfiler,\n} from 'shared/ReactFeatureFlags';\nimport {createCapturedValue} from './ReactCapturedValue';\nimport {\n  enqueueCapturedUpdate,\n  createUpdate,\n  CaptureUpdate,\n  ForceUpdate,\n  enqueueUpdate,\n} from './ReactUpdateQueue.old';\nimport {markFailedErrorBoundaryForHotReloading} from './ReactFiberHotReloading.old';\nimport {\n  suspenseStackCursor,\n  InvisibleParentSuspenseContext,\n  hasSuspenseContext,\n} from './ReactFiberSuspenseContext.old';\nimport {\n  renderDidError,\n  onUncaughtError,\n  markLegacyErrorBoundaryAsFailed,\n  isAlreadyFailedLegacyErrorBoundary,\n  pingSuspendedRoot,\n} from './ReactFiberWorkLoop.old';\nimport {logCapturedError} from './ReactFiberErrorLogger';\nimport {logComponentSuspended} from './DebugTracing';\nimport {markComponentSuspended} from './SchedulingProfiler';\n\nimport {\n  SyncLane,\n  NoTimestamp,\n  includesSomeLane,\n  mergeLanes,\n  pickArbitraryLane,\n} from './ReactFiberLane';\n\nconst PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\n\nfunction createRootErrorUpdate(\n  fiber: Fiber,\n  errorInfo: CapturedValue<mixed>,\n  lane: Lane,\n): Update<mixed> {\n  const update = createUpdate(NoTimestamp, lane);\n  // Unmount the root by rendering null.\n  update.tag = CaptureUpdate;\n  // Caution: React DevTools currently depends on this property\n  // being called \"element\".\n  update.payload = {element: null};\n  const error = errorInfo.value;\n  update.callback = () => {\n    onUncaughtError(error);\n    logCapturedError(fiber, errorInfo);\n  };\n  return update;\n}\n\nfunction createClassErrorUpdate(\n  fiber: Fiber,\n  errorInfo: CapturedValue<mixed>,\n  lane: Lane,\n): Update<mixed> {\n  const update = createUpdate(NoTimestamp, lane);\n  update.tag = CaptureUpdate;\n  const getDerivedStateFromError = fiber.type.getDerivedStateFromError;\n  if (typeof getDerivedStateFromError === 'function') {\n    const error = errorInfo.value;\n    update.payload = () => {\n      logCapturedError(fiber, errorInfo);\n      return getDerivedStateFromError(error);\n    };\n  }\n\n  const inst = fiber.stateNode;\n  if (inst !== null && typeof inst.componentDidCatch === 'function') {\n    update.callback = function callback() {\n      if (__DEV__) {\n        markFailedErrorBoundaryForHotReloading(fiber);\n      }\n      if (typeof getDerivedStateFromError !== 'function') {\n        // To preserve the preexisting retry behavior of error boundaries,\n        // we keep track of which ones already failed during this batch.\n        // This gets reset before we yield back to the browser.\n        // TODO: Warn in strict mode if getDerivedStateFromError is\n        // not defined.\n        markLegacyErrorBoundaryAsFailed(this);\n\n        // Only log here if componentDidCatch is the only error boundary method defined\n        logCapturedError(fiber, errorInfo);\n      }\n      const error = errorInfo.value;\n      const stack = errorInfo.stack;\n      this.componentDidCatch(error, {\n        componentStack: stack !== null ? stack : '',\n      });\n      if (__DEV__) {\n        if (typeof getDerivedStateFromError !== 'function') {\n          // If componentDidCatch is the only error boundary method defined,\n          // then it needs to call setState to recover from errors.\n          // If no state update is scheduled then the boundary will swallow the error.\n          if (!includesSomeLane(fiber.lanes, (SyncLane: Lane))) {\n            console.error(\n              '%s: Error boundaries should implement getDerivedStateFromError(). ' +\n                'In that method, return a state update to display an error message or fallback UI.',\n              getComponentName(fiber.type) || 'Unknown',\n            );\n          }\n        }\n      }\n    };\n  } else if (__DEV__) {\n    update.callback = () => {\n      markFailedErrorBoundaryForHotReloading(fiber);\n    };\n  }\n  return update;\n}\n\nfunction attachPingListener(root: FiberRoot, wakeable: Wakeable, lanes: Lanes) {\n  // Attach a listener to the promise to \"ping\" the root and retry. But only if\n  // one does not already exist for the lanes we're currently rendering (which\n  // acts like a \"thread ID\" here).\n  let pingCache = root.pingCache;\n  let threadIDs;\n  if (pingCache === null) {\n    pingCache = root.pingCache = new PossiblyWeakMap();\n    threadIDs = new Set();\n    pingCache.set(wakeable, threadIDs);\n  } else {\n    threadIDs = pingCache.get(wakeable);\n    if (threadIDs === undefined) {\n      threadIDs = new Set();\n      pingCache.set(wakeable, threadIDs);\n    }\n  }\n  if (!threadIDs.has(lanes)) {\n    // Memoize using the thread ID to prevent redundant listeners.\n    threadIDs.add(lanes);\n    const ping = pingSuspendedRoot.bind(null, root, wakeable, lanes);\n    wakeable.then(ping, ping);\n  }\n}\n\nfunction throwException(\n  root: FiberRoot,\n  returnFiber: Fiber,\n  sourceFiber: Fiber,\n  value: mixed,\n  rootRenderLanes: Lanes,\n) {\n  // The source fiber did not complete.\n  sourceFiber.flags |= Incomplete;\n  // Its effect list is no longer valid.\n  sourceFiber.firstEffect = sourceFiber.lastEffect = null;\n\n  if (\n    value !== null &&\n    typeof value === 'object' &&\n    typeof value.then === 'function'\n  ) {\n    // This is a wakeable.\n    const wakeable: Wakeable = (value: any);\n\n    if (__DEV__) {\n      if (enableDebugTracing) {\n        if (sourceFiber.mode & DebugTracingMode) {\n          const name = getComponentName(sourceFiber.type) || 'Unknown';\n          logComponentSuspended(name, wakeable);\n        }\n      }\n    }\n\n    if (enableSchedulingProfiler) {\n      markComponentSuspended(sourceFiber, wakeable);\n    }\n\n    if ((sourceFiber.mode & BlockingMode) === NoMode) {\n      // Reset the memoizedState to what it was before we attempted\n      // to render it.\n      const currentSource = sourceFiber.alternate;\n      if (currentSource) {\n        sourceFiber.updateQueue = currentSource.updateQueue;\n        sourceFiber.memoizedState = currentSource.memoizedState;\n        sourceFiber.lanes = currentSource.lanes;\n      } else {\n        sourceFiber.updateQueue = null;\n        sourceFiber.memoizedState = null;\n      }\n    }\n\n    const hasInvisibleParentBoundary = hasSuspenseContext(\n      suspenseStackCursor.current,\n      (InvisibleParentSuspenseContext: SuspenseContext),\n    );\n\n    // Schedule the nearest Suspense to re-render the timed out view.\n    let workInProgress = returnFiber;\n    do {\n      if (\n        workInProgress.tag === SuspenseComponent &&\n        shouldCaptureSuspense(workInProgress, hasInvisibleParentBoundary)\n      ) {\n        // Found the nearest boundary.\n\n        // Stash the promise on the boundary fiber. If the boundary times out, we'll\n        // attach another listener to flip the boundary back to its normal state.\n        const wakeables: Set<Wakeable> = (workInProgress.updateQueue: any);\n        if (wakeables === null) {\n          const updateQueue = (new Set(): any);\n          updateQueue.add(wakeable);\n          workInProgress.updateQueue = updateQueue;\n        } else {\n          wakeables.add(wakeable);\n        }\n\n        // If the boundary is outside of blocking mode, we should *not*\n        // suspend the commit. Pretend as if the suspended component rendered\n        // null and keep rendering. In the commit phase, we'll schedule a\n        // subsequent synchronous update to re-render the Suspense.\n        //\n        // Note: It doesn't matter whether the component that suspended was\n        // inside a blocking mode tree. If the Suspense is outside of it, we\n        // should *not* suspend the commit.\n        if ((workInProgress.mode & BlockingMode) === NoMode) {\n          workInProgress.flags |= DidCapture;\n          sourceFiber.flags |= ForceUpdateForLegacySuspense;\n\n          // We're going to commit this fiber even though it didn't complete.\n          // But we shouldn't call any lifecycle methods or callbacks. Remove\n          // all lifecycle effect tags.\n          sourceFiber.flags &= ~(LifecycleEffectMask | Incomplete);\n\n          if (sourceFiber.tag === ClassComponent) {\n            const currentSourceFiber = sourceFiber.alternate;\n            if (currentSourceFiber === null) {\n              // This is a new mount. Change the tag so it's not mistaken for a\n              // completed class component. For example, we should not call\n              // componentWillUnmount if it is deleted.\n              sourceFiber.tag = IncompleteClassComponent;\n            } else {\n              // When we try rendering again, we should not reuse the current fiber,\n              // since it's known to be in an inconsistent state. Use a force update to\n              // prevent a bail out.\n              const update = createUpdate(NoTimestamp, SyncLane);\n              update.tag = ForceUpdate;\n              enqueueUpdate(sourceFiber, update);\n            }\n          }\n\n          // The source fiber did not complete. Mark it with Sync priority to\n          // indicate that it still has pending work.\n          sourceFiber.lanes = mergeLanes(sourceFiber.lanes, SyncLane);\n\n          // Exit without suspending.\n          return;\n        }\n\n        // Confirmed that the boundary is in a concurrent mode tree. Continue\n        // with the normal suspend path.\n        //\n        // After this we'll use a set of heuristics to determine whether this\n        // render pass will run to completion or restart or \"suspend\" the commit.\n        // The actual logic for this is spread out in different places.\n        //\n        // This first principle is that if we're going to suspend when we complete\n        // a root, then we should also restart if we get an update or ping that\n        // might unsuspend it, and vice versa. The only reason to suspend is\n        // because you think you might want to restart before committing. However,\n        // it doesn't make sense to restart only while in the period we're suspended.\n        //\n        // Restarting too aggressively is also not good because it starves out any\n        // intermediate loading state. So we use heuristics to determine when.\n\n        // Suspense Heuristics\n        //\n        // If nothing threw a Promise or all the same fallbacks are already showing,\n        // then don't suspend/restart.\n        //\n        // If this is an initial render of a new tree of Suspense boundaries and\n        // those trigger a fallback, then don't suspend/restart. We want to ensure\n        // that we can show the initial loading state as quickly as possible.\n        //\n        // If we hit a \"Delayed\" case, such as when we'd switch from content back into\n        // a fallback, then we should always suspend/restart. Transitions apply\n        // to this case. If none is defined, JND is used instead.\n        //\n        // If we're already showing a fallback and it gets \"retried\", allowing us to show\n        // another level, but there's still an inner boundary that would show a fallback,\n        // then we suspend/restart for 500ms since the last time we showed a fallback\n        // anywhere in the tree. This effectively throttles progressive loading into a\n        // consistent train of commits. This also gives us an opportunity to restart to\n        // get to the completed state slightly earlier.\n        //\n        // If there's ambiguity due to batching it's resolved in preference of:\n        // 1) \"delayed\", 2) \"initial render\", 3) \"retry\".\n        //\n        // We want to ensure that a \"busy\" state doesn't get force committed. We want to\n        // ensure that new initial loading states can commit as soon as possible.\n\n        attachPingListener(root, wakeable, rootRenderLanes);\n\n        workInProgress.flags |= ShouldCapture;\n        workInProgress.lanes = rootRenderLanes;\n\n        return;\n      }\n      // This boundary already captured during this render. Continue to the next\n      // boundary.\n      workInProgress = workInProgress.return;\n    } while (workInProgress !== null);\n    // No boundary was found. Fallthrough to error mode.\n    // TODO: Use invariant so the message is stripped in prod?\n    value = new Error(\n      (getComponentName(sourceFiber.type) || 'A React component') +\n        ' suspended while rendering, but no fallback UI was specified.\\n' +\n        '\\n' +\n        'Add a <Suspense fallback=...> component higher in the tree to ' +\n        'provide a loading indicator or placeholder to display.',\n    );\n  }\n\n  // We didn't find a boundary that could handle this type of exception. Start\n  // over and traverse parent path again, this time treating the exception\n  // as an error.\n  renderDidError();\n\n  value = createCapturedValue(value, sourceFiber);\n  let workInProgress = returnFiber;\n  do {\n    switch (workInProgress.tag) {\n      case HostRoot: {\n        const errorInfo = value;\n        workInProgress.flags |= ShouldCapture;\n        const lane = pickArbitraryLane(rootRenderLanes);\n        workInProgress.lanes = mergeLanes(workInProgress.lanes, lane);\n        const update = createRootErrorUpdate(workInProgress, errorInfo, lane);\n        enqueueCapturedUpdate(workInProgress, update);\n        return;\n      }\n      case ClassComponent:\n        // Capture and retry\n        const errorInfo = value;\n        const ctor = workInProgress.type;\n        const instance = workInProgress.stateNode;\n        if (\n          (workInProgress.flags & DidCapture) === NoFlags &&\n          (typeof ctor.getDerivedStateFromError === 'function' ||\n            (instance !== null &&\n              typeof instance.componentDidCatch === 'function' &&\n              !isAlreadyFailedLegacyErrorBoundary(instance)))\n        ) {\n          workInProgress.flags |= ShouldCapture;\n          const lane = pickArbitraryLane(rootRenderLanes);\n          workInProgress.lanes = mergeLanes(workInProgress.lanes, lane);\n          // Schedule the error boundary to re-render using updated state\n          const update = createClassErrorUpdate(\n            workInProgress,\n            errorInfo,\n            lane,\n          );\n          enqueueCapturedUpdate(workInProgress, update);\n          return;\n        }\n        break;\n      default:\n        break;\n    }\n    workInProgress = workInProgress.return;\n  } while (workInProgress !== null);\n}\n\nexport {throwException, createRootErrorUpdate, createClassErrorUpdate};\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {\n  Instance,\n  TextInstance,\n  SuspenseInstance,\n  Container,\n  ChildSet,\n  UpdatePayload,\n} from './ReactFiberHostConfig';\nimport type {Fiber} from './ReactInternalTypes';\nimport type {FiberRoot} from './ReactInternalTypes';\nimport type {Lanes} from './ReactFiberLane';\nimport type {SuspenseState} from './ReactFiberSuspenseComponent.old';\nimport type {UpdateQueue} from './ReactUpdateQueue.old';\nimport type {FunctionComponentUpdateQueue} from './ReactFiberHooks.old';\nimport type {Wakeable} from 'shared/ReactTypes';\nimport type {ReactPriorityLevel} from './ReactInternalTypes';\nimport type {OffscreenState} from './ReactFiberOffscreenComponent';\n\nimport {unstable_wrap as Schedule_tracing_wrap} from 'scheduler/tracing';\nimport {\n  enableSchedulerTracing,\n  enableProfilerTimer,\n  enableProfilerCommitHooks,\n  enableSuspenseServerRenderer,\n  enableFundamentalAPI,\n  enableSuspenseCallback,\n  enableScopeAPI,\n} from 'shared/ReactFeatureFlags';\nimport {\n  FunctionComponent,\n  ForwardRef,\n  ClassComponent,\n  HostRoot,\n  HostComponent,\n  HostText,\n  HostPortal,\n  Profiler,\n  SuspenseComponent,\n  DehydratedFragment,\n  IncompleteClassComponent,\n  MemoComponent,\n  SimpleMemoComponent,\n  SuspenseListComponent,\n  FundamentalComponent,\n  ScopeComponent,\n  Block,\n  OffscreenComponent,\n  LegacyHiddenComponent,\n} from './ReactWorkTags';\nimport {\n  invokeGuardedCallback,\n  hasCaughtError,\n  clearCaughtError,\n} from 'shared/ReactErrorUtils';\nimport {\n  NoFlags,\n  ContentReset,\n  Placement,\n  Snapshot,\n  Update,\n} from './ReactFiberFlags';\nimport getComponentName from 'shared/getComponentName';\nimport invariant from 'shared/invariant';\n\nimport {onCommitUnmount} from './ReactFiberDevToolsHook.old';\nimport {resolveDefaultProps} from './ReactFiberLazyComponent.old';\nimport {\n  getCommitTime,\n  recordLayoutEffectDuration,\n  startLayoutEffectTimer,\n} from './ReactProfilerTimer.old';\nimport {ProfileMode} from './ReactTypeOfMode';\nimport {commitUpdateQueue} from './ReactUpdateQueue.old';\nimport {\n  getPublicInstance,\n  supportsMutation,\n  supportsPersistence,\n  supportsHydration,\n  commitMount,\n  commitUpdate,\n  resetTextContent,\n  commitTextUpdate,\n  appendChild,\n  appendChildToContainer,\n  insertBefore,\n  insertInContainerBefore,\n  removeChild,\n  removeChildFromContainer,\n  clearSuspenseBoundary,\n  clearSuspenseBoundaryFromContainer,\n  replaceContainerChildren,\n  createContainerChildSet,\n  hideInstance,\n  hideTextInstance,\n  unhideInstance,\n  unhideTextInstance,\n  unmountFundamentalComponent,\n  updateFundamentalComponent,\n  commitHydratedContainer,\n  commitHydratedSuspenseInstance,\n  clearContainer,\n  prepareScopeUpdate,\n} from './ReactFiberHostConfig';\nimport {\n  captureCommitPhaseError,\n  resolveRetryWakeable,\n  markCommitTimeOfFallback,\n  enqueuePendingPassiveHookEffectMount,\n  enqueuePendingPassiveHookEffectUnmount,\n  enqueuePendingPassiveProfilerEffect,\n} from './ReactFiberWorkLoop.old';\nimport {\n  NoFlags as NoHookEffect,\n  HasEffect as HookHasEffect,\n  Layout as HookLayout,\n  Passive as HookPassive,\n} from './ReactHookEffectTags';\nimport {didWarnAboutReassigningProps} from './ReactFiberBeginWork.old';\n\nlet didWarnAboutUndefinedSnapshotBeforeUpdate: Set<mixed> | null = null;\nif (__DEV__) {\n  didWarnAboutUndefinedSnapshotBeforeUpdate = new Set();\n}\n\nconst PossiblyWeakSet = typeof WeakSet === 'function' ? WeakSet : Set;\n\nconst callComponentWillUnmountWithTimer = function(current, instance) {\n  instance.props = current.memoizedProps;\n  instance.state = current.memoizedState;\n  if (\n    enableProfilerTimer &&\n    enableProfilerCommitHooks &&\n    current.mode & ProfileMode\n  ) {\n    try {\n      startLayoutEffectTimer();\n      instance.componentWillUnmount();\n    } finally {\n      recordLayoutEffectDuration(current);\n    }\n  } else {\n    instance.componentWillUnmount();\n  }\n};\n\n// Capture errors so they don't interrupt unmounting.\nfunction safelyCallComponentWillUnmount(current: Fiber, instance: any) {\n  if (__DEV__) {\n    invokeGuardedCallback(\n      null,\n      callComponentWillUnmountWithTimer,\n      null,\n      current,\n      instance,\n    );\n    if (hasCaughtError()) {\n      const unmountError = clearCaughtError();\n      captureCommitPhaseError(current, unmountError);\n    }\n  } else {\n    try {\n      callComponentWillUnmountWithTimer(current, instance);\n    } catch (unmountError) {\n      captureCommitPhaseError(current, unmountError);\n    }\n  }\n}\n\nfunction safelyDetachRef(current: Fiber) {\n  const ref = current.ref;\n  if (ref !== null) {\n    if (typeof ref === 'function') {\n      if (__DEV__) {\n        invokeGuardedCallback(null, ref, null, null);\n        if (hasCaughtError()) {\n          const refError = clearCaughtError();\n          captureCommitPhaseError(current, refError);\n        }\n      } else {\n        try {\n          ref(null);\n        } catch (refError) {\n          captureCommitPhaseError(current, refError);\n        }\n      }\n    } else {\n      ref.current = null;\n    }\n  }\n}\n\nfunction safelyCallDestroy(current: Fiber, destroy: () => void) {\n  if (__DEV__) {\n    invokeGuardedCallback(null, destroy, null);\n    if (hasCaughtError()) {\n      const error = clearCaughtError();\n      captureCommitPhaseError(current, error);\n    }\n  } else {\n    try {\n      destroy();\n    } catch (error) {\n      captureCommitPhaseError(current, error);\n    }\n  }\n}\n\nfunction commitBeforeMutationLifeCycles(\n  current: Fiber | null,\n  finishedWork: Fiber,\n): void {\n  switch (finishedWork.tag) {\n    case FunctionComponent:\n    case ForwardRef:\n    case SimpleMemoComponent:\n    case Block: {\n      return;\n    }\n    case ClassComponent: {\n      if (finishedWork.flags & Snapshot) {\n        if (current !== null) {\n          const prevProps = current.memoizedProps;\n          const prevState = current.memoizedState;\n          const instance = finishedWork.stateNode;\n          // We could update instance props and state here,\n          // but instead we rely on them being set during last render.\n          // TODO: revisit this when we implement resuming.\n          if (__DEV__) {\n            if (\n              finishedWork.type === finishedWork.elementType &&\n              !didWarnAboutReassigningProps\n            ) {\n              if (instance.props !== finishedWork.memoizedProps) {\n                console.error(\n                  'Expected %s props to match memoized props before ' +\n                    'getSnapshotBeforeUpdate. ' +\n                    'This might either be because of a bug in React, or because ' +\n                    'a component reassigns its own `this.props`. ' +\n                    'Please file an issue.',\n                  getComponentName(finishedWork.type) || 'instance',\n                );\n              }\n              if (instance.state !== finishedWork.memoizedState) {\n                console.error(\n                  'Expected %s state to match memoized state before ' +\n                    'getSnapshotBeforeUpdate. ' +\n                    'This might either be because of a bug in React, or because ' +\n                    'a component reassigns its own `this.state`. ' +\n                    'Please file an issue.',\n                  getComponentName(finishedWork.type) || 'instance',\n                );\n              }\n            }\n          }\n          const snapshot = instance.getSnapshotBeforeUpdate(\n            finishedWork.elementType === finishedWork.type\n              ? prevProps\n              : resolveDefaultProps(finishedWork.type, prevProps),\n            prevState,\n          );\n          if (__DEV__) {\n            const didWarnSet = ((didWarnAboutUndefinedSnapshotBeforeUpdate: any): Set<mixed>);\n            if (snapshot === undefined && !didWarnSet.has(finishedWork.type)) {\n              didWarnSet.add(finishedWork.type);\n              console.error(\n                '%s.getSnapshotBeforeUpdate(): A snapshot value (or null) ' +\n                  'must be returned. You have returned undefined.',\n                getComponentName(finishedWork.type),\n              );\n            }\n          }\n          instance.__reactInternalSnapshotBeforeUpdate = snapshot;\n        }\n      }\n      return;\n    }\n    case HostRoot: {\n      if (supportsMutation) {\n        if (finishedWork.flags & Snapshot) {\n          const root = finishedWork.stateNode;\n          clearContainer(root.containerInfo);\n        }\n      }\n      return;\n    }\n    case HostComponent:\n    case HostText:\n    case HostPortal:\n    case IncompleteClassComponent:\n      // Nothing to do for these component types\n      return;\n  }\n  invariant(\n    false,\n    'This unit of work tag should not have side-effects. This error is ' +\n      'likely caused by a bug in React. Please file an issue.',\n  );\n}\n\nfunction commitHookEffectListUnmount(tag: number, finishedWork: Fiber) {\n  const updateQueue: FunctionComponentUpdateQueue | null = (finishedWork.updateQueue: any);\n  const lastEffect = updateQueue !== null ? updateQueue.lastEffect : null;\n  if (lastEffect !== null) {\n    const firstEffect = lastEffect.next;\n    let effect = firstEffect;\n    do {\n      if ((effect.tag & tag) === tag) {\n        // Unmount\n        const destroy = effect.destroy;\n        effect.destroy = undefined;\n        if (destroy !== undefined) {\n          destroy();\n        }\n      }\n      effect = effect.next;\n    } while (effect !== firstEffect);\n  }\n}\n\nfunction commitHookEffectListMount(tag: number, finishedWork: Fiber) {\n  const updateQueue: FunctionComponentUpdateQueue | null = (finishedWork.updateQueue: any);\n  const lastEffect = updateQueue !== null ? updateQueue.lastEffect : null;\n  if (lastEffect !== null) {\n    const firstEffect = lastEffect.next;\n    let effect = firstEffect;\n    do {\n      if ((effect.tag & tag) === tag) {\n        // Mount\n        const create = effect.create;\n        effect.destroy = create();\n\n        if (__DEV__) {\n          const destroy = effect.destroy;\n          if (destroy !== undefined && typeof destroy !== 'function') {\n            let addendum;\n            if (destroy === null) {\n              addendum =\n                ' You returned null. If your effect does not require clean ' +\n                'up, return undefined (or nothing).';\n            } else if (typeof destroy.then === 'function') {\n              addendum =\n                '\\n\\nIt looks like you wrote useEffect(async () => ...) or returned a Promise. ' +\n                'Instead, write the async function inside your effect ' +\n                'and call it immediately:\\n\\n' +\n                'useEffect(() => {\\n' +\n                '  async function fetchData() {\\n' +\n                '    // You can await here\\n' +\n                '    const response = await MyAPI.getData(someId);\\n' +\n                '    // ...\\n' +\n                '  }\\n' +\n                '  fetchData();\\n' +\n                `}, [someId]); // Or [] if effect doesn't need props or state\\n\\n` +\n                'Learn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching';\n            } else {\n              addendum = ' You returned: ' + destroy;\n            }\n            console.error(\n              'An effect function must not return anything besides a function, ' +\n                'which is used for clean-up.%s',\n              addendum,\n            );\n          }\n        }\n      }\n      effect = effect.next;\n    } while (effect !== firstEffect);\n  }\n}\n\nfunction schedulePassiveEffects(finishedWork: Fiber) {\n  const updateQueue: FunctionComponentUpdateQueue | null = (finishedWork.updateQueue: any);\n  const lastEffect = updateQueue !== null ? updateQueue.lastEffect : null;\n  if (lastEffect !== null) {\n    const firstEffect = lastEffect.next;\n    let effect = firstEffect;\n    do {\n      const {next, tag} = effect;\n      if (\n        (tag & HookPassive) !== NoHookEffect &&\n        (tag & HookHasEffect) !== NoHookEffect\n      ) {\n        enqueuePendingPassiveHookEffectUnmount(finishedWork, effect);\n        enqueuePendingPassiveHookEffectMount(finishedWork, effect);\n      }\n      effect = next;\n    } while (effect !== firstEffect);\n  }\n}\n\nexport function commitPassiveEffectDurations(\n  finishedRoot: FiberRoot,\n  finishedWork: Fiber,\n): void {\n  if (enableProfilerTimer && enableProfilerCommitHooks) {\n    // Only Profilers with work in their subtree will have an Update effect scheduled.\n    if ((finishedWork.flags & Update) !== NoFlags) {\n      switch (finishedWork.tag) {\n        case Profiler: {\n          const {passiveEffectDuration} = finishedWork.stateNode;\n          const {id, onPostCommit} = finishedWork.memoizedProps;\n\n          // This value will still reflect the previous commit phase.\n          // It does not get reset until the start of the next commit phase.\n          const commitTime = getCommitTime();\n\n          if (typeof onPostCommit === 'function') {\n            if (enableSchedulerTracing) {\n              onPostCommit(\n                id,\n                finishedWork.alternate === null ? 'mount' : 'update',\n                passiveEffectDuration,\n                commitTime,\n                finishedRoot.memoizedInteractions,\n              );\n            } else {\n              onPostCommit(\n                id,\n                finishedWork.alternate === null ? 'mount' : 'update',\n                passiveEffectDuration,\n                commitTime,\n              );\n            }\n          }\n\n          // Bubble times to the next nearest ancestor Profiler.\n          // After we process that Profiler, we'll bubble further up.\n          let parentFiber = finishedWork.return;\n          while (parentFiber !== null) {\n            if (parentFiber.tag === Profiler) {\n              const parentStateNode = parentFiber.stateNode;\n              parentStateNode.passiveEffectDuration += passiveEffectDuration;\n              break;\n            }\n            parentFiber = parentFiber.return;\n          }\n          break;\n        }\n        default:\n          break;\n      }\n    }\n  }\n}\n\nfunction commitLifeCycles(\n  finishedRoot: FiberRoot,\n  current: Fiber | null,\n  finishedWork: Fiber,\n  committedLanes: Lanes,\n): void {\n  switch (finishedWork.tag) {\n    case FunctionComponent:\n    case ForwardRef:\n    case SimpleMemoComponent:\n    case Block: {\n      // At this point layout effects have already been destroyed (during mutation phase).\n      // This is done to prevent sibling component effects from interfering with each other,\n      // e.g. a destroy function in one component should never override a ref set\n      // by a create function in another component during the same commit.\n      if (\n        enableProfilerTimer &&\n        enableProfilerCommitHooks &&\n        finishedWork.mode & ProfileMode\n      ) {\n        try {\n          startLayoutEffectTimer();\n          commitHookEffectListMount(HookLayout | HookHasEffect, finishedWork);\n        } finally {\n          recordLayoutEffectDuration(finishedWork);\n        }\n      } else {\n        commitHookEffectListMount(HookLayout | HookHasEffect, finishedWork);\n      }\n\n      schedulePassiveEffects(finishedWork);\n      return;\n    }\n    case ClassComponent: {\n      const instance = finishedWork.stateNode;\n      if (finishedWork.flags & Update) {\n        if (current === null) {\n          // We could update instance props and state here,\n          // but instead we rely on them being set during last render.\n          // TODO: revisit this when we implement resuming.\n          if (__DEV__) {\n            if (\n              finishedWork.type === finishedWork.elementType &&\n              !didWarnAboutReassigningProps\n            ) {\n              if (instance.props !== finishedWork.memoizedProps) {\n                console.error(\n                  'Expected %s props to match memoized props before ' +\n                    'componentDidMount. ' +\n                    'This might either be because of a bug in React, or because ' +\n                    'a component reassigns its own `this.props`. ' +\n                    'Please file an issue.',\n                  getComponentName(finishedWork.type) || 'instance',\n                );\n              }\n              if (instance.state !== finishedWork.memoizedState) {\n                console.error(\n                  'Expected %s state to match memoized state before ' +\n                    'componentDidMount. ' +\n                    'This might either be because of a bug in React, or because ' +\n                    'a component reassigns its own `this.state`. ' +\n                    'Please file an issue.',\n                  getComponentName(finishedWork.type) || 'instance',\n                );\n              }\n            }\n          }\n          if (\n            enableProfilerTimer &&\n            enableProfilerCommitHooks &&\n            finishedWork.mode & ProfileMode\n          ) {\n            try {\n              startLayoutEffectTimer();\n              instance.componentDidMount();\n            } finally {\n              recordLayoutEffectDuration(finishedWork);\n            }\n          } else {\n            instance.componentDidMount();\n          }\n        } else {\n          const prevProps =\n            finishedWork.elementType === finishedWork.type\n              ? current.memoizedProps\n              : resolveDefaultProps(finishedWork.type, current.memoizedProps);\n          const prevState = current.memoizedState;\n          // We could update instance props and state here,\n          // but instead we rely on them being set during last render.\n          // TODO: revisit this when we implement resuming.\n          if (__DEV__) {\n            if (\n              finishedWork.type === finishedWork.elementType &&\n              !didWarnAboutReassigningProps\n            ) {\n              if (instance.props !== finishedWork.memoizedProps) {\n                console.error(\n                  'Expected %s props to match memoized props before ' +\n                    'componentDidUpdate. ' +\n                    'This might either be because of a bug in React, or because ' +\n                    'a component reassigns its own `this.props`. ' +\n                    'Please file an issue.',\n                  getComponentName(finishedWork.type) || 'instance',\n                );\n              }\n              if (instance.state !== finishedWork.memoizedState) {\n                console.error(\n                  'Expected %s state to match memoized state before ' +\n                    'componentDidUpdate. ' +\n                    'This might either be because of a bug in React, or because ' +\n                    'a component reassigns its own `this.state`. ' +\n                    'Please file an issue.',\n                  getComponentName(finishedWork.type) || 'instance',\n                );\n              }\n            }\n          }\n          if (\n            enableProfilerTimer &&\n            enableProfilerCommitHooks &&\n            finishedWork.mode & ProfileMode\n          ) {\n            try {\n              startLayoutEffectTimer();\n              instance.componentDidUpdate(\n                prevProps,\n                prevState,\n                instance.__reactInternalSnapshotBeforeUpdate,\n              );\n            } finally {\n              recordLayoutEffectDuration(finishedWork);\n            }\n          } else {\n            instance.componentDidUpdate(\n              prevProps,\n              prevState,\n              instance.__reactInternalSnapshotBeforeUpdate,\n            );\n          }\n        }\n      }\n\n      // TODO: I think this is now always non-null by the time it reaches the\n      // commit phase. Consider removing the type check.\n      const updateQueue: UpdateQueue<\n        *,\n      > | null = (finishedWork.updateQueue: any);\n      if (updateQueue !== null) {\n        if (__DEV__) {\n          if (\n            finishedWork.type === finishedWork.elementType &&\n            !didWarnAboutReassigningProps\n          ) {\n            if (instance.props !== finishedWork.memoizedProps) {\n              console.error(\n                'Expected %s props to match memoized props before ' +\n                  'processing the update queue. ' +\n                  'This might either be because of a bug in React, or because ' +\n                  'a component reassigns its own `this.props`. ' +\n                  'Please file an issue.',\n                getComponentName(finishedWork.type) || 'instance',\n              );\n            }\n            if (instance.state !== finishedWork.memoizedState) {\n              console.error(\n                'Expected %s state to match memoized state before ' +\n                  'processing the update queue. ' +\n                  'This might either be because of a bug in React, or because ' +\n                  'a component reassigns its own `this.state`. ' +\n                  'Please file an issue.',\n                getComponentName(finishedWork.type) || 'instance',\n              );\n            }\n          }\n        }\n        // We could update instance props and state here,\n        // but instead we rely on them being set during last render.\n        // TODO: revisit this when we implement resuming.\n        commitUpdateQueue(finishedWork, updateQueue, instance);\n      }\n      return;\n    }\n    case HostRoot: {\n      // TODO: I think this is now always non-null by the time it reaches the\n      // commit phase. Consider removing the type check.\n      const updateQueue: UpdateQueue<\n        *,\n      > | null = (finishedWork.updateQueue: any);\n      if (updateQueue !== null) {\n        let instance = null;\n        if (finishedWork.child !== null) {\n          switch (finishedWork.child.tag) {\n            case HostComponent:\n              instance = getPublicInstance(finishedWork.child.stateNode);\n              break;\n            case ClassComponent:\n              instance = finishedWork.child.stateNode;\n              break;\n          }\n        }\n        commitUpdateQueue(finishedWork, updateQueue, instance);\n      }\n      return;\n    }\n    case HostComponent: {\n      const instance: Instance = finishedWork.stateNode;\n\n      // Renderers may schedule work to be done after host components are mounted\n      // (eg DOM renderer may schedule auto-focus for inputs and form controls).\n      // These effects should only be committed when components are first mounted,\n      // aka when there is no current/alternate.\n      if (current === null && finishedWork.flags & Update) {\n        const type = finishedWork.type;\n        const props = finishedWork.memoizedProps;\n        commitMount(instance, type, props, finishedWork);\n      }\n\n      return;\n    }\n    case HostText: {\n      // We have no life-cycles associated with text.\n      return;\n    }\n    case HostPortal: {\n      // We have no life-cycles associated with portals.\n      return;\n    }\n    case Profiler: {\n      if (enableProfilerTimer) {\n        const {onCommit, onRender} = finishedWork.memoizedProps;\n        const {effectDuration} = finishedWork.stateNode;\n\n        const commitTime = getCommitTime();\n\n        if (typeof onRender === 'function') {\n          if (enableSchedulerTracing) {\n            onRender(\n              finishedWork.memoizedProps.id,\n              current === null ? 'mount' : 'update',\n              finishedWork.actualDuration,\n              finishedWork.treeBaseDuration,\n              finishedWork.actualStartTime,\n              commitTime,\n              finishedRoot.memoizedInteractions,\n            );\n          } else {\n            onRender(\n              finishedWork.memoizedProps.id,\n              current === null ? 'mount' : 'update',\n              finishedWork.actualDuration,\n              finishedWork.treeBaseDuration,\n              finishedWork.actualStartTime,\n              commitTime,\n            );\n          }\n        }\n\n        if (enableProfilerCommitHooks) {\n          if (typeof onCommit === 'function') {\n            if (enableSchedulerTracing) {\n              onCommit(\n                finishedWork.memoizedProps.id,\n                current === null ? 'mount' : 'update',\n                effectDuration,\n                commitTime,\n                finishedRoot.memoizedInteractions,\n              );\n            } else {\n              onCommit(\n                finishedWork.memoizedProps.id,\n                current === null ? 'mount' : 'update',\n                effectDuration,\n                commitTime,\n              );\n            }\n          }\n\n          // Schedule a passive effect for this Profiler to call onPostCommit hooks.\n          // This effect should be scheduled even if there is no onPostCommit callback for this Profiler,\n          // because the effect is also where times bubble to parent Profilers.\n          enqueuePendingPassiveProfilerEffect(finishedWork);\n\n          // Propagate layout effect durations to the next nearest Profiler ancestor.\n          // Do not reset these values until the next render so DevTools has a chance to read them first.\n          let parentFiber = finishedWork.return;\n          while (parentFiber !== null) {\n            if (parentFiber.tag === Profiler) {\n              const parentStateNode = parentFiber.stateNode;\n              parentStateNode.effectDuration += effectDuration;\n              break;\n            }\n            parentFiber = parentFiber.return;\n          }\n        }\n      }\n      return;\n    }\n    case SuspenseComponent: {\n      commitSuspenseHydrationCallbacks(finishedRoot, finishedWork);\n      return;\n    }\n    case SuspenseListComponent:\n    case IncompleteClassComponent:\n    case FundamentalComponent:\n    case ScopeComponent:\n    case OffscreenComponent:\n    case LegacyHiddenComponent:\n      return;\n  }\n  invariant(\n    false,\n    'This unit of work tag should not have side-effects. This error is ' +\n      'likely caused by a bug in React. Please file an issue.',\n  );\n}\n\nfunction hideOrUnhideAllChildren(finishedWork, isHidden) {\n  if (supportsMutation) {\n    // We only have the top Fiber that was inserted but we need to recurse down its\n    // children to find all the terminal nodes.\n    let node: Fiber = finishedWork;\n    while (true) {\n      if (node.tag === HostComponent) {\n        const instance = node.stateNode;\n        if (isHidden) {\n          hideInstance(instance);\n        } else {\n          unhideInstance(node.stateNode, node.memoizedProps);\n        }\n      } else if (node.tag === HostText) {\n        const instance = node.stateNode;\n        if (isHidden) {\n          hideTextInstance(instance);\n        } else {\n          unhideTextInstance(instance, node.memoizedProps);\n        }\n      } else if (\n        (node.tag === OffscreenComponent ||\n          node.tag === LegacyHiddenComponent) &&\n        (node.memoizedState: OffscreenState) !== null &&\n        node !== finishedWork\n      ) {\n        // Found a nested Offscreen component that is hidden. Don't search\n        // any deeper. This tree should remain hidden.\n      } else if (node.child !== null) {\n        node.child.return = node;\n        node = node.child;\n        continue;\n      }\n      if (node === finishedWork) {\n        return;\n      }\n      while (node.sibling === null) {\n        if (node.return === null || node.return === finishedWork) {\n          return;\n        }\n        node = node.return;\n      }\n      node.sibling.return = node.return;\n      node = node.sibling;\n    }\n  }\n}\n\nfunction commitAttachRef(finishedWork: Fiber) {\n  const ref = finishedWork.ref;\n  if (ref !== null) {\n    const instance = finishedWork.stateNode;\n    let instanceToUse;\n    switch (finishedWork.tag) {\n      case HostComponent:\n        instanceToUse = getPublicInstance(instance);\n        break;\n      default:\n        instanceToUse = instance;\n    }\n    // Moved outside to ensure DCE works with this flag\n    if (enableScopeAPI && finishedWork.tag === ScopeComponent) {\n      instanceToUse = instance;\n    }\n    if (typeof ref === 'function') {\n      ref(instanceToUse);\n    } else {\n      if (__DEV__) {\n        if (!ref.hasOwnProperty('current')) {\n          console.error(\n            'Unexpected ref object provided for %s. ' +\n              'Use either a ref-setter function or React.createRef().',\n            getComponentName(finishedWork.type),\n          );\n        }\n      }\n\n      ref.current = instanceToUse;\n    }\n  }\n}\n\nfunction commitDetachRef(current: Fiber) {\n  const currentRef = current.ref;\n  if (currentRef !== null) {\n    if (typeof currentRef === 'function') {\n      currentRef(null);\n    } else {\n      currentRef.current = null;\n    }\n  }\n}\n\n// User-originating errors (lifecycles and refs) should not interrupt\n// deletion, so don't let them throw. Host-originating errors should\n// interrupt deletion, so it's okay\nfunction commitUnmount(\n  finishedRoot: FiberRoot,\n  current: Fiber,\n  renderPriorityLevel: ReactPriorityLevel,\n): void {\n  onCommitUnmount(current);\n\n  switch (current.tag) {\n    case FunctionComponent:\n    case ForwardRef:\n    case MemoComponent:\n    case SimpleMemoComponent:\n    case Block: {\n      const updateQueue: FunctionComponentUpdateQueue | null = (current.updateQueue: any);\n      if (updateQueue !== null) {\n        const lastEffect = updateQueue.lastEffect;\n        if (lastEffect !== null) {\n          const firstEffect = lastEffect.next;\n\n          let effect = firstEffect;\n          do {\n            const {destroy, tag} = effect;\n            if (destroy !== undefined) {\n              if ((tag & HookPassive) !== NoHookEffect) {\n                enqueuePendingPassiveHookEffectUnmount(current, effect);\n              } else {\n                if (\n                  enableProfilerTimer &&\n                  enableProfilerCommitHooks &&\n                  current.mode & ProfileMode\n                ) {\n                  startLayoutEffectTimer();\n                  safelyCallDestroy(current, destroy);\n                  recordLayoutEffectDuration(current);\n                } else {\n                  safelyCallDestroy(current, destroy);\n                }\n              }\n            }\n            effect = effect.next;\n          } while (effect !== firstEffect);\n        }\n      }\n      return;\n    }\n    case ClassComponent: {\n      safelyDetachRef(current);\n      const instance = current.stateNode;\n      if (typeof instance.componentWillUnmount === 'function') {\n        safelyCallComponentWillUnmount(current, instance);\n      }\n      return;\n    }\n    case HostComponent: {\n      safelyDetachRef(current);\n      return;\n    }\n    case HostPortal: {\n      // TODO: this is recursive.\n      // We are also not using this parent because\n      // the portal will get pushed immediately.\n      if (supportsMutation) {\n        unmountHostComponents(finishedRoot, current, renderPriorityLevel);\n      } else if (supportsPersistence) {\n        emptyPortalContainer(current);\n      }\n      return;\n    }\n    case FundamentalComponent: {\n      if (enableFundamentalAPI) {\n        const fundamentalInstance = current.stateNode;\n        if (fundamentalInstance !== null) {\n          unmountFundamentalComponent(fundamentalInstance);\n          current.stateNode = null;\n        }\n      }\n      return;\n    }\n    case DehydratedFragment: {\n      if (enableSuspenseCallback) {\n        const hydrationCallbacks = finishedRoot.hydrationCallbacks;\n        if (hydrationCallbacks !== null) {\n          const onDeleted = hydrationCallbacks.onDeleted;\n          if (onDeleted) {\n            onDeleted((current.stateNode: SuspenseInstance));\n          }\n        }\n      }\n      return;\n    }\n    case ScopeComponent: {\n      if (enableScopeAPI) {\n        safelyDetachRef(current);\n      }\n      return;\n    }\n  }\n}\n\nfunction commitNestedUnmounts(\n  finishedRoot: FiberRoot,\n  root: Fiber,\n  renderPriorityLevel: ReactPriorityLevel,\n): void {\n  // While we're inside a removed host node we don't want to call\n  // removeChild on the inner nodes because they're removed by the top\n  // call anyway. We also want to call componentWillUnmount on all\n  // composites before this host node is removed from the tree. Therefore\n  // we do an inner loop while we're still inside the host node.\n  let node: Fiber = root;\n  while (true) {\n    commitUnmount(finishedRoot, node, renderPriorityLevel);\n    // Visit children because they may contain more composite or host nodes.\n    // Skip portals because commitUnmount() currently visits them recursively.\n    if (\n      node.child !== null &&\n      // If we use mutation we drill down into portals using commitUnmount above.\n      // If we don't use mutation we drill down into portals here instead.\n      (!supportsMutation || node.tag !== HostPortal)\n    ) {\n      node.child.return = node;\n      node = node.child;\n      continue;\n    }\n    if (node === root) {\n      return;\n    }\n    while (node.sibling === null) {\n      if (node.return === null || node.return === root) {\n        return;\n      }\n      node = node.return;\n    }\n    node.sibling.return = node.return;\n    node = node.sibling;\n  }\n}\n\nfunction detachFiberMutation(fiber: Fiber) {\n  // Cut off the return pointers to disconnect it from the tree. Ideally, we\n  // should clear the child pointer of the parent alternate to let this\n  // get GC:ed but we don't know which for sure which parent is the current\n  // one so we'll settle for GC:ing the subtree of this child. This child\n  // itself will be GC:ed when the parent updates the next time.\n  // Note: we cannot null out sibling here, otherwise it can cause issues\n  // with findDOMNode and how it requires the sibling field to carry out\n  // traversal in a later effect. See PR #16820. We now clear the sibling\n  // field after effects, see: detachFiberAfterEffects.\n  //\n  // Don't disconnect stateNode now; it will be detached in detachFiberAfterEffects.\n  // It may be required if the current component is an error boundary,\n  // and one of its descendants throws while unmounting a passive effect.\n  fiber.alternate = null;\n  fiber.child = null;\n  fiber.dependencies = null;\n  fiber.firstEffect = null;\n  fiber.lastEffect = null;\n  fiber.memoizedProps = null;\n  fiber.memoizedState = null;\n  fiber.pendingProps = null;\n  fiber.return = null;\n  fiber.updateQueue = null;\n  if (__DEV__) {\n    fiber._debugOwner = null;\n  }\n}\n\nfunction emptyPortalContainer(current: Fiber) {\n  if (!supportsPersistence) {\n    return;\n  }\n\n  const portal: {\n    containerInfo: Container,\n    pendingChildren: ChildSet,\n    ...\n  } = current.stateNode;\n  const {containerInfo} = portal;\n  const emptyChildSet = createContainerChildSet(containerInfo);\n  replaceContainerChildren(containerInfo, emptyChildSet);\n}\n\nfunction commitContainer(finishedWork: Fiber) {\n  if (!supportsPersistence) {\n    return;\n  }\n\n  switch (finishedWork.tag) {\n    case ClassComponent:\n    case HostComponent:\n    case HostText:\n    case FundamentalComponent: {\n      return;\n    }\n    case HostRoot:\n    case HostPortal: {\n      const portalOrRoot: {\n        containerInfo: Container,\n        pendingChildren: ChildSet,\n        ...\n      } = finishedWork.stateNode;\n      const {containerInfo, pendingChildren} = portalOrRoot;\n      replaceContainerChildren(containerInfo, pendingChildren);\n      return;\n    }\n  }\n  invariant(\n    false,\n    'This unit of work tag should not have side-effects. This error is ' +\n      'likely caused by a bug in React. Please file an issue.',\n  );\n}\n\nfunction getHostParentFiber(fiber: Fiber): Fiber {\n  let parent = fiber.return;\n  while (parent !== null) {\n    if (isHostParent(parent)) {\n      return parent;\n    }\n    parent = parent.return;\n  }\n  invariant(\n    false,\n    'Expected to find a host parent. This error is likely caused by a bug ' +\n      'in React. Please file an issue.',\n  );\n}\n\nfunction isHostParent(fiber: Fiber): boolean {\n  return (\n    fiber.tag === HostComponent ||\n    fiber.tag === HostRoot ||\n    fiber.tag === HostPortal\n  );\n}\n\nfunction getHostSibling(fiber: Fiber): ?Instance {\n  // We're going to search forward into the tree until we find a sibling host\n  // node. Unfortunately, if multiple insertions are done in a row we have to\n  // search past them. This leads to exponential search for the next sibling.\n  // TODO: Find a more efficient way to do this.\n  let node: Fiber = fiber;\n  siblings: while (true) {\n    // If we didn't find anything, let's try the next sibling.\n    while (node.sibling === null) {\n      if (node.return === null || isHostParent(node.return)) {\n        // If we pop out of the root or hit the parent the fiber we are the\n        // last sibling.\n        return null;\n      }\n      node = node.return;\n    }\n    node.sibling.return = node.return;\n    node = node.sibling;\n    while (\n      node.tag !== HostComponent &&\n      node.tag !== HostText &&\n      node.tag !== DehydratedFragment\n    ) {\n      // If it is not host node and, we might have a host node inside it.\n      // Try to search down until we find one.\n      if (node.flags & Placement) {\n        // If we don't have a child, try the siblings instead.\n        continue siblings;\n      }\n      // If we don't have a child, try the siblings instead.\n      // We also skip portals because they are not part of this host tree.\n      if (node.child === null || node.tag === HostPortal) {\n        continue siblings;\n      } else {\n        node.child.return = node;\n        node = node.child;\n      }\n    }\n    // Check if this host node is stable or about to be placed.\n    if (!(node.flags & Placement)) {\n      // Found it!\n      return node.stateNode;\n    }\n  }\n}\n\nfunction commitPlacement(finishedWork: Fiber): void {\n  if (!supportsMutation) {\n    return;\n  }\n\n  // Recursively insert all host nodes into the parent.\n  const parentFiber = getHostParentFiber(finishedWork);\n\n  // Note: these two variables *must* always be updated together.\n  let parent;\n  let isContainer;\n  const parentStateNode = parentFiber.stateNode;\n  switch (parentFiber.tag) {\n    case HostComponent:\n      parent = parentStateNode;\n      isContainer = false;\n      break;\n    case HostRoot:\n      parent = parentStateNode.containerInfo;\n      isContainer = true;\n      break;\n    case HostPortal:\n      parent = parentStateNode.containerInfo;\n      isContainer = true;\n      break;\n    case FundamentalComponent:\n      if (enableFundamentalAPI) {\n        parent = parentStateNode.instance;\n        isContainer = false;\n      }\n    // eslint-disable-next-line-no-fallthrough\n    default:\n      invariant(\n        false,\n        'Invalid host parent fiber. This error is likely caused by a bug ' +\n          'in React. Please file an issue.',\n      );\n  }\n  if (parentFiber.flags & ContentReset) {\n    // Reset the text content of the parent before doing any insertions\n    resetTextContent(parent);\n    // Clear ContentReset from the effect tag\n    parentFiber.flags &= ~ContentReset;\n  }\n\n  const before = getHostSibling(finishedWork);\n  // We only have the top Fiber that was inserted but we need to recurse down its\n  // children to find all the terminal nodes.\n  if (isContainer) {\n    insertOrAppendPlacementNodeIntoContainer(finishedWork, before, parent);\n  } else {\n    insertOrAppendPlacementNode(finishedWork, before, parent);\n  }\n}\n\nfunction insertOrAppendPlacementNodeIntoContainer(\n  node: Fiber,\n  before: ?Instance,\n  parent: Container,\n): void {\n  const {tag} = node;\n  const isHost = tag === HostComponent || tag === HostText;\n  if (isHost || (enableFundamentalAPI && tag === FundamentalComponent)) {\n    const stateNode = isHost ? node.stateNode : node.stateNode.instance;\n    if (before) {\n      insertInContainerBefore(parent, stateNode, before);\n    } else {\n      appendChildToContainer(parent, stateNode);\n    }\n  } else if (tag === HostPortal) {\n    // If the insertion itself is a portal, then we don't want to traverse\n    // down its children. Instead, we'll get insertions from each child in\n    // the portal directly.\n  } else {\n    const child = node.child;\n    if (child !== null) {\n      insertOrAppendPlacementNodeIntoContainer(child, before, parent);\n      let sibling = child.sibling;\n      while (sibling !== null) {\n        insertOrAppendPlacementNodeIntoContainer(sibling, before, parent);\n        sibling = sibling.sibling;\n      }\n    }\n  }\n}\n\nfunction insertOrAppendPlacementNode(\n  node: Fiber,\n  before: ?Instance,\n  parent: Instance,\n): void {\n  const {tag} = node;\n  const isHost = tag === HostComponent || tag === HostText;\n  if (isHost || (enableFundamentalAPI && tag === FundamentalComponent)) {\n    const stateNode = isHost ? node.stateNode : node.stateNode.instance;\n    if (before) {\n      insertBefore(parent, stateNode, before);\n    } else {\n      appendChild(parent, stateNode);\n    }\n  } else if (tag === HostPortal) {\n    // If the insertion itself is a portal, then we don't want to traverse\n    // down its children. Instead, we'll get insertions from each child in\n    // the portal directly.\n  } else {\n    const child = node.child;\n    if (child !== null) {\n      insertOrAppendPlacementNode(child, before, parent);\n      let sibling = child.sibling;\n      while (sibling !== null) {\n        insertOrAppendPlacementNode(sibling, before, parent);\n        sibling = sibling.sibling;\n      }\n    }\n  }\n}\n\nfunction unmountHostComponents(\n  finishedRoot: FiberRoot,\n  current: Fiber,\n  renderPriorityLevel: ReactPriorityLevel,\n): void {\n  // We only have the top Fiber that was deleted but we need to recurse down its\n  // children to find all the terminal nodes.\n  let node: Fiber = current;\n\n  // Each iteration, currentParent is populated with node's host parent if not\n  // currentParentIsValid.\n  let currentParentIsValid = false;\n\n  // Note: these two variables *must* always be updated together.\n  let currentParent;\n  let currentParentIsContainer;\n\n  while (true) {\n    if (!currentParentIsValid) {\n      let parent = node.return;\n      findParent: while (true) {\n        invariant(\n          parent !== null,\n          'Expected to find a host parent. This error is likely caused by ' +\n            'a bug in React. Please file an issue.',\n        );\n        const parentStateNode = parent.stateNode;\n        switch (parent.tag) {\n          case HostComponent:\n            currentParent = parentStateNode;\n            currentParentIsContainer = false;\n            break findParent;\n          case HostRoot:\n            currentParent = parentStateNode.containerInfo;\n            currentParentIsContainer = true;\n            break findParent;\n          case HostPortal:\n            currentParent = parentStateNode.containerInfo;\n            currentParentIsContainer = true;\n            break findParent;\n          case FundamentalComponent:\n            if (enableFundamentalAPI) {\n              currentParent = parentStateNode.instance;\n              currentParentIsContainer = false;\n            }\n        }\n        parent = parent.return;\n      }\n      currentParentIsValid = true;\n    }\n\n    if (node.tag === HostComponent || node.tag === HostText) {\n      commitNestedUnmounts(finishedRoot, node, renderPriorityLevel);\n      // After all the children have unmounted, it is now safe to remove the\n      // node from the tree.\n      if (currentParentIsContainer) {\n        removeChildFromContainer(\n          ((currentParent: any): Container),\n          (node.stateNode: Instance | TextInstance),\n        );\n      } else {\n        removeChild(\n          ((currentParent: any): Instance),\n          (node.stateNode: Instance | TextInstance),\n        );\n      }\n      // Don't visit children because we already visited them.\n    } else if (enableFundamentalAPI && node.tag === FundamentalComponent) {\n      const fundamentalNode = node.stateNode.instance;\n      commitNestedUnmounts(finishedRoot, node, renderPriorityLevel);\n      // After all the children have unmounted, it is now safe to remove the\n      // node from the tree.\n      if (currentParentIsContainer) {\n        removeChildFromContainer(\n          ((currentParent: any): Container),\n          (fundamentalNode: Instance),\n        );\n      } else {\n        removeChild(\n          ((currentParent: any): Instance),\n          (fundamentalNode: Instance),\n        );\n      }\n    } else if (\n      enableSuspenseServerRenderer &&\n      node.tag === DehydratedFragment\n    ) {\n      if (enableSuspenseCallback) {\n        const hydrationCallbacks = finishedRoot.hydrationCallbacks;\n        if (hydrationCallbacks !== null) {\n          const onDeleted = hydrationCallbacks.onDeleted;\n          if (onDeleted) {\n            onDeleted((node.stateNode: SuspenseInstance));\n          }\n        }\n      }\n\n      // Delete the dehydrated suspense boundary and all of its content.\n      if (currentParentIsContainer) {\n        clearSuspenseBoundaryFromContainer(\n          ((currentParent: any): Container),\n          (node.stateNode: SuspenseInstance),\n        );\n      } else {\n        clearSuspenseBoundary(\n          ((currentParent: any): Instance),\n          (node.stateNode: SuspenseInstance),\n        );\n      }\n    } else if (node.tag === HostPortal) {\n      if (node.child !== null) {\n        // When we go into a portal, it becomes the parent to remove from.\n        // We will reassign it back when we pop the portal on the way up.\n        currentParent = node.stateNode.containerInfo;\n        currentParentIsContainer = true;\n        // Visit children because portals might contain host components.\n        node.child.return = node;\n        node = node.child;\n        continue;\n      }\n    } else {\n      commitUnmount(finishedRoot, node, renderPriorityLevel);\n      // Visit children because we may find more host components below.\n      if (node.child !== null) {\n        node.child.return = node;\n        node = node.child;\n        continue;\n      }\n    }\n    if (node === current) {\n      return;\n    }\n    while (node.sibling === null) {\n      if (node.return === null || node.return === current) {\n        return;\n      }\n      node = node.return;\n      if (node.tag === HostPortal) {\n        // When we go out of the portal, we need to restore the parent.\n        // Since we don't keep a stack of them, we will search for it.\n        currentParentIsValid = false;\n      }\n    }\n    node.sibling.return = node.return;\n    node = node.sibling;\n  }\n}\n\nfunction commitDeletion(\n  finishedRoot: FiberRoot,\n  current: Fiber,\n  renderPriorityLevel: ReactPriorityLevel,\n): void {\n  if (supportsMutation) {\n    // Recursively delete all host nodes from the parent.\n    // Detach refs and call componentWillUnmount() on the whole subtree.\n    unmountHostComponents(finishedRoot, current, renderPriorityLevel);\n  } else {\n    // Detach refs and call componentWillUnmount() on the whole subtree.\n    commitNestedUnmounts(finishedRoot, current, renderPriorityLevel);\n  }\n  const alternate = current.alternate;\n  detachFiberMutation(current);\n  if (alternate !== null) {\n    detachFiberMutation(alternate);\n  }\n}\n\nfunction commitWork(current: Fiber | null, finishedWork: Fiber): void {\n  if (!supportsMutation) {\n    switch (finishedWork.tag) {\n      case FunctionComponent:\n      case ForwardRef:\n      case MemoComponent:\n      case SimpleMemoComponent:\n      case Block: {\n        // Layout effects are destroyed during the mutation phase so that all\n        // destroy functions for all fibers are called before any create functions.\n        // This prevents sibling component effects from interfering with each other,\n        // e.g. a destroy function in one component should never override a ref set\n        // by a create function in another component during the same commit.\n        if (\n          enableProfilerTimer &&\n          enableProfilerCommitHooks &&\n          finishedWork.mode & ProfileMode\n        ) {\n          try {\n            startLayoutEffectTimer();\n            commitHookEffectListUnmount(\n              HookLayout | HookHasEffect,\n              finishedWork,\n            );\n          } finally {\n            recordLayoutEffectDuration(finishedWork);\n          }\n        } else {\n          commitHookEffectListUnmount(HookLayout | HookHasEffect, finishedWork);\n        }\n        return;\n      }\n      case Profiler: {\n        return;\n      }\n      case SuspenseComponent: {\n        commitSuspenseComponent(finishedWork);\n        attachSuspenseRetryListeners(finishedWork);\n        return;\n      }\n      case SuspenseListComponent: {\n        attachSuspenseRetryListeners(finishedWork);\n        return;\n      }\n      case HostRoot: {\n        if (supportsHydration) {\n          const root: FiberRoot = finishedWork.stateNode;\n          if (root.hydrate) {\n            // We've just hydrated. No need to hydrate again.\n            root.hydrate = false;\n            commitHydratedContainer(root.containerInfo);\n          }\n        }\n        break;\n      }\n      case OffscreenComponent:\n      case LegacyHiddenComponent: {\n        return;\n      }\n    }\n\n    commitContainer(finishedWork);\n    return;\n  }\n\n  switch (finishedWork.tag) {\n    case FunctionComponent:\n    case ForwardRef:\n    case MemoComponent:\n    case SimpleMemoComponent:\n    case Block: {\n      // Layout effects are destroyed during the mutation phase so that all\n      // destroy functions for all fibers are called before any create functions.\n      // This prevents sibling component effects from interfering with each other,\n      // e.g. a destroy function in one component should never override a ref set\n      // by a create function in another component during the same commit.\n      if (\n        enableProfilerTimer &&\n        enableProfilerCommitHooks &&\n        finishedWork.mode & ProfileMode\n      ) {\n        try {\n          startLayoutEffectTimer();\n          commitHookEffectListUnmount(HookLayout | HookHasEffect, finishedWork);\n        } finally {\n          recordLayoutEffectDuration(finishedWork);\n        }\n      } else {\n        commitHookEffectListUnmount(HookLayout | HookHasEffect, finishedWork);\n      }\n      return;\n    }\n    case ClassComponent: {\n      return;\n    }\n    case HostComponent: {\n      const instance: Instance = finishedWork.stateNode;\n      if (instance != null) {\n        // Commit the work prepared earlier.\n        const newProps = finishedWork.memoizedProps;\n        // For hydration we reuse the update path but we treat the oldProps\n        // as the newProps. The updatePayload will contain the real change in\n        // this case.\n        const oldProps = current !== null ? current.memoizedProps : newProps;\n        const type = finishedWork.type;\n        // TODO: Type the updateQueue to be specific to host components.\n        const updatePayload: null | UpdatePayload = (finishedWork.updateQueue: any);\n        finishedWork.updateQueue = null;\n        if (updatePayload !== null) {\n          commitUpdate(\n            instance,\n            updatePayload,\n            type,\n            oldProps,\n            newProps,\n            finishedWork,\n          );\n        }\n      }\n      return;\n    }\n    case HostText: {\n      invariant(\n        finishedWork.stateNode !== null,\n        'This should have a text node initialized. This error is likely ' +\n          'caused by a bug in React. Please file an issue.',\n      );\n      const textInstance: TextInstance = finishedWork.stateNode;\n      const newText: string = finishedWork.memoizedProps;\n      // For hydration we reuse the update path but we treat the oldProps\n      // as the newProps. The updatePayload will contain the real change in\n      // this case.\n      const oldText: string =\n        current !== null ? current.memoizedProps : newText;\n      commitTextUpdate(textInstance, oldText, newText);\n      return;\n    }\n    case HostRoot: {\n      if (supportsHydration) {\n        const root: FiberRoot = finishedWork.stateNode;\n        if (root.hydrate) {\n          // We've just hydrated. No need to hydrate again.\n          root.hydrate = false;\n          commitHydratedContainer(root.containerInfo);\n        }\n      }\n      return;\n    }\n    case Profiler: {\n      return;\n    }\n    case SuspenseComponent: {\n      commitSuspenseComponent(finishedWork);\n      attachSuspenseRetryListeners(finishedWork);\n      return;\n    }\n    case SuspenseListComponent: {\n      attachSuspenseRetryListeners(finishedWork);\n      return;\n    }\n    case IncompleteClassComponent: {\n      return;\n    }\n    case FundamentalComponent: {\n      if (enableFundamentalAPI) {\n        const fundamentalInstance = finishedWork.stateNode;\n        updateFundamentalComponent(fundamentalInstance);\n        return;\n      }\n      break;\n    }\n    case ScopeComponent: {\n      if (enableScopeAPI) {\n        const scopeInstance = finishedWork.stateNode;\n        prepareScopeUpdate(scopeInstance, finishedWork);\n        return;\n      }\n      break;\n    }\n    case OffscreenComponent:\n    case LegacyHiddenComponent: {\n      const newState: OffscreenState | null = finishedWork.memoizedState;\n      const isHidden = newState !== null;\n      hideOrUnhideAllChildren(finishedWork, isHidden);\n      return;\n    }\n  }\n  invariant(\n    false,\n    'This unit of work tag should not have side-effects. This error is ' +\n      'likely caused by a bug in React. Please file an issue.',\n  );\n}\n\nfunction commitSuspenseComponent(finishedWork: Fiber) {\n  const newState: SuspenseState | null = finishedWork.memoizedState;\n\n  if (newState !== null) {\n    markCommitTimeOfFallback();\n\n    if (supportsMutation) {\n      // Hide the Offscreen component that contains the primary children. TODO:\n      // Ideally, this effect would have been scheduled on the Offscreen fiber\n      // itself. That's how unhiding works: the Offscreen component schedules an\n      // effect on itself. However, in this case, the component didn't complete,\n      // so the fiber was never added to the effect list in the normal path. We\n      // could have appended it to the effect list in the Suspense component's\n      // second pass, but doing it this way is less complicated. This would be\n      // simpler if we got rid of the effect list and traversed the tree, like\n      // we're planning to do.\n      const primaryChildParent: Fiber = (finishedWork.child: any);\n      hideOrUnhideAllChildren(primaryChildParent, true);\n    }\n  }\n\n  if (enableSuspenseCallback && newState !== null) {\n    const suspenseCallback = finishedWork.memoizedProps.suspenseCallback;\n    if (typeof suspenseCallback === 'function') {\n      const wakeables: Set<Wakeable> | null = (finishedWork.updateQueue: any);\n      if (wakeables !== null) {\n        suspenseCallback(new Set(wakeables));\n      }\n    } else if (__DEV__) {\n      if (suspenseCallback !== undefined) {\n        console.error('Unexpected type for suspenseCallback.');\n      }\n    }\n  }\n}\n\nfunction commitSuspenseHydrationCallbacks(\n  finishedRoot: FiberRoot,\n  finishedWork: Fiber,\n) {\n  if (!supportsHydration) {\n    return;\n  }\n  const newState: SuspenseState | null = finishedWork.memoizedState;\n  if (newState === null) {\n    const current = finishedWork.alternate;\n    if (current !== null) {\n      const prevState: SuspenseState | null = current.memoizedState;\n      if (prevState !== null) {\n        const suspenseInstance = prevState.dehydrated;\n        if (suspenseInstance !== null) {\n          commitHydratedSuspenseInstance(suspenseInstance);\n          if (enableSuspenseCallback) {\n            const hydrationCallbacks = finishedRoot.hydrationCallbacks;\n            if (hydrationCallbacks !== null) {\n              const onHydrated = hydrationCallbacks.onHydrated;\n              if (onHydrated) {\n                onHydrated(suspenseInstance);\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n\nfunction attachSuspenseRetryListeners(finishedWork: Fiber) {\n  // If this boundary just timed out, then it will have a set of wakeables.\n  // For each wakeable, attach a listener so that when it resolves, React\n  // attempts to re-render the boundary in the primary (pre-timeout) state.\n  const wakeables: Set<Wakeable> | null = (finishedWork.updateQueue: any);\n  if (wakeables !== null) {\n    finishedWork.updateQueue = null;\n    let retryCache = finishedWork.stateNode;\n    if (retryCache === null) {\n      retryCache = finishedWork.stateNode = new PossiblyWeakSet();\n    }\n    wakeables.forEach(wakeable => {\n      // Memoize using the boundary fiber to prevent redundant listeners.\n      let retry = resolveRetryWakeable.bind(null, finishedWork, wakeable);\n      if (!retryCache.has(wakeable)) {\n        if (enableSchedulerTracing) {\n          if (wakeable.__reactDoNotTraceInteractions !== true) {\n            retry = Schedule_tracing_wrap(retry);\n          }\n        }\n        retryCache.add(wakeable);\n        wakeable.then(retry, retry);\n      }\n    });\n  }\n}\n\n// This function detects when a Suspense boundary goes from visible to hidden.\n// It returns false if the boundary is already hidden.\n// TODO: Use an effect tag.\nexport function isSuspenseBoundaryBeingHidden(\n  current: Fiber | null,\n  finishedWork: Fiber,\n): boolean {\n  if (current !== null) {\n    const oldState: SuspenseState | null = current.memoizedState;\n    if (oldState === null || oldState.dehydrated !== null) {\n      const newState: SuspenseState | null = finishedWork.memoizedState;\n      return newState !== null && newState.dehydrated === null;\n    }\n  }\n  return false;\n}\n\nfunction commitResetTextContent(current: Fiber) {\n  if (!supportsMutation) {\n    return;\n  }\n  resetTextContent(current.stateNode);\n}\n\nexport {\n  commitBeforeMutationLifeCycles,\n  commitResetTextContent,\n  commitPlacement,\n  commitDeletion,\n  commitWork,\n  commitLifeCycles,\n  commitAttachRef,\n  commitDetachRef,\n};\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from 'react-reconciler/src/ReactInternalTypes';\nimport type {Instance} from './ReactFiberHostConfig';\n\nimport invariant from 'shared/invariant';\nimport {HostComponent, HostText} from 'react-reconciler/src/ReactWorkTags';\nimport getComponentName from 'shared/getComponentName';\nimport {\n  findFiberRoot,\n  getBoundingRect,\n  getInstanceFromNode,\n  getTextContent,\n  isHiddenSubtree,\n  matchAccessibilityRole,\n  setFocusIfFocusable,\n  setupIntersectionObserver,\n  supportsTestSelectors,\n} from './ReactFiberHostConfig';\n\nlet COMPONENT_TYPE = 0b000;\nlet HAS_PSEUDO_CLASS_TYPE = 0b001;\nlet ROLE_TYPE = 0b010;\nlet TEST_NAME_TYPE = 0b011;\nlet TEXT_TYPE = 0b100;\n\nif (typeof Symbol === 'function' && Symbol.for) {\n  const symbolFor = Symbol.for;\n  COMPONENT_TYPE = symbolFor('selector.component');\n  HAS_PSEUDO_CLASS_TYPE = symbolFor('selector.has_pseudo_class');\n  ROLE_TYPE = symbolFor('selector.role');\n  TEST_NAME_TYPE = symbolFor('selector.test_id');\n  TEXT_TYPE = symbolFor('selector.text');\n}\n\ntype Type = Symbol | number;\n\ntype ComponentSelector = {|\n  $$typeof: Type,\n  value: React$AbstractComponent<empty, mixed>,\n|};\n\ntype HasPsuedoClassSelector = {|\n  $$typeof: Type,\n  value: Array<Selector>,\n|};\n\ntype RoleSelector = {|\n  $$typeof: Type,\n  value: string,\n|};\n\ntype TextSelector = {|\n  $$typeof: Type,\n  value: string,\n|};\n\ntype TestNameSelector = {|\n  $$typeof: Type,\n  value: string,\n|};\n\ntype Selector =\n  | ComponentSelector\n  | HasPsuedoClassSelector\n  | RoleSelector\n  | TextSelector\n  | TestNameSelector;\n\nexport function createComponentSelector(\n  component: React$AbstractComponent<empty, mixed>,\n): ComponentSelector {\n  return {\n    $$typeof: COMPONENT_TYPE,\n    value: component,\n  };\n}\n\nexport function createHasPsuedoClassSelector(\n  selectors: Array<Selector>,\n): HasPsuedoClassSelector {\n  return {\n    $$typeof: HAS_PSEUDO_CLASS_TYPE,\n    value: selectors,\n  };\n}\n\nexport function createRoleSelector(role: string): RoleSelector {\n  return {\n    $$typeof: ROLE_TYPE,\n    value: role,\n  };\n}\n\nexport function createTextSelector(text: string): TextSelector {\n  return {\n    $$typeof: TEXT_TYPE,\n    value: text,\n  };\n}\n\nexport function createTestNameSelector(id: string): TestNameSelector {\n  return {\n    $$typeof: TEST_NAME_TYPE,\n    value: id,\n  };\n}\n\nfunction findFiberRootForHostRoot(hostRoot: Instance): Fiber {\n  const maybeFiber = getInstanceFromNode((hostRoot: any));\n  if (maybeFiber != null) {\n    invariant(\n      typeof maybeFiber.memoizedProps['data-testname'] === 'string',\n      'Invalid host root specified. Should be either a React container or a node with a testname attribute.',\n    );\n    return ((maybeFiber: any): Fiber);\n  } else {\n    const fiberRoot = findFiberRoot(hostRoot);\n    invariant(\n      fiberRoot !== null,\n      'Could not find React container within specified host subtree.',\n    );\n    // The Flow type for FiberRoot is a little funky.\n    // createFiberRoot() cheats this by treating the root as :any and adding stateNode lazily.\n    return ((fiberRoot: any).stateNode.current: Fiber);\n  }\n}\n\nfunction matchSelector(fiber: Fiber, selector: Selector): boolean {\n  switch (selector.$$typeof) {\n    case COMPONENT_TYPE:\n      if (fiber.type === selector.value) {\n        return true;\n      }\n      break;\n    case HAS_PSEUDO_CLASS_TYPE:\n      return hasMatchingPaths(\n        fiber,\n        ((selector: any): HasPsuedoClassSelector).value,\n      );\n    case ROLE_TYPE:\n      if (fiber.tag === HostComponent) {\n        const node = fiber.stateNode;\n        if (\n          matchAccessibilityRole(node, ((selector: any): RoleSelector).value)\n        ) {\n          return true;\n        }\n      }\n      break;\n    case TEXT_TYPE:\n      if (fiber.tag === HostComponent || fiber.tag === HostText) {\n        const textContent = getTextContent(fiber);\n        if (\n          textContent !== null &&\n          textContent.indexOf(((selector: any): TextSelector).value) >= 0\n        ) {\n          return true;\n        }\n      }\n      break;\n    case TEST_NAME_TYPE:\n      if (fiber.tag === HostComponent) {\n        const dataTestID = fiber.memoizedProps['data-testname'];\n        if (\n          typeof dataTestID === 'string' &&\n          dataTestID.toLowerCase() ===\n            ((selector: any): TestNameSelector).value.toLowerCase()\n        ) {\n          return true;\n        }\n      }\n      break;\n    default:\n      invariant(null, 'Invalid selector type %s specified.', selector);\n      break;\n  }\n\n  return false;\n}\n\nfunction selectorToString(selector: Selector): string | null {\n  switch (selector.$$typeof) {\n    case COMPONENT_TYPE:\n      const displayName = getComponentName(selector.value) || 'Unknown';\n      return `<${displayName}>`;\n    case HAS_PSEUDO_CLASS_TYPE:\n      return `:has(${selectorToString(selector) || ''})`;\n    case ROLE_TYPE:\n      return `[role=\"${((selector: any): RoleSelector).value}\"]`;\n    case TEXT_TYPE:\n      return `\"${((selector: any): TextSelector).value}\"`;\n    case TEST_NAME_TYPE:\n      return `[data-testname=\"${((selector: any): TestNameSelector).value}\"]`;\n    default:\n      invariant(null, 'Invalid selector type %s specified.', selector);\n      break;\n  }\n\n  return null;\n}\n\nfunction findPaths(root: Fiber, selectors: Array<Selector>): Array<Fiber> {\n  const matchingFibers: Array<Fiber> = [];\n\n  const stack = [root, 0];\n  let index = 0;\n  while (index < stack.length) {\n    const fiber = ((stack[index++]: any): Fiber);\n    let selectorIndex = ((stack[index++]: any): number);\n    let selector = selectors[selectorIndex];\n\n    if (fiber.tag === HostComponent && isHiddenSubtree(fiber)) {\n      continue;\n    } else {\n      while (selector != null && matchSelector(fiber, selector)) {\n        selectorIndex++;\n        selector = selectors[selectorIndex];\n      }\n    }\n\n    if (selectorIndex === selectors.length) {\n      matchingFibers.push(fiber);\n    } else {\n      let child = fiber.child;\n      while (child !== null) {\n        stack.push(child, selectorIndex);\n        child = child.sibling;\n      }\n    }\n  }\n\n  return matchingFibers;\n}\n\n// Same as findPaths but with eager bailout on first match\nfunction hasMatchingPaths(root: Fiber, selectors: Array<Selector>): boolean {\n  const stack = [root, 0];\n  let index = 0;\n  while (index < stack.length) {\n    const fiber = ((stack[index++]: any): Fiber);\n    let selectorIndex = ((stack[index++]: any): number);\n    let selector = selectors[selectorIndex];\n\n    if (fiber.tag === HostComponent && isHiddenSubtree(fiber)) {\n      continue;\n    } else {\n      while (selector != null && matchSelector(fiber, selector)) {\n        selectorIndex++;\n        selector = selectors[selectorIndex];\n      }\n    }\n\n    if (selectorIndex === selectors.length) {\n      return true;\n    } else {\n      let child = fiber.child;\n      while (child !== null) {\n        stack.push(child, selectorIndex);\n        child = child.sibling;\n      }\n    }\n  }\n\n  return false;\n}\n\nexport function findAllNodes(\n  hostRoot: Instance,\n  selectors: Array<Selector>,\n): Array<Instance> {\n  if (!supportsTestSelectors) {\n    invariant(false, 'Test selector API is not supported by this renderer.');\n  }\n\n  const root = findFiberRootForHostRoot(hostRoot);\n  const matchingFibers = findPaths(root, selectors);\n\n  const instanceRoots: Array<Instance> = [];\n\n  const stack = Array.from(matchingFibers);\n  let index = 0;\n  while (index < stack.length) {\n    const node = ((stack[index++]: any): Fiber);\n    if (node.tag === HostComponent) {\n      if (isHiddenSubtree(node)) {\n        continue;\n      }\n      instanceRoots.push(node.stateNode);\n    } else {\n      let child = node.child;\n      while (child !== null) {\n        stack.push(child);\n        child = child.sibling;\n      }\n    }\n  }\n\n  return instanceRoots;\n}\n\nexport function getFindAllNodesFailureDescription(\n  hostRoot: Instance,\n  selectors: Array<Selector>,\n): string | null {\n  if (!supportsTestSelectors) {\n    invariant(false, 'Test selector API is not supported by this renderer.');\n  }\n\n  const root = findFiberRootForHostRoot(hostRoot);\n\n  let maxSelectorIndex: number = 0;\n  const matchedNames = [];\n\n  // The logic of this loop should be kept in sync with findPaths()\n  const stack = [root, 0];\n  let index = 0;\n  while (index < stack.length) {\n    const fiber = ((stack[index++]: any): Fiber);\n    let selectorIndex = ((stack[index++]: any): number);\n    const selector = selectors[selectorIndex];\n\n    if (fiber.tag === HostComponent && isHiddenSubtree(fiber)) {\n      continue;\n    } else if (matchSelector(fiber, selector)) {\n      matchedNames.push(selectorToString(selector));\n      selectorIndex++;\n\n      if (selectorIndex > maxSelectorIndex) {\n        maxSelectorIndex = selectorIndex;\n      }\n    }\n\n    if (selectorIndex < selectors.length) {\n      let child = fiber.child;\n      while (child !== null) {\n        stack.push(child, selectorIndex);\n        child = child.sibling;\n      }\n    }\n  }\n\n  if (maxSelectorIndex < selectors.length) {\n    const unmatchedNames = [];\n    for (let i = maxSelectorIndex; i < selectors.length; i++) {\n      unmatchedNames.push(selectorToString(selectors[i]));\n    }\n\n    return (\n      'findAllNodes was able to match part of the selector:\\n' +\n      `  ${matchedNames.join(' > ')}\\n\\n` +\n      'No matching component was found for:\\n' +\n      `  ${unmatchedNames.join(' > ')}`\n    );\n  }\n\n  return null;\n}\n\nexport type BoundingRect = {|\n  x: number,\n  y: number,\n  width: number,\n  height: number,\n|};\n\nexport function findBoundingRects(\n  hostRoot: Instance,\n  selectors: Array<Selector>,\n): Array<BoundingRect> {\n  if (!supportsTestSelectors) {\n    invariant(false, 'Test selector API is not supported by this renderer.');\n  }\n\n  const instanceRoots = findAllNodes(hostRoot, selectors);\n\n  const boundingRects: Array<BoundingRect> = [];\n  for (let i = 0; i < instanceRoots.length; i++) {\n    boundingRects.push(getBoundingRect(instanceRoots[i]));\n  }\n\n  for (let i = boundingRects.length - 1; i > 0; i--) {\n    const targetRect = boundingRects[i];\n    const targetLeft = targetRect.x;\n    const targetRight = targetLeft + targetRect.width;\n    const targetTop = targetRect.y;\n    const targetBottom = targetTop + targetRect.height;\n\n    for (let j = i - 1; j >= 0; j--) {\n      if (i !== j) {\n        const otherRect = boundingRects[j];\n        const otherLeft = otherRect.x;\n        const otherRight = otherLeft + otherRect.width;\n        const otherTop = otherRect.y;\n        const otherBottom = otherTop + otherRect.height;\n\n        // Merging all rects to the minimums set would be complicated,\n        // but we can handle the most common cases:\n        // 1. completely overlapping rects\n        // 2. adjacent rects that are the same width or height (e.g. items in a list)\n        //\n        // Even given the above constraints,\n        // we still won't end up with the fewest possible rects without doing multiple passes,\n        // but it's good enough for this purpose.\n\n        if (\n          targetLeft >= otherLeft &&\n          targetTop >= otherTop &&\n          targetRight <= otherRight &&\n          targetBottom <= otherBottom\n        ) {\n          // Complete overlapping rects; remove the inner one.\n          boundingRects.splice(i, 1);\n          break;\n        } else if (\n          targetLeft === otherLeft &&\n          targetRect.width === otherRect.width &&\n          !(otherBottom < targetTop) &&\n          !(otherTop > targetBottom)\n        ) {\n          // Adjacent vertical rects; merge them.\n          if (otherTop > targetTop) {\n            otherRect.height += otherTop - targetTop;\n            otherRect.y = targetTop;\n          }\n          if (otherBottom < targetBottom) {\n            otherRect.height = targetBottom - otherTop;\n          }\n\n          boundingRects.splice(i, 1);\n          break;\n        } else if (\n          targetTop === otherTop &&\n          targetRect.height === otherRect.height &&\n          !(otherRight < targetLeft) &&\n          !(otherLeft > targetRight)\n        ) {\n          // Adjacent horizontal rects; merge them.\n          if (otherLeft > targetLeft) {\n            otherRect.width += otherLeft - targetLeft;\n            otherRect.x = targetLeft;\n          }\n          if (otherRight < targetRight) {\n            otherRect.width = targetRight - otherLeft;\n          }\n\n          boundingRects.splice(i, 1);\n          break;\n        }\n      }\n    }\n  }\n\n  return boundingRects;\n}\n\nexport function focusWithin(\n  hostRoot: Instance,\n  selectors: Array<Selector>,\n): boolean {\n  if (!supportsTestSelectors) {\n    invariant(false, 'Test selector API is not supported by this renderer.');\n  }\n\n  const root = findFiberRootForHostRoot(hostRoot);\n  const matchingFibers = findPaths(root, selectors);\n\n  const stack = Array.from(matchingFibers);\n  let index = 0;\n  while (index < stack.length) {\n    const fiber = ((stack[index++]: any): Fiber);\n    if (isHiddenSubtree(fiber)) {\n      continue;\n    }\n    if (fiber.tag === HostComponent) {\n      const node = fiber.stateNode;\n      if (setFocusIfFocusable(node)) {\n        return true;\n      }\n    }\n    let child = fiber.child;\n    while (child !== null) {\n      stack.push(child);\n      child = child.sibling;\n    }\n  }\n\n  return false;\n}\n\nconst commitHooks: Array<Function> = [];\n\nexport function onCommitRoot(): void {\n  if (supportsTestSelectors) {\n    commitHooks.forEach(commitHook => commitHook());\n  }\n}\n\nexport type IntersectionObserverOptions = Object;\n\nexport type ObserveVisibleRectsCallback = (\n  intersections: Array<{ratio: number, rect: BoundingRect}>,\n) => void;\n\nexport function observeVisibleRects(\n  hostRoot: Instance,\n  selectors: Array<Selector>,\n  callback: (intersections: Array<{ratio: number, rect: BoundingRect}>) => void,\n  options?: IntersectionObserverOptions,\n): {|disconnect: () => void|} {\n  if (!supportsTestSelectors) {\n    invariant(false, 'Test selector API is not supported by this renderer.');\n  }\n\n  const instanceRoots = findAllNodes(hostRoot, selectors);\n\n  const {disconnect, observe, unobserve} = setupIntersectionObserver(\n    instanceRoots,\n    callback,\n    options,\n  );\n\n  // When React mutates the host environment, we may need to change what we're listening to.\n  const commitHook = () => {\n    const nextInstanceRoots = findAllNodes(hostRoot, selectors);\n\n    instanceRoots.forEach(target => {\n      if (nextInstanceRoots.indexOf(target) < 0) {\n        unobserve(target);\n      }\n    });\n\n    nextInstanceRoots.forEach(target => {\n      if (instanceRoots.indexOf(target) < 0) {\n        observe(target);\n      }\n    });\n  };\n\n  commitHooks.push(commitHook);\n\n  return {\n    disconnect: () => {\n      // Stop listening for React mutations:\n      const index = commitHooks.indexOf(commitHook);\n      if (index >= 0) {\n        commitHooks.splice(index, 1);\n      }\n\n      // Disconnect the host observer:\n      disconnect();\n    },\n  };\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Thenable, Wakeable} from 'shared/ReactTypes';\nimport type {Fiber, FiberRoot} from './ReactInternalTypes';\nimport type {Lanes, Lane} from './ReactFiberLane';\nimport type {ReactPriorityLevel} from './ReactInternalTypes';\nimport type {Interaction} from 'scheduler/src/Tracing';\nimport type {SuspenseState} from './ReactFiberSuspenseComponent.old';\nimport type {Effect as HookEffect} from './ReactFiberHooks.old';\nimport type {StackCursor} from './ReactFiberStack.old';\n\nimport {\n  warnAboutDeprecatedLifecycles,\n  enableSuspenseServerRenderer,\n  replayFailedUnitOfWorkWithInvokeGuardedCallback,\n  enableProfilerTimer,\n  enableProfilerCommitHooks,\n  enableSchedulerTracing,\n  warnAboutUnmockedScheduler,\n  deferRenderPhaseUpdateToNextBatch,\n  decoupleUpdatePriorityFromScheduler,\n  enableDebugTracing,\n  enableSchedulingProfiler,\n  enableScopeAPI,\n} from 'shared/ReactFeatureFlags';\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\nimport invariant from 'shared/invariant';\n\nimport {\n  scheduleCallback,\n  cancelCallback,\n  getCurrentPriorityLevel,\n  runWithPriority,\n  shouldYield,\n  requestPaint,\n  now,\n  NoPriority as NoSchedulerPriority,\n  ImmediatePriority as ImmediateSchedulerPriority,\n  UserBlockingPriority as UserBlockingSchedulerPriority,\n  NormalPriority as NormalSchedulerPriority,\n  flushSyncCallbackQueue,\n  scheduleSyncCallback,\n} from './SchedulerWithReactIntegration.old';\nimport {\n  logCommitStarted,\n  logCommitStopped,\n  logLayoutEffectsStarted,\n  logLayoutEffectsStopped,\n  logPassiveEffectsStarted,\n  logPassiveEffectsStopped,\n  logRenderStarted,\n  logRenderStopped,\n} from './DebugTracing';\nimport {\n  markCommitStarted,\n  markCommitStopped,\n  markLayoutEffectsStarted,\n  markLayoutEffectsStopped,\n  markPassiveEffectsStarted,\n  markPassiveEffectsStopped,\n  markRenderStarted,\n  markRenderYielded,\n  markRenderStopped,\n} from './SchedulingProfiler';\n\n// The scheduler is imported here *only* to detect whether it's been mocked\nimport * as Scheduler from 'scheduler';\n\nimport {__interactionsRef, __subscriberRef} from 'scheduler/tracing';\n\nimport {\n  prepareForCommit,\n  resetAfterCommit,\n  scheduleTimeout,\n  cancelTimeout,\n  noTimeout,\n  warnsIfNotActing,\n  beforeActiveInstanceBlur,\n  afterActiveInstanceBlur,\n  clearContainer,\n} from './ReactFiberHostConfig';\n\nimport {\n  createWorkInProgress,\n  assignFiberPropertiesInDEV,\n} from './ReactFiber.old';\nimport {\n  NoMode,\n  StrictMode,\n  ProfileMode,\n  BlockingMode,\n  ConcurrentMode,\n} from './ReactTypeOfMode';\nimport {\n  HostRoot,\n  IndeterminateComponent,\n  ClassComponent,\n  SuspenseComponent,\n  SuspenseListComponent,\n  FunctionComponent,\n  ForwardRef,\n  MemoComponent,\n  SimpleMemoComponent,\n  Block,\n  OffscreenComponent,\n  LegacyHiddenComponent,\n  ScopeComponent,\n} from './ReactWorkTags';\nimport {LegacyRoot} from './ReactRootTags';\nimport {\n  NoFlags,\n  PerformedWork,\n  Placement,\n  Update,\n  PlacementAndUpdate,\n  Deletion,\n  Ref,\n  ContentReset,\n  Snapshot,\n  Callback,\n  Passive,\n  PassiveUnmountPendingDev,\n  Incomplete,\n  HostEffectMask,\n  Hydrating,\n  HydratingAndUpdate,\n} from './ReactFiberFlags';\nimport {\n  NoLanePriority,\n  SyncLanePriority,\n  SyncBatchedLanePriority,\n  InputDiscreteLanePriority,\n  DefaultLanePriority,\n  NoLanes,\n  NoLane,\n  SyncLane,\n  SyncBatchedLane,\n  OffscreenLane,\n  NoTimestamp,\n  findUpdateLane,\n  findTransitionLane,\n  findRetryLane,\n  includesSomeLane,\n  isSubsetOfLanes,\n  mergeLanes,\n  removeLanes,\n  pickArbitraryLane,\n  hasDiscreteLanes,\n  includesNonIdleWork,\n  includesOnlyRetries,\n  includesOnlyTransitions,\n  getNextLanes,\n  returnNextLanesPriority,\n  setCurrentUpdateLanePriority,\n  getCurrentUpdateLanePriority,\n  markStarvedLanesAsExpired,\n  getLanesToRetrySynchronouslyOnError,\n  getMostRecentEventTime,\n  markRootUpdated,\n  markRootSuspended as markRootSuspended_dontCallThisOneDirectly,\n  markRootPinged,\n  markRootExpired,\n  markDiscreteUpdatesExpired,\n  markRootFinished,\n  schedulerPriorityToLanePriority,\n  lanePriorityToSchedulerPriority,\n} from './ReactFiberLane';\nimport {requestCurrentTransition, NoTransition} from './ReactFiberTransition';\nimport {beginWork as originalBeginWork} from './ReactFiberBeginWork.old';\nimport {completeWork} from './ReactFiberCompleteWork.old';\nimport {unwindWork, unwindInterruptedWork} from './ReactFiberUnwindWork.old';\nimport {\n  throwException,\n  createRootErrorUpdate,\n  createClassErrorUpdate,\n} from './ReactFiberThrow.old';\nimport {\n  commitBeforeMutationLifeCycles as commitBeforeMutationEffectOnFiber,\n  commitLifeCycles as commitLayoutEffectOnFiber,\n  commitPlacement,\n  commitWork,\n  commitDeletion,\n  commitDetachRef,\n  commitAttachRef,\n  commitPassiveEffectDurations,\n  commitResetTextContent,\n  isSuspenseBoundaryBeingHidden,\n} from './ReactFiberCommitWork.old';\nimport {enqueueUpdate} from './ReactUpdateQueue.old';\nimport {resetContextDependencies} from './ReactFiberNewContext.old';\nimport {\n  resetHooksAfterThrow,\n  ContextOnlyDispatcher,\n  getIsUpdatingOpaqueValueInRenderPhaseInDEV,\n} from './ReactFiberHooks.old';\nimport {createCapturedValue} from './ReactCapturedValue';\nimport {\n  push as pushToStack,\n  pop as popFromStack,\n  createCursor,\n} from './ReactFiberStack.old';\n\nimport {\n  recordCommitTime,\n  recordPassiveEffectDuration,\n  startPassiveEffectTimer,\n  startProfilerTimer,\n  stopProfilerTimerIfRunningAndRecordDelta,\n} from './ReactProfilerTimer.old';\n\n// DEV stuff\nimport getComponentName from 'shared/getComponentName';\nimport ReactStrictModeWarnings from './ReactStrictModeWarnings.old';\nimport {\n  isRendering as ReactCurrentDebugFiberIsRenderingInDEV,\n  current as ReactCurrentFiberCurrent,\n  resetCurrentFiber as resetCurrentDebugFiberInDEV,\n  setCurrentFiber as setCurrentDebugFiberInDEV,\n} from './ReactCurrentFiber';\nimport {\n  invokeGuardedCallback,\n  hasCaughtError,\n  clearCaughtError,\n} from 'shared/ReactErrorUtils';\nimport {onCommitRoot as onCommitRootDevTools} from './ReactFiberDevToolsHook.old';\nimport {onCommitRoot as onCommitRootTestSelector} from './ReactTestSelectors';\n\n// Used by `act`\nimport enqueueTask from 'shared/enqueueTask';\nimport {doesFiberContain} from './ReactFiberTreeReflection';\n\nconst ceil = Math.ceil;\n\nconst {\n  ReactCurrentDispatcher,\n  ReactCurrentOwner,\n  IsSomeRendererActing,\n} = ReactSharedInternals;\n\ntype ExecutionContext = number;\n\nexport const NoContext = /*             */ 0b0000000;\nconst BatchedContext = /*               */ 0b0000001;\nconst EventContext = /*                 */ 0b0000010;\nconst DiscreteEventContext = /*         */ 0b0000100;\nconst LegacyUnbatchedContext = /*       */ 0b0001000;\nconst RenderContext = /*                */ 0b0010000;\nconst CommitContext = /*                */ 0b0100000;\nexport const RetryAfterError = /*       */ 0b1000000;\n\ntype RootExitStatus = 0 | 1 | 2 | 3 | 4 | 5;\nconst RootIncomplete = 0;\nconst RootFatalErrored = 1;\nconst RootErrored = 2;\nconst RootSuspended = 3;\nconst RootSuspendedWithDelay = 4;\nconst RootCompleted = 5;\n\n// Describes where we are in the React execution stack\nlet executionContext: ExecutionContext = NoContext;\n// The root we're working on\nlet workInProgressRoot: FiberRoot | null = null;\n// The fiber we're working on\nlet workInProgress: Fiber | null = null;\n// The lanes we're rendering\nlet workInProgressRootRenderLanes: Lanes = NoLanes;\n\n// Stack that allows components to change the render lanes for its subtree\n// This is a superset of the lanes we started working on at the root. The only\n// case where it's different from `workInProgressRootRenderLanes` is when we\n// enter a subtree that is hidden and needs to be unhidden: Suspense and\n// Offscreen component.\n//\n// Most things in the work loop should deal with workInProgressRootRenderLanes.\n// Most things in begin/complete phases should deal with subtreeRenderLanes.\nlet subtreeRenderLanes: Lanes = NoLanes;\nconst subtreeRenderLanesCursor: StackCursor<Lanes> = createCursor(NoLanes);\n\n// Whether to root completed, errored, suspended, etc.\nlet workInProgressRootExitStatus: RootExitStatus = RootIncomplete;\n// A fatal error, if one is thrown\nlet workInProgressRootFatalError: mixed = null;\n// \"Included\" lanes refer to lanes that were worked on during this render. It's\n// slightly different than `renderLanes` because `renderLanes` can change as you\n// enter and exit an Offscreen tree. This value is the combination of all render\n// lanes for the entire render phase.\nlet workInProgressRootIncludedLanes: Lanes = NoLanes;\n// The work left over by components that were visited during this render. Only\n// includes unprocessed updates, not work in bailed out children.\nlet workInProgressRootSkippedLanes: Lanes = NoLanes;\n// Lanes that were updated (in an interleaved event) during this render.\nlet workInProgressRootUpdatedLanes: Lanes = NoLanes;\n// Lanes that were pinged (in an interleaved event) during this render.\nlet workInProgressRootPingedLanes: Lanes = NoLanes;\n\nlet mostRecentlyUpdatedRoot: FiberRoot | null = null;\n\n// The most recent time we committed a fallback. This lets us ensure a train\n// model where we don't commit new loading states in too quick succession.\nlet globalMostRecentFallbackTime: number = 0;\nconst FALLBACK_THROTTLE_MS: number = 500;\n\n// The absolute time for when we should start giving up on rendering\n// more and prefer CPU suspense heuristics instead.\nlet workInProgressRootRenderTargetTime: number = Infinity;\n// How long a render is supposed to take before we start following CPU\n// suspense heuristics and opt out of rendering more content.\nconst RENDER_TIMEOUT_MS = 500;\n\nfunction resetRenderTimer() {\n  workInProgressRootRenderTargetTime = now() + RENDER_TIMEOUT_MS;\n}\n\nexport function getRenderTargetTime(): number {\n  return workInProgressRootRenderTargetTime;\n}\n\nlet nextEffect: Fiber | null = null;\nlet hasUncaughtError = false;\nlet firstUncaughtError = null;\nlet legacyErrorBoundariesThatAlreadyFailed: Set<mixed> | null = null;\n\nlet rootDoesHavePassiveEffects: boolean = false;\nlet rootWithPendingPassiveEffects: FiberRoot | null = null;\nlet pendingPassiveEffectsRenderPriority: ReactPriorityLevel = NoSchedulerPriority;\nlet pendingPassiveEffectsLanes: Lanes = NoLanes;\nlet pendingPassiveHookEffectsMount: Array<HookEffect | Fiber> = [];\nlet pendingPassiveHookEffectsUnmount: Array<HookEffect | Fiber> = [];\nlet pendingPassiveProfilerEffects: Array<Fiber> = [];\n\nlet rootsWithPendingDiscreteUpdates: Set<FiberRoot> | null = null;\n\n// Use these to prevent an infinite loop of nested updates\nconst NESTED_UPDATE_LIMIT = 50;\nlet nestedUpdateCount: number = 0;\nlet rootWithNestedUpdates: FiberRoot | null = null;\n\nconst NESTED_PASSIVE_UPDATE_LIMIT = 50;\nlet nestedPassiveUpdateCount: number = 0;\n\n// Marks the need to reschedule pending interactions at these lanes\n// during the commit phase. This enables them to be traced across components\n// that spawn new work during render. E.g. hidden boundaries, suspended SSR\n// hydration or SuspenseList.\n// TODO: Can use a bitmask instead of an array\nlet spawnedWorkDuringRender: null | Array<Lane | Lanes> = null;\n\n// If two updates are scheduled within the same event, we should treat their\n// event times as simultaneous, even if the actual clock time has advanced\n// between the first and second call.\nlet currentEventTime: number = NoTimestamp;\nlet currentEventWipLanes: Lanes = NoLanes;\nlet currentEventPendingLanes: Lanes = NoLanes;\n\n// Dev only flag that tracks if passive effects are currently being flushed.\n// We warn about state updates for unmounted components differently in this case.\nlet isFlushingPassiveEffects = false;\n\nlet focusedInstanceHandle: null | Fiber = null;\nlet shouldFireAfterActiveInstanceBlur: boolean = false;\n\nexport function getWorkInProgressRoot(): FiberRoot | null {\n  return workInProgressRoot;\n}\n\nexport function requestEventTime() {\n  if ((executionContext & (RenderContext | CommitContext)) !== NoContext) {\n    // We're inside React, so it's fine to read the actual time.\n    return now();\n  }\n  // We're not inside React, so we may be in the middle of a browser event.\n  if (currentEventTime !== NoTimestamp) {\n    // Use the same start time for all updates until we enter React again.\n    return currentEventTime;\n  }\n  // This is the first update since React yielded. Compute a new start time.\n  currentEventTime = now();\n  return currentEventTime;\n}\n\nexport function getCurrentTime() {\n  return now();\n}\n\nexport function requestUpdateLane(fiber: Fiber): Lane {\n  // Special cases\n  const mode = fiber.mode;\n  if ((mode & BlockingMode) === NoMode) {\n    return (SyncLane: Lane);\n  } else if ((mode & ConcurrentMode) === NoMode) {\n    return getCurrentPriorityLevel() === ImmediateSchedulerPriority\n      ? (SyncLane: Lane)\n      : (SyncBatchedLane: Lane);\n  } else if (\n    !deferRenderPhaseUpdateToNextBatch &&\n    (executionContext & RenderContext) !== NoContext &&\n    workInProgressRootRenderLanes !== NoLanes\n  ) {\n    // This is a render phase update. These are not officially supported. The\n    // old behavior is to give this the same \"thread\" (expiration time) as\n    // whatever is currently rendering. So if you call `setState` on a component\n    // that happens later in the same render, it will flush. Ideally, we want to\n    // remove the special case and treat them as if they came from an\n    // interleaved event. Regardless, this pattern is not officially supported.\n    // This behavior is only a fallback. The flag only exists until we can roll\n    // out the setState warning, since existing code might accidentally rely on\n    // the current behavior.\n    return pickArbitraryLane(workInProgressRootRenderLanes);\n  }\n\n  // The algorithm for assigning an update to a lane should be stable for all\n  // updates at the same priority within the same event. To do this, the inputs\n  // to the algorithm must be the same. For example, we use the `renderLanes`\n  // to avoid choosing a lane that is already in the middle of rendering.\n  //\n  // However, the \"included\" lanes could be mutated in between updates in the\n  // same event, like if you perform an update inside `flushSync`. Or any other\n  // code path that might call `prepareFreshStack`.\n  //\n  // The trick we use is to cache the first of each of these inputs within an\n  // event. Then reset the cached values once we can be sure the event is over.\n  // Our heuristic for that is whenever we enter a concurrent work loop.\n  //\n  // We'll do the same for `currentEventPendingLanes` below.\n  if (currentEventWipLanes === NoLanes) {\n    currentEventWipLanes = workInProgressRootIncludedLanes;\n  }\n\n  const isTransition = requestCurrentTransition() !== NoTransition;\n  if (isTransition) {\n    if (currentEventPendingLanes !== NoLanes) {\n      currentEventPendingLanes =\n        mostRecentlyUpdatedRoot !== null\n          ? mostRecentlyUpdatedRoot.pendingLanes\n          : NoLanes;\n    }\n    return findTransitionLane(currentEventWipLanes, currentEventPendingLanes);\n  }\n\n  // TODO: Remove this dependency on the Scheduler priority.\n  // To do that, we're replacing it with an update lane priority.\n  const schedulerPriority = getCurrentPriorityLevel();\n\n  // The old behavior was using the priority level of the Scheduler.\n  // This couples React to the Scheduler internals, so we're replacing it\n  // with the currentUpdateLanePriority above. As an example of how this\n  // could be problematic, if we're not inside `Scheduler.runWithPriority`,\n  // then we'll get the priority of the current running Scheduler task,\n  // which is probably not what we want.\n  let lane;\n  if (\n    // TODO: Temporary. We're removing the concept of discrete updates.\n    (executionContext & DiscreteEventContext) !== NoContext &&\n    schedulerPriority === UserBlockingSchedulerPriority\n  ) {\n    lane = findUpdateLane(InputDiscreteLanePriority, currentEventWipLanes);\n  } else {\n    const schedulerLanePriority = schedulerPriorityToLanePriority(\n      schedulerPriority,\n    );\n\n    if (decoupleUpdatePriorityFromScheduler) {\n      // In the new strategy, we will track the current update lane priority\n      // inside React and use that priority to select a lane for this update.\n      // For now, we're just logging when they're different so we can assess.\n      const currentUpdateLanePriority = getCurrentUpdateLanePriority();\n\n      if (\n        schedulerLanePriority !== currentUpdateLanePriority &&\n        currentUpdateLanePriority !== NoLanePriority\n      ) {\n        if (__DEV__) {\n          console.error(\n            'Expected current scheduler lane priority %s to match current update lane priority %s',\n            schedulerLanePriority,\n            currentUpdateLanePriority,\n          );\n        }\n      }\n    }\n\n    lane = findUpdateLane(schedulerLanePriority, currentEventWipLanes);\n  }\n\n  return lane;\n}\n\nfunction requestRetryLane(fiber: Fiber) {\n  // This is a fork of `requestUpdateLane` designed specifically for Suspense\n  // \"retries\" — a special update that attempts to flip a Suspense boundary\n  // from its placeholder state to its primary/resolved state.\n\n  // Special cases\n  const mode = fiber.mode;\n  if ((mode & BlockingMode) === NoMode) {\n    return (SyncLane: Lane);\n  } else if ((mode & ConcurrentMode) === NoMode) {\n    return getCurrentPriorityLevel() === ImmediateSchedulerPriority\n      ? (SyncLane: Lane)\n      : (SyncBatchedLane: Lane);\n  }\n\n  // See `requestUpdateLane` for explanation of `currentEventWipLanes`\n  if (currentEventWipLanes === NoLanes) {\n    currentEventWipLanes = workInProgressRootIncludedLanes;\n  }\n  return findRetryLane(currentEventWipLanes);\n}\n\nexport function scheduleUpdateOnFiber(\n  fiber: Fiber,\n  lane: Lane,\n  eventTime: number,\n) {\n  checkForNestedUpdates();\n  warnAboutRenderPhaseUpdatesInDEV(fiber);\n\n  const root = markUpdateLaneFromFiberToRoot(fiber, lane);\n  if (root === null) {\n    warnAboutUpdateOnUnmountedFiberInDEV(fiber);\n    return null;\n  }\n\n  // Mark that the root has a pending update.\n  markRootUpdated(root, lane, eventTime);\n\n  if (root === workInProgressRoot) {\n    // Received an update to a tree that's in the middle of rendering. Mark\n    // that there was an interleaved update work on this root. Unless the\n    // `deferRenderPhaseUpdateToNextBatch` flag is off and this is a render\n    // phase update. In that case, we don't treat render phase updates as if\n    // they were interleaved, for backwards compat reasons.\n    if (\n      deferRenderPhaseUpdateToNextBatch ||\n      (executionContext & RenderContext) === NoContext\n    ) {\n      workInProgressRootUpdatedLanes = mergeLanes(\n        workInProgressRootUpdatedLanes,\n        lane,\n      );\n    }\n    if (workInProgressRootExitStatus === RootSuspendedWithDelay) {\n      // The root already suspended with a delay, which means this render\n      // definitely won't finish. Since we have a new update, let's mark it as\n      // suspended now, right before marking the incoming update. This has the\n      // effect of interrupting the current render and switching to the update.\n      // TODO: Make sure this doesn't override pings that happen while we've\n      // already started rendering.\n      markRootSuspended(root, workInProgressRootRenderLanes);\n    }\n  }\n\n  // TODO: requestUpdateLanePriority also reads the priority. Pass the\n  // priority as an argument to that function and this one.\n  const priorityLevel = getCurrentPriorityLevel();\n\n  if (lane === SyncLane) {\n    if (\n      // Check if we're inside unbatchedUpdates\n      (executionContext & LegacyUnbatchedContext) !== NoContext &&\n      // Check if we're not already rendering\n      (executionContext & (RenderContext | CommitContext)) === NoContext\n    ) {\n      // Register pending interactions on the root to avoid losing traced interaction data.\n      schedulePendingInteractions(root, lane);\n\n      // This is a legacy edge case. The initial mount of a ReactDOM.render-ed\n      // root inside of batchedUpdates should be synchronous, but layout updates\n      // should be deferred until the end of the batch.\n      performSyncWorkOnRoot(root);\n    } else {\n      ensureRootIsScheduled(root, eventTime);\n      schedulePendingInteractions(root, lane);\n      if (executionContext === NoContext) {\n        // Flush the synchronous work now, unless we're already working or inside\n        // a batch. This is intentionally inside scheduleUpdateOnFiber instead of\n        // scheduleCallbackForFiber to preserve the ability to schedule a callback\n        // without immediately flushing it. We only do this for user-initiated\n        // updates, to preserve historical behavior of legacy mode.\n        resetRenderTimer();\n        flushSyncCallbackQueue();\n      }\n    }\n  } else {\n    // Schedule a discrete update but only if it's not Sync.\n    if (\n      (executionContext & DiscreteEventContext) !== NoContext &&\n      // Only updates at user-blocking priority or greater are considered\n      // discrete, even inside a discrete event.\n      (priorityLevel === UserBlockingSchedulerPriority ||\n        priorityLevel === ImmediateSchedulerPriority)\n    ) {\n      // This is the result of a discrete event. Track the lowest priority\n      // discrete update per root so we can flush them early, if needed.\n      if (rootsWithPendingDiscreteUpdates === null) {\n        rootsWithPendingDiscreteUpdates = new Set([root]);\n      } else {\n        rootsWithPendingDiscreteUpdates.add(root);\n      }\n    }\n    // Schedule other updates after in case the callback is sync.\n    ensureRootIsScheduled(root, eventTime);\n    schedulePendingInteractions(root, lane);\n  }\n\n  // We use this when assigning a lane for a transition inside\n  // `requestUpdateLane`. We assume it's the same as the root being updated,\n  // since in the common case of a single root app it probably is. If it's not\n  // the same root, then it's not a huge deal, we just might batch more stuff\n  // together more than necessary.\n  mostRecentlyUpdatedRoot = root;\n}\n\n// This is split into a separate function so we can mark a fiber with pending\n// work without treating it as a typical update that originates from an event;\n// e.g. retrying a Suspense boundary isn't an update, but it does schedule work\n// on a fiber.\nfunction markUpdateLaneFromFiberToRoot(\n  sourceFiber: Fiber,\n  lane: Lane,\n): FiberRoot | null {\n  // Update the source fiber's lanes\n  sourceFiber.lanes = mergeLanes(sourceFiber.lanes, lane);\n  let alternate = sourceFiber.alternate;\n  if (alternate !== null) {\n    alternate.lanes = mergeLanes(alternate.lanes, lane);\n  }\n  if (__DEV__) {\n    if (\n      alternate === null &&\n      (sourceFiber.flags & (Placement | Hydrating)) !== NoFlags\n    ) {\n      warnAboutUpdateOnNotYetMountedFiberInDEV(sourceFiber);\n    }\n  }\n  // Walk the parent path to the root and update the child expiration time.\n  let node = sourceFiber;\n  let parent = sourceFiber.return;\n  while (parent !== null) {\n    parent.childLanes = mergeLanes(parent.childLanes, lane);\n    alternate = parent.alternate;\n    if (alternate !== null) {\n      alternate.childLanes = mergeLanes(alternate.childLanes, lane);\n    } else {\n      if (__DEV__) {\n        if ((parent.flags & (Placement | Hydrating)) !== NoFlags) {\n          warnAboutUpdateOnNotYetMountedFiberInDEV(sourceFiber);\n        }\n      }\n    }\n    node = parent;\n    parent = parent.return;\n  }\n  if (node.tag === HostRoot) {\n    const root: FiberRoot = node.stateNode;\n    return root;\n  } else {\n    return null;\n  }\n}\n\n// Use this function to schedule a task for a root. There's only one task per\n// root; if a task was already scheduled, we'll check to make sure the priority\n// of the existing task is the same as the priority of the next level that the\n// root has work on. This function is called on every update, and right before\n// exiting a task.\nfunction ensureRootIsScheduled(root: FiberRoot, currentTime: number) {\n  const existingCallbackNode = root.callbackNode;\n\n  // Check if any lanes are being starved by other work. If so, mark them as\n  // expired so we know to work on those next.\n  markStarvedLanesAsExpired(root, currentTime);\n\n  // Determine the next lanes to work on, and their priority.\n  const nextLanes = getNextLanes(\n    root,\n    root === workInProgressRoot ? workInProgressRootRenderLanes : NoLanes,\n  );\n  // This returns the priority level computed during the `getNextLanes` call.\n  const newCallbackPriority = returnNextLanesPriority();\n\n  if (nextLanes === NoLanes) {\n    // Special case: There's nothing to work on.\n    if (existingCallbackNode !== null) {\n      cancelCallback(existingCallbackNode);\n      root.callbackNode = null;\n      root.callbackPriority = NoLanePriority;\n    }\n    return;\n  }\n\n  // Check if there's an existing task. We may be able to reuse it.\n  if (existingCallbackNode !== null) {\n    const existingCallbackPriority = root.callbackPriority;\n    if (existingCallbackPriority === newCallbackPriority) {\n      // The priority hasn't changed. We can reuse the existing task. Exit.\n      return;\n    }\n    // The priority changed. Cancel the existing callback. We'll schedule a new\n    // one below.\n    cancelCallback(existingCallbackNode);\n  }\n\n  // Schedule a new callback.\n  let newCallbackNode;\n  if (newCallbackPriority === SyncLanePriority) {\n    // Special case: Sync React callbacks are scheduled on a special\n    // internal queue\n    newCallbackNode = scheduleSyncCallback(\n      performSyncWorkOnRoot.bind(null, root),\n    );\n  } else if (newCallbackPriority === SyncBatchedLanePriority) {\n    newCallbackNode = scheduleCallback(\n      ImmediateSchedulerPriority,\n      performSyncWorkOnRoot.bind(null, root),\n    );\n  } else {\n    const schedulerPriorityLevel = lanePriorityToSchedulerPriority(\n      newCallbackPriority,\n    );\n    newCallbackNode = scheduleCallback(\n      schedulerPriorityLevel,\n      performConcurrentWorkOnRoot.bind(null, root),\n    );\n  }\n\n  root.callbackPriority = newCallbackPriority;\n  root.callbackNode = newCallbackNode;\n}\n\n// This is the entry point for every concurrent task, i.e. anything that\n// goes through Scheduler.\nfunction performConcurrentWorkOnRoot(root) {\n  // Since we know we're in a React event, we can clear the current\n  // event time. The next update will compute a new event time.\n  currentEventTime = NoTimestamp;\n  currentEventWipLanes = NoLanes;\n  currentEventPendingLanes = NoLanes;\n\n  invariant(\n    (executionContext & (RenderContext | CommitContext)) === NoContext,\n    'Should not already be working.',\n  );\n\n  // Flush any pending passive effects before deciding which lanes to work on,\n  // in case they schedule additional work.\n  const originalCallbackNode = root.callbackNode;\n  const didFlushPassiveEffects = flushPassiveEffects();\n  if (didFlushPassiveEffects) {\n    // Something in the passive effect phase may have canceled the current task.\n    // Check if the task node for this root was changed.\n    if (root.callbackNode !== originalCallbackNode) {\n      // The current task was canceled. Exit. We don't need to call\n      // `ensureRootIsScheduled` because the check above implies either that\n      // there's a new task, or that there's no remaining work on this root.\n      return null;\n    } else {\n      // Current task was not canceled. Continue.\n    }\n  }\n\n  // Determine the next expiration time to work on, using the fields stored\n  // on the root.\n  let lanes = getNextLanes(\n    root,\n    root === workInProgressRoot ? workInProgressRootRenderLanes : NoLanes,\n  );\n  if (lanes === NoLanes) {\n    // Defensive coding. This is never expected to happen.\n    return null;\n  }\n\n  let exitStatus = renderRootConcurrent(root, lanes);\n\n  if (\n    includesSomeLane(\n      workInProgressRootIncludedLanes,\n      workInProgressRootUpdatedLanes,\n    )\n  ) {\n    // The render included lanes that were updated during the render phase.\n    // For example, when unhiding a hidden tree, we include all the lanes\n    // that were previously skipped when the tree was hidden. That set of\n    // lanes is a superset of the lanes we started rendering with.\n    //\n    // So we'll throw out the current work and restart.\n    prepareFreshStack(root, NoLanes);\n  } else if (exitStatus !== RootIncomplete) {\n    if (exitStatus === RootErrored) {\n      executionContext |= RetryAfterError;\n\n      // If an error occurred during hydration,\n      // discard server response and fall back to client side render.\n      if (root.hydrate) {\n        root.hydrate = false;\n        clearContainer(root.containerInfo);\n      }\n\n      // If something threw an error, try rendering one more time. We'll render\n      // synchronously to block concurrent data mutations, and we'll includes\n      // all pending updates are included. If it still fails after the second\n      // attempt, we'll give up and commit the resulting tree.\n      lanes = getLanesToRetrySynchronouslyOnError(root);\n      if (lanes !== NoLanes) {\n        exitStatus = renderRootSync(root, lanes);\n      }\n    }\n\n    if (exitStatus === RootFatalErrored) {\n      const fatalError = workInProgressRootFatalError;\n      prepareFreshStack(root, NoLanes);\n      markRootSuspended(root, lanes);\n      ensureRootIsScheduled(root, now());\n      throw fatalError;\n    }\n\n    // We now have a consistent tree. The next step is either to commit it,\n    // or, if something suspended, wait to commit it after a timeout.\n    const finishedWork: Fiber = (root.current.alternate: any);\n    root.finishedWork = finishedWork;\n    root.finishedLanes = lanes;\n    finishConcurrentRender(root, exitStatus, lanes);\n  }\n\n  ensureRootIsScheduled(root, now());\n  if (root.callbackNode === originalCallbackNode) {\n    // The task node scheduled for this root is the same one that's\n    // currently executed. Need to return a continuation.\n    return performConcurrentWorkOnRoot.bind(null, root);\n  }\n  return null;\n}\n\nfunction finishConcurrentRender(root, exitStatus, lanes) {\n  switch (exitStatus) {\n    case RootIncomplete:\n    case RootFatalErrored: {\n      invariant(false, 'Root did not complete. This is a bug in React.');\n    }\n    // Flow knows about invariant, so it complains if I add a break\n    // statement, but eslint doesn't know about invariant, so it complains\n    // if I do. eslint-disable-next-line no-fallthrough\n    case RootErrored: {\n      // We should have already attempted to retry this tree. If we reached\n      // this point, it errored again. Commit it.\n      commitRoot(root);\n      break;\n    }\n    case RootSuspended: {\n      markRootSuspended(root, lanes);\n\n      // We have an acceptable loading state. We need to figure out if we\n      // should immediately commit it or wait a bit.\n\n      if (\n        includesOnlyRetries(lanes) &&\n        // do not delay if we're inside an act() scope\n        !shouldForceFlushFallbacksInDEV()\n      ) {\n        // This render only included retries, no updates. Throttle committing\n        // retries so that we don't show too many loading states too quickly.\n        const msUntilTimeout =\n          globalMostRecentFallbackTime + FALLBACK_THROTTLE_MS - now();\n        // Don't bother with a very short suspense time.\n        if (msUntilTimeout > 10) {\n          const nextLanes = getNextLanes(root, NoLanes);\n          if (nextLanes !== NoLanes) {\n            // There's additional work on this root.\n            break;\n          }\n          const suspendedLanes = root.suspendedLanes;\n          if (!isSubsetOfLanes(suspendedLanes, lanes)) {\n            // We should prefer to render the fallback of at the last\n            // suspended level. Ping the last suspended level to try\n            // rendering it again.\n            // FIXME: What if the suspended lanes are Idle? Should not restart.\n            const eventTime = requestEventTime();\n            markRootPinged(root, suspendedLanes, eventTime);\n            break;\n          }\n\n          // The render is suspended, it hasn't timed out, and there's no\n          // lower priority work to do. Instead of committing the fallback\n          // immediately, wait for more data to arrive.\n          root.timeoutHandle = scheduleTimeout(\n            commitRoot.bind(null, root),\n            msUntilTimeout,\n          );\n          break;\n        }\n      }\n      // The work expired. Commit immediately.\n      commitRoot(root);\n      break;\n    }\n    case RootSuspendedWithDelay: {\n      markRootSuspended(root, lanes);\n\n      if (includesOnlyTransitions(lanes)) {\n        // This is a transition, so we should exit without committing a\n        // placeholder and without scheduling a timeout. Delay indefinitely\n        // until we receive more data.\n        break;\n      }\n\n      if (!shouldForceFlushFallbacksInDEV()) {\n        // This is not a transition, but we did trigger an avoided state.\n        // Schedule a placeholder to display after a short delay, using the Just\n        // Noticeable Difference.\n        // TODO: Is the JND optimization worth the added complexity? If this is\n        // the only reason we track the event time, then probably not.\n        // Consider removing.\n\n        const mostRecentEventTime = getMostRecentEventTime(root, lanes);\n        const eventTimeMs = mostRecentEventTime;\n        const timeElapsedMs = now() - eventTimeMs;\n        const msUntilTimeout = jnd(timeElapsedMs) - timeElapsedMs;\n\n        // Don't bother with a very short suspense time.\n        if (msUntilTimeout > 10) {\n          // Instead of committing the fallback immediately, wait for more data\n          // to arrive.\n          root.timeoutHandle = scheduleTimeout(\n            commitRoot.bind(null, root),\n            msUntilTimeout,\n          );\n          break;\n        }\n      }\n\n      // Commit the placeholder.\n      commitRoot(root);\n      break;\n    }\n    case RootCompleted: {\n      // The work completed. Ready to commit.\n      commitRoot(root);\n      break;\n    }\n    default: {\n      invariant(false, 'Unknown root exit status.');\n    }\n  }\n}\n\nfunction markRootSuspended(root, suspendedLanes) {\n  // When suspending, we should always exclude lanes that were pinged or (more\n  // rarely, since we try to avoid it) updated during the render phase.\n  // TODO: Lol maybe there's a better way to factor this besides this\n  // obnoxiously named function :)\n  suspendedLanes = removeLanes(suspendedLanes, workInProgressRootPingedLanes);\n  suspendedLanes = removeLanes(suspendedLanes, workInProgressRootUpdatedLanes);\n  markRootSuspended_dontCallThisOneDirectly(root, suspendedLanes);\n}\n\n// This is the entry point for synchronous tasks that don't go\n// through Scheduler\nfunction performSyncWorkOnRoot(root) {\n  invariant(\n    (executionContext & (RenderContext | CommitContext)) === NoContext,\n    'Should not already be working.',\n  );\n\n  flushPassiveEffects();\n\n  let lanes;\n  let exitStatus;\n  if (\n    root === workInProgressRoot &&\n    includesSomeLane(root.expiredLanes, workInProgressRootRenderLanes)\n  ) {\n    // There's a partial tree, and at least one of its lanes has expired. Finish\n    // rendering it before rendering the rest of the expired work.\n    lanes = workInProgressRootRenderLanes;\n    exitStatus = renderRootSync(root, lanes);\n    if (\n      includesSomeLane(\n        workInProgressRootIncludedLanes,\n        workInProgressRootUpdatedLanes,\n      )\n    ) {\n      // The render included lanes that were updated during the render phase.\n      // For example, when unhiding a hidden tree, we include all the lanes\n      // that were previously skipped when the tree was hidden. That set of\n      // lanes is a superset of the lanes we started rendering with.\n      //\n      // Note that this only happens when part of the tree is rendered\n      // concurrently. If the whole tree is rendered synchronously, then there\n      // are no interleaved events.\n      lanes = getNextLanes(root, lanes);\n      exitStatus = renderRootSync(root, lanes);\n    }\n  } else {\n    lanes = getNextLanes(root, NoLanes);\n    exitStatus = renderRootSync(root, lanes);\n  }\n\n  if (root.tag !== LegacyRoot && exitStatus === RootErrored) {\n    executionContext |= RetryAfterError;\n\n    // If an error occurred during hydration,\n    // discard server response and fall back to client side render.\n    if (root.hydrate) {\n      root.hydrate = false;\n      clearContainer(root.containerInfo);\n    }\n\n    // If something threw an error, try rendering one more time. We'll render\n    // synchronously to block concurrent data mutations, and we'll includes\n    // all pending updates are included. If it still fails after the second\n    // attempt, we'll give up and commit the resulting tree.\n    lanes = getLanesToRetrySynchronouslyOnError(root);\n    if (lanes !== NoLanes) {\n      exitStatus = renderRootSync(root, lanes);\n    }\n  }\n\n  if (exitStatus === RootFatalErrored) {\n    const fatalError = workInProgressRootFatalError;\n    prepareFreshStack(root, NoLanes);\n    markRootSuspended(root, lanes);\n    ensureRootIsScheduled(root, now());\n    throw fatalError;\n  }\n\n  // We now have a consistent tree. Because this is a sync render, we\n  // will commit it even if something suspended.\n  const finishedWork: Fiber = (root.current.alternate: any);\n  root.finishedWork = finishedWork;\n  root.finishedLanes = lanes;\n  commitRoot(root);\n\n  // Before exiting, make sure there's a callback scheduled for the next\n  // pending level.\n  ensureRootIsScheduled(root, now());\n\n  return null;\n}\n\nexport function flushRoot(root: FiberRoot, lanes: Lanes) {\n  markRootExpired(root, lanes);\n  ensureRootIsScheduled(root, now());\n  if ((executionContext & (RenderContext | CommitContext)) === NoContext) {\n    resetRenderTimer();\n    flushSyncCallbackQueue();\n  }\n}\n\nexport function getExecutionContext(): ExecutionContext {\n  return executionContext;\n}\n\nexport function flushDiscreteUpdates() {\n  // TODO: Should be able to flush inside batchedUpdates, but not inside `act`.\n  // However, `act` uses `batchedUpdates`, so there's no way to distinguish\n  // those two cases. Need to fix this before exposing flushDiscreteUpdates\n  // as a public API.\n  if (\n    (executionContext & (BatchedContext | RenderContext | CommitContext)) !==\n    NoContext\n  ) {\n    if (__DEV__) {\n      if ((executionContext & RenderContext) !== NoContext) {\n        console.error(\n          'unstable_flushDiscreteUpdates: Cannot flush updates when React is ' +\n            'already rendering.',\n        );\n      }\n    }\n    // We're already rendering, so we can't synchronously flush pending work.\n    // This is probably a nested event dispatch triggered by a lifecycle/effect,\n    // like `el.focus()`. Exit.\n    return;\n  }\n  flushPendingDiscreteUpdates();\n  // If the discrete updates scheduled passive effects, flush them now so that\n  // they fire before the next serial event.\n  flushPassiveEffects();\n}\n\nexport function deferredUpdates<A>(fn: () => A): A {\n  if (decoupleUpdatePriorityFromScheduler) {\n    const previousLanePriority = getCurrentUpdateLanePriority();\n    try {\n      setCurrentUpdateLanePriority(DefaultLanePriority);\n      return runWithPriority(NormalSchedulerPriority, fn);\n    } finally {\n      setCurrentUpdateLanePriority(previousLanePriority);\n    }\n  } else {\n    return runWithPriority(NormalSchedulerPriority, fn);\n  }\n}\n\nfunction flushPendingDiscreteUpdates() {\n  if (rootsWithPendingDiscreteUpdates !== null) {\n    // For each root with pending discrete updates, schedule a callback to\n    // immediately flush them.\n    const roots = rootsWithPendingDiscreteUpdates;\n    rootsWithPendingDiscreteUpdates = null;\n    roots.forEach(root => {\n      markDiscreteUpdatesExpired(root);\n      ensureRootIsScheduled(root, now());\n    });\n  }\n  // Now flush the immediate queue.\n  flushSyncCallbackQueue();\n}\n\nexport function batchedUpdates<A, R>(fn: A => R, a: A): R {\n  const prevExecutionContext = executionContext;\n  executionContext |= BatchedContext;\n  try {\n    return fn(a);\n  } finally {\n    executionContext = prevExecutionContext;\n    if (executionContext === NoContext) {\n      // Flush the immediate callbacks that were scheduled during this batch\n      resetRenderTimer();\n      flushSyncCallbackQueue();\n    }\n  }\n}\n\nexport function batchedEventUpdates<A, R>(fn: A => R, a: A): R {\n  const prevExecutionContext = executionContext;\n  executionContext |= EventContext;\n  try {\n    return fn(a);\n  } finally {\n    executionContext = prevExecutionContext;\n    if (executionContext === NoContext) {\n      // Flush the immediate callbacks that were scheduled during this batch\n      resetRenderTimer();\n      flushSyncCallbackQueue();\n    }\n  }\n}\n\nexport function discreteUpdates<A, B, C, D, R>(\n  fn: (A, B, C) => R,\n  a: A,\n  b: B,\n  c: C,\n  d: D,\n): R {\n  const prevExecutionContext = executionContext;\n  executionContext |= DiscreteEventContext;\n\n  if (decoupleUpdatePriorityFromScheduler) {\n    const previousLanePriority = getCurrentUpdateLanePriority();\n    try {\n      setCurrentUpdateLanePriority(InputDiscreteLanePriority);\n      return runWithPriority(\n        UserBlockingSchedulerPriority,\n        fn.bind(null, a, b, c, d),\n      );\n    } finally {\n      setCurrentUpdateLanePriority(previousLanePriority);\n      executionContext = prevExecutionContext;\n      if (executionContext === NoContext) {\n        // Flush the immediate callbacks that were scheduled during this batch\n        resetRenderTimer();\n        flushSyncCallbackQueue();\n      }\n    }\n  } else {\n    try {\n      return runWithPriority(\n        UserBlockingSchedulerPriority,\n        fn.bind(null, a, b, c, d),\n      );\n    } finally {\n      executionContext = prevExecutionContext;\n      if (executionContext === NoContext) {\n        // Flush the immediate callbacks that were scheduled during this batch\n        resetRenderTimer();\n        flushSyncCallbackQueue();\n      }\n    }\n  }\n}\n\nexport function unbatchedUpdates<A, R>(fn: (a: A) => R, a: A): R {\n  const prevExecutionContext = executionContext;\n  executionContext &= ~BatchedContext;\n  executionContext |= LegacyUnbatchedContext;\n  try {\n    return fn(a);\n  } finally {\n    executionContext = prevExecutionContext;\n    if (executionContext === NoContext) {\n      // Flush the immediate callbacks that were scheduled during this batch\n      resetRenderTimer();\n      flushSyncCallbackQueue();\n    }\n  }\n}\n\nexport function flushSync<A, R>(fn: A => R, a: A): R {\n  const prevExecutionContext = executionContext;\n  if ((prevExecutionContext & (RenderContext | CommitContext)) !== NoContext) {\n    if (__DEV__) {\n      console.error(\n        'flushSync was called from inside a lifecycle method. React cannot ' +\n          'flush when React is already rendering. Consider moving this call to ' +\n          'a scheduler task or micro task.',\n      );\n    }\n    return fn(a);\n  }\n  executionContext |= BatchedContext;\n\n  if (decoupleUpdatePriorityFromScheduler) {\n    const previousLanePriority = getCurrentUpdateLanePriority();\n    try {\n      setCurrentUpdateLanePriority(SyncLanePriority);\n      if (fn) {\n        return runWithPriority(ImmediateSchedulerPriority, fn.bind(null, a));\n      } else {\n        return (undefined: $FlowFixMe);\n      }\n    } finally {\n      setCurrentUpdateLanePriority(previousLanePriority);\n      executionContext = prevExecutionContext;\n      // Flush the immediate callbacks that were scheduled during this batch.\n      // Note that this will happen even if batchedUpdates is higher up\n      // the stack.\n      flushSyncCallbackQueue();\n    }\n  } else {\n    try {\n      if (fn) {\n        return runWithPriority(ImmediateSchedulerPriority, fn.bind(null, a));\n      } else {\n        return (undefined: $FlowFixMe);\n      }\n    } finally {\n      executionContext = prevExecutionContext;\n      // Flush the immediate callbacks that were scheduled during this batch.\n      // Note that this will happen even if batchedUpdates is higher up\n      // the stack.\n      flushSyncCallbackQueue();\n    }\n  }\n}\n\nexport function flushControlled(fn: () => mixed): void {\n  const prevExecutionContext = executionContext;\n  executionContext |= BatchedContext;\n  if (decoupleUpdatePriorityFromScheduler) {\n    const previousLanePriority = getCurrentUpdateLanePriority();\n    try {\n      setCurrentUpdateLanePriority(SyncLanePriority);\n      runWithPriority(ImmediateSchedulerPriority, fn);\n    } finally {\n      setCurrentUpdateLanePriority(previousLanePriority);\n\n      executionContext = prevExecutionContext;\n      if (executionContext === NoContext) {\n        // Flush the immediate callbacks that were scheduled during this batch\n        resetRenderTimer();\n        flushSyncCallbackQueue();\n      }\n    }\n  } else {\n    try {\n      runWithPriority(ImmediateSchedulerPriority, fn);\n    } finally {\n      executionContext = prevExecutionContext;\n      if (executionContext === NoContext) {\n        // Flush the immediate callbacks that were scheduled during this batch\n        resetRenderTimer();\n        flushSyncCallbackQueue();\n      }\n    }\n  }\n}\n\nexport function pushRenderLanes(fiber: Fiber, lanes: Lanes) {\n  pushToStack(subtreeRenderLanesCursor, subtreeRenderLanes, fiber);\n  subtreeRenderLanes = mergeLanes(subtreeRenderLanes, lanes);\n  workInProgressRootIncludedLanes = mergeLanes(\n    workInProgressRootIncludedLanes,\n    lanes,\n  );\n}\n\nexport function popRenderLanes(fiber: Fiber) {\n  subtreeRenderLanes = subtreeRenderLanesCursor.current;\n  popFromStack(subtreeRenderLanesCursor, fiber);\n}\n\nfunction prepareFreshStack(root: FiberRoot, lanes: Lanes) {\n  root.finishedWork = null;\n  root.finishedLanes = NoLanes;\n\n  const timeoutHandle = root.timeoutHandle;\n  if (timeoutHandle !== noTimeout) {\n    // The root previous suspended and scheduled a timeout to commit a fallback\n    // state. Now that we have additional work, cancel the timeout.\n    root.timeoutHandle = noTimeout;\n    // $FlowFixMe Complains noTimeout is not a TimeoutID, despite the check above\n    cancelTimeout(timeoutHandle);\n  }\n\n  if (workInProgress !== null) {\n    let interruptedWork = workInProgress.return;\n    while (interruptedWork !== null) {\n      unwindInterruptedWork(interruptedWork);\n      interruptedWork = interruptedWork.return;\n    }\n  }\n  workInProgressRoot = root;\n  workInProgress = createWorkInProgress(root.current, null);\n  workInProgressRootRenderLanes = subtreeRenderLanes = workInProgressRootIncludedLanes = lanes;\n  workInProgressRootExitStatus = RootIncomplete;\n  workInProgressRootFatalError = null;\n  workInProgressRootSkippedLanes = NoLanes;\n  workInProgressRootUpdatedLanes = NoLanes;\n  workInProgressRootPingedLanes = NoLanes;\n\n  if (enableSchedulerTracing) {\n    spawnedWorkDuringRender = null;\n  }\n\n  if (__DEV__) {\n    ReactStrictModeWarnings.discardPendingWarnings();\n  }\n}\n\nfunction handleError(root, thrownValue): void {\n  do {\n    let erroredWork = workInProgress;\n    try {\n      // Reset module-level state that was set during the render phase.\n      resetContextDependencies();\n      resetHooksAfterThrow();\n      resetCurrentDebugFiberInDEV();\n      // TODO: I found and added this missing line while investigating a\n      // separate issue. Write a regression test using string refs.\n      ReactCurrentOwner.current = null;\n\n      if (erroredWork === null || erroredWork.return === null) {\n        // Expected to be working on a non-root fiber. This is a fatal error\n        // because there's no ancestor that can handle it; the root is\n        // supposed to capture all errors that weren't caught by an error\n        // boundary.\n        workInProgressRootExitStatus = RootFatalErrored;\n        workInProgressRootFatalError = thrownValue;\n        // Set `workInProgress` to null. This represents advancing to the next\n        // sibling, or the parent if there are no siblings. But since the root\n        // has no siblings nor a parent, we set it to null. Usually this is\n        // handled by `completeUnitOfWork` or `unwindWork`, but since we're\n        // intentionally not calling those, we need set it here.\n        // TODO: Consider calling `unwindWork` to pop the contexts.\n        workInProgress = null;\n        return;\n      }\n\n      if (enableProfilerTimer && erroredWork.mode & ProfileMode) {\n        // Record the time spent rendering before an error was thrown. This\n        // avoids inaccurate Profiler durations in the case of a\n        // suspended render.\n        stopProfilerTimerIfRunningAndRecordDelta(erroredWork, true);\n      }\n\n      throwException(\n        root,\n        erroredWork.return,\n        erroredWork,\n        thrownValue,\n        workInProgressRootRenderLanes,\n      );\n      completeUnitOfWork(erroredWork);\n    } catch (yetAnotherThrownValue) {\n      // Something in the return path also threw.\n      thrownValue = yetAnotherThrownValue;\n      if (workInProgress === erroredWork && erroredWork !== null) {\n        // If this boundary has already errored, then we had trouble processing\n        // the error. Bubble it to the next boundary.\n        erroredWork = erroredWork.return;\n        workInProgress = erroredWork;\n      } else {\n        erroredWork = workInProgress;\n      }\n      continue;\n    }\n    // Return to the normal work loop.\n    return;\n  } while (true);\n}\n\nfunction pushDispatcher() {\n  const prevDispatcher = ReactCurrentDispatcher.current;\n  ReactCurrentDispatcher.current = ContextOnlyDispatcher;\n  if (prevDispatcher === null) {\n    // The React isomorphic package does not include a default dispatcher.\n    // Instead the first renderer will lazily attach one, in order to give\n    // nicer error messages.\n    return ContextOnlyDispatcher;\n  } else {\n    return prevDispatcher;\n  }\n}\n\nfunction popDispatcher(prevDispatcher) {\n  ReactCurrentDispatcher.current = prevDispatcher;\n}\n\nfunction pushInteractions(root) {\n  if (enableSchedulerTracing) {\n    const prevInteractions: Set<Interaction> | null = __interactionsRef.current;\n    __interactionsRef.current = root.memoizedInteractions;\n    return prevInteractions;\n  }\n  return null;\n}\n\nfunction popInteractions(prevInteractions) {\n  if (enableSchedulerTracing) {\n    __interactionsRef.current = prevInteractions;\n  }\n}\n\nexport function markCommitTimeOfFallback() {\n  globalMostRecentFallbackTime = now();\n}\n\nexport function markSkippedUpdateLanes(lane: Lane | Lanes): void {\n  workInProgressRootSkippedLanes = mergeLanes(\n    lane,\n    workInProgressRootSkippedLanes,\n  );\n}\n\nexport function renderDidSuspend(): void {\n  if (workInProgressRootExitStatus === RootIncomplete) {\n    workInProgressRootExitStatus = RootSuspended;\n  }\n}\n\nexport function renderDidSuspendDelayIfPossible(): void {\n  if (\n    workInProgressRootExitStatus === RootIncomplete ||\n    workInProgressRootExitStatus === RootSuspended\n  ) {\n    workInProgressRootExitStatus = RootSuspendedWithDelay;\n  }\n\n  // Check if there are updates that we skipped tree that might have unblocked\n  // this render.\n  if (\n    workInProgressRoot !== null &&\n    (includesNonIdleWork(workInProgressRootSkippedLanes) ||\n      includesNonIdleWork(workInProgressRootUpdatedLanes))\n  ) {\n    // Mark the current render as suspended so that we switch to working on\n    // the updates that were skipped. Usually we only suspend at the end of\n    // the render phase.\n    // TODO: We should probably always mark the root as suspended immediately\n    // (inside this function), since by suspending at the end of the render\n    // phase introduces a potential mistake where we suspend lanes that were\n    // pinged or updated while we were rendering.\n    markRootSuspended(workInProgressRoot, workInProgressRootRenderLanes);\n  }\n}\n\nexport function renderDidError() {\n  if (workInProgressRootExitStatus !== RootCompleted) {\n    workInProgressRootExitStatus = RootErrored;\n  }\n}\n\n// Called during render to determine if anything has suspended.\n// Returns false if we're not sure.\nexport function renderHasNotSuspendedYet(): boolean {\n  // If something errored or completed, we can't really be sure,\n  // so those are false.\n  return workInProgressRootExitStatus === RootIncomplete;\n}\n\nfunction renderRootSync(root: FiberRoot, lanes: Lanes) {\n  const prevExecutionContext = executionContext;\n  executionContext |= RenderContext;\n  const prevDispatcher = pushDispatcher();\n\n  // If the root or lanes have changed, throw out the existing stack\n  // and prepare a fresh one. Otherwise we'll continue where we left off.\n  if (workInProgressRoot !== root || workInProgressRootRenderLanes !== lanes) {\n    prepareFreshStack(root, lanes);\n    startWorkOnPendingInteractions(root, lanes);\n  }\n\n  const prevInteractions = pushInteractions(root);\n\n  if (__DEV__) {\n    if (enableDebugTracing) {\n      logRenderStarted(lanes);\n    }\n  }\n\n  if (enableSchedulingProfiler) {\n    markRenderStarted(lanes);\n  }\n\n  do {\n    try {\n      workLoopSync();\n      break;\n    } catch (thrownValue) {\n      handleError(root, thrownValue);\n    }\n  } while (true);\n  resetContextDependencies();\n  if (enableSchedulerTracing) {\n    popInteractions(((prevInteractions: any): Set<Interaction>));\n  }\n\n  executionContext = prevExecutionContext;\n  popDispatcher(prevDispatcher);\n\n  if (workInProgress !== null) {\n    // This is a sync render, so we should have finished the whole tree.\n    invariant(\n      false,\n      'Cannot commit an incomplete root. This error is likely caused by a ' +\n        'bug in React. Please file an issue.',\n    );\n  }\n\n  if (__DEV__) {\n    if (enableDebugTracing) {\n      logRenderStopped();\n    }\n  }\n\n  if (enableSchedulingProfiler) {\n    markRenderStopped();\n  }\n\n  // Set this to null to indicate there's no in-progress render.\n  workInProgressRoot = null;\n  workInProgressRootRenderLanes = NoLanes;\n\n  return workInProgressRootExitStatus;\n}\n\n// The work loop is an extremely hot path. Tell Closure not to inline it.\n/** @noinline */\nfunction workLoopSync() {\n  // Already timed out, so perform work without checking if we need to yield.\n  while (workInProgress !== null) {\n    performUnitOfWork(workInProgress);\n  }\n}\n\nfunction renderRootConcurrent(root: FiberRoot, lanes: Lanes) {\n  const prevExecutionContext = executionContext;\n  executionContext |= RenderContext;\n  const prevDispatcher = pushDispatcher();\n\n  // If the root or lanes have changed, throw out the existing stack\n  // and prepare a fresh one. Otherwise we'll continue where we left off.\n  if (workInProgressRoot !== root || workInProgressRootRenderLanes !== lanes) {\n    resetRenderTimer();\n    prepareFreshStack(root, lanes);\n    startWorkOnPendingInteractions(root, lanes);\n  }\n\n  const prevInteractions = pushInteractions(root);\n\n  if (__DEV__) {\n    if (enableDebugTracing) {\n      logRenderStarted(lanes);\n    }\n  }\n\n  if (enableSchedulingProfiler) {\n    markRenderStarted(lanes);\n  }\n\n  do {\n    try {\n      workLoopConcurrent();\n      break;\n    } catch (thrownValue) {\n      handleError(root, thrownValue);\n    }\n  } while (true);\n  resetContextDependencies();\n  if (enableSchedulerTracing) {\n    popInteractions(((prevInteractions: any): Set<Interaction>));\n  }\n\n  popDispatcher(prevDispatcher);\n  executionContext = prevExecutionContext;\n\n  if (__DEV__) {\n    if (enableDebugTracing) {\n      logRenderStopped();\n    }\n  }\n\n  // Check if the tree has completed.\n  if (workInProgress !== null) {\n    // Still work remaining.\n    if (enableSchedulingProfiler) {\n      markRenderYielded();\n    }\n    return RootIncomplete;\n  } else {\n    // Completed the tree.\n    if (enableSchedulingProfiler) {\n      markRenderStopped();\n    }\n\n    // Set this to null to indicate there's no in-progress render.\n    workInProgressRoot = null;\n    workInProgressRootRenderLanes = NoLanes;\n\n    // Return the final exit status.\n    return workInProgressRootExitStatus;\n  }\n}\n\n/** @noinline */\nfunction workLoopConcurrent() {\n  // Perform work until Scheduler asks us to yield\n  while (workInProgress !== null && !shouldYield()) {\n    performUnitOfWork(workInProgress);\n  }\n}\n\nfunction performUnitOfWork(unitOfWork: Fiber): void {\n  // The current, flushed, state of this fiber is the alternate. Ideally\n  // nothing should rely on this, but relying on it here means that we don't\n  // need an additional field on the work in progress.\n  const current = unitOfWork.alternate;\n  setCurrentDebugFiberInDEV(unitOfWork);\n\n  let next;\n  if (enableProfilerTimer && (unitOfWork.mode & ProfileMode) !== NoMode) {\n    startProfilerTimer(unitOfWork);\n    next = beginWork(current, unitOfWork, subtreeRenderLanes);\n    stopProfilerTimerIfRunningAndRecordDelta(unitOfWork, true);\n  } else {\n    next = beginWork(current, unitOfWork, subtreeRenderLanes);\n  }\n\n  resetCurrentDebugFiberInDEV();\n  unitOfWork.memoizedProps = unitOfWork.pendingProps;\n  if (next === null) {\n    // If this doesn't spawn new work, complete the current work.\n    completeUnitOfWork(unitOfWork);\n  } else {\n    workInProgress = next;\n  }\n\n  ReactCurrentOwner.current = null;\n}\n\nfunction completeUnitOfWork(unitOfWork: Fiber): void {\n  // Attempt to complete the current unit of work, then move to the next\n  // sibling. If there are no more siblings, return to the parent fiber.\n  let completedWork = unitOfWork;\n  do {\n    // The current, flushed, state of this fiber is the alternate. Ideally\n    // nothing should rely on this, but relying on it here means that we don't\n    // need an additional field on the work in progress.\n    const current = completedWork.alternate;\n    const returnFiber = completedWork.return;\n\n    // Check if the work completed or if something threw.\n    if ((completedWork.flags & Incomplete) === NoFlags) {\n      setCurrentDebugFiberInDEV(completedWork);\n      let next;\n      if (\n        !enableProfilerTimer ||\n        (completedWork.mode & ProfileMode) === NoMode\n      ) {\n        next = completeWork(current, completedWork, subtreeRenderLanes);\n      } else {\n        startProfilerTimer(completedWork);\n        next = completeWork(current, completedWork, subtreeRenderLanes);\n        // Update render duration assuming we didn't error.\n        stopProfilerTimerIfRunningAndRecordDelta(completedWork, false);\n      }\n      resetCurrentDebugFiberInDEV();\n\n      if (next !== null) {\n        // Completing this fiber spawned new work. Work on that next.\n        workInProgress = next;\n        return;\n      }\n\n      resetChildLanes(completedWork);\n\n      if (\n        returnFiber !== null &&\n        // Do not append effects to parents if a sibling failed to complete\n        (returnFiber.flags & Incomplete) === NoFlags\n      ) {\n        // Append all the effects of the subtree and this fiber onto the effect\n        // list of the parent. The completion order of the children affects the\n        // side-effect order.\n        if (returnFiber.firstEffect === null) {\n          returnFiber.firstEffect = completedWork.firstEffect;\n        }\n        if (completedWork.lastEffect !== null) {\n          if (returnFiber.lastEffect !== null) {\n            returnFiber.lastEffect.nextEffect = completedWork.firstEffect;\n          }\n          returnFiber.lastEffect = completedWork.lastEffect;\n        }\n\n        // If this fiber had side-effects, we append it AFTER the children's\n        // side-effects. We can perform certain side-effects earlier if needed,\n        // by doing multiple passes over the effect list. We don't want to\n        // schedule our own side-effect on our own list because if end up\n        // reusing children we'll schedule this effect onto itself since we're\n        // at the end.\n        const flags = completedWork.flags;\n\n        // Skip both NoWork and PerformedWork tags when creating the effect\n        // list. PerformedWork effect is read by React DevTools but shouldn't be\n        // committed.\n        if (flags > PerformedWork) {\n          if (returnFiber.lastEffect !== null) {\n            returnFiber.lastEffect.nextEffect = completedWork;\n          } else {\n            returnFiber.firstEffect = completedWork;\n          }\n          returnFiber.lastEffect = completedWork;\n        }\n      }\n    } else {\n      // This fiber did not complete because something threw. Pop values off\n      // the stack without entering the complete phase. If this is a boundary,\n      // capture values if possible.\n      const next = unwindWork(completedWork, subtreeRenderLanes);\n\n      // Because this fiber did not complete, don't reset its expiration time.\n\n      if (next !== null) {\n        // If completing this work spawned new work, do that next. We'll come\n        // back here again.\n        // Since we're restarting, remove anything that is not a host effect\n        // from the effect tag.\n        next.flags &= HostEffectMask;\n        workInProgress = next;\n        return;\n      }\n\n      if (\n        enableProfilerTimer &&\n        (completedWork.mode & ProfileMode) !== NoMode\n      ) {\n        // Record the render duration for the fiber that errored.\n        stopProfilerTimerIfRunningAndRecordDelta(completedWork, false);\n\n        // Include the time spent working on failed children before continuing.\n        let actualDuration = completedWork.actualDuration;\n        let child = completedWork.child;\n        while (child !== null) {\n          actualDuration += child.actualDuration;\n          child = child.sibling;\n        }\n        completedWork.actualDuration = actualDuration;\n      }\n\n      if (returnFiber !== null) {\n        // Mark the parent fiber as incomplete and clear its effect list.\n        returnFiber.firstEffect = returnFiber.lastEffect = null;\n        returnFiber.flags |= Incomplete;\n      }\n    }\n\n    const siblingFiber = completedWork.sibling;\n    if (siblingFiber !== null) {\n      // If there is more work to do in this returnFiber, do that next.\n      workInProgress = siblingFiber;\n      return;\n    }\n    // Otherwise, return to the parent\n    completedWork = returnFiber;\n    // Update the next thing we're working on in case something throws.\n    workInProgress = completedWork;\n  } while (completedWork !== null);\n\n  // We've reached the root.\n  if (workInProgressRootExitStatus === RootIncomplete) {\n    workInProgressRootExitStatus = RootCompleted;\n  }\n}\n\nfunction resetChildLanes(completedWork: Fiber) {\n  if (\n    // TODO: Move this check out of the hot path by moving `resetChildLanes`\n    // to switch statement in `completeWork`.\n    (completedWork.tag === LegacyHiddenComponent ||\n      completedWork.tag === OffscreenComponent) &&\n    completedWork.memoizedState !== null &&\n    !includesSomeLane(subtreeRenderLanes, (OffscreenLane: Lane)) &&\n    (completedWork.mode & ConcurrentMode) !== NoLanes\n  ) {\n    // The children of this component are hidden. Don't bubble their\n    // expiration times.\n    return;\n  }\n\n  let newChildLanes = NoLanes;\n\n  // Bubble up the earliest expiration time.\n  if (enableProfilerTimer && (completedWork.mode & ProfileMode) !== NoMode) {\n    // In profiling mode, resetChildExpirationTime is also used to reset\n    // profiler durations.\n    let actualDuration = completedWork.actualDuration;\n    let treeBaseDuration = ((completedWork.selfBaseDuration: any): number);\n\n    // When a fiber is cloned, its actualDuration is reset to 0. This value will\n    // only be updated if work is done on the fiber (i.e. it doesn't bailout).\n    // When work is done, it should bubble to the parent's actualDuration. If\n    // the fiber has not been cloned though, (meaning no work was done), then\n    // this value will reflect the amount of time spent working on a previous\n    // render. In that case it should not bubble. We determine whether it was\n    // cloned by comparing the child pointer.\n    const shouldBubbleActualDurations =\n      completedWork.alternate === null ||\n      completedWork.child !== completedWork.alternate.child;\n\n    let child = completedWork.child;\n    while (child !== null) {\n      newChildLanes = mergeLanes(\n        newChildLanes,\n        mergeLanes(child.lanes, child.childLanes),\n      );\n      if (shouldBubbleActualDurations) {\n        actualDuration += child.actualDuration;\n      }\n      treeBaseDuration += child.treeBaseDuration;\n      child = child.sibling;\n    }\n\n    const isTimedOutSuspense =\n      completedWork.tag === SuspenseComponent &&\n      completedWork.memoizedState !== null;\n    if (isTimedOutSuspense) {\n      // Don't count time spent in a timed out Suspense subtree as part of the base duration.\n      const primaryChildFragment = completedWork.child;\n      if (primaryChildFragment !== null) {\n        treeBaseDuration -= ((primaryChildFragment.treeBaseDuration: any): number);\n      }\n    }\n\n    completedWork.actualDuration = actualDuration;\n    completedWork.treeBaseDuration = treeBaseDuration;\n  } else {\n    let child = completedWork.child;\n    while (child !== null) {\n      newChildLanes = mergeLanes(\n        newChildLanes,\n        mergeLanes(child.lanes, child.childLanes),\n      );\n      child = child.sibling;\n    }\n  }\n\n  completedWork.childLanes = newChildLanes;\n}\n\nfunction commitRoot(root) {\n  const renderPriorityLevel = getCurrentPriorityLevel();\n  runWithPriority(\n    ImmediateSchedulerPriority,\n    commitRootImpl.bind(null, root, renderPriorityLevel),\n  );\n  return null;\n}\n\nfunction commitRootImpl(root, renderPriorityLevel) {\n  do {\n    // `flushPassiveEffects` will call `flushSyncUpdateQueue` at the end, which\n    // means `flushPassiveEffects` will sometimes result in additional\n    // passive effects. So we need to keep flushing in a loop until there are\n    // no more pending effects.\n    // TODO: Might be better if `flushPassiveEffects` did not automatically\n    // flush synchronous work at the end, to avoid factoring hazards like this.\n    flushPassiveEffects();\n  } while (rootWithPendingPassiveEffects !== null);\n  flushRenderPhaseStrictModeWarningsInDEV();\n\n  invariant(\n    (executionContext & (RenderContext | CommitContext)) === NoContext,\n    'Should not already be working.',\n  );\n\n  const finishedWork = root.finishedWork;\n  const lanes = root.finishedLanes;\n\n  if (__DEV__) {\n    if (enableDebugTracing) {\n      logCommitStarted(lanes);\n    }\n  }\n\n  if (enableSchedulingProfiler) {\n    markCommitStarted(lanes);\n  }\n\n  if (finishedWork === null) {\n    if (__DEV__) {\n      if (enableDebugTracing) {\n        logCommitStopped();\n      }\n    }\n\n    if (enableSchedulingProfiler) {\n      markCommitStopped();\n    }\n\n    return null;\n  }\n  root.finishedWork = null;\n  root.finishedLanes = NoLanes;\n\n  invariant(\n    finishedWork !== root.current,\n    'Cannot commit the same tree as before. This error is likely caused by ' +\n      'a bug in React. Please file an issue.',\n  );\n\n  // commitRoot never returns a continuation; it always finishes synchronously.\n  // So we can clear these now to allow a new callback to be scheduled.\n  root.callbackNode = null;\n\n  // Update the first and last pending times on this root. The new first\n  // pending time is whatever is left on the root fiber.\n  let remainingLanes = mergeLanes(finishedWork.lanes, finishedWork.childLanes);\n  markRootFinished(root, remainingLanes);\n\n  // Clear already finished discrete updates in case that a later call of\n  // `flushDiscreteUpdates` starts a useless render pass which may cancels\n  // a scheduled timeout.\n  if (rootsWithPendingDiscreteUpdates !== null) {\n    if (\n      !hasDiscreteLanes(remainingLanes) &&\n      rootsWithPendingDiscreteUpdates.has(root)\n    ) {\n      rootsWithPendingDiscreteUpdates.delete(root);\n    }\n  }\n\n  if (root === workInProgressRoot) {\n    // We can reset these now that they are finished.\n    workInProgressRoot = null;\n    workInProgress = null;\n    workInProgressRootRenderLanes = NoLanes;\n  } else {\n    // This indicates that the last root we worked on is not the same one that\n    // we're committing now. This most commonly happens when a suspended root\n    // times out.\n  }\n\n  // Get the list of effects.\n  let firstEffect;\n  if (finishedWork.flags > PerformedWork) {\n    // A fiber's effect list consists only of its children, not itself. So if\n    // the root has an effect, we need to add it to the end of the list. The\n    // resulting list is the set that would belong to the root's parent, if it\n    // had one; that is, all the effects in the tree including the root.\n    if (finishedWork.lastEffect !== null) {\n      finishedWork.lastEffect.nextEffect = finishedWork;\n      firstEffect = finishedWork.firstEffect;\n    } else {\n      firstEffect = finishedWork;\n    }\n  } else {\n    // There is no effect on the root.\n    firstEffect = finishedWork.firstEffect;\n  }\n\n  if (firstEffect !== null) {\n    let previousLanePriority;\n    if (decoupleUpdatePriorityFromScheduler) {\n      previousLanePriority = getCurrentUpdateLanePriority();\n      setCurrentUpdateLanePriority(SyncLanePriority);\n    }\n\n    const prevExecutionContext = executionContext;\n    executionContext |= CommitContext;\n    const prevInteractions = pushInteractions(root);\n\n    // Reset this to null before calling lifecycles\n    ReactCurrentOwner.current = null;\n\n    // The commit phase is broken into several sub-phases. We do a separate pass\n    // of the effect list for each phase: all mutation effects come before all\n    // layout effects, and so on.\n\n    // The first phase a \"before mutation\" phase. We use this phase to read the\n    // state of the host tree right before we mutate it. This is where\n    // getSnapshotBeforeUpdate is called.\n    focusedInstanceHandle = prepareForCommit(root.containerInfo);\n    shouldFireAfterActiveInstanceBlur = false;\n\n    nextEffect = firstEffect;\n    do {\n      if (__DEV__) {\n        invokeGuardedCallback(null, commitBeforeMutationEffects, null);\n        if (hasCaughtError()) {\n          invariant(nextEffect !== null, 'Should be working on an effect.');\n          const error = clearCaughtError();\n          captureCommitPhaseError(nextEffect, error);\n          nextEffect = nextEffect.nextEffect;\n        }\n      } else {\n        try {\n          commitBeforeMutationEffects();\n        } catch (error) {\n          invariant(nextEffect !== null, 'Should be working on an effect.');\n          captureCommitPhaseError(nextEffect, error);\n          nextEffect = nextEffect.nextEffect;\n        }\n      }\n    } while (nextEffect !== null);\n\n    // We no longer need to track the active instance fiber\n    focusedInstanceHandle = null;\n\n    if (enableProfilerTimer) {\n      // Mark the current commit time to be shared by all Profilers in this\n      // batch. This enables them to be grouped later.\n      recordCommitTime();\n    }\n\n    // The next phase is the mutation phase, where we mutate the host tree.\n    nextEffect = firstEffect;\n    do {\n      if (__DEV__) {\n        invokeGuardedCallback(\n          null,\n          commitMutationEffects,\n          null,\n          root,\n          renderPriorityLevel,\n        );\n        if (hasCaughtError()) {\n          invariant(nextEffect !== null, 'Should be working on an effect.');\n          const error = clearCaughtError();\n          captureCommitPhaseError(nextEffect, error);\n          nextEffect = nextEffect.nextEffect;\n        }\n      } else {\n        try {\n          commitMutationEffects(root, renderPriorityLevel);\n        } catch (error) {\n          invariant(nextEffect !== null, 'Should be working on an effect.');\n          captureCommitPhaseError(nextEffect, error);\n          nextEffect = nextEffect.nextEffect;\n        }\n      }\n    } while (nextEffect !== null);\n\n    if (shouldFireAfterActiveInstanceBlur) {\n      afterActiveInstanceBlur();\n    }\n    resetAfterCommit(root.containerInfo);\n\n    // The work-in-progress tree is now the current tree. This must come after\n    // the mutation phase, so that the previous tree is still current during\n    // componentWillUnmount, but before the layout phase, so that the finished\n    // work is current during componentDidMount/Update.\n    root.current = finishedWork;\n\n    // The next phase is the layout phase, where we call effects that read\n    // the host tree after it's been mutated. The idiomatic use case for this is\n    // layout, but class component lifecycles also fire here for legacy reasons.\n    nextEffect = firstEffect;\n    do {\n      if (__DEV__) {\n        invokeGuardedCallback(null, commitLayoutEffects, null, root, lanes);\n        if (hasCaughtError()) {\n          invariant(nextEffect !== null, 'Should be working on an effect.');\n          const error = clearCaughtError();\n          captureCommitPhaseError(nextEffect, error);\n          nextEffect = nextEffect.nextEffect;\n        }\n      } else {\n        try {\n          commitLayoutEffects(root, lanes);\n        } catch (error) {\n          invariant(nextEffect !== null, 'Should be working on an effect.');\n          captureCommitPhaseError(nextEffect, error);\n          nextEffect = nextEffect.nextEffect;\n        }\n      }\n    } while (nextEffect !== null);\n\n    nextEffect = null;\n\n    // Tell Scheduler to yield at the end of the frame, so the browser has an\n    // opportunity to paint.\n    requestPaint();\n\n    if (enableSchedulerTracing) {\n      popInteractions(((prevInteractions: any): Set<Interaction>));\n    }\n    executionContext = prevExecutionContext;\n\n    if (decoupleUpdatePriorityFromScheduler && previousLanePriority != null) {\n      // Reset the priority to the previous non-sync value.\n      setCurrentUpdateLanePriority(previousLanePriority);\n    }\n  } else {\n    // No effects.\n    root.current = finishedWork;\n    // Measure these anyway so the flamegraph explicitly shows that there were\n    // no effects.\n    // TODO: Maybe there's a better way to report this.\n    if (enableProfilerTimer) {\n      recordCommitTime();\n    }\n  }\n\n  const rootDidHavePassiveEffects = rootDoesHavePassiveEffects;\n\n  if (rootDoesHavePassiveEffects) {\n    // This commit has passive effects. Stash a reference to them. But don't\n    // schedule a callback until after flushing layout work.\n    rootDoesHavePassiveEffects = false;\n    rootWithPendingPassiveEffects = root;\n    pendingPassiveEffectsLanes = lanes;\n    pendingPassiveEffectsRenderPriority = renderPriorityLevel;\n  } else {\n    // We are done with the effect chain at this point so let's clear the\n    // nextEffect pointers to assist with GC. If we have passive effects, we'll\n    // clear this in flushPassiveEffects.\n    nextEffect = firstEffect;\n    while (nextEffect !== null) {\n      const nextNextEffect = nextEffect.nextEffect;\n      nextEffect.nextEffect = null;\n      if (nextEffect.flags & Deletion) {\n        detachFiberAfterEffects(nextEffect);\n      }\n      nextEffect = nextNextEffect;\n    }\n  }\n\n  // Read this again, since an effect might have updated it\n  remainingLanes = root.pendingLanes;\n\n  // Check if there's remaining work on this root\n  if (remainingLanes !== NoLanes) {\n    if (enableSchedulerTracing) {\n      if (spawnedWorkDuringRender !== null) {\n        const expirationTimes = spawnedWorkDuringRender;\n        spawnedWorkDuringRender = null;\n        for (let i = 0; i < expirationTimes.length; i++) {\n          scheduleInteractions(\n            root,\n            expirationTimes[i],\n            root.memoizedInteractions,\n          );\n        }\n      }\n      schedulePendingInteractions(root, remainingLanes);\n    }\n  } else {\n    // If there's no remaining work, we can clear the set of already failed\n    // error boundaries.\n    legacyErrorBoundariesThatAlreadyFailed = null;\n  }\n\n  if (enableSchedulerTracing) {\n    if (!rootDidHavePassiveEffects) {\n      // If there are no passive effects, then we can complete the pending interactions.\n      // Otherwise, we'll wait until after the passive effects are flushed.\n      // Wait to do this until after remaining work has been scheduled,\n      // so that we don't prematurely signal complete for interactions when there's e.g. hidden work.\n      finishPendingInteractions(root, lanes);\n    }\n  }\n\n  if (remainingLanes === SyncLane) {\n    // Count the number of times the root synchronously re-renders without\n    // finishing. If there are too many, it indicates an infinite update loop.\n    if (root === rootWithNestedUpdates) {\n      nestedUpdateCount++;\n    } else {\n      nestedUpdateCount = 0;\n      rootWithNestedUpdates = root;\n    }\n  } else {\n    nestedUpdateCount = 0;\n  }\n\n  onCommitRootDevTools(finishedWork.stateNode, renderPriorityLevel);\n\n  if (__DEV__) {\n    onCommitRootTestSelector();\n  }\n\n  // Always call this before exiting `commitRoot`, to ensure that any\n  // additional work on this root is scheduled.\n  ensureRootIsScheduled(root, now());\n\n  if (hasUncaughtError) {\n    hasUncaughtError = false;\n    const error = firstUncaughtError;\n    firstUncaughtError = null;\n    throw error;\n  }\n\n  if ((executionContext & LegacyUnbatchedContext) !== NoContext) {\n    if (__DEV__) {\n      if (enableDebugTracing) {\n        logCommitStopped();\n      }\n    }\n\n    if (enableSchedulingProfiler) {\n      markCommitStopped();\n    }\n\n    // This is a legacy edge case. We just committed the initial mount of\n    // a ReactDOM.render-ed root inside of batchedUpdates. The commit fired\n    // synchronously, but layout updates should be deferred until the end\n    // of the batch.\n    return null;\n  }\n\n  // If layout work was scheduled, flush it now.\n  flushSyncCallbackQueue();\n\n  if (__DEV__) {\n    if (enableDebugTracing) {\n      logCommitStopped();\n    }\n  }\n\n  if (enableSchedulingProfiler) {\n    markCommitStopped();\n  }\n\n  return null;\n}\n\nfunction commitBeforeMutationEffects() {\n  while (nextEffect !== null) {\n    const current = nextEffect.alternate;\n\n    if (!shouldFireAfterActiveInstanceBlur && focusedInstanceHandle !== null) {\n      if ((nextEffect.flags & Deletion) !== NoFlags) {\n        if (doesFiberContain(nextEffect, focusedInstanceHandle)) {\n          shouldFireAfterActiveInstanceBlur = true;\n          beforeActiveInstanceBlur();\n        }\n      } else {\n        // TODO: Move this out of the hot path using a dedicated effect tag.\n        if (\n          nextEffect.tag === SuspenseComponent &&\n          isSuspenseBoundaryBeingHidden(current, nextEffect) &&\n          doesFiberContain(nextEffect, focusedInstanceHandle)\n        ) {\n          shouldFireAfterActiveInstanceBlur = true;\n          beforeActiveInstanceBlur();\n        }\n      }\n    }\n\n    const flags = nextEffect.flags;\n    if ((flags & Snapshot) !== NoFlags) {\n      setCurrentDebugFiberInDEV(nextEffect);\n\n      commitBeforeMutationEffectOnFiber(current, nextEffect);\n\n      resetCurrentDebugFiberInDEV();\n    }\n    if ((flags & Passive) !== NoFlags) {\n      // If there are passive effects, schedule a callback to flush at\n      // the earliest opportunity.\n      if (!rootDoesHavePassiveEffects) {\n        rootDoesHavePassiveEffects = true;\n        scheduleCallback(NormalSchedulerPriority, () => {\n          flushPassiveEffects();\n          return null;\n        });\n      }\n    }\n    nextEffect = nextEffect.nextEffect;\n  }\n}\n\nfunction commitMutationEffects(\n  root: FiberRoot,\n  renderPriorityLevel: ReactPriorityLevel,\n) {\n  // TODO: Should probably move the bulk of this function to commitWork.\n  while (nextEffect !== null) {\n    setCurrentDebugFiberInDEV(nextEffect);\n\n    const flags = nextEffect.flags;\n\n    if (flags & ContentReset) {\n      commitResetTextContent(nextEffect);\n    }\n\n    if (flags & Ref) {\n      const current = nextEffect.alternate;\n      if (current !== null) {\n        commitDetachRef(current);\n      }\n      if (enableScopeAPI) {\n        // TODO: This is a temporary solution that allowed us to transition away\n        // from React Flare on www.\n        if (nextEffect.tag === ScopeComponent) {\n          commitAttachRef(nextEffect);\n        }\n      }\n    }\n\n    // The following switch statement is only concerned about placement,\n    // updates, and deletions. To avoid needing to add a case for every possible\n    // bitmap value, we remove the secondary effects from the effect tag and\n    // switch on that value.\n    const primaryFlags = flags & (Placement | Update | Deletion | Hydrating);\n    switch (primaryFlags) {\n      case Placement: {\n        commitPlacement(nextEffect);\n        // Clear the \"placement\" from effect tag so that we know that this is\n        // inserted, before any life-cycles like componentDidMount gets called.\n        // TODO: findDOMNode doesn't rely on this any more but isMounted does\n        // and isMounted is deprecated anyway so we should be able to kill this.\n        nextEffect.flags &= ~Placement;\n        break;\n      }\n      case PlacementAndUpdate: {\n        // Placement\n        commitPlacement(nextEffect);\n        // Clear the \"placement\" from effect tag so that we know that this is\n        // inserted, before any life-cycles like componentDidMount gets called.\n        nextEffect.flags &= ~Placement;\n\n        // Update\n        const current = nextEffect.alternate;\n        commitWork(current, nextEffect);\n        break;\n      }\n      case Hydrating: {\n        nextEffect.flags &= ~Hydrating;\n        break;\n      }\n      case HydratingAndUpdate: {\n        nextEffect.flags &= ~Hydrating;\n\n        // Update\n        const current = nextEffect.alternate;\n        commitWork(current, nextEffect);\n        break;\n      }\n      case Update: {\n        const current = nextEffect.alternate;\n        commitWork(current, nextEffect);\n        break;\n      }\n      case Deletion: {\n        commitDeletion(root, nextEffect, renderPriorityLevel);\n        break;\n      }\n    }\n\n    resetCurrentDebugFiberInDEV();\n    nextEffect = nextEffect.nextEffect;\n  }\n}\n\nfunction commitLayoutEffects(root: FiberRoot, committedLanes: Lanes) {\n  if (__DEV__) {\n    if (enableDebugTracing) {\n      logLayoutEffectsStarted(committedLanes);\n    }\n  }\n\n  if (enableSchedulingProfiler) {\n    markLayoutEffectsStarted(committedLanes);\n  }\n\n  // TODO: Should probably move the bulk of this function to commitWork.\n  while (nextEffect !== null) {\n    setCurrentDebugFiberInDEV(nextEffect);\n\n    const flags = nextEffect.flags;\n\n    if (flags & (Update | Callback)) {\n      const current = nextEffect.alternate;\n      commitLayoutEffectOnFiber(root, current, nextEffect, committedLanes);\n    }\n\n    if (enableScopeAPI) {\n      // TODO: This is a temporary solution that allowed us to transition away\n      // from React Flare on www.\n      if (flags & Ref && nextEffect.tag !== ScopeComponent) {\n        commitAttachRef(nextEffect);\n      }\n    } else {\n      if (flags & Ref) {\n        commitAttachRef(nextEffect);\n      }\n    }\n\n    resetCurrentDebugFiberInDEV();\n    nextEffect = nextEffect.nextEffect;\n  }\n\n  if (__DEV__) {\n    if (enableDebugTracing) {\n      logLayoutEffectsStopped();\n    }\n  }\n\n  if (enableSchedulingProfiler) {\n    markLayoutEffectsStopped();\n  }\n}\n\nexport function flushPassiveEffects(): boolean {\n  // Returns whether passive effects were flushed.\n  if (pendingPassiveEffectsRenderPriority !== NoSchedulerPriority) {\n    const priorityLevel =\n      pendingPassiveEffectsRenderPriority > NormalSchedulerPriority\n        ? NormalSchedulerPriority\n        : pendingPassiveEffectsRenderPriority;\n    pendingPassiveEffectsRenderPriority = NoSchedulerPriority;\n    if (decoupleUpdatePriorityFromScheduler) {\n      const previousLanePriority = getCurrentUpdateLanePriority();\n      try {\n        setCurrentUpdateLanePriority(\n          schedulerPriorityToLanePriority(priorityLevel),\n        );\n        return runWithPriority(priorityLevel, flushPassiveEffectsImpl);\n      } finally {\n        setCurrentUpdateLanePriority(previousLanePriority);\n      }\n    } else {\n      return runWithPriority(priorityLevel, flushPassiveEffectsImpl);\n    }\n  }\n  return false;\n}\n\nexport function enqueuePendingPassiveProfilerEffect(fiber: Fiber): void {\n  if (enableProfilerTimer && enableProfilerCommitHooks) {\n    pendingPassiveProfilerEffects.push(fiber);\n    if (!rootDoesHavePassiveEffects) {\n      rootDoesHavePassiveEffects = true;\n      scheduleCallback(NormalSchedulerPriority, () => {\n        flushPassiveEffects();\n        return null;\n      });\n    }\n  }\n}\n\nexport function enqueuePendingPassiveHookEffectMount(\n  fiber: Fiber,\n  effect: HookEffect,\n): void {\n  pendingPassiveHookEffectsMount.push(effect, fiber);\n  if (!rootDoesHavePassiveEffects) {\n    rootDoesHavePassiveEffects = true;\n    scheduleCallback(NormalSchedulerPriority, () => {\n      flushPassiveEffects();\n      return null;\n    });\n  }\n}\n\nexport function enqueuePendingPassiveHookEffectUnmount(\n  fiber: Fiber,\n  effect: HookEffect,\n): void {\n  pendingPassiveHookEffectsUnmount.push(effect, fiber);\n  if (__DEV__) {\n    fiber.flags |= PassiveUnmountPendingDev;\n    const alternate = fiber.alternate;\n    if (alternate !== null) {\n      alternate.flags |= PassiveUnmountPendingDev;\n    }\n  }\n  if (!rootDoesHavePassiveEffects) {\n    rootDoesHavePassiveEffects = true;\n    scheduleCallback(NormalSchedulerPriority, () => {\n      flushPassiveEffects();\n      return null;\n    });\n  }\n}\n\nfunction invokePassiveEffectCreate(effect: HookEffect): void {\n  const create = effect.create;\n  effect.destroy = create();\n}\n\nfunction flushPassiveEffectsImpl() {\n  if (rootWithPendingPassiveEffects === null) {\n    return false;\n  }\n\n  const root = rootWithPendingPassiveEffects;\n  const lanes = pendingPassiveEffectsLanes;\n  rootWithPendingPassiveEffects = null;\n  pendingPassiveEffectsLanes = NoLanes;\n\n  invariant(\n    (executionContext & (RenderContext | CommitContext)) === NoContext,\n    'Cannot flush passive effects while already rendering.',\n  );\n\n  if (__DEV__) {\n    if (enableDebugTracing) {\n      logPassiveEffectsStarted(lanes);\n    }\n  }\n\n  if (enableSchedulingProfiler) {\n    markPassiveEffectsStarted(lanes);\n  }\n\n  if (__DEV__) {\n    isFlushingPassiveEffects = true;\n  }\n\n  const prevExecutionContext = executionContext;\n  executionContext |= CommitContext;\n  const prevInteractions = pushInteractions(root);\n\n  // It's important that ALL pending passive effect destroy functions are called\n  // before ANY passive effect create functions are called.\n  // Otherwise effects in sibling components might interfere with each other.\n  // e.g. a destroy function in one component may unintentionally override a ref\n  // value set by a create function in another component.\n  // Layout effects have the same constraint.\n\n  // First pass: Destroy stale passive effects.\n  const unmountEffects = pendingPassiveHookEffectsUnmount;\n  pendingPassiveHookEffectsUnmount = [];\n  for (let i = 0; i < unmountEffects.length; i += 2) {\n    const effect = ((unmountEffects[i]: any): HookEffect);\n    const fiber = ((unmountEffects[i + 1]: any): Fiber);\n    const destroy = effect.destroy;\n    effect.destroy = undefined;\n\n    if (__DEV__) {\n      fiber.flags &= ~PassiveUnmountPendingDev;\n      const alternate = fiber.alternate;\n      if (alternate !== null) {\n        alternate.flags &= ~PassiveUnmountPendingDev;\n      }\n    }\n\n    if (typeof destroy === 'function') {\n      if (__DEV__) {\n        setCurrentDebugFiberInDEV(fiber);\n        if (\n          enableProfilerTimer &&\n          enableProfilerCommitHooks &&\n          fiber.mode & ProfileMode\n        ) {\n          startPassiveEffectTimer();\n          invokeGuardedCallback(null, destroy, null);\n          recordPassiveEffectDuration(fiber);\n        } else {\n          invokeGuardedCallback(null, destroy, null);\n        }\n        if (hasCaughtError()) {\n          invariant(fiber !== null, 'Should be working on an effect.');\n          const error = clearCaughtError();\n          captureCommitPhaseError(fiber, error);\n        }\n        resetCurrentDebugFiberInDEV();\n      } else {\n        try {\n          if (\n            enableProfilerTimer &&\n            enableProfilerCommitHooks &&\n            fiber.mode & ProfileMode\n          ) {\n            try {\n              startPassiveEffectTimer();\n              destroy();\n            } finally {\n              recordPassiveEffectDuration(fiber);\n            }\n          } else {\n            destroy();\n          }\n        } catch (error) {\n          invariant(fiber !== null, 'Should be working on an effect.');\n          captureCommitPhaseError(fiber, error);\n        }\n      }\n    }\n  }\n  // Second pass: Create new passive effects.\n  const mountEffects = pendingPassiveHookEffectsMount;\n  pendingPassiveHookEffectsMount = [];\n  for (let i = 0; i < mountEffects.length; i += 2) {\n    const effect = ((mountEffects[i]: any): HookEffect);\n    const fiber = ((mountEffects[i + 1]: any): Fiber);\n    if (__DEV__) {\n      setCurrentDebugFiberInDEV(fiber);\n      if (\n        enableProfilerTimer &&\n        enableProfilerCommitHooks &&\n        fiber.mode & ProfileMode\n      ) {\n        startPassiveEffectTimer();\n        invokeGuardedCallback(null, invokePassiveEffectCreate, null, effect);\n        recordPassiveEffectDuration(fiber);\n      } else {\n        invokeGuardedCallback(null, invokePassiveEffectCreate, null, effect);\n      }\n      if (hasCaughtError()) {\n        invariant(fiber !== null, 'Should be working on an effect.');\n        const error = clearCaughtError();\n        captureCommitPhaseError(fiber, error);\n      }\n      resetCurrentDebugFiberInDEV();\n    } else {\n      try {\n        const create = effect.create;\n        if (\n          enableProfilerTimer &&\n          enableProfilerCommitHooks &&\n          fiber.mode & ProfileMode\n        ) {\n          try {\n            startPassiveEffectTimer();\n            effect.destroy = create();\n          } finally {\n            recordPassiveEffectDuration(fiber);\n          }\n        } else {\n          effect.destroy = create();\n        }\n      } catch (error) {\n        invariant(fiber !== null, 'Should be working on an effect.');\n        captureCommitPhaseError(fiber, error);\n      }\n    }\n  }\n\n  // Note: This currently assumes there are no passive effects on the root fiber\n  // because the root is not part of its own effect list.\n  // This could change in the future.\n  let effect = root.current.firstEffect;\n  while (effect !== null) {\n    const nextNextEffect = effect.nextEffect;\n    // Remove nextEffect pointer to assist GC\n    effect.nextEffect = null;\n    if (effect.flags & Deletion) {\n      detachFiberAfterEffects(effect);\n    }\n    effect = nextNextEffect;\n  }\n\n  if (enableProfilerTimer && enableProfilerCommitHooks) {\n    const profilerEffects = pendingPassiveProfilerEffects;\n    pendingPassiveProfilerEffects = [];\n    for (let i = 0; i < profilerEffects.length; i++) {\n      const fiber = ((profilerEffects[i]: any): Fiber);\n      commitPassiveEffectDurations(root, fiber);\n    }\n  }\n\n  if (enableSchedulerTracing) {\n    popInteractions(((prevInteractions: any): Set<Interaction>));\n    finishPendingInteractions(root, lanes);\n  }\n\n  if (__DEV__) {\n    isFlushingPassiveEffects = false;\n  }\n\n  if (__DEV__) {\n    if (enableDebugTracing) {\n      logPassiveEffectsStopped();\n    }\n  }\n\n  if (enableSchedulingProfiler) {\n    markPassiveEffectsStopped();\n  }\n\n  executionContext = prevExecutionContext;\n\n  flushSyncCallbackQueue();\n\n  // If additional passive effects were scheduled, increment a counter. If this\n  // exceeds the limit, we'll fire a warning.\n  nestedPassiveUpdateCount =\n    rootWithPendingPassiveEffects === null ? 0 : nestedPassiveUpdateCount + 1;\n\n  return true;\n}\n\nexport function isAlreadyFailedLegacyErrorBoundary(instance: mixed): boolean {\n  return (\n    legacyErrorBoundariesThatAlreadyFailed !== null &&\n    legacyErrorBoundariesThatAlreadyFailed.has(instance)\n  );\n}\n\nexport function markLegacyErrorBoundaryAsFailed(instance: mixed) {\n  if (legacyErrorBoundariesThatAlreadyFailed === null) {\n    legacyErrorBoundariesThatAlreadyFailed = new Set([instance]);\n  } else {\n    legacyErrorBoundariesThatAlreadyFailed.add(instance);\n  }\n}\n\nfunction prepareToThrowUncaughtError(error: mixed) {\n  if (!hasUncaughtError) {\n    hasUncaughtError = true;\n    firstUncaughtError = error;\n  }\n}\nexport const onUncaughtError = prepareToThrowUncaughtError;\n\nfunction captureCommitPhaseErrorOnRoot(\n  rootFiber: Fiber,\n  sourceFiber: Fiber,\n  error: mixed,\n) {\n  const errorInfo = createCapturedValue(error, sourceFiber);\n  const update = createRootErrorUpdate(rootFiber, errorInfo, (SyncLane: Lane));\n  enqueueUpdate(rootFiber, update);\n  const eventTime = requestEventTime();\n  const root = markUpdateLaneFromFiberToRoot(rootFiber, (SyncLane: Lane));\n  if (root !== null) {\n    markRootUpdated(root, SyncLane, eventTime);\n    ensureRootIsScheduled(root, eventTime);\n    schedulePendingInteractions(root, SyncLane);\n  }\n}\n\nexport function captureCommitPhaseError(sourceFiber: Fiber, error: mixed) {\n  if (sourceFiber.tag === HostRoot) {\n    // Error was thrown at the root. There is no parent, so the root\n    // itself should capture it.\n    captureCommitPhaseErrorOnRoot(sourceFiber, sourceFiber, error);\n    return;\n  }\n\n  let fiber = sourceFiber.return;\n\n  while (fiber !== null) {\n    if (fiber.tag === HostRoot) {\n      captureCommitPhaseErrorOnRoot(fiber, sourceFiber, error);\n      return;\n    } else if (fiber.tag === ClassComponent) {\n      const ctor = fiber.type;\n      const instance = fiber.stateNode;\n      if (\n        typeof ctor.getDerivedStateFromError === 'function' ||\n        (typeof instance.componentDidCatch === 'function' &&\n          !isAlreadyFailedLegacyErrorBoundary(instance))\n      ) {\n        const errorInfo = createCapturedValue(error, sourceFiber);\n        const update = createClassErrorUpdate(\n          fiber,\n          errorInfo,\n          (SyncLane: Lane),\n        );\n        enqueueUpdate(fiber, update);\n        const eventTime = requestEventTime();\n        const root = markUpdateLaneFromFiberToRoot(fiber, (SyncLane: Lane));\n        if (root !== null) {\n          markRootUpdated(root, SyncLane, eventTime);\n          ensureRootIsScheduled(root, eventTime);\n          schedulePendingInteractions(root, SyncLane);\n        } else {\n          // This component has already been unmounted.\n          // We can't schedule any follow up work for the root because the fiber is already unmounted,\n          // but we can still call the log-only boundary so the error isn't swallowed.\n          //\n          // TODO This is only a temporary bandaid for the old reconciler fork.\n          // We can delete this special case once the new fork is merged.\n          if (\n            typeof instance.componentDidCatch === 'function' &&\n            !isAlreadyFailedLegacyErrorBoundary(instance)\n          ) {\n            try {\n              instance.componentDidCatch(error, errorInfo);\n            } catch (errorToIgnore) {\n              // TODO Ignore this error? Rethrow it?\n              // This is kind of an edge case.\n            }\n          }\n        }\n        return;\n      }\n    }\n    fiber = fiber.return;\n  }\n}\n\nexport function pingSuspendedRoot(\n  root: FiberRoot,\n  wakeable: Wakeable,\n  pingedLanes: Lanes,\n) {\n  const pingCache = root.pingCache;\n  if (pingCache !== null) {\n    // The wakeable resolved, so we no longer need to memoize, because it will\n    // never be thrown again.\n    pingCache.delete(wakeable);\n  }\n\n  const eventTime = requestEventTime();\n  markRootPinged(root, pingedLanes, eventTime);\n\n  if (\n    workInProgressRoot === root &&\n    isSubsetOfLanes(workInProgressRootRenderLanes, pingedLanes)\n  ) {\n    // Received a ping at the same priority level at which we're currently\n    // rendering. We might want to restart this render. This should mirror\n    // the logic of whether or not a root suspends once it completes.\n\n    // TODO: If we're rendering sync either due to Sync, Batched or expired,\n    // we should probably never restart.\n\n    // If we're suspended with delay, or if it's a retry, we'll always suspend\n    // so we can always restart.\n    if (\n      workInProgressRootExitStatus === RootSuspendedWithDelay ||\n      (workInProgressRootExitStatus === RootSuspended &&\n        includesOnlyRetries(workInProgressRootRenderLanes) &&\n        now() - globalMostRecentFallbackTime < FALLBACK_THROTTLE_MS)\n    ) {\n      // Restart from the root.\n      prepareFreshStack(root, NoLanes);\n    } else {\n      // Even though we can't restart right now, we might get an\n      // opportunity later. So we mark this render as having a ping.\n      workInProgressRootPingedLanes = mergeLanes(\n        workInProgressRootPingedLanes,\n        pingedLanes,\n      );\n    }\n  }\n\n  ensureRootIsScheduled(root, eventTime);\n  schedulePendingInteractions(root, pingedLanes);\n}\n\nfunction retryTimedOutBoundary(boundaryFiber: Fiber, retryLane: Lane) {\n  // The boundary fiber (a Suspense component or SuspenseList component)\n  // previously was rendered in its fallback state. One of the promises that\n  // suspended it has resolved, which means at least part of the tree was\n  // likely unblocked. Try rendering again, at a new expiration time.\n  if (retryLane === NoLane) {\n    retryLane = requestRetryLane(boundaryFiber);\n  }\n  // TODO: Special case idle priority?\n  const eventTime = requestEventTime();\n  const root = markUpdateLaneFromFiberToRoot(boundaryFiber, retryLane);\n  if (root !== null) {\n    markRootUpdated(root, retryLane, eventTime);\n    ensureRootIsScheduled(root, eventTime);\n    schedulePendingInteractions(root, retryLane);\n  }\n}\n\nexport function retryDehydratedSuspenseBoundary(boundaryFiber: Fiber) {\n  const suspenseState: null | SuspenseState = boundaryFiber.memoizedState;\n  let retryLane = NoLane;\n  if (suspenseState !== null) {\n    retryLane = suspenseState.retryLane;\n  }\n  retryTimedOutBoundary(boundaryFiber, retryLane);\n}\n\nexport function resolveRetryWakeable(boundaryFiber: Fiber, wakeable: Wakeable) {\n  let retryLane = NoLane; // Default\n  let retryCache: WeakSet<Wakeable> | Set<Wakeable> | null;\n  if (enableSuspenseServerRenderer) {\n    switch (boundaryFiber.tag) {\n      case SuspenseComponent:\n        retryCache = boundaryFiber.stateNode;\n        const suspenseState: null | SuspenseState = boundaryFiber.memoizedState;\n        if (suspenseState !== null) {\n          retryLane = suspenseState.retryLane;\n        }\n        break;\n      case SuspenseListComponent:\n        retryCache = boundaryFiber.stateNode;\n        break;\n      default:\n        invariant(\n          false,\n          'Pinged unknown suspense boundary type. ' +\n            'This is probably a bug in React.',\n        );\n    }\n  } else {\n    retryCache = boundaryFiber.stateNode;\n  }\n\n  if (retryCache !== null) {\n    // The wakeable resolved, so we no longer need to memoize, because it will\n    // never be thrown again.\n    retryCache.delete(wakeable);\n  }\n\n  retryTimedOutBoundary(boundaryFiber, retryLane);\n}\n\n// Computes the next Just Noticeable Difference (JND) boundary.\n// The theory is that a person can't tell the difference between small differences in time.\n// Therefore, if we wait a bit longer than necessary that won't translate to a noticeable\n// difference in the experience. However, waiting for longer might mean that we can avoid\n// showing an intermediate loading state. The longer we have already waited, the harder it\n// is to tell small differences in time. Therefore, the longer we've already waited,\n// the longer we can wait additionally. At some point we have to give up though.\n// We pick a train model where the next boundary commits at a consistent schedule.\n// These particular numbers are vague estimates. We expect to adjust them based on research.\nfunction jnd(timeElapsed: number) {\n  return timeElapsed < 120\n    ? 120\n    : timeElapsed < 480\n    ? 480\n    : timeElapsed < 1080\n    ? 1080\n    : timeElapsed < 1920\n    ? 1920\n    : timeElapsed < 3000\n    ? 3000\n    : timeElapsed < 4320\n    ? 4320\n    : ceil(timeElapsed / 1960) * 1960;\n}\n\nfunction checkForNestedUpdates() {\n  if (nestedUpdateCount > NESTED_UPDATE_LIMIT) {\n    nestedUpdateCount = 0;\n    rootWithNestedUpdates = null;\n    invariant(\n      false,\n      'Maximum update depth exceeded. This can happen when a component ' +\n        'repeatedly calls setState inside componentWillUpdate or ' +\n        'componentDidUpdate. React limits the number of nested updates to ' +\n        'prevent infinite loops.',\n    );\n  }\n\n  if (__DEV__) {\n    if (nestedPassiveUpdateCount > NESTED_PASSIVE_UPDATE_LIMIT) {\n      nestedPassiveUpdateCount = 0;\n      console.error(\n        'Maximum update depth exceeded. This can happen when a component ' +\n          \"calls setState inside useEffect, but useEffect either doesn't \" +\n          'have a dependency array, or one of the dependencies changes on ' +\n          'every render.',\n      );\n    }\n  }\n}\n\nfunction flushRenderPhaseStrictModeWarningsInDEV() {\n  if (__DEV__) {\n    ReactStrictModeWarnings.flushLegacyContextWarning();\n\n    if (warnAboutDeprecatedLifecycles) {\n      ReactStrictModeWarnings.flushPendingUnsafeLifecycleWarnings();\n    }\n  }\n}\n\nlet didWarnStateUpdateForNotYetMountedComponent: Set<string> | null = null;\nfunction warnAboutUpdateOnNotYetMountedFiberInDEV(fiber) {\n  if (__DEV__) {\n    if ((executionContext & RenderContext) !== NoContext) {\n      // We let the other warning about render phase updates deal with this one.\n      return;\n    }\n\n    if (!(fiber.mode & (BlockingMode | ConcurrentMode))) {\n      return;\n    }\n\n    const tag = fiber.tag;\n    if (\n      tag !== IndeterminateComponent &&\n      tag !== HostRoot &&\n      tag !== ClassComponent &&\n      tag !== FunctionComponent &&\n      tag !== ForwardRef &&\n      tag !== MemoComponent &&\n      tag !== SimpleMemoComponent &&\n      tag !== Block\n    ) {\n      // Only warn for user-defined components, not internal ones like Suspense.\n      return;\n    }\n\n    // We show the whole stack but dedupe on the top component's name because\n    // the problematic code almost always lies inside that component.\n    const componentName = getComponentName(fiber.type) || 'ReactComponent';\n    if (didWarnStateUpdateForNotYetMountedComponent !== null) {\n      if (didWarnStateUpdateForNotYetMountedComponent.has(componentName)) {\n        return;\n      }\n      didWarnStateUpdateForNotYetMountedComponent.add(componentName);\n    } else {\n      didWarnStateUpdateForNotYetMountedComponent = new Set([componentName]);\n    }\n\n    const previousFiber = ReactCurrentFiberCurrent;\n    try {\n      setCurrentDebugFiberInDEV(fiber);\n      console.error(\n        \"Can't perform a React state update on a component that hasn't mounted yet. \" +\n          'This indicates that you have a side-effect in your render function that ' +\n          'asynchronously later calls tries to update the component. Move this work to ' +\n          'useEffect instead.',\n      );\n    } finally {\n      if (previousFiber) {\n        setCurrentDebugFiberInDEV(fiber);\n      } else {\n        resetCurrentDebugFiberInDEV();\n      }\n    }\n  }\n}\n\nlet didWarnStateUpdateForUnmountedComponent: Set<string> | null = null;\nfunction warnAboutUpdateOnUnmountedFiberInDEV(fiber) {\n  if (__DEV__) {\n    const tag = fiber.tag;\n    if (\n      tag !== HostRoot &&\n      tag !== ClassComponent &&\n      tag !== FunctionComponent &&\n      tag !== ForwardRef &&\n      tag !== MemoComponent &&\n      tag !== SimpleMemoComponent &&\n      tag !== Block\n    ) {\n      // Only warn for user-defined components, not internal ones like Suspense.\n      return;\n    }\n\n    // If there are pending passive effects unmounts for this Fiber,\n    // we can assume that they would have prevented this update.\n    if ((fiber.flags & PassiveUnmountPendingDev) !== NoFlags) {\n      return;\n    }\n\n    // We show the whole stack but dedupe on the top component's name because\n    // the problematic code almost always lies inside that component.\n    const componentName = getComponentName(fiber.type) || 'ReactComponent';\n    if (didWarnStateUpdateForUnmountedComponent !== null) {\n      if (didWarnStateUpdateForUnmountedComponent.has(componentName)) {\n        return;\n      }\n      didWarnStateUpdateForUnmountedComponent.add(componentName);\n    } else {\n      didWarnStateUpdateForUnmountedComponent = new Set([componentName]);\n    }\n\n    if (isFlushingPassiveEffects) {\n      // Do not warn if we are currently flushing passive effects!\n      //\n      // React can't directly detect a memory leak, but there are some clues that warn about one.\n      // One of these clues is when an unmounted React component tries to update its state.\n      // For example, if a component forgets to remove an event listener when unmounting,\n      // that listener may be called later and try to update state,\n      // at which point React would warn about the potential leak.\n      //\n      // Warning signals are the most useful when they're strong.\n      // (So we should avoid false positive warnings.)\n      // Updating state from within an effect cleanup function is sometimes a necessary pattern, e.g.:\n      // 1. Updating an ancestor that a component had registered itself with on mount.\n      // 2. Resetting state when a component is hidden after going offscreen.\n    } else {\n      const previousFiber = ReactCurrentFiberCurrent;\n      try {\n        setCurrentDebugFiberInDEV(fiber);\n        console.error(\n          \"Can't perform a React state update on an unmounted component. This \" +\n            'is a no-op, but it indicates a memory leak in your application. To ' +\n            'fix, cancel all subscriptions and asynchronous tasks in %s.',\n          tag === ClassComponent\n            ? 'the componentWillUnmount method'\n            : 'a useEffect cleanup function',\n        );\n      } finally {\n        if (previousFiber) {\n          setCurrentDebugFiberInDEV(fiber);\n        } else {\n          resetCurrentDebugFiberInDEV();\n        }\n      }\n    }\n  }\n}\n\nlet beginWork;\nif (__DEV__ && replayFailedUnitOfWorkWithInvokeGuardedCallback) {\n  const dummyFiber = null;\n  beginWork = (current, unitOfWork, lanes) => {\n    // If a component throws an error, we replay it again in a synchronously\n    // dispatched event, so that the debugger will treat it as an uncaught\n    // error See ReactErrorUtils for more information.\n\n    // Before entering the begin phase, copy the work-in-progress onto a dummy\n    // fiber. If beginWork throws, we'll use this to reset the state.\n    const originalWorkInProgressCopy = assignFiberPropertiesInDEV(\n      dummyFiber,\n      unitOfWork,\n    );\n    try {\n      return originalBeginWork(current, unitOfWork, lanes);\n    } catch (originalError) {\n      if (\n        originalError !== null &&\n        typeof originalError === 'object' &&\n        typeof originalError.then === 'function'\n      ) {\n        // Don't replay promises. Treat everything else like an error.\n        throw originalError;\n      }\n\n      // Keep this code in sync with handleError; any changes here must have\n      // corresponding changes there.\n      resetContextDependencies();\n      resetHooksAfterThrow();\n      // Don't reset current debug fiber, since we're about to work on the\n      // same fiber again.\n\n      // Unwind the failed stack frame\n      unwindInterruptedWork(unitOfWork);\n\n      // Restore the original properties of the fiber.\n      assignFiberPropertiesInDEV(unitOfWork, originalWorkInProgressCopy);\n\n      if (enableProfilerTimer && unitOfWork.mode & ProfileMode) {\n        // Reset the profiler timer.\n        startProfilerTimer(unitOfWork);\n      }\n\n      // Run beginWork again.\n      invokeGuardedCallback(\n        null,\n        originalBeginWork,\n        null,\n        current,\n        unitOfWork,\n        lanes,\n      );\n\n      if (hasCaughtError()) {\n        const replayError = clearCaughtError();\n        // `invokeGuardedCallback` sometimes sets an expando `_suppressLogging`.\n        // Rethrow this error instead of the original one.\n        throw replayError;\n      } else {\n        // This branch is reachable if the render phase is impure.\n        throw originalError;\n      }\n    }\n  };\n} else {\n  beginWork = originalBeginWork;\n}\n\nlet didWarnAboutUpdateInRender = false;\nlet didWarnAboutUpdateInRenderForAnotherComponent;\nif (__DEV__) {\n  didWarnAboutUpdateInRenderForAnotherComponent = new Set();\n}\n\nfunction warnAboutRenderPhaseUpdatesInDEV(fiber) {\n  if (__DEV__) {\n    if (\n      ReactCurrentDebugFiberIsRenderingInDEV &&\n      (executionContext & RenderContext) !== NoContext &&\n      !getIsUpdatingOpaqueValueInRenderPhaseInDEV()\n    ) {\n      switch (fiber.tag) {\n        case FunctionComponent:\n        case ForwardRef:\n        case SimpleMemoComponent: {\n          const renderingComponentName =\n            (workInProgress && getComponentName(workInProgress.type)) ||\n            'Unknown';\n          // Dedupe by the rendering component because it's the one that needs to be fixed.\n          const dedupeKey = renderingComponentName;\n          if (!didWarnAboutUpdateInRenderForAnotherComponent.has(dedupeKey)) {\n            didWarnAboutUpdateInRenderForAnotherComponent.add(dedupeKey);\n            const setStateComponentName =\n              getComponentName(fiber.type) || 'Unknown';\n            console.error(\n              'Cannot update a component (`%s`) while rendering a ' +\n                'different component (`%s`). To locate the bad setState() call inside `%s`, ' +\n                'follow the stack trace as described in https://reactjs.org/link/setstate-in-render',\n              setStateComponentName,\n              renderingComponentName,\n              renderingComponentName,\n            );\n          }\n          break;\n        }\n        case ClassComponent: {\n          if (!didWarnAboutUpdateInRender) {\n            console.error(\n              'Cannot update during an existing state transition (such as ' +\n                'within `render`). Render methods should be a pure ' +\n                'function of props and state.',\n            );\n            didWarnAboutUpdateInRender = true;\n          }\n          break;\n        }\n      }\n    }\n  }\n}\n\n// a 'shared' variable that changes when act() opens/closes in tests.\nexport const IsThisRendererActing = {current: (false: boolean)};\n\nexport function warnIfNotScopedWithMatchingAct(fiber: Fiber): void {\n  if (__DEV__) {\n    if (\n      warnsIfNotActing === true &&\n      IsSomeRendererActing.current === true &&\n      IsThisRendererActing.current !== true\n    ) {\n      const previousFiber = ReactCurrentFiberCurrent;\n      try {\n        setCurrentDebugFiberInDEV(fiber);\n        console.error(\n          \"It looks like you're using the wrong act() around your test interactions.\\n\" +\n            'Be sure to use the matching version of act() corresponding to your renderer:\\n\\n' +\n            '// for react-dom:\\n' +\n            // Break up imports to avoid accidentally parsing them as dependencies.\n            'import {act} fr' +\n            \"om 'react-dom/test-utils';\\n\" +\n            '// ...\\n' +\n            'act(() => ...);\\n\\n' +\n            '// for react-test-renderer:\\n' +\n            // Break up imports to avoid accidentally parsing them as dependencies.\n            'import TestRenderer fr' +\n            \"om react-test-renderer';\\n\" +\n            'const {act} = TestRenderer;\\n' +\n            '// ...\\n' +\n            'act(() => ...);',\n        );\n      } finally {\n        if (previousFiber) {\n          setCurrentDebugFiberInDEV(fiber);\n        } else {\n          resetCurrentDebugFiberInDEV();\n        }\n      }\n    }\n  }\n}\n\nexport function warnIfNotCurrentlyActingEffectsInDEV(fiber: Fiber): void {\n  if (__DEV__) {\n    if (\n      warnsIfNotActing === true &&\n      (fiber.mode & StrictMode) !== NoMode &&\n      IsSomeRendererActing.current === false &&\n      IsThisRendererActing.current === false\n    ) {\n      console.error(\n        'An update to %s ran an effect, but was not wrapped in act(...).\\n\\n' +\n          'When testing, code that causes React state updates should be ' +\n          'wrapped into act(...):\\n\\n' +\n          'act(() => {\\n' +\n          '  /* fire events that update state */\\n' +\n          '});\\n' +\n          '/* assert on the output */\\n\\n' +\n          \"This ensures that you're testing the behavior the user would see \" +\n          'in the browser.' +\n          ' Learn more at https://reactjs.org/link/wrap-tests-with-act',\n        getComponentName(fiber.type),\n      );\n    }\n  }\n}\n\nfunction warnIfNotCurrentlyActingUpdatesInDEV(fiber: Fiber): void {\n  if (__DEV__) {\n    if (\n      warnsIfNotActing === true &&\n      executionContext === NoContext &&\n      IsSomeRendererActing.current === false &&\n      IsThisRendererActing.current === false\n    ) {\n      const previousFiber = ReactCurrentFiberCurrent;\n      try {\n        setCurrentDebugFiberInDEV(fiber);\n        console.error(\n          'An update to %s inside a test was not wrapped in act(...).\\n\\n' +\n            'When testing, code that causes React state updates should be ' +\n            'wrapped into act(...):\\n\\n' +\n            'act(() => {\\n' +\n            '  /* fire events that update state */\\n' +\n            '});\\n' +\n            '/* assert on the output */\\n\\n' +\n            \"This ensures that you're testing the behavior the user would see \" +\n            'in the browser.' +\n            ' Learn more at https://reactjs.org/link/wrap-tests-with-act',\n          getComponentName(fiber.type),\n        );\n      } finally {\n        if (previousFiber) {\n          setCurrentDebugFiberInDEV(fiber);\n        } else {\n          resetCurrentDebugFiberInDEV();\n        }\n      }\n    }\n  }\n}\n\nexport const warnIfNotCurrentlyActingUpdatesInDev = warnIfNotCurrentlyActingUpdatesInDEV;\n\n// In tests, we want to enforce a mocked scheduler.\nlet didWarnAboutUnmockedScheduler = false;\n// TODO Before we release concurrent mode, revisit this and decide whether a mocked\n// scheduler is the actual recommendation. The alternative could be a testing build,\n// a new lib, or whatever; we dunno just yet. This message is for early adopters\n// to get their tests right.\n\nexport function warnIfUnmockedScheduler(fiber: Fiber) {\n  if (__DEV__) {\n    if (\n      didWarnAboutUnmockedScheduler === false &&\n      Scheduler.unstable_flushAllWithoutAsserting === undefined\n    ) {\n      if (fiber.mode & BlockingMode || fiber.mode & ConcurrentMode) {\n        didWarnAboutUnmockedScheduler = true;\n        console.error(\n          'In Concurrent or Sync modes, the \"scheduler\" module needs to be mocked ' +\n            'to guarantee consistent behaviour across tests and browsers. ' +\n            'For example, with jest: \\n' +\n            // Break up requires to avoid accidentally parsing them as dependencies.\n            \"jest.mock('scheduler', () => require\" +\n            \"('scheduler/unstable_mock'));\\n\\n\" +\n            'For more info, visit https://reactjs.org/link/mock-scheduler',\n        );\n      } else if (warnAboutUnmockedScheduler === true) {\n        didWarnAboutUnmockedScheduler = true;\n        console.error(\n          'Starting from React v18, the \"scheduler\" module will need to be mocked ' +\n            'to guarantee consistent behaviour across tests and browsers. ' +\n            'For example, with jest: \\n' +\n            // Break up requires to avoid accidentally parsing them as dependencies.\n            \"jest.mock('scheduler', () => require\" +\n            \"('scheduler/unstable_mock'));\\n\\n\" +\n            'For more info, visit https://reactjs.org/link/mock-scheduler',\n        );\n      }\n    }\n  }\n}\n\nfunction computeThreadID(root: FiberRoot, lane: Lane | Lanes) {\n  // Interaction threads are unique per root and expiration time.\n  // NOTE: Intentionally unsound cast. All that matters is that it's a number\n  // and it represents a batch of work. Could make a helper function instead,\n  // but meh this is fine for now.\n  return (lane: any) * 1000 + root.interactionThreadID;\n}\n\nexport function markSpawnedWork(lane: Lane | Lanes) {\n  if (!enableSchedulerTracing) {\n    return;\n  }\n  if (spawnedWorkDuringRender === null) {\n    spawnedWorkDuringRender = [lane];\n  } else {\n    spawnedWorkDuringRender.push(lane);\n  }\n}\n\nfunction scheduleInteractions(\n  root: FiberRoot,\n  lane: Lane | Lanes,\n  interactions: Set<Interaction>,\n) {\n  if (!enableSchedulerTracing) {\n    return;\n  }\n\n  if (interactions.size > 0) {\n    const pendingInteractionMap = root.pendingInteractionMap;\n    const pendingInteractions = pendingInteractionMap.get(lane);\n    if (pendingInteractions != null) {\n      interactions.forEach(interaction => {\n        if (!pendingInteractions.has(interaction)) {\n          // Update the pending async work count for previously unscheduled interaction.\n          interaction.__count++;\n        }\n\n        pendingInteractions.add(interaction);\n      });\n    } else {\n      pendingInteractionMap.set(lane, new Set(interactions));\n\n      // Update the pending async work count for the current interactions.\n      interactions.forEach(interaction => {\n        interaction.__count++;\n      });\n    }\n\n    const subscriber = __subscriberRef.current;\n    if (subscriber !== null) {\n      const threadID = computeThreadID(root, lane);\n      subscriber.onWorkScheduled(interactions, threadID);\n    }\n  }\n}\n\nfunction schedulePendingInteractions(root: FiberRoot, lane: Lane | Lanes) {\n  // This is called when work is scheduled on a root.\n  // It associates the current interactions with the newly-scheduled expiration.\n  // They will be restored when that expiration is later committed.\n  if (!enableSchedulerTracing) {\n    return;\n  }\n\n  scheduleInteractions(root, lane, __interactionsRef.current);\n}\n\nfunction startWorkOnPendingInteractions(root: FiberRoot, lanes: Lanes) {\n  // This is called when new work is started on a root.\n  if (!enableSchedulerTracing) {\n    return;\n  }\n\n  // Determine which interactions this batch of work currently includes, So that\n  // we can accurately attribute time spent working on it, And so that cascading\n  // work triggered during the render phase will be associated with it.\n  const interactions: Set<Interaction> = new Set();\n  root.pendingInteractionMap.forEach((scheduledInteractions, scheduledLane) => {\n    if (includesSomeLane(lanes, scheduledLane)) {\n      scheduledInteractions.forEach(interaction =>\n        interactions.add(interaction),\n      );\n    }\n  });\n\n  // Store the current set of interactions on the FiberRoot for a few reasons:\n  // We can re-use it in hot functions like performConcurrentWorkOnRoot()\n  // without having to recalculate it. We will also use it in commitWork() to\n  // pass to any Profiler onRender() hooks. This also provides DevTools with a\n  // way to access it when the onCommitRoot() hook is called.\n  root.memoizedInteractions = interactions;\n\n  if (interactions.size > 0) {\n    const subscriber = __subscriberRef.current;\n    if (subscriber !== null) {\n      const threadID = computeThreadID(root, lanes);\n      try {\n        subscriber.onWorkStarted(interactions, threadID);\n      } catch (error) {\n        // If the subscriber throws, rethrow it in a separate task\n        scheduleCallback(ImmediateSchedulerPriority, () => {\n          throw error;\n        });\n      }\n    }\n  }\n}\n\nfunction finishPendingInteractions(root, committedLanes) {\n  if (!enableSchedulerTracing) {\n    return;\n  }\n\n  const remainingLanesAfterCommit = root.pendingLanes;\n\n  let subscriber;\n\n  try {\n    subscriber = __subscriberRef.current;\n    if (subscriber !== null && root.memoizedInteractions.size > 0) {\n      // FIXME: More than one lane can finish in a single commit.\n      const threadID = computeThreadID(root, committedLanes);\n      subscriber.onWorkStopped(root.memoizedInteractions, threadID);\n    }\n  } catch (error) {\n    // If the subscriber throws, rethrow it in a separate task\n    scheduleCallback(ImmediateSchedulerPriority, () => {\n      throw error;\n    });\n  } finally {\n    // Clear completed interactions from the pending Map.\n    // Unless the render was suspended or cascading work was scheduled,\n    // In which case– leave pending interactions until the subsequent render.\n    const pendingInteractionMap = root.pendingInteractionMap;\n    pendingInteractionMap.forEach((scheduledInteractions, lane) => {\n      // Only decrement the pending interaction count if we're done.\n      // If there's still work at the current priority,\n      // That indicates that we are waiting for suspense data.\n      if (!includesSomeLane(remainingLanesAfterCommit, lane)) {\n        pendingInteractionMap.delete(lane);\n\n        scheduledInteractions.forEach(interaction => {\n          interaction.__count--;\n\n          if (subscriber !== null && interaction.__count === 0) {\n            try {\n              subscriber.onInteractionScheduledWorkCompleted(interaction);\n            } catch (error) {\n              // If the subscriber throws, rethrow it in a separate task\n              scheduleCallback(ImmediateSchedulerPriority, () => {\n                throw error;\n              });\n            }\n          }\n        });\n      }\n    });\n  }\n}\n\n// `act` testing API\n//\n// TODO: This is mostly a copy-paste from the legacy `act`, which does not have\n// access to the same internals that we do here. Some trade offs in the\n// implementation no longer make sense.\n\nlet isFlushingAct = false;\nlet isInsideThisAct = false;\n\nfunction shouldForceFlushFallbacksInDEV() {\n  // Never force flush in production. This function should get stripped out.\n  return __DEV__ && actingUpdatesScopeDepth > 0;\n}\n\nconst flushMockScheduler = Scheduler.unstable_flushAllWithoutAsserting;\nconst isSchedulerMocked = typeof flushMockScheduler === 'function';\n\n// Returns whether additional work was scheduled. Caller should keep flushing\n// until there's no work left.\nfunction flushActWork(): boolean {\n  if (flushMockScheduler !== undefined) {\n    const prevIsFlushing = isFlushingAct;\n    isFlushingAct = true;\n    try {\n      return flushMockScheduler();\n    } finally {\n      isFlushingAct = prevIsFlushing;\n    }\n  } else {\n    // No mock scheduler available. However, the only type of pending work is\n    // passive effects, which we control. So we can flush that.\n    const prevIsFlushing = isFlushingAct;\n    isFlushingAct = true;\n    try {\n      let didFlushWork = false;\n      while (flushPassiveEffects()) {\n        didFlushWork = true;\n      }\n      return didFlushWork;\n    } finally {\n      isFlushingAct = prevIsFlushing;\n    }\n  }\n}\n\nfunction flushWorkAndMicroTasks(onDone: (err: ?Error) => void) {\n  try {\n    flushActWork();\n    enqueueTask(() => {\n      if (flushActWork()) {\n        flushWorkAndMicroTasks(onDone);\n      } else {\n        onDone();\n      }\n    });\n  } catch (err) {\n    onDone(err);\n  }\n}\n\n// we track the 'depth' of the act() calls with this counter,\n// so we can tell if any async act() calls try to run in parallel.\n\nlet actingUpdatesScopeDepth = 0;\nlet didWarnAboutUsingActInProd = false;\n\nexport function act(callback: () => Thenable<mixed>): Thenable<void> {\n  if (!__DEV__) {\n    if (didWarnAboutUsingActInProd === false) {\n      didWarnAboutUsingActInProd = true;\n      // eslint-disable-next-line react-internal/no-production-logging\n      console.error(\n        'act(...) is not supported in production builds of React, and might not behave as expected.',\n      );\n    }\n  }\n\n  const previousActingUpdatesScopeDepth = actingUpdatesScopeDepth;\n  actingUpdatesScopeDepth++;\n\n  const previousIsSomeRendererActing = IsSomeRendererActing.current;\n  const previousIsThisRendererActing = IsThisRendererActing.current;\n  const previousIsInsideThisAct = isInsideThisAct;\n  IsSomeRendererActing.current = true;\n  IsThisRendererActing.current = true;\n  isInsideThisAct = true;\n\n  function onDone() {\n    actingUpdatesScopeDepth--;\n    IsSomeRendererActing.current = previousIsSomeRendererActing;\n    IsThisRendererActing.current = previousIsThisRendererActing;\n    isInsideThisAct = previousIsInsideThisAct;\n    if (__DEV__) {\n      if (actingUpdatesScopeDepth > previousActingUpdatesScopeDepth) {\n        // if it's _less than_ previousActingUpdatesScopeDepth, then we can assume the 'other' one has warned\n        console.error(\n          'You seem to have overlapping act() calls, this is not supported. ' +\n            'Be sure to await previous act() calls before making a new one. ',\n        );\n      }\n    }\n  }\n\n  let result;\n  try {\n    result = batchedUpdates(callback);\n  } catch (error) {\n    // on sync errors, we still want to 'cleanup' and decrement actingUpdatesScopeDepth\n    onDone();\n    throw error;\n  }\n\n  if (\n    result !== null &&\n    typeof result === 'object' &&\n    typeof result.then === 'function'\n  ) {\n    // setup a boolean that gets set to true only\n    // once this act() call is await-ed\n    let called = false;\n    if (__DEV__) {\n      if (typeof Promise !== 'undefined') {\n        //eslint-disable-next-line no-undef\n        Promise.resolve()\n          .then(() => {})\n          .then(() => {\n            if (called === false) {\n              console.error(\n                'You called act(async () => ...) without await. ' +\n                  'This could lead to unexpected testing behaviour, interleaving multiple act ' +\n                  'calls and mixing their scopes. You should - await act(async () => ...);',\n              );\n            }\n          });\n      }\n    }\n\n    // in the async case, the returned thenable runs the callback, flushes\n    // effects and  microtasks in a loop until flushPassiveEffects() === false,\n    // and cleans up\n    return {\n      then(resolve, reject) {\n        called = true;\n        result.then(\n          () => {\n            if (\n              actingUpdatesScopeDepth > 1 ||\n              (isSchedulerMocked === true &&\n                previousIsSomeRendererActing === true)\n            ) {\n              onDone();\n              resolve();\n              return;\n            }\n            // we're about to exit the act() scope,\n            // now's the time to flush tasks/effects\n            flushWorkAndMicroTasks((err: ?Error) => {\n              onDone();\n              if (err) {\n                reject(err);\n              } else {\n                resolve();\n              }\n            });\n          },\n          err => {\n            onDone();\n            reject(err);\n          },\n        );\n      },\n    };\n  } else {\n    if (__DEV__) {\n      if (result !== undefined) {\n        console.error(\n          'The callback passed to act(...) function ' +\n            'must return undefined, or a Promise. You returned %s',\n          result,\n        );\n      }\n    }\n\n    // flush effects until none remain, and cleanup\n    try {\n      if (\n        actingUpdatesScopeDepth === 1 &&\n        (isSchedulerMocked === false || previousIsSomeRendererActing === false)\n      ) {\n        // we're about to exit the act() scope,\n        // now's the time to flush effects\n        flushActWork();\n      }\n      onDone();\n    } catch (err) {\n      onDone();\n      throw err;\n    }\n\n    // in the sync case, the returned thenable only warns *if* await-ed\n    return {\n      then(resolve) {\n        if (__DEV__) {\n          console.error(\n            'Do not await the result of calling act(...) with sync logic, it is not a Promise.',\n          );\n        }\n        resolve();\n      },\n    };\n  }\n}\n\nfunction detachFiberAfterEffects(fiber: Fiber): void {\n  fiber.sibling = null;\n  fiber.stateNode = null;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {ReactElement} from 'shared/ReactElementType';\nimport type {Fiber} from './ReactInternalTypes';\nimport type {FiberRoot} from './ReactInternalTypes';\nimport type {Instance} from './ReactFiberHostConfig';\nimport type {ReactNodeList} from 'shared/ReactTypes';\n\nimport {\n  flushSync,\n  scheduleUpdateOnFiber,\n  flushPassiveEffects,\n} from './ReactFiberWorkLoop.old';\nimport {updateContainer} from './ReactFiberReconciler.old';\nimport {emptyContextObject} from './ReactFiberContext.old';\nimport {SyncLane, NoTimestamp} from './ReactFiberLane';\nimport {\n  ClassComponent,\n  FunctionComponent,\n  ForwardRef,\n  HostComponent,\n  HostPortal,\n  HostRoot,\n  MemoComponent,\n  SimpleMemoComponent,\n} from './ReactWorkTags';\nimport {\n  REACT_FORWARD_REF_TYPE,\n  REACT_MEMO_TYPE,\n  REACT_LAZY_TYPE,\n} from 'shared/ReactSymbols';\n\nexport type Family = {|\n  current: any,\n|};\n\nexport type RefreshUpdate = {|\n  staleFamilies: Set<Family>,\n  updatedFamilies: Set<Family>,\n|};\n\n// Resolves type to a family.\ntype RefreshHandler = any => Family | void;\n\n// Used by React Refresh runtime through DevTools Global Hook.\nexport type SetRefreshHandler = (handler: RefreshHandler | null) => void;\nexport type ScheduleRefresh = (root: FiberRoot, update: RefreshUpdate) => void;\nexport type ScheduleRoot = (root: FiberRoot, element: ReactNodeList) => void;\nexport type FindHostInstancesForRefresh = (\n  root: FiberRoot,\n  families: Array<Family>,\n) => Set<Instance>;\n\nlet resolveFamily: RefreshHandler | null = null;\n// $FlowFixMe Flow gets confused by a WeakSet feature check below.\nlet failedBoundaries: WeakSet<Fiber> | null = null;\n\nexport const setRefreshHandler = (handler: RefreshHandler | null): void => {\n  if (__DEV__) {\n    resolveFamily = handler;\n  }\n};\n\nexport function resolveFunctionForHotReloading(type: any): any {\n  if (__DEV__) {\n    if (resolveFamily === null) {\n      // Hot reloading is disabled.\n      return type;\n    }\n    const family = resolveFamily(type);\n    if (family === undefined) {\n      return type;\n    }\n    // Use the latest known implementation.\n    return family.current;\n  } else {\n    return type;\n  }\n}\n\nexport function resolveClassForHotReloading(type: any): any {\n  // No implementation differences.\n  return resolveFunctionForHotReloading(type);\n}\n\nexport function resolveForwardRefForHotReloading(type: any): any {\n  if (__DEV__) {\n    if (resolveFamily === null) {\n      // Hot reloading is disabled.\n      return type;\n    }\n    const family = resolveFamily(type);\n    if (family === undefined) {\n      // Check if we're dealing with a real forwardRef. Don't want to crash early.\n      if (\n        type !== null &&\n        type !== undefined &&\n        typeof type.render === 'function'\n      ) {\n        // ForwardRef is special because its resolved .type is an object,\n        // but it's possible that we only have its inner render function in the map.\n        // If that inner render function is different, we'll build a new forwardRef type.\n        const currentRender = resolveFunctionForHotReloading(type.render);\n        if (type.render !== currentRender) {\n          const syntheticType = {\n            $$typeof: REACT_FORWARD_REF_TYPE,\n            render: currentRender,\n          };\n          if (type.displayName !== undefined) {\n            (syntheticType: any).displayName = type.displayName;\n          }\n          return syntheticType;\n        }\n      }\n      return type;\n    }\n    // Use the latest known implementation.\n    return family.current;\n  } else {\n    return type;\n  }\n}\n\nexport function isCompatibleFamilyForHotReloading(\n  fiber: Fiber,\n  element: ReactElement,\n): boolean {\n  if (__DEV__) {\n    if (resolveFamily === null) {\n      // Hot reloading is disabled.\n      return false;\n    }\n\n    const prevType = fiber.elementType;\n    const nextType = element.type;\n\n    // If we got here, we know types aren't === equal.\n    let needsCompareFamilies = false;\n\n    const $$typeofNextType =\n      typeof nextType === 'object' && nextType !== null\n        ? nextType.$$typeof\n        : null;\n\n    switch (fiber.tag) {\n      case ClassComponent: {\n        if (typeof nextType === 'function') {\n          needsCompareFamilies = true;\n        }\n        break;\n      }\n      case FunctionComponent: {\n        if (typeof nextType === 'function') {\n          needsCompareFamilies = true;\n        } else if ($$typeofNextType === REACT_LAZY_TYPE) {\n          // We don't know the inner type yet.\n          // We're going to assume that the lazy inner type is stable,\n          // and so it is sufficient to avoid reconciling it away.\n          // We're not going to unwrap or actually use the new lazy type.\n          needsCompareFamilies = true;\n        }\n        break;\n      }\n      case ForwardRef: {\n        if ($$typeofNextType === REACT_FORWARD_REF_TYPE) {\n          needsCompareFamilies = true;\n        } else if ($$typeofNextType === REACT_LAZY_TYPE) {\n          needsCompareFamilies = true;\n        }\n        break;\n      }\n      case MemoComponent:\n      case SimpleMemoComponent: {\n        if ($$typeofNextType === REACT_MEMO_TYPE) {\n          // TODO: if it was but can no longer be simple,\n          // we shouldn't set this.\n          needsCompareFamilies = true;\n        } else if ($$typeofNextType === REACT_LAZY_TYPE) {\n          needsCompareFamilies = true;\n        }\n        break;\n      }\n      default:\n        return false;\n    }\n\n    // Check if both types have a family and it's the same one.\n    if (needsCompareFamilies) {\n      // Note: memo() and forwardRef() we'll compare outer rather than inner type.\n      // This means both of them need to be registered to preserve state.\n      // If we unwrapped and compared the inner types for wrappers instead,\n      // then we would risk falsely saying two separate memo(Foo)\n      // calls are equivalent because they wrap the same Foo function.\n      const prevFamily = resolveFamily(prevType);\n      if (prevFamily !== undefined && prevFamily === resolveFamily(nextType)) {\n        return true;\n      }\n    }\n    return false;\n  } else {\n    return false;\n  }\n}\n\nexport function markFailedErrorBoundaryForHotReloading(fiber: Fiber) {\n  if (__DEV__) {\n    if (resolveFamily === null) {\n      // Hot reloading is disabled.\n      return;\n    }\n    if (typeof WeakSet !== 'function') {\n      return;\n    }\n    if (failedBoundaries === null) {\n      failedBoundaries = new WeakSet();\n    }\n    failedBoundaries.add(fiber);\n  }\n}\n\nexport const scheduleRefresh: ScheduleRefresh = (\n  root: FiberRoot,\n  update: RefreshUpdate,\n): void => {\n  if (__DEV__) {\n    if (resolveFamily === null) {\n      // Hot reloading is disabled.\n      return;\n    }\n    const {staleFamilies, updatedFamilies} = update;\n    flushPassiveEffects();\n    flushSync(() => {\n      scheduleFibersWithFamiliesRecursively(\n        root.current,\n        updatedFamilies,\n        staleFamilies,\n      );\n    });\n  }\n};\n\nexport const scheduleRoot: ScheduleRoot = (\n  root: FiberRoot,\n  element: ReactNodeList,\n): void => {\n  if (__DEV__) {\n    if (root.context !== emptyContextObject) {\n      // Super edge case: root has a legacy _renderSubtree context\n      // but we don't know the parentComponent so we can't pass it.\n      // Just ignore. We'll delete this with _renderSubtree code path later.\n      return;\n    }\n    flushPassiveEffects();\n    flushSync(() => {\n      updateContainer(element, root, null, null);\n    });\n  }\n};\n\nfunction scheduleFibersWithFamiliesRecursively(\n  fiber: Fiber,\n  updatedFamilies: Set<Family>,\n  staleFamilies: Set<Family>,\n) {\n  if (__DEV__) {\n    const {alternate, child, sibling, tag, type} = fiber;\n\n    let candidateType = null;\n    switch (tag) {\n      case FunctionComponent:\n      case SimpleMemoComponent:\n      case ClassComponent:\n        candidateType = type;\n        break;\n      case ForwardRef:\n        candidateType = type.render;\n        break;\n      default:\n        break;\n    }\n\n    if (resolveFamily === null) {\n      throw new Error('Expected resolveFamily to be set during hot reload.');\n    }\n\n    let needsRender = false;\n    let needsRemount = false;\n    if (candidateType !== null) {\n      const family = resolveFamily(candidateType);\n      if (family !== undefined) {\n        if (staleFamilies.has(family)) {\n          needsRemount = true;\n        } else if (updatedFamilies.has(family)) {\n          if (tag === ClassComponent) {\n            needsRemount = true;\n          } else {\n            needsRender = true;\n          }\n        }\n      }\n    }\n    if (failedBoundaries !== null) {\n      if (\n        failedBoundaries.has(fiber) ||\n        (alternate !== null && failedBoundaries.has(alternate))\n      ) {\n        needsRemount = true;\n      }\n    }\n\n    if (needsRemount) {\n      fiber._debugNeedsRemount = true;\n    }\n    if (needsRemount || needsRender) {\n      scheduleUpdateOnFiber(fiber, SyncLane, NoTimestamp);\n    }\n    if (child !== null && !needsRemount) {\n      scheduleFibersWithFamiliesRecursively(\n        child,\n        updatedFamilies,\n        staleFamilies,\n      );\n    }\n    if (sibling !== null) {\n      scheduleFibersWithFamiliesRecursively(\n        sibling,\n        updatedFamilies,\n        staleFamilies,\n      );\n    }\n  }\n}\n\nexport const findHostInstancesForRefresh: FindHostInstancesForRefresh = (\n  root: FiberRoot,\n  families: Array<Family>,\n): Set<Instance> => {\n  if (__DEV__) {\n    const hostInstances = new Set();\n    const types = new Set(families.map(family => family.current));\n    findHostInstancesForMatchingFibersRecursively(\n      root.current,\n      types,\n      hostInstances,\n    );\n    return hostInstances;\n  } else {\n    throw new Error(\n      'Did not expect findHostInstancesForRefresh to be called in production.',\n    );\n  }\n};\n\nfunction findHostInstancesForMatchingFibersRecursively(\n  fiber: Fiber,\n  types: Set<any>,\n  hostInstances: Set<Instance>,\n) {\n  if (__DEV__) {\n    const {child, sibling, tag, type} = fiber;\n\n    let candidateType = null;\n    switch (tag) {\n      case FunctionComponent:\n      case SimpleMemoComponent:\n      case ClassComponent:\n        candidateType = type;\n        break;\n      case ForwardRef:\n        candidateType = type.render;\n        break;\n      default:\n        break;\n    }\n\n    let didMatch = false;\n    if (candidateType !== null) {\n      if (types.has(candidateType)) {\n        didMatch = true;\n      }\n    }\n\n    if (didMatch) {\n      // We have a match. This only drills down to the closest host components.\n      // There's no need to search deeper because for the purpose of giving\n      // visual feedback, \"flashing\" outermost parent rectangles is sufficient.\n      findHostInstancesForFiberShallowly(fiber, hostInstances);\n    } else {\n      // If there's no match, maybe there will be one further down in the child tree.\n      if (child !== null) {\n        findHostInstancesForMatchingFibersRecursively(\n          child,\n          types,\n          hostInstances,\n        );\n      }\n    }\n\n    if (sibling !== null) {\n      findHostInstancesForMatchingFibersRecursively(\n        sibling,\n        types,\n        hostInstances,\n      );\n    }\n  }\n}\n\nfunction findHostInstancesForFiberShallowly(\n  fiber: Fiber,\n  hostInstances: Set<Instance>,\n): void {\n  if (__DEV__) {\n    const foundHostInstances = findChildHostInstancesForFiberShallowly(\n      fiber,\n      hostInstances,\n    );\n    if (foundHostInstances) {\n      return;\n    }\n    // If we didn't find any host children, fallback to closest host parent.\n    let node = fiber;\n    while (true) {\n      switch (node.tag) {\n        case HostComponent:\n          hostInstances.add(node.stateNode);\n          return;\n        case HostPortal:\n          hostInstances.add(node.stateNode.containerInfo);\n          return;\n        case HostRoot:\n          hostInstances.add(node.stateNode.containerInfo);\n          return;\n      }\n      if (node.return === null) {\n        throw new Error('Expected to reach root first.');\n      }\n      node = node.return;\n    }\n  }\n}\n\nfunction findChildHostInstancesForFiberShallowly(\n  fiber: Fiber,\n  hostInstances: Set<Instance>,\n): boolean {\n  if (__DEV__) {\n    let node: Fiber = fiber;\n    let foundHostInstances = false;\n    while (true) {\n      if (node.tag === HostComponent) {\n        // We got a match.\n        foundHostInstances = true;\n        hostInstances.add(node.stateNode);\n        // There may still be more, so keep searching.\n      } else if (node.child !== null) {\n        node.child.return = node;\n        node = node.child;\n        continue;\n      }\n      if (node === fiber) {\n        return foundHostInstances;\n      }\n      while (node.sibling === null) {\n        if (node.return === null || node.return === fiber) {\n          return foundHostInstances;\n        }\n        node = node.return;\n      }\n      node.sibling.return = node.return;\n      node = node.sibling;\n    }\n  }\n  return false;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {ReactElement} from 'shared/ReactElementType';\nimport type {\n  ReactFragment,\n  ReactPortal,\n  ReactFundamentalComponent,\n  ReactScope,\n} from 'shared/ReactTypes';\nimport type {Fiber} from './ReactInternalTypes';\nimport type {RootTag} from './ReactRootTags';\nimport type {WorkTag} from './ReactWorkTags';\nimport type {TypeOfMode} from './ReactTypeOfMode';\nimport type {Lanes} from './ReactFiberLane';\nimport type {SuspenseInstance} from './ReactFiberHostConfig';\nimport type {OffscreenProps} from './ReactFiberOffscreenComponent';\n\nimport invariant from 'shared/invariant';\nimport {\n  enableProfilerTimer,\n  enableFundamentalAPI,\n  enableScopeAPI,\n  enableBlocksAPI,\n} from 'shared/ReactFeatureFlags';\nimport {NoFlags, Placement} from './ReactFiberFlags';\nimport {ConcurrentRoot, BlockingRoot} from './ReactRootTags';\nimport {\n  IndeterminateComponent,\n  ClassComponent,\n  HostRoot,\n  HostComponent,\n  HostText,\n  HostPortal,\n  ForwardRef,\n  Fragment,\n  Mode,\n  ContextProvider,\n  ContextConsumer,\n  Profiler,\n  SuspenseComponent,\n  SuspenseListComponent,\n  DehydratedFragment,\n  FunctionComponent,\n  MemoComponent,\n  SimpleMemoComponent,\n  LazyComponent,\n  FundamentalComponent,\n  ScopeComponent,\n  Block,\n  OffscreenComponent,\n  LegacyHiddenComponent,\n} from './ReactWorkTags';\nimport getComponentName from 'shared/getComponentName';\n\nimport {isDevToolsPresent} from './ReactFiberDevToolsHook.old';\nimport {\n  resolveClassForHotReloading,\n  resolveFunctionForHotReloading,\n  resolveForwardRefForHotReloading,\n} from './ReactFiberHotReloading.old';\nimport {NoLanes} from './ReactFiberLane';\nimport {\n  NoMode,\n  ConcurrentMode,\n  DebugTracingMode,\n  ProfileMode,\n  StrictMode,\n  BlockingMode,\n} from './ReactTypeOfMode';\nimport {\n  REACT_FORWARD_REF_TYPE,\n  REACT_FRAGMENT_TYPE,\n  REACT_DEBUG_TRACING_MODE_TYPE,\n  REACT_STRICT_MODE_TYPE,\n  REACT_PROFILER_TYPE,\n  REACT_PROVIDER_TYPE,\n  REACT_CONTEXT_TYPE,\n  REACT_SUSPENSE_TYPE,\n  REACT_SUSPENSE_LIST_TYPE,\n  REACT_MEMO_TYPE,\n  REACT_LAZY_TYPE,\n  REACT_FUNDAMENTAL_TYPE,\n  REACT_SCOPE_TYPE,\n  REACT_BLOCK_TYPE,\n  REACT_OFFSCREEN_TYPE,\n  REACT_LEGACY_HIDDEN_TYPE,\n} from 'shared/ReactSymbols';\n\nexport type {Fiber};\n\nlet hasBadMapPolyfill;\n\nif (__DEV__) {\n  hasBadMapPolyfill = false;\n  try {\n    const nonExtensibleObject = Object.preventExtensions({});\n    /* eslint-disable no-new */\n    new Map([[nonExtensibleObject, null]]);\n    new Set([nonExtensibleObject]);\n    /* eslint-enable no-new */\n  } catch (e) {\n    // TODO: Consider warning about bad polyfills\n    hasBadMapPolyfill = true;\n  }\n}\n\nlet debugCounter = 1;\n\nfunction FiberNode(\n  tag: WorkTag,\n  pendingProps: mixed,\n  key: null | string,\n  mode: TypeOfMode,\n) {\n  // Instance\n  this.tag = tag;\n  this.key = key;\n  this.elementType = null;\n  this.type = null;\n  this.stateNode = null;\n\n  // Fiber\n  this.return = null;\n  this.child = null;\n  this.sibling = null;\n  this.index = 0;\n\n  this.ref = null;\n\n  this.pendingProps = pendingProps;\n  this.memoizedProps = null;\n  this.updateQueue = null;\n  this.memoizedState = null;\n  this.dependencies = null;\n\n  this.mode = mode;\n\n  // Effects\n  this.flags = NoFlags;\n  this.nextEffect = null;\n\n  this.firstEffect = null;\n  this.lastEffect = null;\n\n  this.lanes = NoLanes;\n  this.childLanes = NoLanes;\n\n  this.alternate = null;\n\n  if (enableProfilerTimer) {\n    // Note: The following is done to avoid a v8 performance cliff.\n    //\n    // Initializing the fields below to smis and later updating them with\n    // double values will cause Fibers to end up having separate shapes.\n    // This behavior/bug has something to do with Object.preventExtension().\n    // Fortunately this only impacts DEV builds.\n    // Unfortunately it makes React unusably slow for some applications.\n    // To work around this, initialize the fields below with doubles.\n    //\n    // Learn more about this here:\n    // https://github.com/facebook/react/issues/14365\n    // https://bugs.chromium.org/p/v8/issues/detail?id=8538\n    this.actualDuration = Number.NaN;\n    this.actualStartTime = Number.NaN;\n    this.selfBaseDuration = Number.NaN;\n    this.treeBaseDuration = Number.NaN;\n\n    // It's okay to replace the initial doubles with smis after initialization.\n    // This won't trigger the performance cliff mentioned above,\n    // and it simplifies other profiler code (including DevTools).\n    this.actualDuration = 0;\n    this.actualStartTime = -1;\n    this.selfBaseDuration = 0;\n    this.treeBaseDuration = 0;\n  }\n\n  if (__DEV__) {\n    // This isn't directly used but is handy for debugging internals:\n    this._debugID = debugCounter++;\n    this._debugSource = null;\n    this._debugOwner = null;\n    this._debugNeedsRemount = false;\n    this._debugHookTypes = null;\n    if (!hasBadMapPolyfill && typeof Object.preventExtensions === 'function') {\n      Object.preventExtensions(this);\n    }\n  }\n}\n\n// This is a constructor function, rather than a POJO constructor, still\n// please ensure we do the following:\n// 1) Nobody should add any instance methods on this. Instance methods can be\n//    more difficult to predict when they get optimized and they are almost\n//    never inlined properly in static compilers.\n// 2) Nobody should rely on `instanceof Fiber` for type testing. We should\n//    always know when it is a fiber.\n// 3) We might want to experiment with using numeric keys since they are easier\n//    to optimize in a non-JIT environment.\n// 4) We can easily go from a constructor to a createFiber object literal if that\n//    is faster.\n// 5) It should be easy to port this to a C struct and keep a C implementation\n//    compatible.\nconst createFiber = function(\n  tag: WorkTag,\n  pendingProps: mixed,\n  key: null | string,\n  mode: TypeOfMode,\n): Fiber {\n  // $FlowFixMe: the shapes are exact here but Flow doesn't like constructors\n  return new FiberNode(tag, pendingProps, key, mode);\n};\n\nfunction shouldConstruct(Component: Function) {\n  const prototype = Component.prototype;\n  return !!(prototype && prototype.isReactComponent);\n}\n\nexport function isSimpleFunctionComponent(type: any) {\n  return (\n    typeof type === 'function' &&\n    !shouldConstruct(type) &&\n    type.defaultProps === undefined\n  );\n}\n\nexport function resolveLazyComponentTag(Component: Function): WorkTag {\n  if (typeof Component === 'function') {\n    return shouldConstruct(Component) ? ClassComponent : FunctionComponent;\n  } else if (Component !== undefined && Component !== null) {\n    const $$typeof = Component.$$typeof;\n    if ($$typeof === REACT_FORWARD_REF_TYPE) {\n      return ForwardRef;\n    }\n    if ($$typeof === REACT_MEMO_TYPE) {\n      return MemoComponent;\n    }\n    if (enableBlocksAPI) {\n      if ($$typeof === REACT_BLOCK_TYPE) {\n        return Block;\n      }\n    }\n  }\n  return IndeterminateComponent;\n}\n\n// This is used to create an alternate fiber to do work on.\nexport function createWorkInProgress(current: Fiber, pendingProps: any): Fiber {\n  let workInProgress = current.alternate;\n  if (workInProgress === null) {\n    // We use a double buffering pooling technique because we know that we'll\n    // only ever need at most two versions of a tree. We pool the \"other\" unused\n    // node that we're free to reuse. This is lazily created to avoid allocating\n    // extra objects for things that are never updated. It also allow us to\n    // reclaim the extra memory if needed.\n    workInProgress = createFiber(\n      current.tag,\n      pendingProps,\n      current.key,\n      current.mode,\n    );\n    workInProgress.elementType = current.elementType;\n    workInProgress.type = current.type;\n    workInProgress.stateNode = current.stateNode;\n\n    if (__DEV__) {\n      // DEV-only fields\n      workInProgress._debugID = current._debugID;\n      workInProgress._debugSource = current._debugSource;\n      workInProgress._debugOwner = current._debugOwner;\n      workInProgress._debugHookTypes = current._debugHookTypes;\n    }\n\n    workInProgress.alternate = current;\n    current.alternate = workInProgress;\n  } else {\n    workInProgress.pendingProps = pendingProps;\n    // Needed because Blocks store data on type.\n    workInProgress.type = current.type;\n\n    // We already have an alternate.\n    // Reset the effect tag.\n    workInProgress.flags = NoFlags;\n\n    // The effect list is no longer valid.\n    workInProgress.nextEffect = null;\n    workInProgress.firstEffect = null;\n    workInProgress.lastEffect = null;\n\n    if (enableProfilerTimer) {\n      // We intentionally reset, rather than copy, actualDuration & actualStartTime.\n      // This prevents time from endlessly accumulating in new commits.\n      // This has the downside of resetting values for different priority renders,\n      // But works for yielding (the common case) and should support resuming.\n      workInProgress.actualDuration = 0;\n      workInProgress.actualStartTime = -1;\n    }\n  }\n\n  workInProgress.childLanes = current.childLanes;\n  workInProgress.lanes = current.lanes;\n\n  workInProgress.child = current.child;\n  workInProgress.memoizedProps = current.memoizedProps;\n  workInProgress.memoizedState = current.memoizedState;\n  workInProgress.updateQueue = current.updateQueue;\n\n  // Clone the dependencies object. This is mutated during the render phase, so\n  // it cannot be shared with the current fiber.\n  const currentDependencies = current.dependencies;\n  workInProgress.dependencies =\n    currentDependencies === null\n      ? null\n      : {\n          lanes: currentDependencies.lanes,\n          firstContext: currentDependencies.firstContext,\n        };\n\n  // These will be overridden during the parent's reconciliation\n  workInProgress.sibling = current.sibling;\n  workInProgress.index = current.index;\n  workInProgress.ref = current.ref;\n\n  if (enableProfilerTimer) {\n    workInProgress.selfBaseDuration = current.selfBaseDuration;\n    workInProgress.treeBaseDuration = current.treeBaseDuration;\n  }\n\n  if (__DEV__) {\n    workInProgress._debugNeedsRemount = current._debugNeedsRemount;\n    switch (workInProgress.tag) {\n      case IndeterminateComponent:\n      case FunctionComponent:\n      case SimpleMemoComponent:\n        workInProgress.type = resolveFunctionForHotReloading(current.type);\n        break;\n      case ClassComponent:\n        workInProgress.type = resolveClassForHotReloading(current.type);\n        break;\n      case ForwardRef:\n        workInProgress.type = resolveForwardRefForHotReloading(current.type);\n        break;\n      default:\n        break;\n    }\n  }\n\n  return workInProgress;\n}\n\n// Used to reuse a Fiber for a second pass.\nexport function resetWorkInProgress(workInProgress: Fiber, renderLanes: Lanes) {\n  // This resets the Fiber to what createFiber or createWorkInProgress would\n  // have set the values to before during the first pass. Ideally this wouldn't\n  // be necessary but unfortunately many code paths reads from the workInProgress\n  // when they should be reading from current and writing to workInProgress.\n\n  // We assume pendingProps, index, key, ref, return are still untouched to\n  // avoid doing another reconciliation.\n\n  // Reset the effect tag but keep any Placement tags, since that's something\n  // that child fiber is setting, not the reconciliation.\n  workInProgress.flags &= Placement;\n\n  // The effect list is no longer valid.\n  workInProgress.nextEffect = null;\n  workInProgress.firstEffect = null;\n  workInProgress.lastEffect = null;\n\n  const current = workInProgress.alternate;\n  if (current === null) {\n    // Reset to createFiber's initial values.\n    workInProgress.childLanes = NoLanes;\n    workInProgress.lanes = renderLanes;\n\n    workInProgress.child = null;\n    workInProgress.memoizedProps = null;\n    workInProgress.memoizedState = null;\n    workInProgress.updateQueue = null;\n\n    workInProgress.dependencies = null;\n\n    workInProgress.stateNode = null;\n\n    if (enableProfilerTimer) {\n      // Note: We don't reset the actualTime counts. It's useful to accumulate\n      // actual time across multiple render passes.\n      workInProgress.selfBaseDuration = 0;\n      workInProgress.treeBaseDuration = 0;\n    }\n  } else {\n    // Reset to the cloned values that createWorkInProgress would've.\n    workInProgress.childLanes = current.childLanes;\n    workInProgress.lanes = current.lanes;\n\n    workInProgress.child = current.child;\n    workInProgress.memoizedProps = current.memoizedProps;\n    workInProgress.memoizedState = current.memoizedState;\n    workInProgress.updateQueue = current.updateQueue;\n    // Needed because Blocks store data on type.\n    workInProgress.type = current.type;\n\n    // Clone the dependencies object. This is mutated during the render phase, so\n    // it cannot be shared with the current fiber.\n    const currentDependencies = current.dependencies;\n    workInProgress.dependencies =\n      currentDependencies === null\n        ? null\n        : {\n            lanes: currentDependencies.lanes,\n            firstContext: currentDependencies.firstContext,\n          };\n\n    if (enableProfilerTimer) {\n      // Note: We don't reset the actualTime counts. It's useful to accumulate\n      // actual time across multiple render passes.\n      workInProgress.selfBaseDuration = current.selfBaseDuration;\n      workInProgress.treeBaseDuration = current.treeBaseDuration;\n    }\n  }\n\n  return workInProgress;\n}\n\nexport function createHostRootFiber(tag: RootTag): Fiber {\n  let mode;\n  if (tag === ConcurrentRoot) {\n    mode = ConcurrentMode | BlockingMode | StrictMode;\n  } else if (tag === BlockingRoot) {\n    mode = BlockingMode | StrictMode;\n  } else {\n    mode = NoMode;\n  }\n\n  if (enableProfilerTimer && isDevToolsPresent) {\n    // Always collect profile timings when DevTools are present.\n    // This enables DevTools to start capturing timing at any point–\n    // Without some nodes in the tree having empty base times.\n    mode |= ProfileMode;\n  }\n\n  return createFiber(HostRoot, null, null, mode);\n}\n\nexport function createFiberFromTypeAndProps(\n  type: any, // React$ElementType\n  key: null | string,\n  pendingProps: any,\n  owner: null | Fiber,\n  mode: TypeOfMode,\n  lanes: Lanes,\n): Fiber {\n  let fiberTag = IndeterminateComponent;\n  // The resolved type is set if we know what the final type will be. I.e. it's not lazy.\n  let resolvedType = type;\n  if (typeof type === 'function') {\n    if (shouldConstruct(type)) {\n      fiberTag = ClassComponent;\n      if (__DEV__) {\n        resolvedType = resolveClassForHotReloading(resolvedType);\n      }\n    } else {\n      if (__DEV__) {\n        resolvedType = resolveFunctionForHotReloading(resolvedType);\n      }\n    }\n  } else if (typeof type === 'string') {\n    fiberTag = HostComponent;\n  } else {\n    getTag: switch (type) {\n      case REACT_FRAGMENT_TYPE:\n        return createFiberFromFragment(pendingProps.children, mode, lanes, key);\n      case REACT_DEBUG_TRACING_MODE_TYPE:\n        fiberTag = Mode;\n        mode |= DebugTracingMode;\n        break;\n      case REACT_STRICT_MODE_TYPE:\n        fiberTag = Mode;\n        mode |= StrictMode;\n        break;\n      case REACT_PROFILER_TYPE:\n        return createFiberFromProfiler(pendingProps, mode, lanes, key);\n      case REACT_SUSPENSE_TYPE:\n        return createFiberFromSuspense(pendingProps, mode, lanes, key);\n      case REACT_SUSPENSE_LIST_TYPE:\n        return createFiberFromSuspenseList(pendingProps, mode, lanes, key);\n      case REACT_OFFSCREEN_TYPE:\n        return createFiberFromOffscreen(pendingProps, mode, lanes, key);\n      case REACT_LEGACY_HIDDEN_TYPE:\n        return createFiberFromLegacyHidden(pendingProps, mode, lanes, key);\n      case REACT_SCOPE_TYPE:\n        if (enableScopeAPI) {\n          return createFiberFromScope(type, pendingProps, mode, lanes, key);\n        }\n      // eslint-disable-next-line no-fallthrough\n      default: {\n        if (typeof type === 'object' && type !== null) {\n          switch (type.$$typeof) {\n            case REACT_PROVIDER_TYPE:\n              fiberTag = ContextProvider;\n              break getTag;\n            case REACT_CONTEXT_TYPE:\n              // This is a consumer\n              fiberTag = ContextConsumer;\n              break getTag;\n            case REACT_FORWARD_REF_TYPE:\n              fiberTag = ForwardRef;\n              if (__DEV__) {\n                resolvedType = resolveForwardRefForHotReloading(resolvedType);\n              }\n              break getTag;\n            case REACT_MEMO_TYPE:\n              fiberTag = MemoComponent;\n              break getTag;\n            case REACT_LAZY_TYPE:\n              fiberTag = LazyComponent;\n              resolvedType = null;\n              break getTag;\n            case REACT_BLOCK_TYPE:\n              fiberTag = Block;\n              break getTag;\n            case REACT_FUNDAMENTAL_TYPE:\n              if (enableFundamentalAPI) {\n                return createFiberFromFundamental(\n                  type,\n                  pendingProps,\n                  mode,\n                  lanes,\n                  key,\n                );\n              }\n              break;\n          }\n        }\n        let info = '';\n        if (__DEV__) {\n          if (\n            type === undefined ||\n            (typeof type === 'object' &&\n              type !== null &&\n              Object.keys(type).length === 0)\n          ) {\n            info +=\n              ' You likely forgot to export your component from the file ' +\n              \"it's defined in, or you might have mixed up default and \" +\n              'named imports.';\n          }\n          const ownerName = owner ? getComponentName(owner.type) : null;\n          if (ownerName) {\n            info += '\\n\\nCheck the render method of `' + ownerName + '`.';\n          }\n        }\n        invariant(\n          false,\n          'Element type is invalid: expected a string (for built-in ' +\n            'components) or a class/function (for composite components) ' +\n            'but got: %s.%s',\n          type == null ? type : typeof type,\n          info,\n        );\n      }\n    }\n  }\n\n  const fiber = createFiber(fiberTag, pendingProps, key, mode);\n  fiber.elementType = type;\n  fiber.type = resolvedType;\n  fiber.lanes = lanes;\n\n  if (__DEV__) {\n    fiber._debugOwner = owner;\n  }\n\n  return fiber;\n}\n\nexport function createFiberFromElement(\n  element: ReactElement,\n  mode: TypeOfMode,\n  lanes: Lanes,\n): Fiber {\n  let owner = null;\n  if (__DEV__) {\n    owner = element._owner;\n  }\n  const type = element.type;\n  const key = element.key;\n  const pendingProps = element.props;\n  const fiber = createFiberFromTypeAndProps(\n    type,\n    key,\n    pendingProps,\n    owner,\n    mode,\n    lanes,\n  );\n  if (__DEV__) {\n    fiber._debugSource = element._source;\n    fiber._debugOwner = element._owner;\n  }\n  return fiber;\n}\n\nexport function createFiberFromFragment(\n  elements: ReactFragment,\n  mode: TypeOfMode,\n  lanes: Lanes,\n  key: null | string,\n): Fiber {\n  const fiber = createFiber(Fragment, elements, key, mode);\n  fiber.lanes = lanes;\n  return fiber;\n}\n\nexport function createFiberFromFundamental(\n  fundamentalComponent: ReactFundamentalComponent<any, any>,\n  pendingProps: any,\n  mode: TypeOfMode,\n  lanes: Lanes,\n  key: null | string,\n): Fiber {\n  const fiber = createFiber(FundamentalComponent, pendingProps, key, mode);\n  fiber.elementType = fundamentalComponent;\n  fiber.type = fundamentalComponent;\n  fiber.lanes = lanes;\n  return fiber;\n}\n\nfunction createFiberFromScope(\n  scope: ReactScope,\n  pendingProps: any,\n  mode: TypeOfMode,\n  lanes: Lanes,\n  key: null | string,\n) {\n  const fiber = createFiber(ScopeComponent, pendingProps, key, mode);\n  fiber.type = scope;\n  fiber.elementType = scope;\n  fiber.lanes = lanes;\n  return fiber;\n}\n\nfunction createFiberFromProfiler(\n  pendingProps: any,\n  mode: TypeOfMode,\n  lanes: Lanes,\n  key: null | string,\n): Fiber {\n  if (__DEV__) {\n    if (typeof pendingProps.id !== 'string') {\n      console.error('Profiler must specify an \"id\" as a prop');\n    }\n  }\n\n  const fiber = createFiber(Profiler, pendingProps, key, mode | ProfileMode);\n  // TODO: The Profiler fiber shouldn't have a type. It has a tag.\n  fiber.elementType = REACT_PROFILER_TYPE;\n  fiber.type = REACT_PROFILER_TYPE;\n  fiber.lanes = lanes;\n\n  if (enableProfilerTimer) {\n    fiber.stateNode = {\n      effectDuration: 0,\n      passiveEffectDuration: 0,\n    };\n  }\n\n  return fiber;\n}\n\nexport function createFiberFromSuspense(\n  pendingProps: any,\n  mode: TypeOfMode,\n  lanes: Lanes,\n  key: null | string,\n) {\n  const fiber = createFiber(SuspenseComponent, pendingProps, key, mode);\n\n  // TODO: The SuspenseComponent fiber shouldn't have a type. It has a tag.\n  // This needs to be fixed in getComponentName so that it relies on the tag\n  // instead.\n  fiber.type = REACT_SUSPENSE_TYPE;\n  fiber.elementType = REACT_SUSPENSE_TYPE;\n\n  fiber.lanes = lanes;\n  return fiber;\n}\n\nexport function createFiberFromSuspenseList(\n  pendingProps: any,\n  mode: TypeOfMode,\n  lanes: Lanes,\n  key: null | string,\n) {\n  const fiber = createFiber(SuspenseListComponent, pendingProps, key, mode);\n  if (__DEV__) {\n    // TODO: The SuspenseListComponent fiber shouldn't have a type. It has a tag.\n    // This needs to be fixed in getComponentName so that it relies on the tag\n    // instead.\n    fiber.type = REACT_SUSPENSE_LIST_TYPE;\n  }\n  fiber.elementType = REACT_SUSPENSE_LIST_TYPE;\n  fiber.lanes = lanes;\n  return fiber;\n}\n\nexport function createFiberFromOffscreen(\n  pendingProps: OffscreenProps,\n  mode: TypeOfMode,\n  lanes: Lanes,\n  key: null | string,\n) {\n  const fiber = createFiber(OffscreenComponent, pendingProps, key, mode);\n  // TODO: The OffscreenComponent fiber shouldn't have a type. It has a tag.\n  // This needs to be fixed in getComponentName so that it relies on the tag\n  // instead.\n  if (__DEV__) {\n    fiber.type = REACT_OFFSCREEN_TYPE;\n  }\n  fiber.elementType = REACT_OFFSCREEN_TYPE;\n  fiber.lanes = lanes;\n  return fiber;\n}\n\nexport function createFiberFromLegacyHidden(\n  pendingProps: OffscreenProps,\n  mode: TypeOfMode,\n  lanes: Lanes,\n  key: null | string,\n) {\n  const fiber = createFiber(LegacyHiddenComponent, pendingProps, key, mode);\n  // TODO: The LegacyHidden fiber shouldn't have a type. It has a tag.\n  // This needs to be fixed in getComponentName so that it relies on the tag\n  // instead.\n  if (__DEV__) {\n    fiber.type = REACT_LEGACY_HIDDEN_TYPE;\n  }\n  fiber.elementType = REACT_LEGACY_HIDDEN_TYPE;\n  fiber.lanes = lanes;\n  return fiber;\n}\n\nexport function createFiberFromText(\n  content: string,\n  mode: TypeOfMode,\n  lanes: Lanes,\n): Fiber {\n  const fiber = createFiber(HostText, content, null, mode);\n  fiber.lanes = lanes;\n  return fiber;\n}\n\nexport function createFiberFromHostInstanceForDeletion(): Fiber {\n  const fiber = createFiber(HostComponent, null, null, NoMode);\n  // TODO: These should not need a type.\n  fiber.elementType = 'DELETED';\n  fiber.type = 'DELETED';\n  return fiber;\n}\n\nexport function createFiberFromDehydratedFragment(\n  dehydratedNode: SuspenseInstance,\n): Fiber {\n  const fiber = createFiber(DehydratedFragment, null, null, NoMode);\n  fiber.stateNode = dehydratedNode;\n  return fiber;\n}\n\nexport function createFiberFromPortal(\n  portal: ReactPortal,\n  mode: TypeOfMode,\n  lanes: Lanes,\n): Fiber {\n  const pendingProps = portal.children !== null ? portal.children : [];\n  const fiber = createFiber(HostPortal, pendingProps, portal.key, mode);\n  fiber.lanes = lanes;\n  fiber.stateNode = {\n    containerInfo: portal.containerInfo,\n    pendingChildren: null, // Used by persistent updates\n    implementation: portal.implementation,\n  };\n  return fiber;\n}\n\n// Used for stashing WIP properties to replay failed work in DEV.\nexport function assignFiberPropertiesInDEV(\n  target: Fiber | null,\n  source: Fiber,\n): Fiber {\n  if (target === null) {\n    // This Fiber's initial properties will always be overwritten.\n    // We only use a Fiber to ensure the same hidden class so DEV isn't slow.\n    target = createFiber(IndeterminateComponent, null, null, NoMode);\n  }\n\n  // This is intentionally written as a list of all properties.\n  // We tried to use Object.assign() instead but this is called in\n  // the hottest path, and Object.assign() was too slow:\n  // https://github.com/facebook/react/issues/12502\n  // This code is DEV-only so size is not a concern.\n\n  target.tag = source.tag;\n  target.key = source.key;\n  target.elementType = source.elementType;\n  target.type = source.type;\n  target.stateNode = source.stateNode;\n  target.return = source.return;\n  target.child = source.child;\n  target.sibling = source.sibling;\n  target.index = source.index;\n  target.ref = source.ref;\n  target.pendingProps = source.pendingProps;\n  target.memoizedProps = source.memoizedProps;\n  target.updateQueue = source.updateQueue;\n  target.memoizedState = source.memoizedState;\n  target.dependencies = source.dependencies;\n  target.mode = source.mode;\n  target.flags = source.flags;\n  target.nextEffect = source.nextEffect;\n  target.firstEffect = source.firstEffect;\n  target.lastEffect = source.lastEffect;\n  target.lanes = source.lanes;\n  target.childLanes = source.childLanes;\n  target.alternate = source.alternate;\n  if (enableProfilerTimer) {\n    target.actualDuration = source.actualDuration;\n    target.actualStartTime = source.actualStartTime;\n    target.selfBaseDuration = source.selfBaseDuration;\n    target.treeBaseDuration = source.treeBaseDuration;\n  }\n  target._debugID = source._debugID;\n  target._debugSource = source._debugSource;\n  target._debugOwner = source._debugOwner;\n  target._debugNeedsRemount = source._debugNeedsRemount;\n  target._debugHookTypes = source._debugHookTypes;\n  return target;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {FiberRoot, SuspenseHydrationCallbacks} from './ReactInternalTypes';\nimport type {RootTag} from './ReactRootTags';\n\nimport {noTimeout, supportsHydration} from './ReactFiberHostConfig';\nimport {createHostRootFiber} from './ReactFiber.old';\nimport {\n  NoLanes,\n  NoLanePriority,\n  NoTimestamp,\n  createLaneMap,\n} from './ReactFiberLane';\nimport {\n  enableSchedulerTracing,\n  enableSuspenseCallback,\n} from 'shared/ReactFeatureFlags';\nimport {unstable_getThreadID} from 'scheduler/tracing';\nimport {initializeUpdateQueue} from './ReactUpdateQueue.old';\nimport {LegacyRoot, BlockingRoot, ConcurrentRoot} from './ReactRootTags';\n\nfunction FiberRootNode(containerInfo, tag, hydrate) {\n  this.tag = tag;\n  this.containerInfo = containerInfo;\n  this.pendingChildren = null;\n  this.current = null;\n  this.pingCache = null;\n  this.finishedWork = null;\n  this.timeoutHandle = noTimeout;\n  this.context = null;\n  this.pendingContext = null;\n  this.hydrate = hydrate;\n  this.callbackNode = null;\n  this.callbackPriority = NoLanePriority;\n  this.eventTimes = createLaneMap(NoLanes);\n  this.expirationTimes = createLaneMap(NoTimestamp);\n\n  this.pendingLanes = NoLanes;\n  this.suspendedLanes = NoLanes;\n  this.pingedLanes = NoLanes;\n  this.expiredLanes = NoLanes;\n  this.mutableReadLanes = NoLanes;\n  this.finishedLanes = NoLanes;\n\n  this.entangledLanes = NoLanes;\n  this.entanglements = createLaneMap(NoLanes);\n\n  if (supportsHydration) {\n    this.mutableSourceEagerHydrationData = null;\n  }\n\n  if (enableSchedulerTracing) {\n    this.interactionThreadID = unstable_getThreadID();\n    this.memoizedInteractions = new Set();\n    this.pendingInteractionMap = new Map();\n  }\n  if (enableSuspenseCallback) {\n    this.hydrationCallbacks = null;\n  }\n\n  if (__DEV__) {\n    switch (tag) {\n      case BlockingRoot:\n        this._debugRootType = 'createBlockingRoot()';\n        break;\n      case ConcurrentRoot:\n        this._debugRootType = 'createRoot()';\n        break;\n      case LegacyRoot:\n        this._debugRootType = 'createLegacyRoot()';\n        break;\n    }\n  }\n}\n\nexport function createFiberRoot(\n  containerInfo: any,\n  tag: RootTag,\n  hydrate: boolean,\n  hydrationCallbacks: null | SuspenseHydrationCallbacks,\n): FiberRoot {\n  const root: FiberRoot = (new FiberRootNode(containerInfo, tag, hydrate): any);\n  if (enableSuspenseCallback) {\n    root.hydrationCallbacks = hydrationCallbacks;\n  }\n\n  // Cyclic construction. This cheats the type system right now because\n  // stateNode is any.\n  const uninitializedFiber = createHostRootFiber(tag);\n  root.current = uninitializedFiber;\n  uninitializedFiber.stateNode = root;\n\n  initializeUpdateQueue(uninitializedFiber);\n\n  return root;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport {REACT_PORTAL_TYPE} from 'shared/ReactSymbols';\n\nimport type {ReactNodeList, ReactPortal} from 'shared/ReactTypes';\n\nexport function createPortal(\n  children: ReactNodeList,\n  containerInfo: any,\n  // TODO: figure out the API for cross-renderer implementation.\n  implementation: any,\n  key: ?string = null,\n): ReactPortal {\n  return {\n    // This tag allow us to uniquely identify this as a React Portal\n    $$typeof: REACT_PORTAL_TYPE,\n    key: key == null ? null : '' + key,\n    children,\n    containerInfo,\n    implementation,\n  };\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber, SuspenseHydrationCallbacks} from './ReactInternalTypes';\nimport type {FiberRoot} from './ReactInternalTypes';\nimport type {RootTag} from './ReactRootTags';\nimport type {\n  Instance,\n  TextInstance,\n  Container,\n  PublicInstance,\n} from './ReactFiberHostConfig';\nimport type {RendererInspectionConfig} from './ReactFiberHostConfig';\nimport {FundamentalComponent} from './ReactWorkTags';\nimport type {ReactNodeList} from 'shared/ReactTypes';\nimport type {Lane, LanePriority} from './ReactFiberLane';\nimport type {SuspenseState} from './ReactFiberSuspenseComponent.old';\n\nimport {\n  findCurrentHostFiber,\n  findCurrentHostFiberWithNoPortals,\n} from './ReactFiberTreeReflection';\nimport {get as getInstance} from 'shared/ReactInstanceMap';\nimport {\n  HostComponent,\n  ClassComponent,\n  HostRoot,\n  SuspenseComponent,\n} from './ReactWorkTags';\nimport getComponentName from 'shared/getComponentName';\nimport invariant from 'shared/invariant';\nimport {enableSchedulingProfiler} from 'shared/ReactFeatureFlags';\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\nimport {getPublicInstance} from './ReactFiberHostConfig';\nimport {\n  findCurrentUnmaskedContext,\n  processChildContext,\n  emptyContextObject,\n  isContextProvider as isLegacyContextProvider,\n} from './ReactFiberContext.old';\nimport {createFiberRoot} from './ReactFiberRoot.old';\nimport {injectInternals, onScheduleRoot} from './ReactFiberDevToolsHook.old';\nimport {\n  requestEventTime,\n  requestUpdateLane,\n  scheduleUpdateOnFiber,\n  flushRoot,\n  batchedEventUpdates,\n  batchedUpdates,\n  unbatchedUpdates,\n  flushSync,\n  flushControlled,\n  deferredUpdates,\n  discreteUpdates,\n  flushDiscreteUpdates,\n  flushPassiveEffects,\n  warnIfNotScopedWithMatchingAct,\n  warnIfUnmockedScheduler,\n  IsThisRendererActing,\n  act,\n} from './ReactFiberWorkLoop.old';\nimport {createUpdate, enqueueUpdate} from './ReactUpdateQueue.old';\nimport {\n  isRendering as ReactCurrentFiberIsRendering,\n  current as ReactCurrentFiberCurrent,\n  resetCurrentFiber as resetCurrentDebugFiberInDEV,\n  setCurrentFiber as setCurrentDebugFiberInDEV,\n} from './ReactCurrentFiber';\nimport {StrictMode} from './ReactTypeOfMode';\nimport {\n  SyncLane,\n  InputDiscreteHydrationLane,\n  SelectiveHydrationLane,\n  NoTimestamp,\n  getHighestPriorityPendingLanes,\n  higherPriorityLane,\n  getCurrentUpdateLanePriority,\n  setCurrentUpdateLanePriority,\n} from './ReactFiberLane';\nimport {\n  scheduleRefresh,\n  scheduleRoot,\n  setRefreshHandler,\n  findHostInstancesForRefresh,\n} from './ReactFiberHotReloading.old';\nimport {markRenderScheduled} from './SchedulingProfiler';\n\nexport {registerMutableSourceForHydration} from './ReactMutableSource.new';\nexport {createPortal} from './ReactPortal';\nexport {\n  createComponentSelector,\n  createHasPsuedoClassSelector,\n  createRoleSelector,\n  createTestNameSelector,\n  createTextSelector,\n  getFindAllNodesFailureDescription,\n  findAllNodes,\n  findBoundingRects,\n  focusWithin,\n  observeVisibleRects,\n} from './ReactTestSelectors';\n\ntype OpaqueRoot = FiberRoot;\n\n// 0 is PROD, 1 is DEV.\n// Might add PROFILE later.\ntype BundleType = 0 | 1;\n\ntype DevToolsConfig = {|\n  bundleType: BundleType,\n  version: string,\n  rendererPackageName: string,\n  // Note: this actually *does* depend on Fiber internal fields.\n  // Used by \"inspect clicked DOM element\" in React DevTools.\n  findFiberByHostInstance?: (instance: Instance | TextInstance) => Fiber | null,\n  rendererConfig?: RendererInspectionConfig,\n|};\n\nlet didWarnAboutNestedUpdates;\nlet didWarnAboutFindNodeInStrictMode;\n\nif (__DEV__) {\n  didWarnAboutNestedUpdates = false;\n  didWarnAboutFindNodeInStrictMode = {};\n}\n\nfunction getContextForSubtree(\n  parentComponent: ?React$Component<any, any>,\n): Object {\n  if (!parentComponent) {\n    return emptyContextObject;\n  }\n\n  const fiber = getInstance(parentComponent);\n  const parentContext = findCurrentUnmaskedContext(fiber);\n\n  if (fiber.tag === ClassComponent) {\n    const Component = fiber.type;\n    if (isLegacyContextProvider(Component)) {\n      return processChildContext(fiber, Component, parentContext);\n    }\n  }\n\n  return parentContext;\n}\n\nfunction findHostInstance(component: Object): PublicInstance | null {\n  const fiber = getInstance(component);\n  if (fiber === undefined) {\n    if (typeof component.render === 'function') {\n      invariant(false, 'Unable to find node on an unmounted component.');\n    } else {\n      invariant(\n        false,\n        'Argument appears to not be a ReactComponent. Keys: %s',\n        Object.keys(component),\n      );\n    }\n  }\n  const hostFiber = findCurrentHostFiber(fiber);\n  if (hostFiber === null) {\n    return null;\n  }\n  return hostFiber.stateNode;\n}\n\nfunction findHostInstanceWithWarning(\n  component: Object,\n  methodName: string,\n): PublicInstance | null {\n  if (__DEV__) {\n    const fiber = getInstance(component);\n    if (fiber === undefined) {\n      if (typeof component.render === 'function') {\n        invariant(false, 'Unable to find node on an unmounted component.');\n      } else {\n        invariant(\n          false,\n          'Argument appears to not be a ReactComponent. Keys: %s',\n          Object.keys(component),\n        );\n      }\n    }\n    const hostFiber = findCurrentHostFiber(fiber);\n    if (hostFiber === null) {\n      return null;\n    }\n    if (hostFiber.mode & StrictMode) {\n      const componentName = getComponentName(fiber.type) || 'Component';\n      if (!didWarnAboutFindNodeInStrictMode[componentName]) {\n        didWarnAboutFindNodeInStrictMode[componentName] = true;\n\n        const previousFiber = ReactCurrentFiberCurrent;\n        try {\n          setCurrentDebugFiberInDEV(hostFiber);\n          if (fiber.mode & StrictMode) {\n            console.error(\n              '%s is deprecated in StrictMode. ' +\n                '%s was passed an instance of %s which is inside StrictMode. ' +\n                'Instead, add a ref directly to the element you want to reference. ' +\n                'Learn more about using refs safely here: ' +\n                'https://reactjs.org/link/strict-mode-find-node',\n              methodName,\n              methodName,\n              componentName,\n            );\n          } else {\n            console.error(\n              '%s is deprecated in StrictMode. ' +\n                '%s was passed an instance of %s which renders StrictMode children. ' +\n                'Instead, add a ref directly to the element you want to reference. ' +\n                'Learn more about using refs safely here: ' +\n                'https://reactjs.org/link/strict-mode-find-node',\n              methodName,\n              methodName,\n              componentName,\n            );\n          }\n        } finally {\n          // Ideally this should reset to previous but this shouldn't be called in\n          // render and there's another warning for that anyway.\n          if (previousFiber) {\n            setCurrentDebugFiberInDEV(previousFiber);\n          } else {\n            resetCurrentDebugFiberInDEV();\n          }\n        }\n      }\n    }\n    return hostFiber.stateNode;\n  }\n  return findHostInstance(component);\n}\n\nexport function createContainer(\n  containerInfo: Container,\n  tag: RootTag,\n  hydrate: boolean,\n  hydrationCallbacks: null | SuspenseHydrationCallbacks,\n): OpaqueRoot {\n  return createFiberRoot(containerInfo, tag, hydrate, hydrationCallbacks);\n}\n\nexport function updateContainer(\n  element: ReactNodeList,\n  container: OpaqueRoot,\n  parentComponent: ?React$Component<any, any>,\n  callback: ?Function,\n): Lane {\n  if (__DEV__) {\n    onScheduleRoot(container, element);\n  }\n  const current = container.current;\n  const eventTime = requestEventTime();\n  if (__DEV__) {\n    // $FlowExpectedError - jest isn't a global, and isn't recognized outside of tests\n    if ('undefined' !== typeof jest) {\n      warnIfUnmockedScheduler(current);\n      warnIfNotScopedWithMatchingAct(current);\n    }\n  }\n  const lane = requestUpdateLane(current);\n\n  if (enableSchedulingProfiler) {\n    markRenderScheduled(lane);\n  }\n\n  const context = getContextForSubtree(parentComponent);\n  if (container.context === null) {\n    container.context = context;\n  } else {\n    container.pendingContext = context;\n  }\n\n  if (__DEV__) {\n    if (\n      ReactCurrentFiberIsRendering &&\n      ReactCurrentFiberCurrent !== null &&\n      !didWarnAboutNestedUpdates\n    ) {\n      didWarnAboutNestedUpdates = true;\n      console.error(\n        'Render methods should be a pure function of props and state; ' +\n          'triggering nested component updates from render is not allowed. ' +\n          'If necessary, trigger nested updates in componentDidUpdate.\\n\\n' +\n          'Check the render method of %s.',\n        getComponentName(ReactCurrentFiberCurrent.type) || 'Unknown',\n      );\n    }\n  }\n\n  const update = createUpdate(eventTime, lane);\n  // Caution: React DevTools currently depends on this property\n  // being called \"element\".\n  update.payload = {element};\n\n  callback = callback === undefined ? null : callback;\n  if (callback !== null) {\n    if (__DEV__) {\n      if (typeof callback !== 'function') {\n        console.error(\n          'render(...): Expected the last optional `callback` argument to be a ' +\n            'function. Instead received: %s.',\n          callback,\n        );\n      }\n    }\n    update.callback = callback;\n  }\n\n  enqueueUpdate(current, update);\n  scheduleUpdateOnFiber(current, lane, eventTime);\n\n  return lane;\n}\n\nexport {\n  batchedEventUpdates,\n  batchedUpdates,\n  unbatchedUpdates,\n  deferredUpdates,\n  discreteUpdates,\n  flushDiscreteUpdates,\n  flushControlled,\n  flushSync,\n  flushPassiveEffects,\n  IsThisRendererActing,\n  act,\n};\n\nexport function getPublicRootInstance(\n  container: OpaqueRoot,\n): React$Component<any, any> | PublicInstance | null {\n  const containerFiber = container.current;\n  if (!containerFiber.child) {\n    return null;\n  }\n  switch (containerFiber.child.tag) {\n    case HostComponent:\n      return getPublicInstance(containerFiber.child.stateNode);\n    default:\n      return containerFiber.child.stateNode;\n  }\n}\n\nexport function attemptSynchronousHydration(fiber: Fiber): void {\n  switch (fiber.tag) {\n    case HostRoot:\n      const root: FiberRoot = fiber.stateNode;\n      if (root.hydrate) {\n        // Flush the first scheduled \"update\".\n        const lanes = getHighestPriorityPendingLanes(root);\n        flushRoot(root, lanes);\n      }\n      break;\n    case SuspenseComponent:\n      const eventTime = requestEventTime();\n      flushSync(() => scheduleUpdateOnFiber(fiber, SyncLane, eventTime));\n      // If we're still blocked after this, we need to increase\n      // the priority of any promises resolving within this\n      // boundary so that they next attempt also has higher pri.\n      const retryLane = InputDiscreteHydrationLane;\n      markRetryLaneIfNotHydrated(fiber, retryLane);\n      break;\n  }\n}\n\nfunction markRetryLaneImpl(fiber: Fiber, retryLane: Lane) {\n  const suspenseState: null | SuspenseState = fiber.memoizedState;\n  if (suspenseState !== null && suspenseState.dehydrated !== null) {\n    suspenseState.retryLane = higherPriorityLane(\n      suspenseState.retryLane,\n      retryLane,\n    );\n  }\n}\n\n// Increases the priority of thennables when they resolve within this boundary.\nfunction markRetryLaneIfNotHydrated(fiber: Fiber, retryLane: Lane) {\n  markRetryLaneImpl(fiber, retryLane);\n  const alternate = fiber.alternate;\n  if (alternate) {\n    markRetryLaneImpl(alternate, retryLane);\n  }\n}\n\nexport function attemptUserBlockingHydration(fiber: Fiber): void {\n  if (fiber.tag !== SuspenseComponent) {\n    // We ignore HostRoots here because we can't increase\n    // their priority and they should not suspend on I/O,\n    // since you have to wrap anything that might suspend in\n    // Suspense.\n    return;\n  }\n  const eventTime = requestEventTime();\n  const lane = InputDiscreteHydrationLane;\n  scheduleUpdateOnFiber(fiber, lane, eventTime);\n  markRetryLaneIfNotHydrated(fiber, lane);\n}\n\nexport function attemptContinuousHydration(fiber: Fiber): void {\n  if (fiber.tag !== SuspenseComponent) {\n    // We ignore HostRoots here because we can't increase\n    // their priority and they should not suspend on I/O,\n    // since you have to wrap anything that might suspend in\n    // Suspense.\n    return;\n  }\n  const eventTime = requestEventTime();\n  const lane = SelectiveHydrationLane;\n  scheduleUpdateOnFiber(fiber, lane, eventTime);\n  markRetryLaneIfNotHydrated(fiber, lane);\n}\n\nexport function attemptHydrationAtCurrentPriority(fiber: Fiber): void {\n  if (fiber.tag !== SuspenseComponent) {\n    // We ignore HostRoots here because we can't increase\n    // their priority other than synchronously flush it.\n    return;\n  }\n  const eventTime = requestEventTime();\n  const lane = requestUpdateLane(fiber);\n  scheduleUpdateOnFiber(fiber, lane, eventTime);\n  markRetryLaneIfNotHydrated(fiber, lane);\n}\n\nexport function runWithPriority<T>(priority: LanePriority, fn: () => T) {\n  const previousPriority = getCurrentUpdateLanePriority();\n  try {\n    setCurrentUpdateLanePriority(priority);\n    return fn();\n  } finally {\n    setCurrentUpdateLanePriority(previousPriority);\n  }\n}\n\nexport {getCurrentUpdateLanePriority};\n\nexport {findHostInstance};\n\nexport {findHostInstanceWithWarning};\n\nexport function findHostInstanceWithNoPortals(\n  fiber: Fiber,\n): PublicInstance | null {\n  const hostFiber = findCurrentHostFiberWithNoPortals(fiber);\n  if (hostFiber === null) {\n    return null;\n  }\n  if (hostFiber.tag === FundamentalComponent) {\n    return hostFiber.stateNode.instance;\n  }\n  return hostFiber.stateNode;\n}\n\nlet shouldSuspendImpl = fiber => false;\n\nexport function shouldSuspend(fiber: Fiber): boolean {\n  return shouldSuspendImpl(fiber);\n}\n\nlet overrideHookState = null;\nlet overrideHookStateDeletePath = null;\nlet overrideHookStateRenamePath = null;\nlet overrideProps = null;\nlet overridePropsDeletePath = null;\nlet overridePropsRenamePath = null;\nlet scheduleUpdate = null;\nlet setSuspenseHandler = null;\n\nif (__DEV__) {\n  const copyWithDeleteImpl = (\n    obj: Object | Array<any>,\n    path: Array<string | number>,\n    index: number,\n  ) => {\n    const key = path[index];\n    const updated = Array.isArray(obj) ? obj.slice() : {...obj};\n    if (index + 1 === path.length) {\n      if (Array.isArray(updated)) {\n        updated.splice(((key: any): number), 1);\n      } else {\n        delete updated[key];\n      }\n      return updated;\n    }\n    // $FlowFixMe number or string is fine here\n    updated[key] = copyWithDeleteImpl(obj[key], path, index + 1);\n    return updated;\n  };\n\n  const copyWithDelete = (\n    obj: Object | Array<any>,\n    path: Array<string | number>,\n  ): Object | Array<any> => {\n    return copyWithDeleteImpl(obj, path, 0);\n  };\n\n  const copyWithRenameImpl = (\n    obj: Object | Array<any>,\n    oldPath: Array<string | number>,\n    newPath: Array<string | number>,\n    index: number,\n  ) => {\n    const oldKey = oldPath[index];\n    const updated = Array.isArray(obj) ? obj.slice() : {...obj};\n    if (index + 1 === oldPath.length) {\n      const newKey = newPath[index];\n      // $FlowFixMe number or string is fine here\n      updated[newKey] = updated[oldKey];\n      if (Array.isArray(updated)) {\n        updated.splice(((oldKey: any): number), 1);\n      } else {\n        delete updated[oldKey];\n      }\n    } else {\n      // $FlowFixMe number or string is fine here\n      updated[oldKey] = copyWithRenameImpl(\n        // $FlowFixMe number or string is fine here\n        obj[oldKey],\n        oldPath,\n        newPath,\n        index + 1,\n      );\n    }\n    return updated;\n  };\n\n  const copyWithRename = (\n    obj: Object | Array<any>,\n    oldPath: Array<string | number>,\n    newPath: Array<string | number>,\n  ): Object | Array<any> => {\n    if (oldPath.length !== newPath.length) {\n      console.warn('copyWithRename() expects paths of the same length');\n      return;\n    } else {\n      for (let i = 0; i < newPath.length - 1; i++) {\n        if (oldPath[i] !== newPath[i]) {\n          console.warn(\n            'copyWithRename() expects paths to be the same except for the deepest key',\n          );\n          return;\n        }\n      }\n    }\n    return copyWithRenameImpl(obj, oldPath, newPath, 0);\n  };\n\n  const copyWithSetImpl = (\n    obj: Object | Array<any>,\n    path: Array<string | number>,\n    index: number,\n    value: any,\n  ) => {\n    if (index >= path.length) {\n      return value;\n    }\n    const key = path[index];\n    const updated = Array.isArray(obj) ? obj.slice() : {...obj};\n    // $FlowFixMe number or string is fine here\n    updated[key] = copyWithSetImpl(obj[key], path, index + 1, value);\n    return updated;\n  };\n\n  const copyWithSet = (\n    obj: Object | Array<any>,\n    path: Array<string | number>,\n    value: any,\n  ): Object | Array<any> => {\n    return copyWithSetImpl(obj, path, 0, value);\n  };\n\n  const findHook = (fiber: Fiber, id: number) => {\n    // For now, the \"id\" of stateful hooks is just the stateful hook index.\n    // This may change in the future with e.g. nested hooks.\n    let currentHook = fiber.memoizedState;\n    while (currentHook !== null && id > 0) {\n      currentHook = currentHook.next;\n      id--;\n    }\n    return currentHook;\n  };\n\n  // Support DevTools editable values for useState and useReducer.\n  overrideHookState = (\n    fiber: Fiber,\n    id: number,\n    path: Array<string | number>,\n    value: any,\n  ) => {\n    const hook = findHook(fiber, id);\n    if (hook !== null) {\n      const newState = copyWithSet(hook.memoizedState, path, value);\n      hook.memoizedState = newState;\n      hook.baseState = newState;\n\n      // We aren't actually adding an update to the queue,\n      // because there is no update we can add for useReducer hooks that won't trigger an error.\n      // (There's no appropriate action type for DevTools overrides.)\n      // As a result though, React will see the scheduled update as a noop and bailout.\n      // Shallow cloning props works as a workaround for now to bypass the bailout check.\n      fiber.memoizedProps = {...fiber.memoizedProps};\n\n      scheduleUpdateOnFiber(fiber, SyncLane, NoTimestamp);\n    }\n  };\n  overrideHookStateDeletePath = (\n    fiber: Fiber,\n    id: number,\n    path: Array<string | number>,\n  ) => {\n    const hook = findHook(fiber, id);\n    if (hook !== null) {\n      const newState = copyWithDelete(hook.memoizedState, path);\n      hook.memoizedState = newState;\n      hook.baseState = newState;\n\n      // We aren't actually adding an update to the queue,\n      // because there is no update we can add for useReducer hooks that won't trigger an error.\n      // (There's no appropriate action type for DevTools overrides.)\n      // As a result though, React will see the scheduled update as a noop and bailout.\n      // Shallow cloning props works as a workaround for now to bypass the bailout check.\n      fiber.memoizedProps = {...fiber.memoizedProps};\n\n      scheduleUpdateOnFiber(fiber, SyncLane, NoTimestamp);\n    }\n  };\n  overrideHookStateRenamePath = (\n    fiber: Fiber,\n    id: number,\n    oldPath: Array<string | number>,\n    newPath: Array<string | number>,\n  ) => {\n    const hook = findHook(fiber, id);\n    if (hook !== null) {\n      const newState = copyWithRename(hook.memoizedState, oldPath, newPath);\n      hook.memoizedState = newState;\n      hook.baseState = newState;\n\n      // We aren't actually adding an update to the queue,\n      // because there is no update we can add for useReducer hooks that won't trigger an error.\n      // (There's no appropriate action type for DevTools overrides.)\n      // As a result though, React will see the scheduled update as a noop and bailout.\n      // Shallow cloning props works as a workaround for now to bypass the bailout check.\n      fiber.memoizedProps = {...fiber.memoizedProps};\n\n      scheduleUpdateOnFiber(fiber, SyncLane, NoTimestamp);\n    }\n  };\n\n  // Support DevTools props for function components, forwardRef, memo, host components, etc.\n  overrideProps = (fiber: Fiber, path: Array<string | number>, value: any) => {\n    fiber.pendingProps = copyWithSet(fiber.memoizedProps, path, value);\n    if (fiber.alternate) {\n      fiber.alternate.pendingProps = fiber.pendingProps;\n    }\n    scheduleUpdateOnFiber(fiber, SyncLane, NoTimestamp);\n  };\n  overridePropsDeletePath = (fiber: Fiber, path: Array<string | number>) => {\n    fiber.pendingProps = copyWithDelete(fiber.memoizedProps, path);\n    if (fiber.alternate) {\n      fiber.alternate.pendingProps = fiber.pendingProps;\n    }\n    scheduleUpdateOnFiber(fiber, SyncLane, NoTimestamp);\n  };\n  overridePropsRenamePath = (\n    fiber: Fiber,\n    oldPath: Array<string | number>,\n    newPath: Array<string | number>,\n  ) => {\n    fiber.pendingProps = copyWithRename(fiber.memoizedProps, oldPath, newPath);\n    if (fiber.alternate) {\n      fiber.alternate.pendingProps = fiber.pendingProps;\n    }\n    scheduleUpdateOnFiber(fiber, SyncLane, NoTimestamp);\n  };\n\n  scheduleUpdate = (fiber: Fiber) => {\n    scheduleUpdateOnFiber(fiber, SyncLane, NoTimestamp);\n  };\n\n  setSuspenseHandler = (newShouldSuspendImpl: Fiber => boolean) => {\n    shouldSuspendImpl = newShouldSuspendImpl;\n  };\n}\n\nfunction findHostInstanceByFiber(fiber: Fiber): Instance | TextInstance | null {\n  const hostFiber = findCurrentHostFiber(fiber);\n  if (hostFiber === null) {\n    return null;\n  }\n  return hostFiber.stateNode;\n}\n\nfunction emptyFindFiberByHostInstance(\n  instance: Instance | TextInstance,\n): Fiber | null {\n  return null;\n}\n\nfunction getCurrentFiberForDevTools() {\n  return ReactCurrentFiberCurrent;\n}\n\nexport function injectIntoDevTools(devToolsConfig: DevToolsConfig): boolean {\n  const {findFiberByHostInstance} = devToolsConfig;\n  const {ReactCurrentDispatcher} = ReactSharedInternals;\n\n  return injectInternals({\n    bundleType: devToolsConfig.bundleType,\n    version: devToolsConfig.version,\n    rendererPackageName: devToolsConfig.rendererPackageName,\n    rendererConfig: devToolsConfig.rendererConfig,\n    overrideHookState,\n    overrideHookStateDeletePath,\n    overrideHookStateRenamePath,\n    overrideProps,\n    overridePropsDeletePath,\n    overridePropsRenamePath,\n    setSuspenseHandler,\n    scheduleUpdate,\n    currentDispatcherRef: ReactCurrentDispatcher,\n    findHostInstanceByFiber,\n    findFiberByHostInstance:\n      findFiberByHostInstance || emptyFindFiberByHostInstance,\n    // React Refresh\n    findHostInstancesForRefresh: __DEV__ ? findHostInstancesForRefresh : null,\n    scheduleRefresh: __DEV__ ? scheduleRefresh : null,\n    scheduleRoot: __DEV__ ? scheduleRoot : null,\n    setRefreshHandler: __DEV__ ? setRefreshHandler : null,\n    // Enables DevTools to append owner stacks to error messages in DEV mode.\n    getCurrentFiber: __DEV__ ? getCurrentFiberForDevTools : null,\n  });\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from 'react-reconciler/src/ReactInternalTypes';\nimport type {TouchedViewDataAtPoint, InspectorData} from './ReactNativeTypes';\n\nimport {\n  findCurrentHostFiber,\n  findCurrentFiberUsingSlowPath,\n} from 'react-reconciler/src/ReactFiberTreeReflection';\nimport getComponentName from 'shared/getComponentName';\nimport {HostComponent} from 'react-reconciler/src/ReactWorkTags';\nimport invariant from 'shared/invariant';\n// Module provided by RN:\nimport {UIManager} from 'react-native/Libraries/ReactPrivate/ReactNativePrivateInterface';\n\nimport {getClosestInstanceFromNode} from './ReactNativeComponentTree';\n\nconst emptyObject = {};\nif (__DEV__) {\n  Object.freeze(emptyObject);\n}\n\nlet getInspectorDataForViewTag;\nlet getInspectorDataForViewAtPoint;\n\nif (__DEV__) {\n  const traverseOwnerTreeUp = function(hierarchy, instance: any) {\n    if (instance) {\n      hierarchy.unshift(instance);\n      traverseOwnerTreeUp(hierarchy, instance._debugOwner);\n    }\n  };\n\n  const getOwnerHierarchy = function(instance: any) {\n    const hierarchy = [];\n    traverseOwnerTreeUp(hierarchy, instance);\n    return hierarchy;\n  };\n\n  const lastNonHostInstance = function(hierarchy) {\n    for (let i = hierarchy.length - 1; i > 1; i--) {\n      const instance = hierarchy[i];\n\n      if (instance.tag !== HostComponent) {\n        return instance;\n      }\n    }\n    return hierarchy[0];\n  };\n\n  const getHostProps = function(fiber) {\n    const host = findCurrentHostFiber(fiber);\n    if (host) {\n      return host.memoizedProps || emptyObject;\n    }\n    return emptyObject;\n  };\n\n  const getHostNode = function(fiber: Fiber | null, findNodeHandle) {\n    let hostNode;\n    // look for children first for the hostNode\n    // as composite fibers do not have a hostNode\n    while (fiber) {\n      if (fiber.stateNode !== null && fiber.tag === HostComponent) {\n        hostNode = findNodeHandle(fiber.stateNode);\n      }\n      if (hostNode) {\n        return hostNode;\n      }\n      fiber = fiber.child;\n    }\n    return null;\n  };\n\n  const createHierarchy = function(fiberHierarchy) {\n    return fiberHierarchy.map(fiber => ({\n      name: getComponentName(fiber.type),\n      getInspectorData: findNodeHandle => {\n        return {\n          props: getHostProps(fiber),\n          source: fiber._debugSource,\n          measure: callback => {\n            // If this is Fabric, we'll find a ShadowNode and use that to measure.\n            const hostFiber = findCurrentHostFiber(fiber);\n            const shadowNode =\n              hostFiber != null &&\n              hostFiber.stateNode !== null &&\n              hostFiber.stateNode.node;\n\n            if (shadowNode) {\n              nativeFabricUIManager.measure(shadowNode, callback);\n            } else {\n              return UIManager.measure(\n                getHostNode(fiber, findNodeHandle),\n                callback,\n              );\n            }\n          },\n        };\n      },\n    }));\n  };\n\n  const getInspectorDataForInstance = function(closestInstance): InspectorData {\n    // Handle case where user clicks outside of ReactNative\n    if (!closestInstance) {\n      return {\n        hierarchy: [],\n        props: emptyObject,\n        selectedIndex: null,\n        source: null,\n      };\n    }\n\n    const fiber = findCurrentFiberUsingSlowPath(closestInstance);\n    const fiberHierarchy = getOwnerHierarchy(fiber);\n    const instance = lastNonHostInstance(fiberHierarchy);\n    const hierarchy = createHierarchy(fiberHierarchy);\n    const props = getHostProps(instance);\n    const source = instance._debugSource;\n    const selectedIndex = fiberHierarchy.indexOf(instance);\n\n    return {\n      hierarchy,\n      props,\n      selectedIndex,\n      source,\n    };\n  };\n\n  getInspectorDataForViewTag = function(viewTag: number): Object {\n    const closestInstance = getClosestInstanceFromNode(viewTag);\n\n    // Handle case where user clicks outside of ReactNative\n    if (!closestInstance) {\n      return {\n        hierarchy: [],\n        props: emptyObject,\n        selectedIndex: null,\n        source: null,\n      };\n    }\n\n    const fiber = findCurrentFiberUsingSlowPath(closestInstance);\n    const fiberHierarchy = getOwnerHierarchy(fiber);\n    const instance = lastNonHostInstance(fiberHierarchy);\n    const hierarchy = createHierarchy(fiberHierarchy);\n    const props = getHostProps(instance);\n    const source = instance._debugSource;\n    const selectedIndex = fiberHierarchy.indexOf(instance);\n\n    return {\n      hierarchy,\n      props,\n      selectedIndex,\n      source,\n    };\n  };\n\n  getInspectorDataForViewAtPoint = function(\n    findNodeHandle: (componentOrHandle: any) => ?number,\n    inspectedView: Object,\n    locationX: number,\n    locationY: number,\n    callback: (viewData: TouchedViewDataAtPoint) => mixed,\n  ): void {\n    let closestInstance = null;\n\n    if (inspectedView._internalInstanceHandle != null) {\n      // For Fabric we can look up the instance handle directly and measure it.\n      nativeFabricUIManager.findNodeAtPoint(\n        inspectedView._internalInstanceHandle.stateNode.node,\n        locationX,\n        locationY,\n        internalInstanceHandle => {\n          if (internalInstanceHandle == null) {\n            callback({\n              pointerY: locationY,\n              frame: {left: 0, top: 0, width: 0, height: 0},\n              ...getInspectorDataForInstance(closestInstance),\n            });\n          }\n\n          closestInstance =\n            internalInstanceHandle.stateNode.canonical._internalInstanceHandle;\n          nativeFabricUIManager.measure(\n            internalInstanceHandle.stateNode.node,\n            (x, y, width, height, pageX, pageY) => {\n              callback({\n                pointerY: locationY,\n                frame: {left: pageX, top: pageY, width, height},\n                ...getInspectorDataForInstance(closestInstance),\n              });\n            },\n          );\n        },\n      );\n    } else if (inspectedView._internalFiberInstanceHandleDEV != null) {\n      // For Paper we fall back to the old strategy using the React tag.\n      UIManager.findSubviewIn(\n        findNodeHandle(inspectedView),\n        [locationX, locationY],\n        (nativeViewTag, left, top, width, height) => {\n          const inspectorData = getInspectorDataForInstance(\n            getClosestInstanceFromNode(nativeViewTag),\n          );\n          callback({\n            ...inspectorData,\n            pointerY: locationY,\n            frame: {left, top, width, height},\n            touchedViewTag: nativeViewTag,\n          });\n        },\n      );\n    } else {\n      console.error(\n        'getInspectorDataForViewAtPoint expects to receive a host component',\n      );\n\n      return;\n    }\n  };\n} else {\n  getInspectorDataForViewTag = () => {\n    invariant(\n      false,\n      'getInspectorDataForViewTag() is not available in production',\n    );\n  };\n\n  getInspectorDataForViewAtPoint = (\n    findNodeHandle: (componentOrHandle: any) => ?number,\n    inspectedView: Object,\n    locationX: number,\n    locationY: number,\n    callback: (viewData: TouchedViewDataAtPoint) => mixed,\n  ): void => {\n    invariant(\n      false,\n      'getInspectorDataForViewAtPoint() is not available in production.',\n    );\n  };\n}\n\nexport {getInspectorDataForViewAtPoint, getInspectorDataForViewTag};\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {HostComponent} from './ReactNativeTypes';\nimport type {ReactNodeList} from 'shared/ReactTypes';\n\nimport './ReactNativeInjection';\n\nimport {\n  findHostInstance,\n  findHostInstanceWithWarning,\n  batchedUpdates as batchedUpdatesImpl,\n  batchedEventUpdates,\n  discreteUpdates,\n  flushDiscreteUpdates,\n  createContainer,\n  updateContainer,\n  injectIntoDevTools,\n  getPublicRootInstance,\n} from 'react-reconciler/src/ReactFiberReconciler';\n// TODO: direct imports like some-package/src/* are bad. Fix me.\nimport {getStackByFiberInDevAndProd} from 'react-reconciler/src/ReactFiberComponentStack';\nimport {createPortal as createPortalImpl} from 'react-reconciler/src/ReactPortal';\nimport {\n  setBatchingImplementation,\n  batchedUpdates,\n} from './legacy-events/ReactGenericBatching';\nimport ReactVersion from 'shared/ReactVersion';\n// Module provided by RN:\nimport {UIManager} from 'react-native/Libraries/ReactPrivate/ReactNativePrivateInterface';\n\nimport {getClosestInstanceFromNode} from './ReactNativeComponentTree';\nimport {\n  getInspectorDataForViewTag,\n  getInspectorDataForViewAtPoint,\n} from './ReactNativeFiberInspector';\nimport {LegacyRoot} from 'react-reconciler/src/ReactRootTags';\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\nimport getComponentName from 'shared/getComponentName';\n\nconst ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\n\nfunction findHostInstance_DEPRECATED(\n  componentOrHandle: any,\n): ?React$ElementRef<HostComponent<mixed>> {\n  if (__DEV__) {\n    const owner = ReactCurrentOwner.current;\n    if (owner !== null && owner.stateNode !== null) {\n      if (!owner.stateNode._warnedAboutRefsInRender) {\n        console.error(\n          '%s is accessing findNodeHandle inside its render(). ' +\n            'render() should be a pure function of props and state. It should ' +\n            'never access something that requires stale data from the previous ' +\n            'render, such as refs. Move this logic to componentDidMount and ' +\n            'componentDidUpdate instead.',\n          getComponentName(owner.type) || 'A component',\n        );\n      }\n\n      owner.stateNode._warnedAboutRefsInRender = true;\n    }\n  }\n  if (componentOrHandle == null) {\n    return null;\n  }\n  if (componentOrHandle._nativeTag) {\n    return componentOrHandle;\n  }\n  if (componentOrHandle.canonical && componentOrHandle.canonical._nativeTag) {\n    return componentOrHandle.canonical;\n  }\n  let hostInstance;\n  if (__DEV__) {\n    hostInstance = findHostInstanceWithWarning(\n      componentOrHandle,\n      'findHostInstance_DEPRECATED',\n    );\n  } else {\n    hostInstance = findHostInstance(componentOrHandle);\n  }\n\n  if (hostInstance == null) {\n    return hostInstance;\n  }\n  if ((hostInstance: any).canonical) {\n    // Fabric\n    return (hostInstance: any).canonical;\n  }\n  return hostInstance;\n}\n\nfunction findNodeHandle(componentOrHandle: any): ?number {\n  if (__DEV__) {\n    const owner = ReactCurrentOwner.current;\n    if (owner !== null && owner.stateNode !== null) {\n      if (!owner.stateNode._warnedAboutRefsInRender) {\n        console.error(\n          '%s is accessing findNodeHandle inside its render(). ' +\n            'render() should be a pure function of props and state. It should ' +\n            'never access something that requires stale data from the previous ' +\n            'render, such as refs. Move this logic to componentDidMount and ' +\n            'componentDidUpdate instead.',\n          getComponentName(owner.type) || 'A component',\n        );\n      }\n\n      owner.stateNode._warnedAboutRefsInRender = true;\n    }\n  }\n  if (componentOrHandle == null) {\n    return null;\n  }\n  if (typeof componentOrHandle === 'number') {\n    // Already a node handle\n    return componentOrHandle;\n  }\n  if (componentOrHandle._nativeTag) {\n    return componentOrHandle._nativeTag;\n  }\n  if (componentOrHandle.canonical && componentOrHandle.canonical._nativeTag) {\n    return componentOrHandle.canonical._nativeTag;\n  }\n  let hostInstance;\n  if (__DEV__) {\n    hostInstance = findHostInstanceWithWarning(\n      componentOrHandle,\n      'findNodeHandle',\n    );\n  } else {\n    hostInstance = findHostInstance(componentOrHandle);\n  }\n\n  if (hostInstance == null) {\n    return hostInstance;\n  }\n  if ((hostInstance: any).canonical) {\n    // Fabric\n    return (hostInstance: any).canonical._nativeTag;\n  }\n  return hostInstance._nativeTag;\n}\n\nfunction dispatchCommand(handle: any, command: string, args: Array<any>) {\n  if (handle._nativeTag == null) {\n    if (__DEV__) {\n      console.error(\n        \"dispatchCommand was called with a ref that isn't a \" +\n          'native component. Use React.forwardRef to get access to the underlying native component',\n      );\n    }\n    return;\n  }\n\n  if (handle._internalInstanceHandle) {\n    nativeFabricUIManager.dispatchCommand(\n      handle._internalInstanceHandle.stateNode.node,\n      command,\n      args,\n    );\n  } else {\n    UIManager.dispatchViewManagerCommand(handle._nativeTag, command, args);\n  }\n}\n\nfunction render(\n  element: React$Element<any>,\n  containerTag: any,\n  callback: ?Function,\n) {\n  let root = roots.get(containerTag);\n\n  if (!root) {\n    // TODO (bvaughn): If we decide to keep the wrapper component,\n    // We could create a wrapper for containerTag as well to reduce special casing.\n    root = createContainer(containerTag, LegacyRoot, false, null);\n    roots.set(containerTag, root);\n  }\n  updateContainer(element, root, null, callback);\n\n  return getPublicRootInstance(root);\n}\n\nfunction unmountComponentAtNode(containerTag: number) {\n  const root = roots.get(containerTag);\n  if (root) {\n    // TODO: Is it safe to reset this now or should I wait since this unmount could be deferred?\n    updateContainer(null, root, null, () => {\n      roots.delete(containerTag);\n    });\n  }\n}\n\nfunction unmountComponentAtNodeAndRemoveContainer(containerTag: number) {\n  unmountComponentAtNode(containerTag);\n\n  // Call back into native to remove all of the subviews from this container\n  UIManager.removeRootView(containerTag);\n}\n\nfunction createPortal(\n  children: ReactNodeList,\n  containerTag: number,\n  key: ?string = null,\n) {\n  return createPortalImpl(children, containerTag, null, key);\n}\n\nsetBatchingImplementation(\n  batchedUpdatesImpl,\n  discreteUpdates,\n  flushDiscreteUpdates,\n  batchedEventUpdates,\n);\n\nfunction computeComponentStackForErrorReporting(reactTag: number): string {\n  const fiber = getClosestInstanceFromNode(reactTag);\n  if (!fiber) {\n    return '';\n  }\n  return getStackByFiberInDevAndProd(fiber);\n}\n\nconst roots = new Map();\n\nconst Internals = {\n  computeComponentStackForErrorReporting,\n};\n\nexport {\n  // This is needed for implementation details of TouchableNativeFeedback\n  // Remove this once TouchableNativeFeedback doesn't use cloneElement\n  findHostInstance_DEPRECATED,\n  findNodeHandle,\n  dispatchCommand,\n  render,\n  unmountComponentAtNode,\n  unmountComponentAtNodeAndRemoveContainer,\n  createPortal,\n  batchedUpdates as unstable_batchedUpdates,\n  Internals as __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,\n};\n\ninjectIntoDevTools({\n  findFiberByHostInstance: getClosestInstanceFromNode,\n  bundleType: __DEV__ ? 1 : 0,\n  version: ReactVersion,\n  rendererPackageName: 'react-native-renderer',\n  rendererConfig: {\n    getInspectorDataForViewTag: getInspectorDataForViewTag,\n    getInspectorDataForViewAtPoint: getInspectorDataForViewAtPoint.bind(\n      null,\n      findNodeHandle,\n    ),\n  },\n});\n"],"names":["ReactSharedInternals","React","warn","format","args","printWarning","error","level","ReactDebugCurrentFrame","stack","getStackAddendum","concat","argsWithFormat","map","item","unshift","Function","prototype","apply","call","console","invokeGuardedCallbackProd","name","func","context","a","b","c","d","e","f","funcArgs","Array","slice","arguments","onError","invokeGuardedCallbackImpl","window","dispatchEvent","document","createEvent","fakeNode","createElement","invokeGuardedCallbackDev","evt","didCall","didError","windowEvent","event","windowEventDescriptor","Object","getOwnPropertyDescriptor","restoreAfterDispatch","removeEventListener","evtType","callCallback","hasOwnProperty","didSetError","isCrossOriginError","handleWindowError","colno","lineno","defaultPrevented","_suppressLogging","inner","addEventListener","initEvent","defineProperty","Error","hasError","caughtError","hasRethrowError","rethrowError","reporter","invokeGuardedCallback","invokeGuardedCallbackAndCatchFirstError","clearCaughtError","rethrowCaughtError","hasCaughtError","getFiberCurrentPropsFromNode","getInstanceFromNode","getNodeFromInstance","setComponentTree","getFiberCurrentPropsFromNodeImpl","getInstanceFromNodeImpl","getNodeFromInstanceImpl","validateEventDispatches","dispatchListeners","_dispatchListeners","dispatchInstances","_dispatchInstances","listenersIsArr","isArray","listenersLen","length","instancesIsArr","instancesLen","executeDispatch","listener","inst","type","currentTarget","undefined","executeDispatchesInOrder","i","isPropagationStopped","executeDispatchesInOrderStopAtTrueImpl","executeDispatchesInOrderStopAtTrue","ret","executeDirectDispatch","dispatchListener","dispatchInstance","res","hasDispatches","EVENT_POOL_SIZE","EventInterface","target","eventPhase","bubbles","cancelable","timeStamp","Date","now","isTrusted","functionThatReturnsTrue","functionThatReturnsFalse","SyntheticEvent","dispatchConfig","targetInst","nativeEvent","nativeEventTarget","preventDefault","stopPropagation","isDefaultPrevented","_targetInst","Interface","constructor","propName","normalize","returnValue","assign","cancelBubble","persist","isPersistent","destructor","getPooledWarningPropertyDefinition","extend","Super","E","Class","addEventPoolingTo","getVal","set","val","action","isFunction","get","result","configurable","createOrGetPooledEvent","nativeInst","EventConstructor","eventPool","instance","pop","releasePooledEvent","push","getPooled","release","ResponderSyntheticEvent","touchHistory","TOP_TOUCH_START","TOP_TOUCH_MOVE","TOP_TOUCH_END","TOP_TOUCH_CANCEL","TOP_SCROLL","TOP_SELECTION_CHANGE","isStartish","topLevelType","isMoveish","isEndish","startDependencies","moveDependencies","endDependencies","MAX_TOUCH_BANK","touchBank","numberActiveTouches","indexOfSingleActiveTouch","mostRecentTimeStamp","timestampForTouch","touch","timestamp","createTouchRecord","touchActive","startPageX","pageX","startPageY","pageY","startTimeStamp","currentPageX","currentPageY","currentTimeStamp","previousPageX","previousPageY","previousTimeStamp","resetTouchRecord","touchRecord","getTouchIdentifier","identifier","recordTouchStart","recordTouchMove","printTouch","printTouchBank","recordTouchEnd","JSON","stringify","printed","ResponderTouchHistoryStore","recordTouchTrack","changedTouches","forEach","touches","touchTrackToCheck","activeRecord","accumulate","current","next","accumulateInto","forEachAccumulated","arr","cb","scope","FunctionComponent","ClassComponent","IndeterminateComponent","HostRoot","HostPortal","HostComponent","HostText","Fragment","Mode","ContextConsumer","ContextProvider","ForwardRef","Profiler","SuspenseComponent","MemoComponent","SimpleMemoComponent","LazyComponent","IncompleteClassComponent","DehydratedFragment","SuspenseListComponent","FundamentalComponent","ScopeComponent","Block","OffscreenComponent","LegacyHiddenComponent","responderInst","trackedTouchCount","changeResponder","nextResponderInst","blockHostResponder","oldResponderInst","ResponderEventPlugin","GlobalResponderHandler","onChange","eventTypes","startShouldSetResponder","phasedRegistrationNames","bubbled","captured","dependencies","scrollShouldSetResponder","selectionChangeShouldSetResponder","moveShouldSetResponder","responderStart","registrationName","responderMove","responderEnd","responderRelease","responderTerminationRequest","responderGrant","responderReject","responderTerminate","getParent","return","tag","getLowestCommonAncestor","instA","instB","depthA","tempA","depthB","tempB","depth","alternate","isAncestor","traverseTwoPhase","fn","arg","path","getListener","stateNode","props","listenerAtPhase","propagationPhase","accumulateDirectionalDispatches","phase","accumulateDispatches","ignoredDirection","accumulateDirectDispatchesSingle","accumulateDirectDispatches","events","accumulateTwoPhaseDispatchesSingleSkipTarget","parentInst","accumulateTwoPhaseDispatchesSkipTarget","accumulateTwoPhaseDispatchesSingle","accumulateTwoPhaseDispatches","setResponderAndExtractTransfer","shouldSetEventType","bubbleShouldSetFrom","skipOverBubbleShouldSetFrom","shouldSetEvent","wantsResponderInst","extracted","grantEvent","terminationRequestEvent","shouldSwitch","terminateEvent","rejectEvent","canTriggerTransfer","topLevelInst","responderIgnoreScroll","noResponderTouches","activeTouch","_getResponder","extractEvents","eventSystemFlags","isResponderTouchStart","isResponderTouchMove","isResponderTouchEnd","incrementalTouch","gesture","isResponderTerminate","isResponderRelease","finalTouch","finalEvent","injection","injectGlobalResponderHandler","eventPluginOrder","namesToPlugins","recomputePluginOrdering","pluginName","pluginModule","pluginIndex","indexOf","plugins","publishedEvents","eventName","publishEventForPlugin","eventNameDispatchConfigs","phaseName","phasedRegistrationName","publishRegistrationName","registrationNameModules","registrationNameDependencies","lowerCasedName","toLowerCase","possibleRegistrationNames","injectEventPluginOrder","injectedEventPluginOrder","injectEventPluginsByName","injectedNamesToPlugins","isOrderingDirty","customBubblingEventTypes","ReactNativeViewConfigRegistry","customDirectEventTypes","ReactNativeBridgeEventPlugin","bubbleDispatchConfig","directDispatchConfig","ReactNativeEventPluginOrder","instanceCache","Map","instanceProps","precacheFiberNode","hostInst","uncacheFiberNode","delete","getInstanceFromTag","getTagFromInstance","nativeInstance","_nativeTag","canonical","updateFiberProps","batchedUpdatesImpl","bookkeeping","isInsideEventHandler","batchedUpdates","setBatchingImplementation","_batchedUpdatesImpl","_discreteUpdatesImpl","_flushDiscreteUpdatesImpl","_batchedEventUpdatesImpl","discreteUpdatesImpl","eventQueue","executeDispatchesAndRelease","executeDispatchesAndReleaseTopLevel","runEventsInBatch","processingEventQueue","EMPTY_NATIVE_EVENT","touchSubsequence","indices","removeTouchesAtIndices","rippedOut","temp","index","fillAt","j","cur","_receiveRootNodeIDEvent","rootNodeID","nativeEventParam","runExtractedPluginEventsInBatch","extractPluginEvents","legacyPlugins","possiblePlugin","extractedEvents","receiveEvent","receiveTouches","eventTopLevelType","changedIndices","jj","ReactNativeGlobalResponderHandler","from","to","blockNativeResponder","UIManager","setJSResponder","clearJSResponder","RCTEventEmitter","register","key","_reactInternals","value","REACT_ELEMENT_TYPE","REACT_PORTAL_TYPE","REACT_FRAGMENT_TYPE","REACT_STRICT_MODE_TYPE","REACT_PROFILER_TYPE","REACT_PROVIDER_TYPE","REACT_CONTEXT_TYPE","REACT_FORWARD_REF_TYPE","REACT_SUSPENSE_TYPE","REACT_SUSPENSE_LIST_TYPE","REACT_MEMO_TYPE","REACT_LAZY_TYPE","REACT_BLOCK_TYPE","REACT_SERVER_BLOCK_TYPE","REACT_FUNDAMENTAL_TYPE","REACT_SCOPE_TYPE","REACT_OPAQUE_ID_TYPE","REACT_DEBUG_TRACING_MODE_TYPE","REACT_OFFSCREEN_TYPE","REACT_LEGACY_HIDDEN_TYPE","Symbol","for","symbolFor","MAYBE_ITERATOR_SYMBOL","iterator","FAUX_ITERATOR_SYMBOL","getIteratorFn","maybeIterable","maybeIterator","getWrappedName","outerType","innerType","wrapperName","functionName","displayName","getContextName","getComponentName","$$typeof","provider","_context","render","_render","lazyComponent","payload","_payload","init","_init","x","NoFlags","PerformedWork","Placement","Update","PlacementAndUpdate","Deletion","ContentReset","Callback","DidCapture","Ref","Snapshot","Passive","PassiveUnmountPendingDev","Hydrating","HydratingAndUpdate","LifecycleEffectMask","HostEffectMask","Incomplete","ShouldCapture","ForceUpdateForLegacySuspense","enableProfilerTimer","__PROFILE__","enableFundamentalAPI","warnAboutStringRefs","enableNewReconciler","ReactCurrentOwner","getNearestMountedFiber","fiber","node","nearestMounted","nextNode","flags","isFiberMounted","isMounted","component","owner","ownerFiber","_warnedAboutRefsInRender","getInstance","assertIsMounted","findCurrentFiberUsingSlowPath","parentA","parentB","nextParent","child","sibling","didFindChild","findCurrentHostFiber","parent","currentParent","doesFiberContain","parentFiber","childFiber","parentFiberAlternate","emptyObject","removedKeys","removedKeyCount","deepDifferOptions","unsafelyIgnoreFunctions","defaultDiffer","prevProp","nextProp","deepDiffer","restoreDeletedValuesInNestedArray","updatePayload","validAttributes","obj","propKey","attributeConfig","diff","process","nextValue","diffNestedArrayProperty","prevArray","nextArray","minLength","diffNestedProperty","clearNestedProperty","addNestedProperty","diffProperties","flattenStyle","addProperties","clearProperties","prevProps","nextProps","shouldUpdate","create","mountSafeCallback_NOT_REALLY_SAFE","callback","__isMounted","warnForStyleProps","style","ReactNativeFiberHostComponent","viewConfig","internalInstanceHandleDEV","_children","_internalFiberInstanceHandleDEV","blur","TextInputState","blurTextInput","focus","focusTextInput","measure","measureInWindow","measureLayout","relativeToNativeNode","onSuccess","onFail","relativeNode","nativeNode","setNativeProps","nativeProps","updateView","uiViewClassName","shim","isSuspenseInstancePending","isSuspenseInstanceFallback","hydrateTextInstance","getViewConfigForType","UPDATE_SIGNAL","freeze","nextReactTag","allocateTag","recursivelyUncacheFiberNode","appendInitialChild","parentInstance","createInstance","rootContainerInstance","hostContext","internalInstanceHandle","deepFreezeAndThrowOnMutationInDev","createView","createTextInstance","text","isInAParentText","finalizeInitialChildren","nativeTags","setChildren","getRootHostContext","getChildHostContext","parentHostContext","prevIsInAParentText","getPublicInstance","prepareForCommit","containerInfo","prepareUpdate","oldProps","newProps","resetAfterCommit","scheduleTimeout","setTimeout","cancelTimeout","clearTimeout","noTimeout","shouldSetTextContent","appendChild","childTag","children","splice","manageChildren","appendChildToContainer","commitTextUpdate","textInstance","oldText","newText","commitUpdate","updatePayloadTODO","insertBefore","beforeChild","beforeChildIndex","insertInContainerBefore","removeChild","removeChildFromContainer","resetTextContent","hideInstance","display","hideTextInstance","unhideInstance","clearContainer","container","unhideTextInstance","makeClientIdInDEV","warnOnAccessInDEV","preparePortalMount","portalInstance","ReactCurrentDispatcher","describeBuiltInComponentFrame","source","ownerFn","ownerName","__DEV__","describeComponentFrame","componentFrameCache","PossiblyWeakMap","WeakMap","BEFORE_SLASH_RE","sourceInfo","fileName","replace","test","match","pathBeforeSlash","folderName","lineNumber","describeClassComponentFrame","ctor","describeFunctionComponentFrame","describeUnknownElementTypeFrameInDEV","loggedTypeFailures","setCurrentlyValidatingElement","element","_owner","_source","setExtraStackFrame","checkPropTypes","typeSpecs","values","location","componentName","has","bind","typeSpecName","err","ex","message","valueStack","fiberStack","createCursor","defaultValue","cursor","warnedAboutMissingGetChildContext","emptyContextObject","contextStackCursor","didPerformWorkStackCursor","previousContext","getUnmaskedContext","workInProgress","Component","didPushOwnContextIfProvider","isContextProvider","cacheContext","unmaskedContext","maskedContext","__reactInternalMemoizedUnmaskedChildContext","__reactInternalMemoizedMaskedChildContext","getMaskedContext","contextTypes","hasContextChanged","childContextTypes","popContext","popTopLevelContextObject","pushTopLevelContextObject","didChange","processChildContext","parentContext","getChildContext","childContext","contextKey","pushContextProvider","memoizedMergedChildContext","__reactInternalMemoizedMergedChildContext","invalidateContextProvider","mergedContext","findCurrentUnmaskedContext","LegacyRoot","BlockingRoot","ConcurrentRoot","rendererID","injectedHook","hasLoggedError","isDevToolsPresent","__REACT_DEVTOOLS_GLOBAL_HOOK__","injectInternals","internals","hook","isDisabled","supportsFiber","inject","onScheduleRoot","root","onScheduleFiberRoot","onCommitRoot","priorityLevel","onCommitFiberRoot","onCommitUnmount","onCommitFiberUnmount","Scheduler_now","Scheduler","__interactionsRef","ImmediatePriority","UserBlockingPriority","NormalPriority","LowPriority","IdlePriority","NoPriority","initialTimeMs","SyncLanePriority","SyncBatchedLanePriority","InputDiscreteHydrationLanePriority","InputDiscreteLanePriority","InputContinuousHydrationLanePriority","InputContinuousLanePriority","DefaultHydrationLanePriority","DefaultLanePriority","TransitionHydrationPriority","TransitionPriority","RetryLanePriority","SelectiveHydrationLanePriority","IdleHydrationLanePriority","IdleLanePriority","OffscreenLanePriority","NoLanePriority","TotalLanes","NoLanes","NoLane","SyncLane","SyncBatchedLane","InputDiscreteHydrationLane","InputDiscreteLanes","InputContinuousHydrationLane","InputContinuousLanes","DefaultHydrationLane","DefaultLanes","TransitionHydrationLane","TransitionLanes","RetryLanes","SomeRetryLane","SelectiveHydrationLane","NonIdleLanes","IdleHydrationLane","IdleLanes","OffscreenLane","NoTimestamp","return_highestLanePriority","getHighestPriorityLanes","lanes","inputDiscreteLanes","inputContinuousLanes","defaultLanes","transitionLanes","retryLanes","idleLanes","schedulerPriorityToLanePriority","schedulerPriorityLevel","ImmediateSchedulerPriority","UserBlockingSchedulerPriority","NormalSchedulerPriority","LowSchedulerPriority","IdleSchedulerPriority","lanePriorityToSchedulerPriority","lanePriority","NoSchedulerPriority","getNextLanes","wipLanes","pendingLanes","nextLanes","nextLanePriority","expiredLanes","suspendedLanes","pingedLanes","nonIdlePendingLanes","nonIdleUnblockedLanes","nonIdlePingedLanes","unblockedLanes","getEqualOrHigherPriorityLanes","wipLanePriority","entangledLanes","entanglements","pickArbitraryLaneIndex","lane","getMostRecentEventTime","eventTimes","mostRecentEventTime","eventTime","computeExpirationTime","currentTime","priority","markStarvedLanesAsExpired","expirationTimes","expirationTime","getLanesToRetrySynchronouslyOnError","everythingButOffscreen","returnNextLanesPriority","includesNonIdleWork","includesOnlyRetries","includesOnlyTransitions","findUpdateLane","pickArbitraryLane","findTransitionLane","findRetryLane","getHighestPriorityLane","getLowestPriorityLane","clz32","laneToIndex","includesSomeLane","isSubsetOfLanes","subset","mergeLanes","removeLanes","laneToLanes","createLaneMap","initial","fill","markRootUpdated","updateLane","higherPriorityLanes","markRootSuspended","markRootPinged","hasDiscreteLanes","markRootMutableRead","mutableReadLanes","markRootFinished","remainingLanes","noLongerPendingLanes","markRootEntangled","Math","clz32Fallback","log","LN2","Scheduler_runWithPriority","Scheduler_scheduleCallback","Scheduler_cancelCallback","Scheduler_shouldYield","Scheduler_requestPaint","Scheduler_getCurrentPriorityLevel","Scheduler_ImmediatePriority","Scheduler_UserBlockingPriority","Scheduler_NormalPriority","Scheduler_LowPriority","Scheduler_IdlePriority","fakeCallbackNode","shouldYield","requestPaint","syncQueue","immediateQueueCallbackNode","isFlushingSyncQueue","getCurrentPriorityLevel","reactPriorityToSchedulerPriority","reactPriorityLevel","runWithPriority","scheduleCallback","options","scheduleSyncCallback","flushSyncCallbackQueueImpl","cancelCallback","callbackNode","flushSyncCallbackQueue","isSync","queue","NoMode","StrictMode","BlockingMode","ConcurrentMode","ProfileMode","DebugTracingMode","ReactCurrentBatchConfig","NoTransition","requestCurrentTransition","transition","is","y","objectIs","shallowEqual","objA","objB","keysA","keys","keysB","describeFiber","_debugOwner","_debugSource","getStackByFiberInDevAndProd","info","isRendering","getCurrentFiberOwnerNameInDevOrNull","getCurrentFiberStackInDev","resetCurrentFiber","getCurrentStack","setCurrentFiber","setIsRendering","rendering","getIsRendering","ReactStrictModeWarnings","recordUnsafeLifecycleWarnings","flushPendingUnsafeLifecycleWarnings","recordLegacyContextWarning","flushLegacyContextWarning","discardPendingWarnings","findStrictRoot","maybeStrictRoot","mode","setToSortedString","array","sort","join","pendingComponentWillMountWarnings","pendingUNSAFE_ComponentWillMountWarnings","pendingComponentWillReceivePropsWarnings","pendingUNSAFE_ComponentWillReceivePropsWarnings","pendingComponentWillUpdateWarnings","pendingUNSAFE_ComponentWillUpdateWarnings","didWarnAboutUnsafeLifecycles","Set","componentWillMount","__suppressDeprecationWarning","UNSAFE_componentWillMount","componentWillReceiveProps","UNSAFE_componentWillReceiveProps","componentWillUpdate","UNSAFE_componentWillUpdate","componentWillMountUniqueNames","add","UNSAFE_componentWillMountUniqueNames","componentWillReceivePropsUniqueNames","UNSAFE_componentWillReceivePropsUniqueNames","componentWillUpdateUniqueNames","UNSAFE_componentWillUpdateUniqueNames","size","sortedNames","pendingLegacyContextWarning","didWarnAboutLegacyContext","strictRoot","warningsForRoot","fiberArray","firstFiber","uniqueNames","setCurrentDebugFiberInDEV","resetCurrentDebugFiberInDEV","resolveDefaultProps","baseProps","defaultProps","MAX_SIGNED_31_BIT_INT","valueCursor","rendererSigil","currentlyRenderingFiber","lastContextDependency","lastContextWithAllBitsObserved","isDisallowedContextReadInDEV","resetContextDependencies","enterDisallowedContextReadInDEV","exitDisallowedContextReadInDEV","pushProvider","providerFiber","_currentValue","_currentRenderer","popProvider","currentValue","calculateChangedBits","newValue","oldValue","changedBits","_calculateChangedBits","scheduleWorkOnParentPath","renderLanes","childLanes","propagateContextChange","nextFiber","list","dependency","firstContext","observedBits","update","createUpdate","ForceUpdate","enqueueUpdate","prepareToReadContext","markWorkInProgressReceivedUpdate","readContext","resolvedObservedBits","contextItem","responders","isPrimaryRenderer","UpdateState","ReplaceState","CaptureUpdate","hasForceUpdate","didWarnUpdateInsideUpdate","currentlyProcessingQueue","initializeUpdateQueue","baseState","memoizedState","firstBaseUpdate","lastBaseUpdate","shared","pending","effects","updateQueue","cloneUpdateQueue","currentQueue","clone","sharedQueue","enqueueCapturedUpdate","capturedUpdate","newFirst","newLast","getStateFromUpdate","prevState","nextState","partialState","processUpdateQueue","pendingQueue","lastPendingUpdate","firstPendingUpdate","currentLastBaseUpdate","newState","newLanes","newBaseState","newFirstBaseUpdate","newLastBaseUpdate","updateEventTime","markSkippedUpdateLanes","resetHasForceUpdateBeforeProcessing","checkHasForceUpdateAfterProcessing","commitUpdateQueue","finishedWork","finishedQueue","effect","fakeInternalInstance","emptyRefsObject","refs","didWarnAboutStateAssignmentForComponent","didWarnAboutUninitializedState","didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate","didWarnAboutLegacyLifecyclesAndDerivedState","didWarnAboutUndefinedDerivedState","warnOnUndefinedDerivedState","warnOnInvalidCallback","didWarnAboutDirectlyAssigningPropsToState","didWarnAboutContextTypeAndContextTypes","didWarnAboutInvalidateContextType","didWarnOnInvalidCallback","callerName","enumerable","applyDerivedStateFromProps","getDerivedStateFromProps","classComponentUpdater","enqueueSetState","requestEventTime","requestUpdateLane","scheduleUpdateOnFiber","enqueueReplaceState","enqueueForceUpdate","checkShouldComponentUpdate","oldState","nextContext","shouldComponentUpdate","isPureReactComponent","checkClassInstance","renderPresent","getInitialState","isReactClassApproved","state","getDefaultProps","propTypes","contextType","componentShouldUpdate","componentDidUnmount","componentDidReceiveProps","componentWillRecieveProps","UNSAFE_componentWillRecieveProps","hasMutatedProps","getSnapshotBeforeUpdate","componentDidUpdate","getDerivedStateFromError","adoptClassInstance","updater","setInstance","_reactInternalInstance","constructClassInstance","isLegacyContextConsumer","isValid","addendum","foundWillMountName","foundWillReceivePropsName","foundWillUpdateName","newApiName","callComponentWillMount","callComponentWillReceiveProps","mountClassInstance","componentDidMount","resumeMountClassInstance","memoizedProps","oldContext","nextLegacyUnmaskedContext","hasNewLifecycles","updateClassInstance","unresolvedOldProps","elementType","unresolvedNewProps","pendingProps","nextUnmaskedContext","didWarnAboutMaps","didWarnAboutGenerators","didWarnAboutStringRefs","ownerHasKeyUseWarning","ownerHasFunctionTypeWarning","warnForMissingKey","returnFiber","_store","validated","coerceRef","mixedRef","ref","_self","stringRef","_stringRef","throwOnInvalidObjectType","newChild","toString","warnOnFunctionType","ChildReconciler","shouldTrackSideEffects","deleteChild","childToDelete","last","lastEffect","nextEffect","firstEffect","deleteRemainingChildren","currentFirstChild","mapRemainingChildren","existingChildren","existingChild","useFiber","createWorkInProgress","placeChild","newFiber","lastPlacedIndex","newIndex","oldIndex","placeSingleChild","updateTextNode","textContent","created","createFiberFromText","existing","updateElement","isCompatibleFamilyForHotReloading","createFiberFromElement","updatePortal","portal","implementation","createFiberFromPortal","updateFragment","fragment","createFiberFromFragment","createChild","updateSlot","oldFiber","updateFromMap","newIdx","matchedFiber","warnOnInvalidKey","knownKeys","reconcileChildrenArray","newChildren","resultingFirstChild","previousNewFiber","nextOldFiber","reconcileChildrenIterator","newChildrenIterable","iteratorFn","toStringTag","entries","step","done","reconcileSingleTextNode","reconcileSingleElement","reconcileSinglePortal","reconcileChildFibers","isUnkeyedTopLevelFragment","isObject","_isMockFunction","mountChildFibers","cloneChildFibers","currentChild","resetChildFibers","resetWorkInProgress","NO_CONTEXT","contextFiberStackCursor","rootInstanceStackCursor","requiredContext","getRootHostContainer","rootInstance","pushHostContainer","nextRootInstance","nextRootContext","popHostContainer","getHostContext","pushHostContext","popHostContext","DefaultSuspenseContext","SubtreeSuspenseContextMask","InvisibleParentSuspenseContext","ForceSuspenseFallback","suspenseStackCursor","hasSuspenseContext","flag","setDefaultShallowSuspenseContext","setShallowSuspenseContext","shallowContext","addSubtreeSuspenseContext","subtreeContext","pushSuspenseContext","newContext","popSuspenseContext","shouldCaptureSuspense","hasInvisibleParent","dehydrated","fallback","unstable_avoidThisFallback","findFirstSuspended","row","revealOrder","didSuspend","HasEffect","Layout","isHydrating","enterHydrationState","prepareToHydrateHostInstance","prepareToHydrateHostTextInstance","popHydrationState","getIsHydrating","workInProgressSources","markSourceAsDirty","mutableSource","resetWorkInProgressVersions","_workInProgressVersionPrimary","getWorkInProgressVersion","setWorkInProgressVersion","version","warnAboutMultipleRenderersDEV","_currentPrimaryRenderer","didWarnAboutMismatchedHooksForComponent","didWarnAboutUseOpaqueIdentifier","currentHook","workInProgressHook","didScheduleRenderPhaseUpdate","didScheduleRenderPhaseUpdateDuringThisPass","RE_RENDER_LIMIT","currentHookNameInDev","hookTypesDev","hookTypesUpdateIndexDev","ignorePreviousDependencies","mountHookTypesDev","hookName","updateHookTypesDev","warnOnHookMismatchInDev","checkDepsAreArrayDev","deps","currentHookName","table","secondColumnStart","oldHookName","newHookName","throwInvalidHookError","areHookInputsEqual","nextDeps","prevDeps","renderWithHooks","secondArg","nextRenderLanes","_debugHookTypes","HooksDispatcherOnUpdateInDEV","HooksDispatcherOnMountWithHookTypesInDEV","HooksDispatcherOnMountInDEV","numberOfReRenders","HooksDispatcherOnRerenderInDEV","ContextOnlyDispatcher","didRenderTooFewHooks","bailoutHooks","PassiveEffect","UpdateEffect","resetHooksAfterThrow","isUpdatingOpaqueValueInRenderPhase","mountWorkInProgressHook","baseQueue","updateWorkInProgressHook","nextCurrentHook","nextWorkInProgressHook","newHook","createFunctionComponentUpdateQueue","basicStateReducer","mountReducer","reducer","initialArg","initialState","dispatch","lastRenderedReducer","lastRenderedState","dispatchAction","updateReducer","baseFirst","pendingFirst","first","newBaseQueueFirst","newBaseQueueLast","eagerReducer","eagerState","rerenderReducer","lastRenderPhaseUpdate","firstRenderPhaseUpdate","readFromUnsubcribedMutableSource","getSnapshot","getVersion","_getVersion","isSafeToReadFromSource","currentRenderVersion","snapshot","useMutableSource","subscribe","getWorkInProgressRoot","dispatcher","useState","currentSnapshot","setSnapshot","stateHook","prevGetSnapshot","prevSource","prevSubscribe","useEffect","maybeNewVersion","maybeNewSnapshot","handleChange","latestGetSnapshot","latestSetSnapshot","unsubscribe","newQueue","mountMutableSource","updateMutableSource","mountState","updateState","rerenderState","pushEffect","destroy","componentUpdateQueue","mountRef","initialValue","seal","updateRef","mountEffectImpl","fiberFlags","hookFlags","HookHasEffect","updateEffectImpl","prevEffect","mountEffect","jest","warnIfNotCurrentlyActingEffectsInDEV","HookPassive","updateEffect","mountLayoutEffect","HookLayout","updateLayoutEffect","imperativeHandleEffect","refCallback","refObject","mountImperativeHandle","effectDeps","updateImperativeHandle","mountDebugValue","formatterFn","updateDebugValue","mountCallback","updateCallback","mountMemo","nextCreate","updateMemo","mountDeferredValue","prevValue","setValue","prevTransition","updateDeferredValue","rerenderDeferredValue","startTransition","setPending","mountTransition","isPending","start","updateTransition","startRef","rerenderTransition","getIsUpdatingOpaqueValueInRenderPhaseInDEV","warnOnOpaqueIdentifierAccessInDEV","mountOpaqueIdentifier","makeId","id","updateOpaqueIdentifier","rerenderOpaqueIdentifier","prevDispatcher","InvalidNestedHooksDispatcherOnUpdateInDEV","currentState","warnIfNotScopedWithMatchingAct","warnIfNotCurrentlyActingUpdatesInDev","useCallback","useContext","useImperativeHandle","useLayoutEffect","useMemo","useReducer","useRef","useDebugValue","useDeferredValue","useTransition","useOpaqueIdentifier","unstable_isNewReconciler","InvalidNestedHooksDispatcherOnMountInDEV","InvalidNestedHooksDispatcherOnRerenderInDEV","warnInvalidContextAccess","warnInvalidHookAccess","commitTime","profilerStartTime","getCommitTime","recordCommitTime","startProfilerTimer","actualStartTime","stopProfilerTimerIfRunning","stopProfilerTimerIfRunningAndRecordDelta","overrideBaseTime","elapsedTime","actualDuration","selfBaseDuration","transferActualDuration","didReceiveUpdate","didWarnAboutBadClass","didWarnAboutModulePatternComponent","didWarnAboutContextTypeOnFunctionComponent","didWarnAboutGetDerivedStateOnFunctionComponent","didWarnAboutFunctionRefs","didWarnAboutReassigningProps","didWarnAboutRevealOrder","didWarnAboutTailOptions","didWarnAboutDefaultPropsOnFunctionComponent","reconcileChildren","nextChildren","forceUnmountCurrentAndReconcile","updateForwardRef","innerPropTypes","bailoutOnAlreadyFinishedWork","updateMemoComponent","updateLanes","isSimpleFunctionComponent","compare","resolvedType","resolveFunctionForHotReloading","validateFunctionComponentInDev","updateSimpleMemoComponent","createFiberFromTypeAndProps","outerMemoType","outerPropTypes","updateFunctionComponent","updateOffscreenComponent","baseLanes","pushRenderLanes","nextBaseLanes","prevBaseLanes","markSpawnedWork","subtreeRenderLanes","updateLegacyHiddenComponent","updateMode","updateProfiler","effectDuration","passiveEffectDuration","markRef","updateClassComponent","hasContext","isLegacyContextProvider","pushLegacyContextProvider","nextUnitOfWork","finishClassComponent","didCaptureError","pushHostRootContext","pendingContext","updateHostRoot","prevChildren","resetHydrationState","hydrate","updateHostComponent","updateHostText","mountLazyComponent","_current","resolvedTag","resolveLazyComponentTag","resolvedProps","resolveClassForHotReloading","resolveForwardRefForHotReloading","hint","mountIncompleteClassComponent","mountIndeterminateComponent","warningKey","_debugID","debugSource","SUSPENDED_MARKER","retryLane","mountSuspenseOffscreenState","updateSuspenseOffscreenState","prevOffscreenState","shouldRemainOnFallback","suspenseContext","suspenseState","getRemainingWorkInPrimaryTree","updateSuspenseComponent","shouldSuspend","showFallback","nextPrimaryChildren","nextFallbackChildren","fallbackFragment","mountSuspenseFallbackChildren","primaryChildFragment","unstable_expectedLoadTime","mountSuspensePrimaryChildren","fallbackChildFragment","updateSuspenseFallbackChildren","updateSuspensePrimaryChildren","primaryChildren","primaryChildProps","createFiberFromOffscreen","fallbackChildren","progressedPrimaryFragment","treeBaseDuration","createWorkInProgressOffscreenFiber","offscreenProps","currentPrimaryChildFragment","currentFallbackChildFragment","progressedLastEffect","scheduleWorkOnFiber","propagateSuspenseContextChange","firstChild","findLastContentRow","lastContentRow","currentRow","validateRevealOrder","validateTailOptions","tailMode","validateSuspenseListNestedChild","childSlot","isIterable","validateSuspenseListChildren","childrenIterator","initSuspenseListRenderState","isBackwards","tail","lastEffectBeforeRendering","renderState","renderingStartTime","updateSuspenseListComponent","shouldForceFallback","didSuspendBefore","nextRow","updatePortalComponent","hasWarnedAboutUsingNoValuePropOnContextProvider","updateContextProvider","providerType","providerPropTypes","hasLegacyContextChanged","hasWarnedAboutUsingContextAsConsumer","updateContextConsumer","Consumer","unstable_observedBits","remountFiber","oldWorkInProgress","newWorkInProgress","prevSibling","beginWork","_debugNeedsRemount","hasChildWork","primaryChildLanes","unresolvedProps","markUpdate","appendAllChildren","updateHostContainer","needsVisibilityToggle","isHidden","currentHostContext","cutOffTailIfNeeded","hasRenderedATailFallback","tailNode","lastTailNode","completeWork","popLegacyContext","popTopLevelLegacyContextObject","resetMutableSourceWorkInProgressVersions","fiberRoot","wasHydrated","nextDidTimeout","prevDidTimeout","hasInvisibleChildContext","renderDidSuspend","renderDidSuspendDelayIfPossible","didSuspendAlready","renderedTail","cannotBeSuspended","renderHasNotSuspendedYet","suspended","newThennables","getRenderTargetTime","previousSibling","popRenderLanes","prevIsHidden","nextIsHidden","unwindWork","unwindInterruptedWork","interruptedWork","createCapturedValue","RNImpl","showErrorDialog","boundary","errorInfo","capturedError","componentStack","errorBoundary","logCapturedError","logError","componentNameMessage","errorBoundaryMessage","errorBoundaryName","combinedMessage","createRootErrorUpdate","onUncaughtError","createClassErrorUpdate","componentDidCatch","markFailedErrorBoundaryForHotReloading","markLegacyErrorBoundaryAsFailed","attachPingListener","wakeable","pingCache","threadIDs","ping","pingSuspendedRoot","then","throwException","sourceFiber","rootRenderLanes","currentSource","hasInvisibleParentBoundary","wakeables","currentSourceFiber","renderDidError","isAlreadyFailedLegacyErrorBoundary","didWarnAboutUndefinedSnapshotBeforeUpdate","PossiblyWeakSet","WeakSet","callComponentWillUnmountWithTimer","componentWillUnmount","safelyCallComponentWillUnmount","unmountError","captureCommitPhaseError","safelyDetachRef","refError","safelyCallDestroy","commitBeforeMutationLifeCycles","didWarnSet","__reactInternalSnapshotBeforeUpdate","commitHookEffectListUnmount","commitHookEffectListMount","schedulePassiveEffects","NoHookEffect","enqueuePendingPassiveHookEffectUnmount","enqueuePendingPassiveHookEffectMount","commitLifeCycles","finishedRoot","committedLanes","commitMount","onCommit","onRender","memoizedInteractions","commitSuspenseHydrationCallbacks","hideOrUnhideAllChildren","commitAttachRef","instanceToUse","commitDetachRef","currentRef","commitUnmount","renderPriorityLevel","unmountHostComponents","commitNestedUnmounts","detachFiberMutation","getHostParentFiber","isHostParent","getHostSibling","siblings","commitPlacement","isContainer","parentStateNode","before","insertOrAppendPlacementNodeIntoContainer","insertOrAppendPlacementNode","isHost","currentParentIsValid","currentParentIsContainer","findParent","commitDeletion","commitWork","commitSuspenseComponent","attachSuspenseRetryListeners","markCommitTimeOfFallback","primaryChildParent","retryCache","retry","resolveRetryWakeable","__reactDoNotTraceInteractions","Schedule_tracing_wrap","isSuspenseBoundaryBeingHidden","commitResetTextContent","COMPONENT_TYPE","HAS_PSEUDO_CLASS_TYPE","ROLE_TYPE","TEST_NAME_TYPE","TEXT_TYPE","ceil","IsSomeRendererActing","NoContext","BatchedContext","DiscreteEventContext","LegacyUnbatchedContext","RenderContext","CommitContext","RetryAfterError","RootIncomplete","RootFatalErrored","RootErrored","RootSuspended","RootSuspendedWithDelay","RootCompleted","executionContext","workInProgressRoot","workInProgressRootRenderLanes","subtreeRenderLanesCursor","workInProgressRootExitStatus","workInProgressRootFatalError","workInProgressRootIncludedLanes","workInProgressRootSkippedLanes","workInProgressRootUpdatedLanes","workInProgressRootPingedLanes","mostRecentlyUpdatedRoot","globalMostRecentFallbackTime","FALLBACK_THROTTLE_MS","workInProgressRootRenderTargetTime","Infinity","RENDER_TIMEOUT_MS","resetRenderTimer","hasUncaughtError","firstUncaughtError","legacyErrorBoundariesThatAlreadyFailed","rootDoesHavePassiveEffects","rootWithPendingPassiveEffects","pendingPassiveEffectsRenderPriority","pendingPassiveEffectsLanes","pendingPassiveHookEffectsMount","pendingPassiveHookEffectsUnmount","rootsWithPendingDiscreteUpdates","NESTED_UPDATE_LIMIT","nestedUpdateCount","rootWithNestedUpdates","NESTED_PASSIVE_UPDATE_LIMIT","nestedPassiveUpdateCount","spawnedWorkDuringRender","currentEventTime","currentEventWipLanes","currentEventPendingLanes","isFlushingPassiveEffects","focusedInstanceHandle","shouldFireAfterActiveInstanceBlur","isTransition","schedulerPriority","schedulerLanePriority","requestRetryLane","checkForNestedUpdates","warnAboutRenderPhaseUpdatesInDEV","markUpdateLaneFromFiberToRoot","warnAboutUpdateOnUnmountedFiberInDEV","schedulePendingInteractions","performSyncWorkOnRoot","ensureRootIsScheduled","warnAboutUpdateOnNotYetMountedFiberInDEV","existingCallbackNode","newCallbackPriority","callbackPriority","existingCallbackPriority","newCallbackNode","performConcurrentWorkOnRoot","originalCallbackNode","didFlushPassiveEffects","flushPassiveEffects","exitStatus","renderRootConcurrent","prepareFreshStack","renderRootSync","fatalError","finishedLanes","finishConcurrentRender","commitRoot","shouldForceFlushFallbacksInDEV","msUntilTimeout","timeoutHandle","eventTimeMs","timeElapsedMs","jnd","markRootSuspended_dontCallThisOneDirectly","prevExecutionContext","flushSync","pushToStack","popFromStack","handleError","thrownValue","erroredWork","completeUnitOfWork","yetAnotherThrownValue","pushDispatcher","popDispatcher","pushInteractions","prevInteractions","popInteractions","startWorkOnPendingInteractions","workLoopSync","performUnitOfWork","workLoopConcurrent","unitOfWork","completedWork","resetChildLanes","siblingFiber","newChildLanes","shouldBubbleActualDurations","isTimedOutSuspense","commitRootImpl","flushRenderPhaseStrictModeWarningsInDEV","commitBeforeMutationEffects","commitMutationEffects","commitLayoutEffects","rootDidHavePassiveEffects","nextNextEffect","detachFiberAfterEffects","scheduleInteractions","finishPendingInteractions","onCommitRootDevTools","beforeActiveInstanceBlur","commitBeforeMutationEffectOnFiber","primaryFlags","commitLayoutEffectOnFiber","flushPassiveEffectsImpl","invokePassiveEffectCreate","unmountEffects","mountEffects","prepareToThrowUncaughtError","captureCommitPhaseErrorOnRoot","rootFiber","errorToIgnore","retryTimedOutBoundary","boundaryFiber","timeElapsed","didWarnStateUpdateForNotYetMountedComponent","previousFiber","ReactCurrentFiberCurrent","didWarnStateUpdateForUnmountedComponent","dummyFiber","originalWorkInProgressCopy","assignFiberPropertiesInDEV","originalBeginWork","originalError","replayError","didWarnAboutUpdateInRender","didWarnAboutUpdateInRenderForAnotherComponent","ReactCurrentDebugFiberIsRenderingInDEV","renderingComponentName","dedupeKey","setStateComponentName","IsThisRendererActing","warnsIfNotActing","warnIfNotCurrentlyActingUpdatesInDEV","didWarnAboutUnmockedScheduler","warnIfUnmockedScheduler","computeThreadID","interactionThreadID","interactions","pendingInteractionMap","pendingInteractions","interaction","__count","subscriber","__subscriberRef","threadID","onWorkScheduled","scheduledInteractions","scheduledLane","onWorkStarted","remainingLanesAfterCommit","onWorkStopped","onInteractionScheduledWorkCompleted","actingUpdatesScopeDepth","resolveFamily","failedBoundaries","setRefreshHandler","handler","family","currentRender","syntheticType","prevType","nextType","needsCompareFamilies","$$typeofNextType","prevFamily","scheduleRefresh","staleFamilies","updatedFamilies","scheduleFibersWithFamiliesRecursively","scheduleRoot","updateContainer","candidateType","needsRender","needsRemount","findHostInstancesForRefresh","families","hostInstances","types","findHostInstancesForMatchingFibersRecursively","didMatch","findHostInstancesForFiberShallowly","foundHostInstances","findChildHostInstancesForFiberShallowly","hasBadMapPolyfill","nonExtensibleObject","preventExtensions","debugCounter","FiberNode","Number","NaN","createFiber","shouldConstruct","isReactComponent","currentDependencies","createHostRootFiber","fiberTag","getTag","createFiberFromProfiler","createFiberFromSuspense","createFiberFromSuspenseList","createFiberFromLegacyHidden","elements","content","pendingChildren","FiberRootNode","unstable_getThreadID","_debugRootType","createFiberRoot","hydrationCallbacks","uninitializedFiber","createPortal","didWarnAboutNestedUpdates","didWarnAboutFindNodeInStrictMode","getContextForSubtree","parentComponent","findHostInstanceWithWarning","methodName","hostFiber","createContainer","ReactCurrentFiberIsRendering","getPublicRootInstance","containerFiber","shouldSuspendImpl","overrideHookState","overrideHookStateDeletePath","overrideHookStateRenamePath","overrideProps","overridePropsDeletePath","overridePropsRenamePath","scheduleUpdate","setSuspenseHandler","copyWithDeleteImpl","updated","copyWithDelete","copyWithRenameImpl","oldPath","newPath","oldKey","newKey","copyWithRename","copyWithSetImpl","copyWithSet","findHook","newShouldSuspendImpl","findHostInstanceByFiber","emptyFindFiberByHostInstance","getCurrentFiberForDevTools","injectIntoDevTools","devToolsConfig","findFiberByHostInstance","bundleType","rendererPackageName","rendererConfig","currentDispatcherRef","getCurrentFiber","getInspectorDataForViewTag","getInspectorDataForViewAtPoint","traverseOwnerTreeUp","hierarchy","getOwnerHierarchy","lastNonHostInstance","getHostProps","host","getHostNode","findNodeHandle","hostNode","createHierarchy","fiberHierarchy","getInspectorData","shadowNode","nativeFabricUIManager","getInspectorDataForInstance","closestInstance","selectedIndex","viewTag","getClosestInstanceFromNode","inspectedView","locationX","locationY","_internalInstanceHandle","findNodeAtPoint","pointerY","frame","left","top","width","height","findSubviewIn","nativeViewTag","inspectorData","touchedViewTag","findHostInstance_DEPRECATED","componentOrHandle","hostInstance","dispatchCommand","handle","command","dispatchViewManagerCommand","containerTag","roots","unmountComponentAtNode","unmountComponentAtNodeAndRemoveContainer","removeRootView","createPortalImpl","computeComponentStackForErrorReporting","reactTag","Internals","ReactVersion"],"mappings":"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"}