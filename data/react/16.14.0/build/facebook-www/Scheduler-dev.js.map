{"version":3,"file":"Scheduler-dev.js","sources":["../../packages/scheduler/src/forks/SchedulerFeatureFlags.www.js","../../packages/scheduler/src/forks/SchedulerHostConfig.default.js","../../packages/scheduler/src/SchedulerMinHeap.js","../../packages/scheduler/src/SchedulerPriorities.js","../../packages/scheduler/src/SchedulerProfiling.js","../../packages/scheduler/src/Scheduler.js"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nexport const {\n  enableIsInputPending,\n  enableSchedulerDebugging,\n  enableProfiling: enableProfilingFeatureFlag,\n} = require('SchedulerFeatureFlags');\n\nexport const enableProfiling = __PROFILE__ && enableProfilingFeatureFlag;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {enableIsInputPending} from '../SchedulerFeatureFlags';\n\nexport let requestHostCallback;\nexport let cancelHostCallback;\nexport let requestHostTimeout;\nexport let cancelHostTimeout;\nexport let shouldYieldToHost;\nexport let requestPaint;\nexport let getCurrentTime;\nexport let forceFrameRate;\n\nconst hasPerformanceNow =\n  typeof performance === 'object' && typeof performance.now === 'function';\n\nif (hasPerformanceNow) {\n  const localPerformance = performance;\n  getCurrentTime = () => localPerformance.now();\n} else {\n  const localDate = Date;\n  const initialTime = localDate.now();\n  getCurrentTime = () => localDate.now() - initialTime;\n}\n\nif (\n  // If Scheduler runs in a non-DOM environment, it falls back to a naive\n  // implementation using setTimeout.\n  typeof window === 'undefined' ||\n  // Check if MessageChannel is supported, too.\n  typeof MessageChannel !== 'function'\n) {\n  // If this accidentally gets imported in a non-browser environment, e.g. JavaScriptCore,\n  // fallback to a naive implementation.\n  let _callback = null;\n  let _timeoutID = null;\n  const _flushCallback = function() {\n    if (_callback !== null) {\n      try {\n        const currentTime = getCurrentTime();\n        const hasRemainingTime = true;\n        _callback(hasRemainingTime, currentTime);\n        _callback = null;\n      } catch (e) {\n        setTimeout(_flushCallback, 0);\n        throw e;\n      }\n    }\n  };\n  requestHostCallback = function(cb) {\n    if (_callback !== null) {\n      // Protect against re-entrancy.\n      setTimeout(requestHostCallback, 0, cb);\n    } else {\n      _callback = cb;\n      setTimeout(_flushCallback, 0);\n    }\n  };\n  cancelHostCallback = function() {\n    _callback = null;\n  };\n  requestHostTimeout = function(cb, ms) {\n    _timeoutID = setTimeout(cb, ms);\n  };\n  cancelHostTimeout = function() {\n    clearTimeout(_timeoutID);\n  };\n  shouldYieldToHost = function() {\n    return false;\n  };\n  requestPaint = forceFrameRate = function() {};\n} else {\n  // Capture local references to native APIs, in case a polyfill overrides them.\n  const setTimeout = window.setTimeout;\n  const clearTimeout = window.clearTimeout;\n\n  if (typeof console !== 'undefined') {\n    // TODO: Scheduler no longer requires these methods to be polyfilled. But\n    // maybe we want to continue warning if they don't exist, to preserve the\n    // option to rely on it in the future?\n    const requestAnimationFrame = window.requestAnimationFrame;\n    const cancelAnimationFrame = window.cancelAnimationFrame;\n\n    if (typeof requestAnimationFrame !== 'function') {\n      // Using console['error'] to evade Babel and ESLint\n      console['error'](\n        \"This browser doesn't support requestAnimationFrame. \" +\n          'Make sure that you load a ' +\n          'polyfill in older browsers. https://reactjs.org/link/react-polyfills',\n      );\n    }\n    if (typeof cancelAnimationFrame !== 'function') {\n      // Using console['error'] to evade Babel and ESLint\n      console['error'](\n        \"This browser doesn't support cancelAnimationFrame. \" +\n          'Make sure that you load a ' +\n          'polyfill in older browsers. https://reactjs.org/link/react-polyfills',\n      );\n    }\n  }\n\n  let isMessageLoopRunning = false;\n  let scheduledHostCallback = null;\n  let taskTimeoutID = -1;\n\n  // Scheduler periodically yields in case there is other work on the main\n  // thread, like user events. By default, it yields multiple times per frame.\n  // It does not attempt to align with frame boundaries, since most tasks don't\n  // need to be frame aligned; for those that do, use requestAnimationFrame.\n  let yieldInterval = 5;\n  let deadline = 0;\n\n  // TODO: Make this configurable\n  // TODO: Adjust this based on priority?\n  const maxYieldInterval = 300;\n  let needsPaint = false;\n\n  if (\n    enableIsInputPending &&\n    navigator !== undefined &&\n    navigator.scheduling !== undefined &&\n    navigator.scheduling.isInputPending !== undefined\n  ) {\n    const scheduling = navigator.scheduling;\n    shouldYieldToHost = function() {\n      const currentTime = getCurrentTime();\n      if (currentTime >= deadline) {\n        // There's no time left. We may want to yield control of the main\n        // thread, so the browser can perform high priority tasks. The main ones\n        // are painting and user input. If there's a pending paint or a pending\n        // input, then we should yield. But if there's neither, then we can\n        // yield less often while remaining responsive. We'll eventually yield\n        // regardless, since there could be a pending paint that wasn't\n        // accompanied by a call to `requestPaint`, or other main thread tasks\n        // like network events.\n        if (needsPaint || scheduling.isInputPending()) {\n          // There is either a pending paint or a pending input.\n          return true;\n        }\n        // There's no pending input. Only yield if we've reached the max\n        // yield interval.\n        return currentTime >= maxYieldInterval;\n      } else {\n        // There's still time left in the frame.\n        return false;\n      }\n    };\n\n    requestPaint = function() {\n      needsPaint = true;\n    };\n  } else {\n    // `isInputPending` is not available. Since we have no way of knowing if\n    // there's pending input, always yield at the end of the frame.\n    shouldYieldToHost = function() {\n      return getCurrentTime() >= deadline;\n    };\n\n    // Since we yield every frame regardless, `requestPaint` has no effect.\n    requestPaint = function() {};\n  }\n\n  forceFrameRate = function(fps) {\n    if (fps < 0 || fps > 125) {\n      // Using console['error'] to evade Babel and ESLint\n      console['error'](\n        'forceFrameRate takes a positive int between 0 and 125, ' +\n          'forcing frame rates higher than 125 fps is not supported',\n      );\n      return;\n    }\n    if (fps > 0) {\n      yieldInterval = Math.floor(1000 / fps);\n    } else {\n      // reset the framerate\n      yieldInterval = 5;\n    }\n  };\n\n  const performWorkUntilDeadline = () => {\n    if (scheduledHostCallback !== null) {\n      const currentTime = getCurrentTime();\n      // Yield after `yieldInterval` ms, regardless of where we are in the vsync\n      // cycle. This means there's always time remaining at the beginning of\n      // the message event.\n      deadline = currentTime + yieldInterval;\n      const hasTimeRemaining = true;\n      try {\n        const hasMoreWork = scheduledHostCallback(\n          hasTimeRemaining,\n          currentTime,\n        );\n        if (!hasMoreWork) {\n          isMessageLoopRunning = false;\n          scheduledHostCallback = null;\n        } else {\n          // If there's more work, schedule the next message event at the end\n          // of the preceding one.\n          port.postMessage(null);\n        }\n      } catch (error) {\n        // If a scheduler task throws, exit the current browser task so the\n        // error can be observed.\n        port.postMessage(null);\n        throw error;\n      }\n    } else {\n      isMessageLoopRunning = false;\n    }\n    // Yielding to the browser will give it a chance to paint, so we can\n    // reset this.\n    needsPaint = false;\n  };\n\n  const channel = new MessageChannel();\n  const port = channel.port2;\n  channel.port1.onmessage = performWorkUntilDeadline;\n\n  requestHostCallback = function(callback) {\n    scheduledHostCallback = callback;\n    if (!isMessageLoopRunning) {\n      isMessageLoopRunning = true;\n      port.postMessage(null);\n    }\n  };\n\n  cancelHostCallback = function() {\n    scheduledHostCallback = null;\n  };\n\n  requestHostTimeout = function(callback, ms) {\n    taskTimeoutID = setTimeout(() => {\n      callback(getCurrentTime());\n    }, ms);\n  };\n\n  cancelHostTimeout = function() {\n    clearTimeout(taskTimeoutID);\n    taskTimeoutID = -1;\n  };\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n */\n\ntype Heap = Array<Node>;\ntype Node = {|\n  id: number,\n  sortIndex: number,\n|};\n\nexport function push(heap: Heap, node: Node): void {\n  const index = heap.length;\n  heap.push(node);\n  siftUp(heap, node, index);\n}\n\nexport function peek(heap: Heap): Node | null {\n  const first = heap[0];\n  return first === undefined ? null : first;\n}\n\nexport function pop(heap: Heap): Node | null {\n  const first = heap[0];\n  if (first !== undefined) {\n    const last = heap.pop();\n    if (last !== first) {\n      heap[0] = last;\n      siftDown(heap, last, 0);\n    }\n    return first;\n  } else {\n    return null;\n  }\n}\n\nfunction siftUp(heap, node, i) {\n  let index = i;\n  while (true) {\n    const parentIndex = (index - 1) >>> 1;\n    const parent = heap[parentIndex];\n    if (parent !== undefined && compare(parent, node) > 0) {\n      // The parent is larger. Swap positions.\n      heap[parentIndex] = node;\n      heap[index] = parent;\n      index = parentIndex;\n    } else {\n      // The parent is smaller. Exit.\n      return;\n    }\n  }\n}\n\nfunction siftDown(heap, node, i) {\n  let index = i;\n  const length = heap.length;\n  while (index < length) {\n    const leftIndex = (index + 1) * 2 - 1;\n    const left = heap[leftIndex];\n    const rightIndex = leftIndex + 1;\n    const right = heap[rightIndex];\n\n    // If the left or right node is smaller, swap with the smaller of those.\n    if (left !== undefined && compare(left, node) < 0) {\n      if (right !== undefined && compare(right, left) < 0) {\n        heap[index] = right;\n        heap[rightIndex] = node;\n        index = rightIndex;\n      } else {\n        heap[index] = left;\n        heap[leftIndex] = node;\n        index = leftIndex;\n      }\n    } else if (right !== undefined && compare(right, node) < 0) {\n      heap[index] = right;\n      heap[rightIndex] = node;\n      index = rightIndex;\n    } else {\n      // Neither child is smaller. Exit.\n      return;\n    }\n  }\n}\n\nfunction compare(a, b) {\n  // Compare sort index first, then task id.\n  const diff = a.sortIndex - b.sortIndex;\n  return diff !== 0 ? diff : a.id - b.id;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nexport type PriorityLevel = 0 | 1 | 2 | 3 | 4 | 5;\n\n// TODO: Use symbols?\nexport const NoPriority = 0;\nexport const ImmediatePriority = 1;\nexport const UserBlockingPriority = 2;\nexport const NormalPriority = 3;\nexport const LowPriority = 4;\nexport const IdlePriority = 5;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {PriorityLevel} from './SchedulerPriorities';\nimport {enableProfiling} from './SchedulerFeatureFlags';\n\nimport {NoPriority} from './SchedulerPriorities';\n\nlet runIdCounter: number = 0;\nlet mainThreadIdCounter: number = 0;\n\nconst profilingStateSize = 4;\nexport const sharedProfilingBuffer = enableProfiling\n  ? // $FlowFixMe Flow doesn't know about SharedArrayBuffer\n    typeof SharedArrayBuffer === 'function'\n    ? new SharedArrayBuffer(profilingStateSize * Int32Array.BYTES_PER_ELEMENT)\n    : // $FlowFixMe Flow doesn't know about ArrayBuffer\n    typeof ArrayBuffer === 'function'\n    ? new ArrayBuffer(profilingStateSize * Int32Array.BYTES_PER_ELEMENT)\n    : null // Don't crash the init path on IE9\n  : null;\n\nconst profilingState =\n  enableProfiling && sharedProfilingBuffer !== null\n    ? new Int32Array(sharedProfilingBuffer)\n    : []; // We can't read this but it helps save bytes for null checks\n\nconst PRIORITY = 0;\nconst CURRENT_TASK_ID = 1;\nconst CURRENT_RUN_ID = 2;\nconst QUEUE_SIZE = 3;\n\nif (enableProfiling) {\n  profilingState[PRIORITY] = NoPriority;\n  // This is maintained with a counter, because the size of the priority queue\n  // array might include canceled tasks.\n  profilingState[QUEUE_SIZE] = 0;\n  profilingState[CURRENT_TASK_ID] = 0;\n}\n\n// Bytes per element is 4\nconst INITIAL_EVENT_LOG_SIZE = 131072;\nconst MAX_EVENT_LOG_SIZE = 524288; // Equivalent to 2 megabytes\n\nlet eventLogSize = 0;\nlet eventLogBuffer = null;\nlet eventLog = null;\nlet eventLogIndex = 0;\n\nconst TaskStartEvent = 1;\nconst TaskCompleteEvent = 2;\nconst TaskErrorEvent = 3;\nconst TaskCancelEvent = 4;\nconst TaskRunEvent = 5;\nconst TaskYieldEvent = 6;\nconst SchedulerSuspendEvent = 7;\nconst SchedulerResumeEvent = 8;\n\nfunction logEvent(entries) {\n  if (eventLog !== null) {\n    const offset = eventLogIndex;\n    eventLogIndex += entries.length;\n    if (eventLogIndex + 1 > eventLogSize) {\n      eventLogSize *= 2;\n      if (eventLogSize > MAX_EVENT_LOG_SIZE) {\n        // Using console['error'] to evade Babel and ESLint\n        console['error'](\n          \"Scheduler Profiling: Event log exceeded maximum size. Don't \" +\n            'forget to call `stopLoggingProfilingEvents()`.',\n        );\n        stopLoggingProfilingEvents();\n        return;\n      }\n      const newEventLog = new Int32Array(eventLogSize * 4);\n      newEventLog.set(eventLog);\n      eventLogBuffer = newEventLog.buffer;\n      eventLog = newEventLog;\n    }\n    eventLog.set(entries, offset);\n  }\n}\n\nexport function startLoggingProfilingEvents(): void {\n  eventLogSize = INITIAL_EVENT_LOG_SIZE;\n  eventLogBuffer = new ArrayBuffer(eventLogSize * 4);\n  eventLog = new Int32Array(eventLogBuffer);\n  eventLogIndex = 0;\n}\n\nexport function stopLoggingProfilingEvents(): ArrayBuffer | null {\n  const buffer = eventLogBuffer;\n  eventLogSize = 0;\n  eventLogBuffer = null;\n  eventLog = null;\n  eventLogIndex = 0;\n  return buffer;\n}\n\nexport function markTaskStart(\n  task: {\n    id: number,\n    priorityLevel: PriorityLevel,\n    ...\n  },\n  ms: number,\n) {\n  if (enableProfiling) {\n    profilingState[QUEUE_SIZE]++;\n\n    if (eventLog !== null) {\n      // performance.now returns a float, representing milliseconds. When the\n      // event is logged, it's coerced to an int. Convert to microseconds to\n      // maintain extra degrees of precision.\n      logEvent([TaskStartEvent, ms * 1000, task.id, task.priorityLevel]);\n    }\n  }\n}\n\nexport function markTaskCompleted(\n  task: {\n    id: number,\n    priorityLevel: PriorityLevel,\n    ...\n  },\n  ms: number,\n) {\n  if (enableProfiling) {\n    profilingState[PRIORITY] = NoPriority;\n    profilingState[CURRENT_TASK_ID] = 0;\n    profilingState[QUEUE_SIZE]--;\n\n    if (eventLog !== null) {\n      logEvent([TaskCompleteEvent, ms * 1000, task.id]);\n    }\n  }\n}\n\nexport function markTaskCanceled(\n  task: {\n    id: number,\n    priorityLevel: PriorityLevel,\n    ...\n  },\n  ms: number,\n) {\n  if (enableProfiling) {\n    profilingState[QUEUE_SIZE]--;\n\n    if (eventLog !== null) {\n      logEvent([TaskCancelEvent, ms * 1000, task.id]);\n    }\n  }\n}\n\nexport function markTaskErrored(\n  task: {\n    id: number,\n    priorityLevel: PriorityLevel,\n    ...\n  },\n  ms: number,\n) {\n  if (enableProfiling) {\n    profilingState[PRIORITY] = NoPriority;\n    profilingState[CURRENT_TASK_ID] = 0;\n    profilingState[QUEUE_SIZE]--;\n\n    if (eventLog !== null) {\n      logEvent([TaskErrorEvent, ms * 1000, task.id]);\n    }\n  }\n}\n\nexport function markTaskRun(\n  task: {\n    id: number,\n    priorityLevel: PriorityLevel,\n    ...\n  },\n  ms: number,\n) {\n  if (enableProfiling) {\n    runIdCounter++;\n\n    profilingState[PRIORITY] = task.priorityLevel;\n    profilingState[CURRENT_TASK_ID] = task.id;\n    profilingState[CURRENT_RUN_ID] = runIdCounter;\n\n    if (eventLog !== null) {\n      logEvent([TaskRunEvent, ms * 1000, task.id, runIdCounter]);\n    }\n  }\n}\n\nexport function markTaskYield(task: {id: number, ...}, ms: number) {\n  if (enableProfiling) {\n    profilingState[PRIORITY] = NoPriority;\n    profilingState[CURRENT_TASK_ID] = 0;\n    profilingState[CURRENT_RUN_ID] = 0;\n\n    if (eventLog !== null) {\n      logEvent([TaskYieldEvent, ms * 1000, task.id, runIdCounter]);\n    }\n  }\n}\n\nexport function markSchedulerSuspended(ms: number) {\n  if (enableProfiling) {\n    mainThreadIdCounter++;\n\n    if (eventLog !== null) {\n      logEvent([SchedulerSuspendEvent, ms * 1000, mainThreadIdCounter]);\n    }\n  }\n}\n\nexport function markSchedulerUnsuspended(ms: number) {\n  if (enableProfiling) {\n    if (eventLog !== null) {\n      logEvent([SchedulerResumeEvent, ms * 1000, mainThreadIdCounter]);\n    }\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n/* eslint-disable no-var */\n\nimport {\n  enableSchedulerDebugging,\n  enableProfiling,\n} from './SchedulerFeatureFlags';\nimport {\n  requestHostCallback,\n  requestHostTimeout,\n  cancelHostTimeout,\n  shouldYieldToHost,\n  getCurrentTime,\n  forceFrameRate,\n  requestPaint,\n} from './SchedulerHostConfig';\nimport {push, pop, peek} from './SchedulerMinHeap';\n\n// TODO: Use symbols?\nimport {\n  ImmediatePriority,\n  UserBlockingPriority,\n  NormalPriority,\n  LowPriority,\n  IdlePriority,\n} from './SchedulerPriorities';\nimport {\n  sharedProfilingBuffer,\n  markTaskRun,\n  markTaskYield,\n  markTaskCompleted,\n  markTaskCanceled,\n  markTaskErrored,\n  markSchedulerSuspended,\n  markSchedulerUnsuspended,\n  markTaskStart,\n  stopLoggingProfilingEvents,\n  startLoggingProfilingEvents,\n} from './SchedulerProfiling';\n\n// Max 31 bit integer. The max integer size in V8 for 32-bit systems.\n// Math.pow(2, 30) - 1\n// 0b111111111111111111111111111111\nvar maxSigned31BitInt = 1073741823;\n\n// Times out immediately\nvar IMMEDIATE_PRIORITY_TIMEOUT = -1;\n// Eventually times out\nvar USER_BLOCKING_PRIORITY_TIMEOUT = 250;\nvar NORMAL_PRIORITY_TIMEOUT = 5000;\nvar LOW_PRIORITY_TIMEOUT = 10000;\n// Never times out\nvar IDLE_PRIORITY_TIMEOUT = maxSigned31BitInt;\n\n// Tasks are stored on a min heap\nvar taskQueue = [];\nvar timerQueue = [];\n\n// Incrementing id counter. Used to maintain insertion order.\nvar taskIdCounter = 1;\n\n// Pausing the scheduler is useful for debugging.\nvar isSchedulerPaused = false;\n\nvar currentTask = null;\nvar currentPriorityLevel = NormalPriority;\n\n// This is set while performing work, to prevent re-entrancy.\nvar isPerformingWork = false;\n\nvar isHostCallbackScheduled = false;\nvar isHostTimeoutScheduled = false;\n\nfunction advanceTimers(currentTime) {\n  // Check for tasks that are no longer delayed and add them to the queue.\n  let timer = peek(timerQueue);\n  while (timer !== null) {\n    if (timer.callback === null) {\n      // Timer was cancelled.\n      pop(timerQueue);\n    } else if (timer.startTime <= currentTime) {\n      // Timer fired. Transfer to the task queue.\n      pop(timerQueue);\n      timer.sortIndex = timer.expirationTime;\n      push(taskQueue, timer);\n      if (enableProfiling) {\n        markTaskStart(timer, currentTime);\n        timer.isQueued = true;\n      }\n    } else {\n      // Remaining timers are pending.\n      return;\n    }\n    timer = peek(timerQueue);\n  }\n}\n\nfunction handleTimeout(currentTime) {\n  isHostTimeoutScheduled = false;\n  advanceTimers(currentTime);\n\n  if (!isHostCallbackScheduled) {\n    if (peek(taskQueue) !== null) {\n      isHostCallbackScheduled = true;\n      requestHostCallback(flushWork);\n    } else {\n      const firstTimer = peek(timerQueue);\n      if (firstTimer !== null) {\n        requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);\n      }\n    }\n  }\n}\n\nfunction flushWork(hasTimeRemaining, initialTime) {\n  if (enableProfiling) {\n    markSchedulerUnsuspended(initialTime);\n  }\n\n  // We'll need a host callback the next time work is scheduled.\n  isHostCallbackScheduled = false;\n  if (isHostTimeoutScheduled) {\n    // We scheduled a timeout but it's no longer needed. Cancel it.\n    isHostTimeoutScheduled = false;\n    cancelHostTimeout();\n  }\n\n  isPerformingWork = true;\n  const previousPriorityLevel = currentPriorityLevel;\n  try {\n    if (enableProfiling) {\n      try {\n        return workLoop(hasTimeRemaining, initialTime);\n      } catch (error) {\n        if (currentTask !== null) {\n          const currentTime = getCurrentTime();\n          markTaskErrored(currentTask, currentTime);\n          currentTask.isQueued = false;\n        }\n        throw error;\n      }\n    } else {\n      // No catch in prod code path.\n      return workLoop(hasTimeRemaining, initialTime);\n    }\n  } finally {\n    currentTask = null;\n    currentPriorityLevel = previousPriorityLevel;\n    isPerformingWork = false;\n    if (enableProfiling) {\n      const currentTime = getCurrentTime();\n      markSchedulerSuspended(currentTime);\n    }\n  }\n}\n\nfunction workLoop(hasTimeRemaining, initialTime) {\n  let currentTime = initialTime;\n  advanceTimers(currentTime);\n  currentTask = peek(taskQueue);\n  while (\n    currentTask !== null &&\n    !(enableSchedulerDebugging && isSchedulerPaused)\n  ) {\n    if (\n      currentTask.expirationTime > currentTime &&\n      (!hasTimeRemaining || shouldYieldToHost())\n    ) {\n      // This currentTask hasn't expired, and we've reached the deadline.\n      break;\n    }\n    const callback = currentTask.callback;\n    if (typeof callback === 'function') {\n      currentTask.callback = null;\n      currentPriorityLevel = currentTask.priorityLevel;\n      const didUserCallbackTimeout = currentTask.expirationTime <= currentTime;\n      markTaskRun(currentTask, currentTime);\n      const continuationCallback = callback(didUserCallbackTimeout);\n      currentTime = getCurrentTime();\n      if (typeof continuationCallback === 'function') {\n        currentTask.callback = continuationCallback;\n        markTaskYield(currentTask, currentTime);\n      } else {\n        if (enableProfiling) {\n          markTaskCompleted(currentTask, currentTime);\n          currentTask.isQueued = false;\n        }\n        if (currentTask === peek(taskQueue)) {\n          pop(taskQueue);\n        }\n      }\n      advanceTimers(currentTime);\n    } else {\n      pop(taskQueue);\n    }\n    currentTask = peek(taskQueue);\n  }\n  // Return whether there's additional work\n  if (currentTask !== null) {\n    return true;\n  } else {\n    const firstTimer = peek(timerQueue);\n    if (firstTimer !== null) {\n      requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);\n    }\n    return false;\n  }\n}\n\nfunction unstable_runWithPriority(priorityLevel, eventHandler) {\n  switch (priorityLevel) {\n    case ImmediatePriority:\n    case UserBlockingPriority:\n    case NormalPriority:\n    case LowPriority:\n    case IdlePriority:\n      break;\n    default:\n      priorityLevel = NormalPriority;\n  }\n\n  var previousPriorityLevel = currentPriorityLevel;\n  currentPriorityLevel = priorityLevel;\n\n  try {\n    return eventHandler();\n  } finally {\n    currentPriorityLevel = previousPriorityLevel;\n  }\n}\n\nfunction unstable_next(eventHandler) {\n  var priorityLevel;\n  switch (currentPriorityLevel) {\n    case ImmediatePriority:\n    case UserBlockingPriority:\n    case NormalPriority:\n      // Shift down to normal priority\n      priorityLevel = NormalPriority;\n      break;\n    default:\n      // Anything lower than normal priority should remain at the current level.\n      priorityLevel = currentPriorityLevel;\n      break;\n  }\n\n  var previousPriorityLevel = currentPriorityLevel;\n  currentPriorityLevel = priorityLevel;\n\n  try {\n    return eventHandler();\n  } finally {\n    currentPriorityLevel = previousPriorityLevel;\n  }\n}\n\nfunction unstable_wrapCallback(callback) {\n  var parentPriorityLevel = currentPriorityLevel;\n  return function() {\n    // This is a fork of runWithPriority, inlined for performance.\n    var previousPriorityLevel = currentPriorityLevel;\n    currentPriorityLevel = parentPriorityLevel;\n\n    try {\n      return callback.apply(this, arguments);\n    } finally {\n      currentPriorityLevel = previousPriorityLevel;\n    }\n  };\n}\n\nfunction unstable_scheduleCallback(priorityLevel, callback, options) {\n  var currentTime = getCurrentTime();\n\n  var startTime;\n  if (typeof options === 'object' && options !== null) {\n    var delay = options.delay;\n    if (typeof delay === 'number' && delay > 0) {\n      startTime = currentTime + delay;\n    } else {\n      startTime = currentTime;\n    }\n  } else {\n    startTime = currentTime;\n  }\n\n  var timeout;\n  switch (priorityLevel) {\n    case ImmediatePriority:\n      timeout = IMMEDIATE_PRIORITY_TIMEOUT;\n      break;\n    case UserBlockingPriority:\n      timeout = USER_BLOCKING_PRIORITY_TIMEOUT;\n      break;\n    case IdlePriority:\n      timeout = IDLE_PRIORITY_TIMEOUT;\n      break;\n    case LowPriority:\n      timeout = LOW_PRIORITY_TIMEOUT;\n      break;\n    case NormalPriority:\n    default:\n      timeout = NORMAL_PRIORITY_TIMEOUT;\n      break;\n  }\n\n  var expirationTime = startTime + timeout;\n\n  var newTask = {\n    id: taskIdCounter++,\n    callback,\n    priorityLevel,\n    startTime,\n    expirationTime,\n    sortIndex: -1,\n  };\n  if (enableProfiling) {\n    newTask.isQueued = false;\n  }\n\n  if (startTime > currentTime) {\n    // This is a delayed task.\n    newTask.sortIndex = startTime;\n    push(timerQueue, newTask);\n    if (peek(taskQueue) === null && newTask === peek(timerQueue)) {\n      // All tasks are delayed, and this is the task with the earliest delay.\n      if (isHostTimeoutScheduled) {\n        // Cancel an existing timeout.\n        cancelHostTimeout();\n      } else {\n        isHostTimeoutScheduled = true;\n      }\n      // Schedule a timeout.\n      requestHostTimeout(handleTimeout, startTime - currentTime);\n    }\n  } else {\n    newTask.sortIndex = expirationTime;\n    push(taskQueue, newTask);\n    if (enableProfiling) {\n      markTaskStart(newTask, currentTime);\n      newTask.isQueued = true;\n    }\n    // Schedule a host callback, if needed. If we're already performing work,\n    // wait until the next time we yield.\n    if (!isHostCallbackScheduled && !isPerformingWork) {\n      isHostCallbackScheduled = true;\n      requestHostCallback(flushWork);\n    }\n  }\n\n  return newTask;\n}\n\nfunction unstable_pauseExecution() {\n  isSchedulerPaused = true;\n}\n\nfunction unstable_continueExecution() {\n  isSchedulerPaused = false;\n  if (!isHostCallbackScheduled && !isPerformingWork) {\n    isHostCallbackScheduled = true;\n    requestHostCallback(flushWork);\n  }\n}\n\nfunction unstable_getFirstCallbackNode() {\n  return peek(taskQueue);\n}\n\nfunction unstable_cancelCallback(task) {\n  if (enableProfiling) {\n    if (task.isQueued) {\n      const currentTime = getCurrentTime();\n      markTaskCanceled(task, currentTime);\n      task.isQueued = false;\n    }\n  }\n\n  // Null out the callback to indicate the task has been canceled. (Can't\n  // remove from the queue because you can't remove arbitrary nodes from an\n  // array based heap, only the first one.)\n  task.callback = null;\n}\n\nfunction unstable_getCurrentPriorityLevel() {\n  return currentPriorityLevel;\n}\n\nconst unstable_requestPaint = requestPaint;\n\nexport {\n  ImmediatePriority as unstable_ImmediatePriority,\n  UserBlockingPriority as unstable_UserBlockingPriority,\n  NormalPriority as unstable_NormalPriority,\n  IdlePriority as unstable_IdlePriority,\n  LowPriority as unstable_LowPriority,\n  unstable_runWithPriority,\n  unstable_next,\n  unstable_scheduleCallback,\n  unstable_cancelCallback,\n  unstable_wrapCallback,\n  unstable_getCurrentPriorityLevel,\n  shouldYieldToHost as unstable_shouldYield,\n  unstable_requestPaint,\n  unstable_continueExecution,\n  unstable_pauseExecution,\n  unstable_getFirstCallbackNode,\n  getCurrentTime as unstable_now,\n  forceFrameRate as unstable_forceFrameRate,\n};\n\nexport const unstable_Profiling = enableProfiling\n  ? {\n      startLoggingProfilingEvents,\n      stopLoggingProfilingEvents,\n      sharedProfilingBuffer,\n    }\n  : null;\n"],"names":["require","enableIsInputPending","enableSchedulerDebugging","enableProfilingFeatureFlag","enableProfiling","requestHostCallback","requestHostTimeout","cancelHostTimeout","requestPaint","hasPerformanceNow","performance","now","localPerformance","getCurrentTime","localDate","Date","initialTime","window","MessageChannel","_callback","_timeoutID","_flushCallback","currentTime","hasRemainingTime","e","setTimeout","cb","ms","clearTimeout","shouldYieldToHost","forceFrameRate","console","requestAnimationFrame","cancelAnimationFrame","isMessageLoopRunning","scheduledHostCallback","taskTimeoutID","yieldInterval","deadline","maxYieldInterval","needsPaint","navigator","undefined","scheduling","isInputPending","fps","Math","floor","performWorkUntilDeadline","hasTimeRemaining","hasMoreWork","port","postMessage","error","channel","port2","port1","onmessage","callback","push","heap","node","index","length","siftUp","peek","first","pop","last","siftDown","i","parentIndex","parent","compare","leftIndex","left","rightIndex","right","a","b","diff","sortIndex","id","NoPriority","ImmediatePriority","UserBlockingPriority","NormalPriority","LowPriority","IdlePriority","runIdCounter","mainThreadIdCounter","profilingStateSize","sharedProfilingBuffer","SharedArrayBuffer","Int32Array","BYTES_PER_ELEMENT","ArrayBuffer","profilingState","PRIORITY","CURRENT_TASK_ID","CURRENT_RUN_ID","QUEUE_SIZE","INITIAL_EVENT_LOG_SIZE","MAX_EVENT_LOG_SIZE","eventLogSize","eventLogBuffer","eventLog","eventLogIndex","TaskStartEvent","TaskCompleteEvent","TaskErrorEvent","TaskCancelEvent","TaskRunEvent","TaskYieldEvent","SchedulerSuspendEvent","SchedulerResumeEvent","logEvent","entries","offset","stopLoggingProfilingEvents","newEventLog","set","buffer","startLoggingProfilingEvents","markTaskStart","task","priorityLevel","markTaskCompleted","markTaskCanceled","markTaskErrored","markTaskRun","markTaskYield","markSchedulerSuspended","markSchedulerUnsuspended","maxSigned31BitInt","IMMEDIATE_PRIORITY_TIMEOUT","USER_BLOCKING_PRIORITY_TIMEOUT","NORMAL_PRIORITY_TIMEOUT","LOW_PRIORITY_TIMEOUT","IDLE_PRIORITY_TIMEOUT","taskQueue","timerQueue","taskIdCounter","isSchedulerPaused","currentTask","currentPriorityLevel","isPerformingWork","isHostCallbackScheduled","isHostTimeoutScheduled","advanceTimers","timer","startTime","expirationTime","isQueued","handleTimeout","flushWork","firstTimer","previousPriorityLevel","workLoop","didUserCallbackTimeout","continuationCallback","unstable_runWithPriority","eventHandler","unstable_next","unstable_wrapCallback","parentPriorityLevel","apply","arguments","unstable_scheduleCallback","options","delay","timeout","newTask","unstable_pauseExecution","unstable_continueExecution","unstable_getFirstCallbackNode","unstable_cancelCallback","unstable_getCurrentPriorityLevel","unstable_requestPaint","unstable_Profiling"],"mappings":"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"}