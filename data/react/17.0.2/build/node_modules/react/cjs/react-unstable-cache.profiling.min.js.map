{"version":3,"file":"react-unstable-cache.profiling.min.js","sources":["../../../../packages/shared/formatProdErrorMessage.js","../../../../packages/react/src/cache/ReactCache.js"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n// Do not require this module directly! Use normal `invariant` calls with\n// template literal strings. The messages will be replaced with error codes\n// during build.\n\nfunction formatProdErrorMessage(code) {\n  let url = 'https://reactjs.org/docs/error-decoder.html?invariant=' + code;\n  for (let i = 1; i < arguments.length; i++) {\n    url += '&args[]=' + encodeURIComponent(arguments[i]);\n  }\n  return (\n    `Minified React error #${code}; visit ${url} for the full message or ` +\n    'use the non-minified dev environment for full errors and additional ' +\n    'helpful warnings.'\n  );\n}\n\nexport default formatProdErrorMessage;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n * @flow\n */\n\nimport type {ReactContext} from 'shared/ReactTypes';\n\nimport {createContext} from 'react';\nimport invariant from 'shared/invariant';\n\ntype Cache = {|\n  resources: Map<any, any>,\n|};\n\n// TODO: should there be a default cache?\nconst CacheContext: ReactContext<null | Cache> = createContext(null);\n\nfunction CacheImpl() {\n  this.resources = new Map();\n  // TODO: cancellation token.\n}\n\nfunction createCache(): Cache {\n  // $FlowFixMe\n  return new CacheImpl();\n}\n\nfunction readCache(): Cache {\n  // TODO: this doesn't subscribe.\n  // But we really want load context anyway.\n  const value = CacheContext._currentValue;\n  if (value instanceof CacheImpl) {\n    return value;\n  }\n  invariant(false, 'Could not read the cache.');\n}\n\nconst CacheProvider = CacheContext.Provider;\n\nexport {createCache, readCache, CacheProvider};\n"],"names":["formatProdErrorMessage","code","url","i","arguments","length","encodeURIComponent","CacheContext","createContext","CacheImpl","resources","Map","createCache","readCache","value","_currentValue","CacheProvider","Provider"],"mappings":";;;;AAQA;AACA;AACA;AAEA,SAASA,sBAAT,CAAgCC,IAAhC,EAAsC;AACpC,MAAIC,GAAG,GAAG,2DAA2DD,IAArE;;AACA,OAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,SAAS,CAACC,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;AACzCD,IAAAA,GAAG,IAAI,aAAaI,kBAAkB,CAACF,SAAS,CAACD,CAAD,CAAV,CAAtC;AACD;;AACD,SACE,2BAAyBF,IAAzB,gBAAwCC,GAAxC,iCACA,sEADA,GAEA,mBAHF;AAKD;;ACLD;AACA,MAAMK,YAAwC,GAAGC,mBAAa,CAAC,IAAD,CAA9D;;AAEA,SAASC,SAAT,GAAqB;AACnB,OAAKC,SAAL,GAAiB,IAAIC,GAAJ,EAAjB,CADmB;AAGpB;;AAED,SAASC,WAAT,GAA8B;AAC5B;AACA,SAAO,IAAIH,SAAJ,EAAP;AACD;;AAED,SAASI,SAAT,GAA4B;AAC1B;AACA;AACA,QAAMC,KAAK,GAAGP,YAAY,CAACQ,aAA3B;;AACA,MAAID,KAAK,YAAYL,SAArB,EAAgC;AAC9B,WAAOK,KAAP;AACD;;AANyB;AAAA;AAAA;AAAA;AAAA;AAQ3B;;AAED,MAAME,aAAa,GAAGT,YAAY,CAACU,QAAnC;;;;;;"}