{"version":3,"file":"react-art.development.js","sources":["../../../../packages/shared/ReactVersion.js","../../../../packages/react-reconciler/src/ReactRootTags.js","../../../../packages/shared/ReactSharedInternals.js","../../../../packages/shared/consoleWithStackDev.js","../../../../packages/react-reconciler/src/ReactWorkTags.js","../../../../packages/shared/ReactInstanceMap.js","../../../../packages/shared/ReactSymbols.js","../../../../packages/shared/getComponentName.js","../../../../packages/react-reconciler/src/ReactFiberFlags.js","../../../../packages/shared/ReactFeatureFlags.js","../../../../packages/react-reconciler/src/ReactFiberTreeReflection.js","../../../../packages/react-art/src/ReactARTInternals.js","../../../../packages/react-reconciler/src/ReactFiberHostConfigWithNoHydration.js","../../../../packages/react-art/src/ReactARTHostConfig.js","../../../../packages/shared/ConsolePatchingDev.js","../../../../packages/shared/ReactComponentStackFrame.js","../../../../packages/shared/checkPropTypes.js","../../../../packages/react-reconciler/src/ReactFiberStack.old.js","../../../../packages/react-reconciler/src/ReactFiberContext.old.js","../../../../packages/react-reconciler/src/ReactFiberDevToolsHook.old.js","../../../../packages/react-reconciler/src/SchedulerWithReactIntegration.new.js","../../../../packages/react-reconciler/src/ReactFiberLane.js","../../../../packages/react-reconciler/src/SchedulerWithReactIntegration.old.js","../../../../packages/react-reconciler/src/SchedulingProfiler.js","../../../../packages/react-reconciler/src/ReactTypeOfMode.js","../../../../packages/react-reconciler/src/ReactFiberTransition.js","../../../../packages/shared/objectIs.js","../../../../packages/shared/shallowEqual.js","../../../../packages/react-reconciler/src/ReactFiberComponentStack.js","../../../../packages/react-reconciler/src/ReactCurrentFiber.js","../../../../packages/react-reconciler/src/ReactStrictModeWarnings.old.js","../../../../packages/react-reconciler/src/ReactFiberLazyComponent.old.js","../../../../packages/react-reconciler/src/MaxInts.js","../../../../packages/react-reconciler/src/ReactFiberNewContext.old.js","../../../../packages/react-reconciler/src/ReactUpdateQueue.old.js","../../../../packages/react-reconciler/src/ReactFiberClassComponent.old.js","../../../../packages/react-reconciler/src/ReactChildFiber.old.js","../../../../packages/react-reconciler/src/ReactFiberHostContext.old.js","../../../../packages/react-reconciler/src/ReactFiberSuspenseContext.old.js","../../../../packages/react-reconciler/src/ReactFiberSuspenseComponent.old.js","../../../../packages/react-reconciler/src/ReactHookEffectTags.js","../../../../packages/react-reconciler/src/ReactFiberHydrationContext.old.js","../../../../packages/react-reconciler/src/ReactMutableSource.old.js","../../../../packages/react-reconciler/src/ReactFiberHooks.old.js","../../../../packages/react-reconciler/src/ReactProfilerTimer.old.js","../../../../packages/react-reconciler/src/ReactFiberBeginWork.old.js","../../../../packages/react-reconciler/src/ReactFiberCompleteWork.old.js","../../../../packages/react-reconciler/src/ReactFiberUnwindWork.old.js","../../../../packages/react-reconciler/src/ReactCapturedValue.js","../../../../packages/react-reconciler/src/ReactFiberErrorDialog.js","../../../../packages/react-reconciler/src/ReactFiberErrorLogger.js","../../../../packages/react-reconciler/src/ReactFiberThrow.old.js","../../../../packages/shared/invokeGuardedCallbackImpl.js","../../../../packages/shared/ReactErrorUtils.js","../../../../packages/react-reconciler/src/ReactFiberCommitWork.old.js","../../../../packages/react-reconciler/src/ReactTestSelectors.js","../../../../packages/react-reconciler/src/ReactFiberWorkLoop.old.js","../../../../packages/react-reconciler/src/ReactFiberHotReloading.old.js","../../../../packages/react-reconciler/src/ReactFiber.old.js","../../../../packages/react-reconciler/src/ReactFiberRoot.old.js","../../../../packages/react-reconciler/src/ReactFiberReconciler.old.js","../../../../packages/react-art/src/ReactART.js"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// TODO: this is special because it gets imported during build.\nexport default '17.0.0';\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nexport type RootTag = 0 | 1 | 2;\n\nexport const LegacyRoot = 0;\nexport const BlockingRoot = 1;\nexport const ConcurrentRoot = 2;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport * as React from 'react';\n\nconst ReactSharedInternals =\n  React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n\nexport default ReactSharedInternals;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\n\n// In DEV, calls to console.warn and console.error get replaced\n// by calls to these methods by a Babel plugin.\n//\n// In PROD (or in packages without access to React internals),\n// they are left as they are instead.\n\nexport function warn(format, ...args) {\n  if (__DEV__) {\n    printWarning('warn', format, args);\n  }\n}\n\nexport function error(format, ...args) {\n  if (__DEV__) {\n    printWarning('error', format, args);\n  }\n}\n\nfunction printWarning(level, format, args) {\n  // When changing this logic, you might want to also\n  // update consoleWithStackDev.www.js as well.\n  if (__DEV__) {\n    const ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    const stack = ReactDebugCurrentFrame.getStackAddendum();\n    if (stack !== '') {\n      format += '%s';\n      args = args.concat([stack]);\n    }\n\n    const argsWithFormat = args.map(item => '' + item);\n    // Careful: RN currently depends on this prefix\n    argsWithFormat.unshift('Warning: ' + format);\n    // We intentionally don't use spread (or .apply) directly because it\n    // breaks IE9: https://github.com/facebook/react/issues/13610\n    // eslint-disable-next-line react-internal/no-production-logging\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nexport type WorkTag =\n  | 0\n  | 1\n  | 2\n  | 3\n  | 4\n  | 5\n  | 6\n  | 7\n  | 8\n  | 9\n  | 10\n  | 11\n  | 12\n  | 13\n  | 14\n  | 15\n  | 16\n  | 17\n  | 18\n  | 19\n  | 20\n  | 21\n  | 22\n  | 23\n  | 24;\n\nexport const FunctionComponent = 0;\nexport const ClassComponent = 1;\nexport const IndeterminateComponent = 2; // Before we know whether it is function or class\nexport const HostRoot = 3; // Root of a host tree. Could be nested inside another node.\nexport const HostPortal = 4; // A subtree. Could be an entry point to a different renderer.\nexport const HostComponent = 5;\nexport const HostText = 6;\nexport const Fragment = 7;\nexport const Mode = 8;\nexport const ContextConsumer = 9;\nexport const ContextProvider = 10;\nexport const ForwardRef = 11;\nexport const Profiler = 12;\nexport const SuspenseComponent = 13;\nexport const MemoComponent = 14;\nexport const SimpleMemoComponent = 15;\nexport const LazyComponent = 16;\nexport const IncompleteClassComponent = 17;\nexport const DehydratedFragment = 18;\nexport const SuspenseListComponent = 19;\nexport const FundamentalComponent = 20;\nexport const ScopeComponent = 21;\nexport const Block = 22;\nexport const OffscreenComponent = 23;\nexport const LegacyHiddenComponent = 24;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/**\n * `ReactInstanceMap` maintains a mapping from a public facing stateful\n * instance (key) and the internal representation (value). This allows public\n * methods to accept the user facing instance as an argument and map them back\n * to internal methods.\n *\n * Note that this module is currently shared and assumed to be stateless.\n * If this becomes an actual Map, that will break.\n */\n\n/**\n * This API should be called `delete` but we'd have to make sure to always\n * transform these to strings for IE support. When this transform is fully\n * supported we can rename it.\n */\nexport function remove(key) {\n  key._reactInternals = undefined;\n}\n\nexport function get(key) {\n  return key._reactInternals;\n}\n\nexport function has(key) {\n  return key._reactInternals !== undefined;\n}\n\nexport function set(key, value) {\n  key._reactInternals = value;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\n// ATTENTION\n// When adding new symbols to this file,\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n\n// The Symbol used to tag the ReactElement-like types. If there is no native Symbol\n// nor polyfill, then a plain number is used for performance.\nexport let REACT_ELEMENT_TYPE = 0xeac7;\nexport let REACT_PORTAL_TYPE = 0xeaca;\nexport let REACT_FRAGMENT_TYPE = 0xeacb;\nexport let REACT_STRICT_MODE_TYPE = 0xeacc;\nexport let REACT_PROFILER_TYPE = 0xead2;\nexport let REACT_PROVIDER_TYPE = 0xeacd;\nexport let REACT_CONTEXT_TYPE = 0xeace;\nexport let REACT_FORWARD_REF_TYPE = 0xead0;\nexport let REACT_SUSPENSE_TYPE = 0xead1;\nexport let REACT_SUSPENSE_LIST_TYPE = 0xead8;\nexport let REACT_MEMO_TYPE = 0xead3;\nexport let REACT_LAZY_TYPE = 0xead4;\nexport let REACT_BLOCK_TYPE = 0xead9;\nexport let REACT_SERVER_BLOCK_TYPE = 0xeada;\nexport let REACT_FUNDAMENTAL_TYPE = 0xead5;\nexport let REACT_SCOPE_TYPE = 0xead7;\nexport let REACT_OPAQUE_ID_TYPE = 0xeae0;\nexport let REACT_DEBUG_TRACING_MODE_TYPE = 0xeae1;\nexport let REACT_OFFSCREEN_TYPE = 0xeae2;\nexport let REACT_LEGACY_HIDDEN_TYPE = 0xeae3;\n\nif (typeof Symbol === 'function' && Symbol.for) {\n  const symbolFor = Symbol.for;\n  REACT_ELEMENT_TYPE = symbolFor('react.element');\n  REACT_PORTAL_TYPE = symbolFor('react.portal');\n  REACT_FRAGMENT_TYPE = symbolFor('react.fragment');\n  REACT_STRICT_MODE_TYPE = symbolFor('react.strict_mode');\n  REACT_PROFILER_TYPE = symbolFor('react.profiler');\n  REACT_PROVIDER_TYPE = symbolFor('react.provider');\n  REACT_CONTEXT_TYPE = symbolFor('react.context');\n  REACT_FORWARD_REF_TYPE = symbolFor('react.forward_ref');\n  REACT_SUSPENSE_TYPE = symbolFor('react.suspense');\n  REACT_SUSPENSE_LIST_TYPE = symbolFor('react.suspense_list');\n  REACT_MEMO_TYPE = symbolFor('react.memo');\n  REACT_LAZY_TYPE = symbolFor('react.lazy');\n  REACT_BLOCK_TYPE = symbolFor('react.block');\n  REACT_SERVER_BLOCK_TYPE = symbolFor('react.server.block');\n  REACT_FUNDAMENTAL_TYPE = symbolFor('react.fundamental');\n  REACT_SCOPE_TYPE = symbolFor('react.scope');\n  REACT_OPAQUE_ID_TYPE = symbolFor('react.opaque.id');\n  REACT_DEBUG_TRACING_MODE_TYPE = symbolFor('react.debug_trace_mode');\n  REACT_OFFSCREEN_TYPE = symbolFor('react.offscreen');\n  REACT_LEGACY_HIDDEN_TYPE = symbolFor('react.legacy_hidden');\n}\n\nconst MAYBE_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\nconst FAUX_ITERATOR_SYMBOL = '@@iterator';\n\nexport function getIteratorFn(maybeIterable: ?any): ?() => ?Iterator<*> {\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\n    return null;\n  }\n  const maybeIterator =\n    (MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL]) ||\n    maybeIterable[FAUX_ITERATOR_SYMBOL];\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n  return null;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {LazyComponent} from 'react/src/ReactLazy';\n\nimport {\n  REACT_CONTEXT_TYPE,\n  REACT_FORWARD_REF_TYPE,\n  REACT_FRAGMENT_TYPE,\n  REACT_PORTAL_TYPE,\n  REACT_MEMO_TYPE,\n  REACT_PROFILER_TYPE,\n  REACT_PROVIDER_TYPE,\n  REACT_STRICT_MODE_TYPE,\n  REACT_SUSPENSE_TYPE,\n  REACT_SUSPENSE_LIST_TYPE,\n  REACT_LAZY_TYPE,\n  REACT_BLOCK_TYPE,\n} from 'shared/ReactSymbols';\nimport type {ReactContext, ReactProviderType} from 'shared/ReactTypes';\n\nfunction getWrappedName(\n  outerType: mixed,\n  innerType: any,\n  wrapperName: string,\n): string {\n  const functionName = innerType.displayName || innerType.name || '';\n  return (\n    (outerType: any).displayName ||\n    (functionName !== '' ? `${wrapperName}(${functionName})` : wrapperName)\n  );\n}\n\nfunction getContextName(type: ReactContext<any>) {\n  return type.displayName || 'Context';\n}\n\nfunction getComponentName(type: mixed): string | null {\n  if (type == null) {\n    // Host root, text node or just invalid type.\n    return null;\n  }\n  if (__DEV__) {\n    if (typeof (type: any).tag === 'number') {\n      console.error(\n        'Received an unexpected object in getComponentName(). ' +\n          'This is likely a bug in React. Please file an issue.',\n      );\n    }\n  }\n  if (typeof type === 'function') {\n    return (type: any).displayName || type.name || null;\n  }\n  if (typeof type === 'string') {\n    return type;\n  }\n  switch (type) {\n    case REACT_FRAGMENT_TYPE:\n      return 'Fragment';\n    case REACT_PORTAL_TYPE:\n      return 'Portal';\n    case REACT_PROFILER_TYPE:\n      return 'Profiler';\n    case REACT_STRICT_MODE_TYPE:\n      return 'StrictMode';\n    case REACT_SUSPENSE_TYPE:\n      return 'Suspense';\n    case REACT_SUSPENSE_LIST_TYPE:\n      return 'SuspenseList';\n  }\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_CONTEXT_TYPE:\n        const context: ReactContext<any> = (type: any);\n        return getContextName(context) + '.Consumer';\n      case REACT_PROVIDER_TYPE:\n        const provider: ReactProviderType<any> = (type: any);\n        return getContextName(provider._context) + '.Provider';\n      case REACT_FORWARD_REF_TYPE:\n        return getWrappedName(type, type.render, 'ForwardRef');\n      case REACT_MEMO_TYPE:\n        return getComponentName(type.type);\n      case REACT_BLOCK_TYPE:\n        return getComponentName(type._render);\n      case REACT_LAZY_TYPE: {\n        const lazyComponent: LazyComponent<any, any> = (type: any);\n        const payload = lazyComponent._payload;\n        const init = lazyComponent._init;\n        try {\n          return getComponentName(init(payload));\n        } catch (x) {\n          return null;\n        }\n      }\n    }\n  }\n  return null;\n}\n\nexport default getComponentName;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nexport type Flags = number;\n\n// Don't change these two values. They're used by React Dev Tools.\nexport const NoFlags = /*                      */ 0b000000000000000000;\nexport const PerformedWork = /*                */ 0b000000000000000001;\n\n// You can change the rest (and add more).\nexport const Placement = /*                    */ 0b000000000000000010;\nexport const Update = /*                       */ 0b000000000000000100;\nexport const PlacementAndUpdate = /*           */ 0b000000000000000110;\nexport const Deletion = /*                     */ 0b000000000000001000;\nexport const ContentReset = /*                 */ 0b000000000000010000;\nexport const Callback = /*                     */ 0b000000000000100000;\nexport const DidCapture = /*                   */ 0b000000000001000000;\nexport const Ref = /*                          */ 0b000000000010000000;\nexport const Snapshot = /*                     */ 0b000000000100000000;\nexport const Passive = /*                      */ 0b000000001000000000;\n// TODO (effects) Remove this bit once the new reconciler is synced to the old.\nexport const PassiveUnmountPendingDev = /*     */ 0b000010000000000000;\nexport const Hydrating = /*                    */ 0b000000010000000000;\nexport const HydratingAndUpdate = /*           */ 0b000000010000000100;\n\n// Passive & Update & Callback & Ref & Snapshot\nexport const LifecycleEffectMask = /*          */ 0b000000001110100100;\n\n// Union of all host effects\nexport const HostEffectMask = /*               */ 0b000000011111111111;\n\n// These are not really side effects, but we still reuse this field.\nexport const Incomplete = /*                   */ 0b000000100000000000;\nexport const ShouldCapture = /*                */ 0b000001000000000000;\nexport const ForceUpdateForLegacySuspense = /* */ 0b000100000000000000;\n\n// Static tags describe aspects of a fiber that are not specific to a render,\n// e.g. a fiber uses a passive effect (even if there are no updates on this particular render).\n// This enables us to defer more work in the unmount case,\n// since we can defer traversing the tree during layout to look for Passive effects,\n// and instead rely on the static flag as a signal that there may be cleanup work.\nexport const PassiveStatic = /*                */ 0b001000000000000000;\n\n// Union of side effect groupings as pertains to subtreeFlags\nexport const BeforeMutationMask = /*           */ 0b000000001100001010;\nexport const MutationMask = /*                 */ 0b000000010010011110;\nexport const LayoutMask = /*                   */ 0b000000000010100100;\nexport const PassiveMask = /*                  */ 0b000000001000001000;\n\n// Union of tags that don't get reset on clones.\n// This allows certain concepts to persist without recalculting them,\n// e.g. whether a subtree contains passive effects or portals.\nexport const StaticMask = /*                   */ 0b001000000000000000;\n\n// These flags allow us to traverse to fibers that have effects on mount\n// without traversing the entire tree after every commit for\n// double invoking\nexport const MountLayoutDev = /*               */ 0b010000000000000000;\nexport const MountPassiveDev = /*              */ 0b100000000000000000;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n */\n\n// Filter certain DOM attributes (e.g. src, href) if their values are empty strings.\n// This prevents e.g. <img src=\"\"> from making an unnecessary HTTP request for certain browsers.\nexport const enableFilterEmptyStringAttributesDOM = false;\n\n// Adds verbose console logging for e.g. state updates, suspense, and work loop stuff.\n// Intended to enable React core members to more easily debug scheduling issues in DEV builds.\nexport const enableDebugTracing = false;\n\n// Adds user timing marks for e.g. state updates, suspense, and work loop stuff,\n// for an experimental scheduling profiler tool.\nexport const enableSchedulingProfiler = __PROFILE__ && __EXPERIMENTAL__;\n\n// Helps identify side effects in render-phase lifecycle hooks and setState\n// reducers by double invoking them in Strict Mode.\nexport const debugRenderPhaseSideEffectsForStrictMode = __DEV__;\n\n// To preserve the \"Pause on caught exceptions\" behavior of the debugger, we\n// replay the begin phase of a failed component inside invokeGuardedCallback.\nexport const replayFailedUnitOfWorkWithInvokeGuardedCallback = __DEV__;\n\n// Warn about deprecated, async-unsafe lifecycles; relates to RFC #6:\nexport const warnAboutDeprecatedLifecycles = true;\n\n// Gather advanced timing metrics for Profiler subtrees.\nexport const enableProfilerTimer = __PROFILE__;\n\n// Record durations for commit and passive effects phases.\nexport const enableProfilerCommitHooks = false;\n\n// Trace which interactions trigger each commit.\nexport const enableSchedulerTracing = __PROFILE__;\n\n// SSR experiments\nexport const enableSuspenseServerRenderer = __EXPERIMENTAL__;\nexport const enableSelectiveHydration = __EXPERIMENTAL__;\n\n// Flight experiments\nexport const enableBlocksAPI = __EXPERIMENTAL__;\nexport const enableLazyElements = __EXPERIMENTAL__;\n\n// Only used in www builds.\nexport const enableSchedulerDebugging = false;\n\n// Disable javascript: URL strings in href for XSS protection.\nexport const disableJavaScriptURLs = false;\n\n// Experimental Host Component support.\nexport const enableFundamentalAPI = false;\n\n// Experimental Scope support.\nexport const enableScopeAPI = false;\n\n// Experimental Create Event Handle API.\nexport const enableCreateEventHandleAPI = false;\n\n// New API for JSX transforms to target - https://github.com/reactjs/rfcs/pull/107\n\n// We will enforce mocking scheduler with scheduler/unstable_mock at some point. (v18?)\n// Till then, we warn about the missing mock, but still fallback to a legacy mode compatible version\nexport const warnAboutUnmockedScheduler = false;\n\n// Add a callback property to suspense to notify which promises are currently\n// in the update queue. This allows reporting and tracing of what is causing\n// the user to see a loading state.\n// Also allows hydration callbacks to fire when a dehydrated boundary gets\n// hydrated or deleted.\nexport const enableSuspenseCallback = false;\n\n// Part of the simplification of React.createElement so we can eventually move\n// from React.createElement to React.jsx\n// https://github.com/reactjs/rfcs/blob/createlement-rfc/text/0000-create-element-changes.md\nexport const warnAboutDefaultPropsOnFunctionComponents = false;\n\nexport const disableSchedulerTimeoutBasedOnReactExpirationTime = false;\n\nexport const enableTrustedTypesIntegration = false;\n\n// Enables a warning when trying to spread a 'key' to an element;\n// a deprecated pattern we want to get rid of in the future\nexport const warnAboutSpreadingKeyToJSX = false;\n\nexport const enableComponentStackLocations = true;\n\nexport const enableNewReconciler = false;\n\n// Errors that are thrown while unmounting (or after in the case of passive effects)\n// should bypass any error boundaries that are also unmounting (or have unmounted)\n// and be handled by the nearest still-mounted boundary.\n// If there are no still-mounted boundaries, the errors should be rethrown.\nexport const skipUnmountedBoundaries = false;\n\n// --------------------------\n// Future APIs to be deprecated\n// --------------------------\n\n// Prevent the value and checked attributes from syncing\n// with their related DOM properties\nexport const disableInputAttributeSyncing = false;\n\nexport const warnAboutStringRefs = false;\n\nexport const disableLegacyContext = false;\n\n// Disables children for <textarea> elements\nexport const disableTextareaChildren = false;\n\nexport const disableModulePatternComponents = false;\n\n// We should remove this flag once the above flag becomes enabled\nexport const warnUnstableRenderSubtreeIntoContainer = false;\n\n// Support legacy Primer support on internal FB www\nexport const enableLegacyFBSupport = false;\n\n// Updates that occur in the render phase are not officially supported. But when\n// they do occur, we defer them to a subsequent render by picking a lane that's\n// not currently rendering. We treat them the same as if they came from an\n// interleaved event. Remove this flag once we have migrated to the\n// new behavior.\nexport const deferRenderPhaseUpdateToNextBatch = true;\n\n// Replacement for runWithPriority in React internals.\nexport const decoupleUpdatePriorityFromScheduler = false;\n\nexport const enableDiscreteEventFlushingChange = false;\n\nexport const enableEagerRootListeners = true;\n\nexport const enableDoubleInvokingEffects = false;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactInternalTypes';\nimport type {Container, SuspenseInstance} from './ReactFiberHostConfig';\nimport type {SuspenseState} from './ReactFiberSuspenseComponent.old';\n\nimport invariant from 'shared/invariant';\n\nimport {get as getInstance} from 'shared/ReactInstanceMap';\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\nimport getComponentName from 'shared/getComponentName';\nimport {\n  ClassComponent,\n  HostComponent,\n  HostRoot,\n  HostPortal,\n  HostText,\n  FundamentalComponent,\n  SuspenseComponent,\n} from './ReactWorkTags';\nimport {NoFlags, Placement, Hydrating} from './ReactFiberFlags';\nimport {enableFundamentalAPI} from 'shared/ReactFeatureFlags';\n\nconst ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\n\nexport function getNearestMountedFiber(fiber: Fiber): null | Fiber {\n  let node = fiber;\n  let nearestMounted = fiber;\n  if (!fiber.alternate) {\n    // If there is no alternate, this might be a new tree that isn't inserted\n    // yet. If it is, then it will have a pending insertion effect on it.\n    let nextNode = node;\n    do {\n      node = nextNode;\n      if ((node.flags & (Placement | Hydrating)) !== NoFlags) {\n        // This is an insertion or in-progress hydration. The nearest possible\n        // mounted fiber is the parent but we need to continue to figure out\n        // if that one is still mounted.\n        nearestMounted = node.return;\n      }\n      nextNode = node.return;\n    } while (nextNode);\n  } else {\n    while (node.return) {\n      node = node.return;\n    }\n  }\n  if (node.tag === HostRoot) {\n    // TODO: Check if this was a nested HostRoot when used with\n    // renderContainerIntoSubtree.\n    return nearestMounted;\n  }\n  // If we didn't hit the root, that means that we're in an disconnected tree\n  // that has been unmounted.\n  return null;\n}\n\nexport function getSuspenseInstanceFromFiber(\n  fiber: Fiber,\n): null | SuspenseInstance {\n  if (fiber.tag === SuspenseComponent) {\n    let suspenseState: SuspenseState | null = fiber.memoizedState;\n    if (suspenseState === null) {\n      const current = fiber.alternate;\n      if (current !== null) {\n        suspenseState = current.memoizedState;\n      }\n    }\n    if (suspenseState !== null) {\n      return suspenseState.dehydrated;\n    }\n  }\n  return null;\n}\n\nexport function getContainerFromFiber(fiber: Fiber): null | Container {\n  return fiber.tag === HostRoot\n    ? (fiber.stateNode.containerInfo: Container)\n    : null;\n}\n\nexport function isFiberMounted(fiber: Fiber): boolean {\n  return getNearestMountedFiber(fiber) === fiber;\n}\n\nexport function isMounted(component: React$Component<any, any>): boolean {\n  if (__DEV__) {\n    const owner = (ReactCurrentOwner.current: any);\n    if (owner !== null && owner.tag === ClassComponent) {\n      const ownerFiber: Fiber = owner;\n      const instance = ownerFiber.stateNode;\n      if (!instance._warnedAboutRefsInRender) {\n        console.error(\n          '%s is accessing isMounted inside its render() function. ' +\n            'render() should be a pure function of props and state. It should ' +\n            'never access something that requires stale data from the previous ' +\n            'render, such as refs. Move this logic to componentDidMount and ' +\n            'componentDidUpdate instead.',\n          getComponentName(ownerFiber.type) || 'A component',\n        );\n      }\n      instance._warnedAboutRefsInRender = true;\n    }\n  }\n\n  const fiber: ?Fiber = getInstance(component);\n  if (!fiber) {\n    return false;\n  }\n  return getNearestMountedFiber(fiber) === fiber;\n}\n\nfunction assertIsMounted(fiber) {\n  invariant(\n    getNearestMountedFiber(fiber) === fiber,\n    'Unable to find node on an unmounted component.',\n  );\n}\n\nexport function findCurrentFiberUsingSlowPath(fiber: Fiber): Fiber | null {\n  const alternate = fiber.alternate;\n  if (!alternate) {\n    // If there is no alternate, then we only need to check if it is mounted.\n    const nearestMounted = getNearestMountedFiber(fiber);\n    invariant(\n      nearestMounted !== null,\n      'Unable to find node on an unmounted component.',\n    );\n    if (nearestMounted !== fiber) {\n      return null;\n    }\n    return fiber;\n  }\n  // If we have two possible branches, we'll walk backwards up to the root\n  // to see what path the root points to. On the way we may hit one of the\n  // special cases and we'll deal with them.\n  let a: Fiber = fiber;\n  let b: Fiber = alternate;\n  while (true) {\n    const parentA = a.return;\n    if (parentA === null) {\n      // We're at the root.\n      break;\n    }\n    const parentB = parentA.alternate;\n    if (parentB === null) {\n      // There is no alternate. This is an unusual case. Currently, it only\n      // happens when a Suspense component is hidden. An extra fragment fiber\n      // is inserted in between the Suspense fiber and its children. Skip\n      // over this extra fragment fiber and proceed to the next parent.\n      const nextParent = parentA.return;\n      if (nextParent !== null) {\n        a = b = nextParent;\n        continue;\n      }\n      // If there's no parent, we're at the root.\n      break;\n    }\n\n    // If both copies of the parent fiber point to the same child, we can\n    // assume that the child is current. This happens when we bailout on low\n    // priority: the bailed out fiber's child reuses the current child.\n    if (parentA.child === parentB.child) {\n      let child = parentA.child;\n      while (child) {\n        if (child === a) {\n          // We've determined that A is the current branch.\n          assertIsMounted(parentA);\n          return fiber;\n        }\n        if (child === b) {\n          // We've determined that B is the current branch.\n          assertIsMounted(parentA);\n          return alternate;\n        }\n        child = child.sibling;\n      }\n      // We should never have an alternate for any mounting node. So the only\n      // way this could possibly happen is if this was unmounted, if at all.\n      invariant(false, 'Unable to find node on an unmounted component.');\n    }\n\n    if (a.return !== b.return) {\n      // The return pointer of A and the return pointer of B point to different\n      // fibers. We assume that return pointers never criss-cross, so A must\n      // belong to the child set of A.return, and B must belong to the child\n      // set of B.return.\n      a = parentA;\n      b = parentB;\n    } else {\n      // The return pointers point to the same fiber. We'll have to use the\n      // default, slow path: scan the child sets of each parent alternate to see\n      // which child belongs to which set.\n      //\n      // Search parent A's child set\n      let didFindChild = false;\n      let child = parentA.child;\n      while (child) {\n        if (child === a) {\n          didFindChild = true;\n          a = parentA;\n          b = parentB;\n          break;\n        }\n        if (child === b) {\n          didFindChild = true;\n          b = parentA;\n          a = parentB;\n          break;\n        }\n        child = child.sibling;\n      }\n      if (!didFindChild) {\n        // Search parent B's child set\n        child = parentB.child;\n        while (child) {\n          if (child === a) {\n            didFindChild = true;\n            a = parentB;\n            b = parentA;\n            break;\n          }\n          if (child === b) {\n            didFindChild = true;\n            b = parentB;\n            a = parentA;\n            break;\n          }\n          child = child.sibling;\n        }\n        invariant(\n          didFindChild,\n          'Child was not found in either parent set. This indicates a bug ' +\n            'in React related to the return pointer. Please file an issue.',\n        );\n      }\n    }\n\n    invariant(\n      a.alternate === b,\n      \"Return fibers should always be each others' alternates. \" +\n        'This error is likely caused by a bug in React. Please file an issue.',\n    );\n  }\n  // If the root is not a host container, we're in a disconnected tree. I.e.\n  // unmounted.\n  invariant(\n    a.tag === HostRoot,\n    'Unable to find node on an unmounted component.',\n  );\n  if (a.stateNode.current === a) {\n    // We've determined that A is the current branch.\n    return fiber;\n  }\n  // Otherwise B has to be current branch.\n  return alternate;\n}\n\nexport function findCurrentHostFiber(parent: Fiber): Fiber | null {\n  const currentParent = findCurrentFiberUsingSlowPath(parent);\n  if (!currentParent) {\n    return null;\n  }\n\n  // Next we'll drill down this component to find the first HostComponent/Text.\n  let node: Fiber = currentParent;\n  while (true) {\n    if (node.tag === HostComponent || node.tag === HostText) {\n      return node;\n    } else if (node.child) {\n      node.child.return = node;\n      node = node.child;\n      continue;\n    }\n    if (node === currentParent) {\n      return null;\n    }\n    while (!node.sibling) {\n      if (!node.return || node.return === currentParent) {\n        return null;\n      }\n      node = node.return;\n    }\n    node.sibling.return = node.return;\n    node = node.sibling;\n  }\n  // Flow needs the return null here, but ESLint complains about it.\n  // eslint-disable-next-line no-unreachable\n  return null;\n}\n\nexport function findCurrentHostFiberWithNoPortals(parent: Fiber): Fiber | null {\n  const currentParent = findCurrentFiberUsingSlowPath(parent);\n  if (!currentParent) {\n    return null;\n  }\n\n  // Next we'll drill down this component to find the first HostComponent/Text.\n  let node: Fiber = currentParent;\n  while (true) {\n    if (\n      node.tag === HostComponent ||\n      node.tag === HostText ||\n      (enableFundamentalAPI && node.tag === FundamentalComponent)\n    ) {\n      return node;\n    } else if (node.child && node.tag !== HostPortal) {\n      node.child.return = node;\n      node = node.child;\n      continue;\n    }\n    if (node === currentParent) {\n      return null;\n    }\n    while (!node.sibling) {\n      if (!node.return || node.return === currentParent) {\n        return null;\n      }\n      node = node.return;\n    }\n    node.sibling.return = node.return;\n    node = node.sibling;\n  }\n  // Flow needs the return null here, but ESLint complains about it.\n  // eslint-disable-next-line no-unreachable\n  return null;\n}\n\nexport function isFiberSuspenseAndTimedOut(fiber: Fiber): boolean {\n  const memoizedState = fiber.memoizedState;\n  return (\n    fiber.tag === SuspenseComponent &&\n    memoizedState !== null &&\n    memoizedState.dehydrated === null\n  );\n}\n\nexport function doesFiberContain(\n  parentFiber: Fiber,\n  childFiber: Fiber,\n): boolean {\n  let node = childFiber;\n  const parentFiberAlternate = parentFiber.alternate;\n  while (node !== null) {\n    if (node === parentFiber || node === parentFiberAlternate) {\n      return true;\n    }\n    node = node.return;\n  }\n  return false;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport const TYPES = {\n  CLIPPING_RECTANGLE: 'ClippingRectangle',\n  GROUP: 'Group',\n  SHAPE: 'Shape',\n  TEXT: 'Text',\n};\n\nexport const EVENT_TYPES = {\n  onClick: 'click',\n  onMouseMove: 'mousemove',\n  onMouseOver: 'mouseover',\n  onMouseOut: 'mouseout',\n  onMouseUp: 'mouseup',\n  onMouseDown: 'mousedown',\n};\n\nexport function childrenAsString(children) {\n  if (!children) {\n    return '';\n  } else if (typeof children === 'string') {\n    return children;\n  } else if (children.length) {\n    return children.join('');\n  } else {\n    return '';\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport invariant from 'shared/invariant';\n\n// Renderers that don't support hydration\n// can re-export everything from this module.\n\nfunction shim(...args: any) {\n  invariant(\n    false,\n    'The current renderer does not support hydration. ' +\n      'This error is likely caused by a bug in React. ' +\n      'Please file an issue.',\n  );\n}\n\n// Hydration (when unsupported)\nexport type SuspenseInstance = mixed;\nexport const supportsHydration = false;\nexport const canHydrateInstance = shim;\nexport const canHydrateTextInstance = shim;\nexport const canHydrateSuspenseInstance = shim;\nexport const isSuspenseInstancePending = shim;\nexport const isSuspenseInstanceFallback = shim;\nexport const registerSuspenseInstanceRetry = shim;\nexport const getNextHydratableSibling = shim;\nexport const getFirstHydratableChild = shim;\nexport const hydrateInstance = shim;\nexport const hydrateTextInstance = shim;\nexport const hydrateSuspenseInstance = shim;\nexport const getNextHydratableInstanceAfterSuspenseInstance = shim;\nexport const commitHydratedContainer = shim;\nexport const commitHydratedSuspenseInstance = shim;\nexport const clearSuspenseBoundary = shim;\nexport const clearSuspenseBoundaryFromContainer = shim;\nexport const didNotMatchHydratedContainerTextInstance = shim;\nexport const didNotMatchHydratedTextInstance = shim;\nexport const didNotHydrateContainerInstance = shim;\nexport const didNotHydrateInstance = shim;\nexport const didNotFindHydratableContainerInstance = shim;\nexport const didNotFindHydratableContainerTextInstance = shim;\nexport const didNotFindHydratableContainerSuspenseInstance = shim;\nexport const didNotFindHydratableInstance = shim;\nexport const didNotFindHydratableTextInstance = shim;\nexport const didNotFindHydratableSuspenseInstance = shim;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport Transform from 'art/core/transform';\nimport Mode from 'art/modes/current';\nimport invariant from 'shared/invariant';\n\nimport {TYPES, EVENT_TYPES, childrenAsString} from './ReactARTInternals';\n\nconst pooledTransform = new Transform();\n\nconst NO_CONTEXT = {};\nconst UPDATE_SIGNAL = {};\nif (__DEV__) {\n  Object.freeze(NO_CONTEXT);\n  Object.freeze(UPDATE_SIGNAL);\n}\n\n/** Helper Methods */\n\nfunction addEventListeners(instance, type, listener) {\n  // We need to explicitly unregister before unmount.\n  // For this reason we need to track subscriptions.\n  if (!instance._listeners) {\n    instance._listeners = {};\n    instance._subscriptions = {};\n  }\n\n  instance._listeners[type] = listener;\n\n  if (listener) {\n    if (!instance._subscriptions[type]) {\n      instance._subscriptions[type] = instance.subscribe(\n        type,\n        createEventHandler(instance),\n        instance,\n      );\n    }\n  } else {\n    if (instance._subscriptions[type]) {\n      instance._subscriptions[type]();\n      delete instance._subscriptions[type];\n    }\n  }\n}\n\nfunction createEventHandler(instance) {\n  return function handleEvent(event) {\n    const listener = instance._listeners[event.type];\n\n    if (!listener) {\n      // Noop\n    } else if (typeof listener === 'function') {\n      listener.call(instance, event);\n    } else if (listener.handleEvent) {\n      listener.handleEvent(event);\n    }\n  };\n}\n\nfunction destroyEventListeners(instance) {\n  if (instance._subscriptions) {\n    for (const type in instance._subscriptions) {\n      instance._subscriptions[type]();\n    }\n  }\n\n  instance._subscriptions = null;\n  instance._listeners = null;\n}\n\nfunction getScaleX(props) {\n  if (props.scaleX != null) {\n    return props.scaleX;\n  } else if (props.scale != null) {\n    return props.scale;\n  } else {\n    return 1;\n  }\n}\n\nfunction getScaleY(props) {\n  if (props.scaleY != null) {\n    return props.scaleY;\n  } else if (props.scale != null) {\n    return props.scale;\n  } else {\n    return 1;\n  }\n}\n\nfunction isSameFont(oldFont, newFont) {\n  if (oldFont === newFont) {\n    return true;\n  } else if (typeof newFont === 'string' || typeof oldFont === 'string') {\n    return false;\n  } else {\n    return (\n      newFont.fontSize === oldFont.fontSize &&\n      newFont.fontStyle === oldFont.fontStyle &&\n      newFont.fontVariant === oldFont.fontVariant &&\n      newFont.fontWeight === oldFont.fontWeight &&\n      newFont.fontFamily === oldFont.fontFamily\n    );\n  }\n}\n\n/** Render Methods */\n\nfunction applyClippingRectangleProps(instance, props, prevProps = {}) {\n  applyNodeProps(instance, props, prevProps);\n\n  instance.width = props.width;\n  instance.height = props.height;\n}\n\nfunction applyGroupProps(instance, props, prevProps = {}) {\n  applyNodeProps(instance, props, prevProps);\n\n  instance.width = props.width;\n  instance.height = props.height;\n}\n\nfunction applyNodeProps(instance, props, prevProps = {}) {\n  const scaleX = getScaleX(props);\n  const scaleY = getScaleY(props);\n\n  pooledTransform\n    .transformTo(1, 0, 0, 1, 0, 0)\n    .move(props.x || 0, props.y || 0)\n    .rotate(props.rotation || 0, props.originX, props.originY)\n    .scale(scaleX, scaleY, props.originX, props.originY);\n\n  if (props.transform != null) {\n    pooledTransform.transform(props.transform);\n  }\n\n  if (\n    instance.xx !== pooledTransform.xx ||\n    instance.yx !== pooledTransform.yx ||\n    instance.xy !== pooledTransform.xy ||\n    instance.yy !== pooledTransform.yy ||\n    instance.x !== pooledTransform.x ||\n    instance.y !== pooledTransform.y\n  ) {\n    instance.transformTo(pooledTransform);\n  }\n\n  if (props.cursor !== prevProps.cursor || props.title !== prevProps.title) {\n    instance.indicate(props.cursor, props.title);\n  }\n\n  if (instance.blend && props.opacity !== prevProps.opacity) {\n    instance.blend(props.opacity == null ? 1 : props.opacity);\n  }\n\n  if (props.visible !== prevProps.visible) {\n    if (props.visible == null || props.visible) {\n      instance.show();\n    } else {\n      instance.hide();\n    }\n  }\n\n  for (const type in EVENT_TYPES) {\n    addEventListeners(instance, EVENT_TYPES[type], props[type]);\n  }\n}\n\nfunction applyRenderableNodeProps(instance, props, prevProps = {}) {\n  applyNodeProps(instance, props, prevProps);\n\n  if (prevProps.fill !== props.fill) {\n    if (props.fill && props.fill.applyFill) {\n      props.fill.applyFill(instance);\n    } else {\n      instance.fill(props.fill);\n    }\n  }\n  if (\n    prevProps.stroke !== props.stroke ||\n    prevProps.strokeWidth !== props.strokeWidth ||\n    prevProps.strokeCap !== props.strokeCap ||\n    prevProps.strokeJoin !== props.strokeJoin ||\n    // TODO: Consider deep check of stokeDash; may benefit VML in IE.\n    prevProps.strokeDash !== props.strokeDash\n  ) {\n    instance.stroke(\n      props.stroke,\n      props.strokeWidth,\n      props.strokeCap,\n      props.strokeJoin,\n      props.strokeDash,\n    );\n  }\n}\n\nfunction applyShapeProps(instance, props, prevProps = {}) {\n  applyRenderableNodeProps(instance, props, prevProps);\n\n  const path = props.d || childrenAsString(props.children);\n\n  const prevDelta = instance._prevDelta;\n  const prevPath = instance._prevPath;\n\n  if (\n    path !== prevPath ||\n    path.delta !== prevDelta ||\n    prevProps.height !== props.height ||\n    prevProps.width !== props.width\n  ) {\n    instance.draw(path, props.width, props.height);\n\n    instance._prevDelta = path.delta;\n    instance._prevPath = path;\n  }\n}\n\nfunction applyTextProps(instance, props, prevProps = {}) {\n  applyRenderableNodeProps(instance, props, prevProps);\n\n  const string = props.children;\n\n  if (\n    instance._currentString !== string ||\n    !isSameFont(props.font, prevProps.font) ||\n    props.alignment !== prevProps.alignment ||\n    props.path !== prevProps.path\n  ) {\n    instance.draw(string, props.font, props.alignment, props.path);\n\n    instance._currentString = string;\n  }\n}\n\nexport * from 'react-reconciler/src/ReactFiberHostConfigWithNoPersistence';\nexport * from 'react-reconciler/src/ReactFiberHostConfigWithNoHydration';\nexport * from 'react-reconciler/src/ReactFiberHostConfigWithNoScopes';\nexport * from 'react-reconciler/src/ReactFiberHostConfigWithNoTestSelectors';\n\nexport function appendInitialChild(parentInstance, child) {\n  if (typeof child === 'string') {\n    // Noop for string children of Text (eg <Text>{'foo'}{'bar'}</Text>)\n    invariant(false, 'Text children should already be flattened.');\n    return;\n  }\n\n  child.inject(parentInstance);\n}\n\nexport function createInstance(type, props, internalInstanceHandle) {\n  let instance;\n\n  switch (type) {\n    case TYPES.CLIPPING_RECTANGLE:\n      instance = Mode.ClippingRectangle();\n      instance._applyProps = applyClippingRectangleProps;\n      break;\n    case TYPES.GROUP:\n      instance = Mode.Group();\n      instance._applyProps = applyGroupProps;\n      break;\n    case TYPES.SHAPE:\n      instance = Mode.Shape();\n      instance._applyProps = applyShapeProps;\n      break;\n    case TYPES.TEXT:\n      instance = Mode.Text(\n        props.children,\n        props.font,\n        props.alignment,\n        props.path,\n      );\n      instance._applyProps = applyTextProps;\n      break;\n  }\n\n  invariant(instance, 'ReactART does not support the type \"%s\"', type);\n\n  instance._applyProps(instance, props);\n\n  return instance;\n}\n\nexport function createTextInstance(\n  text,\n  rootContainerInstance,\n  internalInstanceHandle,\n) {\n  return text;\n}\n\nexport function finalizeInitialChildren(domElement, type, props) {\n  return false;\n}\n\nexport function getPublicInstance(instance) {\n  return instance;\n}\n\nexport function prepareForCommit() {\n  // Noop\n  return null;\n}\n\nexport function prepareUpdate(domElement, type, oldProps, newProps) {\n  return UPDATE_SIGNAL;\n}\n\nexport function resetAfterCommit() {\n  // Noop\n}\n\nexport function resetTextContent(domElement) {\n  // Noop\n}\n\nexport function getRootHostContext() {\n  return NO_CONTEXT;\n}\n\nexport function getChildHostContext() {\n  return NO_CONTEXT;\n}\n\nexport const scheduleTimeout = setTimeout;\nexport const cancelTimeout = clearTimeout;\nexport const noTimeout = -1;\n\nexport function shouldSetTextContent(type, props) {\n  return (\n    typeof props.children === 'string' || typeof props.children === 'number'\n  );\n}\n\n// The ART renderer is secondary to the React DOM renderer.\nexport const isPrimaryRenderer = false;\n\n// The ART renderer shouldn't trigger missing act() warnings\nexport const warnsIfNotActing = false;\n\nexport const supportsMutation = true;\n\nexport function appendChild(parentInstance, child) {\n  if (child.parentNode === parentInstance) {\n    child.eject();\n  }\n  child.inject(parentInstance);\n}\n\nexport function appendChildToContainer(parentInstance, child) {\n  if (child.parentNode === parentInstance) {\n    child.eject();\n  }\n  child.inject(parentInstance);\n}\n\nexport function insertBefore(parentInstance, child, beforeChild) {\n  invariant(\n    child !== beforeChild,\n    'ReactART: Can not insert node before itself',\n  );\n  child.injectBefore(beforeChild);\n}\n\nexport function insertInContainerBefore(parentInstance, child, beforeChild) {\n  invariant(\n    child !== beforeChild,\n    'ReactART: Can not insert node before itself',\n  );\n  child.injectBefore(beforeChild);\n}\n\nexport function removeChild(parentInstance, child) {\n  destroyEventListeners(child);\n  child.eject();\n}\n\nexport function removeChildFromContainer(parentInstance, child) {\n  destroyEventListeners(child);\n  child.eject();\n}\n\nexport function commitTextUpdate(textInstance, oldText, newText) {\n  // Noop\n}\n\nexport function commitMount(instance, type, newProps) {\n  // Noop\n}\n\nexport function commitUpdate(\n  instance,\n  updatePayload,\n  type,\n  oldProps,\n  newProps,\n) {\n  instance._applyProps(instance, newProps, oldProps);\n}\n\nexport function hideInstance(instance) {\n  instance.hide();\n}\n\nexport function hideTextInstance(textInstance) {\n  // Noop\n}\n\nexport function unhideInstance(instance, props) {\n  if (props.visible == null || props.visible) {\n    instance.show();\n  }\n}\n\nexport function unhideTextInstance(textInstance, text): void {\n  // Noop\n}\n\nexport function clearContainer(container) {\n  // TODO Implement this\n}\n\nexport function getFundamentalComponentInstance(fundamentalInstance) {\n  throw new Error('Not yet implemented.');\n}\n\nexport function mountFundamentalComponent(fundamentalInstance) {\n  throw new Error('Not yet implemented.');\n}\n\nexport function shouldUpdateFundamentalComponent(fundamentalInstance) {\n  throw new Error('Not yet implemented.');\n}\n\nexport function updateFundamentalComponent(fundamentalInstance) {\n  throw new Error('Not yet implemented.');\n}\n\nexport function unmountFundamentalComponent(fundamentalInstance) {\n  throw new Error('Not yet implemented.');\n}\n\nexport function getInstanceFromNode(node) {\n  throw new Error('Not yet implemented.');\n}\n\nexport function isOpaqueHydratingObject(value: mixed): boolean {\n  throw new Error('Not yet implemented');\n}\n\nexport function makeOpaqueHydratingObject(\n  attemptToReadValue: () => void,\n): OpaqueIDType {\n  throw new Error('Not yet implemented.');\n}\n\nexport function makeClientId(): OpaqueIDType {\n  throw new Error('Not yet implemented');\n}\n\nexport function makeClientIdInDEV(warnOnAccessInDEV: () => void): OpaqueIDType {\n  throw new Error('Not yet implemented');\n}\n\nexport function beforeActiveInstanceBlur() {\n  // noop\n}\n\nexport function afterActiveInstanceBlur() {\n  // noop\n}\n\nexport function preparePortalMount(portalInstance: any): void {\n  // noop\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\n// Helpers to patch console.logs to avoid logging during side-effect free\n// replaying on render function. This currently only patches the object\n// lazily which won't cover if the log function was extracted eagerly.\n// We could also eagerly patch the method.\n\nlet disabledDepth = 0;\nlet prevLog;\nlet prevInfo;\nlet prevWarn;\nlet prevError;\nlet prevGroup;\nlet prevGroupCollapsed;\nlet prevGroupEnd;\n\nfunction disabledLog() {}\ndisabledLog.__reactDisabledLog = true;\n\nexport function disableLogs(): void {\n  if (__DEV__) {\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      prevLog = console.log;\n      prevInfo = console.info;\n      prevWarn = console.warn;\n      prevError = console.error;\n      prevGroup = console.group;\n      prevGroupCollapsed = console.groupCollapsed;\n      prevGroupEnd = console.groupEnd;\n      // https://github.com/facebook/react/issues/19099\n      const props = {\n        configurable: true,\n        enumerable: true,\n        value: disabledLog,\n        writable: true,\n      };\n      // $FlowFixMe Flow thinks console is immutable.\n      Object.defineProperties(console, {\n        info: props,\n        log: props,\n        warn: props,\n        error: props,\n        group: props,\n        groupCollapsed: props,\n        groupEnd: props,\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n    disabledDepth++;\n  }\n}\n\nexport function reenableLogs(): void {\n  if (__DEV__) {\n    disabledDepth--;\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      const props = {\n        configurable: true,\n        enumerable: true,\n        writable: true,\n      };\n      // $FlowFixMe Flow thinks console is immutable.\n      Object.defineProperties(console, {\n        log: {...props, value: prevLog},\n        info: {...props, value: prevInfo},\n        warn: {...props, value: prevWarn},\n        error: {...props, value: prevError},\n        group: {...props, value: prevGroup},\n        groupCollapsed: {...props, value: prevGroupCollapsed},\n        groupEnd: {...props, value: prevGroupEnd},\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n    if (disabledDepth < 0) {\n      console.error(\n        'disabledDepth fell below zero. ' +\n          'This is a bug in React. Please file an issue.',\n      );\n    }\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Source} from 'shared/ReactElementType';\nimport type {LazyComponent} from 'react/src/ReactLazy';\n\nimport {enableComponentStackLocations} from 'shared/ReactFeatureFlags';\n\nimport {\n  REACT_SUSPENSE_TYPE,\n  REACT_SUSPENSE_LIST_TYPE,\n  REACT_FORWARD_REF_TYPE,\n  REACT_MEMO_TYPE,\n  REACT_BLOCK_TYPE,\n  REACT_LAZY_TYPE,\n} from 'shared/ReactSymbols';\n\nimport {disableLogs, reenableLogs} from 'shared/ConsolePatchingDev';\n\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\n\nconst {ReactCurrentDispatcher} = ReactSharedInternals;\n\nlet prefix;\nexport function describeBuiltInComponentFrame(\n  name: string,\n  source: void | null | Source,\n  ownerFn: void | null | Function,\n): string {\n  if (enableComponentStackLocations) {\n    if (prefix === undefined) {\n      // Extract the VM specific prefix used by each line.\n      try {\n        throw Error();\n      } catch (x) {\n        const match = x.stack.trim().match(/\\n( *(at )?)/);\n        prefix = (match && match[1]) || '';\n      }\n    }\n    // We use the prefix to ensure our stacks line up with native stack frames.\n    return '\\n' + prefix + name;\n  } else {\n    let ownerName = null;\n    if (__DEV__ && ownerFn) {\n      ownerName = ownerFn.displayName || ownerFn.name || null;\n    }\n    return describeComponentFrame(name, source, ownerName);\n  }\n}\n\nlet reentry = false;\nlet componentFrameCache;\nif (__DEV__) {\n  const PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\n  componentFrameCache = new PossiblyWeakMap();\n}\n\nexport function describeNativeComponentFrame(\n  fn: Function,\n  construct: boolean,\n): string {\n  // If something asked for a stack inside a fake render, it should get ignored.\n  if (!fn || reentry) {\n    return '';\n  }\n\n  if (__DEV__) {\n    const frame = componentFrameCache.get(fn);\n    if (frame !== undefined) {\n      return frame;\n    }\n  }\n\n  let control;\n\n  reentry = true;\n  const previousPrepareStackTrace = Error.prepareStackTrace;\n  // $FlowFixMe It does accept undefined.\n  Error.prepareStackTrace = undefined;\n  let previousDispatcher;\n  if (__DEV__) {\n    previousDispatcher = ReactCurrentDispatcher.current;\n    // Set the dispatcher in DEV because this might be call in the render function\n    // for warnings.\n    ReactCurrentDispatcher.current = null;\n    disableLogs();\n  }\n  try {\n    // This should throw.\n    if (construct) {\n      // Something should be setting the props in the constructor.\n      const Fake = function() {\n        throw Error();\n      };\n      // $FlowFixMe\n      Object.defineProperty(Fake.prototype, 'props', {\n        set: function() {\n          // We use a throwing setter instead of frozen or non-writable props\n          // because that won't throw in a non-strict mode function.\n          throw Error();\n        },\n      });\n      if (typeof Reflect === 'object' && Reflect.construct) {\n        // We construct a different control for this case to include any extra\n        // frames added by the construct call.\n        try {\n          Reflect.construct(Fake, []);\n        } catch (x) {\n          control = x;\n        }\n        Reflect.construct(fn, [], Fake);\n      } else {\n        try {\n          Fake.call();\n        } catch (x) {\n          control = x;\n        }\n        fn.call(Fake.prototype);\n      }\n    } else {\n      try {\n        throw Error();\n      } catch (x) {\n        control = x;\n      }\n      fn();\n    }\n  } catch (sample) {\n    // This is inlined manually because closure doesn't do it for us.\n    if (sample && control && typeof sample.stack === 'string') {\n      // This extracts the first frame from the sample that isn't also in the control.\n      // Skipping one frame that we assume is the frame that calls the two.\n      const sampleLines = sample.stack.split('\\n');\n      const controlLines = control.stack.split('\\n');\n      let s = sampleLines.length - 1;\n      let c = controlLines.length - 1;\n      while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {\n        // We expect at least one stack frame to be shared.\n        // Typically this will be the root most one. However, stack frames may be\n        // cut off due to maximum stack limits. In this case, one maybe cut off\n        // earlier than the other. We assume that the sample is longer or the same\n        // and there for cut off earlier. So we should find the root most frame in\n        // the sample somewhere in the control.\n        c--;\n      }\n      for (; s >= 1 && c >= 0; s--, c--) {\n        // Next we find the first one that isn't the same which should be the\n        // frame that called our sample function and the control.\n        if (sampleLines[s] !== controlLines[c]) {\n          // In V8, the first line is describing the message but other VMs don't.\n          // If we're about to return the first line, and the control is also on the same\n          // line, that's a pretty good indicator that our sample threw at same line as\n          // the control. I.e. before we entered the sample frame. So we ignore this result.\n          // This can happen if you passed a class to function component, or non-function.\n          if (s !== 1 || c !== 1) {\n            do {\n              s--;\n              c--;\n              // We may still have similar intermediate frames from the construct call.\n              // The next one that isn't the same should be our match though.\n              if (c < 0 || sampleLines[s] !== controlLines[c]) {\n                // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\n                const frame = '\\n' + sampleLines[s].replace(' at new ', ' at ');\n                if (__DEV__) {\n                  if (typeof fn === 'function') {\n                    componentFrameCache.set(fn, frame);\n                  }\n                }\n                // Return the line we found.\n                return frame;\n              }\n            } while (s >= 1 && c >= 0);\n          }\n          break;\n        }\n      }\n    }\n  } finally {\n    reentry = false;\n    if (__DEV__) {\n      ReactCurrentDispatcher.current = previousDispatcher;\n      reenableLogs();\n    }\n    Error.prepareStackTrace = previousPrepareStackTrace;\n  }\n  // Fallback to just using the name if we couldn't make it throw.\n  const name = fn ? fn.displayName || fn.name : '';\n  const syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';\n  if (__DEV__) {\n    if (typeof fn === 'function') {\n      componentFrameCache.set(fn, syntheticFrame);\n    }\n  }\n  return syntheticFrame;\n}\n\nconst BEFORE_SLASH_RE = /^(.*)[\\\\\\/]/;\n\nfunction describeComponentFrame(\n  name: null | string,\n  source: void | null | Source,\n  ownerName: null | string,\n) {\n  let sourceInfo = '';\n  if (__DEV__ && source) {\n    const path = source.fileName;\n    let fileName = path.replace(BEFORE_SLASH_RE, '');\n    // In DEV, include code for a common special case:\n    // prefer \"folder/index.js\" instead of just \"index.js\".\n    if (/^index\\./.test(fileName)) {\n      const match = path.match(BEFORE_SLASH_RE);\n      if (match) {\n        const pathBeforeSlash = match[1];\n        if (pathBeforeSlash) {\n          const folderName = pathBeforeSlash.replace(BEFORE_SLASH_RE, '');\n          fileName = folderName + '/' + fileName;\n        }\n      }\n    }\n    sourceInfo = ' (at ' + fileName + ':' + source.lineNumber + ')';\n  } else if (ownerName) {\n    sourceInfo = ' (created by ' + ownerName + ')';\n  }\n  return '\\n    in ' + (name || 'Unknown') + sourceInfo;\n}\n\nexport function describeClassComponentFrame(\n  ctor: Function,\n  source: void | null | Source,\n  ownerFn: void | null | Function,\n): string {\n  if (enableComponentStackLocations) {\n    return describeNativeComponentFrame(ctor, true);\n  } else {\n    return describeFunctionComponentFrame(ctor, source, ownerFn);\n  }\n}\n\nexport function describeFunctionComponentFrame(\n  fn: Function,\n  source: void | null | Source,\n  ownerFn: void | null | Function,\n): string {\n  if (enableComponentStackLocations) {\n    return describeNativeComponentFrame(fn, false);\n  } else {\n    if (!fn) {\n      return '';\n    }\n    const name = fn.displayName || fn.name || null;\n    let ownerName = null;\n    if (__DEV__ && ownerFn) {\n      ownerName = ownerFn.displayName || ownerFn.name || null;\n    }\n    return describeComponentFrame(name, source, ownerName);\n  }\n}\n\nfunction shouldConstruct(Component: Function) {\n  const prototype = Component.prototype;\n  return !!(prototype && prototype.isReactComponent);\n}\n\nexport function describeUnknownElementTypeFrameInDEV(\n  type: any,\n  source: void | null | Source,\n  ownerFn: void | null | Function,\n): string {\n  if (!__DEV__) {\n    return '';\n  }\n  if (type == null) {\n    return '';\n  }\n  if (typeof type === 'function') {\n    if (enableComponentStackLocations) {\n      return describeNativeComponentFrame(type, shouldConstruct(type));\n    } else {\n      return describeFunctionComponentFrame(type, source, ownerFn);\n    }\n  }\n  if (typeof type === 'string') {\n    return describeBuiltInComponentFrame(type, source, ownerFn);\n  }\n  switch (type) {\n    case REACT_SUSPENSE_TYPE:\n      return describeBuiltInComponentFrame('Suspense', source, ownerFn);\n    case REACT_SUSPENSE_LIST_TYPE:\n      return describeBuiltInComponentFrame('SuspenseList', source, ownerFn);\n  }\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_FORWARD_REF_TYPE:\n        return describeFunctionComponentFrame(type.render, source, ownerFn);\n      case REACT_MEMO_TYPE:\n        // Memo may contain any component type so we recursively resolve it.\n        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);\n      case REACT_BLOCK_TYPE:\n        return describeFunctionComponentFrame(type._render, source, ownerFn);\n      case REACT_LAZY_TYPE: {\n        const lazyComponent: LazyComponent<any, any> = (type: any);\n        const payload = lazyComponent._payload;\n        const init = lazyComponent._init;\n        try {\n          // Lazy may contain any component type so we recursively resolve it.\n          return describeUnknownElementTypeFrameInDEV(\n            init(payload),\n            source,\n            ownerFn,\n          );\n        } catch (x) {}\n      }\n    }\n  }\n  return '';\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nconst loggedTypeFailures = {};\n\nimport {describeUnknownElementTypeFrameInDEV} from 'shared/ReactComponentStackFrame';\n\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\n\nconst ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n\nfunction setCurrentlyValidatingElement(element) {\n  if (__DEV__) {\n    if (element) {\n      const owner = element._owner;\n      const stack = describeUnknownElementTypeFrameInDEV(\n        element.type,\n        element._source,\n        owner ? owner.type : null,\n      );\n      ReactDebugCurrentFrame.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame.setExtraStackFrame(null);\n    }\n  }\n}\n\nexport default function checkPropTypes(\n  typeSpecs: Object,\n  values: Object,\n  location: string,\n  componentName: ?string,\n  element?: any,\n): void {\n  if (__DEV__) {\n    // $FlowFixMe This is okay but Flow doesn't know it.\n    const has = Function.call.bind(Object.prototype.hasOwnProperty);\n    for (const typeSpecName in typeSpecs) {\n      if (has(typeSpecs, typeSpecName)) {\n        let error;\n        // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\n            const err = Error(\n              (componentName || 'React class') +\n                ': ' +\n                location +\n                ' type `' +\n                typeSpecName +\n                '` is invalid; ' +\n                'it must be a function, usually from the `prop-types` package, but received `' +\n                typeof typeSpecs[typeSpecName] +\n                '`.' +\n                'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.',\n            );\n            err.name = 'Invariant Violation';\n            throw err;\n          }\n          error = typeSpecs[typeSpecName](\n            values,\n            typeSpecName,\n            componentName,\n            location,\n            null,\n            'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED',\n          );\n        } catch (ex) {\n          error = ex;\n        }\n        if (error && !(error instanceof Error)) {\n          setCurrentlyValidatingElement(element);\n          console.error(\n            '%s: type specification of %s' +\n              ' `%s` is invalid; the type checker ' +\n              'function must return `null` or an `Error` but returned a %s. ' +\n              'You may have forgotten to pass an argument to the type checker ' +\n              'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' +\n              'shape all require an argument).',\n            componentName || 'React class',\n            location,\n            typeSpecName,\n            typeof error,\n          );\n          setCurrentlyValidatingElement(null);\n        }\n        if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error.message] = true;\n          setCurrentlyValidatingElement(element);\n          console.error('Failed %s type: %s', location, error.message);\n          setCurrentlyValidatingElement(null);\n        }\n      }\n    }\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactInternalTypes';\n\nexport type StackCursor<T> = {|current: T|};\n\nconst valueStack: Array<any> = [];\n\nlet fiberStack: Array<Fiber | null>;\n\nif (__DEV__) {\n  fiberStack = [];\n}\n\nlet index = -1;\n\nfunction createCursor<T>(defaultValue: T): StackCursor<T> {\n  return {\n    current: defaultValue,\n  };\n}\n\nfunction isEmpty(): boolean {\n  return index === -1;\n}\n\nfunction pop<T>(cursor: StackCursor<T>, fiber: Fiber): void {\n  if (index < 0) {\n    if (__DEV__) {\n      console.error('Unexpected pop.');\n    }\n    return;\n  }\n\n  if (__DEV__) {\n    if (fiber !== fiberStack[index]) {\n      console.error('Unexpected Fiber popped.');\n    }\n  }\n\n  cursor.current = valueStack[index];\n\n  valueStack[index] = null;\n\n  if (__DEV__) {\n    fiberStack[index] = null;\n  }\n\n  index--;\n}\n\nfunction push<T>(cursor: StackCursor<T>, value: T, fiber: Fiber): void {\n  index++;\n\n  valueStack[index] = cursor.current;\n\n  if (__DEV__) {\n    fiberStack[index] = fiber;\n  }\n\n  cursor.current = value;\n}\n\nfunction checkThatStackIsEmpty() {\n  if (__DEV__) {\n    if (index !== -1) {\n      console.error(\n        'Expected an empty stack. Something was not reset properly.',\n      );\n    }\n  }\n}\n\nfunction resetStackAfterFatalErrorInDev() {\n  if (__DEV__) {\n    index = -1;\n    valueStack.length = 0;\n    fiberStack.length = 0;\n  }\n}\n\nexport {\n  createCursor,\n  isEmpty,\n  pop,\n  push,\n  // DEV only:\n  checkThatStackIsEmpty,\n  resetStackAfterFatalErrorInDev,\n};\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactInternalTypes';\nimport type {StackCursor} from './ReactFiberStack.old';\n\nimport {isFiberMounted} from './ReactFiberTreeReflection';\nimport {disableLegacyContext} from 'shared/ReactFeatureFlags';\nimport {ClassComponent, HostRoot} from './ReactWorkTags';\nimport getComponentName from 'shared/getComponentName';\nimport invariant from 'shared/invariant';\nimport checkPropTypes from 'shared/checkPropTypes';\n\nimport {createCursor, push, pop} from './ReactFiberStack.old';\n\nlet warnedAboutMissingGetChildContext;\n\nif (__DEV__) {\n  warnedAboutMissingGetChildContext = {};\n}\n\nexport const emptyContextObject = {};\nif (__DEV__) {\n  Object.freeze(emptyContextObject);\n}\n\n// A cursor to the current merged context object on the stack.\nconst contextStackCursor: StackCursor<Object> = createCursor(\n  emptyContextObject,\n);\n// A cursor to a boolean indicating whether the context has changed.\nconst didPerformWorkStackCursor: StackCursor<boolean> = createCursor(false);\n// Keep track of the previous context object that was on the stack.\n// We use this to get access to the parent context after we have already\n// pushed the next context provider, and now need to merge their contexts.\nlet previousContext: Object = emptyContextObject;\n\nfunction getUnmaskedContext(\n  workInProgress: Fiber,\n  Component: Function,\n  didPushOwnContextIfProvider: boolean,\n): Object {\n  if (disableLegacyContext) {\n    return emptyContextObject;\n  } else {\n    if (didPushOwnContextIfProvider && isContextProvider(Component)) {\n      // If the fiber is a context provider itself, when we read its context\n      // we may have already pushed its own child context on the stack. A context\n      // provider should not \"see\" its own child context. Therefore we read the\n      // previous (parent) context instead for a context provider.\n      return previousContext;\n    }\n    return contextStackCursor.current;\n  }\n}\n\nfunction cacheContext(\n  workInProgress: Fiber,\n  unmaskedContext: Object,\n  maskedContext: Object,\n): void {\n  if (disableLegacyContext) {\n    return;\n  } else {\n    const instance = workInProgress.stateNode;\n    instance.__reactInternalMemoizedUnmaskedChildContext = unmaskedContext;\n    instance.__reactInternalMemoizedMaskedChildContext = maskedContext;\n  }\n}\n\nfunction getMaskedContext(\n  workInProgress: Fiber,\n  unmaskedContext: Object,\n): Object {\n  if (disableLegacyContext) {\n    return emptyContextObject;\n  } else {\n    const type = workInProgress.type;\n    const contextTypes = type.contextTypes;\n    if (!contextTypes) {\n      return emptyContextObject;\n    }\n\n    // Avoid recreating masked context unless unmasked context has changed.\n    // Failing to do this will result in unnecessary calls to componentWillReceiveProps.\n    // This may trigger infinite loops if componentWillReceiveProps calls setState.\n    const instance = workInProgress.stateNode;\n    if (\n      instance &&\n      instance.__reactInternalMemoizedUnmaskedChildContext === unmaskedContext\n    ) {\n      return instance.__reactInternalMemoizedMaskedChildContext;\n    }\n\n    const context = {};\n    for (const key in contextTypes) {\n      context[key] = unmaskedContext[key];\n    }\n\n    if (__DEV__) {\n      const name = getComponentName(type) || 'Unknown';\n      checkPropTypes(contextTypes, context, 'context', name);\n    }\n\n    // Cache unmasked context so we can avoid recreating masked context unless necessary.\n    // Context is created before the class component is instantiated so check for instance.\n    if (instance) {\n      cacheContext(workInProgress, unmaskedContext, context);\n    }\n\n    return context;\n  }\n}\n\nfunction hasContextChanged(): boolean {\n  if (disableLegacyContext) {\n    return false;\n  } else {\n    return didPerformWorkStackCursor.current;\n  }\n}\n\nfunction isContextProvider(type: Function): boolean {\n  if (disableLegacyContext) {\n    return false;\n  } else {\n    const childContextTypes = type.childContextTypes;\n    return childContextTypes !== null && childContextTypes !== undefined;\n  }\n}\n\nfunction popContext(fiber: Fiber): void {\n  if (disableLegacyContext) {\n    return;\n  } else {\n    pop(didPerformWorkStackCursor, fiber);\n    pop(contextStackCursor, fiber);\n  }\n}\n\nfunction popTopLevelContextObject(fiber: Fiber): void {\n  if (disableLegacyContext) {\n    return;\n  } else {\n    pop(didPerformWorkStackCursor, fiber);\n    pop(contextStackCursor, fiber);\n  }\n}\n\nfunction pushTopLevelContextObject(\n  fiber: Fiber,\n  context: Object,\n  didChange: boolean,\n): void {\n  if (disableLegacyContext) {\n    return;\n  } else {\n    invariant(\n      contextStackCursor.current === emptyContextObject,\n      'Unexpected context found on stack. ' +\n        'This error is likely caused by a bug in React. Please file an issue.',\n    );\n\n    push(contextStackCursor, context, fiber);\n    push(didPerformWorkStackCursor, didChange, fiber);\n  }\n}\n\nfunction processChildContext(\n  fiber: Fiber,\n  type: any,\n  parentContext: Object,\n): Object {\n  if (disableLegacyContext) {\n    return parentContext;\n  } else {\n    const instance = fiber.stateNode;\n    const childContextTypes = type.childContextTypes;\n\n    // TODO (bvaughn) Replace this behavior with an invariant() in the future.\n    // It has only been added in Fiber to match the (unintentional) behavior in Stack.\n    if (typeof instance.getChildContext !== 'function') {\n      if (__DEV__) {\n        const componentName = getComponentName(type) || 'Unknown';\n\n        if (!warnedAboutMissingGetChildContext[componentName]) {\n          warnedAboutMissingGetChildContext[componentName] = true;\n          console.error(\n            '%s.childContextTypes is specified but there is no getChildContext() method ' +\n              'on the instance. You can either define getChildContext() on %s or remove ' +\n              'childContextTypes from it.',\n            componentName,\n            componentName,\n          );\n        }\n      }\n      return parentContext;\n    }\n\n    const childContext = instance.getChildContext();\n    for (const contextKey in childContext) {\n      invariant(\n        contextKey in childContextTypes,\n        '%s.getChildContext(): key \"%s\" is not defined in childContextTypes.',\n        getComponentName(type) || 'Unknown',\n        contextKey,\n      );\n    }\n    if (__DEV__) {\n      const name = getComponentName(type) || 'Unknown';\n      checkPropTypes(childContextTypes, childContext, 'child context', name);\n    }\n\n    return {...parentContext, ...childContext};\n  }\n}\n\nfunction pushContextProvider(workInProgress: Fiber): boolean {\n  if (disableLegacyContext) {\n    return false;\n  } else {\n    const instance = workInProgress.stateNode;\n    // We push the context as early as possible to ensure stack integrity.\n    // If the instance does not exist yet, we will push null at first,\n    // and replace it on the stack later when invalidating the context.\n    const memoizedMergedChildContext =\n      (instance && instance.__reactInternalMemoizedMergedChildContext) ||\n      emptyContextObject;\n\n    // Remember the parent context so we can merge with it later.\n    // Inherit the parent's did-perform-work value to avoid inadvertently blocking updates.\n    previousContext = contextStackCursor.current;\n    push(contextStackCursor, memoizedMergedChildContext, workInProgress);\n    push(\n      didPerformWorkStackCursor,\n      didPerformWorkStackCursor.current,\n      workInProgress,\n    );\n\n    return true;\n  }\n}\n\nfunction invalidateContextProvider(\n  workInProgress: Fiber,\n  type: any,\n  didChange: boolean,\n): void {\n  if (disableLegacyContext) {\n    return;\n  } else {\n    const instance = workInProgress.stateNode;\n    invariant(\n      instance,\n      'Expected to have an instance by this point. ' +\n        'This error is likely caused by a bug in React. Please file an issue.',\n    );\n\n    if (didChange) {\n      // Merge parent and own context.\n      // Skip this if we're not updating due to sCU.\n      // This avoids unnecessarily recomputing memoized values.\n      const mergedContext = processChildContext(\n        workInProgress,\n        type,\n        previousContext,\n      );\n      instance.__reactInternalMemoizedMergedChildContext = mergedContext;\n\n      // Replace the old (or empty) context with the new one.\n      // It is important to unwind the context in the reverse order.\n      pop(didPerformWorkStackCursor, workInProgress);\n      pop(contextStackCursor, workInProgress);\n      // Now push the new context and mark that it has changed.\n      push(contextStackCursor, mergedContext, workInProgress);\n      push(didPerformWorkStackCursor, didChange, workInProgress);\n    } else {\n      pop(didPerformWorkStackCursor, workInProgress);\n      push(didPerformWorkStackCursor, didChange, workInProgress);\n    }\n  }\n}\n\nfunction findCurrentUnmaskedContext(fiber: Fiber): Object {\n  if (disableLegacyContext) {\n    return emptyContextObject;\n  } else {\n    // Currently this is only used with renderSubtreeIntoContainer; not sure if it\n    // makes sense elsewhere\n    invariant(\n      isFiberMounted(fiber) && fiber.tag === ClassComponent,\n      'Expected subtree parent to be a mounted class component. ' +\n        'This error is likely caused by a bug in React. Please file an issue.',\n    );\n\n    let node = fiber;\n    do {\n      switch (node.tag) {\n        case HostRoot:\n          return node.stateNode.context;\n        case ClassComponent: {\n          const Component = node.type;\n          if (isContextProvider(Component)) {\n            return node.stateNode.__reactInternalMemoizedMergedChildContext;\n          }\n          break;\n        }\n      }\n      node = node.return;\n    } while (node !== null);\n    invariant(\n      false,\n      'Found unexpected detached subtree parent. ' +\n        'This error is likely caused by a bug in React. Please file an issue.',\n    );\n  }\n}\n\nexport {\n  getUnmaskedContext,\n  cacheContext,\n  getMaskedContext,\n  hasContextChanged,\n  popContext,\n  popTopLevelContextObject,\n  pushTopLevelContextObject,\n  processChildContext,\n  isContextProvider,\n  pushContextProvider,\n  invalidateContextProvider,\n  findCurrentUnmaskedContext,\n};\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport {enableProfilerTimer} from 'shared/ReactFeatureFlags';\n\nimport type {Fiber, FiberRoot, ReactPriorityLevel} from './ReactInternalTypes';\nimport type {ReactNodeList} from 'shared/ReactTypes';\n\nimport {DidCapture} from './ReactFiberFlags';\n\ndeclare var __REACT_DEVTOOLS_GLOBAL_HOOK__: Object | void;\n\nlet rendererID = null;\nlet injectedHook = null;\nlet hasLoggedError = false;\n\nexport const isDevToolsPresent =\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined';\n\nexport function injectInternals(internals: Object): boolean {\n  if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {\n    // No DevTools\n    return false;\n  }\n  const hook = __REACT_DEVTOOLS_GLOBAL_HOOK__;\n  if (hook.isDisabled) {\n    // This isn't a real property on the hook, but it can be set to opt out\n    // of DevTools integration and associated warnings and logs.\n    // https://github.com/facebook/react/issues/3877\n    return true;\n  }\n  if (!hook.supportsFiber) {\n    if (__DEV__) {\n      console.error(\n        'The installed version of React DevTools is too old and will not work ' +\n          'with the current version of React. Please update React DevTools. ' +\n          'https://reactjs.org/link/react-devtools',\n      );\n    }\n    // DevTools exists, even though it doesn't support Fiber.\n    return true;\n  }\n  try {\n    rendererID = hook.inject(internals);\n    // We have successfully injected, so now it is safe to set up hooks.\n    injectedHook = hook;\n  } catch (err) {\n    // Catch all errors because it is unsafe to throw during initialization.\n    if (__DEV__) {\n      console.error('React instrumentation encountered an error: %s.', err);\n    }\n  }\n  // DevTools exists\n  return true;\n}\n\nexport function onScheduleRoot(root: FiberRoot, children: ReactNodeList) {\n  if (__DEV__) {\n    if (\n      injectedHook &&\n      typeof injectedHook.onScheduleFiberRoot === 'function'\n    ) {\n      try {\n        injectedHook.onScheduleFiberRoot(rendererID, root, children);\n      } catch (err) {\n        if (__DEV__ && !hasLoggedError) {\n          hasLoggedError = true;\n          console.error('React instrumentation encountered an error: %s', err);\n        }\n      }\n    }\n  }\n}\n\nexport function onCommitRoot(\n  root: FiberRoot,\n  priorityLevel: ReactPriorityLevel,\n) {\n  if (injectedHook && typeof injectedHook.onCommitFiberRoot === 'function') {\n    try {\n      const didError = (root.current.flags & DidCapture) === DidCapture;\n      if (enableProfilerTimer) {\n        injectedHook.onCommitFiberRoot(\n          rendererID,\n          root,\n          priorityLevel,\n          didError,\n        );\n      } else {\n        injectedHook.onCommitFiberRoot(rendererID, root, undefined, didError);\n      }\n    } catch (err) {\n      if (__DEV__) {\n        if (!hasLoggedError) {\n          hasLoggedError = true;\n          console.error('React instrumentation encountered an error: %s', err);\n        }\n      }\n    }\n  }\n}\n\nexport function onCommitUnmount(fiber: Fiber) {\n  if (injectedHook && typeof injectedHook.onCommitFiberUnmount === 'function') {\n    try {\n      injectedHook.onCommitFiberUnmount(rendererID, fiber);\n    } catch (err) {\n      if (__DEV__) {\n        if (!hasLoggedError) {\n          hasLoggedError = true;\n          console.error('React instrumentation encountered an error: %s', err);\n        }\n      }\n    }\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {ReactPriorityLevel} from './ReactInternalTypes';\n\n// Intentionally not named imports because Rollup would use dynamic dispatch for\n// CommonJS interop named imports.\nimport * as Scheduler from 'scheduler';\nimport {__interactionsRef} from 'scheduler/tracing';\nimport {\n  enableSchedulerTracing,\n  decoupleUpdatePriorityFromScheduler,\n} from 'shared/ReactFeatureFlags';\nimport invariant from 'shared/invariant';\nimport {\n  SyncLanePriority,\n  getCurrentUpdateLanePriority,\n  setCurrentUpdateLanePriority,\n} from './ReactFiberLane';\n\nconst {\n  unstable_runWithPriority: Scheduler_runWithPriority,\n  unstable_scheduleCallback: Scheduler_scheduleCallback,\n  unstable_cancelCallback: Scheduler_cancelCallback,\n  unstable_shouldYield: Scheduler_shouldYield,\n  unstable_requestPaint: Scheduler_requestPaint,\n  unstable_now: Scheduler_now,\n  unstable_getCurrentPriorityLevel: Scheduler_getCurrentPriorityLevel,\n  unstable_ImmediatePriority: Scheduler_ImmediatePriority,\n  unstable_UserBlockingPriority: Scheduler_UserBlockingPriority,\n  unstable_NormalPriority: Scheduler_NormalPriority,\n  unstable_LowPriority: Scheduler_LowPriority,\n  unstable_IdlePriority: Scheduler_IdlePriority,\n} = Scheduler;\n\nif (enableSchedulerTracing) {\n  // Provide explicit error message when production+profiling bundle of e.g.\n  // react-dom is used with production (non-profiling) bundle of\n  // scheduler/tracing\n  invariant(\n    __interactionsRef != null && __interactionsRef.current != null,\n    'It is not supported to run the profiling version of a renderer (for ' +\n      'example, `react-dom/profiling`) without also replacing the ' +\n      '`scheduler/tracing` module with `scheduler/tracing-profiling`. Your ' +\n      'bundler might have a setting for aliasing both modules. Learn more at ' +\n      'https://reactjs.org/link/profiling',\n  );\n}\n\nexport type SchedulerCallback = (isSync: boolean) => SchedulerCallback | null;\n\ntype SchedulerCallbackOptions = {timeout?: number, ...};\n\nconst fakeCallbackNode = {};\n\n// Except for NoPriority, these correspond to Scheduler priorities. We use\n// ascending numbers so we can compare them like numbers. They start at 90 to\n// avoid clashing with Scheduler's priorities.\nexport const ImmediatePriority: ReactPriorityLevel = 99;\nexport const UserBlockingPriority: ReactPriorityLevel = 98;\nexport const NormalPriority: ReactPriorityLevel = 97;\nexport const LowPriority: ReactPriorityLevel = 96;\nexport const IdlePriority: ReactPriorityLevel = 95;\n// NoPriority is the absence of priority. Also React-only.\nexport const NoPriority: ReactPriorityLevel = 90;\n\nexport const shouldYield = Scheduler_shouldYield;\nexport const requestPaint =\n  // Fall back gracefully if we're running an older version of Scheduler.\n  Scheduler_requestPaint !== undefined ? Scheduler_requestPaint : () => {};\n\nlet syncQueue: Array<SchedulerCallback> | null = null;\nlet immediateQueueCallbackNode: mixed | null = null;\nlet isFlushingSyncQueue: boolean = false;\nconst initialTimeMs: number = Scheduler_now();\n\n// If the initial timestamp is reasonably small, use Scheduler's `now` directly.\n// This will be the case for modern browsers that support `performance.now`. In\n// older browsers, Scheduler falls back to `Date.now`, which returns a Unix\n// timestamp. In that case, subtract the module initialization time to simulate\n// the behavior of performance.now and keep our times small enough to fit\n// within 32 bits.\n// TODO: Consider lifting this into Scheduler.\nexport const now =\n  initialTimeMs < 10000 ? Scheduler_now : () => Scheduler_now() - initialTimeMs;\n\nexport function getCurrentPriorityLevel(): ReactPriorityLevel {\n  switch (Scheduler_getCurrentPriorityLevel()) {\n    case Scheduler_ImmediatePriority:\n      return ImmediatePriority;\n    case Scheduler_UserBlockingPriority:\n      return UserBlockingPriority;\n    case Scheduler_NormalPriority:\n      return NormalPriority;\n    case Scheduler_LowPriority:\n      return LowPriority;\n    case Scheduler_IdlePriority:\n      return IdlePriority;\n    default:\n      invariant(false, 'Unknown priority level.');\n  }\n}\n\nfunction reactPriorityToSchedulerPriority(reactPriorityLevel) {\n  switch (reactPriorityLevel) {\n    case ImmediatePriority:\n      return Scheduler_ImmediatePriority;\n    case UserBlockingPriority:\n      return Scheduler_UserBlockingPriority;\n    case NormalPriority:\n      return Scheduler_NormalPriority;\n    case LowPriority:\n      return Scheduler_LowPriority;\n    case IdlePriority:\n      return Scheduler_IdlePriority;\n    default:\n      invariant(false, 'Unknown priority level.');\n  }\n}\n\nexport function runWithPriority<T>(\n  reactPriorityLevel: ReactPriorityLevel,\n  fn: () => T,\n): T {\n  const priorityLevel = reactPriorityToSchedulerPriority(reactPriorityLevel);\n  return Scheduler_runWithPriority(priorityLevel, fn);\n}\n\nexport function scheduleCallback(\n  reactPriorityLevel: ReactPriorityLevel,\n  callback: SchedulerCallback,\n  options: SchedulerCallbackOptions | void | null,\n) {\n  const priorityLevel = reactPriorityToSchedulerPriority(reactPriorityLevel);\n  return Scheduler_scheduleCallback(priorityLevel, callback, options);\n}\n\nexport function scheduleSyncCallback(callback: SchedulerCallback) {\n  // Push this callback into an internal queue. We'll flush these either in\n  // the next tick, or earlier if something calls `flushSyncCallbackQueue`.\n  if (syncQueue === null) {\n    syncQueue = [callback];\n    // Flush the queue in the next tick, at the earliest.\n    immediateQueueCallbackNode = Scheduler_scheduleCallback(\n      Scheduler_ImmediatePriority,\n      flushSyncCallbackQueueImpl,\n    );\n  } else {\n    // Push onto existing queue. Don't need to schedule a callback because\n    // we already scheduled one when we created the queue.\n    syncQueue.push(callback);\n  }\n  return fakeCallbackNode;\n}\n\nexport function cancelCallback(callbackNode: mixed) {\n  if (callbackNode !== fakeCallbackNode) {\n    Scheduler_cancelCallback(callbackNode);\n  }\n}\n\nexport function flushSyncCallbackQueue(): boolean {\n  if (immediateQueueCallbackNode !== null) {\n    const node = immediateQueueCallbackNode;\n    immediateQueueCallbackNode = null;\n    Scheduler_cancelCallback(node);\n  }\n  return flushSyncCallbackQueueImpl();\n}\n\nfunction flushSyncCallbackQueueImpl() {\n  if (!isFlushingSyncQueue && syncQueue !== null) {\n    // Prevent re-entrancy.\n    isFlushingSyncQueue = true;\n    let i = 0;\n    if (decoupleUpdatePriorityFromScheduler) {\n      const previousLanePriority = getCurrentUpdateLanePriority();\n      try {\n        const isSync = true;\n        const queue = syncQueue;\n        setCurrentUpdateLanePriority(SyncLanePriority);\n        runWithPriority(ImmediatePriority, () => {\n          for (; i < queue.length; i++) {\n            let callback = queue[i];\n            do {\n              callback = callback(isSync);\n            } while (callback !== null);\n          }\n        });\n        syncQueue = null;\n      } catch (error) {\n        // If something throws, leave the remaining callbacks on the queue.\n        if (syncQueue !== null) {\n          syncQueue = syncQueue.slice(i + 1);\n        }\n        // Resume flushing in the next tick\n        Scheduler_scheduleCallback(\n          Scheduler_ImmediatePriority,\n          flushSyncCallbackQueue,\n        );\n        throw error;\n      } finally {\n        setCurrentUpdateLanePriority(previousLanePriority);\n        isFlushingSyncQueue = false;\n      }\n    } else {\n      try {\n        const isSync = true;\n        const queue = syncQueue;\n        runWithPriority(ImmediatePriority, () => {\n          for (; i < queue.length; i++) {\n            let callback = queue[i];\n            do {\n              callback = callback(isSync);\n            } while (callback !== null);\n          }\n        });\n        syncQueue = null;\n      } catch (error) {\n        // If something throws, leave the remaining callbacks on the queue.\n        if (syncQueue !== null) {\n          syncQueue = syncQueue.slice(i + 1);\n        }\n        // Resume flushing in the next tick\n        Scheduler_scheduleCallback(\n          Scheduler_ImmediatePriority,\n          flushSyncCallbackQueue,\n        );\n        throw error;\n      } finally {\n        isFlushingSyncQueue = false;\n      }\n    }\n    return true;\n  } else {\n    return false;\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {FiberRoot, ReactPriorityLevel} from './ReactInternalTypes';\n\nexport opaque type LanePriority =\n  | 0\n  | 1\n  | 2\n  | 3\n  | 4\n  | 5\n  | 6\n  | 7\n  | 8\n  | 9\n  | 10\n  | 11\n  | 12\n  | 13\n  | 14\n  | 15\n  | 16\n  | 17;\nexport opaque type Lanes = number;\nexport opaque type Lane = number;\nexport opaque type LaneMap<T> = Array<T>;\n\nimport invariant from 'shared/invariant';\n\nimport {\n  ImmediatePriority as ImmediateSchedulerPriority,\n  UserBlockingPriority as UserBlockingSchedulerPriority,\n  NormalPriority as NormalSchedulerPriority,\n  LowPriority as LowSchedulerPriority,\n  IdlePriority as IdleSchedulerPriority,\n  NoPriority as NoSchedulerPriority,\n} from './SchedulerWithReactIntegration.new';\n\nexport const SyncLanePriority: LanePriority = 15;\nexport const SyncBatchedLanePriority: LanePriority = 14;\n\nconst InputDiscreteHydrationLanePriority: LanePriority = 13;\nexport const InputDiscreteLanePriority: LanePriority = 12;\n\nconst InputContinuousHydrationLanePriority: LanePriority = 11;\nexport const InputContinuousLanePriority: LanePriority = 10;\n\nconst DefaultHydrationLanePriority: LanePriority = 9;\nexport const DefaultLanePriority: LanePriority = 8;\n\nconst TransitionHydrationPriority: LanePriority = 7;\nexport const TransitionPriority: LanePriority = 6;\n\nconst RetryLanePriority: LanePriority = 5;\n\nconst SelectiveHydrationLanePriority: LanePriority = 4;\n\nconst IdleHydrationLanePriority: LanePriority = 3;\nconst IdleLanePriority: LanePriority = 2;\n\nconst OffscreenLanePriority: LanePriority = 1;\n\nexport const NoLanePriority: LanePriority = 0;\n\nconst TotalLanes = 31;\n\nexport const NoLanes: Lanes = /*                        */ 0b0000000000000000000000000000000;\nexport const NoLane: Lane = /*                          */ 0b0000000000000000000000000000000;\n\nexport const SyncLane: Lane = /*                        */ 0b0000000000000000000000000000001;\nexport const SyncBatchedLane: Lane = /*                 */ 0b0000000000000000000000000000010;\n\nexport const InputDiscreteHydrationLane: Lane = /*      */ 0b0000000000000000000000000000100;\nconst InputDiscreteLanes: Lanes = /*                    */ 0b0000000000000000000000000011000;\n\nconst InputContinuousHydrationLane: Lane = /*           */ 0b0000000000000000000000000100000;\nconst InputContinuousLanes: Lanes = /*                  */ 0b0000000000000000000000011000000;\n\nexport const DefaultHydrationLane: Lane = /*            */ 0b0000000000000000000000100000000;\nexport const DefaultLanes: Lanes = /*                   */ 0b0000000000000000000111000000000;\n\nconst TransitionHydrationLane: Lane = /*                */ 0b0000000000000000001000000000000;\nconst TransitionLanes: Lanes = /*                       */ 0b0000000001111111110000000000000;\n\nconst RetryLanes: Lanes = /*                            */ 0b0000011110000000000000000000000;\n\nexport const SomeRetryLane: Lanes = /*                  */ 0b0000010000000000000000000000000;\n\nexport const SelectiveHydrationLane: Lane = /*          */ 0b0000100000000000000000000000000;\n\nconst NonIdleLanes = /*                                 */ 0b0000111111111111111111111111111;\n\nexport const IdleHydrationLane: Lane = /*               */ 0b0001000000000000000000000000000;\nconst IdleLanes: Lanes = /*                             */ 0b0110000000000000000000000000000;\n\nexport const OffscreenLane: Lane = /*                   */ 0b1000000000000000000000000000000;\n\nexport const NoTimestamp = -1;\n\nlet currentUpdateLanePriority: LanePriority = NoLanePriority;\n\nexport function getCurrentUpdateLanePriority(): LanePriority {\n  return currentUpdateLanePriority;\n}\n\nexport function setCurrentUpdateLanePriority(newLanePriority: LanePriority) {\n  currentUpdateLanePriority = newLanePriority;\n}\n\n// \"Registers\" used to \"return\" multiple values\n// Used by getHighestPriorityLanes and getNextLanes:\nlet return_highestLanePriority: LanePriority = DefaultLanePriority;\n\nfunction getHighestPriorityLanes(lanes: Lanes | Lane): Lanes {\n  if ((SyncLane & lanes) !== NoLanes) {\n    return_highestLanePriority = SyncLanePriority;\n    return SyncLane;\n  }\n  if ((SyncBatchedLane & lanes) !== NoLanes) {\n    return_highestLanePriority = SyncBatchedLanePriority;\n    return SyncBatchedLane;\n  }\n  if ((InputDiscreteHydrationLane & lanes) !== NoLanes) {\n    return_highestLanePriority = InputDiscreteHydrationLanePriority;\n    return InputDiscreteHydrationLane;\n  }\n  const inputDiscreteLanes = InputDiscreteLanes & lanes;\n  if (inputDiscreteLanes !== NoLanes) {\n    return_highestLanePriority = InputDiscreteLanePriority;\n    return inputDiscreteLanes;\n  }\n  if ((lanes & InputContinuousHydrationLane) !== NoLanes) {\n    return_highestLanePriority = InputContinuousHydrationLanePriority;\n    return InputContinuousHydrationLane;\n  }\n  const inputContinuousLanes = InputContinuousLanes & lanes;\n  if (inputContinuousLanes !== NoLanes) {\n    return_highestLanePriority = InputContinuousLanePriority;\n    return inputContinuousLanes;\n  }\n  if ((lanes & DefaultHydrationLane) !== NoLanes) {\n    return_highestLanePriority = DefaultHydrationLanePriority;\n    return DefaultHydrationLane;\n  }\n  const defaultLanes = DefaultLanes & lanes;\n  if (defaultLanes !== NoLanes) {\n    return_highestLanePriority = DefaultLanePriority;\n    return defaultLanes;\n  }\n  if ((lanes & TransitionHydrationLane) !== NoLanes) {\n    return_highestLanePriority = TransitionHydrationPriority;\n    return TransitionHydrationLane;\n  }\n  const transitionLanes = TransitionLanes & lanes;\n  if (transitionLanes !== NoLanes) {\n    return_highestLanePriority = TransitionPriority;\n    return transitionLanes;\n  }\n  const retryLanes = RetryLanes & lanes;\n  if (retryLanes !== NoLanes) {\n    return_highestLanePriority = RetryLanePriority;\n    return retryLanes;\n  }\n  if (lanes & SelectiveHydrationLane) {\n    return_highestLanePriority = SelectiveHydrationLanePriority;\n    return SelectiveHydrationLane;\n  }\n  if ((lanes & IdleHydrationLane) !== NoLanes) {\n    return_highestLanePriority = IdleHydrationLanePriority;\n    return IdleHydrationLane;\n  }\n  const idleLanes = IdleLanes & lanes;\n  if (idleLanes !== NoLanes) {\n    return_highestLanePriority = IdleLanePriority;\n    return idleLanes;\n  }\n  if ((OffscreenLane & lanes) !== NoLanes) {\n    return_highestLanePriority = OffscreenLanePriority;\n    return OffscreenLane;\n  }\n  if (__DEV__) {\n    console.error('Should have found matching lanes. This is a bug in React.');\n  }\n  // This shouldn't be reachable, but as a fallback, return the entire bitmask.\n  return_highestLanePriority = DefaultLanePriority;\n  return lanes;\n}\n\nexport function schedulerPriorityToLanePriority(\n  schedulerPriorityLevel: ReactPriorityLevel,\n): LanePriority {\n  switch (schedulerPriorityLevel) {\n    case ImmediateSchedulerPriority:\n      return SyncLanePriority;\n    case UserBlockingSchedulerPriority:\n      return InputContinuousLanePriority;\n    case NormalSchedulerPriority:\n    case LowSchedulerPriority:\n      // TODO: Handle LowSchedulerPriority, somehow. Maybe the same lane as hydration.\n      return DefaultLanePriority;\n    case IdleSchedulerPriority:\n      return IdleLanePriority;\n    default:\n      return NoLanePriority;\n  }\n}\n\nexport function lanePriorityToSchedulerPriority(\n  lanePriority: LanePriority,\n): ReactPriorityLevel {\n  switch (lanePriority) {\n    case SyncLanePriority:\n    case SyncBatchedLanePriority:\n      return ImmediateSchedulerPriority;\n    case InputDiscreteHydrationLanePriority:\n    case InputDiscreteLanePriority:\n    case InputContinuousHydrationLanePriority:\n    case InputContinuousLanePriority:\n      return UserBlockingSchedulerPriority;\n    case DefaultHydrationLanePriority:\n    case DefaultLanePriority:\n    case TransitionHydrationPriority:\n    case TransitionPriority:\n    case SelectiveHydrationLanePriority:\n    case RetryLanePriority:\n      return NormalSchedulerPriority;\n    case IdleHydrationLanePriority:\n    case IdleLanePriority:\n    case OffscreenLanePriority:\n      return IdleSchedulerPriority;\n    case NoLanePriority:\n      return NoSchedulerPriority;\n    default:\n      invariant(\n        false,\n        'Invalid update priority: %s. This is a bug in React.',\n        lanePriority,\n      );\n  }\n}\n\nexport function getNextLanes(root: FiberRoot, wipLanes: Lanes): Lanes {\n  // Early bailout if there's no pending work left.\n  const pendingLanes = root.pendingLanes;\n  if (pendingLanes === NoLanes) {\n    return_highestLanePriority = NoLanePriority;\n    return NoLanes;\n  }\n\n  let nextLanes = NoLanes;\n  let nextLanePriority = NoLanePriority;\n\n  const expiredLanes = root.expiredLanes;\n  const suspendedLanes = root.suspendedLanes;\n  const pingedLanes = root.pingedLanes;\n\n  // Check if any work has expired.\n  if (expiredLanes !== NoLanes) {\n    nextLanes = expiredLanes;\n    nextLanePriority = return_highestLanePriority = SyncLanePriority;\n  } else {\n    // Do not work on any idle work until all the non-idle work has finished,\n    // even if the work is suspended.\n    const nonIdlePendingLanes = pendingLanes & NonIdleLanes;\n    if (nonIdlePendingLanes !== NoLanes) {\n      const nonIdleUnblockedLanes = nonIdlePendingLanes & ~suspendedLanes;\n      if (nonIdleUnblockedLanes !== NoLanes) {\n        nextLanes = getHighestPriorityLanes(nonIdleUnblockedLanes);\n        nextLanePriority = return_highestLanePriority;\n      } else {\n        const nonIdlePingedLanes = nonIdlePendingLanes & pingedLanes;\n        if (nonIdlePingedLanes !== NoLanes) {\n          nextLanes = getHighestPriorityLanes(nonIdlePingedLanes);\n          nextLanePriority = return_highestLanePriority;\n        }\n      }\n    } else {\n      // The only remaining work is Idle.\n      const unblockedLanes = pendingLanes & ~suspendedLanes;\n      if (unblockedLanes !== NoLanes) {\n        nextLanes = getHighestPriorityLanes(unblockedLanes);\n        nextLanePriority = return_highestLanePriority;\n      } else {\n        if (pingedLanes !== NoLanes) {\n          nextLanes = getHighestPriorityLanes(pingedLanes);\n          nextLanePriority = return_highestLanePriority;\n        }\n      }\n    }\n  }\n\n  if (nextLanes === NoLanes) {\n    // This should only be reachable if we're suspended\n    // TODO: Consider warning in this path if a fallback timer is not scheduled.\n    return NoLanes;\n  }\n\n  // If there are higher priority lanes, we'll include them even if they\n  // are suspended.\n  nextLanes = pendingLanes & getEqualOrHigherPriorityLanes(nextLanes);\n\n  // If we're already in the middle of a render, switching lanes will interrupt\n  // it and we'll lose our progress. We should only do this if the new lanes are\n  // higher priority.\n  if (\n    wipLanes !== NoLanes &&\n    wipLanes !== nextLanes &&\n    // If we already suspended with a delay, then interrupting is fine. Don't\n    // bother waiting until the root is complete.\n    (wipLanes & suspendedLanes) === NoLanes\n  ) {\n    getHighestPriorityLanes(wipLanes);\n    const wipLanePriority = return_highestLanePriority;\n    if (nextLanePriority <= wipLanePriority) {\n      return wipLanes;\n    } else {\n      return_highestLanePriority = nextLanePriority;\n    }\n  }\n\n  // Check for entangled lanes and add them to the batch.\n  //\n  // A lane is said to be entangled with another when it's not allowed to render\n  // in a batch that does not also include the other lane. Typically we do this\n  // when multiple updates have the same source, and we only want to respond to\n  // the most recent event from that source.\n  //\n  // Note that we apply entanglements *after* checking for partial work above.\n  // This means that if a lane is entangled during an interleaved event while\n  // it's already rendering, we won't interrupt it. This is intentional, since\n  // entanglement is usually \"best effort\": we'll try our best to render the\n  // lanes in the same batch, but it's not worth throwing out partially\n  // completed work in order to do it.\n  //\n  // For those exceptions where entanglement is semantically important, like\n  // useMutableSource, we should ensure that there is no partial work at the\n  // time we apply the entanglement.\n  const entangledLanes = root.entangledLanes;\n  if (entangledLanes !== NoLanes) {\n    const entanglements = root.entanglements;\n    let lanes = nextLanes & entangledLanes;\n    while (lanes > 0) {\n      const index = pickArbitraryLaneIndex(lanes);\n      const lane = 1 << index;\n\n      nextLanes |= entanglements[index];\n\n      lanes &= ~lane;\n    }\n  }\n\n  return nextLanes;\n}\n\nexport function getMostRecentEventTime(root: FiberRoot, lanes: Lanes): number {\n  const eventTimes = root.eventTimes;\n\n  let mostRecentEventTime = NoTimestamp;\n  while (lanes > 0) {\n    const index = pickArbitraryLaneIndex(lanes);\n    const lane = 1 << index;\n\n    const eventTime = eventTimes[index];\n    if (eventTime > mostRecentEventTime) {\n      mostRecentEventTime = eventTime;\n    }\n\n    lanes &= ~lane;\n  }\n\n  return mostRecentEventTime;\n}\n\nfunction computeExpirationTime(lane: Lane, currentTime: number) {\n  // TODO: Expiration heuristic is constant per lane, so could use a map.\n  getHighestPriorityLanes(lane);\n  const priority = return_highestLanePriority;\n  if (priority >= InputContinuousLanePriority) {\n    // User interactions should expire slightly more quickly.\n    //\n    // NOTE: This is set to the corresponding constant as in Scheduler.js. When\n    // we made it larger, a product metric in www regressed, suggesting there's\n    // a user interaction that's being starved by a series of synchronous\n    // updates. If that theory is correct, the proper solution is to fix the\n    // starvation. However, this scenario supports the idea that expiration\n    // times are an important safeguard when starvation does happen.\n    //\n    // Also note that, in the case of user input specifically, this will soon no\n    // longer be an issue because we plan to make user input synchronous by\n    // default (until you enter `startTransition`, of course.)\n    //\n    // If weren't planning to make these updates synchronous soon anyway, I\n    // would probably make this number a configurable parameter.\n    return currentTime + 250;\n  } else if (priority >= TransitionPriority) {\n    return currentTime + 5000;\n  } else {\n    // Anything idle priority or lower should never expire.\n    return NoTimestamp;\n  }\n}\n\nexport function markStarvedLanesAsExpired(\n  root: FiberRoot,\n  currentTime: number,\n): void {\n  // TODO: This gets called every time we yield. We can optimize by storing\n  // the earliest expiration time on the root. Then use that to quickly bail out\n  // of this function.\n\n  const pendingLanes = root.pendingLanes;\n  const suspendedLanes = root.suspendedLanes;\n  const pingedLanes = root.pingedLanes;\n  const expirationTimes = root.expirationTimes;\n\n  // Iterate through the pending lanes and check if we've reached their\n  // expiration time. If so, we'll assume the update is being starved and mark\n  // it as expired to force it to finish.\n  let lanes = pendingLanes;\n  while (lanes > 0) {\n    const index = pickArbitraryLaneIndex(lanes);\n    const lane = 1 << index;\n\n    const expirationTime = expirationTimes[index];\n    if (expirationTime === NoTimestamp) {\n      // Found a pending lane with no expiration time. If it's not suspended, or\n      // if it's pinged, assume it's CPU-bound. Compute a new expiration time\n      // using the current time.\n      if (\n        (lane & suspendedLanes) === NoLanes ||\n        (lane & pingedLanes) !== NoLanes\n      ) {\n        // Assumes timestamps are monotonically increasing.\n        expirationTimes[index] = computeExpirationTime(lane, currentTime);\n      }\n    } else if (expirationTime <= currentTime) {\n      // This lane expired\n      root.expiredLanes |= lane;\n    }\n\n    lanes &= ~lane;\n  }\n}\n\n// This returns the highest priority pending lanes regardless of whether they\n// are suspended.\nexport function getHighestPriorityPendingLanes(root: FiberRoot) {\n  return getHighestPriorityLanes(root.pendingLanes);\n}\n\nexport function getLanesToRetrySynchronouslyOnError(root: FiberRoot): Lanes {\n  const everythingButOffscreen = root.pendingLanes & ~OffscreenLane;\n  if (everythingButOffscreen !== NoLanes) {\n    return everythingButOffscreen;\n  }\n  if (everythingButOffscreen & OffscreenLane) {\n    return OffscreenLane;\n  }\n  return NoLanes;\n}\n\nexport function returnNextLanesPriority() {\n  return return_highestLanePriority;\n}\nexport function includesNonIdleWork(lanes: Lanes) {\n  return (lanes & NonIdleLanes) !== NoLanes;\n}\nexport function includesOnlyRetries(lanes: Lanes) {\n  return (lanes & RetryLanes) === lanes;\n}\nexport function includesOnlyTransitions(lanes: Lanes) {\n  return (lanes & TransitionLanes) === lanes;\n}\n\n// To ensure consistency across multiple updates in the same event, this should\n// be a pure function, so that it always returns the same lane for given inputs.\nexport function findUpdateLane(\n  lanePriority: LanePriority,\n  wipLanes: Lanes,\n): Lane {\n  switch (lanePriority) {\n    case NoLanePriority:\n      break;\n    case SyncLanePriority:\n      return SyncLane;\n    case SyncBatchedLanePriority:\n      return SyncBatchedLane;\n    case InputDiscreteLanePriority: {\n      const lane = pickArbitraryLane(InputDiscreteLanes & ~wipLanes);\n      if (lane === NoLane) {\n        // Shift to the next priority level\n        return findUpdateLane(InputContinuousLanePriority, wipLanes);\n      }\n      return lane;\n    }\n    case InputContinuousLanePriority: {\n      const lane = pickArbitraryLane(InputContinuousLanes & ~wipLanes);\n      if (lane === NoLane) {\n        // Shift to the next priority level\n        return findUpdateLane(DefaultLanePriority, wipLanes);\n      }\n      return lane;\n    }\n    case DefaultLanePriority: {\n      let lane = pickArbitraryLane(DefaultLanes & ~wipLanes);\n      if (lane === NoLane) {\n        // If all the default lanes are already being worked on, look for a\n        // lane in the transition range.\n        lane = pickArbitraryLane(TransitionLanes & ~wipLanes);\n        if (lane === NoLane) {\n          // All the transition lanes are taken, too. This should be very\n          // rare, but as a last resort, pick a default lane. This will have\n          // the effect of interrupting the current work-in-progress render.\n          lane = pickArbitraryLane(DefaultLanes);\n        }\n      }\n      return lane;\n    }\n    case TransitionPriority: // Should be handled by findTransitionLane instead\n    case RetryLanePriority: // Should be handled by findRetryLane instead\n      break;\n    case IdleLanePriority:\n      let lane = pickArbitraryLane(IdleLanes & ~wipLanes);\n      if (lane === NoLane) {\n        lane = pickArbitraryLane(IdleLanes);\n      }\n      return lane;\n    default:\n      // The remaining priorities are not valid for updates\n      break;\n  }\n  invariant(\n    false,\n    'Invalid update priority: %s. This is a bug in React.',\n    lanePriority,\n  );\n}\n\n// To ensure consistency across multiple updates in the same event, this should\n// be pure function, so that it always returns the same lane for given inputs.\nexport function findTransitionLane(wipLanes: Lanes, pendingLanes: Lanes): Lane {\n  // First look for lanes that are completely unclaimed, i.e. have no\n  // pending work.\n  let lane = pickArbitraryLane(TransitionLanes & ~pendingLanes);\n  if (lane === NoLane) {\n    // If all lanes have pending work, look for a lane that isn't currently\n    // being worked on.\n    lane = pickArbitraryLane(TransitionLanes & ~wipLanes);\n    if (lane === NoLane) {\n      // If everything is being worked on, pick any lane. This has the\n      // effect of interrupting the current work-in-progress.\n      lane = pickArbitraryLane(TransitionLanes);\n    }\n  }\n  return lane;\n}\n\n// To ensure consistency across multiple updates in the same event, this should\n// be pure function, so that it always returns the same lane for given inputs.\nexport function findRetryLane(wipLanes: Lanes): Lane {\n  // This is a fork of `findUpdateLane` designed specifically for Suspense\n  // \"retries\" — a special update that attempts to flip a Suspense boundary\n  // from its placeholder state to its primary/resolved state.\n  let lane = pickArbitraryLane(RetryLanes & ~wipLanes);\n  if (lane === NoLane) {\n    lane = pickArbitraryLane(RetryLanes);\n  }\n  return lane;\n}\n\nfunction getHighestPriorityLane(lanes: Lanes) {\n  return lanes & -lanes;\n}\n\nfunction getLowestPriorityLane(lanes: Lanes): Lane {\n  // This finds the most significant non-zero bit.\n  const index = 31 - clz32(lanes);\n  return index < 0 ? NoLanes : 1 << index;\n}\n\nfunction getEqualOrHigherPriorityLanes(lanes: Lanes | Lane): Lanes {\n  return (getLowestPriorityLane(lanes) << 1) - 1;\n}\n\nexport function pickArbitraryLane(lanes: Lanes): Lane {\n  // This wrapper function gets inlined. Only exists so to communicate that it\n  // doesn't matter which bit is selected; you can pick any bit without\n  // affecting the algorithms where its used. Here I'm using\n  // getHighestPriorityLane because it requires the fewest operations.\n  return getHighestPriorityLane(lanes);\n}\n\nfunction pickArbitraryLaneIndex(lanes: Lanes) {\n  return 31 - clz32(lanes);\n}\n\nfunction laneToIndex(lane: Lane) {\n  return pickArbitraryLaneIndex(lane);\n}\n\nexport function includesSomeLane(a: Lanes | Lane, b: Lanes | Lane) {\n  return (a & b) !== NoLanes;\n}\n\nexport function isSubsetOfLanes(set: Lanes, subset: Lanes | Lane) {\n  return (set & subset) === subset;\n}\n\nexport function mergeLanes(a: Lanes | Lane, b: Lanes | Lane): Lanes {\n  return a | b;\n}\n\nexport function removeLanes(set: Lanes, subset: Lanes | Lane): Lanes {\n  return set & ~subset;\n}\n\n// Seems redundant, but it changes the type from a single lane (used for\n// updates) to a group of lanes (used for flushing work).\nexport function laneToLanes(lane: Lane): Lanes {\n  return lane;\n}\n\nexport function higherPriorityLane(a: Lane, b: Lane) {\n  // This works because the bit ranges decrease in priority as you go left.\n  return a !== NoLane && a < b ? a : b;\n}\n\nexport function higherLanePriority(\n  a: LanePriority,\n  b: LanePriority,\n): LanePriority {\n  return a !== NoLanePriority && a > b ? a : b;\n}\n\nexport function createLaneMap<T>(initial: T): LaneMap<T> {\n  // Intentionally pushing one by one.\n  // https://v8.dev/blog/elements-kinds#avoid-creating-holes\n  const laneMap = [];\n  for (let i = 0; i < TotalLanes; i++) {\n    laneMap.push(initial);\n  }\n  return laneMap;\n}\n\nexport function markRootUpdated(\n  root: FiberRoot,\n  updateLane: Lane,\n  eventTime: number,\n) {\n  root.pendingLanes |= updateLane;\n\n  // TODO: Theoretically, any update to any lane can unblock any other lane. But\n  // it's not practical to try every single possible combination. We need a\n  // heuristic to decide which lanes to attempt to render, and in which batches.\n  // For now, we use the same heuristic as in the old ExpirationTimes model:\n  // retry any lane at equal or lower priority, but don't try updates at higher\n  // priority without also including the lower priority updates. This works well\n  // when considering updates across different priority levels, but isn't\n  // sufficient for updates within the same priority, since we want to treat\n  // those updates as parallel.\n\n  // Unsuspend any update at equal or lower priority.\n  const higherPriorityLanes = updateLane - 1; // Turns 0b1000 into 0b0111\n\n  root.suspendedLanes &= higherPriorityLanes;\n  root.pingedLanes &= higherPriorityLanes;\n\n  const eventTimes = root.eventTimes;\n  const index = laneToIndex(updateLane);\n  // We can always overwrite an existing timestamp because we prefer the most\n  // recent event, and we assume time is monotonically increasing.\n  eventTimes[index] = eventTime;\n}\n\nexport function markRootSuspended(root: FiberRoot, suspendedLanes: Lanes) {\n  root.suspendedLanes |= suspendedLanes;\n  root.pingedLanes &= ~suspendedLanes;\n\n  // The suspended lanes are no longer CPU-bound. Clear their expiration times.\n  const expirationTimes = root.expirationTimes;\n  let lanes = suspendedLanes;\n  while (lanes > 0) {\n    const index = pickArbitraryLaneIndex(lanes);\n    const lane = 1 << index;\n\n    expirationTimes[index] = NoTimestamp;\n\n    lanes &= ~lane;\n  }\n}\n\nexport function markRootPinged(\n  root: FiberRoot,\n  pingedLanes: Lanes,\n  eventTime: number,\n) {\n  root.pingedLanes |= root.suspendedLanes & pingedLanes;\n}\n\nexport function markRootExpired(root: FiberRoot, expiredLanes: Lanes) {\n  root.expiredLanes |= expiredLanes & root.pendingLanes;\n}\n\nexport function markDiscreteUpdatesExpired(root: FiberRoot) {\n  root.expiredLanes |= InputDiscreteLanes & root.pendingLanes;\n}\n\nexport function hasDiscreteLanes(lanes: Lanes) {\n  return (lanes & InputDiscreteLanes) !== NoLanes;\n}\n\nexport function markRootMutableRead(root: FiberRoot, updateLane: Lane) {\n  root.mutableReadLanes |= updateLane & root.pendingLanes;\n}\n\nexport function markRootFinished(root: FiberRoot, remainingLanes: Lanes) {\n  const noLongerPendingLanes = root.pendingLanes & ~remainingLanes;\n\n  root.pendingLanes = remainingLanes;\n\n  // Let's try everything again\n  root.suspendedLanes = 0;\n  root.pingedLanes = 0;\n\n  root.expiredLanes &= remainingLanes;\n  root.mutableReadLanes &= remainingLanes;\n\n  root.entangledLanes &= remainingLanes;\n\n  const entanglements = root.entanglements;\n  const eventTimes = root.eventTimes;\n  const expirationTimes = root.expirationTimes;\n\n  // Clear the lanes that no longer have pending work\n  let lanes = noLongerPendingLanes;\n  while (lanes > 0) {\n    const index = pickArbitraryLaneIndex(lanes);\n    const lane = 1 << index;\n\n    entanglements[index] = NoLanes;\n    eventTimes[index] = NoTimestamp;\n    expirationTimes[index] = NoTimestamp;\n\n    lanes &= ~lane;\n  }\n}\n\nexport function markRootEntangled(root: FiberRoot, entangledLanes: Lanes) {\n  root.entangledLanes |= entangledLanes;\n\n  const entanglements = root.entanglements;\n  let lanes = entangledLanes;\n  while (lanes > 0) {\n    const index = pickArbitraryLaneIndex(lanes);\n    const lane = 1 << index;\n\n    entanglements[index] |= entangledLanes;\n\n    lanes &= ~lane;\n  }\n}\n\nexport function getBumpedLaneForHydration(\n  root: FiberRoot,\n  renderLanes: Lanes,\n): Lane {\n  getHighestPriorityLanes(renderLanes);\n  const highestLanePriority = return_highestLanePriority;\n\n  let lane;\n  switch (highestLanePriority) {\n    case SyncLanePriority:\n    case SyncBatchedLanePriority:\n      lane = NoLane;\n      break;\n    case InputDiscreteHydrationLanePriority:\n    case InputDiscreteLanePriority:\n      lane = InputDiscreteHydrationLane;\n      break;\n    case InputContinuousHydrationLanePriority:\n    case InputContinuousLanePriority:\n      lane = InputContinuousHydrationLane;\n      break;\n    case DefaultHydrationLanePriority:\n    case DefaultLanePriority:\n      lane = DefaultHydrationLane;\n      break;\n    case TransitionHydrationPriority:\n    case TransitionPriority:\n      lane = TransitionHydrationLane;\n      break;\n    case RetryLanePriority:\n      // Shouldn't be reachable under normal circumstances, so there's no\n      // dedicated lane for retry priority. Use the one for long transitions.\n      lane = TransitionHydrationLane;\n      break;\n    case SelectiveHydrationLanePriority:\n      lane = SelectiveHydrationLane;\n      break;\n    case IdleHydrationLanePriority:\n    case IdleLanePriority:\n      lane = IdleHydrationLane;\n      break;\n    case OffscreenLanePriority:\n    case NoLanePriority:\n      lane = NoLane;\n      break;\n    default:\n      invariant(false, 'Invalid lane: %s. This is a bug in React.', lane);\n  }\n\n  // Check if the lane we chose is suspended. If so, that indicates that we\n  // already attempted and failed to hydrate at that level. Also check if we're\n  // already rendering that lane, which is rare but could happen.\n  if ((lane & (root.suspendedLanes | renderLanes)) !== NoLane) {\n    // Give up trying to hydrate and fall back to client render.\n    return NoLane;\n  }\n\n  return lane;\n}\n\nconst clz32 = Math.clz32 ? Math.clz32 : clz32Fallback;\n\n// Count leading zeros. Only used on lanes, so assume input is an integer.\n// Based on:\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/clz32\nconst log = Math.log;\nconst LN2 = Math.LN2;\nfunction clz32Fallback(lanes: Lanes | Lane) {\n  if (lanes === 0) {\n    return 32;\n  }\n  return (31 - ((log(lanes) / LN2) | 0)) | 0;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {ReactPriorityLevel} from './ReactInternalTypes';\n\n// Intentionally not named imports because Rollup would use dynamic dispatch for\n// CommonJS interop named imports.\nimport * as Scheduler from 'scheduler';\nimport {__interactionsRef} from 'scheduler/tracing';\nimport {\n  enableSchedulerTracing,\n  decoupleUpdatePriorityFromScheduler,\n} from 'shared/ReactFeatureFlags';\nimport invariant from 'shared/invariant';\nimport {\n  SyncLanePriority,\n  getCurrentUpdateLanePriority,\n  setCurrentUpdateLanePriority,\n} from './ReactFiberLane';\n\nconst {\n  unstable_runWithPriority: Scheduler_runWithPriority,\n  unstable_scheduleCallback: Scheduler_scheduleCallback,\n  unstable_cancelCallback: Scheduler_cancelCallback,\n  unstable_shouldYield: Scheduler_shouldYield,\n  unstable_requestPaint: Scheduler_requestPaint,\n  unstable_now: Scheduler_now,\n  unstable_getCurrentPriorityLevel: Scheduler_getCurrentPriorityLevel,\n  unstable_ImmediatePriority: Scheduler_ImmediatePriority,\n  unstable_UserBlockingPriority: Scheduler_UserBlockingPriority,\n  unstable_NormalPriority: Scheduler_NormalPriority,\n  unstable_LowPriority: Scheduler_LowPriority,\n  unstable_IdlePriority: Scheduler_IdlePriority,\n} = Scheduler;\n\nif (enableSchedulerTracing) {\n  // Provide explicit error message when production+profiling bundle of e.g.\n  // react-dom is used with production (non-profiling) bundle of\n  // scheduler/tracing\n  invariant(\n    __interactionsRef != null && __interactionsRef.current != null,\n    'It is not supported to run the profiling version of a renderer (for ' +\n      'example, `react-dom/profiling`) without also replacing the ' +\n      '`scheduler/tracing` module with `scheduler/tracing-profiling`. Your ' +\n      'bundler might have a setting for aliasing both modules. Learn more at ' +\n      'https://reactjs.org/link/profiling',\n  );\n}\n\nexport type SchedulerCallback = (isSync: boolean) => SchedulerCallback | null;\n\ntype SchedulerCallbackOptions = {timeout?: number, ...};\n\nconst fakeCallbackNode = {};\n\n// Except for NoPriority, these correspond to Scheduler priorities. We use\n// ascending numbers so we can compare them like numbers. They start at 90 to\n// avoid clashing with Scheduler's priorities.\nexport const ImmediatePriority: ReactPriorityLevel = 99;\nexport const UserBlockingPriority: ReactPriorityLevel = 98;\nexport const NormalPriority: ReactPriorityLevel = 97;\nexport const LowPriority: ReactPriorityLevel = 96;\nexport const IdlePriority: ReactPriorityLevel = 95;\n// NoPriority is the absence of priority. Also React-only.\nexport const NoPriority: ReactPriorityLevel = 90;\n\nexport const shouldYield = Scheduler_shouldYield;\nexport const requestPaint =\n  // Fall back gracefully if we're running an older version of Scheduler.\n  Scheduler_requestPaint !== undefined ? Scheduler_requestPaint : () => {};\n\nlet syncQueue: Array<SchedulerCallback> | null = null;\nlet immediateQueueCallbackNode: mixed | null = null;\nlet isFlushingSyncQueue: boolean = false;\nconst initialTimeMs: number = Scheduler_now();\n\n// If the initial timestamp is reasonably small, use Scheduler's `now` directly.\n// This will be the case for modern browsers that support `performance.now`. In\n// older browsers, Scheduler falls back to `Date.now`, which returns a Unix\n// timestamp. In that case, subtract the module initialization time to simulate\n// the behavior of performance.now and keep our times small enough to fit\n// within 32 bits.\n// TODO: Consider lifting this into Scheduler.\nexport const now =\n  initialTimeMs < 10000 ? Scheduler_now : () => Scheduler_now() - initialTimeMs;\n\nexport function getCurrentPriorityLevel(): ReactPriorityLevel {\n  switch (Scheduler_getCurrentPriorityLevel()) {\n    case Scheduler_ImmediatePriority:\n      return ImmediatePriority;\n    case Scheduler_UserBlockingPriority:\n      return UserBlockingPriority;\n    case Scheduler_NormalPriority:\n      return NormalPriority;\n    case Scheduler_LowPriority:\n      return LowPriority;\n    case Scheduler_IdlePriority:\n      return IdlePriority;\n    default:\n      invariant(false, 'Unknown priority level.');\n  }\n}\n\nfunction reactPriorityToSchedulerPriority(reactPriorityLevel) {\n  switch (reactPriorityLevel) {\n    case ImmediatePriority:\n      return Scheduler_ImmediatePriority;\n    case UserBlockingPriority:\n      return Scheduler_UserBlockingPriority;\n    case NormalPriority:\n      return Scheduler_NormalPriority;\n    case LowPriority:\n      return Scheduler_LowPriority;\n    case IdlePriority:\n      return Scheduler_IdlePriority;\n    default:\n      invariant(false, 'Unknown priority level.');\n  }\n}\n\nexport function runWithPriority<T>(\n  reactPriorityLevel: ReactPriorityLevel,\n  fn: () => T,\n): T {\n  const priorityLevel = reactPriorityToSchedulerPriority(reactPriorityLevel);\n  return Scheduler_runWithPriority(priorityLevel, fn);\n}\n\nexport function scheduleCallback(\n  reactPriorityLevel: ReactPriorityLevel,\n  callback: SchedulerCallback,\n  options: SchedulerCallbackOptions | void | null,\n) {\n  const priorityLevel = reactPriorityToSchedulerPriority(reactPriorityLevel);\n  return Scheduler_scheduleCallback(priorityLevel, callback, options);\n}\n\nexport function scheduleSyncCallback(callback: SchedulerCallback) {\n  // Push this callback into an internal queue. We'll flush these either in\n  // the next tick, or earlier if something calls `flushSyncCallbackQueue`.\n  if (syncQueue === null) {\n    syncQueue = [callback];\n    // Flush the queue in the next tick, at the earliest.\n    immediateQueueCallbackNode = Scheduler_scheduleCallback(\n      Scheduler_ImmediatePriority,\n      flushSyncCallbackQueueImpl,\n    );\n  } else {\n    // Push onto existing queue. Don't need to schedule a callback because\n    // we already scheduled one when we created the queue.\n    syncQueue.push(callback);\n  }\n  return fakeCallbackNode;\n}\n\nexport function cancelCallback(callbackNode: mixed) {\n  if (callbackNode !== fakeCallbackNode) {\n    Scheduler_cancelCallback(callbackNode);\n  }\n}\n\nexport function flushSyncCallbackQueue() {\n  if (immediateQueueCallbackNode !== null) {\n    const node = immediateQueueCallbackNode;\n    immediateQueueCallbackNode = null;\n    Scheduler_cancelCallback(node);\n  }\n  flushSyncCallbackQueueImpl();\n}\n\nfunction flushSyncCallbackQueueImpl() {\n  if (!isFlushingSyncQueue && syncQueue !== null) {\n    // Prevent re-entrancy.\n    isFlushingSyncQueue = true;\n    let i = 0;\n    if (decoupleUpdatePriorityFromScheduler) {\n      const previousLanePriority = getCurrentUpdateLanePriority();\n      try {\n        const isSync = true;\n        const queue = syncQueue;\n        setCurrentUpdateLanePriority(SyncLanePriority);\n        runWithPriority(ImmediatePriority, () => {\n          for (; i < queue.length; i++) {\n            let callback = queue[i];\n            do {\n              callback = callback(isSync);\n            } while (callback !== null);\n          }\n        });\n        syncQueue = null;\n      } catch (error) {\n        // If something throws, leave the remaining callbacks on the queue.\n        if (syncQueue !== null) {\n          syncQueue = syncQueue.slice(i + 1);\n        }\n        // Resume flushing in the next tick\n        Scheduler_scheduleCallback(\n          Scheduler_ImmediatePriority,\n          flushSyncCallbackQueue,\n        );\n        throw error;\n      } finally {\n        setCurrentUpdateLanePriority(previousLanePriority);\n        isFlushingSyncQueue = false;\n      }\n    } else {\n      try {\n        const isSync = true;\n        const queue = syncQueue;\n        runWithPriority(ImmediatePriority, () => {\n          for (; i < queue.length; i++) {\n            let callback = queue[i];\n            do {\n              callback = callback(isSync);\n            } while (callback !== null);\n          }\n        });\n        syncQueue = null;\n      } catch (error) {\n        // If something throws, leave the remaining callbacks on the queue.\n        if (syncQueue !== null) {\n          syncQueue = syncQueue.slice(i + 1);\n        }\n        // Resume flushing in the next tick\n        Scheduler_scheduleCallback(\n          Scheduler_ImmediatePriority,\n          flushSyncCallbackQueue,\n        );\n        throw error;\n      } finally {\n        isFlushingSyncQueue = false;\n      }\n    }\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Lane, Lanes} from './ReactFiberLane';\nimport type {Fiber} from './ReactInternalTypes';\nimport type {Wakeable} from 'shared/ReactTypes';\n\nimport {enableSchedulingProfiler} from 'shared/ReactFeatureFlags';\nimport ReactVersion from 'shared/ReactVersion';\nimport getComponentName from 'shared/getComponentName';\n\n/**\n * If performance exists and supports the subset of the User Timing API that we\n * require.\n */\nconst supportsUserTiming =\n  typeof performance !== 'undefined' && typeof performance.mark === 'function';\n\nfunction formatLanes(laneOrLanes: Lane | Lanes): string {\n  return ((laneOrLanes: any): number).toString();\n}\n\n// Create a mark on React initialization\nif (enableSchedulingProfiler) {\n  if (supportsUserTiming) {\n    performance.mark(`--react-init-${ReactVersion}`);\n  }\n}\n\nexport function markCommitStarted(lanes: Lanes): void {\n  if (enableSchedulingProfiler) {\n    if (supportsUserTiming) {\n      performance.mark(`--commit-start-${formatLanes(lanes)}`);\n    }\n  }\n}\n\nexport function markCommitStopped(): void {\n  if (enableSchedulingProfiler) {\n    if (supportsUserTiming) {\n      performance.mark('--commit-stop');\n    }\n  }\n}\n\nconst PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\n\n// $FlowFixMe: Flow cannot handle polymorphic WeakMaps\nconst wakeableIDs: WeakMap<Wakeable, number> = new PossiblyWeakMap();\nlet wakeableID: number = 0;\nfunction getWakeableID(wakeable: Wakeable): number {\n  if (!wakeableIDs.has(wakeable)) {\n    wakeableIDs.set(wakeable, wakeableID++);\n  }\n  return ((wakeableIDs.get(wakeable): any): number);\n}\n\nexport function markComponentSuspended(fiber: Fiber, wakeable: Wakeable): void {\n  if (enableSchedulingProfiler) {\n    if (supportsUserTiming) {\n      const id = getWakeableID(wakeable);\n      const componentName = getComponentName(fiber.type) || 'Unknown';\n      // TODO Add component stack id\n      performance.mark(`--suspense-suspend-${id}-${componentName}`);\n      wakeable.then(\n        () => performance.mark(`--suspense-resolved-${id}-${componentName}`),\n        () => performance.mark(`--suspense-rejected-${id}-${componentName}`),\n      );\n    }\n  }\n}\n\nexport function markLayoutEffectsStarted(lanes: Lanes): void {\n  if (enableSchedulingProfiler) {\n    if (supportsUserTiming) {\n      performance.mark(`--layout-effects-start-${formatLanes(lanes)}`);\n    }\n  }\n}\n\nexport function markLayoutEffectsStopped(): void {\n  if (enableSchedulingProfiler) {\n    if (supportsUserTiming) {\n      performance.mark('--layout-effects-stop');\n    }\n  }\n}\n\nexport function markPassiveEffectsStarted(lanes: Lanes): void {\n  if (enableSchedulingProfiler) {\n    if (supportsUserTiming) {\n      performance.mark(`--passive-effects-start-${formatLanes(lanes)}`);\n    }\n  }\n}\n\nexport function markPassiveEffectsStopped(): void {\n  if (enableSchedulingProfiler) {\n    if (supportsUserTiming) {\n      performance.mark('--passive-effects-stop');\n    }\n  }\n}\n\nexport function markRenderStarted(lanes: Lanes): void {\n  if (enableSchedulingProfiler) {\n    if (supportsUserTiming) {\n      performance.mark(`--render-start-${formatLanes(lanes)}`);\n    }\n  }\n}\n\nexport function markRenderYielded(): void {\n  if (enableSchedulingProfiler) {\n    if (supportsUserTiming) {\n      performance.mark('--render-yield');\n    }\n  }\n}\n\nexport function markRenderStopped(): void {\n  if (enableSchedulingProfiler) {\n    if (supportsUserTiming) {\n      performance.mark('--render-stop');\n    }\n  }\n}\n\nexport function markRenderScheduled(lane: Lane): void {\n  if (enableSchedulingProfiler) {\n    if (supportsUserTiming) {\n      performance.mark(`--schedule-render-${formatLanes(lane)}`);\n    }\n  }\n}\n\nexport function markForceUpdateScheduled(fiber: Fiber, lane: Lane): void {\n  if (enableSchedulingProfiler) {\n    if (supportsUserTiming) {\n      const componentName = getComponentName(fiber.type) || 'Unknown';\n      // TODO Add component stack id\n      performance.mark(\n        `--schedule-forced-update-${formatLanes(lane)}-${componentName}`,\n      );\n    }\n  }\n}\n\nexport function markStateUpdateScheduled(fiber: Fiber, lane: Lane): void {\n  if (enableSchedulingProfiler) {\n    if (supportsUserTiming) {\n      const componentName = getComponentName(fiber.type) || 'Unknown';\n      // TODO Add component stack id\n      performance.mark(\n        `--schedule-state-update-${formatLanes(lane)}-${componentName}`,\n      );\n    }\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nexport type TypeOfMode = number;\n\nexport const NoMode = 0b00000;\nexport const StrictMode = 0b00001;\n// TODO: Remove BlockingMode and ConcurrentMode by reading from the root\n// tag instead\nexport const BlockingMode = 0b00010;\nexport const ConcurrentMode = 0b00100;\nexport const ProfileMode = 0b01000;\nexport const DebugTracingMode = 0b10000;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\n\nconst {ReactCurrentBatchConfig} = ReactSharedInternals;\n\nexport const NoTransition = 0;\n\nexport function requestCurrentTransition(): number {\n  return ReactCurrentBatchConfig.transition;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\n/**\n * inlined Object.is polyfill to avoid requiring consumers ship their own\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n */\nfunction is(x: any, y: any) {\n  return (\n    (x === y && (x !== 0 || 1 / x === 1 / y)) || (x !== x && y !== y) // eslint-disable-line no-self-compare\n  );\n}\n\nconst objectIs: (x: any, y: any) => boolean =\n  typeof Object.is === 'function' ? Object.is : is;\n\nexport default objectIs;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport is from './objectIs';\n\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * Performs equality by iterating through keys on an object and returning false\n * when any key has values which are not strictly equal between the arguments.\n * Returns true when the values of all keys are strictly equal.\n */\nfunction shallowEqual(objA: mixed, objB: mixed): boolean {\n  if (is(objA, objB)) {\n    return true;\n  }\n\n  if (\n    typeof objA !== 'object' ||\n    objA === null ||\n    typeof objB !== 'object' ||\n    objB === null\n  ) {\n    return false;\n  }\n\n  const keysA = Object.keys(objA);\n  const keysB = Object.keys(objB);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  }\n\n  // Test for A's keys different from B.\n  for (let i = 0; i < keysA.length; i++) {\n    if (\n      !hasOwnProperty.call(objB, keysA[i]) ||\n      !is(objA[keysA[i]], objB[keysA[i]])\n    ) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport default shallowEqual;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactInternalTypes';\n\nimport {\n  HostComponent,\n  LazyComponent,\n  SuspenseComponent,\n  SuspenseListComponent,\n  FunctionComponent,\n  IndeterminateComponent,\n  ForwardRef,\n  SimpleMemoComponent,\n  Block,\n  ClassComponent,\n} from './ReactWorkTags';\nimport {\n  describeBuiltInComponentFrame,\n  describeFunctionComponentFrame,\n  describeClassComponentFrame,\n} from 'shared/ReactComponentStackFrame';\n\nfunction describeFiber(fiber: Fiber): string {\n  const owner: null | Function = __DEV__\n    ? fiber._debugOwner\n      ? fiber._debugOwner.type\n      : null\n    : null;\n  const source = __DEV__ ? fiber._debugSource : null;\n  switch (fiber.tag) {\n    case HostComponent:\n      return describeBuiltInComponentFrame(fiber.type, source, owner);\n    case LazyComponent:\n      return describeBuiltInComponentFrame('Lazy', source, owner);\n    case SuspenseComponent:\n      return describeBuiltInComponentFrame('Suspense', source, owner);\n    case SuspenseListComponent:\n      return describeBuiltInComponentFrame('SuspenseList', source, owner);\n    case FunctionComponent:\n    case IndeterminateComponent:\n    case SimpleMemoComponent:\n      return describeFunctionComponentFrame(fiber.type, source, owner);\n    case ForwardRef:\n      return describeFunctionComponentFrame(fiber.type.render, source, owner);\n    case Block:\n      return describeFunctionComponentFrame(fiber.type._render, source, owner);\n    case ClassComponent:\n      return describeClassComponentFrame(fiber.type, source, owner);\n    default:\n      return '';\n  }\n}\n\nexport function getStackByFiberInDevAndProd(workInProgress: Fiber): string {\n  try {\n    let info = '';\n    let node = workInProgress;\n    do {\n      info += describeFiber(node);\n      node = node.return;\n    } while (node);\n    return info;\n  } catch (x) {\n    return '\\nError generating stack: ' + x.message + '\\n' + x.stack;\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactInternalTypes';\n\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\nimport {getStackByFiberInDevAndProd} from './ReactFiberComponentStack';\nimport getComponentName from 'shared/getComponentName';\n\nconst ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n\nexport let current: Fiber | null = null;\nexport let isRendering: boolean = false;\n\nexport function getCurrentFiberOwnerNameInDevOrNull(): string | null {\n  if (__DEV__) {\n    if (current === null) {\n      return null;\n    }\n    const owner = current._debugOwner;\n    if (owner !== null && typeof owner !== 'undefined') {\n      return getComponentName(owner.type);\n    }\n  }\n  return null;\n}\n\nfunction getCurrentFiberStackInDev(): string {\n  if (__DEV__) {\n    if (current === null) {\n      return '';\n    }\n    // Safe because if current fiber exists, we are reconciling,\n    // and it is guaranteed to be the work-in-progress version.\n    return getStackByFiberInDevAndProd(current);\n  }\n  return '';\n}\n\nexport function resetCurrentFiber() {\n  if (__DEV__) {\n    ReactDebugCurrentFrame.getCurrentStack = null;\n    current = null;\n    isRendering = false;\n  }\n}\n\nexport function setCurrentFiber(fiber: Fiber) {\n  if (__DEV__) {\n    ReactDebugCurrentFrame.getCurrentStack = getCurrentFiberStackInDev;\n    current = fiber;\n    isRendering = false;\n  }\n}\n\nexport function setIsRendering(rendering: boolean) {\n  if (__DEV__) {\n    isRendering = rendering;\n  }\n}\n\nexport function getIsRendering() {\n  if (__DEV__) {\n    return isRendering;\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactInternalTypes';\n\nimport {\n  resetCurrentFiber as resetCurrentDebugFiberInDEV,\n  setCurrentFiber as setCurrentDebugFiberInDEV,\n} from './ReactCurrentFiber';\nimport getComponentName from 'shared/getComponentName';\nimport {StrictMode} from './ReactTypeOfMode';\n\ntype FiberArray = Array<Fiber>;\ntype FiberToFiberComponentsMap = Map<Fiber, FiberArray>;\n\nconst ReactStrictModeWarnings = {\n  recordUnsafeLifecycleWarnings(fiber: Fiber, instance: any): void {},\n  flushPendingUnsafeLifecycleWarnings(): void {},\n  recordLegacyContextWarning(fiber: Fiber, instance: any): void {},\n  flushLegacyContextWarning(): void {},\n  discardPendingWarnings(): void {},\n};\n\nif (__DEV__) {\n  const findStrictRoot = (fiber: Fiber): Fiber | null => {\n    let maybeStrictRoot = null;\n\n    let node = fiber;\n    while (node !== null) {\n      if (node.mode & StrictMode) {\n        maybeStrictRoot = node;\n      }\n      node = node.return;\n    }\n\n    return maybeStrictRoot;\n  };\n\n  const setToSortedString = set => {\n    const array = [];\n    set.forEach(value => {\n      array.push(value);\n    });\n    return array.sort().join(', ');\n  };\n\n  let pendingComponentWillMountWarnings: Array<Fiber> = [];\n  let pendingUNSAFE_ComponentWillMountWarnings: Array<Fiber> = [];\n  let pendingComponentWillReceivePropsWarnings: Array<Fiber> = [];\n  let pendingUNSAFE_ComponentWillReceivePropsWarnings: Array<Fiber> = [];\n  let pendingComponentWillUpdateWarnings: Array<Fiber> = [];\n  let pendingUNSAFE_ComponentWillUpdateWarnings: Array<Fiber> = [];\n\n  // Tracks components we have already warned about.\n  const didWarnAboutUnsafeLifecycles = new Set();\n\n  ReactStrictModeWarnings.recordUnsafeLifecycleWarnings = (\n    fiber: Fiber,\n    instance: any,\n  ) => {\n    // Dedup strategy: Warn once per component.\n    if (didWarnAboutUnsafeLifecycles.has(fiber.type)) {\n      return;\n    }\n\n    if (\n      typeof instance.componentWillMount === 'function' &&\n      // Don't warn about react-lifecycles-compat polyfilled components.\n      instance.componentWillMount.__suppressDeprecationWarning !== true\n    ) {\n      pendingComponentWillMountWarnings.push(fiber);\n    }\n\n    if (\n      fiber.mode & StrictMode &&\n      typeof instance.UNSAFE_componentWillMount === 'function'\n    ) {\n      pendingUNSAFE_ComponentWillMountWarnings.push(fiber);\n    }\n\n    if (\n      typeof instance.componentWillReceiveProps === 'function' &&\n      instance.componentWillReceiveProps.__suppressDeprecationWarning !== true\n    ) {\n      pendingComponentWillReceivePropsWarnings.push(fiber);\n    }\n\n    if (\n      fiber.mode & StrictMode &&\n      typeof instance.UNSAFE_componentWillReceiveProps === 'function'\n    ) {\n      pendingUNSAFE_ComponentWillReceivePropsWarnings.push(fiber);\n    }\n\n    if (\n      typeof instance.componentWillUpdate === 'function' &&\n      instance.componentWillUpdate.__suppressDeprecationWarning !== true\n    ) {\n      pendingComponentWillUpdateWarnings.push(fiber);\n    }\n\n    if (\n      fiber.mode & StrictMode &&\n      typeof instance.UNSAFE_componentWillUpdate === 'function'\n    ) {\n      pendingUNSAFE_ComponentWillUpdateWarnings.push(fiber);\n    }\n  };\n\n  ReactStrictModeWarnings.flushPendingUnsafeLifecycleWarnings = () => {\n    // We do an initial pass to gather component names\n    const componentWillMountUniqueNames = new Set();\n    if (pendingComponentWillMountWarnings.length > 0) {\n      pendingComponentWillMountWarnings.forEach(fiber => {\n        componentWillMountUniqueNames.add(\n          getComponentName(fiber.type) || 'Component',\n        );\n        didWarnAboutUnsafeLifecycles.add(fiber.type);\n      });\n      pendingComponentWillMountWarnings = [];\n    }\n\n    const UNSAFE_componentWillMountUniqueNames = new Set();\n    if (pendingUNSAFE_ComponentWillMountWarnings.length > 0) {\n      pendingUNSAFE_ComponentWillMountWarnings.forEach(fiber => {\n        UNSAFE_componentWillMountUniqueNames.add(\n          getComponentName(fiber.type) || 'Component',\n        );\n        didWarnAboutUnsafeLifecycles.add(fiber.type);\n      });\n      pendingUNSAFE_ComponentWillMountWarnings = [];\n    }\n\n    const componentWillReceivePropsUniqueNames = new Set();\n    if (pendingComponentWillReceivePropsWarnings.length > 0) {\n      pendingComponentWillReceivePropsWarnings.forEach(fiber => {\n        componentWillReceivePropsUniqueNames.add(\n          getComponentName(fiber.type) || 'Component',\n        );\n        didWarnAboutUnsafeLifecycles.add(fiber.type);\n      });\n\n      pendingComponentWillReceivePropsWarnings = [];\n    }\n\n    const UNSAFE_componentWillReceivePropsUniqueNames = new Set();\n    if (pendingUNSAFE_ComponentWillReceivePropsWarnings.length > 0) {\n      pendingUNSAFE_ComponentWillReceivePropsWarnings.forEach(fiber => {\n        UNSAFE_componentWillReceivePropsUniqueNames.add(\n          getComponentName(fiber.type) || 'Component',\n        );\n        didWarnAboutUnsafeLifecycles.add(fiber.type);\n      });\n\n      pendingUNSAFE_ComponentWillReceivePropsWarnings = [];\n    }\n\n    const componentWillUpdateUniqueNames = new Set();\n    if (pendingComponentWillUpdateWarnings.length > 0) {\n      pendingComponentWillUpdateWarnings.forEach(fiber => {\n        componentWillUpdateUniqueNames.add(\n          getComponentName(fiber.type) || 'Component',\n        );\n        didWarnAboutUnsafeLifecycles.add(fiber.type);\n      });\n\n      pendingComponentWillUpdateWarnings = [];\n    }\n\n    const UNSAFE_componentWillUpdateUniqueNames = new Set();\n    if (pendingUNSAFE_ComponentWillUpdateWarnings.length > 0) {\n      pendingUNSAFE_ComponentWillUpdateWarnings.forEach(fiber => {\n        UNSAFE_componentWillUpdateUniqueNames.add(\n          getComponentName(fiber.type) || 'Component',\n        );\n        didWarnAboutUnsafeLifecycles.add(fiber.type);\n      });\n\n      pendingUNSAFE_ComponentWillUpdateWarnings = [];\n    }\n\n    // Finally, we flush all the warnings\n    // UNSAFE_ ones before the deprecated ones, since they'll be 'louder'\n    if (UNSAFE_componentWillMountUniqueNames.size > 0) {\n      const sortedNames = setToSortedString(\n        UNSAFE_componentWillMountUniqueNames,\n      );\n      console.error(\n        'Using UNSAFE_componentWillMount in strict mode is not recommended and may indicate bugs in your code. ' +\n          'See https://reactjs.org/link/unsafe-component-lifecycles for details.\\n\\n' +\n          '* Move code with side effects to componentDidMount, and set initial state in the constructor.\\n' +\n          '\\nPlease update the following components: %s',\n        sortedNames,\n      );\n    }\n\n    if (UNSAFE_componentWillReceivePropsUniqueNames.size > 0) {\n      const sortedNames = setToSortedString(\n        UNSAFE_componentWillReceivePropsUniqueNames,\n      );\n      console.error(\n        'Using UNSAFE_componentWillReceiveProps in strict mode is not recommended ' +\n          'and may indicate bugs in your code. ' +\n          'See https://reactjs.org/link/unsafe-component-lifecycles for details.\\n\\n' +\n          '* Move data fetching code or side effects to componentDidUpdate.\\n' +\n          \"* If you're updating state whenever props change, \" +\n          'refactor your code to use memoization techniques or move it to ' +\n          'static getDerivedStateFromProps. Learn more at: https://reactjs.org/link/derived-state\\n' +\n          '\\nPlease update the following components: %s',\n        sortedNames,\n      );\n    }\n\n    if (UNSAFE_componentWillUpdateUniqueNames.size > 0) {\n      const sortedNames = setToSortedString(\n        UNSAFE_componentWillUpdateUniqueNames,\n      );\n      console.error(\n        'Using UNSAFE_componentWillUpdate in strict mode is not recommended ' +\n          'and may indicate bugs in your code. ' +\n          'See https://reactjs.org/link/unsafe-component-lifecycles for details.\\n\\n' +\n          '* Move data fetching code or side effects to componentDidUpdate.\\n' +\n          '\\nPlease update the following components: %s',\n        sortedNames,\n      );\n    }\n\n    if (componentWillMountUniqueNames.size > 0) {\n      const sortedNames = setToSortedString(componentWillMountUniqueNames);\n\n      console.warn(\n        'componentWillMount has been renamed, and is not recommended for use. ' +\n          'See https://reactjs.org/link/unsafe-component-lifecycles for details.\\n\\n' +\n          '* Move code with side effects to componentDidMount, and set initial state in the constructor.\\n' +\n          '* Rename componentWillMount to UNSAFE_componentWillMount to suppress ' +\n          'this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. ' +\n          'To rename all deprecated lifecycles to their new names, you can run ' +\n          '`npx react-codemod rename-unsafe-lifecycles` in your project source folder.\\n' +\n          '\\nPlease update the following components: %s',\n        sortedNames,\n      );\n    }\n\n    if (componentWillReceivePropsUniqueNames.size > 0) {\n      const sortedNames = setToSortedString(\n        componentWillReceivePropsUniqueNames,\n      );\n\n      console.warn(\n        'componentWillReceiveProps has been renamed, and is not recommended for use. ' +\n          'See https://reactjs.org/link/unsafe-component-lifecycles for details.\\n\\n' +\n          '* Move data fetching code or side effects to componentDidUpdate.\\n' +\n          \"* If you're updating state whenever props change, refactor your \" +\n          'code to use memoization techniques or move it to ' +\n          'static getDerivedStateFromProps. Learn more at: https://reactjs.org/link/derived-state\\n' +\n          '* Rename componentWillReceiveProps to UNSAFE_componentWillReceiveProps to suppress ' +\n          'this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. ' +\n          'To rename all deprecated lifecycles to their new names, you can run ' +\n          '`npx react-codemod rename-unsafe-lifecycles` in your project source folder.\\n' +\n          '\\nPlease update the following components: %s',\n        sortedNames,\n      );\n    }\n\n    if (componentWillUpdateUniqueNames.size > 0) {\n      const sortedNames = setToSortedString(componentWillUpdateUniqueNames);\n\n      console.warn(\n        'componentWillUpdate has been renamed, and is not recommended for use. ' +\n          'See https://reactjs.org/link/unsafe-component-lifecycles for details.\\n\\n' +\n          '* Move data fetching code or side effects to componentDidUpdate.\\n' +\n          '* Rename componentWillUpdate to UNSAFE_componentWillUpdate to suppress ' +\n          'this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. ' +\n          'To rename all deprecated lifecycles to their new names, you can run ' +\n          '`npx react-codemod rename-unsafe-lifecycles` in your project source folder.\\n' +\n          '\\nPlease update the following components: %s',\n        sortedNames,\n      );\n    }\n  };\n\n  let pendingLegacyContextWarning: FiberToFiberComponentsMap = new Map();\n\n  // Tracks components we have already warned about.\n  const didWarnAboutLegacyContext = new Set();\n\n  ReactStrictModeWarnings.recordLegacyContextWarning = (\n    fiber: Fiber,\n    instance: any,\n  ) => {\n    const strictRoot = findStrictRoot(fiber);\n    if (strictRoot === null) {\n      console.error(\n        'Expected to find a StrictMode component in a strict mode tree. ' +\n          'This error is likely caused by a bug in React. Please file an issue.',\n      );\n      return;\n    }\n\n    // Dedup strategy: Warn once per component.\n    if (didWarnAboutLegacyContext.has(fiber.type)) {\n      return;\n    }\n\n    let warningsForRoot = pendingLegacyContextWarning.get(strictRoot);\n\n    if (\n      fiber.type.contextTypes != null ||\n      fiber.type.childContextTypes != null ||\n      (instance !== null && typeof instance.getChildContext === 'function')\n    ) {\n      if (warningsForRoot === undefined) {\n        warningsForRoot = [];\n        pendingLegacyContextWarning.set(strictRoot, warningsForRoot);\n      }\n      warningsForRoot.push(fiber);\n    }\n  };\n\n  ReactStrictModeWarnings.flushLegacyContextWarning = () => {\n    ((pendingLegacyContextWarning: any): FiberToFiberComponentsMap).forEach(\n      (fiberArray: FiberArray, strictRoot) => {\n        if (fiberArray.length === 0) {\n          return;\n        }\n        const firstFiber = fiberArray[0];\n\n        const uniqueNames = new Set();\n        fiberArray.forEach(fiber => {\n          uniqueNames.add(getComponentName(fiber.type) || 'Component');\n          didWarnAboutLegacyContext.add(fiber.type);\n        });\n\n        const sortedNames = setToSortedString(uniqueNames);\n\n        try {\n          setCurrentDebugFiberInDEV(firstFiber);\n          console.error(\n            'Legacy context API has been detected within a strict-mode tree.' +\n              '\\n\\nThe old API will be supported in all 16.x releases, but applications ' +\n              'using it should migrate to the new version.' +\n              '\\n\\nPlease update the following components: %s' +\n              '\\n\\nLearn more about this warning here: https://reactjs.org/link/legacy-context',\n            sortedNames,\n          );\n        } finally {\n          resetCurrentDebugFiberInDEV();\n        }\n      },\n    );\n  };\n\n  ReactStrictModeWarnings.discardPendingWarnings = () => {\n    pendingComponentWillMountWarnings = [];\n    pendingUNSAFE_ComponentWillMountWarnings = [];\n    pendingComponentWillReceivePropsWarnings = [];\n    pendingUNSAFE_ComponentWillReceivePropsWarnings = [];\n    pendingComponentWillUpdateWarnings = [];\n    pendingUNSAFE_ComponentWillUpdateWarnings = [];\n    pendingLegacyContextWarning = new Map();\n  };\n}\n\nexport default ReactStrictModeWarnings;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nexport function resolveDefaultProps(Component: any, baseProps: Object): Object {\n  if (Component && Component.defaultProps) {\n    // Resolve default props. Taken from ReactElement\n    const props = Object.assign({}, baseProps);\n    const defaultProps = Component.defaultProps;\n    for (const propName in defaultProps) {\n      if (props[propName] === undefined) {\n        props[propName] = defaultProps[propName];\n      }\n    }\n    return props;\n  }\n  return baseProps;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\n// Max 31 bit integer. The max integer size in V8 for 32-bit systems.\n// Math.pow(2, 30) - 1\n// 0b111111111111111111111111111111\nexport const MAX_SIGNED_31_BIT_INT = 1073741823;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {ReactContext} from 'shared/ReactTypes';\nimport type {Fiber, ContextDependency} from './ReactInternalTypes';\nimport type {StackCursor} from './ReactFiberStack.old';\nimport type {Lanes} from './ReactFiberLane';\n\nimport {isPrimaryRenderer} from './ReactFiberHostConfig';\nimport {createCursor, push, pop} from './ReactFiberStack.old';\nimport {MAX_SIGNED_31_BIT_INT} from './MaxInts';\nimport {\n  ContextProvider,\n  ClassComponent,\n  DehydratedFragment,\n} from './ReactWorkTags';\nimport {\n  NoLanes,\n  NoTimestamp,\n  isSubsetOfLanes,\n  includesSomeLane,\n  mergeLanes,\n  pickArbitraryLane,\n} from './ReactFiberLane';\n\nimport invariant from 'shared/invariant';\nimport is from 'shared/objectIs';\nimport {createUpdate, enqueueUpdate, ForceUpdate} from './ReactUpdateQueue.old';\nimport {markWorkInProgressReceivedUpdate} from './ReactFiberBeginWork.old';\nimport {enableSuspenseServerRenderer} from 'shared/ReactFeatureFlags';\n\nconst valueCursor: StackCursor<mixed> = createCursor(null);\n\nlet rendererSigil;\nif (__DEV__) {\n  // Use this to detect multiple renderers using the same context\n  rendererSigil = {};\n}\n\nlet currentlyRenderingFiber: Fiber | null = null;\nlet lastContextDependency: ContextDependency<mixed> | null = null;\nlet lastContextWithAllBitsObserved: ReactContext<any> | null = null;\n\nlet isDisallowedContextReadInDEV: boolean = false;\n\nexport function resetContextDependencies(): void {\n  // This is called right before React yields execution, to ensure `readContext`\n  // cannot be called outside the render phase.\n  currentlyRenderingFiber = null;\n  lastContextDependency = null;\n  lastContextWithAllBitsObserved = null;\n  if (__DEV__) {\n    isDisallowedContextReadInDEV = false;\n  }\n}\n\nexport function enterDisallowedContextReadInDEV(): void {\n  if (__DEV__) {\n    isDisallowedContextReadInDEV = true;\n  }\n}\n\nexport function exitDisallowedContextReadInDEV(): void {\n  if (__DEV__) {\n    isDisallowedContextReadInDEV = false;\n  }\n}\n\nexport function pushProvider<T>(providerFiber: Fiber, nextValue: T): void {\n  const context: ReactContext<T> = providerFiber.type._context;\n\n  if (isPrimaryRenderer) {\n    push(valueCursor, context._currentValue, providerFiber);\n\n    context._currentValue = nextValue;\n    if (__DEV__) {\n      if (\n        context._currentRenderer !== undefined &&\n        context._currentRenderer !== null &&\n        context._currentRenderer !== rendererSigil\n      ) {\n        console.error(\n          'Detected multiple renderers concurrently rendering the ' +\n            'same context provider. This is currently unsupported.',\n        );\n      }\n      context._currentRenderer = rendererSigil;\n    }\n  } else {\n    push(valueCursor, context._currentValue2, providerFiber);\n\n    context._currentValue2 = nextValue;\n    if (__DEV__) {\n      if (\n        context._currentRenderer2 !== undefined &&\n        context._currentRenderer2 !== null &&\n        context._currentRenderer2 !== rendererSigil\n      ) {\n        console.error(\n          'Detected multiple renderers concurrently rendering the ' +\n            'same context provider. This is currently unsupported.',\n        );\n      }\n      context._currentRenderer2 = rendererSigil;\n    }\n  }\n}\n\nexport function popProvider(providerFiber: Fiber): void {\n  const currentValue = valueCursor.current;\n\n  pop(valueCursor, providerFiber);\n\n  const context: ReactContext<any> = providerFiber.type._context;\n  if (isPrimaryRenderer) {\n    context._currentValue = currentValue;\n  } else {\n    context._currentValue2 = currentValue;\n  }\n}\n\nexport function calculateChangedBits<T>(\n  context: ReactContext<T>,\n  newValue: T,\n  oldValue: T,\n) {\n  if (is(oldValue, newValue)) {\n    // No change\n    return 0;\n  } else {\n    const changedBits =\n      typeof context._calculateChangedBits === 'function'\n        ? context._calculateChangedBits(oldValue, newValue)\n        : MAX_SIGNED_31_BIT_INT;\n\n    if (__DEV__) {\n      if ((changedBits & MAX_SIGNED_31_BIT_INT) !== changedBits) {\n        console.error(\n          'calculateChangedBits: Expected the return value to be a ' +\n            '31-bit integer. Instead received: %s',\n          changedBits,\n        );\n      }\n    }\n    return changedBits | 0;\n  }\n}\n\nexport function scheduleWorkOnParentPath(\n  parent: Fiber | null,\n  renderLanes: Lanes,\n) {\n  // Update the child lanes of all the ancestors, including the alternates.\n  let node = parent;\n  while (node !== null) {\n    const alternate = node.alternate;\n    if (!isSubsetOfLanes(node.childLanes, renderLanes)) {\n      node.childLanes = mergeLanes(node.childLanes, renderLanes);\n      if (alternate !== null) {\n        alternate.childLanes = mergeLanes(alternate.childLanes, renderLanes);\n      }\n    } else if (\n      alternate !== null &&\n      !isSubsetOfLanes(alternate.childLanes, renderLanes)\n    ) {\n      alternate.childLanes = mergeLanes(alternate.childLanes, renderLanes);\n    } else {\n      // Neither alternate was updated, which means the rest of the\n      // ancestor path already has sufficient priority.\n      break;\n    }\n    node = node.return;\n  }\n}\n\nexport function propagateContextChange(\n  workInProgress: Fiber,\n  context: ReactContext<mixed>,\n  changedBits: number,\n  renderLanes: Lanes,\n): void {\n  let fiber = workInProgress.child;\n  if (fiber !== null) {\n    // Set the return pointer of the child to the work-in-progress fiber.\n    fiber.return = workInProgress;\n  }\n  while (fiber !== null) {\n    let nextFiber;\n\n    // Visit this fiber.\n    const list = fiber.dependencies;\n    if (list !== null) {\n      nextFiber = fiber.child;\n\n      let dependency = list.firstContext;\n      while (dependency !== null) {\n        // Check if the context matches.\n        if (\n          dependency.context === context &&\n          (dependency.observedBits & changedBits) !== 0\n        ) {\n          // Match! Schedule an update on this fiber.\n\n          if (fiber.tag === ClassComponent) {\n            // Schedule a force update on the work-in-progress.\n            const update = createUpdate(\n              NoTimestamp,\n              pickArbitraryLane(renderLanes),\n            );\n            update.tag = ForceUpdate;\n            // TODO: Because we don't have a work-in-progress, this will add the\n            // update to the current fiber, too, which means it will persist even if\n            // this render is thrown away. Since it's a race condition, not sure it's\n            // worth fixing.\n            enqueueUpdate(fiber, update);\n          }\n          fiber.lanes = mergeLanes(fiber.lanes, renderLanes);\n          const alternate = fiber.alternate;\n          if (alternate !== null) {\n            alternate.lanes = mergeLanes(alternate.lanes, renderLanes);\n          }\n          scheduleWorkOnParentPath(fiber.return, renderLanes);\n\n          // Mark the updated lanes on the list, too.\n          list.lanes = mergeLanes(list.lanes, renderLanes);\n\n          // Since we already found a match, we can stop traversing the\n          // dependency list.\n          break;\n        }\n        dependency = dependency.next;\n      }\n    } else if (fiber.tag === ContextProvider) {\n      // Don't scan deeper if this is a matching provider\n      nextFiber = fiber.type === workInProgress.type ? null : fiber.child;\n    } else if (\n      enableSuspenseServerRenderer &&\n      fiber.tag === DehydratedFragment\n    ) {\n      // If a dehydrated suspense boundary is in this subtree, we don't know\n      // if it will have any context consumers in it. The best we can do is\n      // mark it as having updates.\n      const parentSuspense = fiber.return;\n      invariant(\n        parentSuspense !== null,\n        'We just came from a parent so we must have had a parent. This is a bug in React.',\n      );\n      parentSuspense.lanes = mergeLanes(parentSuspense.lanes, renderLanes);\n      const alternate = parentSuspense.alternate;\n      if (alternate !== null) {\n        alternate.lanes = mergeLanes(alternate.lanes, renderLanes);\n      }\n      // This is intentionally passing this fiber as the parent\n      // because we want to schedule this fiber as having work\n      // on its children. We'll use the childLanes on\n      // this fiber to indicate that a context has changed.\n      scheduleWorkOnParentPath(parentSuspense, renderLanes);\n      nextFiber = fiber.sibling;\n    } else {\n      // Traverse down.\n      nextFiber = fiber.child;\n    }\n\n    if (nextFiber !== null) {\n      // Set the return pointer of the child to the work-in-progress fiber.\n      nextFiber.return = fiber;\n    } else {\n      // No child. Traverse to next sibling.\n      nextFiber = fiber;\n      while (nextFiber !== null) {\n        if (nextFiber === workInProgress) {\n          // We're back to the root of this subtree. Exit.\n          nextFiber = null;\n          break;\n        }\n        const sibling = nextFiber.sibling;\n        if (sibling !== null) {\n          // Set the return pointer of the sibling to the work-in-progress fiber.\n          sibling.return = nextFiber.return;\n          nextFiber = sibling;\n          break;\n        }\n        // No more siblings. Traverse up.\n        nextFiber = nextFiber.return;\n      }\n    }\n    fiber = nextFiber;\n  }\n}\n\nexport function prepareToReadContext(\n  workInProgress: Fiber,\n  renderLanes: Lanes,\n): void {\n  currentlyRenderingFiber = workInProgress;\n  lastContextDependency = null;\n  lastContextWithAllBitsObserved = null;\n\n  const dependencies = workInProgress.dependencies;\n  if (dependencies !== null) {\n    const firstContext = dependencies.firstContext;\n    if (firstContext !== null) {\n      if (includesSomeLane(dependencies.lanes, renderLanes)) {\n        // Context list has a pending update. Mark that this fiber performed work.\n        markWorkInProgressReceivedUpdate();\n      }\n      // Reset the work-in-progress list\n      dependencies.firstContext = null;\n    }\n  }\n}\n\nexport function readContext<T>(\n  context: ReactContext<T>,\n  observedBits: void | number | boolean,\n): T {\n  if (__DEV__) {\n    // This warning would fire if you read context inside a Hook like useMemo.\n    // Unlike the class check below, it's not enforced in production for perf.\n    if (isDisallowedContextReadInDEV) {\n      console.error(\n        'Context can only be read while React is rendering. ' +\n          'In classes, you can read it in the render method or getDerivedStateFromProps. ' +\n          'In function components, you can read it directly in the function body, but not ' +\n          'inside Hooks like useReducer() or useMemo().',\n      );\n    }\n  }\n\n  if (lastContextWithAllBitsObserved === context) {\n    // Nothing to do. We already observe everything in this context.\n  } else if (observedBits === false || observedBits === 0) {\n    // Do not observe any updates.\n  } else {\n    let resolvedObservedBits; // Avoid deopting on observable arguments or heterogeneous types.\n    if (\n      typeof observedBits !== 'number' ||\n      observedBits === MAX_SIGNED_31_BIT_INT\n    ) {\n      // Observe all updates.\n      lastContextWithAllBitsObserved = ((context: any): ReactContext<mixed>);\n      resolvedObservedBits = MAX_SIGNED_31_BIT_INT;\n    } else {\n      resolvedObservedBits = observedBits;\n    }\n\n    const contextItem = {\n      context: ((context: any): ReactContext<mixed>),\n      observedBits: resolvedObservedBits,\n      next: null,\n    };\n\n    if (lastContextDependency === null) {\n      invariant(\n        currentlyRenderingFiber !== null,\n        'Context can only be read while React is rendering. ' +\n          'In classes, you can read it in the render method or getDerivedStateFromProps. ' +\n          'In function components, you can read it directly in the function body, but not ' +\n          'inside Hooks like useReducer() or useMemo().',\n      );\n\n      // This is the first dependency for this component. Create a new list.\n      lastContextDependency = contextItem;\n      currentlyRenderingFiber.dependencies = {\n        lanes: NoLanes,\n        firstContext: contextItem,\n        responders: null,\n      };\n    } else {\n      // Append a new context item.\n      lastContextDependency = lastContextDependency.next = contextItem;\n    }\n  }\n  return isPrimaryRenderer ? context._currentValue : context._currentValue2;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\n// UpdateQueue is a linked list of prioritized updates.\n//\n// Like fibers, update queues come in pairs: a current queue, which represents\n// the visible state of the screen, and a work-in-progress queue, which can be\n// mutated and processed asynchronously before it is committed — a form of\n// double buffering. If a work-in-progress render is discarded before finishing,\n// we create a new work-in-progress by cloning the current queue.\n//\n// Both queues share a persistent, singly-linked list structure. To schedule an\n// update, we append it to the end of both queues. Each queue maintains a\n// pointer to first update in the persistent list that hasn't been processed.\n// The work-in-progress pointer always has a position equal to or greater than\n// the current queue, since we always work on that one. The current queue's\n// pointer is only updated during the commit phase, when we swap in the\n// work-in-progress.\n//\n// For example:\n//\n//   Current pointer:           A - B - C - D - E - F\n//   Work-in-progress pointer:              D - E - F\n//                                          ^\n//                                          The work-in-progress queue has\n//                                          processed more updates than current.\n//\n// The reason we append to both queues is because otherwise we might drop\n// updates without ever processing them. For example, if we only add updates to\n// the work-in-progress queue, some updates could be lost whenever a work-in\n// -progress render restarts by cloning from current. Similarly, if we only add\n// updates to the current queue, the updates will be lost whenever an already\n// in-progress queue commits and swaps with the current queue. However, by\n// adding to both queues, we guarantee that the update will be part of the next\n// work-in-progress. (And because the work-in-progress queue becomes the\n// current queue once it commits, there's no danger of applying the same\n// update twice.)\n//\n// Prioritization\n// --------------\n//\n// Updates are not sorted by priority, but by insertion; new updates are always\n// appended to the end of the list.\n//\n// The priority is still important, though. When processing the update queue\n// during the render phase, only the updates with sufficient priority are\n// included in the result. If we skip an update because it has insufficient\n// priority, it remains in the queue to be processed later, during a lower\n// priority render. Crucially, all updates subsequent to a skipped update also\n// remain in the queue *regardless of their priority*. That means high priority\n// updates are sometimes processed twice, at two separate priorities. We also\n// keep track of a base state, that represents the state before the first\n// update in the queue is applied.\n//\n// For example:\n//\n//   Given a base state of '', and the following queue of updates\n//\n//     A1 - B2 - C1 - D2\n//\n//   where the number indicates the priority, and the update is applied to the\n//   previous state by appending a letter, React will process these updates as\n//   two separate renders, one per distinct priority level:\n//\n//   First render, at priority 1:\n//     Base state: ''\n//     Updates: [A1, C1]\n//     Result state: 'AC'\n//\n//   Second render, at priority 2:\n//     Base state: 'A'            <-  The base state does not include C1,\n//                                    because B2 was skipped.\n//     Updates: [B2, C1, D2]      <-  C1 was rebased on top of B2\n//     Result state: 'ABCD'\n//\n// Because we process updates in insertion order, and rebase high priority\n// updates when preceding updates are skipped, the final result is deterministic\n// regardless of priority. Intermediate state may vary according to system\n// resources, but the final state is always the same.\n\nimport type {Fiber} from './ReactInternalTypes';\nimport type {Lanes, Lane} from './ReactFiberLane';\n\nimport {NoLane, NoLanes, isSubsetOfLanes, mergeLanes} from './ReactFiberLane';\nimport {\n  enterDisallowedContextReadInDEV,\n  exitDisallowedContextReadInDEV,\n} from './ReactFiberNewContext.old';\nimport {Callback, ShouldCapture, DidCapture} from './ReactFiberFlags';\n\nimport {debugRenderPhaseSideEffectsForStrictMode} from 'shared/ReactFeatureFlags';\n\nimport {StrictMode} from './ReactTypeOfMode';\nimport {markSkippedUpdateLanes} from './ReactFiberWorkLoop.old';\n\nimport invariant from 'shared/invariant';\n\nimport {disableLogs, reenableLogs} from 'shared/ConsolePatchingDev';\n\nexport type Update<State> = {|\n  // TODO: Temporary field. Will remove this by storing a map of\n  // transition -> event time on the root.\n  eventTime: number,\n  lane: Lane,\n\n  tag: 0 | 1 | 2 | 3,\n  payload: any,\n  callback: (() => mixed) | null,\n\n  next: Update<State> | null,\n|};\n\ntype SharedQueue<State> = {|\n  pending: Update<State> | null,\n|};\n\nexport type UpdateQueue<State> = {|\n  baseState: State,\n  firstBaseUpdate: Update<State> | null,\n  lastBaseUpdate: Update<State> | null,\n  shared: SharedQueue<State>,\n  effects: Array<Update<State>> | null,\n|};\n\nexport const UpdateState = 0;\nexport const ReplaceState = 1;\nexport const ForceUpdate = 2;\nexport const CaptureUpdate = 3;\n\n// Global state that is reset at the beginning of calling `processUpdateQueue`.\n// It should only be read right after calling `processUpdateQueue`, via\n// `checkHasForceUpdateAfterProcessing`.\nlet hasForceUpdate = false;\n\nlet didWarnUpdateInsideUpdate;\nlet currentlyProcessingQueue;\nexport let resetCurrentlyProcessingQueue;\nif (__DEV__) {\n  didWarnUpdateInsideUpdate = false;\n  currentlyProcessingQueue = null;\n  resetCurrentlyProcessingQueue = () => {\n    currentlyProcessingQueue = null;\n  };\n}\n\nexport function initializeUpdateQueue<State>(fiber: Fiber): void {\n  const queue: UpdateQueue<State> = {\n    baseState: fiber.memoizedState,\n    firstBaseUpdate: null,\n    lastBaseUpdate: null,\n    shared: {\n      pending: null,\n    },\n    effects: null,\n  };\n  fiber.updateQueue = queue;\n}\n\nexport function cloneUpdateQueue<State>(\n  current: Fiber,\n  workInProgress: Fiber,\n): void {\n  // Clone the update queue from current. Unless it's already a clone.\n  const queue: UpdateQueue<State> = (workInProgress.updateQueue: any);\n  const currentQueue: UpdateQueue<State> = (current.updateQueue: any);\n  if (queue === currentQueue) {\n    const clone: UpdateQueue<State> = {\n      baseState: currentQueue.baseState,\n      firstBaseUpdate: currentQueue.firstBaseUpdate,\n      lastBaseUpdate: currentQueue.lastBaseUpdate,\n      shared: currentQueue.shared,\n      effects: currentQueue.effects,\n    };\n    workInProgress.updateQueue = clone;\n  }\n}\n\nexport function createUpdate(eventTime: number, lane: Lane): Update<*> {\n  const update: Update<*> = {\n    eventTime,\n    lane,\n\n    tag: UpdateState,\n    payload: null,\n    callback: null,\n\n    next: null,\n  };\n  return update;\n}\n\nexport function enqueueUpdate<State>(fiber: Fiber, update: Update<State>) {\n  const updateQueue = fiber.updateQueue;\n  if (updateQueue === null) {\n    // Only occurs if the fiber has been unmounted.\n    return;\n  }\n\n  const sharedQueue: SharedQueue<State> = (updateQueue: any).shared;\n  const pending = sharedQueue.pending;\n  if (pending === null) {\n    // This is the first update. Create a circular list.\n    update.next = update;\n  } else {\n    update.next = pending.next;\n    pending.next = update;\n  }\n  sharedQueue.pending = update;\n\n  if (__DEV__) {\n    if (\n      currentlyProcessingQueue === sharedQueue &&\n      !didWarnUpdateInsideUpdate\n    ) {\n      console.error(\n        'An update (setState, replaceState, or forceUpdate) was scheduled ' +\n          'from inside an update function. Update functions should be pure, ' +\n          'with zero side-effects. Consider using componentDidUpdate or a ' +\n          'callback.',\n      );\n      didWarnUpdateInsideUpdate = true;\n    }\n  }\n}\n\nexport function enqueueCapturedUpdate<State>(\n  workInProgress: Fiber,\n  capturedUpdate: Update<State>,\n) {\n  // Captured updates are updates that are thrown by a child during the render\n  // phase. They should be discarded if the render is aborted. Therefore,\n  // we should only put them on the work-in-progress queue, not the current one.\n  let queue: UpdateQueue<State> = (workInProgress.updateQueue: any);\n\n  // Check if the work-in-progress queue is a clone.\n  const current = workInProgress.alternate;\n  if (current !== null) {\n    const currentQueue: UpdateQueue<State> = (current.updateQueue: any);\n    if (queue === currentQueue) {\n      // The work-in-progress queue is the same as current. This happens when\n      // we bail out on a parent fiber that then captures an error thrown by\n      // a child. Since we want to append the update only to the work-in\n      // -progress queue, we need to clone the updates. We usually clone during\n      // processUpdateQueue, but that didn't happen in this case because we\n      // skipped over the parent when we bailed out.\n      let newFirst = null;\n      let newLast = null;\n      const firstBaseUpdate = queue.firstBaseUpdate;\n      if (firstBaseUpdate !== null) {\n        // Loop through the updates and clone them.\n        let update = firstBaseUpdate;\n        do {\n          const clone: Update<State> = {\n            eventTime: update.eventTime,\n            lane: update.lane,\n\n            tag: update.tag,\n            payload: update.payload,\n            callback: update.callback,\n\n            next: null,\n          };\n          if (newLast === null) {\n            newFirst = newLast = clone;\n          } else {\n            newLast.next = clone;\n            newLast = clone;\n          }\n          update = update.next;\n        } while (update !== null);\n\n        // Append the captured update the end of the cloned list.\n        if (newLast === null) {\n          newFirst = newLast = capturedUpdate;\n        } else {\n          newLast.next = capturedUpdate;\n          newLast = capturedUpdate;\n        }\n      } else {\n        // There are no base updates.\n        newFirst = newLast = capturedUpdate;\n      }\n      queue = {\n        baseState: currentQueue.baseState,\n        firstBaseUpdate: newFirst,\n        lastBaseUpdate: newLast,\n        shared: currentQueue.shared,\n        effects: currentQueue.effects,\n      };\n      workInProgress.updateQueue = queue;\n      return;\n    }\n  }\n\n  // Append the update to the end of the list.\n  const lastBaseUpdate = queue.lastBaseUpdate;\n  if (lastBaseUpdate === null) {\n    queue.firstBaseUpdate = capturedUpdate;\n  } else {\n    lastBaseUpdate.next = capturedUpdate;\n  }\n  queue.lastBaseUpdate = capturedUpdate;\n}\n\nfunction getStateFromUpdate<State>(\n  workInProgress: Fiber,\n  queue: UpdateQueue<State>,\n  update: Update<State>,\n  prevState: State,\n  nextProps: any,\n  instance: any,\n): any {\n  switch (update.tag) {\n    case ReplaceState: {\n      const payload = update.payload;\n      if (typeof payload === 'function') {\n        // Updater function\n        if (__DEV__) {\n          enterDisallowedContextReadInDEV();\n        }\n        const nextState = payload.call(instance, prevState, nextProps);\n        if (__DEV__) {\n          if (\n            debugRenderPhaseSideEffectsForStrictMode &&\n            workInProgress.mode & StrictMode\n          ) {\n            disableLogs();\n            try {\n              payload.call(instance, prevState, nextProps);\n            } finally {\n              reenableLogs();\n            }\n          }\n          exitDisallowedContextReadInDEV();\n        }\n        return nextState;\n      }\n      // State object\n      return payload;\n    }\n    case CaptureUpdate: {\n      workInProgress.flags =\n        (workInProgress.flags & ~ShouldCapture) | DidCapture;\n    }\n    // Intentional fallthrough\n    case UpdateState: {\n      const payload = update.payload;\n      let partialState;\n      if (typeof payload === 'function') {\n        // Updater function\n        if (__DEV__) {\n          enterDisallowedContextReadInDEV();\n        }\n        partialState = payload.call(instance, prevState, nextProps);\n        if (__DEV__) {\n          if (\n            debugRenderPhaseSideEffectsForStrictMode &&\n            workInProgress.mode & StrictMode\n          ) {\n            disableLogs();\n            try {\n              payload.call(instance, prevState, nextProps);\n            } finally {\n              reenableLogs();\n            }\n          }\n          exitDisallowedContextReadInDEV();\n        }\n      } else {\n        // Partial state object\n        partialState = payload;\n      }\n      if (partialState === null || partialState === undefined) {\n        // Null and undefined are treated as no-ops.\n        return prevState;\n      }\n      // Merge the partial state and the previous state.\n      return Object.assign({}, prevState, partialState);\n    }\n    case ForceUpdate: {\n      hasForceUpdate = true;\n      return prevState;\n    }\n  }\n  return prevState;\n}\n\nexport function processUpdateQueue<State>(\n  workInProgress: Fiber,\n  props: any,\n  instance: any,\n  renderLanes: Lanes,\n): void {\n  // This is always non-null on a ClassComponent or HostRoot\n  const queue: UpdateQueue<State> = (workInProgress.updateQueue: any);\n\n  hasForceUpdate = false;\n\n  if (__DEV__) {\n    currentlyProcessingQueue = queue.shared;\n  }\n\n  let firstBaseUpdate = queue.firstBaseUpdate;\n  let lastBaseUpdate = queue.lastBaseUpdate;\n\n  // Check if there are pending updates. If so, transfer them to the base queue.\n  let pendingQueue = queue.shared.pending;\n  if (pendingQueue !== null) {\n    queue.shared.pending = null;\n\n    // The pending queue is circular. Disconnect the pointer between first\n    // and last so that it's non-circular.\n    const lastPendingUpdate = pendingQueue;\n    const firstPendingUpdate = lastPendingUpdate.next;\n    lastPendingUpdate.next = null;\n    // Append pending updates to base queue\n    if (lastBaseUpdate === null) {\n      firstBaseUpdate = firstPendingUpdate;\n    } else {\n      lastBaseUpdate.next = firstPendingUpdate;\n    }\n    lastBaseUpdate = lastPendingUpdate;\n\n    // If there's a current queue, and it's different from the base queue, then\n    // we need to transfer the updates to that queue, too. Because the base\n    // queue is a singly-linked list with no cycles, we can append to both\n    // lists and take advantage of structural sharing.\n    // TODO: Pass `current` as argument\n    const current = workInProgress.alternate;\n    if (current !== null) {\n      // This is always non-null on a ClassComponent or HostRoot\n      const currentQueue: UpdateQueue<State> = (current.updateQueue: any);\n      const currentLastBaseUpdate = currentQueue.lastBaseUpdate;\n      if (currentLastBaseUpdate !== lastBaseUpdate) {\n        if (currentLastBaseUpdate === null) {\n          currentQueue.firstBaseUpdate = firstPendingUpdate;\n        } else {\n          currentLastBaseUpdate.next = firstPendingUpdate;\n        }\n        currentQueue.lastBaseUpdate = lastPendingUpdate;\n      }\n    }\n  }\n\n  // These values may change as we process the queue.\n  if (firstBaseUpdate !== null) {\n    // Iterate through the list of updates to compute the result.\n    let newState = queue.baseState;\n    // TODO: Don't need to accumulate this. Instead, we can remove renderLanes\n    // from the original lanes.\n    let newLanes = NoLanes;\n\n    let newBaseState = null;\n    let newFirstBaseUpdate = null;\n    let newLastBaseUpdate = null;\n\n    let update = firstBaseUpdate;\n    do {\n      const updateLane = update.lane;\n      const updateEventTime = update.eventTime;\n      if (!isSubsetOfLanes(renderLanes, updateLane)) {\n        // Priority is insufficient. Skip this update. If this is the first\n        // skipped update, the previous update/state is the new base\n        // update/state.\n        const clone: Update<State> = {\n          eventTime: updateEventTime,\n          lane: updateLane,\n\n          tag: update.tag,\n          payload: update.payload,\n          callback: update.callback,\n\n          next: null,\n        };\n        if (newLastBaseUpdate === null) {\n          newFirstBaseUpdate = newLastBaseUpdate = clone;\n          newBaseState = newState;\n        } else {\n          newLastBaseUpdate = newLastBaseUpdate.next = clone;\n        }\n        // Update the remaining priority in the queue.\n        newLanes = mergeLanes(newLanes, updateLane);\n      } else {\n        // This update does have sufficient priority.\n\n        if (newLastBaseUpdate !== null) {\n          const clone: Update<State> = {\n            eventTime: updateEventTime,\n            // This update is going to be committed so we never want uncommit\n            // it. Using NoLane works because 0 is a subset of all bitmasks, so\n            // this will never be skipped by the check above.\n            lane: NoLane,\n\n            tag: update.tag,\n            payload: update.payload,\n            callback: update.callback,\n\n            next: null,\n          };\n          newLastBaseUpdate = newLastBaseUpdate.next = clone;\n        }\n\n        // Process this update.\n        newState = getStateFromUpdate(\n          workInProgress,\n          queue,\n          update,\n          newState,\n          props,\n          instance,\n        );\n        const callback = update.callback;\n        if (callback !== null) {\n          workInProgress.flags |= Callback;\n          const effects = queue.effects;\n          if (effects === null) {\n            queue.effects = [update];\n          } else {\n            effects.push(update);\n          }\n        }\n      }\n      update = update.next;\n      if (update === null) {\n        pendingQueue = queue.shared.pending;\n        if (pendingQueue === null) {\n          break;\n        } else {\n          // An update was scheduled from inside a reducer. Add the new\n          // pending updates to the end of the list and keep processing.\n          const lastPendingUpdate = pendingQueue;\n          // Intentionally unsound. Pending updates form a circular list, but we\n          // unravel them when transferring them to the base queue.\n          const firstPendingUpdate = ((lastPendingUpdate.next: any): Update<State>);\n          lastPendingUpdate.next = null;\n          update = firstPendingUpdate;\n          queue.lastBaseUpdate = lastPendingUpdate;\n          queue.shared.pending = null;\n        }\n      }\n    } while (true);\n\n    if (newLastBaseUpdate === null) {\n      newBaseState = newState;\n    }\n\n    queue.baseState = ((newBaseState: any): State);\n    queue.firstBaseUpdate = newFirstBaseUpdate;\n    queue.lastBaseUpdate = newLastBaseUpdate;\n\n    // Set the remaining expiration time to be whatever is remaining in the queue.\n    // This should be fine because the only two other things that contribute to\n    // expiration time are props and context. We're already in the middle of the\n    // begin phase by the time we start processing the queue, so we've already\n    // dealt with the props. Context in components that specify\n    // shouldComponentUpdate is tricky; but we'll have to account for\n    // that regardless.\n    markSkippedUpdateLanes(newLanes);\n    workInProgress.lanes = newLanes;\n    workInProgress.memoizedState = newState;\n  }\n\n  if (__DEV__) {\n    currentlyProcessingQueue = null;\n  }\n}\n\nfunction callCallback(callback, context) {\n  invariant(\n    typeof callback === 'function',\n    'Invalid argument passed as callback. Expected a function. Instead ' +\n      'received: %s',\n    callback,\n  );\n  callback.call(context);\n}\n\nexport function resetHasForceUpdateBeforeProcessing() {\n  hasForceUpdate = false;\n}\n\nexport function checkHasForceUpdateAfterProcessing(): boolean {\n  return hasForceUpdate;\n}\n\nexport function commitUpdateQueue<State>(\n  finishedWork: Fiber,\n  finishedQueue: UpdateQueue<State>,\n  instance: any,\n): void {\n  // Commit the effects\n  const effects = finishedQueue.effects;\n  finishedQueue.effects = null;\n  if (effects !== null) {\n    for (let i = 0; i < effects.length; i++) {\n      const effect = effects[i];\n      const callback = effect.callback;\n      if (callback !== null) {\n        effect.callback = null;\n        callCallback(callback, instance);\n      }\n    }\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactInternalTypes';\nimport type {Lanes} from './ReactFiberLane';\nimport type {UpdateQueue} from './ReactUpdateQueue.old';\n\nimport * as React from 'react';\nimport {Update, Snapshot} from './ReactFiberFlags';\nimport {\n  debugRenderPhaseSideEffectsForStrictMode,\n  disableLegacyContext,\n  enableDebugTracing,\n  enableSchedulingProfiler,\n  warnAboutDeprecatedLifecycles,\n} from 'shared/ReactFeatureFlags';\nimport ReactStrictModeWarnings from './ReactStrictModeWarnings.old';\nimport {isMounted} from './ReactFiberTreeReflection';\nimport {get as getInstance, set as setInstance} from 'shared/ReactInstanceMap';\nimport shallowEqual from 'shared/shallowEqual';\nimport getComponentName from 'shared/getComponentName';\nimport invariant from 'shared/invariant';\nimport {REACT_CONTEXT_TYPE, REACT_PROVIDER_TYPE} from 'shared/ReactSymbols';\n\nimport {resolveDefaultProps} from './ReactFiberLazyComponent.old';\nimport {DebugTracingMode, StrictMode} from './ReactTypeOfMode';\n\nimport {\n  enqueueUpdate,\n  processUpdateQueue,\n  checkHasForceUpdateAfterProcessing,\n  resetHasForceUpdateBeforeProcessing,\n  createUpdate,\n  ReplaceState,\n  ForceUpdate,\n  initializeUpdateQueue,\n  cloneUpdateQueue,\n} from './ReactUpdateQueue.old';\nimport {NoLanes} from './ReactFiberLane';\nimport {\n  cacheContext,\n  getMaskedContext,\n  getUnmaskedContext,\n  hasContextChanged,\n  emptyContextObject,\n} from './ReactFiberContext.old';\nimport {readContext} from './ReactFiberNewContext.old';\nimport {\n  requestEventTime,\n  requestUpdateLane,\n  scheduleUpdateOnFiber,\n} from './ReactFiberWorkLoop.old';\nimport {logForceUpdateScheduled, logStateUpdateScheduled} from './DebugTracing';\n\nimport {disableLogs, reenableLogs} from 'shared/ConsolePatchingDev';\nimport {\n  markForceUpdateScheduled,\n  markStateUpdateScheduled,\n} from './SchedulingProfiler';\n\nconst fakeInternalInstance = {};\nconst isArray = Array.isArray;\n\n// React.Component uses a shared frozen object by default.\n// We'll use it to determine whether we need to initialize legacy refs.\nexport const emptyRefsObject = new React.Component().refs;\n\nlet didWarnAboutStateAssignmentForComponent;\nlet didWarnAboutUninitializedState;\nlet didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate;\nlet didWarnAboutLegacyLifecyclesAndDerivedState;\nlet didWarnAboutUndefinedDerivedState;\nlet warnOnUndefinedDerivedState;\nlet warnOnInvalidCallback;\nlet didWarnAboutDirectlyAssigningPropsToState;\nlet didWarnAboutContextTypeAndContextTypes;\nlet didWarnAboutInvalidateContextType;\n\nif (__DEV__) {\n  didWarnAboutStateAssignmentForComponent = new Set();\n  didWarnAboutUninitializedState = new Set();\n  didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate = new Set();\n  didWarnAboutLegacyLifecyclesAndDerivedState = new Set();\n  didWarnAboutDirectlyAssigningPropsToState = new Set();\n  didWarnAboutUndefinedDerivedState = new Set();\n  didWarnAboutContextTypeAndContextTypes = new Set();\n  didWarnAboutInvalidateContextType = new Set();\n\n  const didWarnOnInvalidCallback = new Set();\n\n  warnOnInvalidCallback = function(callback: mixed, callerName: string) {\n    if (callback === null || typeof callback === 'function') {\n      return;\n    }\n    const key = callerName + '_' + (callback: any);\n    if (!didWarnOnInvalidCallback.has(key)) {\n      didWarnOnInvalidCallback.add(key);\n      console.error(\n        '%s(...): Expected the last optional `callback` argument to be a ' +\n          'function. Instead received: %s.',\n        callerName,\n        callback,\n      );\n    }\n  };\n\n  warnOnUndefinedDerivedState = function(type, partialState) {\n    if (partialState === undefined) {\n      const componentName = getComponentName(type) || 'Component';\n      if (!didWarnAboutUndefinedDerivedState.has(componentName)) {\n        didWarnAboutUndefinedDerivedState.add(componentName);\n        console.error(\n          '%s.getDerivedStateFromProps(): A valid state object (or null) must be returned. ' +\n            'You have returned undefined.',\n          componentName,\n        );\n      }\n    }\n  };\n\n  // This is so gross but it's at least non-critical and can be removed if\n  // it causes problems. This is meant to give a nicer error message for\n  // ReactDOM15.unstable_renderSubtreeIntoContainer(reactDOM16Component,\n  // ...)) which otherwise throws a \"_processChildContext is not a function\"\n  // exception.\n  Object.defineProperty(fakeInternalInstance, '_processChildContext', {\n    enumerable: false,\n    value: function() {\n      invariant(\n        false,\n        '_processChildContext is not available in React 16+. This likely ' +\n          'means you have multiple copies of React and are attempting to nest ' +\n          'a React 15 tree inside a React 16 tree using ' +\n          \"unstable_renderSubtreeIntoContainer, which isn't supported. Try \" +\n          'to make sure you have only one copy of React (and ideally, switch ' +\n          'to ReactDOM.createPortal).',\n      );\n    },\n  });\n  Object.freeze(fakeInternalInstance);\n}\n\nexport function applyDerivedStateFromProps(\n  workInProgress: Fiber,\n  ctor: any,\n  getDerivedStateFromProps: (props: any, state: any) => any,\n  nextProps: any,\n) {\n  const prevState = workInProgress.memoizedState;\n\n  if (__DEV__) {\n    if (\n      debugRenderPhaseSideEffectsForStrictMode &&\n      workInProgress.mode & StrictMode\n    ) {\n      disableLogs();\n      try {\n        // Invoke the function an extra time to help detect side-effects.\n        getDerivedStateFromProps(nextProps, prevState);\n      } finally {\n        reenableLogs();\n      }\n    }\n  }\n\n  const partialState = getDerivedStateFromProps(nextProps, prevState);\n\n  if (__DEV__) {\n    warnOnUndefinedDerivedState(ctor, partialState);\n  }\n  // Merge the partial state and the previous state.\n  const memoizedState =\n    partialState === null || partialState === undefined\n      ? prevState\n      : Object.assign({}, prevState, partialState);\n  workInProgress.memoizedState = memoizedState;\n\n  // Once the update queue is empty, persist the derived state onto the\n  // base state.\n  if (workInProgress.lanes === NoLanes) {\n    // Queue is always non-null for classes\n    const updateQueue: UpdateQueue<any> = (workInProgress.updateQueue: any);\n    updateQueue.baseState = memoizedState;\n  }\n}\n\nconst classComponentUpdater = {\n  isMounted,\n  enqueueSetState(inst, payload, callback) {\n    const fiber = getInstance(inst);\n    const eventTime = requestEventTime();\n    const lane = requestUpdateLane(fiber);\n\n    const update = createUpdate(eventTime, lane);\n    update.payload = payload;\n    if (callback !== undefined && callback !== null) {\n      if (__DEV__) {\n        warnOnInvalidCallback(callback, 'setState');\n      }\n      update.callback = callback;\n    }\n\n    enqueueUpdate(fiber, update);\n    scheduleUpdateOnFiber(fiber, lane, eventTime);\n\n    if (__DEV__) {\n      if (enableDebugTracing) {\n        if (fiber.mode & DebugTracingMode) {\n          const name = getComponentName(fiber.type) || 'Unknown';\n          logStateUpdateScheduled(name, lane, payload);\n        }\n      }\n    }\n\n    if (enableSchedulingProfiler) {\n      markStateUpdateScheduled(fiber, lane);\n    }\n  },\n  enqueueReplaceState(inst, payload, callback) {\n    const fiber = getInstance(inst);\n    const eventTime = requestEventTime();\n    const lane = requestUpdateLane(fiber);\n\n    const update = createUpdate(eventTime, lane);\n    update.tag = ReplaceState;\n    update.payload = payload;\n\n    if (callback !== undefined && callback !== null) {\n      if (__DEV__) {\n        warnOnInvalidCallback(callback, 'replaceState');\n      }\n      update.callback = callback;\n    }\n\n    enqueueUpdate(fiber, update);\n    scheduleUpdateOnFiber(fiber, lane, eventTime);\n\n    if (__DEV__) {\n      if (enableDebugTracing) {\n        if (fiber.mode & DebugTracingMode) {\n          const name = getComponentName(fiber.type) || 'Unknown';\n          logStateUpdateScheduled(name, lane, payload);\n        }\n      }\n    }\n\n    if (enableSchedulingProfiler) {\n      markStateUpdateScheduled(fiber, lane);\n    }\n  },\n  enqueueForceUpdate(inst, callback) {\n    const fiber = getInstance(inst);\n    const eventTime = requestEventTime();\n    const lane = requestUpdateLane(fiber);\n\n    const update = createUpdate(eventTime, lane);\n    update.tag = ForceUpdate;\n\n    if (callback !== undefined && callback !== null) {\n      if (__DEV__) {\n        warnOnInvalidCallback(callback, 'forceUpdate');\n      }\n      update.callback = callback;\n    }\n\n    enqueueUpdate(fiber, update);\n    scheduleUpdateOnFiber(fiber, lane, eventTime);\n\n    if (__DEV__) {\n      if (enableDebugTracing) {\n        if (fiber.mode & DebugTracingMode) {\n          const name = getComponentName(fiber.type) || 'Unknown';\n          logForceUpdateScheduled(name, lane);\n        }\n      }\n    }\n\n    if (enableSchedulingProfiler) {\n      markForceUpdateScheduled(fiber, lane);\n    }\n  },\n};\n\nfunction checkShouldComponentUpdate(\n  workInProgress,\n  ctor,\n  oldProps,\n  newProps,\n  oldState,\n  newState,\n  nextContext,\n) {\n  const instance = workInProgress.stateNode;\n  if (typeof instance.shouldComponentUpdate === 'function') {\n    if (__DEV__) {\n      if (\n        debugRenderPhaseSideEffectsForStrictMode &&\n        workInProgress.mode & StrictMode\n      ) {\n        disableLogs();\n        try {\n          // Invoke the function an extra time to help detect side-effects.\n          instance.shouldComponentUpdate(newProps, newState, nextContext);\n        } finally {\n          reenableLogs();\n        }\n      }\n    }\n    const shouldUpdate = instance.shouldComponentUpdate(\n      newProps,\n      newState,\n      nextContext,\n    );\n\n    if (__DEV__) {\n      if (shouldUpdate === undefined) {\n        console.error(\n          '%s.shouldComponentUpdate(): Returned undefined instead of a ' +\n            'boolean value. Make sure to return true or false.',\n          getComponentName(ctor) || 'Component',\n        );\n      }\n    }\n\n    return shouldUpdate;\n  }\n\n  if (ctor.prototype && ctor.prototype.isPureReactComponent) {\n    return (\n      !shallowEqual(oldProps, newProps) || !shallowEqual(oldState, newState)\n    );\n  }\n\n  return true;\n}\n\nfunction checkClassInstance(workInProgress: Fiber, ctor: any, newProps: any) {\n  const instance = workInProgress.stateNode;\n  if (__DEV__) {\n    const name = getComponentName(ctor) || 'Component';\n    const renderPresent = instance.render;\n\n    if (!renderPresent) {\n      if (ctor.prototype && typeof ctor.prototype.render === 'function') {\n        console.error(\n          '%s(...): No `render` method found on the returned component ' +\n            'instance: did you accidentally return an object from the constructor?',\n          name,\n        );\n      } else {\n        console.error(\n          '%s(...): No `render` method found on the returned component ' +\n            'instance: you may have forgotten to define `render`.',\n          name,\n        );\n      }\n    }\n\n    if (\n      instance.getInitialState &&\n      !instance.getInitialState.isReactClassApproved &&\n      !instance.state\n    ) {\n      console.error(\n        'getInitialState was defined on %s, a plain JavaScript class. ' +\n          'This is only supported for classes created using React.createClass. ' +\n          'Did you mean to define a state property instead?',\n        name,\n      );\n    }\n    if (\n      instance.getDefaultProps &&\n      !instance.getDefaultProps.isReactClassApproved\n    ) {\n      console.error(\n        'getDefaultProps was defined on %s, a plain JavaScript class. ' +\n          'This is only supported for classes created using React.createClass. ' +\n          'Use a static property to define defaultProps instead.',\n        name,\n      );\n    }\n    if (instance.propTypes) {\n      console.error(\n        'propTypes was defined as an instance property on %s. Use a static ' +\n          'property to define propTypes instead.',\n        name,\n      );\n    }\n    if (instance.contextType) {\n      console.error(\n        'contextType was defined as an instance property on %s. Use a static ' +\n          'property to define contextType instead.',\n        name,\n      );\n    }\n\n    if (disableLegacyContext) {\n      if (ctor.childContextTypes) {\n        console.error(\n          '%s uses the legacy childContextTypes API which is no longer supported. ' +\n            'Use React.createContext() instead.',\n          name,\n        );\n      }\n      if (ctor.contextTypes) {\n        console.error(\n          '%s uses the legacy contextTypes API which is no longer supported. ' +\n            'Use React.createContext() with static contextType instead.',\n          name,\n        );\n      }\n    } else {\n      if (instance.contextTypes) {\n        console.error(\n          'contextTypes was defined as an instance property on %s. Use a static ' +\n            'property to define contextTypes instead.',\n          name,\n        );\n      }\n\n      if (\n        ctor.contextType &&\n        ctor.contextTypes &&\n        !didWarnAboutContextTypeAndContextTypes.has(ctor)\n      ) {\n        didWarnAboutContextTypeAndContextTypes.add(ctor);\n        console.error(\n          '%s declares both contextTypes and contextType static properties. ' +\n            'The legacy contextTypes property will be ignored.',\n          name,\n        );\n      }\n    }\n\n    if (typeof instance.componentShouldUpdate === 'function') {\n      console.error(\n        '%s has a method called ' +\n          'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' +\n          'The name is phrased as a question because the function is ' +\n          'expected to return a value.',\n        name,\n      );\n    }\n    if (\n      ctor.prototype &&\n      ctor.prototype.isPureReactComponent &&\n      typeof instance.shouldComponentUpdate !== 'undefined'\n    ) {\n      console.error(\n        '%s has a method called shouldComponentUpdate(). ' +\n          'shouldComponentUpdate should not be used when extending React.PureComponent. ' +\n          'Please extend React.Component if shouldComponentUpdate is used.',\n        getComponentName(ctor) || 'A pure component',\n      );\n    }\n    if (typeof instance.componentDidUnmount === 'function') {\n      console.error(\n        '%s has a method called ' +\n          'componentDidUnmount(). But there is no such lifecycle method. ' +\n          'Did you mean componentWillUnmount()?',\n        name,\n      );\n    }\n    if (typeof instance.componentDidReceiveProps === 'function') {\n      console.error(\n        '%s has a method called ' +\n          'componentDidReceiveProps(). But there is no such lifecycle method. ' +\n          'If you meant to update the state in response to changing props, ' +\n          'use componentWillReceiveProps(). If you meant to fetch data or ' +\n          'run side-effects or mutations after React has updated the UI, use componentDidUpdate().',\n        name,\n      );\n    }\n    if (typeof instance.componentWillRecieveProps === 'function') {\n      console.error(\n        '%s has a method called ' +\n          'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?',\n        name,\n      );\n    }\n    if (typeof instance.UNSAFE_componentWillRecieveProps === 'function') {\n      console.error(\n        '%s has a method called ' +\n          'UNSAFE_componentWillRecieveProps(). Did you mean UNSAFE_componentWillReceiveProps()?',\n        name,\n      );\n    }\n    const hasMutatedProps = instance.props !== newProps;\n    if (instance.props !== undefined && hasMutatedProps) {\n      console.error(\n        '%s(...): When calling super() in `%s`, make sure to pass ' +\n          \"up the same props that your component's constructor was passed.\",\n        name,\n        name,\n      );\n    }\n    if (instance.defaultProps) {\n      console.error(\n        'Setting defaultProps as an instance property on %s is not supported and will be ignored.' +\n          ' Instead, define defaultProps as a static property on %s.',\n        name,\n        name,\n      );\n    }\n\n    if (\n      typeof instance.getSnapshotBeforeUpdate === 'function' &&\n      typeof instance.componentDidUpdate !== 'function' &&\n      !didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.has(ctor)\n    ) {\n      didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.add(ctor);\n      console.error(\n        '%s: getSnapshotBeforeUpdate() should be used with componentDidUpdate(). ' +\n          'This component defines getSnapshotBeforeUpdate() only.',\n        getComponentName(ctor),\n      );\n    }\n\n    if (typeof instance.getDerivedStateFromProps === 'function') {\n      console.error(\n        '%s: getDerivedStateFromProps() is defined as an instance method ' +\n          'and will be ignored. Instead, declare it as a static method.',\n        name,\n      );\n    }\n    if (typeof instance.getDerivedStateFromError === 'function') {\n      console.error(\n        '%s: getDerivedStateFromError() is defined as an instance method ' +\n          'and will be ignored. Instead, declare it as a static method.',\n        name,\n      );\n    }\n    if (typeof ctor.getSnapshotBeforeUpdate === 'function') {\n      console.error(\n        '%s: getSnapshotBeforeUpdate() is defined as a static method ' +\n          'and will be ignored. Instead, declare it as an instance method.',\n        name,\n      );\n    }\n    const state = instance.state;\n    if (state && (typeof state !== 'object' || isArray(state))) {\n      console.error('%s.state: must be set to an object or null', name);\n    }\n    if (\n      typeof instance.getChildContext === 'function' &&\n      typeof ctor.childContextTypes !== 'object'\n    ) {\n      console.error(\n        '%s.getChildContext(): childContextTypes must be defined in order to ' +\n          'use getChildContext().',\n        name,\n      );\n    }\n  }\n}\n\nfunction adoptClassInstance(workInProgress: Fiber, instance: any): void {\n  instance.updater = classComponentUpdater;\n  workInProgress.stateNode = instance;\n  // The instance needs access to the fiber so that it can schedule updates\n  setInstance(instance, workInProgress);\n  if (__DEV__) {\n    instance._reactInternalInstance = fakeInternalInstance;\n  }\n}\n\nfunction constructClassInstance(\n  workInProgress: Fiber,\n  ctor: any,\n  props: any,\n): any {\n  let isLegacyContextConsumer = false;\n  let unmaskedContext = emptyContextObject;\n  let context = emptyContextObject;\n  const contextType = ctor.contextType;\n\n  if (__DEV__) {\n    if ('contextType' in ctor) {\n      const isValid =\n        // Allow null for conditional declaration\n        contextType === null ||\n        (contextType !== undefined &&\n          contextType.$$typeof === REACT_CONTEXT_TYPE &&\n          contextType._context === undefined); // Not a <Context.Consumer>\n\n      if (!isValid && !didWarnAboutInvalidateContextType.has(ctor)) {\n        didWarnAboutInvalidateContextType.add(ctor);\n\n        let addendum = '';\n        if (contextType === undefined) {\n          addendum =\n            ' However, it is set to undefined. ' +\n            'This can be caused by a typo or by mixing up named and default imports. ' +\n            'This can also happen due to a circular dependency, so ' +\n            'try moving the createContext() call to a separate file.';\n        } else if (typeof contextType !== 'object') {\n          addendum = ' However, it is set to a ' + typeof contextType + '.';\n        } else if (contextType.$$typeof === REACT_PROVIDER_TYPE) {\n          addendum = ' Did you accidentally pass the Context.Provider instead?';\n        } else if (contextType._context !== undefined) {\n          // <Context.Consumer>\n          addendum = ' Did you accidentally pass the Context.Consumer instead?';\n        } else {\n          addendum =\n            ' However, it is set to an object with keys {' +\n            Object.keys(contextType).join(', ') +\n            '}.';\n        }\n        console.error(\n          '%s defines an invalid contextType. ' +\n            'contextType should point to the Context object returned by React.createContext().%s',\n          getComponentName(ctor) || 'Component',\n          addendum,\n        );\n      }\n    }\n  }\n\n  if (typeof contextType === 'object' && contextType !== null) {\n    context = readContext((contextType: any));\n  } else if (!disableLegacyContext) {\n    unmaskedContext = getUnmaskedContext(workInProgress, ctor, true);\n    const contextTypes = ctor.contextTypes;\n    isLegacyContextConsumer =\n      contextTypes !== null && contextTypes !== undefined;\n    context = isLegacyContextConsumer\n      ? getMaskedContext(workInProgress, unmaskedContext)\n      : emptyContextObject;\n  }\n\n  // Instantiate twice to help detect side-effects.\n  if (__DEV__) {\n    if (\n      debugRenderPhaseSideEffectsForStrictMode &&\n      workInProgress.mode & StrictMode\n    ) {\n      disableLogs();\n      try {\n        new ctor(props, context); // eslint-disable-line no-new\n      } finally {\n        reenableLogs();\n      }\n    }\n  }\n\n  const instance = new ctor(props, context);\n  const state = (workInProgress.memoizedState =\n    instance.state !== null && instance.state !== undefined\n      ? instance.state\n      : null);\n  adoptClassInstance(workInProgress, instance);\n\n  if (__DEV__) {\n    if (typeof ctor.getDerivedStateFromProps === 'function' && state === null) {\n      const componentName = getComponentName(ctor) || 'Component';\n      if (!didWarnAboutUninitializedState.has(componentName)) {\n        didWarnAboutUninitializedState.add(componentName);\n        console.error(\n          '`%s` uses `getDerivedStateFromProps` but its initial state is ' +\n            '%s. This is not recommended. Instead, define the initial state by ' +\n            'assigning an object to `this.state` in the constructor of `%s`. ' +\n            'This ensures that `getDerivedStateFromProps` arguments have a consistent shape.',\n          componentName,\n          instance.state === null ? 'null' : 'undefined',\n          componentName,\n        );\n      }\n    }\n\n    // If new component APIs are defined, \"unsafe\" lifecycles won't be called.\n    // Warn about these lifecycles if they are present.\n    // Don't warn about react-lifecycles-compat polyfilled methods though.\n    if (\n      typeof ctor.getDerivedStateFromProps === 'function' ||\n      typeof instance.getSnapshotBeforeUpdate === 'function'\n    ) {\n      let foundWillMountName = null;\n      let foundWillReceivePropsName = null;\n      let foundWillUpdateName = null;\n      if (\n        typeof instance.componentWillMount === 'function' &&\n        instance.componentWillMount.__suppressDeprecationWarning !== true\n      ) {\n        foundWillMountName = 'componentWillMount';\n      } else if (typeof instance.UNSAFE_componentWillMount === 'function') {\n        foundWillMountName = 'UNSAFE_componentWillMount';\n      }\n      if (\n        typeof instance.componentWillReceiveProps === 'function' &&\n        instance.componentWillReceiveProps.__suppressDeprecationWarning !== true\n      ) {\n        foundWillReceivePropsName = 'componentWillReceiveProps';\n      } else if (\n        typeof instance.UNSAFE_componentWillReceiveProps === 'function'\n      ) {\n        foundWillReceivePropsName = 'UNSAFE_componentWillReceiveProps';\n      }\n      if (\n        typeof instance.componentWillUpdate === 'function' &&\n        instance.componentWillUpdate.__suppressDeprecationWarning !== true\n      ) {\n        foundWillUpdateName = 'componentWillUpdate';\n      } else if (typeof instance.UNSAFE_componentWillUpdate === 'function') {\n        foundWillUpdateName = 'UNSAFE_componentWillUpdate';\n      }\n      if (\n        foundWillMountName !== null ||\n        foundWillReceivePropsName !== null ||\n        foundWillUpdateName !== null\n      ) {\n        const componentName = getComponentName(ctor) || 'Component';\n        const newApiName =\n          typeof ctor.getDerivedStateFromProps === 'function'\n            ? 'getDerivedStateFromProps()'\n            : 'getSnapshotBeforeUpdate()';\n        if (!didWarnAboutLegacyLifecyclesAndDerivedState.has(componentName)) {\n          didWarnAboutLegacyLifecyclesAndDerivedState.add(componentName);\n          console.error(\n            'Unsafe legacy lifecycles will not be called for components using new component APIs.\\n\\n' +\n              '%s uses %s but also contains the following legacy lifecycles:%s%s%s\\n\\n' +\n              'The above lifecycles should be removed. Learn more about this warning here:\\n' +\n              'https://reactjs.org/link/unsafe-component-lifecycles',\n            componentName,\n            newApiName,\n            foundWillMountName !== null ? `\\n  ${foundWillMountName}` : '',\n            foundWillReceivePropsName !== null\n              ? `\\n  ${foundWillReceivePropsName}`\n              : '',\n            foundWillUpdateName !== null ? `\\n  ${foundWillUpdateName}` : '',\n          );\n        }\n      }\n    }\n  }\n\n  // Cache unmasked context so we can avoid recreating masked context unless necessary.\n  // ReactFiberContext usually updates this cache but can't for newly-created instances.\n  if (isLegacyContextConsumer) {\n    cacheContext(workInProgress, unmaskedContext, context);\n  }\n\n  return instance;\n}\n\nfunction callComponentWillMount(workInProgress, instance) {\n  const oldState = instance.state;\n\n  if (typeof instance.componentWillMount === 'function') {\n    instance.componentWillMount();\n  }\n  if (typeof instance.UNSAFE_componentWillMount === 'function') {\n    instance.UNSAFE_componentWillMount();\n  }\n\n  if (oldState !== instance.state) {\n    if (__DEV__) {\n      console.error(\n        '%s.componentWillMount(): Assigning directly to this.state is ' +\n          \"deprecated (except inside a component's \" +\n          'constructor). Use setState instead.',\n        getComponentName(workInProgress.type) || 'Component',\n      );\n    }\n    classComponentUpdater.enqueueReplaceState(instance, instance.state, null);\n  }\n}\n\nfunction callComponentWillReceiveProps(\n  workInProgress,\n  instance,\n  newProps,\n  nextContext,\n) {\n  const oldState = instance.state;\n  if (typeof instance.componentWillReceiveProps === 'function') {\n    instance.componentWillReceiveProps(newProps, nextContext);\n  }\n  if (typeof instance.UNSAFE_componentWillReceiveProps === 'function') {\n    instance.UNSAFE_componentWillReceiveProps(newProps, nextContext);\n  }\n\n  if (instance.state !== oldState) {\n    if (__DEV__) {\n      const componentName =\n        getComponentName(workInProgress.type) || 'Component';\n      if (!didWarnAboutStateAssignmentForComponent.has(componentName)) {\n        didWarnAboutStateAssignmentForComponent.add(componentName);\n        console.error(\n          '%s.componentWillReceiveProps(): Assigning directly to ' +\n            \"this.state is deprecated (except inside a component's \" +\n            'constructor). Use setState instead.',\n          componentName,\n        );\n      }\n    }\n    classComponentUpdater.enqueueReplaceState(instance, instance.state, null);\n  }\n}\n\n// Invokes the mount life-cycles on a previously never rendered instance.\nfunction mountClassInstance(\n  workInProgress: Fiber,\n  ctor: any,\n  newProps: any,\n  renderLanes: Lanes,\n): void {\n  if (__DEV__) {\n    checkClassInstance(workInProgress, ctor, newProps);\n  }\n\n  const instance = workInProgress.stateNode;\n  instance.props = newProps;\n  instance.state = workInProgress.memoizedState;\n  instance.refs = emptyRefsObject;\n\n  initializeUpdateQueue(workInProgress);\n\n  const contextType = ctor.contextType;\n  if (typeof contextType === 'object' && contextType !== null) {\n    instance.context = readContext(contextType);\n  } else if (disableLegacyContext) {\n    instance.context = emptyContextObject;\n  } else {\n    const unmaskedContext = getUnmaskedContext(workInProgress, ctor, true);\n    instance.context = getMaskedContext(workInProgress, unmaskedContext);\n  }\n\n  if (__DEV__) {\n    if (instance.state === newProps) {\n      const componentName = getComponentName(ctor) || 'Component';\n      if (!didWarnAboutDirectlyAssigningPropsToState.has(componentName)) {\n        didWarnAboutDirectlyAssigningPropsToState.add(componentName);\n        console.error(\n          '%s: It is not recommended to assign props directly to state ' +\n            \"because updates to props won't be reflected in state. \" +\n            'In most cases, it is better to use props directly.',\n          componentName,\n        );\n      }\n    }\n\n    if (workInProgress.mode & StrictMode) {\n      ReactStrictModeWarnings.recordLegacyContextWarning(\n        workInProgress,\n        instance,\n      );\n    }\n\n    if (warnAboutDeprecatedLifecycles) {\n      ReactStrictModeWarnings.recordUnsafeLifecycleWarnings(\n        workInProgress,\n        instance,\n      );\n    }\n  }\n\n  processUpdateQueue(workInProgress, newProps, instance, renderLanes);\n  instance.state = workInProgress.memoizedState;\n\n  const getDerivedStateFromProps = ctor.getDerivedStateFromProps;\n  if (typeof getDerivedStateFromProps === 'function') {\n    applyDerivedStateFromProps(\n      workInProgress,\n      ctor,\n      getDerivedStateFromProps,\n      newProps,\n    );\n    instance.state = workInProgress.memoizedState;\n  }\n\n  // In order to support react-lifecycles-compat polyfilled components,\n  // Unsafe lifecycles should not be invoked for components using the new APIs.\n  if (\n    typeof ctor.getDerivedStateFromProps !== 'function' &&\n    typeof instance.getSnapshotBeforeUpdate !== 'function' &&\n    (typeof instance.UNSAFE_componentWillMount === 'function' ||\n      typeof instance.componentWillMount === 'function')\n  ) {\n    callComponentWillMount(workInProgress, instance);\n    // If we had additional state updates during this life-cycle, let's\n    // process them now.\n    processUpdateQueue(workInProgress, newProps, instance, renderLanes);\n    instance.state = workInProgress.memoizedState;\n  }\n\n  if (typeof instance.componentDidMount === 'function') {\n    workInProgress.flags |= Update;\n  }\n}\n\nfunction resumeMountClassInstance(\n  workInProgress: Fiber,\n  ctor: any,\n  newProps: any,\n  renderLanes: Lanes,\n): boolean {\n  const instance = workInProgress.stateNode;\n\n  const oldProps = workInProgress.memoizedProps;\n  instance.props = oldProps;\n\n  const oldContext = instance.context;\n  const contextType = ctor.contextType;\n  let nextContext = emptyContextObject;\n  if (typeof contextType === 'object' && contextType !== null) {\n    nextContext = readContext(contextType);\n  } else if (!disableLegacyContext) {\n    const nextLegacyUnmaskedContext = getUnmaskedContext(\n      workInProgress,\n      ctor,\n      true,\n    );\n    nextContext = getMaskedContext(workInProgress, nextLegacyUnmaskedContext);\n  }\n\n  const getDerivedStateFromProps = ctor.getDerivedStateFromProps;\n  const hasNewLifecycles =\n    typeof getDerivedStateFromProps === 'function' ||\n    typeof instance.getSnapshotBeforeUpdate === 'function';\n\n  // Note: During these life-cycles, instance.props/instance.state are what\n  // ever the previously attempted to render - not the \"current\". However,\n  // during componentDidUpdate we pass the \"current\" props.\n\n  // In order to support react-lifecycles-compat polyfilled components,\n  // Unsafe lifecycles should not be invoked for components using the new APIs.\n  if (\n    !hasNewLifecycles &&\n    (typeof instance.UNSAFE_componentWillReceiveProps === 'function' ||\n      typeof instance.componentWillReceiveProps === 'function')\n  ) {\n    if (oldProps !== newProps || oldContext !== nextContext) {\n      callComponentWillReceiveProps(\n        workInProgress,\n        instance,\n        newProps,\n        nextContext,\n      );\n    }\n  }\n\n  resetHasForceUpdateBeforeProcessing();\n\n  const oldState = workInProgress.memoizedState;\n  let newState = (instance.state = oldState);\n  processUpdateQueue(workInProgress, newProps, instance, renderLanes);\n  newState = workInProgress.memoizedState;\n  if (\n    oldProps === newProps &&\n    oldState === newState &&\n    !hasContextChanged() &&\n    !checkHasForceUpdateAfterProcessing()\n  ) {\n    // If an update was already in progress, we should schedule an Update\n    // effect even though we're bailing out, so that cWU/cDU are called.\n    if (typeof instance.componentDidMount === 'function') {\n      workInProgress.flags |= Update;\n    }\n    return false;\n  }\n\n  if (typeof getDerivedStateFromProps === 'function') {\n    applyDerivedStateFromProps(\n      workInProgress,\n      ctor,\n      getDerivedStateFromProps,\n      newProps,\n    );\n    newState = workInProgress.memoizedState;\n  }\n\n  const shouldUpdate =\n    checkHasForceUpdateAfterProcessing() ||\n    checkShouldComponentUpdate(\n      workInProgress,\n      ctor,\n      oldProps,\n      newProps,\n      oldState,\n      newState,\n      nextContext,\n    );\n\n  if (shouldUpdate) {\n    // In order to support react-lifecycles-compat polyfilled components,\n    // Unsafe lifecycles should not be invoked for components using the new APIs.\n    if (\n      !hasNewLifecycles &&\n      (typeof instance.UNSAFE_componentWillMount === 'function' ||\n        typeof instance.componentWillMount === 'function')\n    ) {\n      if (typeof instance.componentWillMount === 'function') {\n        instance.componentWillMount();\n      }\n      if (typeof instance.UNSAFE_componentWillMount === 'function') {\n        instance.UNSAFE_componentWillMount();\n      }\n    }\n    if (typeof instance.componentDidMount === 'function') {\n      workInProgress.flags |= Update;\n    }\n  } else {\n    // If an update was already in progress, we should schedule an Update\n    // effect even though we're bailing out, so that cWU/cDU are called.\n    if (typeof instance.componentDidMount === 'function') {\n      workInProgress.flags |= Update;\n    }\n\n    // If shouldComponentUpdate returned false, we should still update the\n    // memoized state to indicate that this work can be reused.\n    workInProgress.memoizedProps = newProps;\n    workInProgress.memoizedState = newState;\n  }\n\n  // Update the existing instance's state, props, and context pointers even\n  // if shouldComponentUpdate returns false.\n  instance.props = newProps;\n  instance.state = newState;\n  instance.context = nextContext;\n\n  return shouldUpdate;\n}\n\n// Invokes the update life-cycles and returns false if it shouldn't rerender.\nfunction updateClassInstance(\n  current: Fiber,\n  workInProgress: Fiber,\n  ctor: any,\n  newProps: any,\n  renderLanes: Lanes,\n): boolean {\n  const instance = workInProgress.stateNode;\n\n  cloneUpdateQueue(current, workInProgress);\n\n  const unresolvedOldProps = workInProgress.memoizedProps;\n  const oldProps =\n    workInProgress.type === workInProgress.elementType\n      ? unresolvedOldProps\n      : resolveDefaultProps(workInProgress.type, unresolvedOldProps);\n  instance.props = oldProps;\n  const unresolvedNewProps = workInProgress.pendingProps;\n\n  const oldContext = instance.context;\n  const contextType = ctor.contextType;\n  let nextContext = emptyContextObject;\n  if (typeof contextType === 'object' && contextType !== null) {\n    nextContext = readContext(contextType);\n  } else if (!disableLegacyContext) {\n    const nextUnmaskedContext = getUnmaskedContext(workInProgress, ctor, true);\n    nextContext = getMaskedContext(workInProgress, nextUnmaskedContext);\n  }\n\n  const getDerivedStateFromProps = ctor.getDerivedStateFromProps;\n  const hasNewLifecycles =\n    typeof getDerivedStateFromProps === 'function' ||\n    typeof instance.getSnapshotBeforeUpdate === 'function';\n\n  // Note: During these life-cycles, instance.props/instance.state are what\n  // ever the previously attempted to render - not the \"current\". However,\n  // during componentDidUpdate we pass the \"current\" props.\n\n  // In order to support react-lifecycles-compat polyfilled components,\n  // Unsafe lifecycles should not be invoked for components using the new APIs.\n  if (\n    !hasNewLifecycles &&\n    (typeof instance.UNSAFE_componentWillReceiveProps === 'function' ||\n      typeof instance.componentWillReceiveProps === 'function')\n  ) {\n    if (\n      unresolvedOldProps !== unresolvedNewProps ||\n      oldContext !== nextContext\n    ) {\n      callComponentWillReceiveProps(\n        workInProgress,\n        instance,\n        newProps,\n        nextContext,\n      );\n    }\n  }\n\n  resetHasForceUpdateBeforeProcessing();\n\n  const oldState = workInProgress.memoizedState;\n  let newState = (instance.state = oldState);\n  processUpdateQueue(workInProgress, newProps, instance, renderLanes);\n  newState = workInProgress.memoizedState;\n\n  if (\n    unresolvedOldProps === unresolvedNewProps &&\n    oldState === newState &&\n    !hasContextChanged() &&\n    !checkHasForceUpdateAfterProcessing()\n  ) {\n    // If an update was already in progress, we should schedule an Update\n    // effect even though we're bailing out, so that cWU/cDU are called.\n    if (typeof instance.componentDidUpdate === 'function') {\n      if (\n        unresolvedOldProps !== current.memoizedProps ||\n        oldState !== current.memoizedState\n      ) {\n        workInProgress.flags |= Update;\n      }\n    }\n    if (typeof instance.getSnapshotBeforeUpdate === 'function') {\n      if (\n        unresolvedOldProps !== current.memoizedProps ||\n        oldState !== current.memoizedState\n      ) {\n        workInProgress.flags |= Snapshot;\n      }\n    }\n    return false;\n  }\n\n  if (typeof getDerivedStateFromProps === 'function') {\n    applyDerivedStateFromProps(\n      workInProgress,\n      ctor,\n      getDerivedStateFromProps,\n      newProps,\n    );\n    newState = workInProgress.memoizedState;\n  }\n\n  const shouldUpdate =\n    checkHasForceUpdateAfterProcessing() ||\n    checkShouldComponentUpdate(\n      workInProgress,\n      ctor,\n      oldProps,\n      newProps,\n      oldState,\n      newState,\n      nextContext,\n    );\n\n  if (shouldUpdate) {\n    // In order to support react-lifecycles-compat polyfilled components,\n    // Unsafe lifecycles should not be invoked for components using the new APIs.\n    if (\n      !hasNewLifecycles &&\n      (typeof instance.UNSAFE_componentWillUpdate === 'function' ||\n        typeof instance.componentWillUpdate === 'function')\n    ) {\n      if (typeof instance.componentWillUpdate === 'function') {\n        instance.componentWillUpdate(newProps, newState, nextContext);\n      }\n      if (typeof instance.UNSAFE_componentWillUpdate === 'function') {\n        instance.UNSAFE_componentWillUpdate(newProps, newState, nextContext);\n      }\n    }\n    if (typeof instance.componentDidUpdate === 'function') {\n      workInProgress.flags |= Update;\n    }\n    if (typeof instance.getSnapshotBeforeUpdate === 'function') {\n      workInProgress.flags |= Snapshot;\n    }\n  } else {\n    // If an update was already in progress, we should schedule an Update\n    // effect even though we're bailing out, so that cWU/cDU are called.\n    if (typeof instance.componentDidUpdate === 'function') {\n      if (\n        unresolvedOldProps !== current.memoizedProps ||\n        oldState !== current.memoizedState\n      ) {\n        workInProgress.flags |= Update;\n      }\n    }\n    if (typeof instance.getSnapshotBeforeUpdate === 'function') {\n      if (\n        unresolvedOldProps !== current.memoizedProps ||\n        oldState !== current.memoizedState\n      ) {\n        workInProgress.flags |= Snapshot;\n      }\n    }\n\n    // If shouldComponentUpdate returned false, we should still update the\n    // memoized props/state to indicate that this work can be reused.\n    workInProgress.memoizedProps = newProps;\n    workInProgress.memoizedState = newState;\n  }\n\n  // Update the existing instance's state, props, and context pointers even\n  // if shouldComponentUpdate returns false.\n  instance.props = newProps;\n  instance.state = newState;\n  instance.context = nextContext;\n\n  return shouldUpdate;\n}\n\nexport {\n  adoptClassInstance,\n  constructClassInstance,\n  mountClassInstance,\n  resumeMountClassInstance,\n  updateClassInstance,\n};\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {ReactElement} from 'shared/ReactElementType';\nimport type {ReactPortal} from 'shared/ReactTypes';\nimport type {BlockComponent} from 'react/src/ReactBlock';\nimport type {LazyComponent} from 'react/src/ReactLazy';\nimport type {Fiber} from './ReactInternalTypes';\nimport type {Lanes} from './ReactFiberLane';\n\nimport getComponentName from 'shared/getComponentName';\nimport {Placement, Deletion} from './ReactFiberFlags';\nimport {\n  getIteratorFn,\n  REACT_ELEMENT_TYPE,\n  REACT_FRAGMENT_TYPE,\n  REACT_PORTAL_TYPE,\n  REACT_LAZY_TYPE,\n  REACT_BLOCK_TYPE,\n} from 'shared/ReactSymbols';\nimport {\n  FunctionComponent,\n  ClassComponent,\n  HostText,\n  HostPortal,\n  ForwardRef,\n  Fragment,\n  SimpleMemoComponent,\n  Block,\n} from './ReactWorkTags';\nimport invariant from 'shared/invariant';\nimport {\n  warnAboutStringRefs,\n  enableBlocksAPI,\n  enableLazyElements,\n} from 'shared/ReactFeatureFlags';\n\nimport {\n  createWorkInProgress,\n  resetWorkInProgress,\n  createFiberFromElement,\n  createFiberFromFragment,\n  createFiberFromText,\n  createFiberFromPortal,\n} from './ReactFiber.old';\nimport {emptyRefsObject} from './ReactFiberClassComponent.old';\nimport {isCompatibleFamilyForHotReloading} from './ReactFiberHotReloading.old';\nimport {StrictMode} from './ReactTypeOfMode';\n\nlet didWarnAboutMaps;\nlet didWarnAboutGenerators;\nlet didWarnAboutStringRefs;\nlet ownerHasKeyUseWarning;\nlet ownerHasFunctionTypeWarning;\nlet warnForMissingKey = (child: mixed, returnFiber: Fiber) => {};\n\nif (__DEV__) {\n  didWarnAboutMaps = false;\n  didWarnAboutGenerators = false;\n  didWarnAboutStringRefs = {};\n\n  /**\n   * Warn if there's no key explicitly set on dynamic arrays of children or\n   * object keys are not valid. This allows us to keep track of children between\n   * updates.\n   */\n  ownerHasKeyUseWarning = {};\n  ownerHasFunctionTypeWarning = {};\n\n  warnForMissingKey = (child: mixed, returnFiber: Fiber) => {\n    if (child === null || typeof child !== 'object') {\n      return;\n    }\n    if (!child._store || child._store.validated || child.key != null) {\n      return;\n    }\n    invariant(\n      typeof child._store === 'object',\n      'React Component in warnForMissingKey should have a _store. ' +\n        'This error is likely caused by a bug in React. Please file an issue.',\n    );\n    child._store.validated = true;\n\n    const componentName = getComponentName(returnFiber.type) || 'Component';\n\n    if (ownerHasKeyUseWarning[componentName]) {\n      return;\n    }\n    ownerHasKeyUseWarning[componentName] = true;\n\n    console.error(\n      'Each child in a list should have a unique ' +\n        '\"key\" prop. See https://reactjs.org/link/warning-keys for ' +\n        'more information.',\n    );\n  };\n}\n\nconst isArray = Array.isArray;\n\nfunction coerceRef(\n  returnFiber: Fiber,\n  current: Fiber | null,\n  element: ReactElement,\n) {\n  const mixedRef = element.ref;\n  if (\n    mixedRef !== null &&\n    typeof mixedRef !== 'function' &&\n    typeof mixedRef !== 'object'\n  ) {\n    if (__DEV__) {\n      // TODO: Clean this up once we turn on the string ref warning for\n      // everyone, because the strict mode case will no longer be relevant\n      if (\n        (returnFiber.mode & StrictMode || warnAboutStringRefs) &&\n        // We warn in ReactElement.js if owner and self are equal for string refs\n        // because these cannot be automatically converted to an arrow function\n        // using a codemod. Therefore, we don't have to warn about string refs again.\n        !(\n          element._owner &&\n          element._self &&\n          element._owner.stateNode !== element._self\n        )\n      ) {\n        const componentName = getComponentName(returnFiber.type) || 'Component';\n        if (!didWarnAboutStringRefs[componentName]) {\n          if (warnAboutStringRefs) {\n            console.error(\n              'Component \"%s\" contains the string ref \"%s\". Support for string refs ' +\n                'will be removed in a future major release. We recommend using ' +\n                'useRef() or createRef() instead. ' +\n                'Learn more about using refs safely here: ' +\n                'https://reactjs.org/link/strict-mode-string-ref',\n              componentName,\n              mixedRef,\n            );\n          } else {\n            console.error(\n              'A string ref, \"%s\", has been found within a strict mode tree. ' +\n                'String refs are a source of potential bugs and should be avoided. ' +\n                'We recommend using useRef() or createRef() instead. ' +\n                'Learn more about using refs safely here: ' +\n                'https://reactjs.org/link/strict-mode-string-ref',\n              mixedRef,\n            );\n          }\n          didWarnAboutStringRefs[componentName] = true;\n        }\n      }\n    }\n\n    if (element._owner) {\n      const owner: ?Fiber = (element._owner: any);\n      let inst;\n      if (owner) {\n        const ownerFiber = ((owner: any): Fiber);\n        invariant(\n          ownerFiber.tag === ClassComponent,\n          'Function components cannot have string refs. ' +\n            'We recommend using useRef() instead. ' +\n            'Learn more about using refs safely here: ' +\n            'https://reactjs.org/link/strict-mode-string-ref',\n        );\n        inst = ownerFiber.stateNode;\n      }\n      invariant(\n        inst,\n        'Missing owner for string ref %s. This error is likely caused by a ' +\n          'bug in React. Please file an issue.',\n        mixedRef,\n      );\n      const stringRef = '' + mixedRef;\n      // Check if previous string ref matches new string ref\n      if (\n        current !== null &&\n        current.ref !== null &&\n        typeof current.ref === 'function' &&\n        current.ref._stringRef === stringRef\n      ) {\n        return current.ref;\n      }\n      const ref = function(value) {\n        let refs = inst.refs;\n        if (refs === emptyRefsObject) {\n          // This is a lazy pooled frozen object, so we need to initialize.\n          refs = inst.refs = {};\n        }\n        if (value === null) {\n          delete refs[stringRef];\n        } else {\n          refs[stringRef] = value;\n        }\n      };\n      ref._stringRef = stringRef;\n      return ref;\n    } else {\n      invariant(\n        typeof mixedRef === 'string',\n        'Expected ref to be a function, a string, an object returned by React.createRef(), or null.',\n      );\n      invariant(\n        element._owner,\n        'Element ref was specified as a string (%s) but no owner was set. This could happen for one of' +\n          ' the following reasons:\\n' +\n          '1. You may be adding a ref to a function component\\n' +\n          \"2. You may be adding a ref to a component that was not created inside a component's render method\\n\" +\n          '3. You have multiple copies of React loaded\\n' +\n          'See https://reactjs.org/link/refs-must-have-owner for more information.',\n        mixedRef,\n      );\n    }\n  }\n  return mixedRef;\n}\n\nfunction throwOnInvalidObjectType(returnFiber: Fiber, newChild: Object) {\n  if (returnFiber.type !== 'textarea') {\n    invariant(\n      false,\n      'Objects are not valid as a React child (found: %s). ' +\n        'If you meant to render a collection of children, use an array ' +\n        'instead.',\n      Object.prototype.toString.call(newChild) === '[object Object]'\n        ? 'object with keys {' + Object.keys(newChild).join(', ') + '}'\n        : newChild,\n    );\n  }\n}\n\nfunction warnOnFunctionType(returnFiber: Fiber) {\n  if (__DEV__) {\n    const componentName = getComponentName(returnFiber.type) || 'Component';\n\n    if (ownerHasFunctionTypeWarning[componentName]) {\n      return;\n    }\n    ownerHasFunctionTypeWarning[componentName] = true;\n\n    console.error(\n      'Functions are not valid as a React child. This may happen if ' +\n        'you return a Component instead of <Component /> from render. ' +\n        'Or maybe you meant to call this function rather than return it.',\n    );\n  }\n}\n\n// We avoid inlining this to avoid potential deopts from using try/catch.\n/** @noinline */\nfunction resolveLazyType<T, P>(\n  lazyComponent: LazyComponent<T, P>,\n): LazyComponent<T, P> | T {\n  try {\n    // If we can, let's peek at the resulting type.\n    const payload = lazyComponent._payload;\n    const init = lazyComponent._init;\n    return init(payload);\n  } catch (x) {\n    // Leave it in place and let it throw again in the begin phase.\n    return lazyComponent;\n  }\n}\n\n// This wrapper function exists because I expect to clone the code in each path\n// to be able to optimize each path individually by branching early. This needs\n// a compiler or we can do it manually. Helpers that don't need this branching\n// live outside of this function.\nfunction ChildReconciler(shouldTrackSideEffects) {\n  function deleteChild(returnFiber: Fiber, childToDelete: Fiber): void {\n    if (!shouldTrackSideEffects) {\n      // Noop.\n      return;\n    }\n    // Deletions are added in reversed order so we add it to the front.\n    // At this point, the return fiber's effect list is empty except for\n    // deletions, so we can just append the deletion to the list. The remaining\n    // effects aren't added until the complete phase. Once we implement\n    // resuming, this may not be true.\n    const last = returnFiber.lastEffect;\n    if (last !== null) {\n      last.nextEffect = childToDelete;\n      returnFiber.lastEffect = childToDelete;\n    } else {\n      returnFiber.firstEffect = returnFiber.lastEffect = childToDelete;\n    }\n    childToDelete.nextEffect = null;\n    childToDelete.flags = Deletion;\n  }\n\n  function deleteRemainingChildren(\n    returnFiber: Fiber,\n    currentFirstChild: Fiber | null,\n  ): null {\n    if (!shouldTrackSideEffects) {\n      // Noop.\n      return null;\n    }\n\n    // TODO: For the shouldClone case, this could be micro-optimized a bit by\n    // assuming that after the first child we've already added everything.\n    let childToDelete = currentFirstChild;\n    while (childToDelete !== null) {\n      deleteChild(returnFiber, childToDelete);\n      childToDelete = childToDelete.sibling;\n    }\n    return null;\n  }\n\n  function mapRemainingChildren(\n    returnFiber: Fiber,\n    currentFirstChild: Fiber,\n  ): Map<string | number, Fiber> {\n    // Add the remaining children to a temporary map so that we can find them by\n    // keys quickly. Implicit (null) keys get added to this set with their index\n    // instead.\n    const existingChildren: Map<string | number, Fiber> = new Map();\n\n    let existingChild = currentFirstChild;\n    while (existingChild !== null) {\n      if (existingChild.key !== null) {\n        existingChildren.set(existingChild.key, existingChild);\n      } else {\n        existingChildren.set(existingChild.index, existingChild);\n      }\n      existingChild = existingChild.sibling;\n    }\n    return existingChildren;\n  }\n\n  function useFiber(fiber: Fiber, pendingProps: mixed): Fiber {\n    // We currently set sibling to null and index to 0 here because it is easy\n    // to forget to do before returning it. E.g. for the single child case.\n    const clone = createWorkInProgress(fiber, pendingProps);\n    clone.index = 0;\n    clone.sibling = null;\n    return clone;\n  }\n\n  function placeChild(\n    newFiber: Fiber,\n    lastPlacedIndex: number,\n    newIndex: number,\n  ): number {\n    newFiber.index = newIndex;\n    if (!shouldTrackSideEffects) {\n      // Noop.\n      return lastPlacedIndex;\n    }\n    const current = newFiber.alternate;\n    if (current !== null) {\n      const oldIndex = current.index;\n      if (oldIndex < lastPlacedIndex) {\n        // This is a move.\n        newFiber.flags = Placement;\n        return lastPlacedIndex;\n      } else {\n        // This item can stay in place.\n        return oldIndex;\n      }\n    } else {\n      // This is an insertion.\n      newFiber.flags = Placement;\n      return lastPlacedIndex;\n    }\n  }\n\n  function placeSingleChild(newFiber: Fiber): Fiber {\n    // This is simpler for the single child case. We only need to do a\n    // placement for inserting new children.\n    if (shouldTrackSideEffects && newFiber.alternate === null) {\n      newFiber.flags = Placement;\n    }\n    return newFiber;\n  }\n\n  function updateTextNode(\n    returnFiber: Fiber,\n    current: Fiber | null,\n    textContent: string,\n    lanes: Lanes,\n  ) {\n    if (current === null || current.tag !== HostText) {\n      // Insert\n      const created = createFiberFromText(textContent, returnFiber.mode, lanes);\n      created.return = returnFiber;\n      return created;\n    } else {\n      // Update\n      const existing = useFiber(current, textContent);\n      existing.return = returnFiber;\n      return existing;\n    }\n  }\n\n  function updateElement(\n    returnFiber: Fiber,\n    current: Fiber | null,\n    element: ReactElement,\n    lanes: Lanes,\n  ): Fiber {\n    if (current !== null) {\n      if (\n        current.elementType === element.type ||\n        // Keep this check inline so it only runs on the false path:\n        (__DEV__ ? isCompatibleFamilyForHotReloading(current, element) : false)\n      ) {\n        // Move based on index\n        const existing = useFiber(current, element.props);\n        existing.ref = coerceRef(returnFiber, current, element);\n        existing.return = returnFiber;\n        if (__DEV__) {\n          existing._debugSource = element._source;\n          existing._debugOwner = element._owner;\n        }\n        return existing;\n      } else if (enableBlocksAPI && current.tag === Block) {\n        // The new Block might not be initialized yet. We need to initialize\n        // it in case initializing it turns out it would match.\n        let type = element.type;\n        if (type.$$typeof === REACT_LAZY_TYPE) {\n          type = resolveLazyType(type);\n        }\n        if (\n          type.$$typeof === REACT_BLOCK_TYPE &&\n          ((type: any): BlockComponent<any, any>)._render ===\n            (current.type: BlockComponent<any, any>)._render\n        ) {\n          // Same as above but also update the .type field.\n          const existing = useFiber(current, element.props);\n          existing.return = returnFiber;\n          existing.type = type;\n          if (__DEV__) {\n            existing._debugSource = element._source;\n            existing._debugOwner = element._owner;\n          }\n          return existing;\n        }\n      }\n    }\n    // Insert\n    const created = createFiberFromElement(element, returnFiber.mode, lanes);\n    created.ref = coerceRef(returnFiber, current, element);\n    created.return = returnFiber;\n    return created;\n  }\n\n  function updatePortal(\n    returnFiber: Fiber,\n    current: Fiber | null,\n    portal: ReactPortal,\n    lanes: Lanes,\n  ): Fiber {\n    if (\n      current === null ||\n      current.tag !== HostPortal ||\n      current.stateNode.containerInfo !== portal.containerInfo ||\n      current.stateNode.implementation !== portal.implementation\n    ) {\n      // Insert\n      const created = createFiberFromPortal(portal, returnFiber.mode, lanes);\n      created.return = returnFiber;\n      return created;\n    } else {\n      // Update\n      const existing = useFiber(current, portal.children || []);\n      existing.return = returnFiber;\n      return existing;\n    }\n  }\n\n  function updateFragment(\n    returnFiber: Fiber,\n    current: Fiber | null,\n    fragment: Iterable<*>,\n    lanes: Lanes,\n    key: null | string,\n  ): Fiber {\n    if (current === null || current.tag !== Fragment) {\n      // Insert\n      const created = createFiberFromFragment(\n        fragment,\n        returnFiber.mode,\n        lanes,\n        key,\n      );\n      created.return = returnFiber;\n      return created;\n    } else {\n      // Update\n      const existing = useFiber(current, fragment);\n      existing.return = returnFiber;\n      return existing;\n    }\n  }\n\n  function createChild(\n    returnFiber: Fiber,\n    newChild: any,\n    lanes: Lanes,\n  ): Fiber | null {\n    if (typeof newChild === 'string' || typeof newChild === 'number') {\n      // Text nodes don't have keys. If the previous node is implicitly keyed\n      // we can continue to replace it without aborting even if it is not a text\n      // node.\n      const created = createFiberFromText(\n        '' + newChild,\n        returnFiber.mode,\n        lanes,\n      );\n      created.return = returnFiber;\n      return created;\n    }\n\n    if (typeof newChild === 'object' && newChild !== null) {\n      switch (newChild.$$typeof) {\n        case REACT_ELEMENT_TYPE: {\n          const created = createFiberFromElement(\n            newChild,\n            returnFiber.mode,\n            lanes,\n          );\n          created.ref = coerceRef(returnFiber, null, newChild);\n          created.return = returnFiber;\n          return created;\n        }\n        case REACT_PORTAL_TYPE: {\n          const created = createFiberFromPortal(\n            newChild,\n            returnFiber.mode,\n            lanes,\n          );\n          created.return = returnFiber;\n          return created;\n        }\n        case REACT_LAZY_TYPE: {\n          if (enableLazyElements) {\n            const payload = newChild._payload;\n            const init = newChild._init;\n            return createChild(returnFiber, init(payload), lanes);\n          }\n        }\n      }\n\n      if (isArray(newChild) || getIteratorFn(newChild)) {\n        const created = createFiberFromFragment(\n          newChild,\n          returnFiber.mode,\n          lanes,\n          null,\n        );\n        created.return = returnFiber;\n        return created;\n      }\n\n      throwOnInvalidObjectType(returnFiber, newChild);\n    }\n\n    if (__DEV__) {\n      if (typeof newChild === 'function') {\n        warnOnFunctionType(returnFiber);\n      }\n    }\n\n    return null;\n  }\n\n  function updateSlot(\n    returnFiber: Fiber,\n    oldFiber: Fiber | null,\n    newChild: any,\n    lanes: Lanes,\n  ): Fiber | null {\n    // Update the fiber if the keys match, otherwise return null.\n\n    const key = oldFiber !== null ? oldFiber.key : null;\n\n    if (typeof newChild === 'string' || typeof newChild === 'number') {\n      // Text nodes don't have keys. If the previous node is implicitly keyed\n      // we can continue to replace it without aborting even if it is not a text\n      // node.\n      if (key !== null) {\n        return null;\n      }\n      return updateTextNode(returnFiber, oldFiber, '' + newChild, lanes);\n    }\n\n    if (typeof newChild === 'object' && newChild !== null) {\n      switch (newChild.$$typeof) {\n        case REACT_ELEMENT_TYPE: {\n          if (newChild.key === key) {\n            if (newChild.type === REACT_FRAGMENT_TYPE) {\n              return updateFragment(\n                returnFiber,\n                oldFiber,\n                newChild.props.children,\n                lanes,\n                key,\n              );\n            }\n            return updateElement(returnFiber, oldFiber, newChild, lanes);\n          } else {\n            return null;\n          }\n        }\n        case REACT_PORTAL_TYPE: {\n          if (newChild.key === key) {\n            return updatePortal(returnFiber, oldFiber, newChild, lanes);\n          } else {\n            return null;\n          }\n        }\n        case REACT_LAZY_TYPE: {\n          if (enableLazyElements) {\n            const payload = newChild._payload;\n            const init = newChild._init;\n            return updateSlot(returnFiber, oldFiber, init(payload), lanes);\n          }\n        }\n      }\n\n      if (isArray(newChild) || getIteratorFn(newChild)) {\n        if (key !== null) {\n          return null;\n        }\n\n        return updateFragment(returnFiber, oldFiber, newChild, lanes, null);\n      }\n\n      throwOnInvalidObjectType(returnFiber, newChild);\n    }\n\n    if (__DEV__) {\n      if (typeof newChild === 'function') {\n        warnOnFunctionType(returnFiber);\n      }\n    }\n\n    return null;\n  }\n\n  function updateFromMap(\n    existingChildren: Map<string | number, Fiber>,\n    returnFiber: Fiber,\n    newIdx: number,\n    newChild: any,\n    lanes: Lanes,\n  ): Fiber | null {\n    if (typeof newChild === 'string' || typeof newChild === 'number') {\n      // Text nodes don't have keys, so we neither have to check the old nor\n      // new node for the key. If both are text nodes, they match.\n      const matchedFiber = existingChildren.get(newIdx) || null;\n      return updateTextNode(returnFiber, matchedFiber, '' + newChild, lanes);\n    }\n\n    if (typeof newChild === 'object' && newChild !== null) {\n      switch (newChild.$$typeof) {\n        case REACT_ELEMENT_TYPE: {\n          const matchedFiber =\n            existingChildren.get(\n              newChild.key === null ? newIdx : newChild.key,\n            ) || null;\n          if (newChild.type === REACT_FRAGMENT_TYPE) {\n            return updateFragment(\n              returnFiber,\n              matchedFiber,\n              newChild.props.children,\n              lanes,\n              newChild.key,\n            );\n          }\n          return updateElement(returnFiber, matchedFiber, newChild, lanes);\n        }\n        case REACT_PORTAL_TYPE: {\n          const matchedFiber =\n            existingChildren.get(\n              newChild.key === null ? newIdx : newChild.key,\n            ) || null;\n          return updatePortal(returnFiber, matchedFiber, newChild, lanes);\n        }\n        case REACT_LAZY_TYPE:\n          if (enableLazyElements) {\n            const payload = newChild._payload;\n            const init = newChild._init;\n            return updateFromMap(\n              existingChildren,\n              returnFiber,\n              newIdx,\n              init(payload),\n              lanes,\n            );\n          }\n      }\n\n      if (isArray(newChild) || getIteratorFn(newChild)) {\n        const matchedFiber = existingChildren.get(newIdx) || null;\n        return updateFragment(returnFiber, matchedFiber, newChild, lanes, null);\n      }\n\n      throwOnInvalidObjectType(returnFiber, newChild);\n    }\n\n    if (__DEV__) {\n      if (typeof newChild === 'function') {\n        warnOnFunctionType(returnFiber);\n      }\n    }\n\n    return null;\n  }\n\n  /**\n   * Warns if there is a duplicate or missing key\n   */\n  function warnOnInvalidKey(\n    child: mixed,\n    knownKeys: Set<string> | null,\n    returnFiber: Fiber,\n  ): Set<string> | null {\n    if (__DEV__) {\n      if (typeof child !== 'object' || child === null) {\n        return knownKeys;\n      }\n      switch (child.$$typeof) {\n        case REACT_ELEMENT_TYPE:\n        case REACT_PORTAL_TYPE:\n          warnForMissingKey(child, returnFiber);\n          const key = child.key;\n          if (typeof key !== 'string') {\n            break;\n          }\n          if (knownKeys === null) {\n            knownKeys = new Set();\n            knownKeys.add(key);\n            break;\n          }\n          if (!knownKeys.has(key)) {\n            knownKeys.add(key);\n            break;\n          }\n          console.error(\n            'Encountered two children with the same key, `%s`. ' +\n              'Keys should be unique so that components maintain their identity ' +\n              'across updates. Non-unique keys may cause children to be ' +\n              'duplicated and/or omitted — the behavior is unsupported and ' +\n              'could change in a future version.',\n            key,\n          );\n          break;\n        case REACT_LAZY_TYPE:\n          if (enableLazyElements) {\n            const payload = child._payload;\n            const init = (child._init: any);\n            warnOnInvalidKey(init(payload), knownKeys, returnFiber);\n            break;\n          }\n        // We intentionally fallthrough here if enableLazyElements is not on.\n        // eslint-disable-next-lined no-fallthrough\n        default:\n          break;\n      }\n    }\n    return knownKeys;\n  }\n\n  function reconcileChildrenArray(\n    returnFiber: Fiber,\n    currentFirstChild: Fiber | null,\n    newChildren: Array<*>,\n    lanes: Lanes,\n  ): Fiber | null {\n    // This algorithm can't optimize by searching from both ends since we\n    // don't have backpointers on fibers. I'm trying to see how far we can get\n    // with that model. If it ends up not being worth the tradeoffs, we can\n    // add it later.\n\n    // Even with a two ended optimization, we'd want to optimize for the case\n    // where there are few changes and brute force the comparison instead of\n    // going for the Map. It'd like to explore hitting that path first in\n    // forward-only mode and only go for the Map once we notice that we need\n    // lots of look ahead. This doesn't handle reversal as well as two ended\n    // search but that's unusual. Besides, for the two ended optimization to\n    // work on Iterables, we'd need to copy the whole set.\n\n    // In this first iteration, we'll just live with hitting the bad case\n    // (adding everything to a Map) in for every insert/move.\n\n    // If you change this code, also update reconcileChildrenIterator() which\n    // uses the same algorithm.\n\n    if (__DEV__) {\n      // First, validate keys.\n      let knownKeys = null;\n      for (let i = 0; i < newChildren.length; i++) {\n        const child = newChildren[i];\n        knownKeys = warnOnInvalidKey(child, knownKeys, returnFiber);\n      }\n    }\n\n    let resultingFirstChild: Fiber | null = null;\n    let previousNewFiber: Fiber | null = null;\n\n    let oldFiber = currentFirstChild;\n    let lastPlacedIndex = 0;\n    let newIdx = 0;\n    let nextOldFiber = null;\n    for (; oldFiber !== null && newIdx < newChildren.length; newIdx++) {\n      if (oldFiber.index > newIdx) {\n        nextOldFiber = oldFiber;\n        oldFiber = null;\n      } else {\n        nextOldFiber = oldFiber.sibling;\n      }\n      const newFiber = updateSlot(\n        returnFiber,\n        oldFiber,\n        newChildren[newIdx],\n        lanes,\n      );\n      if (newFiber === null) {\n        // TODO: This breaks on empty slots like null children. That's\n        // unfortunate because it triggers the slow path all the time. We need\n        // a better way to communicate whether this was a miss or null,\n        // boolean, undefined, etc.\n        if (oldFiber === null) {\n          oldFiber = nextOldFiber;\n        }\n        break;\n      }\n      if (shouldTrackSideEffects) {\n        if (oldFiber && newFiber.alternate === null) {\n          // We matched the slot, but we didn't reuse the existing fiber, so we\n          // need to delete the existing child.\n          deleteChild(returnFiber, oldFiber);\n        }\n      }\n      lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);\n      if (previousNewFiber === null) {\n        // TODO: Move out of the loop. This only happens for the first run.\n        resultingFirstChild = newFiber;\n      } else {\n        // TODO: Defer siblings if we're not at the right index for this slot.\n        // I.e. if we had null values before, then we want to defer this\n        // for each null value. However, we also don't want to call updateSlot\n        // with the previous one.\n        previousNewFiber.sibling = newFiber;\n      }\n      previousNewFiber = newFiber;\n      oldFiber = nextOldFiber;\n    }\n\n    if (newIdx === newChildren.length) {\n      // We've reached the end of the new children. We can delete the rest.\n      deleteRemainingChildren(returnFiber, oldFiber);\n      return resultingFirstChild;\n    }\n\n    if (oldFiber === null) {\n      // If we don't have any more existing children we can choose a fast path\n      // since the rest will all be insertions.\n      for (; newIdx < newChildren.length; newIdx++) {\n        const newFiber = createChild(returnFiber, newChildren[newIdx], lanes);\n        if (newFiber === null) {\n          continue;\n        }\n        lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);\n        if (previousNewFiber === null) {\n          // TODO: Move out of the loop. This only happens for the first run.\n          resultingFirstChild = newFiber;\n        } else {\n          previousNewFiber.sibling = newFiber;\n        }\n        previousNewFiber = newFiber;\n      }\n      return resultingFirstChild;\n    }\n\n    // Add all children to a key map for quick lookups.\n    const existingChildren = mapRemainingChildren(returnFiber, oldFiber);\n\n    // Keep scanning and use the map to restore deleted items as moves.\n    for (; newIdx < newChildren.length; newIdx++) {\n      const newFiber = updateFromMap(\n        existingChildren,\n        returnFiber,\n        newIdx,\n        newChildren[newIdx],\n        lanes,\n      );\n      if (newFiber !== null) {\n        if (shouldTrackSideEffects) {\n          if (newFiber.alternate !== null) {\n            // The new fiber is a work in progress, but if there exists a\n            // current, that means that we reused the fiber. We need to delete\n            // it from the child list so that we don't add it to the deletion\n            // list.\n            existingChildren.delete(\n              newFiber.key === null ? newIdx : newFiber.key,\n            );\n          }\n        }\n        lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);\n        if (previousNewFiber === null) {\n          resultingFirstChild = newFiber;\n        } else {\n          previousNewFiber.sibling = newFiber;\n        }\n        previousNewFiber = newFiber;\n      }\n    }\n\n    if (shouldTrackSideEffects) {\n      // Any existing children that weren't consumed above were deleted. We need\n      // to add them to the deletion list.\n      existingChildren.forEach(child => deleteChild(returnFiber, child));\n    }\n\n    return resultingFirstChild;\n  }\n\n  function reconcileChildrenIterator(\n    returnFiber: Fiber,\n    currentFirstChild: Fiber | null,\n    newChildrenIterable: Iterable<*>,\n    lanes: Lanes,\n  ): Fiber | null {\n    // This is the same implementation as reconcileChildrenArray(),\n    // but using the iterator instead.\n\n    const iteratorFn = getIteratorFn(newChildrenIterable);\n    invariant(\n      typeof iteratorFn === 'function',\n      'An object is not an iterable. This error is likely caused by a bug in ' +\n        'React. Please file an issue.',\n    );\n\n    if (__DEV__) {\n      // We don't support rendering Generators because it's a mutation.\n      // See https://github.com/facebook/react/issues/12995\n      if (\n        typeof Symbol === 'function' &&\n        // $FlowFixMe Flow doesn't know about toStringTag\n        newChildrenIterable[Symbol.toStringTag] === 'Generator'\n      ) {\n        if (!didWarnAboutGenerators) {\n          console.error(\n            'Using Generators as children is unsupported and will likely yield ' +\n              'unexpected results because enumerating a generator mutates it. ' +\n              'You may convert it to an array with `Array.from()` or the ' +\n              '`[...spread]` operator before rendering. Keep in mind ' +\n              'you might need to polyfill these features for older browsers.',\n          );\n        }\n        didWarnAboutGenerators = true;\n      }\n\n      // Warn about using Maps as children\n      if ((newChildrenIterable: any).entries === iteratorFn) {\n        if (!didWarnAboutMaps) {\n          console.error(\n            'Using Maps as children is not supported. ' +\n              'Use an array of keyed ReactElements instead.',\n          );\n        }\n        didWarnAboutMaps = true;\n      }\n\n      // First, validate keys.\n      // We'll get a different iterator later for the main pass.\n      const newChildren = iteratorFn.call(newChildrenIterable);\n      if (newChildren) {\n        let knownKeys = null;\n        let step = newChildren.next();\n        for (; !step.done; step = newChildren.next()) {\n          const child = step.value;\n          knownKeys = warnOnInvalidKey(child, knownKeys, returnFiber);\n        }\n      }\n    }\n\n    const newChildren = iteratorFn.call(newChildrenIterable);\n    invariant(newChildren != null, 'An iterable object provided no iterator.');\n\n    let resultingFirstChild: Fiber | null = null;\n    let previousNewFiber: Fiber | null = null;\n\n    let oldFiber = currentFirstChild;\n    let lastPlacedIndex = 0;\n    let newIdx = 0;\n    let nextOldFiber = null;\n\n    let step = newChildren.next();\n    for (\n      ;\n      oldFiber !== null && !step.done;\n      newIdx++, step = newChildren.next()\n    ) {\n      if (oldFiber.index > newIdx) {\n        nextOldFiber = oldFiber;\n        oldFiber = null;\n      } else {\n        nextOldFiber = oldFiber.sibling;\n      }\n      const newFiber = updateSlot(returnFiber, oldFiber, step.value, lanes);\n      if (newFiber === null) {\n        // TODO: This breaks on empty slots like null children. That's\n        // unfortunate because it triggers the slow path all the time. We need\n        // a better way to communicate whether this was a miss or null,\n        // boolean, undefined, etc.\n        if (oldFiber === null) {\n          oldFiber = nextOldFiber;\n        }\n        break;\n      }\n      if (shouldTrackSideEffects) {\n        if (oldFiber && newFiber.alternate === null) {\n          // We matched the slot, but we didn't reuse the existing fiber, so we\n          // need to delete the existing child.\n          deleteChild(returnFiber, oldFiber);\n        }\n      }\n      lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);\n      if (previousNewFiber === null) {\n        // TODO: Move out of the loop. This only happens for the first run.\n        resultingFirstChild = newFiber;\n      } else {\n        // TODO: Defer siblings if we're not at the right index for this slot.\n        // I.e. if we had null values before, then we want to defer this\n        // for each null value. However, we also don't want to call updateSlot\n        // with the previous one.\n        previousNewFiber.sibling = newFiber;\n      }\n      previousNewFiber = newFiber;\n      oldFiber = nextOldFiber;\n    }\n\n    if (step.done) {\n      // We've reached the end of the new children. We can delete the rest.\n      deleteRemainingChildren(returnFiber, oldFiber);\n      return resultingFirstChild;\n    }\n\n    if (oldFiber === null) {\n      // If we don't have any more existing children we can choose a fast path\n      // since the rest will all be insertions.\n      for (; !step.done; newIdx++, step = newChildren.next()) {\n        const newFiber = createChild(returnFiber, step.value, lanes);\n        if (newFiber === null) {\n          continue;\n        }\n        lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);\n        if (previousNewFiber === null) {\n          // TODO: Move out of the loop. This only happens for the first run.\n          resultingFirstChild = newFiber;\n        } else {\n          previousNewFiber.sibling = newFiber;\n        }\n        previousNewFiber = newFiber;\n      }\n      return resultingFirstChild;\n    }\n\n    // Add all children to a key map for quick lookups.\n    const existingChildren = mapRemainingChildren(returnFiber, oldFiber);\n\n    // Keep scanning and use the map to restore deleted items as moves.\n    for (; !step.done; newIdx++, step = newChildren.next()) {\n      const newFiber = updateFromMap(\n        existingChildren,\n        returnFiber,\n        newIdx,\n        step.value,\n        lanes,\n      );\n      if (newFiber !== null) {\n        if (shouldTrackSideEffects) {\n          if (newFiber.alternate !== null) {\n            // The new fiber is a work in progress, but if there exists a\n            // current, that means that we reused the fiber. We need to delete\n            // it from the child list so that we don't add it to the deletion\n            // list.\n            existingChildren.delete(\n              newFiber.key === null ? newIdx : newFiber.key,\n            );\n          }\n        }\n        lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);\n        if (previousNewFiber === null) {\n          resultingFirstChild = newFiber;\n        } else {\n          previousNewFiber.sibling = newFiber;\n        }\n        previousNewFiber = newFiber;\n      }\n    }\n\n    if (shouldTrackSideEffects) {\n      // Any existing children that weren't consumed above were deleted. We need\n      // to add them to the deletion list.\n      existingChildren.forEach(child => deleteChild(returnFiber, child));\n    }\n\n    return resultingFirstChild;\n  }\n\n  function reconcileSingleTextNode(\n    returnFiber: Fiber,\n    currentFirstChild: Fiber | null,\n    textContent: string,\n    lanes: Lanes,\n  ): Fiber {\n    // There's no need to check for keys on text nodes since we don't have a\n    // way to define them.\n    if (currentFirstChild !== null && currentFirstChild.tag === HostText) {\n      // We already have an existing node so let's just update it and delete\n      // the rest.\n      deleteRemainingChildren(returnFiber, currentFirstChild.sibling);\n      const existing = useFiber(currentFirstChild, textContent);\n      existing.return = returnFiber;\n      return existing;\n    }\n    // The existing first child is not a text node so we need to create one\n    // and delete the existing ones.\n    deleteRemainingChildren(returnFiber, currentFirstChild);\n    const created = createFiberFromText(textContent, returnFiber.mode, lanes);\n    created.return = returnFiber;\n    return created;\n  }\n\n  function reconcileSingleElement(\n    returnFiber: Fiber,\n    currentFirstChild: Fiber | null,\n    element: ReactElement,\n    lanes: Lanes,\n  ): Fiber {\n    const key = element.key;\n    let child = currentFirstChild;\n    while (child !== null) {\n      // TODO: If key === null and child.key === null, then this only applies to\n      // the first item in the list.\n      if (child.key === key) {\n        switch (child.tag) {\n          case Fragment: {\n            if (element.type === REACT_FRAGMENT_TYPE) {\n              deleteRemainingChildren(returnFiber, child.sibling);\n              const existing = useFiber(child, element.props.children);\n              existing.return = returnFiber;\n              if (__DEV__) {\n                existing._debugSource = element._source;\n                existing._debugOwner = element._owner;\n              }\n              return existing;\n            }\n            break;\n          }\n          case Block:\n            if (enableBlocksAPI) {\n              let type = element.type;\n              if (type.$$typeof === REACT_LAZY_TYPE) {\n                type = resolveLazyType(type);\n              }\n              if (type.$$typeof === REACT_BLOCK_TYPE) {\n                // The new Block might not be initialized yet. We need to initialize\n                // it in case initializing it turns out it would match.\n                if (\n                  ((type: any): BlockComponent<any, any>)._render ===\n                  (child.type: BlockComponent<any, any>)._render\n                ) {\n                  deleteRemainingChildren(returnFiber, child.sibling);\n                  const existing = useFiber(child, element.props);\n                  existing.type = type;\n                  existing.return = returnFiber;\n                  if (__DEV__) {\n                    existing._debugSource = element._source;\n                    existing._debugOwner = element._owner;\n                  }\n                  return existing;\n                }\n              }\n            }\n          // We intentionally fallthrough here if enableBlocksAPI is not on.\n          // eslint-disable-next-lined no-fallthrough\n          default: {\n            if (\n              child.elementType === element.type ||\n              // Keep this check inline so it only runs on the false path:\n              (__DEV__\n                ? isCompatibleFamilyForHotReloading(child, element)\n                : false)\n            ) {\n              deleteRemainingChildren(returnFiber, child.sibling);\n              const existing = useFiber(child, element.props);\n              existing.ref = coerceRef(returnFiber, child, element);\n              existing.return = returnFiber;\n              if (__DEV__) {\n                existing._debugSource = element._source;\n                existing._debugOwner = element._owner;\n              }\n              return existing;\n            }\n            break;\n          }\n        }\n        // Didn't match.\n        deleteRemainingChildren(returnFiber, child);\n        break;\n      } else {\n        deleteChild(returnFiber, child);\n      }\n      child = child.sibling;\n    }\n\n    if (element.type === REACT_FRAGMENT_TYPE) {\n      const created = createFiberFromFragment(\n        element.props.children,\n        returnFiber.mode,\n        lanes,\n        element.key,\n      );\n      created.return = returnFiber;\n      return created;\n    } else {\n      const created = createFiberFromElement(element, returnFiber.mode, lanes);\n      created.ref = coerceRef(returnFiber, currentFirstChild, element);\n      created.return = returnFiber;\n      return created;\n    }\n  }\n\n  function reconcileSinglePortal(\n    returnFiber: Fiber,\n    currentFirstChild: Fiber | null,\n    portal: ReactPortal,\n    lanes: Lanes,\n  ): Fiber {\n    const key = portal.key;\n    let child = currentFirstChild;\n    while (child !== null) {\n      // TODO: If key === null and child.key === null, then this only applies to\n      // the first item in the list.\n      if (child.key === key) {\n        if (\n          child.tag === HostPortal &&\n          child.stateNode.containerInfo === portal.containerInfo &&\n          child.stateNode.implementation === portal.implementation\n        ) {\n          deleteRemainingChildren(returnFiber, child.sibling);\n          const existing = useFiber(child, portal.children || []);\n          existing.return = returnFiber;\n          return existing;\n        } else {\n          deleteRemainingChildren(returnFiber, child);\n          break;\n        }\n      } else {\n        deleteChild(returnFiber, child);\n      }\n      child = child.sibling;\n    }\n\n    const created = createFiberFromPortal(portal, returnFiber.mode, lanes);\n    created.return = returnFiber;\n    return created;\n  }\n\n  // This API will tag the children with the side-effect of the reconciliation\n  // itself. They will be added to the side-effect list as we pass through the\n  // children and the parent.\n  function reconcileChildFibers(\n    returnFiber: Fiber,\n    currentFirstChild: Fiber | null,\n    newChild: any,\n    lanes: Lanes,\n  ): Fiber | null {\n    // This function is not recursive.\n    // If the top level item is an array, we treat it as a set of children,\n    // not as a fragment. Nested arrays on the other hand will be treated as\n    // fragment nodes. Recursion happens at the normal flow.\n\n    // Handle top level unkeyed fragments as if they were arrays.\n    // This leads to an ambiguity between <>{[...]}</> and <>...</>.\n    // We treat the ambiguous cases above the same.\n    const isUnkeyedTopLevelFragment =\n      typeof newChild === 'object' &&\n      newChild !== null &&\n      newChild.type === REACT_FRAGMENT_TYPE &&\n      newChild.key === null;\n    if (isUnkeyedTopLevelFragment) {\n      newChild = newChild.props.children;\n    }\n\n    // Handle object types\n    const isObject = typeof newChild === 'object' && newChild !== null;\n\n    if (isObject) {\n      switch (newChild.$$typeof) {\n        case REACT_ELEMENT_TYPE:\n          return placeSingleChild(\n            reconcileSingleElement(\n              returnFiber,\n              currentFirstChild,\n              newChild,\n              lanes,\n            ),\n          );\n        case REACT_PORTAL_TYPE:\n          return placeSingleChild(\n            reconcileSinglePortal(\n              returnFiber,\n              currentFirstChild,\n              newChild,\n              lanes,\n            ),\n          );\n        case REACT_LAZY_TYPE:\n          if (enableLazyElements) {\n            const payload = newChild._payload;\n            const init = newChild._init;\n            // TODO: This function is supposed to be non-recursive.\n            return reconcileChildFibers(\n              returnFiber,\n              currentFirstChild,\n              init(payload),\n              lanes,\n            );\n          }\n      }\n    }\n\n    if (typeof newChild === 'string' || typeof newChild === 'number') {\n      return placeSingleChild(\n        reconcileSingleTextNode(\n          returnFiber,\n          currentFirstChild,\n          '' + newChild,\n          lanes,\n        ),\n      );\n    }\n\n    if (isArray(newChild)) {\n      return reconcileChildrenArray(\n        returnFiber,\n        currentFirstChild,\n        newChild,\n        lanes,\n      );\n    }\n\n    if (getIteratorFn(newChild)) {\n      return reconcileChildrenIterator(\n        returnFiber,\n        currentFirstChild,\n        newChild,\n        lanes,\n      );\n    }\n\n    if (isObject) {\n      throwOnInvalidObjectType(returnFiber, newChild);\n    }\n\n    if (__DEV__) {\n      if (typeof newChild === 'function') {\n        warnOnFunctionType(returnFiber);\n      }\n    }\n    if (typeof newChild === 'undefined' && !isUnkeyedTopLevelFragment) {\n      // If the new child is undefined, and the return fiber is a composite\n      // component, throw an error. If Fiber return types are disabled,\n      // we already threw above.\n      switch (returnFiber.tag) {\n        case ClassComponent: {\n          if (__DEV__) {\n            const instance = returnFiber.stateNode;\n            if (instance.render._isMockFunction) {\n              // We allow auto-mocks to proceed as if they're returning null.\n              break;\n            }\n          }\n        }\n        // Intentionally fall through to the next case, which handles both\n        // functions and classes\n        // eslint-disable-next-lined no-fallthrough\n        case Block:\n        case FunctionComponent:\n        case ForwardRef:\n        case SimpleMemoComponent: {\n          invariant(\n            false,\n            '%s(...): Nothing was returned from render. This usually means a ' +\n              'return statement is missing. Or, to render nothing, ' +\n              'return null.',\n            getComponentName(returnFiber.type) || 'Component',\n          );\n        }\n      }\n    }\n\n    // Remaining cases are all treated as empty.\n    return deleteRemainingChildren(returnFiber, currentFirstChild);\n  }\n\n  return reconcileChildFibers;\n}\n\nexport const reconcileChildFibers = ChildReconciler(true);\nexport const mountChildFibers = ChildReconciler(false);\n\nexport function cloneChildFibers(\n  current: Fiber | null,\n  workInProgress: Fiber,\n): void {\n  invariant(\n    current === null || workInProgress.child === current.child,\n    'Resuming work not yet implemented.',\n  );\n\n  if (workInProgress.child === null) {\n    return;\n  }\n\n  let currentChild = workInProgress.child;\n  let newChild = createWorkInProgress(currentChild, currentChild.pendingProps);\n  workInProgress.child = newChild;\n\n  newChild.return = workInProgress;\n  while (currentChild.sibling !== null) {\n    currentChild = currentChild.sibling;\n    newChild = newChild.sibling = createWorkInProgress(\n      currentChild,\n      currentChild.pendingProps,\n    );\n    newChild.return = workInProgress;\n  }\n  newChild.sibling = null;\n}\n\n// Reset a workInProgress child set to prepare it for a second pass.\nexport function resetChildFibers(workInProgress: Fiber, lanes: Lanes): void {\n  let child = workInProgress.child;\n  while (child !== null) {\n    resetWorkInProgress(child, lanes);\n    child = child.sibling;\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactInternalTypes';\nimport type {StackCursor} from './ReactFiberStack.old';\nimport type {Container, HostContext} from './ReactFiberHostConfig';\n\nimport invariant from 'shared/invariant';\n\nimport {getChildHostContext, getRootHostContext} from './ReactFiberHostConfig';\nimport {createCursor, push, pop} from './ReactFiberStack.old';\n\ndeclare class NoContextT {}\nconst NO_CONTEXT: NoContextT = ({}: any);\n\nconst contextStackCursor: StackCursor<HostContext | NoContextT> = createCursor(\n  NO_CONTEXT,\n);\nconst contextFiberStackCursor: StackCursor<Fiber | NoContextT> = createCursor(\n  NO_CONTEXT,\n);\nconst rootInstanceStackCursor: StackCursor<\n  Container | NoContextT,\n> = createCursor(NO_CONTEXT);\n\nfunction requiredContext<Value>(c: Value | NoContextT): Value {\n  invariant(\n    c !== NO_CONTEXT,\n    'Expected host context to exist. This error is likely caused by a bug ' +\n      'in React. Please file an issue.',\n  );\n  return (c: any);\n}\n\nfunction getRootHostContainer(): Container {\n  const rootInstance = requiredContext(rootInstanceStackCursor.current);\n  return rootInstance;\n}\n\nfunction pushHostContainer(fiber: Fiber, nextRootInstance: Container) {\n  // Push current root instance onto the stack;\n  // This allows us to reset root when portals are popped.\n  push(rootInstanceStackCursor, nextRootInstance, fiber);\n  // Track the context and the Fiber that provided it.\n  // This enables us to pop only Fibers that provide unique contexts.\n  push(contextFiberStackCursor, fiber, fiber);\n\n  // Finally, we need to push the host context to the stack.\n  // However, we can't just call getRootHostContext() and push it because\n  // we'd have a different number of entries on the stack depending on\n  // whether getRootHostContext() throws somewhere in renderer code or not.\n  // So we push an empty value first. This lets us safely unwind on errors.\n  push(contextStackCursor, NO_CONTEXT, fiber);\n  const nextRootContext = getRootHostContext(nextRootInstance);\n  // Now that we know this function doesn't throw, replace it.\n  pop(contextStackCursor, fiber);\n  push(contextStackCursor, nextRootContext, fiber);\n}\n\nfunction popHostContainer(fiber: Fiber) {\n  pop(contextStackCursor, fiber);\n  pop(contextFiberStackCursor, fiber);\n  pop(rootInstanceStackCursor, fiber);\n}\n\nfunction getHostContext(): HostContext {\n  const context = requiredContext(contextStackCursor.current);\n  return context;\n}\n\nfunction pushHostContext(fiber: Fiber): void {\n  const rootInstance: Container = requiredContext(\n    rootInstanceStackCursor.current,\n  );\n  const context: HostContext = requiredContext(contextStackCursor.current);\n  const nextContext = getChildHostContext(context, fiber.type, rootInstance);\n\n  // Don't push this Fiber's context unless it's unique.\n  if (context === nextContext) {\n    return;\n  }\n\n  // Track the context and the Fiber that provided it.\n  // This enables us to pop only Fibers that provide unique contexts.\n  push(contextFiberStackCursor, fiber, fiber);\n  push(contextStackCursor, nextContext, fiber);\n}\n\nfunction popHostContext(fiber: Fiber): void {\n  // Do not pop unless this Fiber provided the current context.\n  // pushHostContext() only pushes Fibers that provide unique contexts.\n  if (contextFiberStackCursor.current !== fiber) {\n    return;\n  }\n\n  pop(contextStackCursor, fiber);\n  pop(contextFiberStackCursor, fiber);\n}\n\nexport {\n  getHostContext,\n  getRootHostContainer,\n  popHostContainer,\n  popHostContext,\n  pushHostContainer,\n  pushHostContext,\n};\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactInternalTypes';\nimport type {StackCursor} from './ReactFiberStack.old';\n\nimport {createCursor, push, pop} from './ReactFiberStack.old';\n\nexport opaque type SuspenseContext = number;\nexport opaque type SubtreeSuspenseContext: SuspenseContext = number;\nexport opaque type ShallowSuspenseContext: SuspenseContext = number;\n\nconst DefaultSuspenseContext: SuspenseContext = 0b00;\n\n// The Suspense Context is split into two parts. The lower bits is\n// inherited deeply down the subtree. The upper bits only affect\n// this immediate suspense boundary and gets reset each new\n// boundary or suspense list.\nconst SubtreeSuspenseContextMask: SuspenseContext = 0b01;\n\n// Subtree Flags:\n\n// InvisibleParentSuspenseContext indicates that one of our parent Suspense\n// boundaries is not currently showing visible main content.\n// Either because it is already showing a fallback or is not mounted at all.\n// We can use this to determine if it is desirable to trigger a fallback at\n// the parent. If not, then we might need to trigger undesirable boundaries\n// and/or suspend the commit to avoid hiding the parent content.\nexport const InvisibleParentSuspenseContext: SubtreeSuspenseContext = 0b01;\n\n// Shallow Flags:\n\n// ForceSuspenseFallback can be used by SuspenseList to force newly added\n// items into their fallback state during one of the render passes.\nexport const ForceSuspenseFallback: ShallowSuspenseContext = 0b10;\n\nexport const suspenseStackCursor: StackCursor<SuspenseContext> = createCursor(\n  DefaultSuspenseContext,\n);\n\nexport function hasSuspenseContext(\n  parentContext: SuspenseContext,\n  flag: SuspenseContext,\n): boolean {\n  return (parentContext & flag) !== 0;\n}\n\nexport function setDefaultShallowSuspenseContext(\n  parentContext: SuspenseContext,\n): SuspenseContext {\n  return parentContext & SubtreeSuspenseContextMask;\n}\n\nexport function setShallowSuspenseContext(\n  parentContext: SuspenseContext,\n  shallowContext: ShallowSuspenseContext,\n): SuspenseContext {\n  return (parentContext & SubtreeSuspenseContextMask) | shallowContext;\n}\n\nexport function addSubtreeSuspenseContext(\n  parentContext: SuspenseContext,\n  subtreeContext: SubtreeSuspenseContext,\n): SuspenseContext {\n  return parentContext | subtreeContext;\n}\n\nexport function pushSuspenseContext(\n  fiber: Fiber,\n  newContext: SuspenseContext,\n): void {\n  push(suspenseStackCursor, newContext, fiber);\n}\n\nexport function popSuspenseContext(fiber: Fiber): void {\n  pop(suspenseStackCursor, fiber);\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {ReactNodeList, Wakeable} from 'shared/ReactTypes';\nimport type {Fiber} from './ReactInternalTypes';\nimport type {SuspenseInstance} from './ReactFiberHostConfig';\nimport type {Lane} from './ReactFiberLane';\nimport {SuspenseComponent, SuspenseListComponent} from './ReactWorkTags';\nimport {NoFlags, DidCapture} from './ReactFiberFlags';\nimport {\n  isSuspenseInstancePending,\n  isSuspenseInstanceFallback,\n} from './ReactFiberHostConfig';\n\nexport type SuspenseProps = {|\n  children?: ReactNodeList,\n  fallback?: ReactNodeList,\n\n  // TODO: Add \"unstable_\" prefix?\n  suspenseCallback?: (Set<Wakeable> | null) => mixed,\n\n  unstable_expectedLoadTime?: number,\n|};\n\n// A null SuspenseState represents an unsuspended normal Suspense boundary.\n// A non-null SuspenseState means that it is blocked for one reason or another.\n// - A non-null dehydrated field means it's blocked pending hydration.\n//   - A non-null dehydrated field can use isSuspenseInstancePending or\n//     isSuspenseInstanceFallback to query the reason for being dehydrated.\n// - A null dehydrated field means it's blocked by something suspending and\n//   we're currently showing a fallback instead.\nexport type SuspenseState = {|\n  // If this boundary is still dehydrated, we store the SuspenseInstance\n  // here to indicate that it is dehydrated (flag) and for quick access\n  // to check things like isSuspenseInstancePending.\n  dehydrated: null | SuspenseInstance,\n  // Represents the lane we should attempt to hydrate a dehydrated boundary at.\n  // OffscreenLane is the default for dehydrated boundaries.\n  // NoLane is the default for normal boundaries, which turns into \"normal\" pri.\n  retryLane: Lane,\n|};\n\nexport type SuspenseListTailMode = 'collapsed' | 'hidden' | void;\n\nexport type SuspenseListRenderState = {|\n  isBackwards: boolean,\n  // The currently rendering tail row.\n  rendering: null | Fiber,\n  // The absolute time when we started rendering the most recent tail row.\n  renderingStartTime: number,\n  // The last of the already rendered children.\n  last: null | Fiber,\n  // Remaining rows on the tail of the list.\n  tail: null | Fiber,\n  // Tail insertions setting.\n  tailMode: SuspenseListTailMode,\n  // Last Effect before we rendered the \"rendering\" item.\n  // Used to remove new effects added by the rendered item.\n  lastEffect: null | Fiber,\n|};\n\nexport function shouldCaptureSuspense(\n  workInProgress: Fiber,\n  hasInvisibleParent: boolean,\n): boolean {\n  // If it was the primary children that just suspended, capture and render the\n  // fallback. Otherwise, don't capture and bubble to the next boundary.\n  const nextState: SuspenseState | null = workInProgress.memoizedState;\n  if (nextState !== null) {\n    if (nextState.dehydrated !== null) {\n      // A dehydrated boundary always captures.\n      return true;\n    }\n    return false;\n  }\n  const props = workInProgress.memoizedProps;\n  // In order to capture, the Suspense component must have a fallback prop.\n  if (props.fallback === undefined) {\n    return false;\n  }\n  // Regular boundaries always capture.\n  if (props.unstable_avoidThisFallback !== true) {\n    return true;\n  }\n  // If it's a boundary we should avoid, then we prefer to bubble up to the\n  // parent boundary if it is currently invisible.\n  if (hasInvisibleParent) {\n    return false;\n  }\n  // If the parent is not able to handle it, we must handle it.\n  return true;\n}\n\nexport function findFirstSuspended(row: Fiber): null | Fiber {\n  let node = row;\n  while (node !== null) {\n    if (node.tag === SuspenseComponent) {\n      const state: SuspenseState | null = node.memoizedState;\n      if (state !== null) {\n        const dehydrated: null | SuspenseInstance = state.dehydrated;\n        if (\n          dehydrated === null ||\n          isSuspenseInstancePending(dehydrated) ||\n          isSuspenseInstanceFallback(dehydrated)\n        ) {\n          return node;\n        }\n      }\n    } else if (\n      node.tag === SuspenseListComponent &&\n      // revealOrder undefined can't be trusted because it don't\n      // keep track of whether it suspended or not.\n      node.memoizedProps.revealOrder !== undefined\n    ) {\n      const didSuspend = (node.flags & DidCapture) !== NoFlags;\n      if (didSuspend) {\n        return node;\n      }\n    } else if (node.child !== null) {\n      node.child.return = node;\n      node = node.child;\n      continue;\n    }\n    if (node === row) {\n      return null;\n    }\n    while (node.sibling === null) {\n      if (node.return === null || node.return === row) {\n        return null;\n      }\n      node = node.return;\n    }\n    node.sibling.return = node.return;\n    node = node.sibling;\n  }\n  return null;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nexport type HookFlags = number;\n\nexport const NoFlags = /*  */ 0b000;\n\n// Represents whether effect should fire.\nexport const HasEffect = /* */ 0b001;\n\n// Represents the phase in which the effect (not the clean-up) fires.\nexport const Layout = /*    */ 0b010;\nexport const Passive = /*   */ 0b100;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactInternalTypes';\nimport type {\n  Instance,\n  TextInstance,\n  HydratableInstance,\n  SuspenseInstance,\n  Container,\n  HostContext,\n} from './ReactFiberHostConfig';\nimport type {SuspenseState} from './ReactFiberSuspenseComponent.old';\n\nimport {\n  HostComponent,\n  HostText,\n  HostRoot,\n  SuspenseComponent,\n} from './ReactWorkTags';\nimport {Deletion, Placement, Hydrating} from './ReactFiberFlags';\nimport invariant from 'shared/invariant';\n\nimport {\n  createFiberFromHostInstanceForDeletion,\n  createFiberFromDehydratedFragment,\n} from './ReactFiber.old';\nimport {\n  shouldSetTextContent,\n  supportsHydration,\n  canHydrateInstance,\n  canHydrateTextInstance,\n  canHydrateSuspenseInstance,\n  getNextHydratableSibling,\n  getFirstHydratableChild,\n  hydrateInstance,\n  hydrateTextInstance,\n  hydrateSuspenseInstance,\n  getNextHydratableInstanceAfterSuspenseInstance,\n  didNotMatchHydratedContainerTextInstance,\n  didNotMatchHydratedTextInstance,\n  didNotHydrateContainerInstance,\n  didNotHydrateInstance,\n  didNotFindHydratableContainerInstance,\n  didNotFindHydratableContainerTextInstance,\n  didNotFindHydratableContainerSuspenseInstance,\n  didNotFindHydratableInstance,\n  didNotFindHydratableTextInstance,\n  didNotFindHydratableSuspenseInstance,\n} from './ReactFiberHostConfig';\nimport {enableSuspenseServerRenderer} from 'shared/ReactFeatureFlags';\nimport {OffscreenLane} from './ReactFiberLane';\n\n// The deepest Fiber on the stack involved in a hydration context.\n// This may have been an insertion or a hydration.\nlet hydrationParentFiber: null | Fiber = null;\nlet nextHydratableInstance: null | HydratableInstance = null;\nlet isHydrating: boolean = false;\n\nfunction warnIfHydrating() {\n  if (__DEV__) {\n    if (isHydrating) {\n      console.error(\n        'We should not be hydrating here. This is a bug in React. Please file a bug.',\n      );\n    }\n  }\n}\n\nfunction enterHydrationState(fiber: Fiber): boolean {\n  if (!supportsHydration) {\n    return false;\n  }\n\n  const parentInstance = fiber.stateNode.containerInfo;\n  nextHydratableInstance = getFirstHydratableChild(parentInstance);\n  hydrationParentFiber = fiber;\n  isHydrating = true;\n  return true;\n}\n\nfunction reenterHydrationStateFromDehydratedSuspenseInstance(\n  fiber: Fiber,\n  suspenseInstance: SuspenseInstance,\n): boolean {\n  if (!supportsHydration) {\n    return false;\n  }\n  nextHydratableInstance = getNextHydratableSibling(suspenseInstance);\n  popToNextHostParent(fiber);\n  isHydrating = true;\n  return true;\n}\n\nfunction deleteHydratableInstance(\n  returnFiber: Fiber,\n  instance: HydratableInstance,\n) {\n  if (__DEV__) {\n    switch (returnFiber.tag) {\n      case HostRoot:\n        didNotHydrateContainerInstance(\n          returnFiber.stateNode.containerInfo,\n          instance,\n        );\n        break;\n      case HostComponent:\n        didNotHydrateInstance(\n          returnFiber.type,\n          returnFiber.memoizedProps,\n          returnFiber.stateNode,\n          instance,\n        );\n        break;\n    }\n  }\n\n  const childToDelete = createFiberFromHostInstanceForDeletion();\n  childToDelete.stateNode = instance;\n  childToDelete.return = returnFiber;\n  childToDelete.flags = Deletion;\n\n  // This might seem like it belongs on progressedFirstDeletion. However,\n  // these children are not part of the reconciliation list of children.\n  // Even if we abort and rereconcile the children, that will try to hydrate\n  // again and the nodes are still in the host tree so these will be\n  // recreated.\n  if (returnFiber.lastEffect !== null) {\n    returnFiber.lastEffect.nextEffect = childToDelete;\n    returnFiber.lastEffect = childToDelete;\n  } else {\n    returnFiber.firstEffect = returnFiber.lastEffect = childToDelete;\n  }\n}\n\nfunction insertNonHydratedInstance(returnFiber: Fiber, fiber: Fiber) {\n  fiber.flags = (fiber.flags & ~Hydrating) | Placement;\n  if (__DEV__) {\n    switch (returnFiber.tag) {\n      case HostRoot: {\n        const parentContainer = returnFiber.stateNode.containerInfo;\n        switch (fiber.tag) {\n          case HostComponent:\n            const type = fiber.type;\n            const props = fiber.pendingProps;\n            didNotFindHydratableContainerInstance(parentContainer, type, props);\n            break;\n          case HostText:\n            const text = fiber.pendingProps;\n            didNotFindHydratableContainerTextInstance(parentContainer, text);\n            break;\n          case SuspenseComponent:\n            didNotFindHydratableContainerSuspenseInstance(parentContainer);\n            break;\n        }\n        break;\n      }\n      case HostComponent: {\n        const parentType = returnFiber.type;\n        const parentProps = returnFiber.memoizedProps;\n        const parentInstance = returnFiber.stateNode;\n        switch (fiber.tag) {\n          case HostComponent:\n            const type = fiber.type;\n            const props = fiber.pendingProps;\n            didNotFindHydratableInstance(\n              parentType,\n              parentProps,\n              parentInstance,\n              type,\n              props,\n            );\n            break;\n          case HostText:\n            const text = fiber.pendingProps;\n            didNotFindHydratableTextInstance(\n              parentType,\n              parentProps,\n              parentInstance,\n              text,\n            );\n            break;\n          case SuspenseComponent:\n            didNotFindHydratableSuspenseInstance(\n              parentType,\n              parentProps,\n              parentInstance,\n            );\n            break;\n        }\n        break;\n      }\n      default:\n        return;\n    }\n  }\n}\n\nfunction tryHydrate(fiber, nextInstance) {\n  switch (fiber.tag) {\n    case HostComponent: {\n      const type = fiber.type;\n      const props = fiber.pendingProps;\n      const instance = canHydrateInstance(nextInstance, type, props);\n      if (instance !== null) {\n        fiber.stateNode = (instance: Instance);\n        return true;\n      }\n      return false;\n    }\n    case HostText: {\n      const text = fiber.pendingProps;\n      const textInstance = canHydrateTextInstance(nextInstance, text);\n      if (textInstance !== null) {\n        fiber.stateNode = (textInstance: TextInstance);\n        return true;\n      }\n      return false;\n    }\n    case SuspenseComponent: {\n      if (enableSuspenseServerRenderer) {\n        const suspenseInstance: null | SuspenseInstance = canHydrateSuspenseInstance(\n          nextInstance,\n        );\n        if (suspenseInstance !== null) {\n          const suspenseState: SuspenseState = {\n            dehydrated: suspenseInstance,\n            retryLane: OffscreenLane,\n          };\n          fiber.memoizedState = suspenseState;\n          // Store the dehydrated fragment as a child fiber.\n          // This simplifies the code for getHostSibling and deleting nodes,\n          // since it doesn't have to consider all Suspense boundaries and\n          // check if they're dehydrated ones or not.\n          const dehydratedFragment = createFiberFromDehydratedFragment(\n            suspenseInstance,\n          );\n          dehydratedFragment.return = fiber;\n          fiber.child = dehydratedFragment;\n          return true;\n        }\n      }\n      return false;\n    }\n    default:\n      return false;\n  }\n}\n\nfunction tryToClaimNextHydratableInstance(fiber: Fiber): void {\n  if (!isHydrating) {\n    return;\n  }\n  let nextInstance = nextHydratableInstance;\n  if (!nextInstance) {\n    // Nothing to hydrate. Make it an insertion.\n    insertNonHydratedInstance((hydrationParentFiber: any), fiber);\n    isHydrating = false;\n    hydrationParentFiber = fiber;\n    return;\n  }\n  const firstAttemptedInstance = nextInstance;\n  if (!tryHydrate(fiber, nextInstance)) {\n    // If we can't hydrate this instance let's try the next one.\n    // We use this as a heuristic. It's based on intuition and not data so it\n    // might be flawed or unnecessary.\n    nextInstance = getNextHydratableSibling(firstAttemptedInstance);\n    if (!nextInstance || !tryHydrate(fiber, nextInstance)) {\n      // Nothing to hydrate. Make it an insertion.\n      insertNonHydratedInstance((hydrationParentFiber: any), fiber);\n      isHydrating = false;\n      hydrationParentFiber = fiber;\n      return;\n    }\n    // We matched the next one, we'll now assume that the first one was\n    // superfluous and we'll delete it. Since we can't eagerly delete it\n    // we'll have to schedule a deletion. To do that, this node needs a dummy\n    // fiber associated with it.\n    deleteHydratableInstance(\n      (hydrationParentFiber: any),\n      firstAttemptedInstance,\n    );\n  }\n  hydrationParentFiber = fiber;\n  nextHydratableInstance = getFirstHydratableChild((nextInstance: any));\n}\n\nfunction prepareToHydrateHostInstance(\n  fiber: Fiber,\n  rootContainerInstance: Container,\n  hostContext: HostContext,\n): boolean {\n  if (!supportsHydration) {\n    invariant(\n      false,\n      'Expected prepareToHydrateHostInstance() to never be called. ' +\n        'This error is likely caused by a bug in React. Please file an issue.',\n    );\n  }\n\n  const instance: Instance = fiber.stateNode;\n  const updatePayload = hydrateInstance(\n    instance,\n    fiber.type,\n    fiber.memoizedProps,\n    rootContainerInstance,\n    hostContext,\n    fiber,\n  );\n  // TODO: Type this specific to this type of component.\n  fiber.updateQueue = (updatePayload: any);\n  // If the update payload indicates that there is a change or if there\n  // is a new ref we mark this as an update.\n  if (updatePayload !== null) {\n    return true;\n  }\n  return false;\n}\n\nfunction prepareToHydrateHostTextInstance(fiber: Fiber): boolean {\n  if (!supportsHydration) {\n    invariant(\n      false,\n      'Expected prepareToHydrateHostTextInstance() to never be called. ' +\n        'This error is likely caused by a bug in React. Please file an issue.',\n    );\n  }\n\n  const textInstance: TextInstance = fiber.stateNode;\n  const textContent: string = fiber.memoizedProps;\n  const shouldUpdate = hydrateTextInstance(textInstance, textContent, fiber);\n  if (__DEV__) {\n    if (shouldUpdate) {\n      // We assume that prepareToHydrateHostTextInstance is called in a context where the\n      // hydration parent is the parent host component of this host text.\n      const returnFiber = hydrationParentFiber;\n      if (returnFiber !== null) {\n        switch (returnFiber.tag) {\n          case HostRoot: {\n            const parentContainer = returnFiber.stateNode.containerInfo;\n            didNotMatchHydratedContainerTextInstance(\n              parentContainer,\n              textInstance,\n              textContent,\n            );\n            break;\n          }\n          case HostComponent: {\n            const parentType = returnFiber.type;\n            const parentProps = returnFiber.memoizedProps;\n            const parentInstance = returnFiber.stateNode;\n            didNotMatchHydratedTextInstance(\n              parentType,\n              parentProps,\n              parentInstance,\n              textInstance,\n              textContent,\n            );\n            break;\n          }\n        }\n      }\n    }\n  }\n  return shouldUpdate;\n}\n\nfunction prepareToHydrateHostSuspenseInstance(fiber: Fiber): void {\n  if (!supportsHydration) {\n    invariant(\n      false,\n      'Expected prepareToHydrateHostSuspenseInstance() to never be called. ' +\n        'This error is likely caused by a bug in React. Please file an issue.',\n    );\n  }\n\n  const suspenseState: null | SuspenseState = fiber.memoizedState;\n  const suspenseInstance: null | SuspenseInstance =\n    suspenseState !== null ? suspenseState.dehydrated : null;\n  invariant(\n    suspenseInstance,\n    'Expected to have a hydrated suspense instance. ' +\n      'This error is likely caused by a bug in React. Please file an issue.',\n  );\n  hydrateSuspenseInstance(suspenseInstance, fiber);\n}\n\nfunction skipPastDehydratedSuspenseInstance(\n  fiber: Fiber,\n): null | HydratableInstance {\n  if (!supportsHydration) {\n    invariant(\n      false,\n      'Expected skipPastDehydratedSuspenseInstance() to never be called. ' +\n        'This error is likely caused by a bug in React. Please file an issue.',\n    );\n  }\n  const suspenseState: null | SuspenseState = fiber.memoizedState;\n  const suspenseInstance: null | SuspenseInstance =\n    suspenseState !== null ? suspenseState.dehydrated : null;\n  invariant(\n    suspenseInstance,\n    'Expected to have a hydrated suspense instance. ' +\n      'This error is likely caused by a bug in React. Please file an issue.',\n  );\n  return getNextHydratableInstanceAfterSuspenseInstance(suspenseInstance);\n}\n\nfunction popToNextHostParent(fiber: Fiber): void {\n  let parent = fiber.return;\n  while (\n    parent !== null &&\n    parent.tag !== HostComponent &&\n    parent.tag !== HostRoot &&\n    parent.tag !== SuspenseComponent\n  ) {\n    parent = parent.return;\n  }\n  hydrationParentFiber = parent;\n}\n\nfunction popHydrationState(fiber: Fiber): boolean {\n  if (!supportsHydration) {\n    return false;\n  }\n  if (fiber !== hydrationParentFiber) {\n    // We're deeper than the current hydration context, inside an inserted\n    // tree.\n    return false;\n  }\n  if (!isHydrating) {\n    // If we're not currently hydrating but we're in a hydration context, then\n    // we were an insertion and now need to pop up reenter hydration of our\n    // siblings.\n    popToNextHostParent(fiber);\n    isHydrating = true;\n    return false;\n  }\n\n  const type = fiber.type;\n\n  // If we have any remaining hydratable nodes, we need to delete them now.\n  // We only do this deeper than head and body since they tend to have random\n  // other nodes in them. We also ignore components with pure text content in\n  // side of them.\n  // TODO: Better heuristic.\n  if (\n    fiber.tag !== HostComponent ||\n    (type !== 'head' &&\n      type !== 'body' &&\n      !shouldSetTextContent(type, fiber.memoizedProps))\n  ) {\n    let nextInstance = nextHydratableInstance;\n    while (nextInstance) {\n      deleteHydratableInstance(fiber, nextInstance);\n      nextInstance = getNextHydratableSibling(nextInstance);\n    }\n  }\n\n  popToNextHostParent(fiber);\n  if (fiber.tag === SuspenseComponent) {\n    nextHydratableInstance = skipPastDehydratedSuspenseInstance(fiber);\n  } else {\n    nextHydratableInstance = hydrationParentFiber\n      ? getNextHydratableSibling(fiber.stateNode)\n      : null;\n  }\n  return true;\n}\n\nfunction resetHydrationState(): void {\n  if (!supportsHydration) {\n    return;\n  }\n\n  hydrationParentFiber = null;\n  nextHydratableInstance = null;\n  isHydrating = false;\n}\n\nfunction getIsHydrating(): boolean {\n  return isHydrating;\n}\n\nexport {\n  warnIfHydrating,\n  enterHydrationState,\n  getIsHydrating,\n  reenterHydrationStateFromDehydratedSuspenseInstance,\n  resetHydrationState,\n  tryToClaimNextHydratableInstance,\n  prepareToHydrateHostInstance,\n  prepareToHydrateHostTextInstance,\n  prepareToHydrateHostSuspenseInstance,\n  popHydrationState,\n};\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {MutableSource, MutableSourceVersion} from 'shared/ReactTypes';\nimport type {FiberRoot} from './ReactInternalTypes';\n\nimport {isPrimaryRenderer} from './ReactFiberHostConfig';\n\n// Work in progress version numbers only apply to a single render,\n// and should be reset before starting a new render.\n// This tracks which mutable sources need to be reset after a render.\nconst workInProgressSources: Array<MutableSource<any>> = [];\n\nlet rendererSigil;\nif (__DEV__) {\n  // Used to detect multiple renderers using the same mutable source.\n  rendererSigil = {};\n}\n\nexport function markSourceAsDirty(mutableSource: MutableSource<any>): void {\n  workInProgressSources.push(mutableSource);\n}\n\nexport function resetWorkInProgressVersions(): void {\n  for (let i = 0; i < workInProgressSources.length; i++) {\n    const mutableSource = workInProgressSources[i];\n    if (isPrimaryRenderer) {\n      mutableSource._workInProgressVersionPrimary = null;\n    } else {\n      mutableSource._workInProgressVersionSecondary = null;\n    }\n  }\n  workInProgressSources.length = 0;\n}\n\nexport function getWorkInProgressVersion(\n  mutableSource: MutableSource<any>,\n): null | MutableSourceVersion {\n  if (isPrimaryRenderer) {\n    return mutableSource._workInProgressVersionPrimary;\n  } else {\n    return mutableSource._workInProgressVersionSecondary;\n  }\n}\n\nexport function setWorkInProgressVersion(\n  mutableSource: MutableSource<any>,\n  version: MutableSourceVersion,\n): void {\n  if (isPrimaryRenderer) {\n    mutableSource._workInProgressVersionPrimary = version;\n  } else {\n    mutableSource._workInProgressVersionSecondary = version;\n  }\n  workInProgressSources.push(mutableSource);\n}\n\nexport function warnAboutMultipleRenderersDEV(\n  mutableSource: MutableSource<any>,\n): void {\n  if (__DEV__) {\n    if (isPrimaryRenderer) {\n      if (mutableSource._currentPrimaryRenderer == null) {\n        mutableSource._currentPrimaryRenderer = rendererSigil;\n      } else if (mutableSource._currentPrimaryRenderer !== rendererSigil) {\n        console.error(\n          'Detected multiple renderers concurrently rendering the ' +\n            'same mutable source. This is currently unsupported.',\n        );\n      }\n    } else {\n      if (mutableSource._currentSecondaryRenderer == null) {\n        mutableSource._currentSecondaryRenderer = rendererSigil;\n      } else if (mutableSource._currentSecondaryRenderer !== rendererSigil) {\n        console.error(\n          'Detected multiple renderers concurrently rendering the ' +\n            'same mutable source. This is currently unsupported.',\n        );\n      }\n    }\n  }\n}\n\n// Eager reads the version of a mutable source and stores it on the root.\n// This ensures that the version used for server rendering matches the one\n// that is eventually read during hydration.\n// If they don't match there's a potential tear and a full deopt render is required.\nexport function registerMutableSourceForHydration(\n  root: FiberRoot,\n  mutableSource: MutableSource<any>,\n): void {\n  const getVersion = mutableSource._getVersion;\n  const version = getVersion(mutableSource._source);\n\n  // TODO Clear this data once all pending hydration work is finished.\n  // Retaining it forever may interfere with GC.\n  if (root.mutableSourceEagerHydrationData == null) {\n    root.mutableSourceEagerHydrationData = [mutableSource, version];\n  } else {\n    root.mutableSourceEagerHydrationData.push(mutableSource, version);\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {\n  MutableSource,\n  MutableSourceGetSnapshotFn,\n  MutableSourceSubscribeFn,\n  ReactContext,\n} from 'shared/ReactTypes';\nimport type {Fiber, Dispatcher} from './ReactInternalTypes';\nimport type {Lanes, Lane} from './ReactFiberLane';\nimport type {HookFlags} from './ReactHookEffectTags';\nimport type {ReactPriorityLevel} from './ReactInternalTypes';\nimport type {FiberRoot} from './ReactInternalTypes';\nimport type {OpaqueIDType} from './ReactFiberHostConfig';\n\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\nimport {\n  enableDebugTracing,\n  enableSchedulingProfiler,\n  enableNewReconciler,\n  decoupleUpdatePriorityFromScheduler,\n} from 'shared/ReactFeatureFlags';\n\nimport {NoMode, BlockingMode, DebugTracingMode} from './ReactTypeOfMode';\nimport {\n  NoLane,\n  NoLanes,\n  InputContinuousLanePriority,\n  isSubsetOfLanes,\n  mergeLanes,\n  removeLanes,\n  markRootEntangled,\n  markRootMutableRead,\n  getCurrentUpdateLanePriority,\n  setCurrentUpdateLanePriority,\n  higherLanePriority,\n  DefaultLanePriority,\n} from './ReactFiberLane';\nimport {readContext} from './ReactFiberNewContext.old';\nimport {\n  Update as UpdateEffect,\n  Passive as PassiveEffect,\n} from './ReactFiberFlags';\nimport {\n  HasEffect as HookHasEffect,\n  Layout as HookLayout,\n  Passive as HookPassive,\n} from './ReactHookEffectTags';\nimport {\n  getWorkInProgressRoot,\n  scheduleUpdateOnFiber,\n  requestUpdateLane,\n  requestEventTime,\n  warnIfNotCurrentlyActingEffectsInDEV,\n  warnIfNotCurrentlyActingUpdatesInDev,\n  warnIfNotScopedWithMatchingAct,\n  markSkippedUpdateLanes,\n} from './ReactFiberWorkLoop.old';\n\nimport invariant from 'shared/invariant';\nimport getComponentName from 'shared/getComponentName';\nimport is from 'shared/objectIs';\nimport {markWorkInProgressReceivedUpdate} from './ReactFiberBeginWork.old';\nimport {\n  UserBlockingPriority,\n  NormalPriority,\n  runWithPriority,\n  getCurrentPriorityLevel,\n} from './SchedulerWithReactIntegration.old';\nimport {getIsHydrating} from './ReactFiberHydrationContext.old';\nimport {\n  makeClientId,\n  makeClientIdInDEV,\n  makeOpaqueHydratingObject,\n} from './ReactFiberHostConfig';\nimport {\n  getWorkInProgressVersion,\n  markSourceAsDirty,\n  setWorkInProgressVersion,\n  warnAboutMultipleRenderersDEV,\n} from './ReactMutableSource.old';\nimport {getIsRendering} from './ReactCurrentFiber';\nimport {logStateUpdateScheduled} from './DebugTracing';\nimport {markStateUpdateScheduled} from './SchedulingProfiler';\n\nconst {ReactCurrentDispatcher, ReactCurrentBatchConfig} = ReactSharedInternals;\n\ntype Update<S, A> = {|\n  lane: Lane,\n  action: A,\n  eagerReducer: ((S, A) => S) | null,\n  eagerState: S | null,\n  next: Update<S, A>,\n  priority?: ReactPriorityLevel,\n|};\n\ntype UpdateQueue<S, A> = {|\n  pending: Update<S, A> | null,\n  dispatch: (A => mixed) | null,\n  lastRenderedReducer: ((S, A) => S) | null,\n  lastRenderedState: S | null,\n|};\n\nexport type HookType =\n  | 'useState'\n  | 'useReducer'\n  | 'useContext'\n  | 'useRef'\n  | 'useEffect'\n  | 'useLayoutEffect'\n  | 'useCallback'\n  | 'useMemo'\n  | 'useImperativeHandle'\n  | 'useDebugValue'\n  | 'useDeferredValue'\n  | 'useTransition'\n  | 'useMutableSource'\n  | 'useOpaqueIdentifier';\n\nlet didWarnAboutMismatchedHooksForComponent;\nlet didWarnAboutUseOpaqueIdentifier;\nif (__DEV__) {\n  didWarnAboutUseOpaqueIdentifier = {};\n  didWarnAboutMismatchedHooksForComponent = new Set();\n}\n\nexport type Hook = {|\n  memoizedState: any,\n  baseState: any,\n  baseQueue: Update<any, any> | null,\n  queue: UpdateQueue<any, any> | null,\n  next: Hook | null,\n|};\n\nexport type Effect = {|\n  tag: HookFlags,\n  create: () => (() => void) | void,\n  destroy: (() => void) | void,\n  deps: Array<mixed> | null,\n  next: Effect,\n|};\n\nexport type FunctionComponentUpdateQueue = {|lastEffect: Effect | null|};\n\ntype BasicStateAction<S> = (S => S) | S;\n\ntype Dispatch<A> = A => void;\n\n// These are set right before calling the component.\nlet renderLanes: Lanes = NoLanes;\n// The work-in-progress fiber. I've named it differently to distinguish it from\n// the work-in-progress hook.\nlet currentlyRenderingFiber: Fiber = (null: any);\n\n// Hooks are stored as a linked list on the fiber's memoizedState field. The\n// current hook list is the list that belongs to the current fiber. The\n// work-in-progress hook list is a new list that will be added to the\n// work-in-progress fiber.\nlet currentHook: Hook | null = null;\nlet workInProgressHook: Hook | null = null;\n\n// Whether an update was scheduled at any point during the render phase. This\n// does not get reset if we do another render pass; only when we're completely\n// finished evaluating this component. This is an optimization so we know\n// whether we need to clear render phase updates after a throw.\nlet didScheduleRenderPhaseUpdate: boolean = false;\n// Where an update was scheduled only during the current render pass. This\n// gets reset after each attempt.\n// TODO: Maybe there's some way to consolidate this with\n// `didScheduleRenderPhaseUpdate`. Or with `numberOfReRenders`.\nlet didScheduleRenderPhaseUpdateDuringThisPass: boolean = false;\n\nconst RE_RENDER_LIMIT = 25;\n\n// In DEV, this is the name of the currently executing primitive hook\nlet currentHookNameInDev: ?HookType = null;\n\n// In DEV, this list ensures that hooks are called in the same order between renders.\n// The list stores the order of hooks used during the initial render (mount).\n// Subsequent renders (updates) reference this list.\nlet hookTypesDev: Array<HookType> | null = null;\nlet hookTypesUpdateIndexDev: number = -1;\n\n// In DEV, this tracks whether currently rendering component needs to ignore\n// the dependencies for Hooks that need them (e.g. useEffect or useMemo).\n// When true, such Hooks will always be \"remounted\". Only used during hot reload.\nlet ignorePreviousDependencies: boolean = false;\n\nfunction mountHookTypesDev() {\n  if (__DEV__) {\n    const hookName = ((currentHookNameInDev: any): HookType);\n\n    if (hookTypesDev === null) {\n      hookTypesDev = [hookName];\n    } else {\n      hookTypesDev.push(hookName);\n    }\n  }\n}\n\nfunction updateHookTypesDev() {\n  if (__DEV__) {\n    const hookName = ((currentHookNameInDev: any): HookType);\n\n    if (hookTypesDev !== null) {\n      hookTypesUpdateIndexDev++;\n      if (hookTypesDev[hookTypesUpdateIndexDev] !== hookName) {\n        warnOnHookMismatchInDev(hookName);\n      }\n    }\n  }\n}\n\nfunction checkDepsAreArrayDev(deps: mixed) {\n  if (__DEV__) {\n    if (deps !== undefined && deps !== null && !Array.isArray(deps)) {\n      // Verify deps, but only on mount to avoid extra checks.\n      // It's unlikely their type would change as usually you define them inline.\n      console.error(\n        '%s received a final argument that is not an array (instead, received `%s`). When ' +\n          'specified, the final argument must be an array.',\n        currentHookNameInDev,\n        typeof deps,\n      );\n    }\n  }\n}\n\nfunction warnOnHookMismatchInDev(currentHookName: HookType) {\n  if (__DEV__) {\n    const componentName = getComponentName(currentlyRenderingFiber.type);\n    if (!didWarnAboutMismatchedHooksForComponent.has(componentName)) {\n      didWarnAboutMismatchedHooksForComponent.add(componentName);\n\n      if (hookTypesDev !== null) {\n        let table = '';\n\n        const secondColumnStart = 30;\n\n        for (let i = 0; i <= ((hookTypesUpdateIndexDev: any): number); i++) {\n          const oldHookName = hookTypesDev[i];\n          const newHookName =\n            i === ((hookTypesUpdateIndexDev: any): number)\n              ? currentHookName\n              : oldHookName;\n\n          let row = `${i + 1}. ${oldHookName}`;\n\n          // Extra space so second column lines up\n          // lol @ IE not supporting String#repeat\n          while (row.length < secondColumnStart) {\n            row += ' ';\n          }\n\n          row += newHookName + '\\n';\n\n          table += row;\n        }\n\n        console.error(\n          'React has detected a change in the order of Hooks called by %s. ' +\n            'This will lead to bugs and errors if not fixed. ' +\n            'For more information, read the Rules of Hooks: https://reactjs.org/link/rules-of-hooks\\n\\n' +\n            '   Previous render            Next render\\n' +\n            '   ------------------------------------------------------\\n' +\n            '%s' +\n            '   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n',\n          componentName,\n          table,\n        );\n      }\n    }\n  }\n}\n\nfunction throwInvalidHookError() {\n  invariant(\n    false,\n    'Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for' +\n      ' one of the following reasons:\\n' +\n      '1. You might have mismatching versions of React and the renderer (such as React DOM)\\n' +\n      '2. You might be breaking the Rules of Hooks\\n' +\n      '3. You might have more than one copy of React in the same app\\n' +\n      'See https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.',\n  );\n}\n\nfunction areHookInputsEqual(\n  nextDeps: Array<mixed>,\n  prevDeps: Array<mixed> | null,\n) {\n  if (__DEV__) {\n    if (ignorePreviousDependencies) {\n      // Only true when this component is being hot reloaded.\n      return false;\n    }\n  }\n\n  if (prevDeps === null) {\n    if (__DEV__) {\n      console.error(\n        '%s received a final argument during this render, but not during ' +\n          'the previous render. Even though the final argument is optional, ' +\n          'its type cannot change between renders.',\n        currentHookNameInDev,\n      );\n    }\n    return false;\n  }\n\n  if (__DEV__) {\n    // Don't bother comparing lengths in prod because these arrays should be\n    // passed inline.\n    if (nextDeps.length !== prevDeps.length) {\n      console.error(\n        'The final argument passed to %s changed size between renders. The ' +\n          'order and size of this array must remain constant.\\n\\n' +\n          'Previous: %s\\n' +\n          'Incoming: %s',\n        currentHookNameInDev,\n        `[${prevDeps.join(', ')}]`,\n        `[${nextDeps.join(', ')}]`,\n      );\n    }\n  }\n  for (let i = 0; i < prevDeps.length && i < nextDeps.length; i++) {\n    if (is(nextDeps[i], prevDeps[i])) {\n      continue;\n    }\n    return false;\n  }\n  return true;\n}\n\nexport function renderWithHooks<Props, SecondArg>(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  Component: (p: Props, arg: SecondArg) => any,\n  props: Props,\n  secondArg: SecondArg,\n  nextRenderLanes: Lanes,\n): any {\n  renderLanes = nextRenderLanes;\n  currentlyRenderingFiber = workInProgress;\n\n  if (__DEV__) {\n    hookTypesDev =\n      current !== null\n        ? ((current._debugHookTypes: any): Array<HookType>)\n        : null;\n    hookTypesUpdateIndexDev = -1;\n    // Used for hot reloading:\n    ignorePreviousDependencies =\n      current !== null && current.type !== workInProgress.type;\n  }\n\n  workInProgress.memoizedState = null;\n  workInProgress.updateQueue = null;\n  workInProgress.lanes = NoLanes;\n\n  // The following should have already been reset\n  // currentHook = null;\n  // workInProgressHook = null;\n\n  // didScheduleRenderPhaseUpdate = false;\n\n  // TODO Warn if no hooks are used at all during mount, then some are used during update.\n  // Currently we will identify the update render as a mount because memoizedState === null.\n  // This is tricky because it's valid for certain types of components (e.g. React.lazy)\n\n  // Using memoizedState to differentiate between mount/update only works if at least one stateful hook is used.\n  // Non-stateful hooks (e.g. context) don't get added to memoizedState,\n  // so memoizedState would be null during updates and mounts.\n  if (__DEV__) {\n    if (current !== null && current.memoizedState !== null) {\n      ReactCurrentDispatcher.current = HooksDispatcherOnUpdateInDEV;\n    } else if (hookTypesDev !== null) {\n      // This dispatcher handles an edge case where a component is updating,\n      // but no stateful hooks have been used.\n      // We want to match the production code behavior (which will use HooksDispatcherOnMount),\n      // but with the extra DEV validation to ensure hooks ordering hasn't changed.\n      // This dispatcher does that.\n      ReactCurrentDispatcher.current = HooksDispatcherOnMountWithHookTypesInDEV;\n    } else {\n      ReactCurrentDispatcher.current = HooksDispatcherOnMountInDEV;\n    }\n  } else {\n    ReactCurrentDispatcher.current =\n      current === null || current.memoizedState === null\n        ? HooksDispatcherOnMount\n        : HooksDispatcherOnUpdate;\n  }\n\n  let children = Component(props, secondArg);\n\n  // Check if there was a render phase update\n  if (didScheduleRenderPhaseUpdateDuringThisPass) {\n    // Keep rendering in a loop for as long as render phase updates continue to\n    // be scheduled. Use a counter to prevent infinite loops.\n    let numberOfReRenders: number = 0;\n    do {\n      didScheduleRenderPhaseUpdateDuringThisPass = false;\n      invariant(\n        numberOfReRenders < RE_RENDER_LIMIT,\n        'Too many re-renders. React limits the number of renders to prevent ' +\n          'an infinite loop.',\n      );\n\n      numberOfReRenders += 1;\n      if (__DEV__) {\n        // Even when hot reloading, allow dependencies to stabilize\n        // after first render to prevent infinite render phase updates.\n        ignorePreviousDependencies = false;\n      }\n\n      // Start over from the beginning of the list\n      currentHook = null;\n      workInProgressHook = null;\n\n      workInProgress.updateQueue = null;\n\n      if (__DEV__) {\n        // Also validate hook order for cascading updates.\n        hookTypesUpdateIndexDev = -1;\n      }\n\n      ReactCurrentDispatcher.current = __DEV__\n        ? HooksDispatcherOnRerenderInDEV\n        : HooksDispatcherOnRerender;\n\n      children = Component(props, secondArg);\n    } while (didScheduleRenderPhaseUpdateDuringThisPass);\n  }\n\n  // We can assume the previous dispatcher is always this one, since we set it\n  // at the beginning of the render phase and there's no re-entrancy.\n  ReactCurrentDispatcher.current = ContextOnlyDispatcher;\n\n  if (__DEV__) {\n    workInProgress._debugHookTypes = hookTypesDev;\n  }\n\n  // This check uses currentHook so that it works the same in DEV and prod bundles.\n  // hookTypesDev could catch more cases (e.g. context) but only in DEV bundles.\n  const didRenderTooFewHooks =\n    currentHook !== null && currentHook.next !== null;\n\n  renderLanes = NoLanes;\n  currentlyRenderingFiber = (null: any);\n\n  currentHook = null;\n  workInProgressHook = null;\n\n  if (__DEV__) {\n    currentHookNameInDev = null;\n    hookTypesDev = null;\n    hookTypesUpdateIndexDev = -1;\n  }\n\n  didScheduleRenderPhaseUpdate = false;\n\n  invariant(\n    !didRenderTooFewHooks,\n    'Rendered fewer hooks than expected. This may be caused by an accidental ' +\n      'early return statement.',\n  );\n\n  return children;\n}\n\nexport function bailoutHooks(\n  current: Fiber,\n  workInProgress: Fiber,\n  lanes: Lanes,\n) {\n  workInProgress.updateQueue = current.updateQueue;\n  workInProgress.flags &= ~(PassiveEffect | UpdateEffect);\n  current.lanes = removeLanes(current.lanes, lanes);\n}\n\nexport function resetHooksAfterThrow(): void {\n  // We can assume the previous dispatcher is always this one, since we set it\n  // at the beginning of the render phase and there's no re-entrancy.\n  ReactCurrentDispatcher.current = ContextOnlyDispatcher;\n\n  if (didScheduleRenderPhaseUpdate) {\n    // There were render phase updates. These are only valid for this render\n    // phase, which we are now aborting. Remove the updates from the queues so\n    // they do not persist to the next render. Do not remove updates from hooks\n    // that weren't processed.\n    //\n    // Only reset the updates from the queue if it has a clone. If it does\n    // not have a clone, that means it wasn't processed, and the updates were\n    // scheduled before we entered the render phase.\n    let hook: Hook | null = currentlyRenderingFiber.memoizedState;\n    while (hook !== null) {\n      const queue = hook.queue;\n      if (queue !== null) {\n        queue.pending = null;\n      }\n      hook = hook.next;\n    }\n    didScheduleRenderPhaseUpdate = false;\n  }\n\n  renderLanes = NoLanes;\n  currentlyRenderingFiber = (null: any);\n\n  currentHook = null;\n  workInProgressHook = null;\n\n  if (__DEV__) {\n    hookTypesDev = null;\n    hookTypesUpdateIndexDev = -1;\n\n    currentHookNameInDev = null;\n\n    isUpdatingOpaqueValueInRenderPhase = false;\n  }\n\n  didScheduleRenderPhaseUpdateDuringThisPass = false;\n}\n\nfunction mountWorkInProgressHook(): Hook {\n  const hook: Hook = {\n    memoizedState: null,\n\n    baseState: null,\n    baseQueue: null,\n    queue: null,\n\n    next: null,\n  };\n\n  if (workInProgressHook === null) {\n    // This is the first hook in the list\n    currentlyRenderingFiber.memoizedState = workInProgressHook = hook;\n  } else {\n    // Append to the end of the list\n    workInProgressHook = workInProgressHook.next = hook;\n  }\n  return workInProgressHook;\n}\n\nfunction updateWorkInProgressHook(): Hook {\n  // This function is used both for updates and for re-renders triggered by a\n  // render phase update. It assumes there is either a current hook we can\n  // clone, or a work-in-progress hook from a previous render pass that we can\n  // use as a base. When we reach the end of the base list, we must switch to\n  // the dispatcher used for mounts.\n  let nextCurrentHook: null | Hook;\n  if (currentHook === null) {\n    const current = currentlyRenderingFiber.alternate;\n    if (current !== null) {\n      nextCurrentHook = current.memoizedState;\n    } else {\n      nextCurrentHook = null;\n    }\n  } else {\n    nextCurrentHook = currentHook.next;\n  }\n\n  let nextWorkInProgressHook: null | Hook;\n  if (workInProgressHook === null) {\n    nextWorkInProgressHook = currentlyRenderingFiber.memoizedState;\n  } else {\n    nextWorkInProgressHook = workInProgressHook.next;\n  }\n\n  if (nextWorkInProgressHook !== null) {\n    // There's already a work-in-progress. Reuse it.\n    workInProgressHook = nextWorkInProgressHook;\n    nextWorkInProgressHook = workInProgressHook.next;\n\n    currentHook = nextCurrentHook;\n  } else {\n    // Clone from the current hook.\n\n    invariant(\n      nextCurrentHook !== null,\n      'Rendered more hooks than during the previous render.',\n    );\n    currentHook = nextCurrentHook;\n\n    const newHook: Hook = {\n      memoizedState: currentHook.memoizedState,\n\n      baseState: currentHook.baseState,\n      baseQueue: currentHook.baseQueue,\n      queue: currentHook.queue,\n\n      next: null,\n    };\n\n    if (workInProgressHook === null) {\n      // This is the first hook in the list.\n      currentlyRenderingFiber.memoizedState = workInProgressHook = newHook;\n    } else {\n      // Append to the end of the list.\n      workInProgressHook = workInProgressHook.next = newHook;\n    }\n  }\n  return workInProgressHook;\n}\n\nfunction createFunctionComponentUpdateQueue(): FunctionComponentUpdateQueue {\n  return {\n    lastEffect: null,\n  };\n}\n\nfunction basicStateReducer<S>(state: S, action: BasicStateAction<S>): S {\n  // $FlowFixMe: Flow doesn't like mixed types\n  return typeof action === 'function' ? action(state) : action;\n}\n\nfunction mountReducer<S, I, A>(\n  reducer: (S, A) => S,\n  initialArg: I,\n  init?: I => S,\n): [S, Dispatch<A>] {\n  const hook = mountWorkInProgressHook();\n  let initialState;\n  if (init !== undefined) {\n    initialState = init(initialArg);\n  } else {\n    initialState = ((initialArg: any): S);\n  }\n  hook.memoizedState = hook.baseState = initialState;\n  const queue = (hook.queue = {\n    pending: null,\n    dispatch: null,\n    lastRenderedReducer: reducer,\n    lastRenderedState: (initialState: any),\n  });\n  const dispatch: Dispatch<A> = (queue.dispatch = (dispatchAction.bind(\n    null,\n    currentlyRenderingFiber,\n    queue,\n  ): any));\n  return [hook.memoizedState, dispatch];\n}\n\nfunction updateReducer<S, I, A>(\n  reducer: (S, A) => S,\n  initialArg: I,\n  init?: I => S,\n): [S, Dispatch<A>] {\n  const hook = updateWorkInProgressHook();\n  const queue = hook.queue;\n  invariant(\n    queue !== null,\n    'Should have a queue. This is likely a bug in React. Please file an issue.',\n  );\n\n  queue.lastRenderedReducer = reducer;\n\n  const current: Hook = (currentHook: any);\n\n  // The last rebase update that is NOT part of the base state.\n  let baseQueue = current.baseQueue;\n\n  // The last pending update that hasn't been processed yet.\n  const pendingQueue = queue.pending;\n  if (pendingQueue !== null) {\n    // We have new updates that haven't been processed yet.\n    // We'll add them to the base queue.\n    if (baseQueue !== null) {\n      // Merge the pending queue and the base queue.\n      const baseFirst = baseQueue.next;\n      const pendingFirst = pendingQueue.next;\n      baseQueue.next = pendingFirst;\n      pendingQueue.next = baseFirst;\n    }\n    if (__DEV__) {\n      if (current.baseQueue !== baseQueue) {\n        // Internal invariant that should never happen, but feasibly could in\n        // the future if we implement resuming, or some form of that.\n        console.error(\n          'Internal error: Expected work-in-progress queue to be a clone. ' +\n            'This is a bug in React.',\n        );\n      }\n    }\n    current.baseQueue = baseQueue = pendingQueue;\n    queue.pending = null;\n  }\n\n  if (baseQueue !== null) {\n    // We have a queue to process.\n    const first = baseQueue.next;\n    let newState = current.baseState;\n\n    let newBaseState = null;\n    let newBaseQueueFirst = null;\n    let newBaseQueueLast = null;\n    let update = first;\n    do {\n      const updateLane = update.lane;\n      if (!isSubsetOfLanes(renderLanes, updateLane)) {\n        // Priority is insufficient. Skip this update. If this is the first\n        // skipped update, the previous update/state is the new base\n        // update/state.\n        const clone: Update<S, A> = {\n          lane: updateLane,\n          action: update.action,\n          eagerReducer: update.eagerReducer,\n          eagerState: update.eagerState,\n          next: (null: any),\n        };\n        if (newBaseQueueLast === null) {\n          newBaseQueueFirst = newBaseQueueLast = clone;\n          newBaseState = newState;\n        } else {\n          newBaseQueueLast = newBaseQueueLast.next = clone;\n        }\n        // Update the remaining priority in the queue.\n        // TODO: Don't need to accumulate this. Instead, we can remove\n        // renderLanes from the original lanes.\n        currentlyRenderingFiber.lanes = mergeLanes(\n          currentlyRenderingFiber.lanes,\n          updateLane,\n        );\n        markSkippedUpdateLanes(updateLane);\n      } else {\n        // This update does have sufficient priority.\n\n        if (newBaseQueueLast !== null) {\n          const clone: Update<S, A> = {\n            // This update is going to be committed so we never want uncommit\n            // it. Using NoLane works because 0 is a subset of all bitmasks, so\n            // this will never be skipped by the check above.\n            lane: NoLane,\n            action: update.action,\n            eagerReducer: update.eagerReducer,\n            eagerState: update.eagerState,\n            next: (null: any),\n          };\n          newBaseQueueLast = newBaseQueueLast.next = clone;\n        }\n\n        // Process this update.\n        if (update.eagerReducer === reducer) {\n          // If this update was processed eagerly, and its reducer matches the\n          // current reducer, we can use the eagerly computed state.\n          newState = ((update.eagerState: any): S);\n        } else {\n          const action = update.action;\n          newState = reducer(newState, action);\n        }\n      }\n      update = update.next;\n    } while (update !== null && update !== first);\n\n    if (newBaseQueueLast === null) {\n      newBaseState = newState;\n    } else {\n      newBaseQueueLast.next = (newBaseQueueFirst: any);\n    }\n\n    // Mark that the fiber performed work, but only if the new state is\n    // different from the current state.\n    if (!is(newState, hook.memoizedState)) {\n      markWorkInProgressReceivedUpdate();\n    }\n\n    hook.memoizedState = newState;\n    hook.baseState = newBaseState;\n    hook.baseQueue = newBaseQueueLast;\n\n    queue.lastRenderedState = newState;\n  }\n\n  const dispatch: Dispatch<A> = (queue.dispatch: any);\n  return [hook.memoizedState, dispatch];\n}\n\nfunction rerenderReducer<S, I, A>(\n  reducer: (S, A) => S,\n  initialArg: I,\n  init?: I => S,\n): [S, Dispatch<A>] {\n  const hook = updateWorkInProgressHook();\n  const queue = hook.queue;\n  invariant(\n    queue !== null,\n    'Should have a queue. This is likely a bug in React. Please file an issue.',\n  );\n\n  queue.lastRenderedReducer = reducer;\n\n  // This is a re-render. Apply the new render phase updates to the previous\n  // work-in-progress hook.\n  const dispatch: Dispatch<A> = (queue.dispatch: any);\n  const lastRenderPhaseUpdate = queue.pending;\n  let newState = hook.memoizedState;\n  if (lastRenderPhaseUpdate !== null) {\n    // The queue doesn't persist past this render pass.\n    queue.pending = null;\n\n    const firstRenderPhaseUpdate = lastRenderPhaseUpdate.next;\n    let update = firstRenderPhaseUpdate;\n    do {\n      // Process this render phase update. We don't have to check the\n      // priority because it will always be the same as the current\n      // render's.\n      const action = update.action;\n      newState = reducer(newState, action);\n      update = update.next;\n    } while (update !== firstRenderPhaseUpdate);\n\n    // Mark that the fiber performed work, but only if the new state is\n    // different from the current state.\n    if (!is(newState, hook.memoizedState)) {\n      markWorkInProgressReceivedUpdate();\n    }\n\n    hook.memoizedState = newState;\n    // Don't persist the state accumulated from the render phase updates to\n    // the base state unless the queue is empty.\n    // TODO: Not sure if this is the desired semantics, but it's what we\n    // do for gDSFP. I can't remember why.\n    if (hook.baseQueue === null) {\n      hook.baseState = newState;\n    }\n\n    queue.lastRenderedState = newState;\n  }\n  return [newState, dispatch];\n}\n\ntype MutableSourceMemoizedState<Source, Snapshot> = {|\n  refs: {\n    getSnapshot: MutableSourceGetSnapshotFn<Source, Snapshot>,\n    setSnapshot: Snapshot => void,\n  },\n  source: MutableSource<any>,\n  subscribe: MutableSourceSubscribeFn<Source, Snapshot>,\n|};\n\nfunction readFromUnsubcribedMutableSource<Source, Snapshot>(\n  root: FiberRoot,\n  source: MutableSource<Source>,\n  getSnapshot: MutableSourceGetSnapshotFn<Source, Snapshot>,\n): Snapshot {\n  if (__DEV__) {\n    warnAboutMultipleRenderersDEV(source);\n  }\n\n  const getVersion = source._getVersion;\n  const version = getVersion(source._source);\n\n  // Is it safe for this component to read from this source during the current render?\n  let isSafeToReadFromSource = false;\n\n  // Check the version first.\n  // If this render has already been started with a specific version,\n  // we can use it alone to determine if we can safely read from the source.\n  const currentRenderVersion = getWorkInProgressVersion(source);\n  if (currentRenderVersion !== null) {\n    // It's safe to read if the store hasn't been mutated since the last time\n    // we read something.\n    isSafeToReadFromSource = currentRenderVersion === version;\n  } else {\n    // If there's no version, then this is the first time we've read from the\n    // source during the current render pass, so we need to do a bit more work.\n    // What we need to determine is if there are any hooks that already\n    // subscribed to the source, and if so, whether there are any pending\n    // mutations that haven't been synchronized yet.\n    //\n    // If there are no pending mutations, then `root.mutableReadLanes` will be\n    // empty, and we know we can safely read.\n    //\n    // If there *are* pending mutations, we may still be able to safely read\n    // if the currently rendering lanes are inclusive of the pending mutation\n    // lanes, since that guarantees that the value we're about to read from\n    // the source is consistent with the values that we read during the most\n    // recent mutation.\n    isSafeToReadFromSource = isSubsetOfLanes(\n      renderLanes,\n      root.mutableReadLanes,\n    );\n\n    if (isSafeToReadFromSource) {\n      // If it's safe to read from this source during the current render,\n      // store the version in case other components read from it.\n      // A changed version number will let those components know to throw and restart the render.\n      setWorkInProgressVersion(source, version);\n    }\n  }\n\n  if (isSafeToReadFromSource) {\n    const snapshot = getSnapshot(source._source);\n    if (__DEV__) {\n      if (typeof snapshot === 'function') {\n        console.error(\n          'Mutable source should not return a function as the snapshot value. ' +\n            'Functions may close over mutable values and cause tearing.',\n        );\n      }\n    }\n    return snapshot;\n  } else {\n    // This handles the special case of a mutable source being shared between renderers.\n    // In that case, if the source is mutated between the first and second renderer,\n    // The second renderer don't know that it needs to reset the WIP version during unwind,\n    // (because the hook only marks sources as dirty if it's written to their WIP version).\n    // That would cause this tear check to throw again and eventually be visible to the user.\n    // We can avoid this infinite loop by explicitly marking the source as dirty.\n    //\n    // This can lead to tearing in the first renderer when it resumes,\n    // but there's nothing we can do about that (short of throwing here and refusing to continue the render).\n    markSourceAsDirty(source);\n\n    invariant(\n      false,\n      'Cannot read from mutable source during the current render without tearing. This is a bug in React. Please file an issue.',\n    );\n  }\n}\n\nfunction useMutableSource<Source, Snapshot>(\n  hook: Hook,\n  source: MutableSource<Source>,\n  getSnapshot: MutableSourceGetSnapshotFn<Source, Snapshot>,\n  subscribe: MutableSourceSubscribeFn<Source, Snapshot>,\n): Snapshot {\n  const root = ((getWorkInProgressRoot(): any): FiberRoot);\n  invariant(\n    root !== null,\n    'Expected a work-in-progress root. This is a bug in React. Please file an issue.',\n  );\n\n  const getVersion = source._getVersion;\n  const version = getVersion(source._source);\n\n  const dispatcher = ReactCurrentDispatcher.current;\n\n  // eslint-disable-next-line prefer-const\n  let [currentSnapshot, setSnapshot] = dispatcher.useState(() =>\n    readFromUnsubcribedMutableSource(root, source, getSnapshot),\n  );\n  let snapshot = currentSnapshot;\n\n  // Grab a handle to the state hook as well.\n  // We use it to clear the pending update queue if we have a new source.\n  const stateHook = ((workInProgressHook: any): Hook);\n\n  const memoizedState = ((hook.memoizedState: any): MutableSourceMemoizedState<\n    Source,\n    Snapshot,\n  >);\n  const refs = memoizedState.refs;\n  const prevGetSnapshot = refs.getSnapshot;\n  const prevSource = memoizedState.source;\n  const prevSubscribe = memoizedState.subscribe;\n\n  const fiber = currentlyRenderingFiber;\n\n  hook.memoizedState = ({\n    refs,\n    source,\n    subscribe,\n  }: MutableSourceMemoizedState<Source, Snapshot>);\n\n  // Sync the values needed by our subscription handler after each commit.\n  dispatcher.useEffect(() => {\n    refs.getSnapshot = getSnapshot;\n\n    // Normally the dispatch function for a state hook never changes,\n    // but this hook recreates the queue in certain cases  to avoid updates from stale sources.\n    // handleChange() below needs to reference the dispatch function without re-subscribing,\n    // so we use a ref to ensure that it always has the latest version.\n    refs.setSnapshot = setSnapshot;\n\n    // Check for a possible change between when we last rendered now.\n    const maybeNewVersion = getVersion(source._source);\n    if (!is(version, maybeNewVersion)) {\n      const maybeNewSnapshot = getSnapshot(source._source);\n      if (__DEV__) {\n        if (typeof maybeNewSnapshot === 'function') {\n          console.error(\n            'Mutable source should not return a function as the snapshot value. ' +\n              'Functions may close over mutable values and cause tearing.',\n          );\n        }\n      }\n\n      if (!is(snapshot, maybeNewSnapshot)) {\n        setSnapshot(maybeNewSnapshot);\n\n        const lane = requestUpdateLane(fiber);\n        markRootMutableRead(root, lane);\n      }\n      // If the source mutated between render and now,\n      // there may be state updates already scheduled from the old source.\n      // Entangle the updates so that they render in the same batch.\n      markRootEntangled(root, root.mutableReadLanes);\n    }\n  }, [getSnapshot, source, subscribe]);\n\n  // If we got a new source or subscribe function, re-subscribe in a passive effect.\n  dispatcher.useEffect(() => {\n    const handleChange = () => {\n      const latestGetSnapshot = refs.getSnapshot;\n      const latestSetSnapshot = refs.setSnapshot;\n\n      try {\n        latestSetSnapshot(latestGetSnapshot(source._source));\n\n        // Record a pending mutable source update with the same expiration time.\n        const lane = requestUpdateLane(fiber);\n\n        markRootMutableRead(root, lane);\n      } catch (error) {\n        // A selector might throw after a source mutation.\n        // e.g. it might try to read from a part of the store that no longer exists.\n        // In this case we should still schedule an update with React.\n        // Worst case the selector will throw again and then an error boundary will handle it.\n        latestSetSnapshot(\n          (() => {\n            throw error;\n          }: any),\n        );\n      }\n    };\n\n    const unsubscribe = subscribe(source._source, handleChange);\n    if (__DEV__) {\n      if (typeof unsubscribe !== 'function') {\n        console.error(\n          'Mutable source subscribe function must return an unsubscribe function.',\n        );\n      }\n    }\n\n    return unsubscribe;\n  }, [source, subscribe]);\n\n  // If any of the inputs to useMutableSource change, reading is potentially unsafe.\n  //\n  // If either the source or the subscription have changed we can't can't trust the update queue.\n  // Maybe the source changed in a way that the old subscription ignored but the new one depends on.\n  //\n  // If the getSnapshot function changed, we also shouldn't rely on the update queue.\n  // It's possible that the underlying source was mutated between the when the last \"change\" event fired,\n  // and when the current render (with the new getSnapshot function) is processed.\n  //\n  // In both cases, we need to throw away pending updates (since they are no longer relevant)\n  // and treat reading from the source as we do in the mount case.\n  if (\n    !is(prevGetSnapshot, getSnapshot) ||\n    !is(prevSource, source) ||\n    !is(prevSubscribe, subscribe)\n  ) {\n    // Create a new queue and setState method,\n    // So if there are interleaved updates, they get pushed to the older queue.\n    // When this becomes current, the previous queue and dispatch method will be discarded,\n    // including any interleaving updates that occur.\n    const newQueue = {\n      pending: null,\n      dispatch: null,\n      lastRenderedReducer: basicStateReducer,\n      lastRenderedState: snapshot,\n    };\n    newQueue.dispatch = setSnapshot = (dispatchAction.bind(\n      null,\n      currentlyRenderingFiber,\n      newQueue,\n    ): any);\n    stateHook.queue = newQueue;\n    stateHook.baseQueue = null;\n    snapshot = readFromUnsubcribedMutableSource(root, source, getSnapshot);\n    stateHook.memoizedState = stateHook.baseState = snapshot;\n  }\n\n  return snapshot;\n}\n\nfunction mountMutableSource<Source, Snapshot>(\n  source: MutableSource<Source>,\n  getSnapshot: MutableSourceGetSnapshotFn<Source, Snapshot>,\n  subscribe: MutableSourceSubscribeFn<Source, Snapshot>,\n): Snapshot {\n  const hook = mountWorkInProgressHook();\n  hook.memoizedState = ({\n    refs: {\n      getSnapshot,\n      setSnapshot: (null: any),\n    },\n    source,\n    subscribe,\n  }: MutableSourceMemoizedState<Source, Snapshot>);\n  return useMutableSource(hook, source, getSnapshot, subscribe);\n}\n\nfunction updateMutableSource<Source, Snapshot>(\n  source: MutableSource<Source>,\n  getSnapshot: MutableSourceGetSnapshotFn<Source, Snapshot>,\n  subscribe: MutableSourceSubscribeFn<Source, Snapshot>,\n): Snapshot {\n  const hook = updateWorkInProgressHook();\n  return useMutableSource(hook, source, getSnapshot, subscribe);\n}\n\nfunction mountState<S>(\n  initialState: (() => S) | S,\n): [S, Dispatch<BasicStateAction<S>>] {\n  const hook = mountWorkInProgressHook();\n  if (typeof initialState === 'function') {\n    // $FlowFixMe: Flow doesn't like mixed types\n    initialState = initialState();\n  }\n  hook.memoizedState = hook.baseState = initialState;\n  const queue = (hook.queue = {\n    pending: null,\n    dispatch: null,\n    lastRenderedReducer: basicStateReducer,\n    lastRenderedState: (initialState: any),\n  });\n  const dispatch: Dispatch<\n    BasicStateAction<S>,\n  > = (queue.dispatch = (dispatchAction.bind(\n    null,\n    currentlyRenderingFiber,\n    queue,\n  ): any));\n  return [hook.memoizedState, dispatch];\n}\n\nfunction updateState<S>(\n  initialState: (() => S) | S,\n): [S, Dispatch<BasicStateAction<S>>] {\n  return updateReducer(basicStateReducer, (initialState: any));\n}\n\nfunction rerenderState<S>(\n  initialState: (() => S) | S,\n): [S, Dispatch<BasicStateAction<S>>] {\n  return rerenderReducer(basicStateReducer, (initialState: any));\n}\n\nfunction pushEffect(tag, create, destroy, deps) {\n  const effect: Effect = {\n    tag,\n    create,\n    destroy,\n    deps,\n    // Circular\n    next: (null: any),\n  };\n  let componentUpdateQueue: null | FunctionComponentUpdateQueue = (currentlyRenderingFiber.updateQueue: any);\n  if (componentUpdateQueue === null) {\n    componentUpdateQueue = createFunctionComponentUpdateQueue();\n    currentlyRenderingFiber.updateQueue = (componentUpdateQueue: any);\n    componentUpdateQueue.lastEffect = effect.next = effect;\n  } else {\n    const lastEffect = componentUpdateQueue.lastEffect;\n    if (lastEffect === null) {\n      componentUpdateQueue.lastEffect = effect.next = effect;\n    } else {\n      const firstEffect = lastEffect.next;\n      lastEffect.next = effect;\n      effect.next = firstEffect;\n      componentUpdateQueue.lastEffect = effect;\n    }\n  }\n  return effect;\n}\n\nfunction mountRef<T>(initialValue: T): {|current: T|} {\n  const hook = mountWorkInProgressHook();\n  const ref = {current: initialValue};\n  if (__DEV__) {\n    Object.seal(ref);\n  }\n  hook.memoizedState = ref;\n  return ref;\n}\n\nfunction updateRef<T>(initialValue: T): {|current: T|} {\n  const hook = updateWorkInProgressHook();\n  return hook.memoizedState;\n}\n\nfunction mountEffectImpl(fiberFlags, hookFlags, create, deps): void {\n  const hook = mountWorkInProgressHook();\n  const nextDeps = deps === undefined ? null : deps;\n  currentlyRenderingFiber.flags |= fiberFlags;\n  hook.memoizedState = pushEffect(\n    HookHasEffect | hookFlags,\n    create,\n    undefined,\n    nextDeps,\n  );\n}\n\nfunction updateEffectImpl(fiberFlags, hookFlags, create, deps): void {\n  const hook = updateWorkInProgressHook();\n  const nextDeps = deps === undefined ? null : deps;\n  let destroy = undefined;\n\n  if (currentHook !== null) {\n    const prevEffect = currentHook.memoizedState;\n    destroy = prevEffect.destroy;\n    if (nextDeps !== null) {\n      const prevDeps = prevEffect.deps;\n      if (areHookInputsEqual(nextDeps, prevDeps)) {\n        pushEffect(hookFlags, create, destroy, nextDeps);\n        return;\n      }\n    }\n  }\n\n  currentlyRenderingFiber.flags |= fiberFlags;\n\n  hook.memoizedState = pushEffect(\n    HookHasEffect | hookFlags,\n    create,\n    destroy,\n    nextDeps,\n  );\n}\n\nfunction mountEffect(\n  create: () => (() => void) | void,\n  deps: Array<mixed> | void | null,\n): void {\n  if (__DEV__) {\n    // $FlowExpectedError - jest isn't a global, and isn't recognized outside of tests\n    if ('undefined' !== typeof jest) {\n      warnIfNotCurrentlyActingEffectsInDEV(currentlyRenderingFiber);\n    }\n  }\n  return mountEffectImpl(\n    UpdateEffect | PassiveEffect,\n    HookPassive,\n    create,\n    deps,\n  );\n}\n\nfunction updateEffect(\n  create: () => (() => void) | void,\n  deps: Array<mixed> | void | null,\n): void {\n  if (__DEV__) {\n    // $FlowExpectedError - jest isn't a global, and isn't recognized outside of tests\n    if ('undefined' !== typeof jest) {\n      warnIfNotCurrentlyActingEffectsInDEV(currentlyRenderingFiber);\n    }\n  }\n  return updateEffectImpl(\n    UpdateEffect | PassiveEffect,\n    HookPassive,\n    create,\n    deps,\n  );\n}\n\nfunction mountLayoutEffect(\n  create: () => (() => void) | void,\n  deps: Array<mixed> | void | null,\n): void {\n  return mountEffectImpl(UpdateEffect, HookLayout, create, deps);\n}\n\nfunction updateLayoutEffect(\n  create: () => (() => void) | void,\n  deps: Array<mixed> | void | null,\n): void {\n  return updateEffectImpl(UpdateEffect, HookLayout, create, deps);\n}\n\nfunction imperativeHandleEffect<T>(\n  create: () => T,\n  ref: {|current: T | null|} | ((inst: T | null) => mixed) | null | void,\n) {\n  if (typeof ref === 'function') {\n    const refCallback = ref;\n    const inst = create();\n    refCallback(inst);\n    return () => {\n      refCallback(null);\n    };\n  } else if (ref !== null && ref !== undefined) {\n    const refObject = ref;\n    if (__DEV__) {\n      if (!refObject.hasOwnProperty('current')) {\n        console.error(\n          'Expected useImperativeHandle() first argument to either be a ' +\n            'ref callback or React.createRef() object. Instead received: %s.',\n          'an object with keys {' + Object.keys(refObject).join(', ') + '}',\n        );\n      }\n    }\n    const inst = create();\n    refObject.current = inst;\n    return () => {\n      refObject.current = null;\n    };\n  }\n}\n\nfunction mountImperativeHandle<T>(\n  ref: {|current: T | null|} | ((inst: T | null) => mixed) | null | void,\n  create: () => T,\n  deps: Array<mixed> | void | null,\n): void {\n  if (__DEV__) {\n    if (typeof create !== 'function') {\n      console.error(\n        'Expected useImperativeHandle() second argument to be a function ' +\n          'that creates a handle. Instead received: %s.',\n        create !== null ? typeof create : 'null',\n      );\n    }\n  }\n\n  // TODO: If deps are provided, should we skip comparing the ref itself?\n  const effectDeps =\n    deps !== null && deps !== undefined ? deps.concat([ref]) : null;\n\n  return mountEffectImpl(\n    UpdateEffect,\n    HookLayout,\n    imperativeHandleEffect.bind(null, create, ref),\n    effectDeps,\n  );\n}\n\nfunction updateImperativeHandle<T>(\n  ref: {|current: T | null|} | ((inst: T | null) => mixed) | null | void,\n  create: () => T,\n  deps: Array<mixed> | void | null,\n): void {\n  if (__DEV__) {\n    if (typeof create !== 'function') {\n      console.error(\n        'Expected useImperativeHandle() second argument to be a function ' +\n          'that creates a handle. Instead received: %s.',\n        create !== null ? typeof create : 'null',\n      );\n    }\n  }\n\n  // TODO: If deps are provided, should we skip comparing the ref itself?\n  const effectDeps =\n    deps !== null && deps !== undefined ? deps.concat([ref]) : null;\n\n  return updateEffectImpl(\n    UpdateEffect,\n    HookLayout,\n    imperativeHandleEffect.bind(null, create, ref),\n    effectDeps,\n  );\n}\n\nfunction mountDebugValue<T>(value: T, formatterFn: ?(value: T) => mixed): void {\n  // This hook is normally a no-op.\n  // The react-debug-hooks package injects its own implementation\n  // so that e.g. DevTools can display custom hook values.\n}\n\nconst updateDebugValue = mountDebugValue;\n\nfunction mountCallback<T>(callback: T, deps: Array<mixed> | void | null): T {\n  const hook = mountWorkInProgressHook();\n  const nextDeps = deps === undefined ? null : deps;\n  hook.memoizedState = [callback, nextDeps];\n  return callback;\n}\n\nfunction updateCallback<T>(callback: T, deps: Array<mixed> | void | null): T {\n  const hook = updateWorkInProgressHook();\n  const nextDeps = deps === undefined ? null : deps;\n  const prevState = hook.memoizedState;\n  if (prevState !== null) {\n    if (nextDeps !== null) {\n      const prevDeps: Array<mixed> | null = prevState[1];\n      if (areHookInputsEqual(nextDeps, prevDeps)) {\n        return prevState[0];\n      }\n    }\n  }\n  hook.memoizedState = [callback, nextDeps];\n  return callback;\n}\n\nfunction mountMemo<T>(\n  nextCreate: () => T,\n  deps: Array<mixed> | void | null,\n): T {\n  const hook = mountWorkInProgressHook();\n  const nextDeps = deps === undefined ? null : deps;\n  const nextValue = nextCreate();\n  hook.memoizedState = [nextValue, nextDeps];\n  return nextValue;\n}\n\nfunction updateMemo<T>(\n  nextCreate: () => T,\n  deps: Array<mixed> | void | null,\n): T {\n  const hook = updateWorkInProgressHook();\n  const nextDeps = deps === undefined ? null : deps;\n  const prevState = hook.memoizedState;\n  if (prevState !== null) {\n    // Assume these are defined. If they're not, areHookInputsEqual will warn.\n    if (nextDeps !== null) {\n      const prevDeps: Array<mixed> | null = prevState[1];\n      if (areHookInputsEqual(nextDeps, prevDeps)) {\n        return prevState[0];\n      }\n    }\n  }\n  const nextValue = nextCreate();\n  hook.memoizedState = [nextValue, nextDeps];\n  return nextValue;\n}\n\nfunction mountDeferredValue<T>(value: T): T {\n  const [prevValue, setValue] = mountState(value);\n  mountEffect(() => {\n    const prevTransition = ReactCurrentBatchConfig.transition;\n    ReactCurrentBatchConfig.transition = 1;\n    try {\n      setValue(value);\n    } finally {\n      ReactCurrentBatchConfig.transition = prevTransition;\n    }\n  }, [value]);\n  return prevValue;\n}\n\nfunction updateDeferredValue<T>(value: T): T {\n  const [prevValue, setValue] = updateState(value);\n  updateEffect(() => {\n    const prevTransition = ReactCurrentBatchConfig.transition;\n    ReactCurrentBatchConfig.transition = 1;\n    try {\n      setValue(value);\n    } finally {\n      ReactCurrentBatchConfig.transition = prevTransition;\n    }\n  }, [value]);\n  return prevValue;\n}\n\nfunction rerenderDeferredValue<T>(value: T): T {\n  const [prevValue, setValue] = rerenderState(value);\n  updateEffect(() => {\n    const prevTransition = ReactCurrentBatchConfig.transition;\n    ReactCurrentBatchConfig.transition = 1;\n    try {\n      setValue(value);\n    } finally {\n      ReactCurrentBatchConfig.transition = prevTransition;\n    }\n  }, [value]);\n  return prevValue;\n}\n\nfunction startTransition(setPending, callback) {\n  const priorityLevel = getCurrentPriorityLevel();\n  if (decoupleUpdatePriorityFromScheduler) {\n    const previousLanePriority = getCurrentUpdateLanePriority();\n    setCurrentUpdateLanePriority(\n      higherLanePriority(previousLanePriority, InputContinuousLanePriority),\n    );\n\n    runWithPriority(\n      priorityLevel < UserBlockingPriority\n        ? UserBlockingPriority\n        : priorityLevel,\n      () => {\n        setPending(true);\n      },\n    );\n\n    // TODO: Can remove this. Was only necessary because we used to give\n    // different behavior to transitions without a config object. Now they are\n    // all treated the same.\n    setCurrentUpdateLanePriority(DefaultLanePriority);\n\n    runWithPriority(\n      priorityLevel > NormalPriority ? NormalPriority : priorityLevel,\n      () => {\n        const prevTransition = ReactCurrentBatchConfig.transition;\n        ReactCurrentBatchConfig.transition = 1;\n        try {\n          setPending(false);\n          callback();\n        } finally {\n          if (decoupleUpdatePriorityFromScheduler) {\n            setCurrentUpdateLanePriority(previousLanePriority);\n          }\n          ReactCurrentBatchConfig.transition = prevTransition;\n        }\n      },\n    );\n  } else {\n    runWithPriority(\n      priorityLevel < UserBlockingPriority\n        ? UserBlockingPriority\n        : priorityLevel,\n      () => {\n        setPending(true);\n      },\n    );\n\n    runWithPriority(\n      priorityLevel > NormalPriority ? NormalPriority : priorityLevel,\n      () => {\n        const prevTransition = ReactCurrentBatchConfig.transition;\n        ReactCurrentBatchConfig.transition = 1;\n        try {\n          setPending(false);\n          callback();\n        } finally {\n          ReactCurrentBatchConfig.transition = prevTransition;\n        }\n      },\n    );\n  }\n}\n\nfunction mountTransition(): [(() => void) => void, boolean] {\n  const [isPending, setPending] = mountState(false);\n  // The `start` method can be stored on a ref, since `setPending`\n  // never changes.\n  const start = startTransition.bind(null, setPending);\n  mountRef(start);\n  return [start, isPending];\n}\n\nfunction updateTransition(): [(() => void) => void, boolean] {\n  const [isPending] = updateState(false);\n  const startRef = updateRef();\n  const start: (() => void) => void = (startRef.current: any);\n  return [start, isPending];\n}\n\nfunction rerenderTransition(): [(() => void) => void, boolean] {\n  const [isPending] = rerenderState(false);\n  const startRef = updateRef();\n  const start: (() => void) => void = (startRef.current: any);\n  return [start, isPending];\n}\n\nlet isUpdatingOpaqueValueInRenderPhase = false;\nexport function getIsUpdatingOpaqueValueInRenderPhaseInDEV(): boolean | void {\n  if (__DEV__) {\n    return isUpdatingOpaqueValueInRenderPhase;\n  }\n}\n\nfunction warnOnOpaqueIdentifierAccessInDEV(fiber) {\n  if (__DEV__) {\n    // TODO: Should warn in effects and callbacks, too\n    const name = getComponentName(fiber.type) || 'Unknown';\n    if (getIsRendering() && !didWarnAboutUseOpaqueIdentifier[name]) {\n      console.error(\n        'The object passed back from useOpaqueIdentifier is meant to be ' +\n          'passed through to attributes only. Do not read the ' +\n          'value directly.',\n      );\n      didWarnAboutUseOpaqueIdentifier[name] = true;\n    }\n  }\n}\n\nfunction mountOpaqueIdentifier(): OpaqueIDType | void {\n  const makeId = __DEV__\n    ? makeClientIdInDEV.bind(\n        null,\n        warnOnOpaqueIdentifierAccessInDEV.bind(null, currentlyRenderingFiber),\n      )\n    : makeClientId;\n\n  if (getIsHydrating()) {\n    let didUpgrade = false;\n    const fiber = currentlyRenderingFiber;\n    const readValue = () => {\n      if (!didUpgrade) {\n        // Only upgrade once. This works even inside the render phase because\n        // the update is added to a shared queue, which outlasts the\n        // in-progress render.\n        didUpgrade = true;\n        if (__DEV__) {\n          isUpdatingOpaqueValueInRenderPhase = true;\n          setId(makeId());\n          isUpdatingOpaqueValueInRenderPhase = false;\n          warnOnOpaqueIdentifierAccessInDEV(fiber);\n        } else {\n          setId(makeId());\n        }\n      }\n      invariant(\n        false,\n        'The object passed back from useOpaqueIdentifier is meant to be ' +\n          'passed through to attributes only. Do not read the value directly.',\n      );\n    };\n    const id = makeOpaqueHydratingObject(readValue);\n\n    const setId = mountState(id)[1];\n\n    if ((currentlyRenderingFiber.mode & BlockingMode) === NoMode) {\n      currentlyRenderingFiber.flags |= UpdateEffect | PassiveEffect;\n      pushEffect(\n        HookHasEffect | HookPassive,\n        () => {\n          setId(makeId());\n        },\n        undefined,\n        null,\n      );\n    }\n    return id;\n  } else {\n    const id = makeId();\n    mountState(id);\n    return id;\n  }\n}\n\nfunction updateOpaqueIdentifier(): OpaqueIDType | void {\n  const id = updateState(undefined)[0];\n  return id;\n}\n\nfunction rerenderOpaqueIdentifier(): OpaqueIDType | void {\n  const id = rerenderState(undefined)[0];\n  return id;\n}\n\nfunction dispatchAction<S, A>(\n  fiber: Fiber,\n  queue: UpdateQueue<S, A>,\n  action: A,\n) {\n  if (__DEV__) {\n    if (typeof arguments[3] === 'function') {\n      console.error(\n        \"State updates from the useState() and useReducer() Hooks don't support the \" +\n          'second callback argument. To execute a side effect after ' +\n          'rendering, declare it in the component body with useEffect().',\n      );\n    }\n  }\n\n  const eventTime = requestEventTime();\n  const lane = requestUpdateLane(fiber);\n\n  const update: Update<S, A> = {\n    lane,\n    action,\n    eagerReducer: null,\n    eagerState: null,\n    next: (null: any),\n  };\n\n  // Append the update to the end of the list.\n  const pending = queue.pending;\n  if (pending === null) {\n    // This is the first update. Create a circular list.\n    update.next = update;\n  } else {\n    update.next = pending.next;\n    pending.next = update;\n  }\n  queue.pending = update;\n\n  const alternate = fiber.alternate;\n  if (\n    fiber === currentlyRenderingFiber ||\n    (alternate !== null && alternate === currentlyRenderingFiber)\n  ) {\n    // This is a render phase update. Stash it in a lazily-created map of\n    // queue -> linked list of updates. After this render pass, we'll restart\n    // and apply the stashed updates on top of the work-in-progress hook.\n    didScheduleRenderPhaseUpdateDuringThisPass = didScheduleRenderPhaseUpdate = true;\n  } else {\n    if (\n      fiber.lanes === NoLanes &&\n      (alternate === null || alternate.lanes === NoLanes)\n    ) {\n      // The queue is currently empty, which means we can eagerly compute the\n      // next state before entering the render phase. If the new state is the\n      // same as the current state, we may be able to bail out entirely.\n      const lastRenderedReducer = queue.lastRenderedReducer;\n      if (lastRenderedReducer !== null) {\n        let prevDispatcher;\n        if (__DEV__) {\n          prevDispatcher = ReactCurrentDispatcher.current;\n          ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n        }\n        try {\n          const currentState: S = (queue.lastRenderedState: any);\n          const eagerState = lastRenderedReducer(currentState, action);\n          // Stash the eagerly computed state, and the reducer used to compute\n          // it, on the update object. If the reducer hasn't changed by the\n          // time we enter the render phase, then the eager state can be used\n          // without calling the reducer again.\n          update.eagerReducer = lastRenderedReducer;\n          update.eagerState = eagerState;\n          if (is(eagerState, currentState)) {\n            // Fast path. We can bail out without scheduling React to re-render.\n            // It's still possible that we'll need to rebase this update later,\n            // if the component re-renders for a different reason and by that\n            // time the reducer has changed.\n            return;\n          }\n        } catch (error) {\n          // Suppress the error. It will throw again in the render phase.\n        } finally {\n          if (__DEV__) {\n            ReactCurrentDispatcher.current = prevDispatcher;\n          }\n        }\n      }\n    }\n    if (__DEV__) {\n      // $FlowExpectedError - jest isn't a global, and isn't recognized outside of tests\n      if ('undefined' !== typeof jest) {\n        warnIfNotScopedWithMatchingAct(fiber);\n        warnIfNotCurrentlyActingUpdatesInDev(fiber);\n      }\n    }\n    scheduleUpdateOnFiber(fiber, lane, eventTime);\n  }\n\n  if (__DEV__) {\n    if (enableDebugTracing) {\n      if (fiber.mode & DebugTracingMode) {\n        const name = getComponentName(fiber.type) || 'Unknown';\n        logStateUpdateScheduled(name, lane, action);\n      }\n    }\n  }\n\n  if (enableSchedulingProfiler) {\n    markStateUpdateScheduled(fiber, lane);\n  }\n}\n\nexport const ContextOnlyDispatcher: Dispatcher = {\n  readContext,\n\n  useCallback: throwInvalidHookError,\n  useContext: throwInvalidHookError,\n  useEffect: throwInvalidHookError,\n  useImperativeHandle: throwInvalidHookError,\n  useLayoutEffect: throwInvalidHookError,\n  useMemo: throwInvalidHookError,\n  useReducer: throwInvalidHookError,\n  useRef: throwInvalidHookError,\n  useState: throwInvalidHookError,\n  useDebugValue: throwInvalidHookError,\n  useDeferredValue: throwInvalidHookError,\n  useTransition: throwInvalidHookError,\n  useMutableSource: throwInvalidHookError,\n  useOpaqueIdentifier: throwInvalidHookError,\n\n  unstable_isNewReconciler: enableNewReconciler,\n};\n\nconst HooksDispatcherOnMount: Dispatcher = {\n  readContext,\n\n  useCallback: mountCallback,\n  useContext: readContext,\n  useEffect: mountEffect,\n  useImperativeHandle: mountImperativeHandle,\n  useLayoutEffect: mountLayoutEffect,\n  useMemo: mountMemo,\n  useReducer: mountReducer,\n  useRef: mountRef,\n  useState: mountState,\n  useDebugValue: mountDebugValue,\n  useDeferredValue: mountDeferredValue,\n  useTransition: mountTransition,\n  useMutableSource: mountMutableSource,\n  useOpaqueIdentifier: mountOpaqueIdentifier,\n\n  unstable_isNewReconciler: enableNewReconciler,\n};\n\nconst HooksDispatcherOnUpdate: Dispatcher = {\n  readContext,\n\n  useCallback: updateCallback,\n  useContext: readContext,\n  useEffect: updateEffect,\n  useImperativeHandle: updateImperativeHandle,\n  useLayoutEffect: updateLayoutEffect,\n  useMemo: updateMemo,\n  useReducer: updateReducer,\n  useRef: updateRef,\n  useState: updateState,\n  useDebugValue: updateDebugValue,\n  useDeferredValue: updateDeferredValue,\n  useTransition: updateTransition,\n  useMutableSource: updateMutableSource,\n  useOpaqueIdentifier: updateOpaqueIdentifier,\n\n  unstable_isNewReconciler: enableNewReconciler,\n};\n\nconst HooksDispatcherOnRerender: Dispatcher = {\n  readContext,\n\n  useCallback: updateCallback,\n  useContext: readContext,\n  useEffect: updateEffect,\n  useImperativeHandle: updateImperativeHandle,\n  useLayoutEffect: updateLayoutEffect,\n  useMemo: updateMemo,\n  useReducer: rerenderReducer,\n  useRef: updateRef,\n  useState: rerenderState,\n  useDebugValue: updateDebugValue,\n  useDeferredValue: rerenderDeferredValue,\n  useTransition: rerenderTransition,\n  useMutableSource: updateMutableSource,\n  useOpaqueIdentifier: rerenderOpaqueIdentifier,\n\n  unstable_isNewReconciler: enableNewReconciler,\n};\n\nlet HooksDispatcherOnMountInDEV: Dispatcher | null = null;\nlet HooksDispatcherOnMountWithHookTypesInDEV: Dispatcher | null = null;\nlet HooksDispatcherOnUpdateInDEV: Dispatcher | null = null;\nlet HooksDispatcherOnRerenderInDEV: Dispatcher | null = null;\nlet InvalidNestedHooksDispatcherOnMountInDEV: Dispatcher | null = null;\nlet InvalidNestedHooksDispatcherOnUpdateInDEV: Dispatcher | null = null;\nlet InvalidNestedHooksDispatcherOnRerenderInDEV: Dispatcher | null = null;\n\nif (__DEV__) {\n  const warnInvalidContextAccess = () => {\n    console.error(\n      'Context can only be read while React is rendering. ' +\n        'In classes, you can read it in the render method or getDerivedStateFromProps. ' +\n        'In function components, you can read it directly in the function body, but not ' +\n        'inside Hooks like useReducer() or useMemo().',\n    );\n  };\n\n  const warnInvalidHookAccess = () => {\n    console.error(\n      'Do not call Hooks inside useEffect(...), useMemo(...), or other built-in Hooks. ' +\n        'You can only call Hooks at the top level of your React function. ' +\n        'For more information, see ' +\n        'https://reactjs.org/link/rules-of-hooks',\n    );\n  };\n\n  HooksDispatcherOnMountInDEV = {\n    readContext<T>(\n      context: ReactContext<T>,\n      observedBits: void | number | boolean,\n    ): T {\n      return readContext(context, observedBits);\n    },\n    useCallback<T>(callback: T, deps: Array<mixed> | void | null): T {\n      currentHookNameInDev = 'useCallback';\n      mountHookTypesDev();\n      checkDepsAreArrayDev(deps);\n      return mountCallback(callback, deps);\n    },\n    useContext<T>(\n      context: ReactContext<T>,\n      observedBits: void | number | boolean,\n    ): T {\n      currentHookNameInDev = 'useContext';\n      mountHookTypesDev();\n      return readContext(context, observedBits);\n    },\n    useEffect(\n      create: () => (() => void) | void,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useEffect';\n      mountHookTypesDev();\n      checkDepsAreArrayDev(deps);\n      return mountEffect(create, deps);\n    },\n    useImperativeHandle<T>(\n      ref: {|current: T | null|} | ((inst: T | null) => mixed) | null | void,\n      create: () => T,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useImperativeHandle';\n      mountHookTypesDev();\n      checkDepsAreArrayDev(deps);\n      return mountImperativeHandle(ref, create, deps);\n    },\n    useLayoutEffect(\n      create: () => (() => void) | void,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useLayoutEffect';\n      mountHookTypesDev();\n      checkDepsAreArrayDev(deps);\n      return mountLayoutEffect(create, deps);\n    },\n    useMemo<T>(create: () => T, deps: Array<mixed> | void | null): T {\n      currentHookNameInDev = 'useMemo';\n      mountHookTypesDev();\n      checkDepsAreArrayDev(deps);\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnMountInDEV;\n      try {\n        return mountMemo(create, deps);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useReducer<S, I, A>(\n      reducer: (S, A) => S,\n      initialArg: I,\n      init?: I => S,\n    ): [S, Dispatch<A>] {\n      currentHookNameInDev = 'useReducer';\n      mountHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnMountInDEV;\n      try {\n        return mountReducer(reducer, initialArg, init);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useRef<T>(initialValue: T): {|current: T|} {\n      currentHookNameInDev = 'useRef';\n      mountHookTypesDev();\n      return mountRef(initialValue);\n    },\n    useState<S>(\n      initialState: (() => S) | S,\n    ): [S, Dispatch<BasicStateAction<S>>] {\n      currentHookNameInDev = 'useState';\n      mountHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnMountInDEV;\n      try {\n        return mountState(initialState);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useDebugValue<T>(value: T, formatterFn: ?(value: T) => mixed): void {\n      currentHookNameInDev = 'useDebugValue';\n      mountHookTypesDev();\n      return mountDebugValue(value, formatterFn);\n    },\n    useDeferredValue<T>(value: T): T {\n      currentHookNameInDev = 'useDeferredValue';\n      mountHookTypesDev();\n      return mountDeferredValue(value);\n    },\n    useTransition(): [(() => void) => void, boolean] {\n      currentHookNameInDev = 'useTransition';\n      mountHookTypesDev();\n      return mountTransition();\n    },\n    useMutableSource<Source, Snapshot>(\n      source: MutableSource<Source>,\n      getSnapshot: MutableSourceGetSnapshotFn<Source, Snapshot>,\n      subscribe: MutableSourceSubscribeFn<Source, Snapshot>,\n    ): Snapshot {\n      currentHookNameInDev = 'useMutableSource';\n      mountHookTypesDev();\n      return mountMutableSource(source, getSnapshot, subscribe);\n    },\n    useOpaqueIdentifier(): OpaqueIDType | void {\n      currentHookNameInDev = 'useOpaqueIdentifier';\n      mountHookTypesDev();\n      return mountOpaqueIdentifier();\n    },\n\n    unstable_isNewReconciler: enableNewReconciler,\n  };\n\n  HooksDispatcherOnMountWithHookTypesInDEV = {\n    readContext<T>(\n      context: ReactContext<T>,\n      observedBits: void | number | boolean,\n    ): T {\n      return readContext(context, observedBits);\n    },\n    useCallback<T>(callback: T, deps: Array<mixed> | void | null): T {\n      currentHookNameInDev = 'useCallback';\n      updateHookTypesDev();\n      return mountCallback(callback, deps);\n    },\n    useContext<T>(\n      context: ReactContext<T>,\n      observedBits: void | number | boolean,\n    ): T {\n      currentHookNameInDev = 'useContext';\n      updateHookTypesDev();\n      return readContext(context, observedBits);\n    },\n    useEffect(\n      create: () => (() => void) | void,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useEffect';\n      updateHookTypesDev();\n      return mountEffect(create, deps);\n    },\n    useImperativeHandle<T>(\n      ref: {|current: T | null|} | ((inst: T | null) => mixed) | null | void,\n      create: () => T,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useImperativeHandle';\n      updateHookTypesDev();\n      return mountImperativeHandle(ref, create, deps);\n    },\n    useLayoutEffect(\n      create: () => (() => void) | void,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useLayoutEffect';\n      updateHookTypesDev();\n      return mountLayoutEffect(create, deps);\n    },\n    useMemo<T>(create: () => T, deps: Array<mixed> | void | null): T {\n      currentHookNameInDev = 'useMemo';\n      updateHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnMountInDEV;\n      try {\n        return mountMemo(create, deps);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useReducer<S, I, A>(\n      reducer: (S, A) => S,\n      initialArg: I,\n      init?: I => S,\n    ): [S, Dispatch<A>] {\n      currentHookNameInDev = 'useReducer';\n      updateHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnMountInDEV;\n      try {\n        return mountReducer(reducer, initialArg, init);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useRef<T>(initialValue: T): {|current: T|} {\n      currentHookNameInDev = 'useRef';\n      updateHookTypesDev();\n      return mountRef(initialValue);\n    },\n    useState<S>(\n      initialState: (() => S) | S,\n    ): [S, Dispatch<BasicStateAction<S>>] {\n      currentHookNameInDev = 'useState';\n      updateHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnMountInDEV;\n      try {\n        return mountState(initialState);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useDebugValue<T>(value: T, formatterFn: ?(value: T) => mixed): void {\n      currentHookNameInDev = 'useDebugValue';\n      updateHookTypesDev();\n      return mountDebugValue(value, formatterFn);\n    },\n    useDeferredValue<T>(value: T): T {\n      currentHookNameInDev = 'useDeferredValue';\n      updateHookTypesDev();\n      return mountDeferredValue(value);\n    },\n    useTransition(): [(() => void) => void, boolean] {\n      currentHookNameInDev = 'useTransition';\n      updateHookTypesDev();\n      return mountTransition();\n    },\n    useMutableSource<Source, Snapshot>(\n      source: MutableSource<Source>,\n      getSnapshot: MutableSourceGetSnapshotFn<Source, Snapshot>,\n      subscribe: MutableSourceSubscribeFn<Source, Snapshot>,\n    ): Snapshot {\n      currentHookNameInDev = 'useMutableSource';\n      updateHookTypesDev();\n      return mountMutableSource(source, getSnapshot, subscribe);\n    },\n    useOpaqueIdentifier(): OpaqueIDType | void {\n      currentHookNameInDev = 'useOpaqueIdentifier';\n      updateHookTypesDev();\n      return mountOpaqueIdentifier();\n    },\n\n    unstable_isNewReconciler: enableNewReconciler,\n  };\n\n  HooksDispatcherOnUpdateInDEV = {\n    readContext<T>(\n      context: ReactContext<T>,\n      observedBits: void | number | boolean,\n    ): T {\n      return readContext(context, observedBits);\n    },\n    useCallback<T>(callback: T, deps: Array<mixed> | void | null): T {\n      currentHookNameInDev = 'useCallback';\n      updateHookTypesDev();\n      return updateCallback(callback, deps);\n    },\n    useContext<T>(\n      context: ReactContext<T>,\n      observedBits: void | number | boolean,\n    ): T {\n      currentHookNameInDev = 'useContext';\n      updateHookTypesDev();\n      return readContext(context, observedBits);\n    },\n    useEffect(\n      create: () => (() => void) | void,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useEffect';\n      updateHookTypesDev();\n      return updateEffect(create, deps);\n    },\n    useImperativeHandle<T>(\n      ref: {|current: T | null|} | ((inst: T | null) => mixed) | null | void,\n      create: () => T,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useImperativeHandle';\n      updateHookTypesDev();\n      return updateImperativeHandle(ref, create, deps);\n    },\n    useLayoutEffect(\n      create: () => (() => void) | void,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useLayoutEffect';\n      updateHookTypesDev();\n      return updateLayoutEffect(create, deps);\n    },\n    useMemo<T>(create: () => T, deps: Array<mixed> | void | null): T {\n      currentHookNameInDev = 'useMemo';\n      updateHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n      try {\n        return updateMemo(create, deps);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useReducer<S, I, A>(\n      reducer: (S, A) => S,\n      initialArg: I,\n      init?: I => S,\n    ): [S, Dispatch<A>] {\n      currentHookNameInDev = 'useReducer';\n      updateHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n      try {\n        return updateReducer(reducer, initialArg, init);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useRef<T>(initialValue: T): {|current: T|} {\n      currentHookNameInDev = 'useRef';\n      updateHookTypesDev();\n      return updateRef(initialValue);\n    },\n    useState<S>(\n      initialState: (() => S) | S,\n    ): [S, Dispatch<BasicStateAction<S>>] {\n      currentHookNameInDev = 'useState';\n      updateHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n      try {\n        return updateState(initialState);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useDebugValue<T>(value: T, formatterFn: ?(value: T) => mixed): void {\n      currentHookNameInDev = 'useDebugValue';\n      updateHookTypesDev();\n      return updateDebugValue(value, formatterFn);\n    },\n    useDeferredValue<T>(value: T): T {\n      currentHookNameInDev = 'useDeferredValue';\n      updateHookTypesDev();\n      return updateDeferredValue(value);\n    },\n    useTransition(): [(() => void) => void, boolean] {\n      currentHookNameInDev = 'useTransition';\n      updateHookTypesDev();\n      return updateTransition();\n    },\n    useMutableSource<Source, Snapshot>(\n      source: MutableSource<Source>,\n      getSnapshot: MutableSourceGetSnapshotFn<Source, Snapshot>,\n      subscribe: MutableSourceSubscribeFn<Source, Snapshot>,\n    ): Snapshot {\n      currentHookNameInDev = 'useMutableSource';\n      updateHookTypesDev();\n      return updateMutableSource(source, getSnapshot, subscribe);\n    },\n    useOpaqueIdentifier(): OpaqueIDType | void {\n      currentHookNameInDev = 'useOpaqueIdentifier';\n      updateHookTypesDev();\n      return updateOpaqueIdentifier();\n    },\n\n    unstable_isNewReconciler: enableNewReconciler,\n  };\n\n  HooksDispatcherOnRerenderInDEV = {\n    readContext<T>(\n      context: ReactContext<T>,\n      observedBits: void | number | boolean,\n    ): T {\n      return readContext(context, observedBits);\n    },\n\n    useCallback<T>(callback: T, deps: Array<mixed> | void | null): T {\n      currentHookNameInDev = 'useCallback';\n      updateHookTypesDev();\n      return updateCallback(callback, deps);\n    },\n    useContext<T>(\n      context: ReactContext<T>,\n      observedBits: void | number | boolean,\n    ): T {\n      currentHookNameInDev = 'useContext';\n      updateHookTypesDev();\n      return readContext(context, observedBits);\n    },\n    useEffect(\n      create: () => (() => void) | void,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useEffect';\n      updateHookTypesDev();\n      return updateEffect(create, deps);\n    },\n    useImperativeHandle<T>(\n      ref: {|current: T | null|} | ((inst: T | null) => mixed) | null | void,\n      create: () => T,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useImperativeHandle';\n      updateHookTypesDev();\n      return updateImperativeHandle(ref, create, deps);\n    },\n    useLayoutEffect(\n      create: () => (() => void) | void,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useLayoutEffect';\n      updateHookTypesDev();\n      return updateLayoutEffect(create, deps);\n    },\n    useMemo<T>(create: () => T, deps: Array<mixed> | void | null): T {\n      currentHookNameInDev = 'useMemo';\n      updateHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnRerenderInDEV;\n      try {\n        return updateMemo(create, deps);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useReducer<S, I, A>(\n      reducer: (S, A) => S,\n      initialArg: I,\n      init?: I => S,\n    ): [S, Dispatch<A>] {\n      currentHookNameInDev = 'useReducer';\n      updateHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnRerenderInDEV;\n      try {\n        return rerenderReducer(reducer, initialArg, init);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useRef<T>(initialValue: T): {|current: T|} {\n      currentHookNameInDev = 'useRef';\n      updateHookTypesDev();\n      return updateRef(initialValue);\n    },\n    useState<S>(\n      initialState: (() => S) | S,\n    ): [S, Dispatch<BasicStateAction<S>>] {\n      currentHookNameInDev = 'useState';\n      updateHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnRerenderInDEV;\n      try {\n        return rerenderState(initialState);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useDebugValue<T>(value: T, formatterFn: ?(value: T) => mixed): void {\n      currentHookNameInDev = 'useDebugValue';\n      updateHookTypesDev();\n      return updateDebugValue(value, formatterFn);\n    },\n    useDeferredValue<T>(value: T): T {\n      currentHookNameInDev = 'useDeferredValue';\n      updateHookTypesDev();\n      return rerenderDeferredValue(value);\n    },\n    useTransition(): [(() => void) => void, boolean] {\n      currentHookNameInDev = 'useTransition';\n      updateHookTypesDev();\n      return rerenderTransition();\n    },\n    useMutableSource<Source, Snapshot>(\n      source: MutableSource<Source>,\n      getSnapshot: MutableSourceGetSnapshotFn<Source, Snapshot>,\n      subscribe: MutableSourceSubscribeFn<Source, Snapshot>,\n    ): Snapshot {\n      currentHookNameInDev = 'useMutableSource';\n      updateHookTypesDev();\n      return updateMutableSource(source, getSnapshot, subscribe);\n    },\n    useOpaqueIdentifier(): OpaqueIDType | void {\n      currentHookNameInDev = 'useOpaqueIdentifier';\n      updateHookTypesDev();\n      return rerenderOpaqueIdentifier();\n    },\n\n    unstable_isNewReconciler: enableNewReconciler,\n  };\n\n  InvalidNestedHooksDispatcherOnMountInDEV = {\n    readContext<T>(\n      context: ReactContext<T>,\n      observedBits: void | number | boolean,\n    ): T {\n      warnInvalidContextAccess();\n      return readContext(context, observedBits);\n    },\n    useCallback<T>(callback: T, deps: Array<mixed> | void | null): T {\n      currentHookNameInDev = 'useCallback';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountCallback(callback, deps);\n    },\n    useContext<T>(\n      context: ReactContext<T>,\n      observedBits: void | number | boolean,\n    ): T {\n      currentHookNameInDev = 'useContext';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return readContext(context, observedBits);\n    },\n    useEffect(\n      create: () => (() => void) | void,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useEffect';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountEffect(create, deps);\n    },\n    useImperativeHandle<T>(\n      ref: {|current: T | null|} | ((inst: T | null) => mixed) | null | void,\n      create: () => T,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useImperativeHandle';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountImperativeHandle(ref, create, deps);\n    },\n    useLayoutEffect(\n      create: () => (() => void) | void,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useLayoutEffect';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountLayoutEffect(create, deps);\n    },\n    useMemo<T>(create: () => T, deps: Array<mixed> | void | null): T {\n      currentHookNameInDev = 'useMemo';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnMountInDEV;\n      try {\n        return mountMemo(create, deps);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useReducer<S, I, A>(\n      reducer: (S, A) => S,\n      initialArg: I,\n      init?: I => S,\n    ): [S, Dispatch<A>] {\n      currentHookNameInDev = 'useReducer';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnMountInDEV;\n      try {\n        return mountReducer(reducer, initialArg, init);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useRef<T>(initialValue: T): {|current: T|} {\n      currentHookNameInDev = 'useRef';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountRef(initialValue);\n    },\n    useState<S>(\n      initialState: (() => S) | S,\n    ): [S, Dispatch<BasicStateAction<S>>] {\n      currentHookNameInDev = 'useState';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnMountInDEV;\n      try {\n        return mountState(initialState);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useDebugValue<T>(value: T, formatterFn: ?(value: T) => mixed): void {\n      currentHookNameInDev = 'useDebugValue';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountDebugValue(value, formatterFn);\n    },\n    useDeferredValue<T>(value: T): T {\n      currentHookNameInDev = 'useDeferredValue';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountDeferredValue(value);\n    },\n    useTransition(): [(() => void) => void, boolean] {\n      currentHookNameInDev = 'useTransition';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountTransition();\n    },\n    useMutableSource<Source, Snapshot>(\n      source: MutableSource<Source>,\n      getSnapshot: MutableSourceGetSnapshotFn<Source, Snapshot>,\n      subscribe: MutableSourceSubscribeFn<Source, Snapshot>,\n    ): Snapshot {\n      currentHookNameInDev = 'useMutableSource';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountMutableSource(source, getSnapshot, subscribe);\n    },\n    useOpaqueIdentifier(): OpaqueIDType | void {\n      currentHookNameInDev = 'useOpaqueIdentifier';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountOpaqueIdentifier();\n    },\n\n    unstable_isNewReconciler: enableNewReconciler,\n  };\n\n  InvalidNestedHooksDispatcherOnUpdateInDEV = {\n    readContext<T>(\n      context: ReactContext<T>,\n      observedBits: void | number | boolean,\n    ): T {\n      warnInvalidContextAccess();\n      return readContext(context, observedBits);\n    },\n    useCallback<T>(callback: T, deps: Array<mixed> | void | null): T {\n      currentHookNameInDev = 'useCallback';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateCallback(callback, deps);\n    },\n    useContext<T>(\n      context: ReactContext<T>,\n      observedBits: void | number | boolean,\n    ): T {\n      currentHookNameInDev = 'useContext';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return readContext(context, observedBits);\n    },\n    useEffect(\n      create: () => (() => void) | void,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useEffect';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateEffect(create, deps);\n    },\n    useImperativeHandle<T>(\n      ref: {|current: T | null|} | ((inst: T | null) => mixed) | null | void,\n      create: () => T,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useImperativeHandle';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateImperativeHandle(ref, create, deps);\n    },\n    useLayoutEffect(\n      create: () => (() => void) | void,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useLayoutEffect';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateLayoutEffect(create, deps);\n    },\n    useMemo<T>(create: () => T, deps: Array<mixed> | void | null): T {\n      currentHookNameInDev = 'useMemo';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n      try {\n        return updateMemo(create, deps);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useReducer<S, I, A>(\n      reducer: (S, A) => S,\n      initialArg: I,\n      init?: I => S,\n    ): [S, Dispatch<A>] {\n      currentHookNameInDev = 'useReducer';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n      try {\n        return updateReducer(reducer, initialArg, init);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useRef<T>(initialValue: T): {|current: T|} {\n      currentHookNameInDev = 'useRef';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateRef(initialValue);\n    },\n    useState<S>(\n      initialState: (() => S) | S,\n    ): [S, Dispatch<BasicStateAction<S>>] {\n      currentHookNameInDev = 'useState';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n      try {\n        return updateState(initialState);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useDebugValue<T>(value: T, formatterFn: ?(value: T) => mixed): void {\n      currentHookNameInDev = 'useDebugValue';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateDebugValue(value, formatterFn);\n    },\n    useDeferredValue<T>(value: T): T {\n      currentHookNameInDev = 'useDeferredValue';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateDeferredValue(value);\n    },\n    useTransition(): [(() => void) => void, boolean] {\n      currentHookNameInDev = 'useTransition';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateTransition();\n    },\n    useMutableSource<Source, Snapshot>(\n      source: MutableSource<Source>,\n      getSnapshot: MutableSourceGetSnapshotFn<Source, Snapshot>,\n      subscribe: MutableSourceSubscribeFn<Source, Snapshot>,\n    ): Snapshot {\n      currentHookNameInDev = 'useMutableSource';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateMutableSource(source, getSnapshot, subscribe);\n    },\n    useOpaqueIdentifier(): OpaqueIDType | void {\n      currentHookNameInDev = 'useOpaqueIdentifier';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateOpaqueIdentifier();\n    },\n\n    unstable_isNewReconciler: enableNewReconciler,\n  };\n\n  InvalidNestedHooksDispatcherOnRerenderInDEV = {\n    readContext<T>(\n      context: ReactContext<T>,\n      observedBits: void | number | boolean,\n    ): T {\n      warnInvalidContextAccess();\n      return readContext(context, observedBits);\n    },\n\n    useCallback<T>(callback: T, deps: Array<mixed> | void | null): T {\n      currentHookNameInDev = 'useCallback';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateCallback(callback, deps);\n    },\n    useContext<T>(\n      context: ReactContext<T>,\n      observedBits: void | number | boolean,\n    ): T {\n      currentHookNameInDev = 'useContext';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return readContext(context, observedBits);\n    },\n    useEffect(\n      create: () => (() => void) | void,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useEffect';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateEffect(create, deps);\n    },\n    useImperativeHandle<T>(\n      ref: {|current: T | null|} | ((inst: T | null) => mixed) | null | void,\n      create: () => T,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useImperativeHandle';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateImperativeHandle(ref, create, deps);\n    },\n    useLayoutEffect(\n      create: () => (() => void) | void,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useLayoutEffect';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateLayoutEffect(create, deps);\n    },\n    useMemo<T>(create: () => T, deps: Array<mixed> | void | null): T {\n      currentHookNameInDev = 'useMemo';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n      try {\n        return updateMemo(create, deps);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useReducer<S, I, A>(\n      reducer: (S, A) => S,\n      initialArg: I,\n      init?: I => S,\n    ): [S, Dispatch<A>] {\n      currentHookNameInDev = 'useReducer';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n      try {\n        return rerenderReducer(reducer, initialArg, init);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useRef<T>(initialValue: T): {|current: T|} {\n      currentHookNameInDev = 'useRef';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateRef(initialValue);\n    },\n    useState<S>(\n      initialState: (() => S) | S,\n    ): [S, Dispatch<BasicStateAction<S>>] {\n      currentHookNameInDev = 'useState';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n      try {\n        return rerenderState(initialState);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useDebugValue<T>(value: T, formatterFn: ?(value: T) => mixed): void {\n      currentHookNameInDev = 'useDebugValue';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateDebugValue(value, formatterFn);\n    },\n    useDeferredValue<T>(value: T): T {\n      currentHookNameInDev = 'useDeferredValue';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return rerenderDeferredValue(value);\n    },\n    useTransition(): [(() => void) => void, boolean] {\n      currentHookNameInDev = 'useTransition';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return rerenderTransition();\n    },\n    useMutableSource<Source, Snapshot>(\n      source: MutableSource<Source>,\n      getSnapshot: MutableSourceGetSnapshotFn<Source, Snapshot>,\n      subscribe: MutableSourceSubscribeFn<Source, Snapshot>,\n    ): Snapshot {\n      currentHookNameInDev = 'useMutableSource';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateMutableSource(source, getSnapshot, subscribe);\n    },\n    useOpaqueIdentifier(): OpaqueIDType | void {\n      currentHookNameInDev = 'useOpaqueIdentifier';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return rerenderOpaqueIdentifier();\n    },\n\n    unstable_isNewReconciler: enableNewReconciler,\n  };\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactInternalTypes';\n\nimport {\n  enableProfilerTimer,\n  enableProfilerCommitHooks,\n} from 'shared/ReactFeatureFlags';\nimport {Profiler} from './ReactWorkTags';\n\n// Intentionally not named imports because Rollup would use dynamic dispatch for\n// CommonJS interop named imports.\nimport * as Scheduler from 'scheduler';\n\nconst {unstable_now: now} = Scheduler;\n\nexport type ProfilerTimer = {\n  getCommitTime(): number,\n  recordCommitTime(): void,\n  startProfilerTimer(fiber: Fiber): void,\n  stopProfilerTimerIfRunning(fiber: Fiber): void,\n  stopProfilerTimerIfRunningAndRecordDelta(fiber: Fiber): void,\n  ...\n};\n\nlet commitTime: number = 0;\nlet layoutEffectStartTime: number = -1;\nlet profilerStartTime: number = -1;\nlet passiveEffectStartTime: number = -1;\n\nfunction getCommitTime(): number {\n  return commitTime;\n}\n\nfunction recordCommitTime(): void {\n  if (!enableProfilerTimer) {\n    return;\n  }\n  commitTime = now();\n}\n\nfunction startProfilerTimer(fiber: Fiber): void {\n  if (!enableProfilerTimer) {\n    return;\n  }\n\n  profilerStartTime = now();\n\n  if (((fiber.actualStartTime: any): number) < 0) {\n    fiber.actualStartTime = now();\n  }\n}\n\nfunction stopProfilerTimerIfRunning(fiber: Fiber): void {\n  if (!enableProfilerTimer) {\n    return;\n  }\n  profilerStartTime = -1;\n}\n\nfunction stopProfilerTimerIfRunningAndRecordDelta(\n  fiber: Fiber,\n  overrideBaseTime: boolean,\n): void {\n  if (!enableProfilerTimer) {\n    return;\n  }\n\n  if (profilerStartTime >= 0) {\n    const elapsedTime = now() - profilerStartTime;\n    fiber.actualDuration += elapsedTime;\n    if (overrideBaseTime) {\n      fiber.selfBaseDuration = elapsedTime;\n    }\n    profilerStartTime = -1;\n  }\n}\n\nfunction recordLayoutEffectDuration(fiber: Fiber): void {\n  if (!enableProfilerTimer || !enableProfilerCommitHooks) {\n    return;\n  }\n\n  if (layoutEffectStartTime >= 0) {\n    const elapsedTime = now() - layoutEffectStartTime;\n\n    layoutEffectStartTime = -1;\n\n    // Store duration on the next nearest Profiler ancestor.\n    let parentFiber = fiber.return;\n    while (parentFiber !== null) {\n      if (parentFiber.tag === Profiler) {\n        const parentStateNode = parentFiber.stateNode;\n        parentStateNode.effectDuration += elapsedTime;\n        break;\n      }\n      parentFiber = parentFiber.return;\n    }\n  }\n}\n\nfunction recordPassiveEffectDuration(fiber: Fiber): void {\n  if (!enableProfilerTimer || !enableProfilerCommitHooks) {\n    return;\n  }\n\n  if (passiveEffectStartTime >= 0) {\n    const elapsedTime = now() - passiveEffectStartTime;\n\n    passiveEffectStartTime = -1;\n\n    // Store duration on the next nearest Profiler ancestor.\n    let parentFiber = fiber.return;\n    while (parentFiber !== null) {\n      if (parentFiber.tag === Profiler) {\n        const parentStateNode = parentFiber.stateNode;\n        if (parentStateNode !== null) {\n          // Detached fibers have their state node cleared out.\n          // In this case, the return pointer is also cleared out,\n          // so we won't be able to report the time spent in this Profiler's subtree.\n          parentStateNode.passiveEffectDuration += elapsedTime;\n        }\n        break;\n      }\n      parentFiber = parentFiber.return;\n    }\n  }\n}\n\nfunction startLayoutEffectTimer(): void {\n  if (!enableProfilerTimer || !enableProfilerCommitHooks) {\n    return;\n  }\n  layoutEffectStartTime = now();\n}\n\nfunction startPassiveEffectTimer(): void {\n  if (!enableProfilerTimer || !enableProfilerCommitHooks) {\n    return;\n  }\n  passiveEffectStartTime = now();\n}\n\nfunction transferActualDuration(fiber: Fiber): void {\n  // Transfer time spent rendering these children so we don't lose it\n  // after we rerender. This is used as a helper in special cases\n  // where we should count the work of multiple passes.\n  let child = fiber.child;\n  while (child) {\n    fiber.actualDuration += child.actualDuration;\n    child = child.sibling;\n  }\n}\n\nexport {\n  getCommitTime,\n  recordCommitTime,\n  recordLayoutEffectDuration,\n  recordPassiveEffectDuration,\n  startLayoutEffectTimer,\n  startPassiveEffectTimer,\n  startProfilerTimer,\n  stopProfilerTimerIfRunning,\n  stopProfilerTimerIfRunningAndRecordDelta,\n  transferActualDuration,\n};\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {ReactProviderType, ReactContext} from 'shared/ReactTypes';\nimport type {BlockComponent} from 'react/src/ReactBlock';\nimport type {LazyComponent as LazyComponentType} from 'react/src/ReactLazy';\nimport type {Fiber} from './ReactInternalTypes';\nimport type {FiberRoot} from './ReactInternalTypes';\nimport type {Lanes, Lane} from './ReactFiberLane';\nimport type {MutableSource} from 'shared/ReactTypes';\nimport type {\n  SuspenseState,\n  SuspenseListRenderState,\n  SuspenseListTailMode,\n} from './ReactFiberSuspenseComponent.old';\nimport type {SuspenseContext} from './ReactFiberSuspenseContext.old';\nimport type {\n  OffscreenProps,\n  OffscreenState,\n} from './ReactFiberOffscreenComponent';\n\nimport checkPropTypes from 'shared/checkPropTypes';\n\nimport {\n  IndeterminateComponent,\n  FunctionComponent,\n  ClassComponent,\n  HostRoot,\n  HostComponent,\n  HostText,\n  HostPortal,\n  ForwardRef,\n  Fragment,\n  Mode,\n  ContextProvider,\n  ContextConsumer,\n  Profiler,\n  SuspenseComponent,\n  SuspenseListComponent,\n  MemoComponent,\n  SimpleMemoComponent,\n  LazyComponent,\n  IncompleteClassComponent,\n  FundamentalComponent,\n  ScopeComponent,\n  Block,\n  OffscreenComponent,\n  LegacyHiddenComponent,\n} from './ReactWorkTags';\nimport {\n  NoFlags,\n  PerformedWork,\n  Placement,\n  Hydrating,\n  ContentReset,\n  DidCapture,\n  Update,\n  Ref,\n  Deletion,\n  ForceUpdateForLegacySuspense,\n} from './ReactFiberFlags';\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\nimport {\n  debugRenderPhaseSideEffectsForStrictMode,\n  disableLegacyContext,\n  disableModulePatternComponents,\n  enableProfilerTimer,\n  enableSchedulerTracing,\n  enableSuspenseServerRenderer,\n  enableFundamentalAPI,\n  warnAboutDefaultPropsOnFunctionComponents,\n  enableScopeAPI,\n  enableBlocksAPI,\n} from 'shared/ReactFeatureFlags';\nimport invariant from 'shared/invariant';\nimport shallowEqual from 'shared/shallowEqual';\nimport getComponentName from 'shared/getComponentName';\nimport ReactStrictModeWarnings from './ReactStrictModeWarnings.old';\nimport {REACT_LAZY_TYPE, getIteratorFn} from 'shared/ReactSymbols';\nimport {\n  getCurrentFiberOwnerNameInDevOrNull,\n  setIsRendering,\n} from './ReactCurrentFiber';\nimport {\n  resolveFunctionForHotReloading,\n  resolveForwardRefForHotReloading,\n  resolveClassForHotReloading,\n} from './ReactFiberHotReloading.old';\n\nimport {\n  mountChildFibers,\n  reconcileChildFibers,\n  cloneChildFibers,\n} from './ReactChildFiber.old';\nimport {\n  processUpdateQueue,\n  cloneUpdateQueue,\n  initializeUpdateQueue,\n} from './ReactUpdateQueue.old';\nimport {\n  NoLane,\n  NoLanes,\n  SyncLane,\n  OffscreenLane,\n  DefaultHydrationLane,\n  SomeRetryLane,\n  NoTimestamp,\n  includesSomeLane,\n  laneToLanes,\n  removeLanes,\n  mergeLanes,\n  getBumpedLaneForHydration,\n} from './ReactFiberLane';\nimport {\n  ConcurrentMode,\n  NoMode,\n  ProfileMode,\n  StrictMode,\n  BlockingMode,\n} from './ReactTypeOfMode';\nimport {\n  shouldSetTextContent,\n  isSuspenseInstancePending,\n  isSuspenseInstanceFallback,\n  registerSuspenseInstanceRetry,\n  supportsHydration,\n} from './ReactFiberHostConfig';\nimport type {SuspenseInstance} from './ReactFiberHostConfig';\nimport {shouldSuspend} from './ReactFiberReconciler';\nimport {pushHostContext, pushHostContainer} from './ReactFiberHostContext.old';\nimport {\n  suspenseStackCursor,\n  pushSuspenseContext,\n  InvisibleParentSuspenseContext,\n  ForceSuspenseFallback,\n  hasSuspenseContext,\n  setDefaultShallowSuspenseContext,\n  addSubtreeSuspenseContext,\n  setShallowSuspenseContext,\n} from './ReactFiberSuspenseContext.old';\nimport {findFirstSuspended} from './ReactFiberSuspenseComponent.old';\nimport {\n  pushProvider,\n  propagateContextChange,\n  readContext,\n  prepareToReadContext,\n  calculateChangedBits,\n  scheduleWorkOnParentPath,\n} from './ReactFiberNewContext.old';\nimport {renderWithHooks, bailoutHooks} from './ReactFiberHooks.old';\nimport {stopProfilerTimerIfRunning} from './ReactProfilerTimer.old';\nimport {\n  getMaskedContext,\n  getUnmaskedContext,\n  hasContextChanged as hasLegacyContextChanged,\n  pushContextProvider as pushLegacyContextProvider,\n  isContextProvider as isLegacyContextProvider,\n  pushTopLevelContextObject,\n  invalidateContextProvider,\n} from './ReactFiberContext.old';\nimport {\n  enterHydrationState,\n  reenterHydrationStateFromDehydratedSuspenseInstance,\n  resetHydrationState,\n  tryToClaimNextHydratableInstance,\n  warnIfHydrating,\n} from './ReactFiberHydrationContext.old';\nimport {\n  adoptClassInstance,\n  applyDerivedStateFromProps,\n  constructClassInstance,\n  mountClassInstance,\n  resumeMountClassInstance,\n  updateClassInstance,\n} from './ReactFiberClassComponent.old';\nimport {resolveDefaultProps} from './ReactFiberLazyComponent.old';\nimport {\n  resolveLazyComponentTag,\n  createFiberFromTypeAndProps,\n  createFiberFromFragment,\n  createFiberFromOffscreen,\n  createWorkInProgress,\n  isSimpleFunctionComponent,\n} from './ReactFiber.old';\nimport {\n  markSpawnedWork,\n  retryDehydratedSuspenseBoundary,\n  scheduleUpdateOnFiber,\n  renderDidSuspendDelayIfPossible,\n  markSkippedUpdateLanes,\n  getWorkInProgressRoot,\n  pushRenderLanes,\n  getExecutionContext,\n  RetryAfterError,\n  NoContext,\n} from './ReactFiberWorkLoop.old';\nimport {unstable_wrap as Schedule_tracing_wrap} from 'scheduler/tracing';\nimport {setWorkInProgressVersion} from './ReactMutableSource.old';\n\nimport {disableLogs, reenableLogs} from 'shared/ConsolePatchingDev';\n\nconst ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\n\nlet didReceiveUpdate: boolean = false;\n\nlet didWarnAboutBadClass;\nlet didWarnAboutModulePatternComponent;\nlet didWarnAboutContextTypeOnFunctionComponent;\nlet didWarnAboutGetDerivedStateOnFunctionComponent;\nlet didWarnAboutFunctionRefs;\nexport let didWarnAboutReassigningProps;\nlet didWarnAboutRevealOrder;\nlet didWarnAboutTailOptions;\nlet didWarnAboutDefaultPropsOnFunctionComponent;\n\nif (__DEV__) {\n  didWarnAboutBadClass = {};\n  didWarnAboutModulePatternComponent = {};\n  didWarnAboutContextTypeOnFunctionComponent = {};\n  didWarnAboutGetDerivedStateOnFunctionComponent = {};\n  didWarnAboutFunctionRefs = {};\n  didWarnAboutReassigningProps = false;\n  didWarnAboutRevealOrder = {};\n  didWarnAboutTailOptions = {};\n  didWarnAboutDefaultPropsOnFunctionComponent = {};\n}\n\nexport function reconcileChildren(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  nextChildren: any,\n  renderLanes: Lanes,\n) {\n  if (current === null) {\n    // If this is a fresh new component that hasn't been rendered yet, we\n    // won't update its child set by applying minimal side-effects. Instead,\n    // we will add them all to the child before it gets rendered. That means\n    // we can optimize this reconciliation pass by not tracking side-effects.\n    workInProgress.child = mountChildFibers(\n      workInProgress,\n      null,\n      nextChildren,\n      renderLanes,\n    );\n  } else {\n    // If the current child is the same as the work in progress, it means that\n    // we haven't yet started any work on these children. Therefore, we use\n    // the clone algorithm to create a copy of all the current children.\n\n    // If we had any progressed work already, that is invalid at this point so\n    // let's throw it out.\n    workInProgress.child = reconcileChildFibers(\n      workInProgress,\n      current.child,\n      nextChildren,\n      renderLanes,\n    );\n  }\n}\n\nfunction forceUnmountCurrentAndReconcile(\n  current: Fiber,\n  workInProgress: Fiber,\n  nextChildren: any,\n  renderLanes: Lanes,\n) {\n  // This function is fork of reconcileChildren. It's used in cases where we\n  // want to reconcile without matching against the existing set. This has the\n  // effect of all current children being unmounted; even if the type and key\n  // are the same, the old child is unmounted and a new child is created.\n  //\n  // To do this, we're going to go through the reconcile algorithm twice. In\n  // the first pass, we schedule a deletion for all the current children by\n  // passing null.\n  workInProgress.child = reconcileChildFibers(\n    workInProgress,\n    current.child,\n    null,\n    renderLanes,\n  );\n  // In the second pass, we mount the new children. The trick here is that we\n  // pass null in place of where we usually pass the current child set. This has\n  // the effect of remounting all children regardless of whether their\n  // identities match.\n  workInProgress.child = reconcileChildFibers(\n    workInProgress,\n    null,\n    nextChildren,\n    renderLanes,\n  );\n}\n\nfunction updateForwardRef(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  Component: any,\n  nextProps: any,\n  renderLanes: Lanes,\n) {\n  // TODO: current can be non-null here even if the component\n  // hasn't yet mounted. This happens after the first render suspends.\n  // We'll need to figure out if this is fine or can cause issues.\n\n  if (__DEV__) {\n    if (workInProgress.type !== workInProgress.elementType) {\n      // Lazy component props can't be validated in createElement\n      // because they're only guaranteed to be resolved here.\n      const innerPropTypes = Component.propTypes;\n      if (innerPropTypes) {\n        checkPropTypes(\n          innerPropTypes,\n          nextProps, // Resolved props\n          'prop',\n          getComponentName(Component),\n        );\n      }\n    }\n  }\n\n  const render = Component.render;\n  const ref = workInProgress.ref;\n\n  // The rest is a fork of updateFunctionComponent\n  let nextChildren;\n  prepareToReadContext(workInProgress, renderLanes);\n  if (__DEV__) {\n    ReactCurrentOwner.current = workInProgress;\n    setIsRendering(true);\n    nextChildren = renderWithHooks(\n      current,\n      workInProgress,\n      render,\n      nextProps,\n      ref,\n      renderLanes,\n    );\n    if (\n      debugRenderPhaseSideEffectsForStrictMode &&\n      workInProgress.mode & StrictMode\n    ) {\n      disableLogs();\n      try {\n        nextChildren = renderWithHooks(\n          current,\n          workInProgress,\n          render,\n          nextProps,\n          ref,\n          renderLanes,\n        );\n      } finally {\n        reenableLogs();\n      }\n    }\n    setIsRendering(false);\n  } else {\n    nextChildren = renderWithHooks(\n      current,\n      workInProgress,\n      render,\n      nextProps,\n      ref,\n      renderLanes,\n    );\n  }\n\n  if (current !== null && !didReceiveUpdate) {\n    bailoutHooks(current, workInProgress, renderLanes);\n    return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n  }\n\n  // React DevTools reads this flag.\n  workInProgress.flags |= PerformedWork;\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  return workInProgress.child;\n}\n\nfunction updateMemoComponent(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  Component: any,\n  nextProps: any,\n  updateLanes: Lanes,\n  renderLanes: Lanes,\n): null | Fiber {\n  if (current === null) {\n    const type = Component.type;\n    if (\n      isSimpleFunctionComponent(type) &&\n      Component.compare === null &&\n      // SimpleMemoComponent codepath doesn't resolve outer props either.\n      Component.defaultProps === undefined\n    ) {\n      let resolvedType = type;\n      if (__DEV__) {\n        resolvedType = resolveFunctionForHotReloading(type);\n      }\n      // If this is a plain function component without default props,\n      // and with only the default shallow comparison, we upgrade it\n      // to a SimpleMemoComponent to allow fast path updates.\n      workInProgress.tag = SimpleMemoComponent;\n      workInProgress.type = resolvedType;\n      if (__DEV__) {\n        validateFunctionComponentInDev(workInProgress, type);\n      }\n      return updateSimpleMemoComponent(\n        current,\n        workInProgress,\n        resolvedType,\n        nextProps,\n        updateLanes,\n        renderLanes,\n      );\n    }\n    if (__DEV__) {\n      const innerPropTypes = type.propTypes;\n      if (innerPropTypes) {\n        // Inner memo component props aren't currently validated in createElement.\n        // We could move it there, but we'd still need this for lazy code path.\n        checkPropTypes(\n          innerPropTypes,\n          nextProps, // Resolved props\n          'prop',\n          getComponentName(type),\n        );\n      }\n    }\n    const child = createFiberFromTypeAndProps(\n      Component.type,\n      null,\n      nextProps,\n      workInProgress,\n      workInProgress.mode,\n      renderLanes,\n    );\n    child.ref = workInProgress.ref;\n    child.return = workInProgress;\n    workInProgress.child = child;\n    return child;\n  }\n  if (__DEV__) {\n    const type = Component.type;\n    const innerPropTypes = type.propTypes;\n    if (innerPropTypes) {\n      // Inner memo component props aren't currently validated in createElement.\n      // We could move it there, but we'd still need this for lazy code path.\n      checkPropTypes(\n        innerPropTypes,\n        nextProps, // Resolved props\n        'prop',\n        getComponentName(type),\n      );\n    }\n  }\n  const currentChild = ((current.child: any): Fiber); // This is always exactly one child\n  if (!includesSomeLane(updateLanes, renderLanes)) {\n    // This will be the props with resolved defaultProps,\n    // unlike current.memoizedProps which will be the unresolved ones.\n    const prevProps = currentChild.memoizedProps;\n    // Default to shallow comparison\n    let compare = Component.compare;\n    compare = compare !== null ? compare : shallowEqual;\n    if (compare(prevProps, nextProps) && current.ref === workInProgress.ref) {\n      return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n    }\n  }\n  // React DevTools reads this flag.\n  workInProgress.flags |= PerformedWork;\n  const newChild = createWorkInProgress(currentChild, nextProps);\n  newChild.ref = workInProgress.ref;\n  newChild.return = workInProgress;\n  workInProgress.child = newChild;\n  return newChild;\n}\n\nfunction updateSimpleMemoComponent(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  Component: any,\n  nextProps: any,\n  updateLanes: Lanes,\n  renderLanes: Lanes,\n): null | Fiber {\n  // TODO: current can be non-null here even if the component\n  // hasn't yet mounted. This happens when the inner render suspends.\n  // We'll need to figure out if this is fine or can cause issues.\n\n  if (__DEV__) {\n    if (workInProgress.type !== workInProgress.elementType) {\n      // Lazy component props can't be validated in createElement\n      // because they're only guaranteed to be resolved here.\n      let outerMemoType = workInProgress.elementType;\n      if (outerMemoType.$$typeof === REACT_LAZY_TYPE) {\n        // We warn when you define propTypes on lazy()\n        // so let's just skip over it to find memo() outer wrapper.\n        // Inner props for memo are validated later.\n        const lazyComponent: LazyComponentType<any, any> = outerMemoType;\n        const payload = lazyComponent._payload;\n        const init = lazyComponent._init;\n        try {\n          outerMemoType = init(payload);\n        } catch (x) {\n          outerMemoType = null;\n        }\n        // Inner propTypes will be validated in the function component path.\n        const outerPropTypes = outerMemoType && (outerMemoType: any).propTypes;\n        if (outerPropTypes) {\n          checkPropTypes(\n            outerPropTypes,\n            nextProps, // Resolved (SimpleMemoComponent has no defaultProps)\n            'prop',\n            getComponentName(outerMemoType),\n          );\n        }\n      }\n    }\n  }\n  if (current !== null) {\n    const prevProps = current.memoizedProps;\n    if (\n      shallowEqual(prevProps, nextProps) &&\n      current.ref === workInProgress.ref &&\n      // Prevent bailout if the implementation changed due to hot reload.\n      (__DEV__ ? workInProgress.type === current.type : true)\n    ) {\n      didReceiveUpdate = false;\n      if (!includesSomeLane(renderLanes, updateLanes)) {\n        // The pending lanes were cleared at the beginning of beginWork. We're\n        // about to bail out, but there might be other lanes that weren't\n        // included in the current render. Usually, the priority level of the\n        // remaining updates is accumlated during the evaluation of the\n        // component (i.e. when processing the update queue). But since since\n        // we're bailing out early *without* evaluating the component, we need\n        // to account for it here, too. Reset to the value of the current fiber.\n        // NOTE: This only applies to SimpleMemoComponent, not MemoComponent,\n        // because a MemoComponent fiber does not have hooks or an update queue;\n        // rather, it wraps around an inner component, which may or may not\n        // contains hooks.\n        // TODO: Move the reset at in beginWork out of the common path so that\n        // this is no longer necessary.\n        workInProgress.lanes = current.lanes;\n        return bailoutOnAlreadyFinishedWork(\n          current,\n          workInProgress,\n          renderLanes,\n        );\n      } else if ((current.flags & ForceUpdateForLegacySuspense) !== NoFlags) {\n        // This is a special case that only exists for legacy mode.\n        // See https://github.com/facebook/react/pull/19216.\n        didReceiveUpdate = true;\n      }\n    }\n  }\n  return updateFunctionComponent(\n    current,\n    workInProgress,\n    Component,\n    nextProps,\n    renderLanes,\n  );\n}\n\nfunction updateOffscreenComponent(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  renderLanes: Lanes,\n) {\n  const nextProps: OffscreenProps = workInProgress.pendingProps;\n  const nextChildren = nextProps.children;\n\n  const prevState: OffscreenState | null =\n    current !== null ? current.memoizedState : null;\n\n  if (\n    nextProps.mode === 'hidden' ||\n    nextProps.mode === 'unstable-defer-without-hiding'\n  ) {\n    if ((workInProgress.mode & ConcurrentMode) === NoMode) {\n      // In legacy sync mode, don't defer the subtree. Render it now.\n      // TODO: Figure out what we should do in Blocking mode.\n      const nextState: OffscreenState = {\n        baseLanes: NoLanes,\n      };\n      workInProgress.memoizedState = nextState;\n      pushRenderLanes(workInProgress, renderLanes);\n    } else if (!includesSomeLane(renderLanes, (OffscreenLane: Lane))) {\n      let nextBaseLanes;\n      if (prevState !== null) {\n        const prevBaseLanes = prevState.baseLanes;\n        nextBaseLanes = mergeLanes(prevBaseLanes, renderLanes);\n      } else {\n        nextBaseLanes = renderLanes;\n      }\n\n      // Schedule this fiber to re-render at offscreen priority. Then bailout.\n      if (enableSchedulerTracing) {\n        markSpawnedWork((OffscreenLane: Lane));\n      }\n      workInProgress.lanes = workInProgress.childLanes = laneToLanes(\n        OffscreenLane,\n      );\n      const nextState: OffscreenState = {\n        baseLanes: nextBaseLanes,\n      };\n      workInProgress.memoizedState = nextState;\n      // We're about to bail out, but we need to push this to the stack anyway\n      // to avoid a push/pop misalignment.\n      pushRenderLanes(workInProgress, nextBaseLanes);\n      return null;\n    } else {\n      // Rendering at offscreen, so we can clear the base lanes.\n      const nextState: OffscreenState = {\n        baseLanes: NoLanes,\n      };\n      workInProgress.memoizedState = nextState;\n      // Push the lanes that were skipped when we bailed out.\n      const subtreeRenderLanes =\n        prevState !== null ? prevState.baseLanes : renderLanes;\n      pushRenderLanes(workInProgress, subtreeRenderLanes);\n    }\n  } else {\n    let subtreeRenderLanes;\n    if (prevState !== null) {\n      subtreeRenderLanes = mergeLanes(prevState.baseLanes, renderLanes);\n      // Since we're not hidden anymore, reset the state\n      workInProgress.memoizedState = null;\n    } else {\n      // We weren't previously hidden, and we still aren't, so there's nothing\n      // special to do. Need to push to the stack regardless, though, to avoid\n      // a push/pop misalignment.\n      subtreeRenderLanes = renderLanes;\n    }\n    pushRenderLanes(workInProgress, subtreeRenderLanes);\n  }\n\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  return workInProgress.child;\n}\n\n// Note: These happen to have identical begin phases, for now. We shouldn't hold\n// ourselves to this constraint, though. If the behavior diverges, we should\n// fork the function.\nconst updateLegacyHiddenComponent = updateOffscreenComponent;\n\nfunction updateFragment(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  renderLanes: Lanes,\n) {\n  const nextChildren = workInProgress.pendingProps;\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  return workInProgress.child;\n}\n\nfunction updateMode(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  renderLanes: Lanes,\n) {\n  const nextChildren = workInProgress.pendingProps.children;\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  return workInProgress.child;\n}\n\nfunction updateProfiler(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  renderLanes: Lanes,\n) {\n  if (enableProfilerTimer) {\n    workInProgress.flags |= Update;\n\n    // Reset effect durations for the next eventual effect phase.\n    // These are reset during render to allow the DevTools commit hook a chance to read them,\n    const stateNode = workInProgress.stateNode;\n    stateNode.effectDuration = 0;\n    stateNode.passiveEffectDuration = 0;\n  }\n  const nextProps = workInProgress.pendingProps;\n  const nextChildren = nextProps.children;\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  return workInProgress.child;\n}\n\nfunction markRef(current: Fiber | null, workInProgress: Fiber) {\n  const ref = workInProgress.ref;\n  if (\n    (current === null && ref !== null) ||\n    (current !== null && current.ref !== ref)\n  ) {\n    // Schedule a Ref effect\n    workInProgress.flags |= Ref;\n  }\n}\n\nfunction updateFunctionComponent(\n  current,\n  workInProgress,\n  Component,\n  nextProps: any,\n  renderLanes,\n) {\n  if (__DEV__) {\n    if (workInProgress.type !== workInProgress.elementType) {\n      // Lazy component props can't be validated in createElement\n      // because they're only guaranteed to be resolved here.\n      const innerPropTypes = Component.propTypes;\n      if (innerPropTypes) {\n        checkPropTypes(\n          innerPropTypes,\n          nextProps, // Resolved props\n          'prop',\n          getComponentName(Component),\n        );\n      }\n    }\n  }\n\n  let context;\n  if (!disableLegacyContext) {\n    const unmaskedContext = getUnmaskedContext(workInProgress, Component, true);\n    context = getMaskedContext(workInProgress, unmaskedContext);\n  }\n\n  let nextChildren;\n  prepareToReadContext(workInProgress, renderLanes);\n  if (__DEV__) {\n    ReactCurrentOwner.current = workInProgress;\n    setIsRendering(true);\n    nextChildren = renderWithHooks(\n      current,\n      workInProgress,\n      Component,\n      nextProps,\n      context,\n      renderLanes,\n    );\n    if (\n      debugRenderPhaseSideEffectsForStrictMode &&\n      workInProgress.mode & StrictMode\n    ) {\n      disableLogs();\n      try {\n        nextChildren = renderWithHooks(\n          current,\n          workInProgress,\n          Component,\n          nextProps,\n          context,\n          renderLanes,\n        );\n      } finally {\n        reenableLogs();\n      }\n    }\n    setIsRendering(false);\n  } else {\n    nextChildren = renderWithHooks(\n      current,\n      workInProgress,\n      Component,\n      nextProps,\n      context,\n      renderLanes,\n    );\n  }\n\n  if (current !== null && !didReceiveUpdate) {\n    bailoutHooks(current, workInProgress, renderLanes);\n    return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n  }\n\n  // React DevTools reads this flag.\n  workInProgress.flags |= PerformedWork;\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  return workInProgress.child;\n}\n\nfunction updateBlock<Props, Data>(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  block: BlockComponent<Props, Data>,\n  nextProps: any,\n  renderLanes: Lanes,\n) {\n  // TODO: current can be non-null here even if the component\n  // hasn't yet mounted. This happens after the first render suspends.\n  // We'll need to figure out if this is fine or can cause issues.\n\n  const render = block._render;\n  const data = block._data;\n\n  // The rest is a fork of updateFunctionComponent\n  let nextChildren;\n  prepareToReadContext(workInProgress, renderLanes);\n  if (__DEV__) {\n    ReactCurrentOwner.current = workInProgress;\n    setIsRendering(true);\n    nextChildren = renderWithHooks(\n      current,\n      workInProgress,\n      render,\n      nextProps,\n      data,\n      renderLanes,\n    );\n    if (\n      debugRenderPhaseSideEffectsForStrictMode &&\n      workInProgress.mode & StrictMode\n    ) {\n      disableLogs();\n      try {\n        nextChildren = renderWithHooks(\n          current,\n          workInProgress,\n          render,\n          nextProps,\n          data,\n          renderLanes,\n        );\n      } finally {\n        reenableLogs();\n      }\n    }\n    setIsRendering(false);\n  } else {\n    nextChildren = renderWithHooks(\n      current,\n      workInProgress,\n      render,\n      nextProps,\n      data,\n      renderLanes,\n    );\n  }\n\n  if (current !== null && !didReceiveUpdate) {\n    bailoutHooks(current, workInProgress, renderLanes);\n    return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n  }\n\n  // React DevTools reads this flag.\n  workInProgress.flags |= PerformedWork;\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  return workInProgress.child;\n}\n\nfunction updateClassComponent(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  Component: any,\n  nextProps: any,\n  renderLanes: Lanes,\n) {\n  if (__DEV__) {\n    if (workInProgress.type !== workInProgress.elementType) {\n      // Lazy component props can't be validated in createElement\n      // because they're only guaranteed to be resolved here.\n      const innerPropTypes = Component.propTypes;\n      if (innerPropTypes) {\n        checkPropTypes(\n          innerPropTypes,\n          nextProps, // Resolved props\n          'prop',\n          getComponentName(Component),\n        );\n      }\n    }\n  }\n\n  // Push context providers early to prevent context stack mismatches.\n  // During mounting we don't know the child context yet as the instance doesn't exist.\n  // We will invalidate the child context in finishClassComponent() right after rendering.\n  let hasContext;\n  if (isLegacyContextProvider(Component)) {\n    hasContext = true;\n    pushLegacyContextProvider(workInProgress);\n  } else {\n    hasContext = false;\n  }\n  prepareToReadContext(workInProgress, renderLanes);\n\n  const instance = workInProgress.stateNode;\n  let shouldUpdate;\n  if (instance === null) {\n    if (current !== null) {\n      // A class component without an instance only mounts if it suspended\n      // inside a non-concurrent tree, in an inconsistent state. We want to\n      // treat it like a new mount, even though an empty version of it already\n      // committed. Disconnect the alternate pointers.\n      current.alternate = null;\n      workInProgress.alternate = null;\n      // Since this is conceptually a new fiber, schedule a Placement effect\n      workInProgress.flags |= Placement;\n    }\n    // In the initial pass we might need to construct the instance.\n    constructClassInstance(workInProgress, Component, nextProps);\n    mountClassInstance(workInProgress, Component, nextProps, renderLanes);\n    shouldUpdate = true;\n  } else if (current === null) {\n    // In a resume, we'll already have an instance we can reuse.\n    shouldUpdate = resumeMountClassInstance(\n      workInProgress,\n      Component,\n      nextProps,\n      renderLanes,\n    );\n  } else {\n    shouldUpdate = updateClassInstance(\n      current,\n      workInProgress,\n      Component,\n      nextProps,\n      renderLanes,\n    );\n  }\n  const nextUnitOfWork = finishClassComponent(\n    current,\n    workInProgress,\n    Component,\n    shouldUpdate,\n    hasContext,\n    renderLanes,\n  );\n  if (__DEV__) {\n    const inst = workInProgress.stateNode;\n    if (shouldUpdate && inst.props !== nextProps) {\n      if (!didWarnAboutReassigningProps) {\n        console.error(\n          'It looks like %s is reassigning its own `this.props` while rendering. ' +\n            'This is not supported and can lead to confusing bugs.',\n          getComponentName(workInProgress.type) || 'a component',\n        );\n      }\n      didWarnAboutReassigningProps = true;\n    }\n  }\n  return nextUnitOfWork;\n}\n\nfunction finishClassComponent(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  Component: any,\n  shouldUpdate: boolean,\n  hasContext: boolean,\n  renderLanes: Lanes,\n) {\n  // Refs should update even if shouldComponentUpdate returns false\n  markRef(current, workInProgress);\n\n  const didCaptureError = (workInProgress.flags & DidCapture) !== NoFlags;\n\n  if (!shouldUpdate && !didCaptureError) {\n    // Context providers should defer to sCU for rendering\n    if (hasContext) {\n      invalidateContextProvider(workInProgress, Component, false);\n    }\n\n    return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n  }\n\n  const instance = workInProgress.stateNode;\n\n  // Rerender\n  ReactCurrentOwner.current = workInProgress;\n  let nextChildren;\n  if (\n    didCaptureError &&\n    typeof Component.getDerivedStateFromError !== 'function'\n  ) {\n    // If we captured an error, but getDerivedStateFromError is not defined,\n    // unmount all the children. componentDidCatch will schedule an update to\n    // re-render a fallback. This is temporary until we migrate everyone to\n    // the new API.\n    // TODO: Warn in a future release.\n    nextChildren = null;\n\n    if (enableProfilerTimer) {\n      stopProfilerTimerIfRunning(workInProgress);\n    }\n  } else {\n    if (__DEV__) {\n      setIsRendering(true);\n      nextChildren = instance.render();\n      if (\n        debugRenderPhaseSideEffectsForStrictMode &&\n        workInProgress.mode & StrictMode\n      ) {\n        disableLogs();\n        try {\n          instance.render();\n        } finally {\n          reenableLogs();\n        }\n      }\n      setIsRendering(false);\n    } else {\n      nextChildren = instance.render();\n    }\n  }\n\n  // React DevTools reads this flag.\n  workInProgress.flags |= PerformedWork;\n  if (current !== null && didCaptureError) {\n    // If we're recovering from an error, reconcile without reusing any of\n    // the existing children. Conceptually, the normal children and the children\n    // that are shown on error are two different sets, so we shouldn't reuse\n    // normal children even if their identities match.\n    forceUnmountCurrentAndReconcile(\n      current,\n      workInProgress,\n      nextChildren,\n      renderLanes,\n    );\n  } else {\n    reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  }\n\n  // Memoize state using the values we just used to render.\n  // TODO: Restructure so we never read values from the instance.\n  workInProgress.memoizedState = instance.state;\n\n  // The context might have changed so we need to recalculate it.\n  if (hasContext) {\n    invalidateContextProvider(workInProgress, Component, true);\n  }\n\n  return workInProgress.child;\n}\n\nfunction pushHostRootContext(workInProgress) {\n  const root = (workInProgress.stateNode: FiberRoot);\n  if (root.pendingContext) {\n    pushTopLevelContextObject(\n      workInProgress,\n      root.pendingContext,\n      root.pendingContext !== root.context,\n    );\n  } else if (root.context) {\n    // Should always be set\n    pushTopLevelContextObject(workInProgress, root.context, false);\n  }\n  pushHostContainer(workInProgress, root.containerInfo);\n}\n\nfunction updateHostRoot(current, workInProgress, renderLanes) {\n  pushHostRootContext(workInProgress);\n  const updateQueue = workInProgress.updateQueue;\n  invariant(\n    current !== null && updateQueue !== null,\n    'If the root does not have an updateQueue, we should have already ' +\n      'bailed out. This error is likely caused by a bug in React. Please ' +\n      'file an issue.',\n  );\n  const nextProps = workInProgress.pendingProps;\n  const prevState = workInProgress.memoizedState;\n  const prevChildren = prevState !== null ? prevState.element : null;\n  cloneUpdateQueue(current, workInProgress);\n  processUpdateQueue(workInProgress, nextProps, null, renderLanes);\n  const nextState = workInProgress.memoizedState;\n  // Caution: React DevTools currently depends on this property\n  // being called \"element\".\n  const nextChildren = nextState.element;\n  if (nextChildren === prevChildren) {\n    resetHydrationState();\n    return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n  }\n  const root: FiberRoot = workInProgress.stateNode;\n  if (root.hydrate && enterHydrationState(workInProgress)) {\n    // If we don't have any current children this might be the first pass.\n    // We always try to hydrate. If this isn't a hydration pass there won't\n    // be any children to hydrate which is effectively the same thing as\n    // not hydrating.\n\n    if (supportsHydration) {\n      const mutableSourceEagerHydrationData =\n        root.mutableSourceEagerHydrationData;\n      if (mutableSourceEagerHydrationData != null) {\n        for (let i = 0; i < mutableSourceEagerHydrationData.length; i += 2) {\n          const mutableSource = ((mutableSourceEagerHydrationData[\n            i\n          ]: any): MutableSource<any>);\n          const version = mutableSourceEagerHydrationData[i + 1];\n          setWorkInProgressVersion(mutableSource, version);\n        }\n      }\n    }\n\n    const child = mountChildFibers(\n      workInProgress,\n      null,\n      nextChildren,\n      renderLanes,\n    );\n    workInProgress.child = child;\n\n    let node = child;\n    while (node) {\n      // Mark each child as hydrating. This is a fast path to know whether this\n      // tree is part of a hydrating tree. This is used to determine if a child\n      // node has fully mounted yet, and for scheduling event replaying.\n      // Conceptually this is similar to Placement in that a new subtree is\n      // inserted into the React tree here. It just happens to not need DOM\n      // mutations because it already exists.\n      node.flags = (node.flags & ~Placement) | Hydrating;\n      node = node.sibling;\n    }\n  } else {\n    // Otherwise reset hydration state in case we aborted and resumed another\n    // root.\n    reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n    resetHydrationState();\n  }\n  return workInProgress.child;\n}\n\nfunction updateHostComponent(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  renderLanes: Lanes,\n) {\n  pushHostContext(workInProgress);\n\n  if (current === null) {\n    tryToClaimNextHydratableInstance(workInProgress);\n  }\n\n  const type = workInProgress.type;\n  const nextProps = workInProgress.pendingProps;\n  const prevProps = current !== null ? current.memoizedProps : null;\n\n  let nextChildren = nextProps.children;\n  const isDirectTextChild = shouldSetTextContent(type, nextProps);\n\n  if (isDirectTextChild) {\n    // We special case a direct text child of a host node. This is a common\n    // case. We won't handle it as a reified child. We will instead handle\n    // this in the host environment that also has access to this prop. That\n    // avoids allocating another HostText fiber and traversing it.\n    nextChildren = null;\n  } else if (prevProps !== null && shouldSetTextContent(type, prevProps)) {\n    // If we're switching from a direct text child to a normal child, or to\n    // empty, we need to schedule the text content to be reset.\n    workInProgress.flags |= ContentReset;\n  }\n\n  markRef(current, workInProgress);\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  return workInProgress.child;\n}\n\nfunction updateHostText(current, workInProgress) {\n  if (current === null) {\n    tryToClaimNextHydratableInstance(workInProgress);\n  }\n  // Nothing to do here. This is terminal. We'll do the completion step\n  // immediately after.\n  return null;\n}\n\nfunction mountLazyComponent(\n  _current,\n  workInProgress,\n  elementType,\n  updateLanes,\n  renderLanes,\n) {\n  if (_current !== null) {\n    // A lazy component only mounts if it suspended inside a non-\n    // concurrent tree, in an inconsistent state. We want to treat it like\n    // a new mount, even though an empty version of it already committed.\n    // Disconnect the alternate pointers.\n    _current.alternate = null;\n    workInProgress.alternate = null;\n    // Since this is conceptually a new fiber, schedule a Placement effect\n    workInProgress.flags |= Placement;\n  }\n\n  const props = workInProgress.pendingProps;\n  const lazyComponent: LazyComponentType<any, any> = elementType;\n  const payload = lazyComponent._payload;\n  const init = lazyComponent._init;\n  let Component = init(payload);\n  // Store the unwrapped component in the type.\n  workInProgress.type = Component;\n  const resolvedTag = (workInProgress.tag = resolveLazyComponentTag(Component));\n  const resolvedProps = resolveDefaultProps(Component, props);\n  let child;\n  switch (resolvedTag) {\n    case FunctionComponent: {\n      if (__DEV__) {\n        validateFunctionComponentInDev(workInProgress, Component);\n        workInProgress.type = Component = resolveFunctionForHotReloading(\n          Component,\n        );\n      }\n      child = updateFunctionComponent(\n        null,\n        workInProgress,\n        Component,\n        resolvedProps,\n        renderLanes,\n      );\n      return child;\n    }\n    case ClassComponent: {\n      if (__DEV__) {\n        workInProgress.type = Component = resolveClassForHotReloading(\n          Component,\n        );\n      }\n      child = updateClassComponent(\n        null,\n        workInProgress,\n        Component,\n        resolvedProps,\n        renderLanes,\n      );\n      return child;\n    }\n    case ForwardRef: {\n      if (__DEV__) {\n        workInProgress.type = Component = resolveForwardRefForHotReloading(\n          Component,\n        );\n      }\n      child = updateForwardRef(\n        null,\n        workInProgress,\n        Component,\n        resolvedProps,\n        renderLanes,\n      );\n      return child;\n    }\n    case MemoComponent: {\n      if (__DEV__) {\n        if (workInProgress.type !== workInProgress.elementType) {\n          const outerPropTypes = Component.propTypes;\n          if (outerPropTypes) {\n            checkPropTypes(\n              outerPropTypes,\n              resolvedProps, // Resolved for outer only\n              'prop',\n              getComponentName(Component),\n            );\n          }\n        }\n      }\n      child = updateMemoComponent(\n        null,\n        workInProgress,\n        Component,\n        resolveDefaultProps(Component.type, resolvedProps), // The inner type can have defaults too\n        updateLanes,\n        renderLanes,\n      );\n      return child;\n    }\n    case Block: {\n      if (enableBlocksAPI) {\n        // TODO: Resolve for Hot Reloading.\n        child = updateBlock(\n          null,\n          workInProgress,\n          Component,\n          props,\n          renderLanes,\n        );\n        return child;\n      }\n      break;\n    }\n  }\n  let hint = '';\n  if (__DEV__) {\n    if (\n      Component !== null &&\n      typeof Component === 'object' &&\n      Component.$$typeof === REACT_LAZY_TYPE\n    ) {\n      hint = ' Did you wrap a component in React.lazy() more than once?';\n    }\n  }\n  // This message intentionally doesn't mention ForwardRef or MemoComponent\n  // because the fact that it's a separate type of work is an\n  // implementation detail.\n  invariant(\n    false,\n    'Element type is invalid. Received a promise that resolves to: %s. ' +\n      'Lazy element type must resolve to a class or function.%s',\n    Component,\n    hint,\n  );\n}\n\nfunction mountIncompleteClassComponent(\n  _current,\n  workInProgress,\n  Component,\n  nextProps,\n  renderLanes,\n) {\n  if (_current !== null) {\n    // An incomplete component only mounts if it suspended inside a non-\n    // concurrent tree, in an inconsistent state. We want to treat it like\n    // a new mount, even though an empty version of it already committed.\n    // Disconnect the alternate pointers.\n    _current.alternate = null;\n    workInProgress.alternate = null;\n    // Since this is conceptually a new fiber, schedule a Placement effect\n    workInProgress.flags |= Placement;\n  }\n\n  // Promote the fiber to a class and try rendering again.\n  workInProgress.tag = ClassComponent;\n\n  // The rest of this function is a fork of `updateClassComponent`\n\n  // Push context providers early to prevent context stack mismatches.\n  // During mounting we don't know the child context yet as the instance doesn't exist.\n  // We will invalidate the child context in finishClassComponent() right after rendering.\n  let hasContext;\n  if (isLegacyContextProvider(Component)) {\n    hasContext = true;\n    pushLegacyContextProvider(workInProgress);\n  } else {\n    hasContext = false;\n  }\n  prepareToReadContext(workInProgress, renderLanes);\n\n  constructClassInstance(workInProgress, Component, nextProps);\n  mountClassInstance(workInProgress, Component, nextProps, renderLanes);\n\n  return finishClassComponent(\n    null,\n    workInProgress,\n    Component,\n    true,\n    hasContext,\n    renderLanes,\n  );\n}\n\nfunction mountIndeterminateComponent(\n  _current,\n  workInProgress,\n  Component,\n  renderLanes,\n) {\n  if (_current !== null) {\n    // An indeterminate component only mounts if it suspended inside a non-\n    // concurrent tree, in an inconsistent state. We want to treat it like\n    // a new mount, even though an empty version of it already committed.\n    // Disconnect the alternate pointers.\n    _current.alternate = null;\n    workInProgress.alternate = null;\n    // Since this is conceptually a new fiber, schedule a Placement effect\n    workInProgress.flags |= Placement;\n  }\n\n  const props = workInProgress.pendingProps;\n  let context;\n  if (!disableLegacyContext) {\n    const unmaskedContext = getUnmaskedContext(\n      workInProgress,\n      Component,\n      false,\n    );\n    context = getMaskedContext(workInProgress, unmaskedContext);\n  }\n\n  prepareToReadContext(workInProgress, renderLanes);\n  let value;\n\n  if (__DEV__) {\n    if (\n      Component.prototype &&\n      typeof Component.prototype.render === 'function'\n    ) {\n      const componentName = getComponentName(Component) || 'Unknown';\n\n      if (!didWarnAboutBadClass[componentName]) {\n        console.error(\n          \"The <%s /> component appears to have a render method, but doesn't extend React.Component. \" +\n            'This is likely to cause errors. Change %s to extend React.Component instead.',\n          componentName,\n          componentName,\n        );\n        didWarnAboutBadClass[componentName] = true;\n      }\n    }\n\n    if (workInProgress.mode & StrictMode) {\n      ReactStrictModeWarnings.recordLegacyContextWarning(workInProgress, null);\n    }\n\n    setIsRendering(true);\n    ReactCurrentOwner.current = workInProgress;\n    value = renderWithHooks(\n      null,\n      workInProgress,\n      Component,\n      props,\n      context,\n      renderLanes,\n    );\n    setIsRendering(false);\n  } else {\n    value = renderWithHooks(\n      null,\n      workInProgress,\n      Component,\n      props,\n      context,\n      renderLanes,\n    );\n  }\n  // React DevTools reads this flag.\n  workInProgress.flags |= PerformedWork;\n\n  if (__DEV__) {\n    // Support for module components is deprecated and is removed behind a flag.\n    // Whether or not it would crash later, we want to show a good message in DEV first.\n    if (\n      typeof value === 'object' &&\n      value !== null &&\n      typeof value.render === 'function' &&\n      value.$$typeof === undefined\n    ) {\n      const componentName = getComponentName(Component) || 'Unknown';\n      if (!didWarnAboutModulePatternComponent[componentName]) {\n        console.error(\n          'The <%s /> component appears to be a function component that returns a class instance. ' +\n            'Change %s to a class that extends React.Component instead. ' +\n            \"If you can't use a class try assigning the prototype on the function as a workaround. \" +\n            \"`%s.prototype = React.Component.prototype`. Don't use an arrow function since it \" +\n            'cannot be called with `new` by React.',\n          componentName,\n          componentName,\n          componentName,\n        );\n        didWarnAboutModulePatternComponent[componentName] = true;\n      }\n    }\n  }\n\n  if (\n    // Run these checks in production only if the flag is off.\n    // Eventually we'll delete this branch altogether.\n    !disableModulePatternComponents &&\n    typeof value === 'object' &&\n    value !== null &&\n    typeof value.render === 'function' &&\n    value.$$typeof === undefined\n  ) {\n    if (__DEV__) {\n      const componentName = getComponentName(Component) || 'Unknown';\n      if (!didWarnAboutModulePatternComponent[componentName]) {\n        console.error(\n          'The <%s /> component appears to be a function component that returns a class instance. ' +\n            'Change %s to a class that extends React.Component instead. ' +\n            \"If you can't use a class try assigning the prototype on the function as a workaround. \" +\n            \"`%s.prototype = React.Component.prototype`. Don't use an arrow function since it \" +\n            'cannot be called with `new` by React.',\n          componentName,\n          componentName,\n          componentName,\n        );\n        didWarnAboutModulePatternComponent[componentName] = true;\n      }\n    }\n\n    // Proceed under the assumption that this is a class instance\n    workInProgress.tag = ClassComponent;\n\n    // Throw out any hooks that were used.\n    workInProgress.memoizedState = null;\n    workInProgress.updateQueue = null;\n\n    // Push context providers early to prevent context stack mismatches.\n    // During mounting we don't know the child context yet as the instance doesn't exist.\n    // We will invalidate the child context in finishClassComponent() right after rendering.\n    let hasContext = false;\n    if (isLegacyContextProvider(Component)) {\n      hasContext = true;\n      pushLegacyContextProvider(workInProgress);\n    } else {\n      hasContext = false;\n    }\n\n    workInProgress.memoizedState =\n      value.state !== null && value.state !== undefined ? value.state : null;\n\n    initializeUpdateQueue(workInProgress);\n\n    const getDerivedStateFromProps = Component.getDerivedStateFromProps;\n    if (typeof getDerivedStateFromProps === 'function') {\n      applyDerivedStateFromProps(\n        workInProgress,\n        Component,\n        getDerivedStateFromProps,\n        props,\n      );\n    }\n\n    adoptClassInstance(workInProgress, value);\n    mountClassInstance(workInProgress, Component, props, renderLanes);\n    return finishClassComponent(\n      null,\n      workInProgress,\n      Component,\n      true,\n      hasContext,\n      renderLanes,\n    );\n  } else {\n    // Proceed under the assumption that this is a function component\n    workInProgress.tag = FunctionComponent;\n    if (__DEV__) {\n      if (disableLegacyContext && Component.contextTypes) {\n        console.error(\n          '%s uses the legacy contextTypes API which is no longer supported. ' +\n            'Use React.createContext() with React.useContext() instead.',\n          getComponentName(Component) || 'Unknown',\n        );\n      }\n\n      if (\n        debugRenderPhaseSideEffectsForStrictMode &&\n        workInProgress.mode & StrictMode\n      ) {\n        disableLogs();\n        try {\n          value = renderWithHooks(\n            null,\n            workInProgress,\n            Component,\n            props,\n            context,\n            renderLanes,\n          );\n        } finally {\n          reenableLogs();\n        }\n      }\n    }\n    reconcileChildren(null, workInProgress, value, renderLanes);\n    if (__DEV__) {\n      validateFunctionComponentInDev(workInProgress, Component);\n    }\n    return workInProgress.child;\n  }\n}\n\nfunction validateFunctionComponentInDev(workInProgress: Fiber, Component: any) {\n  if (__DEV__) {\n    if (Component) {\n      if (Component.childContextTypes) {\n        console.error(\n          '%s(...): childContextTypes cannot be defined on a function component.',\n          Component.displayName || Component.name || 'Component',\n        );\n      }\n    }\n    if (workInProgress.ref !== null) {\n      let info = '';\n      const ownerName = getCurrentFiberOwnerNameInDevOrNull();\n      if (ownerName) {\n        info += '\\n\\nCheck the render method of `' + ownerName + '`.';\n      }\n\n      let warningKey = ownerName || workInProgress._debugID || '';\n      const debugSource = workInProgress._debugSource;\n      if (debugSource) {\n        warningKey = debugSource.fileName + ':' + debugSource.lineNumber;\n      }\n      if (!didWarnAboutFunctionRefs[warningKey]) {\n        didWarnAboutFunctionRefs[warningKey] = true;\n        console.error(\n          'Function components cannot be given refs. ' +\n            'Attempts to access this ref will fail. ' +\n            'Did you mean to use React.forwardRef()?%s',\n          info,\n        );\n      }\n    }\n\n    if (\n      warnAboutDefaultPropsOnFunctionComponents &&\n      Component.defaultProps !== undefined\n    ) {\n      const componentName = getComponentName(Component) || 'Unknown';\n\n      if (!didWarnAboutDefaultPropsOnFunctionComponent[componentName]) {\n        console.error(\n          '%s: Support for defaultProps will be removed from function components ' +\n            'in a future major release. Use JavaScript default parameters instead.',\n          componentName,\n        );\n        didWarnAboutDefaultPropsOnFunctionComponent[componentName] = true;\n      }\n    }\n\n    if (typeof Component.getDerivedStateFromProps === 'function') {\n      const componentName = getComponentName(Component) || 'Unknown';\n\n      if (!didWarnAboutGetDerivedStateOnFunctionComponent[componentName]) {\n        console.error(\n          '%s: Function components do not support getDerivedStateFromProps.',\n          componentName,\n        );\n        didWarnAboutGetDerivedStateOnFunctionComponent[componentName] = true;\n      }\n    }\n\n    if (\n      typeof Component.contextType === 'object' &&\n      Component.contextType !== null\n    ) {\n      const componentName = getComponentName(Component) || 'Unknown';\n\n      if (!didWarnAboutContextTypeOnFunctionComponent[componentName]) {\n        console.error(\n          '%s: Function components do not support contextType.',\n          componentName,\n        );\n        didWarnAboutContextTypeOnFunctionComponent[componentName] = true;\n      }\n    }\n  }\n}\n\nconst SUSPENDED_MARKER: SuspenseState = {\n  dehydrated: null,\n  retryLane: NoLane,\n};\n\nfunction mountSuspenseOffscreenState(renderLanes: Lanes): OffscreenState {\n  return {\n    baseLanes: renderLanes,\n  };\n}\n\nfunction updateSuspenseOffscreenState(\n  prevOffscreenState: OffscreenState,\n  renderLanes: Lanes,\n): OffscreenState {\n  return {\n    baseLanes: mergeLanes(prevOffscreenState.baseLanes, renderLanes),\n  };\n}\n\n// TODO: Probably should inline this back\nfunction shouldRemainOnFallback(\n  suspenseContext: SuspenseContext,\n  current: null | Fiber,\n  workInProgress: Fiber,\n  renderLanes: Lanes,\n) {\n  // If we're already showing a fallback, there are cases where we need to\n  // remain on that fallback regardless of whether the content has resolved.\n  // For example, SuspenseList coordinates when nested content appears.\n  if (current !== null) {\n    const suspenseState: SuspenseState = current.memoizedState;\n    if (suspenseState === null) {\n      // Currently showing content. Don't hide it, even if ForceSuspenseFallack\n      // is true. More precise name might be \"ForceRemainSuspenseFallback\".\n      // Note: This is a factoring smell. Can't remain on a fallback if there's\n      // no fallback to remain on.\n      return false;\n    }\n  }\n\n  // Not currently showing content. Consult the Suspense context.\n  return hasSuspenseContext(\n    suspenseContext,\n    (ForceSuspenseFallback: SuspenseContext),\n  );\n}\n\nfunction getRemainingWorkInPrimaryTree(current: Fiber, renderLanes) {\n  // TODO: Should not remove render lanes that were pinged during this render\n  return removeLanes(current.childLanes, renderLanes);\n}\n\nfunction updateSuspenseComponent(current, workInProgress, renderLanes) {\n  const nextProps = workInProgress.pendingProps;\n\n  // This is used by DevTools to force a boundary to suspend.\n  if (__DEV__) {\n    if (shouldSuspend(workInProgress)) {\n      workInProgress.flags |= DidCapture;\n    }\n  }\n\n  let suspenseContext: SuspenseContext = suspenseStackCursor.current;\n\n  let showFallback = false;\n  const didSuspend = (workInProgress.flags & DidCapture) !== NoFlags;\n\n  if (\n    didSuspend ||\n    shouldRemainOnFallback(\n      suspenseContext,\n      current,\n      workInProgress,\n      renderLanes,\n    )\n  ) {\n    // Something in this boundary's subtree already suspended. Switch to\n    // rendering the fallback children.\n    showFallback = true;\n    workInProgress.flags &= ~DidCapture;\n  } else {\n    // Attempting the main content\n    if (\n      current === null ||\n      (current.memoizedState: null | SuspenseState) !== null\n    ) {\n      // This is a new mount or this boundary is already showing a fallback state.\n      // Mark this subtree context as having at least one invisible parent that could\n      // handle the fallback state.\n      // Boundaries without fallbacks or should be avoided are not considered since\n      // they cannot handle preferred fallback states.\n      if (\n        nextProps.fallback !== undefined &&\n        nextProps.unstable_avoidThisFallback !== true\n      ) {\n        suspenseContext = addSubtreeSuspenseContext(\n          suspenseContext,\n          InvisibleParentSuspenseContext,\n        );\n      }\n    }\n  }\n\n  suspenseContext = setDefaultShallowSuspenseContext(suspenseContext);\n\n  pushSuspenseContext(workInProgress, suspenseContext);\n\n  // OK, the next part is confusing. We're about to reconcile the Suspense\n  // boundary's children. This involves some custom reconcilation logic. Two\n  // main reasons this is so complicated.\n  //\n  // First, Legacy Mode has different semantics for backwards compatibility. The\n  // primary tree will commit in an inconsistent state, so when we do the\n  // second pass to render the fallback, we do some exceedingly, uh, clever\n  // hacks to make that not totally break. Like transferring effects and\n  // deletions from hidden tree. In Concurrent Mode, it's much simpler,\n  // because we bailout on the primary tree completely and leave it in its old\n  // state, no effects. Same as what we do for Offscreen (except that\n  // Offscreen doesn't have the first render pass).\n  //\n  // Second is hydration. During hydration, the Suspense fiber has a slightly\n  // different layout, where the child points to a dehydrated fragment, which\n  // contains the DOM rendered by the server.\n  //\n  // Third, even if you set all that aside, Suspense is like error boundaries in\n  // that we first we try to render one tree, and if that fails, we render again\n  // and switch to a different tree. Like a try/catch block. So we have to track\n  // which branch we're currently rendering. Ideally we would model this using\n  // a stack.\n  if (current === null) {\n    // Initial mount\n    // If we're currently hydrating, try to hydrate this boundary.\n    // But only if this has a fallback.\n    if (nextProps.fallback !== undefined) {\n      tryToClaimNextHydratableInstance(workInProgress);\n      // This could've been a dehydrated suspense component.\n      if (enableSuspenseServerRenderer) {\n        const suspenseState: null | SuspenseState =\n          workInProgress.memoizedState;\n        if (suspenseState !== null) {\n          const dehydrated = suspenseState.dehydrated;\n          if (dehydrated !== null) {\n            return mountDehydratedSuspenseComponent(\n              workInProgress,\n              dehydrated,\n              renderLanes,\n            );\n          }\n        }\n      }\n    }\n\n    const nextPrimaryChildren = nextProps.children;\n    const nextFallbackChildren = nextProps.fallback;\n    if (showFallback) {\n      const fallbackFragment = mountSuspenseFallbackChildren(\n        workInProgress,\n        nextPrimaryChildren,\n        nextFallbackChildren,\n        renderLanes,\n      );\n      const primaryChildFragment: Fiber = (workInProgress.child: any);\n      primaryChildFragment.memoizedState = mountSuspenseOffscreenState(\n        renderLanes,\n      );\n      workInProgress.memoizedState = SUSPENDED_MARKER;\n      return fallbackFragment;\n    } else if (typeof nextProps.unstable_expectedLoadTime === 'number') {\n      // This is a CPU-bound tree. Skip this tree and show a placeholder to\n      // unblock the surrounding content. Then immediately retry after the\n      // initial commit.\n      const fallbackFragment = mountSuspenseFallbackChildren(\n        workInProgress,\n        nextPrimaryChildren,\n        nextFallbackChildren,\n        renderLanes,\n      );\n      const primaryChildFragment: Fiber = (workInProgress.child: any);\n      primaryChildFragment.memoizedState = mountSuspenseOffscreenState(\n        renderLanes,\n      );\n      workInProgress.memoizedState = SUSPENDED_MARKER;\n\n      // Since nothing actually suspended, there will nothing to ping this to\n      // get it started back up to attempt the next item. While in terms of\n      // priority this work has the same priority as this current render, it's\n      // not part of the same transition once the transition has committed. If\n      // it's sync, we still want to yield so that it can be painted.\n      // Conceptually, this is really the same as pinging. We can use any\n      // RetryLane even if it's the one currently rendering since we're leaving\n      // it behind on this node.\n      workInProgress.lanes = SomeRetryLane;\n      if (enableSchedulerTracing) {\n        markSpawnedWork(SomeRetryLane);\n      }\n      return fallbackFragment;\n    } else {\n      return mountSuspensePrimaryChildren(\n        workInProgress,\n        nextPrimaryChildren,\n        renderLanes,\n      );\n    }\n  } else {\n    // This is an update.\n\n    // If the current fiber has a SuspenseState, that means it's already showing\n    // a fallback.\n    const prevState: null | SuspenseState = current.memoizedState;\n    if (prevState !== null) {\n      // The current tree is already showing a fallback\n\n      // Special path for hydration\n      if (enableSuspenseServerRenderer) {\n        const dehydrated = prevState.dehydrated;\n        if (dehydrated !== null) {\n          if (!didSuspend) {\n            return updateDehydratedSuspenseComponent(\n              current,\n              workInProgress,\n              dehydrated,\n              prevState,\n              renderLanes,\n            );\n          } else if (\n            (workInProgress.memoizedState: null | SuspenseState) !== null\n          ) {\n            // Something suspended and we should still be in dehydrated mode.\n            // Leave the existing child in place.\n            workInProgress.child = current.child;\n            // The dehydrated completion pass expects this flag to be there\n            // but the normal suspense pass doesn't.\n            workInProgress.flags |= DidCapture;\n            return null;\n          } else {\n            // Suspended but we should no longer be in dehydrated mode.\n            // Therefore we now have to render the fallback.\n            const nextPrimaryChildren = nextProps.children;\n            const nextFallbackChildren = nextProps.fallback;\n            const fallbackChildFragment = mountSuspenseFallbackAfterRetryWithoutHydrating(\n              current,\n              workInProgress,\n              nextPrimaryChildren,\n              nextFallbackChildren,\n              renderLanes,\n            );\n            const primaryChildFragment: Fiber = (workInProgress.child: any);\n            primaryChildFragment.memoizedState = mountSuspenseOffscreenState(\n              renderLanes,\n            );\n            workInProgress.memoizedState = SUSPENDED_MARKER;\n            return fallbackChildFragment;\n          }\n        }\n      }\n\n      if (showFallback) {\n        const nextFallbackChildren = nextProps.fallback;\n        const nextPrimaryChildren = nextProps.children;\n        const fallbackChildFragment = updateSuspenseFallbackChildren(\n          current,\n          workInProgress,\n          nextPrimaryChildren,\n          nextFallbackChildren,\n          renderLanes,\n        );\n        const primaryChildFragment: Fiber = (workInProgress.child: any);\n        const prevOffscreenState: OffscreenState | null = (current.child: any)\n          .memoizedState;\n        primaryChildFragment.memoizedState =\n          prevOffscreenState === null\n            ? mountSuspenseOffscreenState(renderLanes)\n            : updateSuspenseOffscreenState(prevOffscreenState, renderLanes);\n        primaryChildFragment.childLanes = getRemainingWorkInPrimaryTree(\n          current,\n          renderLanes,\n        );\n        workInProgress.memoizedState = SUSPENDED_MARKER;\n        return fallbackChildFragment;\n      } else {\n        const nextPrimaryChildren = nextProps.children;\n        const primaryChildFragment = updateSuspensePrimaryChildren(\n          current,\n          workInProgress,\n          nextPrimaryChildren,\n          renderLanes,\n        );\n        workInProgress.memoizedState = null;\n        return primaryChildFragment;\n      }\n    } else {\n      // The current tree is not already showing a fallback.\n      if (showFallback) {\n        // Timed out.\n        const nextFallbackChildren = nextProps.fallback;\n        const nextPrimaryChildren = nextProps.children;\n        const fallbackChildFragment = updateSuspenseFallbackChildren(\n          current,\n          workInProgress,\n          nextPrimaryChildren,\n          nextFallbackChildren,\n          renderLanes,\n        );\n        const primaryChildFragment: Fiber = (workInProgress.child: any);\n        const prevOffscreenState: OffscreenState | null = (current.child: any)\n          .memoizedState;\n        primaryChildFragment.memoizedState =\n          prevOffscreenState === null\n            ? mountSuspenseOffscreenState(renderLanes)\n            : updateSuspenseOffscreenState(prevOffscreenState, renderLanes);\n        primaryChildFragment.childLanes = getRemainingWorkInPrimaryTree(\n          current,\n          renderLanes,\n        );\n        // Skip the primary children, and continue working on the\n        // fallback children.\n        workInProgress.memoizedState = SUSPENDED_MARKER;\n        return fallbackChildFragment;\n      } else {\n        // Still haven't timed out. Continue rendering the children, like we\n        // normally do.\n        const nextPrimaryChildren = nextProps.children;\n        const primaryChildFragment = updateSuspensePrimaryChildren(\n          current,\n          workInProgress,\n          nextPrimaryChildren,\n          renderLanes,\n        );\n        workInProgress.memoizedState = null;\n        return primaryChildFragment;\n      }\n    }\n  }\n}\n\nfunction mountSuspensePrimaryChildren(\n  workInProgress,\n  primaryChildren,\n  renderLanes,\n) {\n  const mode = workInProgress.mode;\n  const primaryChildProps: OffscreenProps = {\n    mode: 'visible',\n    children: primaryChildren,\n  };\n  const primaryChildFragment = createFiberFromOffscreen(\n    primaryChildProps,\n    mode,\n    renderLanes,\n    null,\n  );\n  primaryChildFragment.return = workInProgress;\n  workInProgress.child = primaryChildFragment;\n  return primaryChildFragment;\n}\n\nfunction mountSuspenseFallbackChildren(\n  workInProgress,\n  primaryChildren,\n  fallbackChildren,\n  renderLanes,\n) {\n  const mode = workInProgress.mode;\n  const progressedPrimaryFragment: Fiber | null = workInProgress.child;\n\n  const primaryChildProps: OffscreenProps = {\n    mode: 'hidden',\n    children: primaryChildren,\n  };\n\n  let primaryChildFragment;\n  let fallbackChildFragment;\n  if ((mode & BlockingMode) === NoMode && progressedPrimaryFragment !== null) {\n    // In legacy mode, we commit the primary tree as if it successfully\n    // completed, even though it's in an inconsistent state.\n    primaryChildFragment = progressedPrimaryFragment;\n    primaryChildFragment.childLanes = NoLanes;\n    primaryChildFragment.pendingProps = primaryChildProps;\n\n    if (enableProfilerTimer && workInProgress.mode & ProfileMode) {\n      // Reset the durations from the first pass so they aren't included in the\n      // final amounts. This seems counterintuitive, since we're intentionally\n      // not measuring part of the render phase, but this makes it match what we\n      // do in Concurrent Mode.\n      primaryChildFragment.actualDuration = 0;\n      primaryChildFragment.actualStartTime = -1;\n      primaryChildFragment.selfBaseDuration = 0;\n      primaryChildFragment.treeBaseDuration = 0;\n    }\n\n    fallbackChildFragment = createFiberFromFragment(\n      fallbackChildren,\n      mode,\n      renderLanes,\n      null,\n    );\n  } else {\n    primaryChildFragment = createFiberFromOffscreen(\n      primaryChildProps,\n      mode,\n      NoLanes,\n      null,\n    );\n    fallbackChildFragment = createFiberFromFragment(\n      fallbackChildren,\n      mode,\n      renderLanes,\n      null,\n    );\n  }\n\n  primaryChildFragment.return = workInProgress;\n  fallbackChildFragment.return = workInProgress;\n  primaryChildFragment.sibling = fallbackChildFragment;\n  workInProgress.child = primaryChildFragment;\n  return fallbackChildFragment;\n}\n\nfunction createWorkInProgressOffscreenFiber(\n  current: Fiber,\n  offscreenProps: OffscreenProps,\n) {\n  // The props argument to `createWorkInProgress` is `any` typed, so we use this\n  // wrapper function to constrain it.\n  return createWorkInProgress(current, offscreenProps);\n}\n\nfunction updateSuspensePrimaryChildren(\n  current,\n  workInProgress,\n  primaryChildren,\n  renderLanes,\n) {\n  const currentPrimaryChildFragment: Fiber = (current.child: any);\n  const currentFallbackChildFragment: Fiber | null =\n    currentPrimaryChildFragment.sibling;\n\n  const primaryChildFragment = createWorkInProgressOffscreenFiber(\n    currentPrimaryChildFragment,\n    {\n      mode: 'visible',\n      children: primaryChildren,\n    },\n  );\n  if ((workInProgress.mode & BlockingMode) === NoMode) {\n    primaryChildFragment.lanes = renderLanes;\n  }\n  primaryChildFragment.return = workInProgress;\n  primaryChildFragment.sibling = null;\n  if (currentFallbackChildFragment !== null) {\n    // Delete the fallback child fragment\n    currentFallbackChildFragment.nextEffect = null;\n    currentFallbackChildFragment.flags = Deletion;\n    workInProgress.firstEffect = workInProgress.lastEffect = currentFallbackChildFragment;\n  }\n\n  workInProgress.child = primaryChildFragment;\n  return primaryChildFragment;\n}\n\nfunction updateSuspenseFallbackChildren(\n  current,\n  workInProgress,\n  primaryChildren,\n  fallbackChildren,\n  renderLanes,\n) {\n  const mode = workInProgress.mode;\n  const currentPrimaryChildFragment: Fiber = (current.child: any);\n  const currentFallbackChildFragment: Fiber | null =\n    currentPrimaryChildFragment.sibling;\n\n  const primaryChildProps: OffscreenProps = {\n    mode: 'hidden',\n    children: primaryChildren,\n  };\n\n  let primaryChildFragment;\n  if (\n    // In legacy mode, we commit the primary tree as if it successfully\n    // completed, even though it's in an inconsistent state.\n    (mode & BlockingMode) === NoMode &&\n    // Make sure we're on the second pass, i.e. the primary child fragment was\n    // already cloned. In legacy mode, the only case where this isn't true is\n    // when DevTools forces us to display a fallback; we skip the first render\n    // pass entirely and go straight to rendering the fallback. (In Concurrent\n    // Mode, SuspenseList can also trigger this scenario, but this is a legacy-\n    // only codepath.)\n    workInProgress.child !== currentPrimaryChildFragment\n  ) {\n    const progressedPrimaryFragment: Fiber = (workInProgress.child: any);\n    primaryChildFragment = progressedPrimaryFragment;\n    primaryChildFragment.childLanes = NoLanes;\n    primaryChildFragment.pendingProps = primaryChildProps;\n\n    if (enableProfilerTimer && workInProgress.mode & ProfileMode) {\n      // Reset the durations from the first pass so they aren't included in the\n      // final amounts. This seems counterintuitive, since we're intentionally\n      // not measuring part of the render phase, but this makes it match what we\n      // do in Concurrent Mode.\n      primaryChildFragment.actualDuration = 0;\n      primaryChildFragment.actualStartTime = -1;\n      primaryChildFragment.selfBaseDuration =\n        currentPrimaryChildFragment.selfBaseDuration;\n      primaryChildFragment.treeBaseDuration =\n        currentPrimaryChildFragment.treeBaseDuration;\n    }\n\n    // The fallback fiber was added as a deletion effect during the first pass.\n    // However, since we're going to remain on the fallback, we no longer want\n    // to delete it. So we need to remove it from the list. Deletions are stored\n    // on the same list as effects. We want to keep the effects from the primary\n    // tree. So we copy the primary child fragment's effect list, which does not\n    // include the fallback deletion effect.\n    const progressedLastEffect = primaryChildFragment.lastEffect;\n    if (progressedLastEffect !== null) {\n      workInProgress.firstEffect = primaryChildFragment.firstEffect;\n      workInProgress.lastEffect = progressedLastEffect;\n      progressedLastEffect.nextEffect = null;\n    } else {\n      // TODO: Reset this somewhere else? Lol legacy mode is so weird.\n      workInProgress.firstEffect = workInProgress.lastEffect = null;\n    }\n  } else {\n    primaryChildFragment = createWorkInProgressOffscreenFiber(\n      currentPrimaryChildFragment,\n      primaryChildProps,\n    );\n  }\n  let fallbackChildFragment;\n  if (currentFallbackChildFragment !== null) {\n    fallbackChildFragment = createWorkInProgress(\n      currentFallbackChildFragment,\n      fallbackChildren,\n    );\n  } else {\n    fallbackChildFragment = createFiberFromFragment(\n      fallbackChildren,\n      mode,\n      renderLanes,\n      null,\n    );\n    // Needs a placement effect because the parent (the Suspense boundary) already\n    // mounted but this is a new fiber.\n    fallbackChildFragment.flags |= Placement;\n  }\n\n  fallbackChildFragment.return = workInProgress;\n  primaryChildFragment.return = workInProgress;\n  primaryChildFragment.sibling = fallbackChildFragment;\n  workInProgress.child = primaryChildFragment;\n\n  return fallbackChildFragment;\n}\n\nfunction retrySuspenseComponentWithoutHydrating(\n  current: Fiber,\n  workInProgress: Fiber,\n  renderLanes: Lanes,\n) {\n  // This will add the old fiber to the deletion list\n  reconcileChildFibers(workInProgress, current.child, null, renderLanes);\n\n  // We're now not suspended nor dehydrated.\n  const nextProps = workInProgress.pendingProps;\n  const primaryChildren = nextProps.children;\n  const primaryChildFragment = mountSuspensePrimaryChildren(\n    workInProgress,\n    primaryChildren,\n    renderLanes,\n  );\n  // Needs a placement effect because the parent (the Suspense boundary) already\n  // mounted but this is a new fiber.\n  primaryChildFragment.flags |= Placement;\n  workInProgress.memoizedState = null;\n\n  return primaryChildFragment;\n}\n\nfunction mountSuspenseFallbackAfterRetryWithoutHydrating(\n  current,\n  workInProgress,\n  primaryChildren,\n  fallbackChildren,\n  renderLanes,\n) {\n  const mode = workInProgress.mode;\n  const primaryChildFragment = createFiberFromOffscreen(\n    primaryChildren,\n    mode,\n    NoLanes,\n    null,\n  );\n  const fallbackChildFragment = createFiberFromFragment(\n    fallbackChildren,\n    mode,\n    renderLanes,\n    null,\n  );\n  // Needs a placement effect because the parent (the Suspense\n  // boundary) already mounted but this is a new fiber.\n  fallbackChildFragment.flags |= Placement;\n\n  primaryChildFragment.return = workInProgress;\n  fallbackChildFragment.return = workInProgress;\n  primaryChildFragment.sibling = fallbackChildFragment;\n  workInProgress.child = primaryChildFragment;\n\n  if ((workInProgress.mode & BlockingMode) !== NoMode) {\n    // We will have dropped the effect list which contains the\n    // deletion. We need to reconcile to delete the current child.\n    reconcileChildFibers(workInProgress, current.child, null, renderLanes);\n  }\n\n  return fallbackChildFragment;\n}\n\nfunction mountDehydratedSuspenseComponent(\n  workInProgress: Fiber,\n  suspenseInstance: SuspenseInstance,\n  renderLanes: Lanes,\n): null | Fiber {\n  // During the first pass, we'll bail out and not drill into the children.\n  // Instead, we'll leave the content in place and try to hydrate it later.\n  if ((workInProgress.mode & BlockingMode) === NoMode) {\n    if (__DEV__) {\n      console.error(\n        'Cannot hydrate Suspense in legacy mode. Switch from ' +\n          'ReactDOM.hydrate(element, container) to ' +\n          'ReactDOM.createBlockingRoot(container, { hydrate: true })' +\n          '.render(element) or remove the Suspense components from ' +\n          'the server rendered components.',\n      );\n    }\n    workInProgress.lanes = laneToLanes(SyncLane);\n  } else if (isSuspenseInstanceFallback(suspenseInstance)) {\n    // This is a client-only boundary. Since we won't get any content from the server\n    // for this, we need to schedule that at a higher priority based on when it would\n    // have timed out. In theory we could render it in this pass but it would have the\n    // wrong priority associated with it and will prevent hydration of parent path.\n    // Instead, we'll leave work left on it to render it in a separate commit.\n\n    // TODO This time should be the time at which the server rendered response that is\n    // a parent to this boundary was displayed. However, since we currently don't have\n    // a protocol to transfer that time, we'll just estimate it by using the current\n    // time. This will mean that Suspense timeouts are slightly shifted to later than\n    // they should be.\n    // Schedule a normal pri update to render this content.\n    if (enableSchedulerTracing) {\n      markSpawnedWork(DefaultHydrationLane);\n    }\n    workInProgress.lanes = laneToLanes(DefaultHydrationLane);\n  } else {\n    // We'll continue hydrating the rest at offscreen priority since we'll already\n    // be showing the right content coming from the server, it is no rush.\n    workInProgress.lanes = laneToLanes(OffscreenLane);\n    if (enableSchedulerTracing) {\n      markSpawnedWork(OffscreenLane);\n    }\n  }\n  return null;\n}\n\nfunction updateDehydratedSuspenseComponent(\n  current: Fiber,\n  workInProgress: Fiber,\n  suspenseInstance: SuspenseInstance,\n  suspenseState: SuspenseState,\n  renderLanes: Lanes,\n): null | Fiber {\n  // We should never be hydrating at this point because it is the first pass,\n  // but after we've already committed once.\n  warnIfHydrating();\n\n  if ((getExecutionContext() & RetryAfterError) !== NoContext) {\n    return retrySuspenseComponentWithoutHydrating(\n      current,\n      workInProgress,\n      renderLanes,\n    );\n  }\n\n  if ((workInProgress.mode & BlockingMode) === NoMode) {\n    return retrySuspenseComponentWithoutHydrating(\n      current,\n      workInProgress,\n      renderLanes,\n    );\n  }\n\n  if (isSuspenseInstanceFallback(suspenseInstance)) {\n    // This boundary is in a permanent fallback state. In this case, we'll never\n    // get an update and we'll never be able to hydrate the final content. Let's just try the\n    // client side render instead.\n    return retrySuspenseComponentWithoutHydrating(\n      current,\n      workInProgress,\n      renderLanes,\n    );\n  }\n  // We use lanes to indicate that a child might depend on context, so if\n  // any context has changed, we need to treat is as if the input might have changed.\n  const hasContextChanged = includesSomeLane(renderLanes, current.childLanes);\n  if (didReceiveUpdate || hasContextChanged) {\n    // This boundary has changed since the first render. This means that we are now unable to\n    // hydrate it. We might still be able to hydrate it using a higher priority lane.\n    const root = getWorkInProgressRoot();\n    if (root !== null) {\n      const attemptHydrationAtLane = getBumpedLaneForHydration(\n        root,\n        renderLanes,\n      );\n      if (\n        attemptHydrationAtLane !== NoLane &&\n        attemptHydrationAtLane !== suspenseState.retryLane\n      ) {\n        // Intentionally mutating since this render will get interrupted. This\n        // is one of the very rare times where we mutate the current tree\n        // during the render phase.\n        suspenseState.retryLane = attemptHydrationAtLane;\n        // TODO: Ideally this would inherit the event time of the current render\n        const eventTime = NoTimestamp;\n        scheduleUpdateOnFiber(current, attemptHydrationAtLane, eventTime);\n      } else {\n        // We have already tried to ping at a higher priority than we're rendering with\n        // so if we got here, we must have failed to hydrate at those levels. We must\n        // now give up. Instead, we're going to delete the whole subtree and instead inject\n        // a new real Suspense boundary to take its place, which may render content\n        // or fallback. This might suspend for a while and if it does we might still have\n        // an opportunity to hydrate before this pass commits.\n      }\n    }\n\n    // If we have scheduled higher pri work above, this will probably just abort the render\n    // since we now have higher priority work, but in case it doesn't, we need to prepare to\n    // render something, if we time out. Even if that requires us to delete everything and\n    // skip hydration.\n    // Delay having to do this as long as the suspense timeout allows us.\n    renderDidSuspendDelayIfPossible();\n    return retrySuspenseComponentWithoutHydrating(\n      current,\n      workInProgress,\n      renderLanes,\n    );\n  } else if (isSuspenseInstancePending(suspenseInstance)) {\n    // This component is still pending more data from the server, so we can't hydrate its\n    // content. We treat it as if this component suspended itself. It might seem as if\n    // we could just try to render it client-side instead. However, this will perform a\n    // lot of unnecessary work and is unlikely to complete since it often will suspend\n    // on missing data anyway. Additionally, the server might be able to render more\n    // than we can on the client yet. In that case we'd end up with more fallback states\n    // on the client than if we just leave it alone. If the server times out or errors\n    // these should update this boundary to the permanent Fallback state instead.\n    // Mark it as having captured (i.e. suspended).\n    workInProgress.flags |= DidCapture;\n    // Leave the child in place. I.e. the dehydrated fragment.\n    workInProgress.child = current.child;\n    // Register a callback to retry this boundary once the server has sent the result.\n    let retry = retryDehydratedSuspenseBoundary.bind(null, current);\n    if (enableSchedulerTracing) {\n      retry = Schedule_tracing_wrap(retry);\n    }\n    registerSuspenseInstanceRetry(suspenseInstance, retry);\n    return null;\n  } else {\n    // This is the first attempt.\n    reenterHydrationStateFromDehydratedSuspenseInstance(\n      workInProgress,\n      suspenseInstance,\n    );\n    const nextProps = workInProgress.pendingProps;\n    const primaryChildren = nextProps.children;\n    const primaryChildFragment = mountSuspensePrimaryChildren(\n      workInProgress,\n      primaryChildren,\n      renderLanes,\n    );\n    // Mark the children as hydrating. This is a fast path to know whether this\n    // tree is part of a hydrating tree. This is used to determine if a child\n    // node has fully mounted yet, and for scheduling event replaying.\n    // Conceptually this is similar to Placement in that a new subtree is\n    // inserted into the React tree here. It just happens to not need DOM\n    // mutations because it already exists.\n    primaryChildFragment.flags |= Hydrating;\n    return primaryChildFragment;\n  }\n}\n\nfunction scheduleWorkOnFiber(fiber: Fiber, renderLanes: Lanes) {\n  fiber.lanes = mergeLanes(fiber.lanes, renderLanes);\n  const alternate = fiber.alternate;\n  if (alternate !== null) {\n    alternate.lanes = mergeLanes(alternate.lanes, renderLanes);\n  }\n  scheduleWorkOnParentPath(fiber.return, renderLanes);\n}\n\nfunction propagateSuspenseContextChange(\n  workInProgress: Fiber,\n  firstChild: null | Fiber,\n  renderLanes: Lanes,\n): void {\n  // Mark any Suspense boundaries with fallbacks as having work to do.\n  // If they were previously forced into fallbacks, they may now be able\n  // to unblock.\n  let node = firstChild;\n  while (node !== null) {\n    if (node.tag === SuspenseComponent) {\n      const state: SuspenseState | null = node.memoizedState;\n      if (state !== null) {\n        scheduleWorkOnFiber(node, renderLanes);\n      }\n    } else if (node.tag === SuspenseListComponent) {\n      // If the tail is hidden there might not be an Suspense boundaries\n      // to schedule work on. In this case we have to schedule it on the\n      // list itself.\n      // We don't have to traverse to the children of the list since\n      // the list will propagate the change when it rerenders.\n      scheduleWorkOnFiber(node, renderLanes);\n    } else if (node.child !== null) {\n      node.child.return = node;\n      node = node.child;\n      continue;\n    }\n    if (node === workInProgress) {\n      return;\n    }\n    while (node.sibling === null) {\n      if (node.return === null || node.return === workInProgress) {\n        return;\n      }\n      node = node.return;\n    }\n    node.sibling.return = node.return;\n    node = node.sibling;\n  }\n}\n\nfunction findLastContentRow(firstChild: null | Fiber): null | Fiber {\n  // This is going to find the last row among these children that is already\n  // showing content on the screen, as opposed to being in fallback state or\n  // new. If a row has multiple Suspense boundaries, any of them being in the\n  // fallback state, counts as the whole row being in a fallback state.\n  // Note that the \"rows\" will be workInProgress, but any nested children\n  // will still be current since we haven't rendered them yet. The mounted\n  // order may not be the same as the new order. We use the new order.\n  let row = firstChild;\n  let lastContentRow: null | Fiber = null;\n  while (row !== null) {\n    const currentRow = row.alternate;\n    // New rows can't be content rows.\n    if (currentRow !== null && findFirstSuspended(currentRow) === null) {\n      lastContentRow = row;\n    }\n    row = row.sibling;\n  }\n  return lastContentRow;\n}\n\ntype SuspenseListRevealOrder = 'forwards' | 'backwards' | 'together' | void;\n\nfunction validateRevealOrder(revealOrder: SuspenseListRevealOrder) {\n  if (__DEV__) {\n    if (\n      revealOrder !== undefined &&\n      revealOrder !== 'forwards' &&\n      revealOrder !== 'backwards' &&\n      revealOrder !== 'together' &&\n      !didWarnAboutRevealOrder[revealOrder]\n    ) {\n      didWarnAboutRevealOrder[revealOrder] = true;\n      if (typeof revealOrder === 'string') {\n        switch (revealOrder.toLowerCase()) {\n          case 'together':\n          case 'forwards':\n          case 'backwards': {\n            console.error(\n              '\"%s\" is not a valid value for revealOrder on <SuspenseList />. ' +\n                'Use lowercase \"%s\" instead.',\n              revealOrder,\n              revealOrder.toLowerCase(),\n            );\n            break;\n          }\n          case 'forward':\n          case 'backward': {\n            console.error(\n              '\"%s\" is not a valid value for revealOrder on <SuspenseList />. ' +\n                'React uses the -s suffix in the spelling. Use \"%ss\" instead.',\n              revealOrder,\n              revealOrder.toLowerCase(),\n            );\n            break;\n          }\n          default:\n            console.error(\n              '\"%s\" is not a supported revealOrder on <SuspenseList />. ' +\n                'Did you mean \"together\", \"forwards\" or \"backwards\"?',\n              revealOrder,\n            );\n            break;\n        }\n      } else {\n        console.error(\n          '%s is not a supported value for revealOrder on <SuspenseList />. ' +\n            'Did you mean \"together\", \"forwards\" or \"backwards\"?',\n          revealOrder,\n        );\n      }\n    }\n  }\n}\n\nfunction validateTailOptions(\n  tailMode: SuspenseListTailMode,\n  revealOrder: SuspenseListRevealOrder,\n) {\n  if (__DEV__) {\n    if (tailMode !== undefined && !didWarnAboutTailOptions[tailMode]) {\n      if (tailMode !== 'collapsed' && tailMode !== 'hidden') {\n        didWarnAboutTailOptions[tailMode] = true;\n        console.error(\n          '\"%s\" is not a supported value for tail on <SuspenseList />. ' +\n            'Did you mean \"collapsed\" or \"hidden\"?',\n          tailMode,\n        );\n      } else if (revealOrder !== 'forwards' && revealOrder !== 'backwards') {\n        didWarnAboutTailOptions[tailMode] = true;\n        console.error(\n          '<SuspenseList tail=\"%s\" /> is only valid if revealOrder is ' +\n            '\"forwards\" or \"backwards\". ' +\n            'Did you mean to specify revealOrder=\"forwards\"?',\n          tailMode,\n        );\n      }\n    }\n  }\n}\n\nfunction validateSuspenseListNestedChild(childSlot: mixed, index: number) {\n  if (__DEV__) {\n    const isArray = Array.isArray(childSlot);\n    const isIterable =\n      !isArray && typeof getIteratorFn(childSlot) === 'function';\n    if (isArray || isIterable) {\n      const type = isArray ? 'array' : 'iterable';\n      console.error(\n        'A nested %s was passed to row #%s in <SuspenseList />. Wrap it in ' +\n          'an additional SuspenseList to configure its revealOrder: ' +\n          '<SuspenseList revealOrder=...> ... ' +\n          '<SuspenseList revealOrder=...>{%s}</SuspenseList> ... ' +\n          '</SuspenseList>',\n        type,\n        index,\n        type,\n      );\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction validateSuspenseListChildren(\n  children: mixed,\n  revealOrder: SuspenseListRevealOrder,\n) {\n  if (__DEV__) {\n    if (\n      (revealOrder === 'forwards' || revealOrder === 'backwards') &&\n      children !== undefined &&\n      children !== null &&\n      children !== false\n    ) {\n      if (Array.isArray(children)) {\n        for (let i = 0; i < children.length; i++) {\n          if (!validateSuspenseListNestedChild(children[i], i)) {\n            return;\n          }\n        }\n      } else {\n        const iteratorFn = getIteratorFn(children);\n        if (typeof iteratorFn === 'function') {\n          const childrenIterator = iteratorFn.call(children);\n          if (childrenIterator) {\n            let step = childrenIterator.next();\n            let i = 0;\n            for (; !step.done; step = childrenIterator.next()) {\n              if (!validateSuspenseListNestedChild(step.value, i)) {\n                return;\n              }\n              i++;\n            }\n          }\n        } else {\n          console.error(\n            'A single row was passed to a <SuspenseList revealOrder=\"%s\" />. ' +\n              'This is not useful since it needs multiple rows. ' +\n              'Did you mean to pass multiple children or an array?',\n            revealOrder,\n          );\n        }\n      }\n    }\n  }\n}\n\nfunction initSuspenseListRenderState(\n  workInProgress: Fiber,\n  isBackwards: boolean,\n  tail: null | Fiber,\n  lastContentRow: null | Fiber,\n  tailMode: SuspenseListTailMode,\n  lastEffectBeforeRendering: null | Fiber,\n): void {\n  const renderState: null | SuspenseListRenderState =\n    workInProgress.memoizedState;\n  if (renderState === null) {\n    workInProgress.memoizedState = ({\n      isBackwards: isBackwards,\n      rendering: null,\n      renderingStartTime: 0,\n      last: lastContentRow,\n      tail: tail,\n      tailMode: tailMode,\n      lastEffect: lastEffectBeforeRendering,\n    }: SuspenseListRenderState);\n  } else {\n    // We can reuse the existing object from previous renders.\n    renderState.isBackwards = isBackwards;\n    renderState.rendering = null;\n    renderState.renderingStartTime = 0;\n    renderState.last = lastContentRow;\n    renderState.tail = tail;\n    renderState.tailMode = tailMode;\n    renderState.lastEffect = lastEffectBeforeRendering;\n  }\n}\n\n// This can end up rendering this component multiple passes.\n// The first pass splits the children fibers into two sets. A head and tail.\n// We first render the head. If anything is in fallback state, we do another\n// pass through beginWork to rerender all children (including the tail) with\n// the force suspend context. If the first render didn't have anything in\n// in fallback state. Then we render each row in the tail one-by-one.\n// That happens in the completeWork phase without going back to beginWork.\nfunction updateSuspenseListComponent(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  renderLanes: Lanes,\n) {\n  const nextProps = workInProgress.pendingProps;\n  const revealOrder: SuspenseListRevealOrder = nextProps.revealOrder;\n  const tailMode: SuspenseListTailMode = nextProps.tail;\n  const newChildren = nextProps.children;\n\n  validateRevealOrder(revealOrder);\n  validateTailOptions(tailMode, revealOrder);\n  validateSuspenseListChildren(newChildren, revealOrder);\n\n  reconcileChildren(current, workInProgress, newChildren, renderLanes);\n\n  let suspenseContext: SuspenseContext = suspenseStackCursor.current;\n\n  const shouldForceFallback = hasSuspenseContext(\n    suspenseContext,\n    (ForceSuspenseFallback: SuspenseContext),\n  );\n  if (shouldForceFallback) {\n    suspenseContext = setShallowSuspenseContext(\n      suspenseContext,\n      ForceSuspenseFallback,\n    );\n    workInProgress.flags |= DidCapture;\n  } else {\n    const didSuspendBefore =\n      current !== null && (current.flags & DidCapture) !== NoFlags;\n    if (didSuspendBefore) {\n      // If we previously forced a fallback, we need to schedule work\n      // on any nested boundaries to let them know to try to render\n      // again. This is the same as context updating.\n      propagateSuspenseContextChange(\n        workInProgress,\n        workInProgress.child,\n        renderLanes,\n      );\n    }\n    suspenseContext = setDefaultShallowSuspenseContext(suspenseContext);\n  }\n  pushSuspenseContext(workInProgress, suspenseContext);\n\n  if ((workInProgress.mode & BlockingMode) === NoMode) {\n    // In legacy mode, SuspenseList doesn't work so we just\n    // use make it a noop by treating it as the default revealOrder.\n    workInProgress.memoizedState = null;\n  } else {\n    switch (revealOrder) {\n      case 'forwards': {\n        const lastContentRow = findLastContentRow(workInProgress.child);\n        let tail;\n        if (lastContentRow === null) {\n          // The whole list is part of the tail.\n          // TODO: We could fast path by just rendering the tail now.\n          tail = workInProgress.child;\n          workInProgress.child = null;\n        } else {\n          // Disconnect the tail rows after the content row.\n          // We're going to render them separately later.\n          tail = lastContentRow.sibling;\n          lastContentRow.sibling = null;\n        }\n        initSuspenseListRenderState(\n          workInProgress,\n          false, // isBackwards\n          tail,\n          lastContentRow,\n          tailMode,\n          workInProgress.lastEffect,\n        );\n        break;\n      }\n      case 'backwards': {\n        // We're going to find the first row that has existing content.\n        // At the same time we're going to reverse the list of everything\n        // we pass in the meantime. That's going to be our tail in reverse\n        // order.\n        let tail = null;\n        let row = workInProgress.child;\n        workInProgress.child = null;\n        while (row !== null) {\n          const currentRow = row.alternate;\n          // New rows can't be content rows.\n          if (currentRow !== null && findFirstSuspended(currentRow) === null) {\n            // This is the beginning of the main content.\n            workInProgress.child = row;\n            break;\n          }\n          const nextRow = row.sibling;\n          row.sibling = tail;\n          tail = row;\n          row = nextRow;\n        }\n        // TODO: If workInProgress.child is null, we can continue on the tail immediately.\n        initSuspenseListRenderState(\n          workInProgress,\n          true, // isBackwards\n          tail,\n          null, // last\n          tailMode,\n          workInProgress.lastEffect,\n        );\n        break;\n      }\n      case 'together': {\n        initSuspenseListRenderState(\n          workInProgress,\n          false, // isBackwards\n          null, // tail\n          null, // last\n          undefined,\n          workInProgress.lastEffect,\n        );\n        break;\n      }\n      default: {\n        // The default reveal order is the same as not having\n        // a boundary.\n        workInProgress.memoizedState = null;\n      }\n    }\n  }\n  return workInProgress.child;\n}\n\nfunction updatePortalComponent(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  renderLanes: Lanes,\n) {\n  pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);\n  const nextChildren = workInProgress.pendingProps;\n  if (current === null) {\n    // Portals are special because we don't append the children during mount\n    // but at commit. Therefore we need to track insertions which the normal\n    // flow doesn't do during mount. This doesn't happen at the root because\n    // the root always starts with a \"current\" with a null child.\n    // TODO: Consider unifying this with how the root works.\n    workInProgress.child = reconcileChildFibers(\n      workInProgress,\n      null,\n      nextChildren,\n      renderLanes,\n    );\n  } else {\n    reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  }\n  return workInProgress.child;\n}\n\nlet hasWarnedAboutUsingNoValuePropOnContextProvider = false;\n\nfunction updateContextProvider(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  renderLanes: Lanes,\n) {\n  const providerType: ReactProviderType<any> = workInProgress.type;\n  const context: ReactContext<any> = providerType._context;\n\n  const newProps = workInProgress.pendingProps;\n  const oldProps = workInProgress.memoizedProps;\n\n  const newValue = newProps.value;\n\n  if (__DEV__) {\n    if (!('value' in newProps)) {\n      if (!hasWarnedAboutUsingNoValuePropOnContextProvider) {\n        hasWarnedAboutUsingNoValuePropOnContextProvider = true;\n        console.error(\n          'The `value` prop is required for the `<Context.Provider>`. Did you misspell it or forget to pass it?',\n        );\n      }\n    }\n    const providerPropTypes = workInProgress.type.propTypes;\n\n    if (providerPropTypes) {\n      checkPropTypes(providerPropTypes, newProps, 'prop', 'Context.Provider');\n    }\n  }\n\n  pushProvider(workInProgress, newValue);\n\n  if (oldProps !== null) {\n    const oldValue = oldProps.value;\n    const changedBits = calculateChangedBits(context, newValue, oldValue);\n    if (changedBits === 0) {\n      // No change. Bailout early if children are the same.\n      if (\n        oldProps.children === newProps.children &&\n        !hasLegacyContextChanged()\n      ) {\n        return bailoutOnAlreadyFinishedWork(\n          current,\n          workInProgress,\n          renderLanes,\n        );\n      }\n    } else {\n      // The context value changed. Search for matching consumers and schedule\n      // them to update.\n      propagateContextChange(workInProgress, context, changedBits, renderLanes);\n    }\n  }\n\n  const newChildren = newProps.children;\n  reconcileChildren(current, workInProgress, newChildren, renderLanes);\n  return workInProgress.child;\n}\n\nlet hasWarnedAboutUsingContextAsConsumer = false;\n\nfunction updateContextConsumer(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  renderLanes: Lanes,\n) {\n  let context: ReactContext<any> = workInProgress.type;\n  // The logic below for Context differs depending on PROD or DEV mode. In\n  // DEV mode, we create a separate object for Context.Consumer that acts\n  // like a proxy to Context. This proxy object adds unnecessary code in PROD\n  // so we use the old behaviour (Context.Consumer references Context) to\n  // reduce size and overhead. The separate object references context via\n  // a property called \"_context\", which also gives us the ability to check\n  // in DEV mode if this property exists or not and warn if it does not.\n  if (__DEV__) {\n    if ((context: any)._context === undefined) {\n      // This may be because it's a Context (rather than a Consumer).\n      // Or it may be because it's older React where they're the same thing.\n      // We only want to warn if we're sure it's a new React.\n      if (context !== context.Consumer) {\n        if (!hasWarnedAboutUsingContextAsConsumer) {\n          hasWarnedAboutUsingContextAsConsumer = true;\n          console.error(\n            'Rendering <Context> directly is not supported and will be removed in ' +\n              'a future major release. Did you mean to render <Context.Consumer> instead?',\n          );\n        }\n      }\n    } else {\n      context = (context: any)._context;\n    }\n  }\n  const newProps = workInProgress.pendingProps;\n  const render = newProps.children;\n\n  if (__DEV__) {\n    if (typeof render !== 'function') {\n      console.error(\n        'A context consumer was rendered with multiple children, or a child ' +\n          \"that isn't a function. A context consumer expects a single child \" +\n          'that is a function. If you did pass a function, make sure there ' +\n          'is no trailing or leading whitespace around it.',\n      );\n    }\n  }\n\n  prepareToReadContext(workInProgress, renderLanes);\n  const newValue = readContext(context, newProps.unstable_observedBits);\n  let newChildren;\n  if (__DEV__) {\n    ReactCurrentOwner.current = workInProgress;\n    setIsRendering(true);\n    newChildren = render(newValue);\n    setIsRendering(false);\n  } else {\n    newChildren = render(newValue);\n  }\n\n  // React DevTools reads this flag.\n  workInProgress.flags |= PerformedWork;\n  reconcileChildren(current, workInProgress, newChildren, renderLanes);\n  return workInProgress.child;\n}\n\nfunction updateFundamentalComponent(current, workInProgress, renderLanes) {\n  const fundamentalImpl = workInProgress.type.impl;\n  if (fundamentalImpl.reconcileChildren === false) {\n    return null;\n  }\n  const nextProps = workInProgress.pendingProps;\n  const nextChildren = nextProps.children;\n\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  return workInProgress.child;\n}\n\nfunction updateScopeComponent(current, workInProgress, renderLanes) {\n  const nextProps = workInProgress.pendingProps;\n  const nextChildren = nextProps.children;\n\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  return workInProgress.child;\n}\n\nexport function markWorkInProgressReceivedUpdate() {\n  didReceiveUpdate = true;\n}\n\nfunction bailoutOnAlreadyFinishedWork(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  renderLanes: Lanes,\n): Fiber | null {\n  if (current !== null) {\n    // Reuse previous dependencies\n    workInProgress.dependencies = current.dependencies;\n  }\n\n  if (enableProfilerTimer) {\n    // Don't update \"base\" render times for bailouts.\n    stopProfilerTimerIfRunning(workInProgress);\n  }\n\n  markSkippedUpdateLanes(workInProgress.lanes);\n\n  // Check if the children have any pending work.\n  if (!includesSomeLane(renderLanes, workInProgress.childLanes)) {\n    // The children don't have any work either. We can skip them.\n    // TODO: Once we add back resuming, we should check if the children are\n    // a work-in-progress set. If so, we need to transfer their effects.\n    return null;\n  } else {\n    // This fiber doesn't have work, but its subtree does. Clone the child\n    // fibers and continue.\n    cloneChildFibers(current, workInProgress);\n    return workInProgress.child;\n  }\n}\n\nfunction remountFiber(\n  current: Fiber,\n  oldWorkInProgress: Fiber,\n  newWorkInProgress: Fiber,\n): Fiber | null {\n  if (__DEV__) {\n    const returnFiber = oldWorkInProgress.return;\n    if (returnFiber === null) {\n      throw new Error('Cannot swap the root fiber.');\n    }\n\n    // Disconnect from the old current.\n    // It will get deleted.\n    current.alternate = null;\n    oldWorkInProgress.alternate = null;\n\n    // Connect to the new tree.\n    newWorkInProgress.index = oldWorkInProgress.index;\n    newWorkInProgress.sibling = oldWorkInProgress.sibling;\n    newWorkInProgress.return = oldWorkInProgress.return;\n    newWorkInProgress.ref = oldWorkInProgress.ref;\n\n    // Replace the child/sibling pointers above it.\n    if (oldWorkInProgress === returnFiber.child) {\n      returnFiber.child = newWorkInProgress;\n    } else {\n      let prevSibling = returnFiber.child;\n      if (prevSibling === null) {\n        throw new Error('Expected parent to have a child.');\n      }\n      while (prevSibling.sibling !== oldWorkInProgress) {\n        prevSibling = prevSibling.sibling;\n        if (prevSibling === null) {\n          throw new Error('Expected to find the previous sibling.');\n        }\n      }\n      prevSibling.sibling = newWorkInProgress;\n    }\n\n    // Delete the old fiber and place the new one.\n    // Since the old fiber is disconnected, we have to schedule it manually.\n    const last = returnFiber.lastEffect;\n    if (last !== null) {\n      last.nextEffect = current;\n      returnFiber.lastEffect = current;\n    } else {\n      returnFiber.firstEffect = returnFiber.lastEffect = current;\n    }\n    current.nextEffect = null;\n    current.flags = Deletion;\n\n    newWorkInProgress.flags |= Placement;\n\n    // Restart work from the new fiber.\n    return newWorkInProgress;\n  } else {\n    throw new Error(\n      'Did not expect this call in production. ' +\n        'This is a bug in React. Please file an issue.',\n    );\n  }\n}\n\nfunction beginWork(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  renderLanes: Lanes,\n): Fiber | null {\n  const updateLanes = workInProgress.lanes;\n\n  if (__DEV__) {\n    if (workInProgress._debugNeedsRemount && current !== null) {\n      // This will restart the begin phase with a new fiber.\n      return remountFiber(\n        current,\n        workInProgress,\n        createFiberFromTypeAndProps(\n          workInProgress.type,\n          workInProgress.key,\n          workInProgress.pendingProps,\n          workInProgress._debugOwner || null,\n          workInProgress.mode,\n          workInProgress.lanes,\n        ),\n      );\n    }\n  }\n\n  if (current !== null) {\n    const oldProps = current.memoizedProps;\n    const newProps = workInProgress.pendingProps;\n\n    if (\n      oldProps !== newProps ||\n      hasLegacyContextChanged() ||\n      // Force a re-render if the implementation changed due to hot reload:\n      (__DEV__ ? workInProgress.type !== current.type : false)\n    ) {\n      // If props or context changed, mark the fiber as having performed work.\n      // This may be unset if the props are determined to be equal later (memo).\n      didReceiveUpdate = true;\n    } else if (!includesSomeLane(renderLanes, updateLanes)) {\n      didReceiveUpdate = false;\n      // This fiber does not have any pending work. Bailout without entering\n      // the begin phase. There's still some bookkeeping we that needs to be done\n      // in this optimized path, mostly pushing stuff onto the stack.\n      switch (workInProgress.tag) {\n        case HostRoot:\n          pushHostRootContext(workInProgress);\n          resetHydrationState();\n          break;\n        case HostComponent:\n          pushHostContext(workInProgress);\n          break;\n        case ClassComponent: {\n          const Component = workInProgress.type;\n          if (isLegacyContextProvider(Component)) {\n            pushLegacyContextProvider(workInProgress);\n          }\n          break;\n        }\n        case HostPortal:\n          pushHostContainer(\n            workInProgress,\n            workInProgress.stateNode.containerInfo,\n          );\n          break;\n        case ContextProvider: {\n          const newValue = workInProgress.memoizedProps.value;\n          pushProvider(workInProgress, newValue);\n          break;\n        }\n        case Profiler:\n          if (enableProfilerTimer) {\n            // Profiler should only call onRender when one of its descendants actually rendered.\n            const hasChildWork = includesSomeLane(\n              renderLanes,\n              workInProgress.childLanes,\n            );\n            if (hasChildWork) {\n              workInProgress.flags |= Update;\n            }\n\n            // Reset effect durations for the next eventual effect phase.\n            // These are reset during render to allow the DevTools commit hook a chance to read them,\n            const stateNode = workInProgress.stateNode;\n            stateNode.effectDuration = 0;\n            stateNode.passiveEffectDuration = 0;\n          }\n          break;\n        case SuspenseComponent: {\n          const state: SuspenseState | null = workInProgress.memoizedState;\n          if (state !== null) {\n            if (enableSuspenseServerRenderer) {\n              if (state.dehydrated !== null) {\n                pushSuspenseContext(\n                  workInProgress,\n                  setDefaultShallowSuspenseContext(suspenseStackCursor.current),\n                );\n                // We know that this component will suspend again because if it has\n                // been unsuspended it has committed as a resolved Suspense component.\n                // If it needs to be retried, it should have work scheduled on it.\n                workInProgress.flags |= DidCapture;\n                // We should never render the children of a dehydrated boundary until we\n                // upgrade it. We return null instead of bailoutOnAlreadyFinishedWork.\n                return null;\n              }\n            }\n\n            // If this boundary is currently timed out, we need to decide\n            // whether to retry the primary children, or to skip over it and\n            // go straight to the fallback. Check the priority of the primary\n            // child fragment.\n            const primaryChildFragment: Fiber = (workInProgress.child: any);\n            const primaryChildLanes = primaryChildFragment.childLanes;\n            if (includesSomeLane(renderLanes, primaryChildLanes)) {\n              // The primary children have pending work. Use the normal path\n              // to attempt to render the primary children again.\n              return updateSuspenseComponent(\n                current,\n                workInProgress,\n                renderLanes,\n              );\n            } else {\n              // The primary child fragment does not have pending work marked\n              // on it\n              pushSuspenseContext(\n                workInProgress,\n                setDefaultShallowSuspenseContext(suspenseStackCursor.current),\n              );\n              // The primary children do not have pending work with sufficient\n              // priority. Bailout.\n              const child = bailoutOnAlreadyFinishedWork(\n                current,\n                workInProgress,\n                renderLanes,\n              );\n              if (child !== null) {\n                // The fallback children have pending work. Skip over the\n                // primary children and work on the fallback.\n                return child.sibling;\n              } else {\n                return null;\n              }\n            }\n          } else {\n            pushSuspenseContext(\n              workInProgress,\n              setDefaultShallowSuspenseContext(suspenseStackCursor.current),\n            );\n          }\n          break;\n        }\n        case SuspenseListComponent: {\n          const didSuspendBefore = (current.flags & DidCapture) !== NoFlags;\n\n          const hasChildWork = includesSomeLane(\n            renderLanes,\n            workInProgress.childLanes,\n          );\n\n          if (didSuspendBefore) {\n            if (hasChildWork) {\n              // If something was in fallback state last time, and we have all the\n              // same children then we're still in progressive loading state.\n              // Something might get unblocked by state updates or retries in the\n              // tree which will affect the tail. So we need to use the normal\n              // path to compute the correct tail.\n              return updateSuspenseListComponent(\n                current,\n                workInProgress,\n                renderLanes,\n              );\n            }\n            // If none of the children had any work, that means that none of\n            // them got retried so they'll still be blocked in the same way\n            // as before. We can fast bail out.\n            workInProgress.flags |= DidCapture;\n          }\n\n          // If nothing suspended before and we're rendering the same children,\n          // then the tail doesn't matter. Anything new that suspends will work\n          // in the \"together\" mode, so we can continue from the state we had.\n          const renderState = workInProgress.memoizedState;\n          if (renderState !== null) {\n            // Reset to the \"together\" mode in case we've started a different\n            // update in the past but didn't complete it.\n            renderState.rendering = null;\n            renderState.tail = null;\n            renderState.lastEffect = null;\n          }\n          pushSuspenseContext(workInProgress, suspenseStackCursor.current);\n\n          if (hasChildWork) {\n            break;\n          } else {\n            // If none of the children had any work, that means that none of\n            // them got retried so they'll still be blocked in the same way\n            // as before. We can fast bail out.\n            return null;\n          }\n        }\n        case OffscreenComponent:\n        case LegacyHiddenComponent: {\n          // Need to check if the tree still needs to be deferred. This is\n          // almost identical to the logic used in the normal update path,\n          // so we'll just enter that. The only difference is we'll bail out\n          // at the next level instead of this one, because the child props\n          // have not changed. Which is fine.\n          // TODO: Probably should refactor `beginWork` to split the bailout\n          // path from the normal path. I'm tempted to do a labeled break here\n          // but I won't :)\n          workInProgress.lanes = NoLanes;\n          return updateOffscreenComponent(current, workInProgress, renderLanes);\n        }\n      }\n      return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n    } else {\n      if ((current.flags & ForceUpdateForLegacySuspense) !== NoFlags) {\n        // This is a special case that only exists for legacy mode.\n        // See https://github.com/facebook/react/pull/19216.\n        didReceiveUpdate = true;\n      } else {\n        // An update was scheduled on this fiber, but there are no new props\n        // nor legacy context. Set this to false. If an update queue or context\n        // consumer produces a changed value, it will set this to true. Otherwise,\n        // the component will assume the children have not changed and bail out.\n        didReceiveUpdate = false;\n      }\n    }\n  } else {\n    didReceiveUpdate = false;\n  }\n\n  // Before entering the begin phase, clear pending update priority.\n  // TODO: This assumes that we're about to evaluate the component and process\n  // the update queue. However, there's an exception: SimpleMemoComponent\n  // sometimes bails out later in the begin phase. This indicates that we should\n  // move this assignment out of the common path and into each branch.\n  workInProgress.lanes = NoLanes;\n\n  switch (workInProgress.tag) {\n    case IndeterminateComponent: {\n      return mountIndeterminateComponent(\n        current,\n        workInProgress,\n        workInProgress.type,\n        renderLanes,\n      );\n    }\n    case LazyComponent: {\n      const elementType = workInProgress.elementType;\n      return mountLazyComponent(\n        current,\n        workInProgress,\n        elementType,\n        updateLanes,\n        renderLanes,\n      );\n    }\n    case FunctionComponent: {\n      const Component = workInProgress.type;\n      const unresolvedProps = workInProgress.pendingProps;\n      const resolvedProps =\n        workInProgress.elementType === Component\n          ? unresolvedProps\n          : resolveDefaultProps(Component, unresolvedProps);\n      return updateFunctionComponent(\n        current,\n        workInProgress,\n        Component,\n        resolvedProps,\n        renderLanes,\n      );\n    }\n    case ClassComponent: {\n      const Component = workInProgress.type;\n      const unresolvedProps = workInProgress.pendingProps;\n      const resolvedProps =\n        workInProgress.elementType === Component\n          ? unresolvedProps\n          : resolveDefaultProps(Component, unresolvedProps);\n      return updateClassComponent(\n        current,\n        workInProgress,\n        Component,\n        resolvedProps,\n        renderLanes,\n      );\n    }\n    case HostRoot:\n      return updateHostRoot(current, workInProgress, renderLanes);\n    case HostComponent:\n      return updateHostComponent(current, workInProgress, renderLanes);\n    case HostText:\n      return updateHostText(current, workInProgress);\n    case SuspenseComponent:\n      return updateSuspenseComponent(current, workInProgress, renderLanes);\n    case HostPortal:\n      return updatePortalComponent(current, workInProgress, renderLanes);\n    case ForwardRef: {\n      const type = workInProgress.type;\n      const unresolvedProps = workInProgress.pendingProps;\n      const resolvedProps =\n        workInProgress.elementType === type\n          ? unresolvedProps\n          : resolveDefaultProps(type, unresolvedProps);\n      return updateForwardRef(\n        current,\n        workInProgress,\n        type,\n        resolvedProps,\n        renderLanes,\n      );\n    }\n    case Fragment:\n      return updateFragment(current, workInProgress, renderLanes);\n    case Mode:\n      return updateMode(current, workInProgress, renderLanes);\n    case Profiler:\n      return updateProfiler(current, workInProgress, renderLanes);\n    case ContextProvider:\n      return updateContextProvider(current, workInProgress, renderLanes);\n    case ContextConsumer:\n      return updateContextConsumer(current, workInProgress, renderLanes);\n    case MemoComponent: {\n      const type = workInProgress.type;\n      const unresolvedProps = workInProgress.pendingProps;\n      // Resolve outer props first, then resolve inner props.\n      let resolvedProps = resolveDefaultProps(type, unresolvedProps);\n      if (__DEV__) {\n        if (workInProgress.type !== workInProgress.elementType) {\n          const outerPropTypes = type.propTypes;\n          if (outerPropTypes) {\n            checkPropTypes(\n              outerPropTypes,\n              resolvedProps, // Resolved for outer only\n              'prop',\n              getComponentName(type),\n            );\n          }\n        }\n      }\n      resolvedProps = resolveDefaultProps(type.type, resolvedProps);\n      return updateMemoComponent(\n        current,\n        workInProgress,\n        type,\n        resolvedProps,\n        updateLanes,\n        renderLanes,\n      );\n    }\n    case SimpleMemoComponent: {\n      return updateSimpleMemoComponent(\n        current,\n        workInProgress,\n        workInProgress.type,\n        workInProgress.pendingProps,\n        updateLanes,\n        renderLanes,\n      );\n    }\n    case IncompleteClassComponent: {\n      const Component = workInProgress.type;\n      const unresolvedProps = workInProgress.pendingProps;\n      const resolvedProps =\n        workInProgress.elementType === Component\n          ? unresolvedProps\n          : resolveDefaultProps(Component, unresolvedProps);\n      return mountIncompleteClassComponent(\n        current,\n        workInProgress,\n        Component,\n        resolvedProps,\n        renderLanes,\n      );\n    }\n    case SuspenseListComponent: {\n      return updateSuspenseListComponent(current, workInProgress, renderLanes);\n    }\n    case FundamentalComponent: {\n      if (enableFundamentalAPI) {\n        return updateFundamentalComponent(current, workInProgress, renderLanes);\n      }\n      break;\n    }\n    case ScopeComponent: {\n      if (enableScopeAPI) {\n        return updateScopeComponent(current, workInProgress, renderLanes);\n      }\n      break;\n    }\n    case Block: {\n      if (enableBlocksAPI) {\n        const block = workInProgress.type;\n        const props = workInProgress.pendingProps;\n        return updateBlock(current, workInProgress, block, props, renderLanes);\n      }\n      break;\n    }\n    case OffscreenComponent: {\n      return updateOffscreenComponent(current, workInProgress, renderLanes);\n    }\n    case LegacyHiddenComponent: {\n      return updateLegacyHiddenComponent(current, workInProgress, renderLanes);\n    }\n  }\n  invariant(\n    false,\n    'Unknown unit of work tag (%s). This error is likely caused by a bug in ' +\n      'React. Please file an issue.',\n    workInProgress.tag,\n  );\n}\n\nexport {beginWork};\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactInternalTypes';\nimport type {Lanes} from './ReactFiberLane';\nimport type {\n  ReactFundamentalComponentInstance,\n  ReactScopeInstance,\n} from 'shared/ReactTypes';\nimport type {FiberRoot} from './ReactInternalTypes';\nimport type {\n  Instance,\n  Type,\n  Props,\n  Container,\n  ChildSet,\n} from './ReactFiberHostConfig';\nimport type {\n  SuspenseState,\n  SuspenseListRenderState,\n} from './ReactFiberSuspenseComponent.old';\nimport type {SuspenseContext} from './ReactFiberSuspenseContext.old';\nimport type {OffscreenState} from './ReactFiberOffscreenComponent';\n\nimport {resetWorkInProgressVersions as resetMutableSourceWorkInProgressVersions} from './ReactMutableSource.old';\n\nimport {now} from './SchedulerWithReactIntegration.old';\n\nimport {\n  IndeterminateComponent,\n  FunctionComponent,\n  ClassComponent,\n  HostRoot,\n  HostComponent,\n  HostText,\n  HostPortal,\n  ContextProvider,\n  ContextConsumer,\n  ForwardRef,\n  Fragment,\n  Mode,\n  Profiler,\n  SuspenseComponent,\n  SuspenseListComponent,\n  MemoComponent,\n  SimpleMemoComponent,\n  LazyComponent,\n  IncompleteClassComponent,\n  FundamentalComponent,\n  ScopeComponent,\n  Block,\n  OffscreenComponent,\n  LegacyHiddenComponent,\n} from './ReactWorkTags';\nimport {NoMode, BlockingMode, ProfileMode} from './ReactTypeOfMode';\nimport {Ref, Update, NoFlags, DidCapture, Snapshot} from './ReactFiberFlags';\nimport invariant from 'shared/invariant';\n\nimport {\n  createInstance,\n  createTextInstance,\n  appendInitialChild,\n  finalizeInitialChildren,\n  prepareUpdate,\n  supportsMutation,\n  supportsPersistence,\n  cloneInstance,\n  cloneHiddenInstance,\n  cloneHiddenTextInstance,\n  createContainerChildSet,\n  appendChildToContainerChildSet,\n  finalizeContainerChildren,\n  getFundamentalComponentInstance,\n  mountFundamentalComponent,\n  cloneFundamentalInstance,\n  shouldUpdateFundamentalComponent,\n  preparePortalMount,\n  prepareScopeUpdate,\n} from './ReactFiberHostConfig';\nimport {\n  getRootHostContainer,\n  popHostContext,\n  getHostContext,\n  popHostContainer,\n} from './ReactFiberHostContext.old';\nimport {\n  suspenseStackCursor,\n  InvisibleParentSuspenseContext,\n  hasSuspenseContext,\n  popSuspenseContext,\n  pushSuspenseContext,\n  setShallowSuspenseContext,\n  ForceSuspenseFallback,\n  setDefaultShallowSuspenseContext,\n} from './ReactFiberSuspenseContext.old';\nimport {findFirstSuspended} from './ReactFiberSuspenseComponent.old';\nimport {\n  isContextProvider as isLegacyContextProvider,\n  popContext as popLegacyContext,\n  popTopLevelContextObject as popTopLevelLegacyContextObject,\n} from './ReactFiberContext.old';\nimport {popProvider} from './ReactFiberNewContext.old';\nimport {\n  prepareToHydrateHostInstance,\n  prepareToHydrateHostTextInstance,\n  prepareToHydrateHostSuspenseInstance,\n  popHydrationState,\n  resetHydrationState,\n  getIsHydrating,\n} from './ReactFiberHydrationContext.old';\nimport {\n  enableSchedulerTracing,\n  enableSuspenseCallback,\n  enableSuspenseServerRenderer,\n  enableFundamentalAPI,\n  enableScopeAPI,\n  enableBlocksAPI,\n  enableProfilerTimer,\n} from 'shared/ReactFeatureFlags';\nimport {\n  markSpawnedWork,\n  renderDidSuspend,\n  renderDidSuspendDelayIfPossible,\n  renderHasNotSuspendedYet,\n  popRenderLanes,\n  getRenderTargetTime,\n} from './ReactFiberWorkLoop.old';\nimport {createFundamentalStateInstance} from './ReactFiberFundamental.old';\nimport {OffscreenLane, SomeRetryLane} from './ReactFiberLane';\nimport {resetChildFibers} from './ReactChildFiber.old';\nimport {createScopeInstance} from './ReactFiberScope.old';\nimport {transferActualDuration} from './ReactProfilerTimer.old';\n\nfunction markUpdate(workInProgress: Fiber) {\n  // Tag the fiber with an update effect. This turns a Placement into\n  // a PlacementAndUpdate.\n  workInProgress.flags |= Update;\n}\n\nfunction markRef(workInProgress: Fiber) {\n  workInProgress.flags |= Ref;\n}\n\nlet appendAllChildren;\nlet updateHostContainer;\nlet updateHostComponent;\nlet updateHostText;\nif (supportsMutation) {\n  // Mutation mode\n\n  appendAllChildren = function(\n    parent: Instance,\n    workInProgress: Fiber,\n    needsVisibilityToggle: boolean,\n    isHidden: boolean,\n  ) {\n    // We only have the top Fiber that was created but we need recurse down its\n    // children to find all the terminal nodes.\n    let node = workInProgress.child;\n    while (node !== null) {\n      if (node.tag === HostComponent || node.tag === HostText) {\n        appendInitialChild(parent, node.stateNode);\n      } else if (enableFundamentalAPI && node.tag === FundamentalComponent) {\n        appendInitialChild(parent, node.stateNode.instance);\n      } else if (node.tag === HostPortal) {\n        // If we have a portal child, then we don't want to traverse\n        // down its children. Instead, we'll get insertions from each child in\n        // the portal directly.\n      } else if (node.child !== null) {\n        node.child.return = node;\n        node = node.child;\n        continue;\n      }\n      if (node === workInProgress) {\n        return;\n      }\n      while (node.sibling === null) {\n        if (node.return === null || node.return === workInProgress) {\n          return;\n        }\n        node = node.return;\n      }\n      node.sibling.return = node.return;\n      node = node.sibling;\n    }\n  };\n\n  updateHostContainer = function(workInProgress: Fiber) {\n    // Noop\n  };\n  updateHostComponent = function(\n    current: Fiber,\n    workInProgress: Fiber,\n    type: Type,\n    newProps: Props,\n    rootContainerInstance: Container,\n  ) {\n    // If we have an alternate, that means this is an update and we need to\n    // schedule a side-effect to do the updates.\n    const oldProps = current.memoizedProps;\n    if (oldProps === newProps) {\n      // In mutation mode, this is sufficient for a bailout because\n      // we won't touch this node even if children changed.\n      return;\n    }\n\n    // If we get updated because one of our children updated, we don't\n    // have newProps so we'll have to reuse them.\n    // TODO: Split the update API as separate for the props vs. children.\n    // Even better would be if children weren't special cased at all tho.\n    const instance: Instance = workInProgress.stateNode;\n    const currentHostContext = getHostContext();\n    // TODO: Experiencing an error where oldProps is null. Suggests a host\n    // component is hitting the resume path. Figure out why. Possibly\n    // related to `hidden`.\n    const updatePayload = prepareUpdate(\n      instance,\n      type,\n      oldProps,\n      newProps,\n      rootContainerInstance,\n      currentHostContext,\n    );\n    // TODO: Type this specific to this type of component.\n    workInProgress.updateQueue = (updatePayload: any);\n    // If the update payload indicates that there is a change or if there\n    // is a new ref we mark this as an update. All the work is done in commitWork.\n    if (updatePayload) {\n      markUpdate(workInProgress);\n    }\n  };\n  updateHostText = function(\n    current: Fiber,\n    workInProgress: Fiber,\n    oldText: string,\n    newText: string,\n  ) {\n    // If the text differs, mark it as an update. All the work in done in commitWork.\n    if (oldText !== newText) {\n      markUpdate(workInProgress);\n    }\n  };\n} else if (supportsPersistence) {\n  // Persistent host tree mode\n\n  appendAllChildren = function(\n    parent: Instance,\n    workInProgress: Fiber,\n    needsVisibilityToggle: boolean,\n    isHidden: boolean,\n  ) {\n    // We only have the top Fiber that was created but we need recurse down its\n    // children to find all the terminal nodes.\n    let node = workInProgress.child;\n    while (node !== null) {\n      // eslint-disable-next-line no-labels\n      branches: if (node.tag === HostComponent) {\n        let instance = node.stateNode;\n        if (needsVisibilityToggle && isHidden) {\n          // This child is inside a timed out tree. Hide it.\n          const props = node.memoizedProps;\n          const type = node.type;\n          instance = cloneHiddenInstance(instance, type, props, node);\n        }\n        appendInitialChild(parent, instance);\n      } else if (node.tag === HostText) {\n        let instance = node.stateNode;\n        if (needsVisibilityToggle && isHidden) {\n          // This child is inside a timed out tree. Hide it.\n          const text = node.memoizedProps;\n          instance = cloneHiddenTextInstance(instance, text, node);\n        }\n        appendInitialChild(parent, instance);\n      } else if (enableFundamentalAPI && node.tag === FundamentalComponent) {\n        let instance = node.stateNode.instance;\n        if (needsVisibilityToggle && isHidden) {\n          // This child is inside a timed out tree. Hide it.\n          const props = node.memoizedProps;\n          const type = node.type;\n          instance = cloneHiddenInstance(instance, type, props, node);\n        }\n        appendInitialChild(parent, instance);\n      } else if (node.tag === HostPortal) {\n        // If we have a portal child, then we don't want to traverse\n        // down its children. Instead, we'll get insertions from each child in\n        // the portal directly.\n      } else if (node.tag === SuspenseComponent) {\n        if ((node.flags & Update) !== NoFlags) {\n          // Need to toggle the visibility of the primary children.\n          const newIsHidden = node.memoizedState !== null;\n          if (newIsHidden) {\n            const primaryChildParent = node.child;\n            if (primaryChildParent !== null) {\n              if (primaryChildParent.child !== null) {\n                primaryChildParent.child.return = primaryChildParent;\n                appendAllChildren(\n                  parent,\n                  primaryChildParent,\n                  true,\n                  newIsHidden,\n                );\n              }\n              const fallbackChildParent = primaryChildParent.sibling;\n              if (fallbackChildParent !== null) {\n                fallbackChildParent.return = node;\n                node = fallbackChildParent;\n                continue;\n              }\n            }\n          }\n        }\n        if (node.child !== null) {\n          // Continue traversing like normal\n          node.child.return = node;\n          node = node.child;\n          continue;\n        }\n      } else if (node.child !== null) {\n        node.child.return = node;\n        node = node.child;\n        continue;\n      }\n      // $FlowFixMe This is correct but Flow is confused by the labeled break.\n      node = (node: Fiber);\n      if (node === workInProgress) {\n        return;\n      }\n      while (node.sibling === null) {\n        if (node.return === null || node.return === workInProgress) {\n          return;\n        }\n        node = node.return;\n      }\n      node.sibling.return = node.return;\n      node = node.sibling;\n    }\n  };\n\n  // An unfortunate fork of appendAllChildren because we have two different parent types.\n  const appendAllChildrenToContainer = function(\n    containerChildSet: ChildSet,\n    workInProgress: Fiber,\n    needsVisibilityToggle: boolean,\n    isHidden: boolean,\n  ) {\n    // We only have the top Fiber that was created but we need recurse down its\n    // children to find all the terminal nodes.\n    let node = workInProgress.child;\n    while (node !== null) {\n      // eslint-disable-next-line no-labels\n      branches: if (node.tag === HostComponent) {\n        let instance = node.stateNode;\n        if (needsVisibilityToggle && isHidden) {\n          // This child is inside a timed out tree. Hide it.\n          const props = node.memoizedProps;\n          const type = node.type;\n          instance = cloneHiddenInstance(instance, type, props, node);\n        }\n        appendChildToContainerChildSet(containerChildSet, instance);\n      } else if (node.tag === HostText) {\n        let instance = node.stateNode;\n        if (needsVisibilityToggle && isHidden) {\n          // This child is inside a timed out tree. Hide it.\n          const text = node.memoizedProps;\n          instance = cloneHiddenTextInstance(instance, text, node);\n        }\n        appendChildToContainerChildSet(containerChildSet, instance);\n      } else if (enableFundamentalAPI && node.tag === FundamentalComponent) {\n        let instance = node.stateNode.instance;\n        if (needsVisibilityToggle && isHidden) {\n          // This child is inside a timed out tree. Hide it.\n          const props = node.memoizedProps;\n          const type = node.type;\n          instance = cloneHiddenInstance(instance, type, props, node);\n        }\n        appendChildToContainerChildSet(containerChildSet, instance);\n      } else if (node.tag === HostPortal) {\n        // If we have a portal child, then we don't want to traverse\n        // down its children. Instead, we'll get insertions from each child in\n        // the portal directly.\n      } else if (node.tag === SuspenseComponent) {\n        if ((node.flags & Update) !== NoFlags) {\n          // Need to toggle the visibility of the primary children.\n          const newIsHidden = node.memoizedState !== null;\n          if (newIsHidden) {\n            const primaryChildParent = node.child;\n            if (primaryChildParent !== null) {\n              if (primaryChildParent.child !== null) {\n                primaryChildParent.child.return = primaryChildParent;\n                appendAllChildrenToContainer(\n                  containerChildSet,\n                  primaryChildParent,\n                  true,\n                  newIsHidden,\n                );\n              }\n              const fallbackChildParent = primaryChildParent.sibling;\n              if (fallbackChildParent !== null) {\n                fallbackChildParent.return = node;\n                node = fallbackChildParent;\n                continue;\n              }\n            }\n          }\n        }\n        if (node.child !== null) {\n          // Continue traversing like normal\n          node.child.return = node;\n          node = node.child;\n          continue;\n        }\n      } else if (node.child !== null) {\n        node.child.return = node;\n        node = node.child;\n        continue;\n      }\n      // $FlowFixMe This is correct but Flow is confused by the labeled break.\n      node = (node: Fiber);\n      if (node === workInProgress) {\n        return;\n      }\n      while (node.sibling === null) {\n        if (node.return === null || node.return === workInProgress) {\n          return;\n        }\n        node = node.return;\n      }\n      node.sibling.return = node.return;\n      node = node.sibling;\n    }\n  };\n  updateHostContainer = function(workInProgress: Fiber) {\n    const portalOrRoot: {\n      containerInfo: Container,\n      pendingChildren: ChildSet,\n      ...\n    } = workInProgress.stateNode;\n    const childrenUnchanged = workInProgress.firstEffect === null;\n    if (childrenUnchanged) {\n      // No changes, just reuse the existing instance.\n    } else {\n      const container = portalOrRoot.containerInfo;\n      const newChildSet = createContainerChildSet(container);\n      // If children might have changed, we have to add them all to the set.\n      appendAllChildrenToContainer(newChildSet, workInProgress, false, false);\n      portalOrRoot.pendingChildren = newChildSet;\n      // Schedule an update on the container to swap out the container.\n      markUpdate(workInProgress);\n      finalizeContainerChildren(container, newChildSet);\n    }\n  };\n  updateHostComponent = function(\n    current: Fiber,\n    workInProgress: Fiber,\n    type: Type,\n    newProps: Props,\n    rootContainerInstance: Container,\n  ) {\n    const currentInstance = current.stateNode;\n    const oldProps = current.memoizedProps;\n    // If there are no effects associated with this node, then none of our children had any updates.\n    // This guarantees that we can reuse all of them.\n    const childrenUnchanged = workInProgress.firstEffect === null;\n    if (childrenUnchanged && oldProps === newProps) {\n      // No changes, just reuse the existing instance.\n      // Note that this might release a previous clone.\n      workInProgress.stateNode = currentInstance;\n      return;\n    }\n    const recyclableInstance: Instance = workInProgress.stateNode;\n    const currentHostContext = getHostContext();\n    let updatePayload = null;\n    if (oldProps !== newProps) {\n      updatePayload = prepareUpdate(\n        recyclableInstance,\n        type,\n        oldProps,\n        newProps,\n        rootContainerInstance,\n        currentHostContext,\n      );\n    }\n    if (childrenUnchanged && updatePayload === null) {\n      // No changes, just reuse the existing instance.\n      // Note that this might release a previous clone.\n      workInProgress.stateNode = currentInstance;\n      return;\n    }\n    const newInstance = cloneInstance(\n      currentInstance,\n      updatePayload,\n      type,\n      oldProps,\n      newProps,\n      workInProgress,\n      childrenUnchanged,\n      recyclableInstance,\n    );\n    if (\n      finalizeInitialChildren(\n        newInstance,\n        type,\n        newProps,\n        rootContainerInstance,\n        currentHostContext,\n      )\n    ) {\n      markUpdate(workInProgress);\n    }\n    workInProgress.stateNode = newInstance;\n    if (childrenUnchanged) {\n      // If there are no other effects in this tree, we need to flag this node as having one.\n      // Even though we're not going to use it for anything.\n      // Otherwise parents won't know that there are new children to propagate upwards.\n      markUpdate(workInProgress);\n    } else {\n      // If children might have changed, we have to add them all to the set.\n      appendAllChildren(newInstance, workInProgress, false, false);\n    }\n  };\n  updateHostText = function(\n    current: Fiber,\n    workInProgress: Fiber,\n    oldText: string,\n    newText: string,\n  ) {\n    if (oldText !== newText) {\n      // If the text content differs, we'll create a new text instance for it.\n      const rootContainerInstance = getRootHostContainer();\n      const currentHostContext = getHostContext();\n      workInProgress.stateNode = createTextInstance(\n        newText,\n        rootContainerInstance,\n        currentHostContext,\n        workInProgress,\n      );\n      // We'll have to mark it as having an effect, even though we won't use the effect for anything.\n      // This lets the parents know that at least one of their children has changed.\n      markUpdate(workInProgress);\n    } else {\n      workInProgress.stateNode = current.stateNode;\n    }\n  };\n} else {\n  // No host operations\n  updateHostContainer = function(workInProgress: Fiber) {\n    // Noop\n  };\n  updateHostComponent = function(\n    current: Fiber,\n    workInProgress: Fiber,\n    type: Type,\n    newProps: Props,\n    rootContainerInstance: Container,\n  ) {\n    // Noop\n  };\n  updateHostText = function(\n    current: Fiber,\n    workInProgress: Fiber,\n    oldText: string,\n    newText: string,\n  ) {\n    // Noop\n  };\n}\n\nfunction cutOffTailIfNeeded(\n  renderState: SuspenseListRenderState,\n  hasRenderedATailFallback: boolean,\n) {\n  if (getIsHydrating()) {\n    // If we're hydrating, we should consume as many items as we can\n    // so we don't leave any behind.\n    return;\n  }\n  switch (renderState.tailMode) {\n    case 'hidden': {\n      // Any insertions at the end of the tail list after this point\n      // should be invisible. If there are already mounted boundaries\n      // anything before them are not considered for collapsing.\n      // Therefore we need to go through the whole tail to find if\n      // there are any.\n      let tailNode = renderState.tail;\n      let lastTailNode = null;\n      while (tailNode !== null) {\n        if (tailNode.alternate !== null) {\n          lastTailNode = tailNode;\n        }\n        tailNode = tailNode.sibling;\n      }\n      // Next we're simply going to delete all insertions after the\n      // last rendered item.\n      if (lastTailNode === null) {\n        // All remaining items in the tail are insertions.\n        renderState.tail = null;\n      } else {\n        // Detach the insertion after the last node that was already\n        // inserted.\n        lastTailNode.sibling = null;\n      }\n      break;\n    }\n    case 'collapsed': {\n      // Any insertions at the end of the tail list after this point\n      // should be invisible. If there are already mounted boundaries\n      // anything before them are not considered for collapsing.\n      // Therefore we need to go through the whole tail to find if\n      // there are any.\n      let tailNode = renderState.tail;\n      let lastTailNode = null;\n      while (tailNode !== null) {\n        if (tailNode.alternate !== null) {\n          lastTailNode = tailNode;\n        }\n        tailNode = tailNode.sibling;\n      }\n      // Next we're simply going to delete all insertions after the\n      // last rendered item.\n      if (lastTailNode === null) {\n        // All remaining items in the tail are insertions.\n        if (!hasRenderedATailFallback && renderState.tail !== null) {\n          // We suspended during the head. We want to show at least one\n          // row at the tail. So we'll keep on and cut off the rest.\n          renderState.tail.sibling = null;\n        } else {\n          renderState.tail = null;\n        }\n      } else {\n        // Detach the insertion after the last node that was already\n        // inserted.\n        lastTailNode.sibling = null;\n      }\n      break;\n    }\n  }\n}\n\nfunction completeWork(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  renderLanes: Lanes,\n): Fiber | null {\n  const newProps = workInProgress.pendingProps;\n\n  switch (workInProgress.tag) {\n    case IndeterminateComponent:\n    case LazyComponent:\n    case SimpleMemoComponent:\n    case FunctionComponent:\n    case ForwardRef:\n    case Fragment:\n    case Mode:\n    case Profiler:\n    case ContextConsumer:\n    case MemoComponent:\n      return null;\n    case ClassComponent: {\n      const Component = workInProgress.type;\n      if (isLegacyContextProvider(Component)) {\n        popLegacyContext(workInProgress);\n      }\n      return null;\n    }\n    case HostRoot: {\n      popHostContainer(workInProgress);\n      popTopLevelLegacyContextObject(workInProgress);\n      resetMutableSourceWorkInProgressVersions();\n      const fiberRoot = (workInProgress.stateNode: FiberRoot);\n      if (fiberRoot.pendingContext) {\n        fiberRoot.context = fiberRoot.pendingContext;\n        fiberRoot.pendingContext = null;\n      }\n      if (current === null || current.child === null) {\n        // If we hydrated, pop so that we can delete any remaining children\n        // that weren't hydrated.\n        const wasHydrated = popHydrationState(workInProgress);\n        if (wasHydrated) {\n          // If we hydrated, then we'll need to schedule an update for\n          // the commit side-effects on the root.\n          markUpdate(workInProgress);\n        } else if (!fiberRoot.hydrate) {\n          // Schedule an effect to clear this container at the start of the next commit.\n          // This handles the case of React rendering into a container with previous children.\n          // It's also safe to do for updates too, because current.child would only be null\n          // if the previous render was null (so the the container would already be empty).\n          workInProgress.flags |= Snapshot;\n        }\n      }\n      updateHostContainer(workInProgress);\n      return null;\n    }\n    case HostComponent: {\n      popHostContext(workInProgress);\n      const rootContainerInstance = getRootHostContainer();\n      const type = workInProgress.type;\n      if (current !== null && workInProgress.stateNode != null) {\n        updateHostComponent(\n          current,\n          workInProgress,\n          type,\n          newProps,\n          rootContainerInstance,\n        );\n\n        if (current.ref !== workInProgress.ref) {\n          markRef(workInProgress);\n        }\n      } else {\n        if (!newProps) {\n          invariant(\n            workInProgress.stateNode !== null,\n            'We must have new props for new mounts. This error is likely ' +\n              'caused by a bug in React. Please file an issue.',\n          );\n          // This can happen when we abort work.\n          return null;\n        }\n\n        const currentHostContext = getHostContext();\n        // TODO: Move createInstance to beginWork and keep it on a context\n        // \"stack\" as the parent. Then append children as we go in beginWork\n        // or completeWork depending on whether we want to add them top->down or\n        // bottom->up. Top->down is faster in IE11.\n        const wasHydrated = popHydrationState(workInProgress);\n        if (wasHydrated) {\n          // TODO: Move this and createInstance step into the beginPhase\n          // to consolidate.\n          if (\n            prepareToHydrateHostInstance(\n              workInProgress,\n              rootContainerInstance,\n              currentHostContext,\n            )\n          ) {\n            // If changes to the hydrated node need to be applied at the\n            // commit-phase we mark this as such.\n            markUpdate(workInProgress);\n          }\n        } else {\n          const instance = createInstance(\n            type,\n            newProps,\n            rootContainerInstance,\n            currentHostContext,\n            workInProgress,\n          );\n\n          appendAllChildren(instance, workInProgress, false, false);\n\n          workInProgress.stateNode = instance;\n\n          // Certain renderers require commit-time effects for initial mount.\n          // (eg DOM renderer supports auto-focus for certain elements).\n          // Make sure such renderers get scheduled for later work.\n          if (\n            finalizeInitialChildren(\n              instance,\n              type,\n              newProps,\n              rootContainerInstance,\n              currentHostContext,\n            )\n          ) {\n            markUpdate(workInProgress);\n          }\n        }\n\n        if (workInProgress.ref !== null) {\n          // If there is a ref on a host node we need to schedule a callback\n          markRef(workInProgress);\n        }\n      }\n      return null;\n    }\n    case HostText: {\n      const newText = newProps;\n      if (current && workInProgress.stateNode != null) {\n        const oldText = current.memoizedProps;\n        // If we have an alternate, that means this is an update and we need\n        // to schedule a side-effect to do the updates.\n        updateHostText(current, workInProgress, oldText, newText);\n      } else {\n        if (typeof newText !== 'string') {\n          invariant(\n            workInProgress.stateNode !== null,\n            'We must have new props for new mounts. This error is likely ' +\n              'caused by a bug in React. Please file an issue.',\n          );\n          // This can happen when we abort work.\n        }\n        const rootContainerInstance = getRootHostContainer();\n        const currentHostContext = getHostContext();\n        const wasHydrated = popHydrationState(workInProgress);\n        if (wasHydrated) {\n          if (prepareToHydrateHostTextInstance(workInProgress)) {\n            markUpdate(workInProgress);\n          }\n        } else {\n          workInProgress.stateNode = createTextInstance(\n            newText,\n            rootContainerInstance,\n            currentHostContext,\n            workInProgress,\n          );\n        }\n      }\n      return null;\n    }\n    case SuspenseComponent: {\n      popSuspenseContext(workInProgress);\n      const nextState: null | SuspenseState = workInProgress.memoizedState;\n\n      if (enableSuspenseServerRenderer) {\n        if (nextState !== null && nextState.dehydrated !== null) {\n          if (current === null) {\n            const wasHydrated = popHydrationState(workInProgress);\n            invariant(\n              wasHydrated,\n              'A dehydrated suspense component was completed without a hydrated node. ' +\n                'This is probably a bug in React.',\n            );\n            prepareToHydrateHostSuspenseInstance(workInProgress);\n            if (enableSchedulerTracing) {\n              markSpawnedWork(OffscreenLane);\n            }\n            return null;\n          } else {\n            // We should never have been in a hydration state if we didn't have a current.\n            // However, in some of those paths, we might have reentered a hydration state\n            // and then we might be inside a hydration state. In that case, we'll need to exit out of it.\n            resetHydrationState();\n            if ((workInProgress.flags & DidCapture) === NoFlags) {\n              // This boundary did not suspend so it's now hydrated and unsuspended.\n              workInProgress.memoizedState = null;\n            }\n            // If nothing suspended, we need to schedule an effect to mark this boundary\n            // as having hydrated so events know that they're free to be invoked.\n            // It's also a signal to replay events and the suspense callback.\n            // If something suspended, schedule an effect to attach retry listeners.\n            // So we might as well always mark this.\n            workInProgress.flags |= Update;\n            return null;\n          }\n        }\n      }\n\n      if ((workInProgress.flags & DidCapture) !== NoFlags) {\n        // Something suspended. Re-render with the fallback children.\n        workInProgress.lanes = renderLanes;\n        // Do not reset the effect list.\n        if (\n          enableProfilerTimer &&\n          (workInProgress.mode & ProfileMode) !== NoMode\n        ) {\n          transferActualDuration(workInProgress);\n        }\n        return workInProgress;\n      }\n\n      const nextDidTimeout = nextState !== null;\n      let prevDidTimeout = false;\n      if (current === null) {\n        if (workInProgress.memoizedProps.fallback !== undefined) {\n          popHydrationState(workInProgress);\n        }\n      } else {\n        const prevState: null | SuspenseState = current.memoizedState;\n        prevDidTimeout = prevState !== null;\n      }\n\n      if (nextDidTimeout && !prevDidTimeout) {\n        // If this subtreee is running in blocking mode we can suspend,\n        // otherwise we won't suspend.\n        // TODO: This will still suspend a synchronous tree if anything\n        // in the concurrent tree already suspended during this render.\n        // This is a known bug.\n        if ((workInProgress.mode & BlockingMode) !== NoMode) {\n          // TODO: Move this back to throwException because this is too late\n          // if this is a large tree which is common for initial loads. We\n          // don't know if we should restart a render or not until we get\n          // this marker, and this is too late.\n          // If this render already had a ping or lower pri updates,\n          // and this is the first time we know we're going to suspend we\n          // should be able to immediately restart from within throwException.\n          const hasInvisibleChildContext =\n            current === null &&\n            workInProgress.memoizedProps.unstable_avoidThisFallback !== true;\n          if (\n            hasInvisibleChildContext ||\n            hasSuspenseContext(\n              suspenseStackCursor.current,\n              (InvisibleParentSuspenseContext: SuspenseContext),\n            )\n          ) {\n            // If this was in an invisible tree or a new render, then showing\n            // this boundary is ok.\n            renderDidSuspend();\n          } else {\n            // Otherwise, we're going to have to hide content so we should\n            // suspend for longer if possible.\n            renderDidSuspendDelayIfPossible();\n          }\n        }\n      }\n\n      if (supportsPersistence) {\n        // TODO: Only schedule updates if not prevDidTimeout.\n        if (nextDidTimeout) {\n          // If this boundary just timed out, schedule an effect to attach a\n          // retry listener to the promise. This flag is also used to hide the\n          // primary children.\n          workInProgress.flags |= Update;\n        }\n      }\n      if (supportsMutation) {\n        // TODO: Only schedule updates if these values are non equal, i.e. it changed.\n        if (nextDidTimeout || prevDidTimeout) {\n          // If this boundary just timed out, schedule an effect to attach a\n          // retry listener to the promise. This flag is also used to hide the\n          // primary children. In mutation mode, we also need the flag to\n          // *unhide* children that were previously hidden, so check if this\n          // is currently timed out, too.\n          workInProgress.flags |= Update;\n        }\n      }\n      if (\n        enableSuspenseCallback &&\n        workInProgress.updateQueue !== null &&\n        workInProgress.memoizedProps.suspenseCallback != null\n      ) {\n        // Always notify the callback\n        workInProgress.flags |= Update;\n      }\n      return null;\n    }\n    case HostPortal:\n      popHostContainer(workInProgress);\n      updateHostContainer(workInProgress);\n      if (current === null) {\n        preparePortalMount(workInProgress.stateNode.containerInfo);\n      }\n      return null;\n    case ContextProvider:\n      // Pop provider fiber\n      popProvider(workInProgress);\n      return null;\n    case IncompleteClassComponent: {\n      // Same as class component case. I put it down here so that the tags are\n      // sequential to ensure this switch is compiled to a jump table.\n      const Component = workInProgress.type;\n      if (isLegacyContextProvider(Component)) {\n        popLegacyContext(workInProgress);\n      }\n      return null;\n    }\n    case SuspenseListComponent: {\n      popSuspenseContext(workInProgress);\n\n      const renderState: null | SuspenseListRenderState =\n        workInProgress.memoizedState;\n\n      if (renderState === null) {\n        // We're running in the default, \"independent\" mode.\n        // We don't do anything in this mode.\n        return null;\n      }\n\n      let didSuspendAlready = (workInProgress.flags & DidCapture) !== NoFlags;\n\n      const renderedTail = renderState.rendering;\n      if (renderedTail === null) {\n        // We just rendered the head.\n        if (!didSuspendAlready) {\n          // This is the first pass. We need to figure out if anything is still\n          // suspended in the rendered set.\n\n          // If new content unsuspended, but there's still some content that\n          // didn't. Then we need to do a second pass that forces everything\n          // to keep showing their fallbacks.\n\n          // We might be suspended if something in this render pass suspended, or\n          // something in the previous committed pass suspended. Otherwise,\n          // there's no chance so we can skip the expensive call to\n          // findFirstSuspended.\n          const cannotBeSuspended =\n            renderHasNotSuspendedYet() &&\n            (current === null || (current.flags & DidCapture) === NoFlags);\n          if (!cannotBeSuspended) {\n            let row = workInProgress.child;\n            while (row !== null) {\n              const suspended = findFirstSuspended(row);\n              if (suspended !== null) {\n                didSuspendAlready = true;\n                workInProgress.flags |= DidCapture;\n                cutOffTailIfNeeded(renderState, false);\n\n                // If this is a newly suspended tree, it might not get committed as\n                // part of the second pass. In that case nothing will subscribe to\n                // its thennables. Instead, we'll transfer its thennables to the\n                // SuspenseList so that it can retry if they resolve.\n                // There might be multiple of these in the list but since we're\n                // going to wait for all of them anyway, it doesn't really matter\n                // which ones gets to ping. In theory we could get clever and keep\n                // track of how many dependencies remain but it gets tricky because\n                // in the meantime, we can add/remove/change items and dependencies.\n                // We might bail out of the loop before finding any but that\n                // doesn't matter since that means that the other boundaries that\n                // we did find already has their listeners attached.\n                const newThennables = suspended.updateQueue;\n                if (newThennables !== null) {\n                  workInProgress.updateQueue = newThennables;\n                  workInProgress.flags |= Update;\n                }\n\n                // Rerender the whole list, but this time, we'll force fallbacks\n                // to stay in place.\n                // Reset the effect list before doing the second pass since that's now invalid.\n                if (renderState.lastEffect === null) {\n                  workInProgress.firstEffect = null;\n                }\n                workInProgress.lastEffect = renderState.lastEffect;\n                // Reset the child fibers to their original state.\n                resetChildFibers(workInProgress, renderLanes);\n\n                // Set up the Suspense Context to force suspense and immediately\n                // rerender the children.\n                pushSuspenseContext(\n                  workInProgress,\n                  setShallowSuspenseContext(\n                    suspenseStackCursor.current,\n                    ForceSuspenseFallback,\n                  ),\n                );\n                return workInProgress.child;\n              }\n              row = row.sibling;\n            }\n          }\n\n          if (renderState.tail !== null && now() > getRenderTargetTime()) {\n            // We have already passed our CPU deadline but we still have rows\n            // left in the tail. We'll just give up further attempts to render\n            // the main content and only render fallbacks.\n            workInProgress.flags |= DidCapture;\n            didSuspendAlready = true;\n\n            cutOffTailIfNeeded(renderState, false);\n\n            // Since nothing actually suspended, there will nothing to ping this\n            // to get it started back up to attempt the next item. While in terms\n            // of priority this work has the same priority as this current render,\n            // it's not part of the same transition once the transition has\n            // committed. If it's sync, we still want to yield so that it can be\n            // painted. Conceptually, this is really the same as pinging.\n            // We can use any RetryLane even if it's the one currently rendering\n            // since we're leaving it behind on this node.\n            workInProgress.lanes = SomeRetryLane;\n            if (enableSchedulerTracing) {\n              markSpawnedWork(SomeRetryLane);\n            }\n          }\n        } else {\n          cutOffTailIfNeeded(renderState, false);\n        }\n        // Next we're going to render the tail.\n      } else {\n        // Append the rendered row to the child list.\n        if (!didSuspendAlready) {\n          const suspended = findFirstSuspended(renderedTail);\n          if (suspended !== null) {\n            workInProgress.flags |= DidCapture;\n            didSuspendAlready = true;\n\n            // Ensure we transfer the update queue to the parent so that it doesn't\n            // get lost if this row ends up dropped during a second pass.\n            const newThennables = suspended.updateQueue;\n            if (newThennables !== null) {\n              workInProgress.updateQueue = newThennables;\n              workInProgress.flags |= Update;\n            }\n\n            cutOffTailIfNeeded(renderState, true);\n            // This might have been modified.\n            if (\n              renderState.tail === null &&\n              renderState.tailMode === 'hidden' &&\n              !renderedTail.alternate &&\n              !getIsHydrating() // We don't cut it if we're hydrating.\n            ) {\n              // We need to delete the row we just rendered.\n              // Reset the effect list to what it was before we rendered this\n              // child. The nested children have already appended themselves.\n              const lastEffect = (workInProgress.lastEffect =\n                renderState.lastEffect);\n              // Remove any effects that were appended after this point.\n              if (lastEffect !== null) {\n                lastEffect.nextEffect = null;\n              }\n              // We're done.\n              return null;\n            }\n          } else if (\n            // The time it took to render last row is greater than the remaining\n            // time we have to render. So rendering one more row would likely\n            // exceed it.\n            now() * 2 - renderState.renderingStartTime >\n              getRenderTargetTime() &&\n            renderLanes !== OffscreenLane\n          ) {\n            // We have now passed our CPU deadline and we'll just give up further\n            // attempts to render the main content and only render fallbacks.\n            // The assumption is that this is usually faster.\n            workInProgress.flags |= DidCapture;\n            didSuspendAlready = true;\n\n            cutOffTailIfNeeded(renderState, false);\n\n            // Since nothing actually suspended, there will nothing to ping this\n            // to get it started back up to attempt the next item. While in terms\n            // of priority this work has the same priority as this current render,\n            // it's not part of the same transition once the transition has\n            // committed. If it's sync, we still want to yield so that it can be\n            // painted. Conceptually, this is really the same as pinging.\n            // We can use any RetryLane even if it's the one currently rendering\n            // since we're leaving it behind on this node.\n            workInProgress.lanes = SomeRetryLane;\n            if (enableSchedulerTracing) {\n              markSpawnedWork(SomeRetryLane);\n            }\n          }\n        }\n        if (renderState.isBackwards) {\n          // The effect list of the backwards tail will have been added\n          // to the end. This breaks the guarantee that life-cycles fire in\n          // sibling order but that isn't a strong guarantee promised by React.\n          // Especially since these might also just pop in during future commits.\n          // Append to the beginning of the list.\n          renderedTail.sibling = workInProgress.child;\n          workInProgress.child = renderedTail;\n        } else {\n          const previousSibling = renderState.last;\n          if (previousSibling !== null) {\n            previousSibling.sibling = renderedTail;\n          } else {\n            workInProgress.child = renderedTail;\n          }\n          renderState.last = renderedTail;\n        }\n      }\n\n      if (renderState.tail !== null) {\n        // We still have tail rows to render.\n        // Pop a row.\n        const next = renderState.tail;\n        renderState.rendering = next;\n        renderState.tail = next.sibling;\n        renderState.lastEffect = workInProgress.lastEffect;\n        renderState.renderingStartTime = now();\n        next.sibling = null;\n\n        // Restore the context.\n        // TODO: We can probably just avoid popping it instead and only\n        // setting it the first time we go from not suspended to suspended.\n        let suspenseContext = suspenseStackCursor.current;\n        if (didSuspendAlready) {\n          suspenseContext = setShallowSuspenseContext(\n            suspenseContext,\n            ForceSuspenseFallback,\n          );\n        } else {\n          suspenseContext = setDefaultShallowSuspenseContext(suspenseContext);\n        }\n        pushSuspenseContext(workInProgress, suspenseContext);\n        // Do a pass over the next row.\n        return next;\n      }\n      return null;\n    }\n    case FundamentalComponent: {\n      if (enableFundamentalAPI) {\n        const fundamentalImpl = workInProgress.type.impl;\n        let fundamentalInstance: ReactFundamentalComponentInstance<\n          any,\n          any,\n        > | null = workInProgress.stateNode;\n\n        if (fundamentalInstance === null) {\n          const getInitialState = fundamentalImpl.getInitialState;\n          let fundamentalState;\n          if (getInitialState !== undefined) {\n            fundamentalState = getInitialState(newProps);\n          }\n          fundamentalInstance = workInProgress.stateNode = createFundamentalStateInstance(\n            workInProgress,\n            newProps,\n            fundamentalImpl,\n            fundamentalState || {},\n          );\n          const instance = ((getFundamentalComponentInstance(\n            fundamentalInstance,\n          ): any): Instance);\n          fundamentalInstance.instance = instance;\n          if (fundamentalImpl.reconcileChildren === false) {\n            return null;\n          }\n          appendAllChildren(instance, workInProgress, false, false);\n          mountFundamentalComponent(fundamentalInstance);\n        } else {\n          // We fire update in commit phase\n          const prevProps = fundamentalInstance.props;\n          fundamentalInstance.prevProps = prevProps;\n          fundamentalInstance.props = newProps;\n          fundamentalInstance.currentFiber = workInProgress;\n          if (supportsPersistence) {\n            const instance = cloneFundamentalInstance(fundamentalInstance);\n            fundamentalInstance.instance = instance;\n            appendAllChildren(instance, workInProgress, false, false);\n          }\n          const shouldUpdate = shouldUpdateFundamentalComponent(\n            fundamentalInstance,\n          );\n          if (shouldUpdate) {\n            markUpdate(workInProgress);\n          }\n        }\n        return null;\n      }\n      break;\n    }\n    case ScopeComponent: {\n      if (enableScopeAPI) {\n        if (current === null) {\n          const scopeInstance: ReactScopeInstance = createScopeInstance();\n          workInProgress.stateNode = scopeInstance;\n          prepareScopeUpdate(scopeInstance, workInProgress);\n          if (workInProgress.ref !== null) {\n            markRef(workInProgress);\n            markUpdate(workInProgress);\n          }\n        } else {\n          if (workInProgress.ref !== null) {\n            markUpdate(workInProgress);\n          }\n          if (current.ref !== workInProgress.ref) {\n            markRef(workInProgress);\n          }\n        }\n        return null;\n      }\n      break;\n    }\n    case Block:\n      if (enableBlocksAPI) {\n        return null;\n      }\n      break;\n    case OffscreenComponent:\n    case LegacyHiddenComponent: {\n      popRenderLanes(workInProgress);\n      if (current !== null) {\n        const nextState: OffscreenState | null = workInProgress.memoizedState;\n        const prevState: OffscreenState | null = current.memoizedState;\n\n        const prevIsHidden = prevState !== null;\n        const nextIsHidden = nextState !== null;\n        if (\n          prevIsHidden !== nextIsHidden &&\n          newProps.mode !== 'unstable-defer-without-hiding'\n        ) {\n          workInProgress.flags |= Update;\n        }\n      }\n      return null;\n    }\n  }\n  invariant(\n    false,\n    'Unknown unit of work tag (%s). This error is likely caused by a bug in ' +\n      'React. Please file an issue.',\n    workInProgress.tag,\n  );\n}\n\nexport {completeWork};\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactInternalTypes';\nimport type {Lanes} from './ReactFiberLane';\nimport type {SuspenseState} from './ReactFiberSuspenseComponent.old';\n\nimport {resetWorkInProgressVersions as resetMutableSourceWorkInProgressVersions} from './ReactMutableSource.old';\nimport {\n  ClassComponent,\n  HostRoot,\n  HostComponent,\n  HostPortal,\n  ContextProvider,\n  SuspenseComponent,\n  SuspenseListComponent,\n  OffscreenComponent,\n  LegacyHiddenComponent,\n} from './ReactWorkTags';\nimport {DidCapture, NoFlags, ShouldCapture} from './ReactFiberFlags';\nimport {NoMode, ProfileMode} from './ReactTypeOfMode';\nimport {\n  enableSuspenseServerRenderer,\n  enableProfilerTimer,\n} from 'shared/ReactFeatureFlags';\n\nimport {popHostContainer, popHostContext} from './ReactFiberHostContext.old';\nimport {popSuspenseContext} from './ReactFiberSuspenseContext.old';\nimport {resetHydrationState} from './ReactFiberHydrationContext.old';\nimport {\n  isContextProvider as isLegacyContextProvider,\n  popContext as popLegacyContext,\n  popTopLevelContextObject as popTopLevelLegacyContextObject,\n} from './ReactFiberContext.old';\nimport {popProvider} from './ReactFiberNewContext.old';\nimport {popRenderLanes} from './ReactFiberWorkLoop.old';\nimport {transferActualDuration} from './ReactProfilerTimer.old';\n\nimport invariant from 'shared/invariant';\n\nfunction unwindWork(workInProgress: Fiber, renderLanes: Lanes) {\n  switch (workInProgress.tag) {\n    case ClassComponent: {\n      const Component = workInProgress.type;\n      if (isLegacyContextProvider(Component)) {\n        popLegacyContext(workInProgress);\n      }\n      const flags = workInProgress.flags;\n      if (flags & ShouldCapture) {\n        workInProgress.flags = (flags & ~ShouldCapture) | DidCapture;\n        if (\n          enableProfilerTimer &&\n          (workInProgress.mode & ProfileMode) !== NoMode\n        ) {\n          transferActualDuration(workInProgress);\n        }\n        return workInProgress;\n      }\n      return null;\n    }\n    case HostRoot: {\n      popHostContainer(workInProgress);\n      popTopLevelLegacyContextObject(workInProgress);\n      resetMutableSourceWorkInProgressVersions();\n      const flags = workInProgress.flags;\n      invariant(\n        (flags & DidCapture) === NoFlags,\n        'The root failed to unmount after an error. This is likely a bug in ' +\n          'React. Please file an issue.',\n      );\n      workInProgress.flags = (flags & ~ShouldCapture) | DidCapture;\n      return workInProgress;\n    }\n    case HostComponent: {\n      // TODO: popHydrationState\n      popHostContext(workInProgress);\n      return null;\n    }\n    case SuspenseComponent: {\n      popSuspenseContext(workInProgress);\n      if (enableSuspenseServerRenderer) {\n        const suspenseState: null | SuspenseState =\n          workInProgress.memoizedState;\n        if (suspenseState !== null && suspenseState.dehydrated !== null) {\n          invariant(\n            workInProgress.alternate !== null,\n            'Threw in newly mounted dehydrated component. This is likely a bug in ' +\n              'React. Please file an issue.',\n          );\n          resetHydrationState();\n        }\n      }\n      const flags = workInProgress.flags;\n      if (flags & ShouldCapture) {\n        workInProgress.flags = (flags & ~ShouldCapture) | DidCapture;\n        // Captured a suspense effect. Re-render the boundary.\n        if (\n          enableProfilerTimer &&\n          (workInProgress.mode & ProfileMode) !== NoMode\n        ) {\n          transferActualDuration(workInProgress);\n        }\n        return workInProgress;\n      }\n      return null;\n    }\n    case SuspenseListComponent: {\n      popSuspenseContext(workInProgress);\n      // SuspenseList doesn't actually catch anything. It should've been\n      // caught by a nested boundary. If not, it should bubble through.\n      return null;\n    }\n    case HostPortal:\n      popHostContainer(workInProgress);\n      return null;\n    case ContextProvider:\n      popProvider(workInProgress);\n      return null;\n    case OffscreenComponent:\n    case LegacyHiddenComponent:\n      popRenderLanes(workInProgress);\n      return null;\n    default:\n      return null;\n  }\n}\n\nfunction unwindInterruptedWork(interruptedWork: Fiber) {\n  switch (interruptedWork.tag) {\n    case ClassComponent: {\n      const childContextTypes = interruptedWork.type.childContextTypes;\n      if (childContextTypes !== null && childContextTypes !== undefined) {\n        popLegacyContext(interruptedWork);\n      }\n      break;\n    }\n    case HostRoot: {\n      popHostContainer(interruptedWork);\n      popTopLevelLegacyContextObject(interruptedWork);\n      resetMutableSourceWorkInProgressVersions();\n      break;\n    }\n    case HostComponent: {\n      popHostContext(interruptedWork);\n      break;\n    }\n    case HostPortal:\n      popHostContainer(interruptedWork);\n      break;\n    case SuspenseComponent:\n      popSuspenseContext(interruptedWork);\n      break;\n    case SuspenseListComponent:\n      popSuspenseContext(interruptedWork);\n      break;\n    case ContextProvider:\n      popProvider(interruptedWork);\n      break;\n    case OffscreenComponent:\n    case LegacyHiddenComponent:\n      popRenderLanes(interruptedWork);\n      break;\n    default:\n      break;\n  }\n}\n\nexport {unwindWork, unwindInterruptedWork};\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactInternalTypes';\n\nimport {getStackByFiberInDevAndProd} from './ReactFiberComponentStack';\n\nexport type CapturedValue<T> = {|\n  value: T,\n  source: Fiber | null,\n  stack: string | null,\n|};\n\nexport function createCapturedValue<T>(\n  value: T,\n  source: Fiber,\n): CapturedValue<T> {\n  // If the value is an error, call this function immediately after it is thrown\n  // so the stack is accurate.\n  return {\n    value,\n    source,\n    stack: getStackByFiberInDevAndProd(source),\n  };\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactInternalTypes';\nimport type {CapturedValue} from './ReactCapturedValue';\n\n// This module is forked in different environments.\n// By default, return `true` to log errors to the console.\n// Forks can return `false` if this isn't desirable.\n\nexport function showErrorDialog(\n  boundary: Fiber,\n  errorInfo: CapturedValue<mixed>,\n): boolean {\n  return true;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactInternalTypes';\nimport type {CapturedValue} from './ReactCapturedValue';\n\nimport {showErrorDialog} from './ReactFiberErrorDialog';\nimport {ClassComponent} from './ReactWorkTags';\nimport getComponentName from 'shared/getComponentName';\n\nexport function logCapturedError(\n  boundary: Fiber,\n  errorInfo: CapturedValue<mixed>,\n): void {\n  try {\n    const logError = showErrorDialog(boundary, errorInfo);\n\n    // Allow injected showErrorDialog() to prevent default console.error logging.\n    // This enables renderers like ReactNative to better manage redbox behavior.\n    if (logError === false) {\n      return;\n    }\n\n    const error = (errorInfo.value: any);\n    if (__DEV__) {\n      const source = errorInfo.source;\n      const stack = errorInfo.stack;\n      const componentStack = stack !== null ? stack : '';\n      // Browsers support silencing uncaught errors by calling\n      // `preventDefault()` in window `error` handler.\n      // We record this information as an expando on the error.\n      if (error != null && error._suppressLogging) {\n        if (boundary.tag === ClassComponent) {\n          // The error is recoverable and was silenced.\n          // Ignore it and don't print the stack addendum.\n          // This is handy for testing error boundaries without noise.\n          return;\n        }\n        // The error is fatal. Since the silencing might have\n        // been accidental, we'll surface it anyway.\n        // However, the browser would have silenced the original error\n        // so we'll print it first, and then print the stack addendum.\n        console['error'](error); // Don't transform to our wrapper\n        // For a more detailed description of this block, see:\n        // https://github.com/facebook/react/pull/13384\n      }\n\n      const componentName = source ? getComponentName(source.type) : null;\n      const componentNameMessage = componentName\n        ? `The above error occurred in the <${componentName}> component:`\n        : 'The above error occurred in one of your React components:';\n\n      let errorBoundaryMessage;\n      const errorBoundaryName = getComponentName(boundary.type);\n      if (errorBoundaryName) {\n        errorBoundaryMessage =\n          `React will try to recreate this component tree from scratch ` +\n          `using the error boundary you provided, ${errorBoundaryName}.`;\n      } else {\n        errorBoundaryMessage =\n          'Consider adding an error boundary to your tree to customize error handling behavior.\\n' +\n          'Visit https://reactjs.org/link/error-boundaries to learn more about error boundaries.';\n      }\n      const combinedMessage =\n        `${componentNameMessage}\\n${componentStack}\\n\\n` +\n        `${errorBoundaryMessage}`;\n\n      // In development, we provide our own message with just the component stack.\n      // We don't include the original error message and JS stack because the browser\n      // has already printed it. Even if the application swallows the error, it is still\n      // displayed by the browser thanks to the DEV-only fake event trick in ReactErrorUtils.\n      console['error'](combinedMessage); // Don't transform to our wrapper\n    } else {\n      // In production, we print the error directly.\n      // This will include the message, the JS stack, and anything the browser wants to show.\n      // We pass the error object instead of custom message so that the browser displays the error natively.\n      console['error'](error); // Don't transform to our wrapper\n    }\n  } catch (e) {\n    // This method must not throw, or React internal state will get messed up.\n    // If console.error is overridden, or logCapturedError() shows a dialog that throws,\n    // we want to report this error outside of the normal stack as a last resort.\n    // https://github.com/facebook/react/issues/13188\n    setTimeout(() => {\n      throw e;\n    });\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactInternalTypes';\nimport type {FiberRoot} from './ReactInternalTypes';\nimport type {Lane, Lanes} from './ReactFiberLane';\nimport type {CapturedValue} from './ReactCapturedValue';\nimport type {Update} from './ReactUpdateQueue.old';\nimport type {Wakeable} from 'shared/ReactTypes';\nimport type {SuspenseContext} from './ReactFiberSuspenseContext.old';\n\nimport getComponentName from 'shared/getComponentName';\nimport {\n  ClassComponent,\n  HostRoot,\n  SuspenseComponent,\n  IncompleteClassComponent,\n} from './ReactWorkTags';\nimport {\n  DidCapture,\n  Incomplete,\n  NoFlags,\n  ShouldCapture,\n  LifecycleEffectMask,\n  ForceUpdateForLegacySuspense,\n} from './ReactFiberFlags';\nimport {shouldCaptureSuspense} from './ReactFiberSuspenseComponent.old';\nimport {NoMode, BlockingMode, DebugTracingMode} from './ReactTypeOfMode';\nimport {\n  enableDebugTracing,\n  enableSchedulingProfiler,\n} from 'shared/ReactFeatureFlags';\nimport {createCapturedValue} from './ReactCapturedValue';\nimport {\n  enqueueCapturedUpdate,\n  createUpdate,\n  CaptureUpdate,\n  ForceUpdate,\n  enqueueUpdate,\n} from './ReactUpdateQueue.old';\nimport {markFailedErrorBoundaryForHotReloading} from './ReactFiberHotReloading.old';\nimport {\n  suspenseStackCursor,\n  InvisibleParentSuspenseContext,\n  hasSuspenseContext,\n} from './ReactFiberSuspenseContext.old';\nimport {\n  renderDidError,\n  onUncaughtError,\n  markLegacyErrorBoundaryAsFailed,\n  isAlreadyFailedLegacyErrorBoundary,\n  pingSuspendedRoot,\n} from './ReactFiberWorkLoop.old';\nimport {logCapturedError} from './ReactFiberErrorLogger';\nimport {logComponentSuspended} from './DebugTracing';\nimport {markComponentSuspended} from './SchedulingProfiler';\n\nimport {\n  SyncLane,\n  NoTimestamp,\n  includesSomeLane,\n  mergeLanes,\n  pickArbitraryLane,\n} from './ReactFiberLane';\n\nconst PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\n\nfunction createRootErrorUpdate(\n  fiber: Fiber,\n  errorInfo: CapturedValue<mixed>,\n  lane: Lane,\n): Update<mixed> {\n  const update = createUpdate(NoTimestamp, lane);\n  // Unmount the root by rendering null.\n  update.tag = CaptureUpdate;\n  // Caution: React DevTools currently depends on this property\n  // being called \"element\".\n  update.payload = {element: null};\n  const error = errorInfo.value;\n  update.callback = () => {\n    onUncaughtError(error);\n    logCapturedError(fiber, errorInfo);\n  };\n  return update;\n}\n\nfunction createClassErrorUpdate(\n  fiber: Fiber,\n  errorInfo: CapturedValue<mixed>,\n  lane: Lane,\n): Update<mixed> {\n  const update = createUpdate(NoTimestamp, lane);\n  update.tag = CaptureUpdate;\n  const getDerivedStateFromError = fiber.type.getDerivedStateFromError;\n  if (typeof getDerivedStateFromError === 'function') {\n    const error = errorInfo.value;\n    update.payload = () => {\n      logCapturedError(fiber, errorInfo);\n      return getDerivedStateFromError(error);\n    };\n  }\n\n  const inst = fiber.stateNode;\n  if (inst !== null && typeof inst.componentDidCatch === 'function') {\n    update.callback = function callback() {\n      if (__DEV__) {\n        markFailedErrorBoundaryForHotReloading(fiber);\n      }\n      if (typeof getDerivedStateFromError !== 'function') {\n        // To preserve the preexisting retry behavior of error boundaries,\n        // we keep track of which ones already failed during this batch.\n        // This gets reset before we yield back to the browser.\n        // TODO: Warn in strict mode if getDerivedStateFromError is\n        // not defined.\n        markLegacyErrorBoundaryAsFailed(this);\n\n        // Only log here if componentDidCatch is the only error boundary method defined\n        logCapturedError(fiber, errorInfo);\n      }\n      const error = errorInfo.value;\n      const stack = errorInfo.stack;\n      this.componentDidCatch(error, {\n        componentStack: stack !== null ? stack : '',\n      });\n      if (__DEV__) {\n        if (typeof getDerivedStateFromError !== 'function') {\n          // If componentDidCatch is the only error boundary method defined,\n          // then it needs to call setState to recover from errors.\n          // If no state update is scheduled then the boundary will swallow the error.\n          if (!includesSomeLane(fiber.lanes, (SyncLane: Lane))) {\n            console.error(\n              '%s: Error boundaries should implement getDerivedStateFromError(). ' +\n                'In that method, return a state update to display an error message or fallback UI.',\n              getComponentName(fiber.type) || 'Unknown',\n            );\n          }\n        }\n      }\n    };\n  } else if (__DEV__) {\n    update.callback = () => {\n      markFailedErrorBoundaryForHotReloading(fiber);\n    };\n  }\n  return update;\n}\n\nfunction attachPingListener(root: FiberRoot, wakeable: Wakeable, lanes: Lanes) {\n  // Attach a listener to the promise to \"ping\" the root and retry. But only if\n  // one does not already exist for the lanes we're currently rendering (which\n  // acts like a \"thread ID\" here).\n  let pingCache = root.pingCache;\n  let threadIDs;\n  if (pingCache === null) {\n    pingCache = root.pingCache = new PossiblyWeakMap();\n    threadIDs = new Set();\n    pingCache.set(wakeable, threadIDs);\n  } else {\n    threadIDs = pingCache.get(wakeable);\n    if (threadIDs === undefined) {\n      threadIDs = new Set();\n      pingCache.set(wakeable, threadIDs);\n    }\n  }\n  if (!threadIDs.has(lanes)) {\n    // Memoize using the thread ID to prevent redundant listeners.\n    threadIDs.add(lanes);\n    const ping = pingSuspendedRoot.bind(null, root, wakeable, lanes);\n    wakeable.then(ping, ping);\n  }\n}\n\nfunction throwException(\n  root: FiberRoot,\n  returnFiber: Fiber,\n  sourceFiber: Fiber,\n  value: mixed,\n  rootRenderLanes: Lanes,\n) {\n  // The source fiber did not complete.\n  sourceFiber.flags |= Incomplete;\n  // Its effect list is no longer valid.\n  sourceFiber.firstEffect = sourceFiber.lastEffect = null;\n\n  if (\n    value !== null &&\n    typeof value === 'object' &&\n    typeof value.then === 'function'\n  ) {\n    // This is a wakeable.\n    const wakeable: Wakeable = (value: any);\n\n    if (__DEV__) {\n      if (enableDebugTracing) {\n        if (sourceFiber.mode & DebugTracingMode) {\n          const name = getComponentName(sourceFiber.type) || 'Unknown';\n          logComponentSuspended(name, wakeable);\n        }\n      }\n    }\n\n    if (enableSchedulingProfiler) {\n      markComponentSuspended(sourceFiber, wakeable);\n    }\n\n    if ((sourceFiber.mode & BlockingMode) === NoMode) {\n      // Reset the memoizedState to what it was before we attempted\n      // to render it.\n      const currentSource = sourceFiber.alternate;\n      if (currentSource) {\n        sourceFiber.updateQueue = currentSource.updateQueue;\n        sourceFiber.memoizedState = currentSource.memoizedState;\n        sourceFiber.lanes = currentSource.lanes;\n      } else {\n        sourceFiber.updateQueue = null;\n        sourceFiber.memoizedState = null;\n      }\n    }\n\n    const hasInvisibleParentBoundary = hasSuspenseContext(\n      suspenseStackCursor.current,\n      (InvisibleParentSuspenseContext: SuspenseContext),\n    );\n\n    // Schedule the nearest Suspense to re-render the timed out view.\n    let workInProgress = returnFiber;\n    do {\n      if (\n        workInProgress.tag === SuspenseComponent &&\n        shouldCaptureSuspense(workInProgress, hasInvisibleParentBoundary)\n      ) {\n        // Found the nearest boundary.\n\n        // Stash the promise on the boundary fiber. If the boundary times out, we'll\n        // attach another listener to flip the boundary back to its normal state.\n        const wakeables: Set<Wakeable> = (workInProgress.updateQueue: any);\n        if (wakeables === null) {\n          const updateQueue = (new Set(): any);\n          updateQueue.add(wakeable);\n          workInProgress.updateQueue = updateQueue;\n        } else {\n          wakeables.add(wakeable);\n        }\n\n        // If the boundary is outside of blocking mode, we should *not*\n        // suspend the commit. Pretend as if the suspended component rendered\n        // null and keep rendering. In the commit phase, we'll schedule a\n        // subsequent synchronous update to re-render the Suspense.\n        //\n        // Note: It doesn't matter whether the component that suspended was\n        // inside a blocking mode tree. If the Suspense is outside of it, we\n        // should *not* suspend the commit.\n        if ((workInProgress.mode & BlockingMode) === NoMode) {\n          workInProgress.flags |= DidCapture;\n          sourceFiber.flags |= ForceUpdateForLegacySuspense;\n\n          // We're going to commit this fiber even though it didn't complete.\n          // But we shouldn't call any lifecycle methods or callbacks. Remove\n          // all lifecycle effect tags.\n          sourceFiber.flags &= ~(LifecycleEffectMask | Incomplete);\n\n          if (sourceFiber.tag === ClassComponent) {\n            const currentSourceFiber = sourceFiber.alternate;\n            if (currentSourceFiber === null) {\n              // This is a new mount. Change the tag so it's not mistaken for a\n              // completed class component. For example, we should not call\n              // componentWillUnmount if it is deleted.\n              sourceFiber.tag = IncompleteClassComponent;\n            } else {\n              // When we try rendering again, we should not reuse the current fiber,\n              // since it's known to be in an inconsistent state. Use a force update to\n              // prevent a bail out.\n              const update = createUpdate(NoTimestamp, SyncLane);\n              update.tag = ForceUpdate;\n              enqueueUpdate(sourceFiber, update);\n            }\n          }\n\n          // The source fiber did not complete. Mark it with Sync priority to\n          // indicate that it still has pending work.\n          sourceFiber.lanes = mergeLanes(sourceFiber.lanes, SyncLane);\n\n          // Exit without suspending.\n          return;\n        }\n\n        // Confirmed that the boundary is in a concurrent mode tree. Continue\n        // with the normal suspend path.\n        //\n        // After this we'll use a set of heuristics to determine whether this\n        // render pass will run to completion or restart or \"suspend\" the commit.\n        // The actual logic for this is spread out in different places.\n        //\n        // This first principle is that if we're going to suspend when we complete\n        // a root, then we should also restart if we get an update or ping that\n        // might unsuspend it, and vice versa. The only reason to suspend is\n        // because you think you might want to restart before committing. However,\n        // it doesn't make sense to restart only while in the period we're suspended.\n        //\n        // Restarting too aggressively is also not good because it starves out any\n        // intermediate loading state. So we use heuristics to determine when.\n\n        // Suspense Heuristics\n        //\n        // If nothing threw a Promise or all the same fallbacks are already showing,\n        // then don't suspend/restart.\n        //\n        // If this is an initial render of a new tree of Suspense boundaries and\n        // those trigger a fallback, then don't suspend/restart. We want to ensure\n        // that we can show the initial loading state as quickly as possible.\n        //\n        // If we hit a \"Delayed\" case, such as when we'd switch from content back into\n        // a fallback, then we should always suspend/restart. Transitions apply\n        // to this case. If none is defined, JND is used instead.\n        //\n        // If we're already showing a fallback and it gets \"retried\", allowing us to show\n        // another level, but there's still an inner boundary that would show a fallback,\n        // then we suspend/restart for 500ms since the last time we showed a fallback\n        // anywhere in the tree. This effectively throttles progressive loading into a\n        // consistent train of commits. This also gives us an opportunity to restart to\n        // get to the completed state slightly earlier.\n        //\n        // If there's ambiguity due to batching it's resolved in preference of:\n        // 1) \"delayed\", 2) \"initial render\", 3) \"retry\".\n        //\n        // We want to ensure that a \"busy\" state doesn't get force committed. We want to\n        // ensure that new initial loading states can commit as soon as possible.\n\n        attachPingListener(root, wakeable, rootRenderLanes);\n\n        workInProgress.flags |= ShouldCapture;\n        workInProgress.lanes = rootRenderLanes;\n\n        return;\n      }\n      // This boundary already captured during this render. Continue to the next\n      // boundary.\n      workInProgress = workInProgress.return;\n    } while (workInProgress !== null);\n    // No boundary was found. Fallthrough to error mode.\n    // TODO: Use invariant so the message is stripped in prod?\n    value = new Error(\n      (getComponentName(sourceFiber.type) || 'A React component') +\n        ' suspended while rendering, but no fallback UI was specified.\\n' +\n        '\\n' +\n        'Add a <Suspense fallback=...> component higher in the tree to ' +\n        'provide a loading indicator or placeholder to display.',\n    );\n  }\n\n  // We didn't find a boundary that could handle this type of exception. Start\n  // over and traverse parent path again, this time treating the exception\n  // as an error.\n  renderDidError();\n\n  value = createCapturedValue(value, sourceFiber);\n  let workInProgress = returnFiber;\n  do {\n    switch (workInProgress.tag) {\n      case HostRoot: {\n        const errorInfo = value;\n        workInProgress.flags |= ShouldCapture;\n        const lane = pickArbitraryLane(rootRenderLanes);\n        workInProgress.lanes = mergeLanes(workInProgress.lanes, lane);\n        const update = createRootErrorUpdate(workInProgress, errorInfo, lane);\n        enqueueCapturedUpdate(workInProgress, update);\n        return;\n      }\n      case ClassComponent:\n        // Capture and retry\n        const errorInfo = value;\n        const ctor = workInProgress.type;\n        const instance = workInProgress.stateNode;\n        if (\n          (workInProgress.flags & DidCapture) === NoFlags &&\n          (typeof ctor.getDerivedStateFromError === 'function' ||\n            (instance !== null &&\n              typeof instance.componentDidCatch === 'function' &&\n              !isAlreadyFailedLegacyErrorBoundary(instance)))\n        ) {\n          workInProgress.flags |= ShouldCapture;\n          const lane = pickArbitraryLane(rootRenderLanes);\n          workInProgress.lanes = mergeLanes(workInProgress.lanes, lane);\n          // Schedule the error boundary to re-render using updated state\n          const update = createClassErrorUpdate(\n            workInProgress,\n            errorInfo,\n            lane,\n          );\n          enqueueCapturedUpdate(workInProgress, update);\n          return;\n        }\n        break;\n      default:\n        break;\n    }\n    workInProgress = workInProgress.return;\n  } while (workInProgress !== null);\n}\n\nexport {throwException, createRootErrorUpdate, createClassErrorUpdate};\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport invariant from 'shared/invariant';\n\nfunction invokeGuardedCallbackProd<A, B, C, D, E, F, Context>(\n  name: string | null,\n  func: (a: A, b: B, c: C, d: D, e: E, f: F) => mixed,\n  context: Context,\n  a: A,\n  b: B,\n  c: C,\n  d: D,\n  e: E,\n  f: F,\n) {\n  const funcArgs = Array.prototype.slice.call(arguments, 3);\n  try {\n    func.apply(context, funcArgs);\n  } catch (error) {\n    this.onError(error);\n  }\n}\n\nlet invokeGuardedCallbackImpl = invokeGuardedCallbackProd;\n\nif (__DEV__) {\n  // In DEV mode, we swap out invokeGuardedCallback for a special version\n  // that plays more nicely with the browser's DevTools. The idea is to preserve\n  // \"Pause on exceptions\" behavior. Because React wraps all user-provided\n  // functions in invokeGuardedCallback, and the production version of\n  // invokeGuardedCallback uses a try-catch, all user exceptions are treated\n  // like caught exceptions, and the DevTools won't pause unless the developer\n  // takes the extra step of enabling pause on caught exceptions. This is\n  // unintuitive, though, because even though React has caught the error, from\n  // the developer's perspective, the error is uncaught.\n  //\n  // To preserve the expected \"Pause on exceptions\" behavior, we don't use a\n  // try-catch in DEV. Instead, we synchronously dispatch a fake event to a fake\n  // DOM node, and call the user-provided callback from inside an event handler\n  // for that fake event. If the callback throws, the error is \"captured\" using\n  // a global event handler. But because the error happens in a different\n  // event loop context, it does not interrupt the normal program flow.\n  // Effectively, this gives us try-catch behavior without actually using\n  // try-catch. Neat!\n\n  // Check that the browser supports the APIs we need to implement our special\n  // DEV version of invokeGuardedCallback\n  if (\n    typeof window !== 'undefined' &&\n    typeof window.dispatchEvent === 'function' &&\n    typeof document !== 'undefined' &&\n    typeof document.createEvent === 'function'\n  ) {\n    const fakeNode = document.createElement('react');\n\n    invokeGuardedCallbackImpl = function invokeGuardedCallbackDev<\n      A,\n      B,\n      C,\n      D,\n      E,\n      F,\n      Context,\n    >(\n      name: string | null,\n      func: (a: A, b: B, c: C, d: D, e: E, f: F) => mixed,\n      context: Context,\n      a: A,\n      b: B,\n      c: C,\n      d: D,\n      e: E,\n      f: F,\n    ) {\n      // If document doesn't exist we know for sure we will crash in this method\n      // when we call document.createEvent(). However this can cause confusing\n      // errors: https://github.com/facebookincubator/create-react-app/issues/3482\n      // So we preemptively throw with a better message instead.\n      invariant(\n        typeof document !== 'undefined',\n        'The `document` global was defined when React was initialized, but is not ' +\n          'defined anymore. This can happen in a test environment if a component ' +\n          'schedules an update from an asynchronous callback, but the test has already ' +\n          'finished running. To solve this, you can either unmount the component at ' +\n          'the end of your test (and ensure that any asynchronous operations get ' +\n          'canceled in `componentWillUnmount`), or you can change the test itself ' +\n          'to be asynchronous.',\n      );\n      const evt = document.createEvent('Event');\n\n      let didCall = false;\n      // Keeps track of whether the user-provided callback threw an error. We\n      // set this to true at the beginning, then set it to false right after\n      // calling the function. If the function errors, `didError` will never be\n      // set to false. This strategy works even if the browser is flaky and\n      // fails to call our global error handler, because it doesn't rely on\n      // the error event at all.\n      let didError = true;\n\n      // Keeps track of the value of window.event so that we can reset it\n      // during the callback to let user code access window.event in the\n      // browsers that support it.\n      const windowEvent = window.event;\n\n      // Keeps track of the descriptor of window.event to restore it after event\n      // dispatching: https://github.com/facebook/react/issues/13688\n      const windowEventDescriptor = Object.getOwnPropertyDescriptor(\n        window,\n        'event',\n      );\n\n      function restoreAfterDispatch() {\n        // We immediately remove the callback from event listeners so that\n        // nested `invokeGuardedCallback` calls do not clash. Otherwise, a\n        // nested call would trigger the fake event handlers of any call higher\n        // in the stack.\n        fakeNode.removeEventListener(evtType, callCallback, false);\n\n        // We check for window.hasOwnProperty('event') to prevent the\n        // window.event assignment in both IE <= 10 as they throw an error\n        // \"Member not found\" in strict mode, and in Firefox which does not\n        // support window.event.\n        if (\n          typeof window.event !== 'undefined' &&\n          window.hasOwnProperty('event')\n        ) {\n          window.event = windowEvent;\n        }\n      }\n\n      // Create an event handler for our fake event. We will synchronously\n      // dispatch our fake event using `dispatchEvent`. Inside the handler, we\n      // call the user-provided callback.\n      const funcArgs = Array.prototype.slice.call(arguments, 3);\n      function callCallback() {\n        didCall = true;\n        restoreAfterDispatch();\n        func.apply(context, funcArgs);\n        didError = false;\n      }\n\n      // Create a global error event handler. We use this to capture the value\n      // that was thrown. It's possible that this error handler will fire more\n      // than once; for example, if non-React code also calls `dispatchEvent`\n      // and a handler for that event throws. We should be resilient to most of\n      // those cases. Even if our error event handler fires more than once, the\n      // last error event is always used. If the callback actually does error,\n      // we know that the last error event is the correct one, because it's not\n      // possible for anything else to have happened in between our callback\n      // erroring and the code that follows the `dispatchEvent` call below. If\n      // the callback doesn't error, but the error event was fired, we know to\n      // ignore it because `didError` will be false, as described above.\n      let error;\n      // Use this to track whether the error event is ever called.\n      let didSetError = false;\n      let isCrossOriginError = false;\n\n      function handleWindowError(event) {\n        error = event.error;\n        didSetError = true;\n        if (error === null && event.colno === 0 && event.lineno === 0) {\n          isCrossOriginError = true;\n        }\n        if (event.defaultPrevented) {\n          // Some other error handler has prevented default.\n          // Browsers silence the error report if this happens.\n          // We'll remember this to later decide whether to log it or not.\n          if (error != null && typeof error === 'object') {\n            try {\n              error._suppressLogging = true;\n            } catch (inner) {\n              // Ignore.\n            }\n          }\n        }\n      }\n\n      // Create a fake event type.\n      const evtType = `react-${name ? name : 'invokeguardedcallback'}`;\n\n      // Attach our event handlers\n      window.addEventListener('error', handleWindowError);\n      fakeNode.addEventListener(evtType, callCallback, false);\n\n      // Synchronously dispatch our fake event. If the user-provided function\n      // errors, it will trigger our global error handler.\n      evt.initEvent(evtType, false, false);\n      fakeNode.dispatchEvent(evt);\n\n      if (windowEventDescriptor) {\n        Object.defineProperty(window, 'event', windowEventDescriptor);\n      }\n\n      if (didCall && didError) {\n        if (!didSetError) {\n          // The callback errored, but the error event never fired.\n          error = new Error(\n            'An error was thrown inside one of your components, but React ' +\n              \"doesn't know what it was. This is likely due to browser \" +\n              'flakiness. React does its best to preserve the \"Pause on ' +\n              'exceptions\" behavior of the DevTools, which requires some ' +\n              \"DEV-mode only tricks. It's possible that these don't work in \" +\n              'your browser. Try triggering the error in production mode, ' +\n              'or switching to a modern browser. If you suspect that this is ' +\n              'actually an issue with React, please file an issue.',\n          );\n        } else if (isCrossOriginError) {\n          error = new Error(\n            \"A cross-origin error was thrown. React doesn't have access to \" +\n              'the actual error object in development. ' +\n              'See https://reactjs.org/link/crossorigin-error for more information.',\n          );\n        }\n        this.onError(error);\n      }\n\n      // Remove our event listeners\n      window.removeEventListener('error', handleWindowError);\n\n      if (!didCall) {\n        // Something went really wrong, and our event was not dispatched.\n        // https://github.com/facebook/react/issues/16734\n        // https://github.com/facebook/react/issues/16585\n        // Fall back to the production implementation.\n        restoreAfterDispatch();\n        return invokeGuardedCallbackProd.apply(this, arguments);\n      }\n    };\n  }\n}\n\nexport default invokeGuardedCallbackImpl;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport invariant from 'shared/invariant';\nimport invokeGuardedCallbackImpl from './invokeGuardedCallbackImpl';\n\n// Used by Fiber to simulate a try-catch.\nlet hasError: boolean = false;\nlet caughtError: mixed = null;\n\n// Used by event system to capture/rethrow the first error.\nlet hasRethrowError: boolean = false;\nlet rethrowError: mixed = null;\n\nconst reporter = {\n  onError(error: mixed) {\n    hasError = true;\n    caughtError = error;\n  },\n};\n\n/**\n * Call a function while guarding against errors that happens within it.\n * Returns an error if it throws, otherwise null.\n *\n * In production, this is implemented using a try-catch. The reason we don't\n * use a try-catch directly is so that we can swap out a different\n * implementation in DEV mode.\n *\n * @param {String} name of the guard to use for logging or debugging\n * @param {Function} func The function to invoke\n * @param {*} context The context to use when calling the function\n * @param {...*} args Arguments for function\n */\nexport function invokeGuardedCallback<A, B, C, D, E, F, Context>(\n  name: string | null,\n  func: (a: A, b: B, c: C, d: D, e: E, f: F) => mixed,\n  context: Context,\n  a: A,\n  b: B,\n  c: C,\n  d: D,\n  e: E,\n  f: F,\n): void {\n  hasError = false;\n  caughtError = null;\n  invokeGuardedCallbackImpl.apply(reporter, arguments);\n}\n\n/**\n * Same as invokeGuardedCallback, but instead of returning an error, it stores\n * it in a global so it can be rethrown by `rethrowCaughtError` later.\n * TODO: See if caughtError and rethrowError can be unified.\n *\n * @param {String} name of the guard to use for logging or debugging\n * @param {Function} func The function to invoke\n * @param {*} context The context to use when calling the function\n * @param {...*} args Arguments for function\n */\nexport function invokeGuardedCallbackAndCatchFirstError<\n  A,\n  B,\n  C,\n  D,\n  E,\n  F,\n  Context,\n>(\n  name: string | null,\n  func: (a: A, b: B, c: C, d: D, e: E, f: F) => void,\n  context: Context,\n  a: A,\n  b: B,\n  c: C,\n  d: D,\n  e: E,\n  f: F,\n): void {\n  invokeGuardedCallback.apply(this, arguments);\n  if (hasError) {\n    const error = clearCaughtError();\n    if (!hasRethrowError) {\n      hasRethrowError = true;\n      rethrowError = error;\n    }\n  }\n}\n\n/**\n * During execution of guarded functions we will capture the first error which\n * we will rethrow to be handled by the top level error handler.\n */\nexport function rethrowCaughtError() {\n  if (hasRethrowError) {\n    const error = rethrowError;\n    hasRethrowError = false;\n    rethrowError = null;\n    throw error;\n  }\n}\n\nexport function hasCaughtError() {\n  return hasError;\n}\n\nexport function clearCaughtError() {\n  if (hasError) {\n    const error = caughtError;\n    hasError = false;\n    caughtError = null;\n    return error;\n  } else {\n    invariant(\n      false,\n      'clearCaughtError was called but no error was captured. This error ' +\n        'is likely caused by a bug in React. Please file an issue.',\n    );\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {\n  Instance,\n  TextInstance,\n  SuspenseInstance,\n  Container,\n  ChildSet,\n  UpdatePayload,\n} from './ReactFiberHostConfig';\nimport type {Fiber} from './ReactInternalTypes';\nimport type {FiberRoot} from './ReactInternalTypes';\nimport type {Lanes} from './ReactFiberLane';\nimport type {SuspenseState} from './ReactFiberSuspenseComponent.old';\nimport type {UpdateQueue} from './ReactUpdateQueue.old';\nimport type {FunctionComponentUpdateQueue} from './ReactFiberHooks.old';\nimport type {Wakeable} from 'shared/ReactTypes';\nimport type {ReactPriorityLevel} from './ReactInternalTypes';\nimport type {OffscreenState} from './ReactFiberOffscreenComponent';\n\nimport {unstable_wrap as Schedule_tracing_wrap} from 'scheduler/tracing';\nimport {\n  enableSchedulerTracing,\n  enableProfilerTimer,\n  enableProfilerCommitHooks,\n  enableSuspenseServerRenderer,\n  enableFundamentalAPI,\n  enableSuspenseCallback,\n  enableScopeAPI,\n} from 'shared/ReactFeatureFlags';\nimport {\n  FunctionComponent,\n  ForwardRef,\n  ClassComponent,\n  HostRoot,\n  HostComponent,\n  HostText,\n  HostPortal,\n  Profiler,\n  SuspenseComponent,\n  DehydratedFragment,\n  IncompleteClassComponent,\n  MemoComponent,\n  SimpleMemoComponent,\n  SuspenseListComponent,\n  FundamentalComponent,\n  ScopeComponent,\n  Block,\n  OffscreenComponent,\n  LegacyHiddenComponent,\n} from './ReactWorkTags';\nimport {\n  invokeGuardedCallback,\n  hasCaughtError,\n  clearCaughtError,\n} from 'shared/ReactErrorUtils';\nimport {\n  NoFlags,\n  ContentReset,\n  Placement,\n  Snapshot,\n  Update,\n} from './ReactFiberFlags';\nimport getComponentName from 'shared/getComponentName';\nimport invariant from 'shared/invariant';\n\nimport {onCommitUnmount} from './ReactFiberDevToolsHook.old';\nimport {resolveDefaultProps} from './ReactFiberLazyComponent.old';\nimport {\n  getCommitTime,\n  recordLayoutEffectDuration,\n  startLayoutEffectTimer,\n} from './ReactProfilerTimer.old';\nimport {ProfileMode} from './ReactTypeOfMode';\nimport {commitUpdateQueue} from './ReactUpdateQueue.old';\nimport {\n  getPublicInstance,\n  supportsMutation,\n  supportsPersistence,\n  supportsHydration,\n  commitMount,\n  commitUpdate,\n  resetTextContent,\n  commitTextUpdate,\n  appendChild,\n  appendChildToContainer,\n  insertBefore,\n  insertInContainerBefore,\n  removeChild,\n  removeChildFromContainer,\n  clearSuspenseBoundary,\n  clearSuspenseBoundaryFromContainer,\n  replaceContainerChildren,\n  createContainerChildSet,\n  hideInstance,\n  hideTextInstance,\n  unhideInstance,\n  unhideTextInstance,\n  unmountFundamentalComponent,\n  updateFundamentalComponent,\n  commitHydratedContainer,\n  commitHydratedSuspenseInstance,\n  clearContainer,\n  prepareScopeUpdate,\n} from './ReactFiberHostConfig';\nimport {\n  captureCommitPhaseError,\n  resolveRetryWakeable,\n  markCommitTimeOfFallback,\n  enqueuePendingPassiveHookEffectMount,\n  enqueuePendingPassiveHookEffectUnmount,\n  enqueuePendingPassiveProfilerEffect,\n} from './ReactFiberWorkLoop.old';\nimport {\n  NoFlags as NoHookEffect,\n  HasEffect as HookHasEffect,\n  Layout as HookLayout,\n  Passive as HookPassive,\n} from './ReactHookEffectTags';\nimport {didWarnAboutReassigningProps} from './ReactFiberBeginWork.old';\n\nlet didWarnAboutUndefinedSnapshotBeforeUpdate: Set<mixed> | null = null;\nif (__DEV__) {\n  didWarnAboutUndefinedSnapshotBeforeUpdate = new Set();\n}\n\nconst PossiblyWeakSet = typeof WeakSet === 'function' ? WeakSet : Set;\n\nconst callComponentWillUnmountWithTimer = function(current, instance) {\n  instance.props = current.memoizedProps;\n  instance.state = current.memoizedState;\n  if (\n    enableProfilerTimer &&\n    enableProfilerCommitHooks &&\n    current.mode & ProfileMode\n  ) {\n    try {\n      startLayoutEffectTimer();\n      instance.componentWillUnmount();\n    } finally {\n      recordLayoutEffectDuration(current);\n    }\n  } else {\n    instance.componentWillUnmount();\n  }\n};\n\n// Capture errors so they don't interrupt unmounting.\nfunction safelyCallComponentWillUnmount(current: Fiber, instance: any) {\n  if (__DEV__) {\n    invokeGuardedCallback(\n      null,\n      callComponentWillUnmountWithTimer,\n      null,\n      current,\n      instance,\n    );\n    if (hasCaughtError()) {\n      const unmountError = clearCaughtError();\n      captureCommitPhaseError(current, unmountError);\n    }\n  } else {\n    try {\n      callComponentWillUnmountWithTimer(current, instance);\n    } catch (unmountError) {\n      captureCommitPhaseError(current, unmountError);\n    }\n  }\n}\n\nfunction safelyDetachRef(current: Fiber) {\n  const ref = current.ref;\n  if (ref !== null) {\n    if (typeof ref === 'function') {\n      if (__DEV__) {\n        invokeGuardedCallback(null, ref, null, null);\n        if (hasCaughtError()) {\n          const refError = clearCaughtError();\n          captureCommitPhaseError(current, refError);\n        }\n      } else {\n        try {\n          ref(null);\n        } catch (refError) {\n          captureCommitPhaseError(current, refError);\n        }\n      }\n    } else {\n      ref.current = null;\n    }\n  }\n}\n\nfunction safelyCallDestroy(current: Fiber, destroy: () => void) {\n  if (__DEV__) {\n    invokeGuardedCallback(null, destroy, null);\n    if (hasCaughtError()) {\n      const error = clearCaughtError();\n      captureCommitPhaseError(current, error);\n    }\n  } else {\n    try {\n      destroy();\n    } catch (error) {\n      captureCommitPhaseError(current, error);\n    }\n  }\n}\n\nfunction commitBeforeMutationLifeCycles(\n  current: Fiber | null,\n  finishedWork: Fiber,\n): void {\n  switch (finishedWork.tag) {\n    case FunctionComponent:\n    case ForwardRef:\n    case SimpleMemoComponent:\n    case Block: {\n      return;\n    }\n    case ClassComponent: {\n      if (finishedWork.flags & Snapshot) {\n        if (current !== null) {\n          const prevProps = current.memoizedProps;\n          const prevState = current.memoizedState;\n          const instance = finishedWork.stateNode;\n          // We could update instance props and state here,\n          // but instead we rely on them being set during last render.\n          // TODO: revisit this when we implement resuming.\n          if (__DEV__) {\n            if (\n              finishedWork.type === finishedWork.elementType &&\n              !didWarnAboutReassigningProps\n            ) {\n              if (instance.props !== finishedWork.memoizedProps) {\n                console.error(\n                  'Expected %s props to match memoized props before ' +\n                    'getSnapshotBeforeUpdate. ' +\n                    'This might either be because of a bug in React, or because ' +\n                    'a component reassigns its own `this.props`. ' +\n                    'Please file an issue.',\n                  getComponentName(finishedWork.type) || 'instance',\n                );\n              }\n              if (instance.state !== finishedWork.memoizedState) {\n                console.error(\n                  'Expected %s state to match memoized state before ' +\n                    'getSnapshotBeforeUpdate. ' +\n                    'This might either be because of a bug in React, or because ' +\n                    'a component reassigns its own `this.state`. ' +\n                    'Please file an issue.',\n                  getComponentName(finishedWork.type) || 'instance',\n                );\n              }\n            }\n          }\n          const snapshot = instance.getSnapshotBeforeUpdate(\n            finishedWork.elementType === finishedWork.type\n              ? prevProps\n              : resolveDefaultProps(finishedWork.type, prevProps),\n            prevState,\n          );\n          if (__DEV__) {\n            const didWarnSet = ((didWarnAboutUndefinedSnapshotBeforeUpdate: any): Set<mixed>);\n            if (snapshot === undefined && !didWarnSet.has(finishedWork.type)) {\n              didWarnSet.add(finishedWork.type);\n              console.error(\n                '%s.getSnapshotBeforeUpdate(): A snapshot value (or null) ' +\n                  'must be returned. You have returned undefined.',\n                getComponentName(finishedWork.type),\n              );\n            }\n          }\n          instance.__reactInternalSnapshotBeforeUpdate = snapshot;\n        }\n      }\n      return;\n    }\n    case HostRoot: {\n      if (supportsMutation) {\n        if (finishedWork.flags & Snapshot) {\n          const root = finishedWork.stateNode;\n          clearContainer(root.containerInfo);\n        }\n      }\n      return;\n    }\n    case HostComponent:\n    case HostText:\n    case HostPortal:\n    case IncompleteClassComponent:\n      // Nothing to do for these component types\n      return;\n  }\n  invariant(\n    false,\n    'This unit of work tag should not have side-effects. This error is ' +\n      'likely caused by a bug in React. Please file an issue.',\n  );\n}\n\nfunction commitHookEffectListUnmount(tag: number, finishedWork: Fiber) {\n  const updateQueue: FunctionComponentUpdateQueue | null = (finishedWork.updateQueue: any);\n  const lastEffect = updateQueue !== null ? updateQueue.lastEffect : null;\n  if (lastEffect !== null) {\n    const firstEffect = lastEffect.next;\n    let effect = firstEffect;\n    do {\n      if ((effect.tag & tag) === tag) {\n        // Unmount\n        const destroy = effect.destroy;\n        effect.destroy = undefined;\n        if (destroy !== undefined) {\n          destroy();\n        }\n      }\n      effect = effect.next;\n    } while (effect !== firstEffect);\n  }\n}\n\nfunction commitHookEffectListMount(tag: number, finishedWork: Fiber) {\n  const updateQueue: FunctionComponentUpdateQueue | null = (finishedWork.updateQueue: any);\n  const lastEffect = updateQueue !== null ? updateQueue.lastEffect : null;\n  if (lastEffect !== null) {\n    const firstEffect = lastEffect.next;\n    let effect = firstEffect;\n    do {\n      if ((effect.tag & tag) === tag) {\n        // Mount\n        const create = effect.create;\n        effect.destroy = create();\n\n        if (__DEV__) {\n          const destroy = effect.destroy;\n          if (destroy !== undefined && typeof destroy !== 'function') {\n            let addendum;\n            if (destroy === null) {\n              addendum =\n                ' You returned null. If your effect does not require clean ' +\n                'up, return undefined (or nothing).';\n            } else if (typeof destroy.then === 'function') {\n              addendum =\n                '\\n\\nIt looks like you wrote useEffect(async () => ...) or returned a Promise. ' +\n                'Instead, write the async function inside your effect ' +\n                'and call it immediately:\\n\\n' +\n                'useEffect(() => {\\n' +\n                '  async function fetchData() {\\n' +\n                '    // You can await here\\n' +\n                '    const response = await MyAPI.getData(someId);\\n' +\n                '    // ...\\n' +\n                '  }\\n' +\n                '  fetchData();\\n' +\n                `}, [someId]); // Or [] if effect doesn't need props or state\\n\\n` +\n                'Learn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching';\n            } else {\n              addendum = ' You returned: ' + destroy;\n            }\n            console.error(\n              'An effect function must not return anything besides a function, ' +\n                'which is used for clean-up.%s',\n              addendum,\n            );\n          }\n        }\n      }\n      effect = effect.next;\n    } while (effect !== firstEffect);\n  }\n}\n\nfunction schedulePassiveEffects(finishedWork: Fiber) {\n  const updateQueue: FunctionComponentUpdateQueue | null = (finishedWork.updateQueue: any);\n  const lastEffect = updateQueue !== null ? updateQueue.lastEffect : null;\n  if (lastEffect !== null) {\n    const firstEffect = lastEffect.next;\n    let effect = firstEffect;\n    do {\n      const {next, tag} = effect;\n      if (\n        (tag & HookPassive) !== NoHookEffect &&\n        (tag & HookHasEffect) !== NoHookEffect\n      ) {\n        enqueuePendingPassiveHookEffectUnmount(finishedWork, effect);\n        enqueuePendingPassiveHookEffectMount(finishedWork, effect);\n      }\n      effect = next;\n    } while (effect !== firstEffect);\n  }\n}\n\nexport function commitPassiveEffectDurations(\n  finishedRoot: FiberRoot,\n  finishedWork: Fiber,\n): void {\n  if (enableProfilerTimer && enableProfilerCommitHooks) {\n    // Only Profilers with work in their subtree will have an Update effect scheduled.\n    if ((finishedWork.flags & Update) !== NoFlags) {\n      switch (finishedWork.tag) {\n        case Profiler: {\n          const {passiveEffectDuration} = finishedWork.stateNode;\n          const {id, onPostCommit} = finishedWork.memoizedProps;\n\n          // This value will still reflect the previous commit phase.\n          // It does not get reset until the start of the next commit phase.\n          const commitTime = getCommitTime();\n\n          if (typeof onPostCommit === 'function') {\n            if (enableSchedulerTracing) {\n              onPostCommit(\n                id,\n                finishedWork.alternate === null ? 'mount' : 'update',\n                passiveEffectDuration,\n                commitTime,\n                finishedRoot.memoizedInteractions,\n              );\n            } else {\n              onPostCommit(\n                id,\n                finishedWork.alternate === null ? 'mount' : 'update',\n                passiveEffectDuration,\n                commitTime,\n              );\n            }\n          }\n\n          // Bubble times to the next nearest ancestor Profiler.\n          // After we process that Profiler, we'll bubble further up.\n          let parentFiber = finishedWork.return;\n          while (parentFiber !== null) {\n            if (parentFiber.tag === Profiler) {\n              const parentStateNode = parentFiber.stateNode;\n              parentStateNode.passiveEffectDuration += passiveEffectDuration;\n              break;\n            }\n            parentFiber = parentFiber.return;\n          }\n          break;\n        }\n        default:\n          break;\n      }\n    }\n  }\n}\n\nfunction commitLifeCycles(\n  finishedRoot: FiberRoot,\n  current: Fiber | null,\n  finishedWork: Fiber,\n  committedLanes: Lanes,\n): void {\n  switch (finishedWork.tag) {\n    case FunctionComponent:\n    case ForwardRef:\n    case SimpleMemoComponent:\n    case Block: {\n      // At this point layout effects have already been destroyed (during mutation phase).\n      // This is done to prevent sibling component effects from interfering with each other,\n      // e.g. a destroy function in one component should never override a ref set\n      // by a create function in another component during the same commit.\n      if (\n        enableProfilerTimer &&\n        enableProfilerCommitHooks &&\n        finishedWork.mode & ProfileMode\n      ) {\n        try {\n          startLayoutEffectTimer();\n          commitHookEffectListMount(HookLayout | HookHasEffect, finishedWork);\n        } finally {\n          recordLayoutEffectDuration(finishedWork);\n        }\n      } else {\n        commitHookEffectListMount(HookLayout | HookHasEffect, finishedWork);\n      }\n\n      schedulePassiveEffects(finishedWork);\n      return;\n    }\n    case ClassComponent: {\n      const instance = finishedWork.stateNode;\n      if (finishedWork.flags & Update) {\n        if (current === null) {\n          // We could update instance props and state here,\n          // but instead we rely on them being set during last render.\n          // TODO: revisit this when we implement resuming.\n          if (__DEV__) {\n            if (\n              finishedWork.type === finishedWork.elementType &&\n              !didWarnAboutReassigningProps\n            ) {\n              if (instance.props !== finishedWork.memoizedProps) {\n                console.error(\n                  'Expected %s props to match memoized props before ' +\n                    'componentDidMount. ' +\n                    'This might either be because of a bug in React, or because ' +\n                    'a component reassigns its own `this.props`. ' +\n                    'Please file an issue.',\n                  getComponentName(finishedWork.type) || 'instance',\n                );\n              }\n              if (instance.state !== finishedWork.memoizedState) {\n                console.error(\n                  'Expected %s state to match memoized state before ' +\n                    'componentDidMount. ' +\n                    'This might either be because of a bug in React, or because ' +\n                    'a component reassigns its own `this.state`. ' +\n                    'Please file an issue.',\n                  getComponentName(finishedWork.type) || 'instance',\n                );\n              }\n            }\n          }\n          if (\n            enableProfilerTimer &&\n            enableProfilerCommitHooks &&\n            finishedWork.mode & ProfileMode\n          ) {\n            try {\n              startLayoutEffectTimer();\n              instance.componentDidMount();\n            } finally {\n              recordLayoutEffectDuration(finishedWork);\n            }\n          } else {\n            instance.componentDidMount();\n          }\n        } else {\n          const prevProps =\n            finishedWork.elementType === finishedWork.type\n              ? current.memoizedProps\n              : resolveDefaultProps(finishedWork.type, current.memoizedProps);\n          const prevState = current.memoizedState;\n          // We could update instance props and state here,\n          // but instead we rely on them being set during last render.\n          // TODO: revisit this when we implement resuming.\n          if (__DEV__) {\n            if (\n              finishedWork.type === finishedWork.elementType &&\n              !didWarnAboutReassigningProps\n            ) {\n              if (instance.props !== finishedWork.memoizedProps) {\n                console.error(\n                  'Expected %s props to match memoized props before ' +\n                    'componentDidUpdate. ' +\n                    'This might either be because of a bug in React, or because ' +\n                    'a component reassigns its own `this.props`. ' +\n                    'Please file an issue.',\n                  getComponentName(finishedWork.type) || 'instance',\n                );\n              }\n              if (instance.state !== finishedWork.memoizedState) {\n                console.error(\n                  'Expected %s state to match memoized state before ' +\n                    'componentDidUpdate. ' +\n                    'This might either be because of a bug in React, or because ' +\n                    'a component reassigns its own `this.state`. ' +\n                    'Please file an issue.',\n                  getComponentName(finishedWork.type) || 'instance',\n                );\n              }\n            }\n          }\n          if (\n            enableProfilerTimer &&\n            enableProfilerCommitHooks &&\n            finishedWork.mode & ProfileMode\n          ) {\n            try {\n              startLayoutEffectTimer();\n              instance.componentDidUpdate(\n                prevProps,\n                prevState,\n                instance.__reactInternalSnapshotBeforeUpdate,\n              );\n            } finally {\n              recordLayoutEffectDuration(finishedWork);\n            }\n          } else {\n            instance.componentDidUpdate(\n              prevProps,\n              prevState,\n              instance.__reactInternalSnapshotBeforeUpdate,\n            );\n          }\n        }\n      }\n\n      // TODO: I think this is now always non-null by the time it reaches the\n      // commit phase. Consider removing the type check.\n      const updateQueue: UpdateQueue<\n        *,\n      > | null = (finishedWork.updateQueue: any);\n      if (updateQueue !== null) {\n        if (__DEV__) {\n          if (\n            finishedWork.type === finishedWork.elementType &&\n            !didWarnAboutReassigningProps\n          ) {\n            if (instance.props !== finishedWork.memoizedProps) {\n              console.error(\n                'Expected %s props to match memoized props before ' +\n                  'processing the update queue. ' +\n                  'This might either be because of a bug in React, or because ' +\n                  'a component reassigns its own `this.props`. ' +\n                  'Please file an issue.',\n                getComponentName(finishedWork.type) || 'instance',\n              );\n            }\n            if (instance.state !== finishedWork.memoizedState) {\n              console.error(\n                'Expected %s state to match memoized state before ' +\n                  'processing the update queue. ' +\n                  'This might either be because of a bug in React, or because ' +\n                  'a component reassigns its own `this.state`. ' +\n                  'Please file an issue.',\n                getComponentName(finishedWork.type) || 'instance',\n              );\n            }\n          }\n        }\n        // We could update instance props and state here,\n        // but instead we rely on them being set during last render.\n        // TODO: revisit this when we implement resuming.\n        commitUpdateQueue(finishedWork, updateQueue, instance);\n      }\n      return;\n    }\n    case HostRoot: {\n      // TODO: I think this is now always non-null by the time it reaches the\n      // commit phase. Consider removing the type check.\n      const updateQueue: UpdateQueue<\n        *,\n      > | null = (finishedWork.updateQueue: any);\n      if (updateQueue !== null) {\n        let instance = null;\n        if (finishedWork.child !== null) {\n          switch (finishedWork.child.tag) {\n            case HostComponent:\n              instance = getPublicInstance(finishedWork.child.stateNode);\n              break;\n            case ClassComponent:\n              instance = finishedWork.child.stateNode;\n              break;\n          }\n        }\n        commitUpdateQueue(finishedWork, updateQueue, instance);\n      }\n      return;\n    }\n    case HostComponent: {\n      const instance: Instance = finishedWork.stateNode;\n\n      // Renderers may schedule work to be done after host components are mounted\n      // (eg DOM renderer may schedule auto-focus for inputs and form controls).\n      // These effects should only be committed when components are first mounted,\n      // aka when there is no current/alternate.\n      if (current === null && finishedWork.flags & Update) {\n        const type = finishedWork.type;\n        const props = finishedWork.memoizedProps;\n        commitMount(instance, type, props, finishedWork);\n      }\n\n      return;\n    }\n    case HostText: {\n      // We have no life-cycles associated with text.\n      return;\n    }\n    case HostPortal: {\n      // We have no life-cycles associated with portals.\n      return;\n    }\n    case Profiler: {\n      if (enableProfilerTimer) {\n        const {onCommit, onRender} = finishedWork.memoizedProps;\n        const {effectDuration} = finishedWork.stateNode;\n\n        const commitTime = getCommitTime();\n\n        if (typeof onRender === 'function') {\n          if (enableSchedulerTracing) {\n            onRender(\n              finishedWork.memoizedProps.id,\n              current === null ? 'mount' : 'update',\n              finishedWork.actualDuration,\n              finishedWork.treeBaseDuration,\n              finishedWork.actualStartTime,\n              commitTime,\n              finishedRoot.memoizedInteractions,\n            );\n          } else {\n            onRender(\n              finishedWork.memoizedProps.id,\n              current === null ? 'mount' : 'update',\n              finishedWork.actualDuration,\n              finishedWork.treeBaseDuration,\n              finishedWork.actualStartTime,\n              commitTime,\n            );\n          }\n        }\n\n        if (enableProfilerCommitHooks) {\n          if (typeof onCommit === 'function') {\n            if (enableSchedulerTracing) {\n              onCommit(\n                finishedWork.memoizedProps.id,\n                current === null ? 'mount' : 'update',\n                effectDuration,\n                commitTime,\n                finishedRoot.memoizedInteractions,\n              );\n            } else {\n              onCommit(\n                finishedWork.memoizedProps.id,\n                current === null ? 'mount' : 'update',\n                effectDuration,\n                commitTime,\n              );\n            }\n          }\n\n          // Schedule a passive effect for this Profiler to call onPostCommit hooks.\n          // This effect should be scheduled even if there is no onPostCommit callback for this Profiler,\n          // because the effect is also where times bubble to parent Profilers.\n          enqueuePendingPassiveProfilerEffect(finishedWork);\n\n          // Propagate layout effect durations to the next nearest Profiler ancestor.\n          // Do not reset these values until the next render so DevTools has a chance to read them first.\n          let parentFiber = finishedWork.return;\n          while (parentFiber !== null) {\n            if (parentFiber.tag === Profiler) {\n              const parentStateNode = parentFiber.stateNode;\n              parentStateNode.effectDuration += effectDuration;\n              break;\n            }\n            parentFiber = parentFiber.return;\n          }\n        }\n      }\n      return;\n    }\n    case SuspenseComponent: {\n      commitSuspenseHydrationCallbacks(finishedRoot, finishedWork);\n      return;\n    }\n    case SuspenseListComponent:\n    case IncompleteClassComponent:\n    case FundamentalComponent:\n    case ScopeComponent:\n    case OffscreenComponent:\n    case LegacyHiddenComponent:\n      return;\n  }\n  invariant(\n    false,\n    'This unit of work tag should not have side-effects. This error is ' +\n      'likely caused by a bug in React. Please file an issue.',\n  );\n}\n\nfunction hideOrUnhideAllChildren(finishedWork, isHidden) {\n  if (supportsMutation) {\n    // We only have the top Fiber that was inserted but we need to recurse down its\n    // children to find all the terminal nodes.\n    let node: Fiber = finishedWork;\n    while (true) {\n      if (node.tag === HostComponent) {\n        const instance = node.stateNode;\n        if (isHidden) {\n          hideInstance(instance);\n        } else {\n          unhideInstance(node.stateNode, node.memoizedProps);\n        }\n      } else if (node.tag === HostText) {\n        const instance = node.stateNode;\n        if (isHidden) {\n          hideTextInstance(instance);\n        } else {\n          unhideTextInstance(instance, node.memoizedProps);\n        }\n      } else if (\n        (node.tag === OffscreenComponent ||\n          node.tag === LegacyHiddenComponent) &&\n        (node.memoizedState: OffscreenState) !== null &&\n        node !== finishedWork\n      ) {\n        // Found a nested Offscreen component that is hidden. Don't search\n        // any deeper. This tree should remain hidden.\n      } else if (node.child !== null) {\n        node.child.return = node;\n        node = node.child;\n        continue;\n      }\n      if (node === finishedWork) {\n        return;\n      }\n      while (node.sibling === null) {\n        if (node.return === null || node.return === finishedWork) {\n          return;\n        }\n        node = node.return;\n      }\n      node.sibling.return = node.return;\n      node = node.sibling;\n    }\n  }\n}\n\nfunction commitAttachRef(finishedWork: Fiber) {\n  const ref = finishedWork.ref;\n  if (ref !== null) {\n    const instance = finishedWork.stateNode;\n    let instanceToUse;\n    switch (finishedWork.tag) {\n      case HostComponent:\n        instanceToUse = getPublicInstance(instance);\n        break;\n      default:\n        instanceToUse = instance;\n    }\n    // Moved outside to ensure DCE works with this flag\n    if (enableScopeAPI && finishedWork.tag === ScopeComponent) {\n      instanceToUse = instance;\n    }\n    if (typeof ref === 'function') {\n      ref(instanceToUse);\n    } else {\n      if (__DEV__) {\n        if (!ref.hasOwnProperty('current')) {\n          console.error(\n            'Unexpected ref object provided for %s. ' +\n              'Use either a ref-setter function or React.createRef().',\n            getComponentName(finishedWork.type),\n          );\n        }\n      }\n\n      ref.current = instanceToUse;\n    }\n  }\n}\n\nfunction commitDetachRef(current: Fiber) {\n  const currentRef = current.ref;\n  if (currentRef !== null) {\n    if (typeof currentRef === 'function') {\n      currentRef(null);\n    } else {\n      currentRef.current = null;\n    }\n  }\n}\n\n// User-originating errors (lifecycles and refs) should not interrupt\n// deletion, so don't let them throw. Host-originating errors should\n// interrupt deletion, so it's okay\nfunction commitUnmount(\n  finishedRoot: FiberRoot,\n  current: Fiber,\n  renderPriorityLevel: ReactPriorityLevel,\n): void {\n  onCommitUnmount(current);\n\n  switch (current.tag) {\n    case FunctionComponent:\n    case ForwardRef:\n    case MemoComponent:\n    case SimpleMemoComponent:\n    case Block: {\n      const updateQueue: FunctionComponentUpdateQueue | null = (current.updateQueue: any);\n      if (updateQueue !== null) {\n        const lastEffect = updateQueue.lastEffect;\n        if (lastEffect !== null) {\n          const firstEffect = lastEffect.next;\n\n          let effect = firstEffect;\n          do {\n            const {destroy, tag} = effect;\n            if (destroy !== undefined) {\n              if ((tag & HookPassive) !== NoHookEffect) {\n                enqueuePendingPassiveHookEffectUnmount(current, effect);\n              } else {\n                if (\n                  enableProfilerTimer &&\n                  enableProfilerCommitHooks &&\n                  current.mode & ProfileMode\n                ) {\n                  startLayoutEffectTimer();\n                  safelyCallDestroy(current, destroy);\n                  recordLayoutEffectDuration(current);\n                } else {\n                  safelyCallDestroy(current, destroy);\n                }\n              }\n            }\n            effect = effect.next;\n          } while (effect !== firstEffect);\n        }\n      }\n      return;\n    }\n    case ClassComponent: {\n      safelyDetachRef(current);\n      const instance = current.stateNode;\n      if (typeof instance.componentWillUnmount === 'function') {\n        safelyCallComponentWillUnmount(current, instance);\n      }\n      return;\n    }\n    case HostComponent: {\n      safelyDetachRef(current);\n      return;\n    }\n    case HostPortal: {\n      // TODO: this is recursive.\n      // We are also not using this parent because\n      // the portal will get pushed immediately.\n      if (supportsMutation) {\n        unmountHostComponents(finishedRoot, current, renderPriorityLevel);\n      } else if (supportsPersistence) {\n        emptyPortalContainer(current);\n      }\n      return;\n    }\n    case FundamentalComponent: {\n      if (enableFundamentalAPI) {\n        const fundamentalInstance = current.stateNode;\n        if (fundamentalInstance !== null) {\n          unmountFundamentalComponent(fundamentalInstance);\n          current.stateNode = null;\n        }\n      }\n      return;\n    }\n    case DehydratedFragment: {\n      if (enableSuspenseCallback) {\n        const hydrationCallbacks = finishedRoot.hydrationCallbacks;\n        if (hydrationCallbacks !== null) {\n          const onDeleted = hydrationCallbacks.onDeleted;\n          if (onDeleted) {\n            onDeleted((current.stateNode: SuspenseInstance));\n          }\n        }\n      }\n      return;\n    }\n    case ScopeComponent: {\n      if (enableScopeAPI) {\n        safelyDetachRef(current);\n      }\n      return;\n    }\n  }\n}\n\nfunction commitNestedUnmounts(\n  finishedRoot: FiberRoot,\n  root: Fiber,\n  renderPriorityLevel: ReactPriorityLevel,\n): void {\n  // While we're inside a removed host node we don't want to call\n  // removeChild on the inner nodes because they're removed by the top\n  // call anyway. We also want to call componentWillUnmount on all\n  // composites before this host node is removed from the tree. Therefore\n  // we do an inner loop while we're still inside the host node.\n  let node: Fiber = root;\n  while (true) {\n    commitUnmount(finishedRoot, node, renderPriorityLevel);\n    // Visit children because they may contain more composite or host nodes.\n    // Skip portals because commitUnmount() currently visits them recursively.\n    if (\n      node.child !== null &&\n      // If we use mutation we drill down into portals using commitUnmount above.\n      // If we don't use mutation we drill down into portals here instead.\n      (!supportsMutation || node.tag !== HostPortal)\n    ) {\n      node.child.return = node;\n      node = node.child;\n      continue;\n    }\n    if (node === root) {\n      return;\n    }\n    while (node.sibling === null) {\n      if (node.return === null || node.return === root) {\n        return;\n      }\n      node = node.return;\n    }\n    node.sibling.return = node.return;\n    node = node.sibling;\n  }\n}\n\nfunction detachFiberMutation(fiber: Fiber) {\n  // Cut off the return pointers to disconnect it from the tree. Ideally, we\n  // should clear the child pointer of the parent alternate to let this\n  // get GC:ed but we don't know which for sure which parent is the current\n  // one so we'll settle for GC:ing the subtree of this child. This child\n  // itself will be GC:ed when the parent updates the next time.\n  // Note: we cannot null out sibling here, otherwise it can cause issues\n  // with findDOMNode and how it requires the sibling field to carry out\n  // traversal in a later effect. See PR #16820. We now clear the sibling\n  // field after effects, see: detachFiberAfterEffects.\n  //\n  // Don't disconnect stateNode now; it will be detached in detachFiberAfterEffects.\n  // It may be required if the current component is an error boundary,\n  // and one of its descendants throws while unmounting a passive effect.\n  fiber.alternate = null;\n  fiber.child = null;\n  fiber.dependencies = null;\n  fiber.firstEffect = null;\n  fiber.lastEffect = null;\n  fiber.memoizedProps = null;\n  fiber.memoizedState = null;\n  fiber.pendingProps = null;\n  fiber.return = null;\n  fiber.updateQueue = null;\n  if (__DEV__) {\n    fiber._debugOwner = null;\n  }\n}\n\nfunction emptyPortalContainer(current: Fiber) {\n  if (!supportsPersistence) {\n    return;\n  }\n\n  const portal: {\n    containerInfo: Container,\n    pendingChildren: ChildSet,\n    ...\n  } = current.stateNode;\n  const {containerInfo} = portal;\n  const emptyChildSet = createContainerChildSet(containerInfo);\n  replaceContainerChildren(containerInfo, emptyChildSet);\n}\n\nfunction commitContainer(finishedWork: Fiber) {\n  if (!supportsPersistence) {\n    return;\n  }\n\n  switch (finishedWork.tag) {\n    case ClassComponent:\n    case HostComponent:\n    case HostText:\n    case FundamentalComponent: {\n      return;\n    }\n    case HostRoot:\n    case HostPortal: {\n      const portalOrRoot: {\n        containerInfo: Container,\n        pendingChildren: ChildSet,\n        ...\n      } = finishedWork.stateNode;\n      const {containerInfo, pendingChildren} = portalOrRoot;\n      replaceContainerChildren(containerInfo, pendingChildren);\n      return;\n    }\n  }\n  invariant(\n    false,\n    'This unit of work tag should not have side-effects. This error is ' +\n      'likely caused by a bug in React. Please file an issue.',\n  );\n}\n\nfunction getHostParentFiber(fiber: Fiber): Fiber {\n  let parent = fiber.return;\n  while (parent !== null) {\n    if (isHostParent(parent)) {\n      return parent;\n    }\n    parent = parent.return;\n  }\n  invariant(\n    false,\n    'Expected to find a host parent. This error is likely caused by a bug ' +\n      'in React. Please file an issue.',\n  );\n}\n\nfunction isHostParent(fiber: Fiber): boolean {\n  return (\n    fiber.tag === HostComponent ||\n    fiber.tag === HostRoot ||\n    fiber.tag === HostPortal\n  );\n}\n\nfunction getHostSibling(fiber: Fiber): ?Instance {\n  // We're going to search forward into the tree until we find a sibling host\n  // node. Unfortunately, if multiple insertions are done in a row we have to\n  // search past them. This leads to exponential search for the next sibling.\n  // TODO: Find a more efficient way to do this.\n  let node: Fiber = fiber;\n  siblings: while (true) {\n    // If we didn't find anything, let's try the next sibling.\n    while (node.sibling === null) {\n      if (node.return === null || isHostParent(node.return)) {\n        // If we pop out of the root or hit the parent the fiber we are the\n        // last sibling.\n        return null;\n      }\n      node = node.return;\n    }\n    node.sibling.return = node.return;\n    node = node.sibling;\n    while (\n      node.tag !== HostComponent &&\n      node.tag !== HostText &&\n      node.tag !== DehydratedFragment\n    ) {\n      // If it is not host node and, we might have a host node inside it.\n      // Try to search down until we find one.\n      if (node.flags & Placement) {\n        // If we don't have a child, try the siblings instead.\n        continue siblings;\n      }\n      // If we don't have a child, try the siblings instead.\n      // We also skip portals because they are not part of this host tree.\n      if (node.child === null || node.tag === HostPortal) {\n        continue siblings;\n      } else {\n        node.child.return = node;\n        node = node.child;\n      }\n    }\n    // Check if this host node is stable or about to be placed.\n    if (!(node.flags & Placement)) {\n      // Found it!\n      return node.stateNode;\n    }\n  }\n}\n\nfunction commitPlacement(finishedWork: Fiber): void {\n  if (!supportsMutation) {\n    return;\n  }\n\n  // Recursively insert all host nodes into the parent.\n  const parentFiber = getHostParentFiber(finishedWork);\n\n  // Note: these two variables *must* always be updated together.\n  let parent;\n  let isContainer;\n  const parentStateNode = parentFiber.stateNode;\n  switch (parentFiber.tag) {\n    case HostComponent:\n      parent = parentStateNode;\n      isContainer = false;\n      break;\n    case HostRoot:\n      parent = parentStateNode.containerInfo;\n      isContainer = true;\n      break;\n    case HostPortal:\n      parent = parentStateNode.containerInfo;\n      isContainer = true;\n      break;\n    case FundamentalComponent:\n      if (enableFundamentalAPI) {\n        parent = parentStateNode.instance;\n        isContainer = false;\n      }\n    // eslint-disable-next-line-no-fallthrough\n    default:\n      invariant(\n        false,\n        'Invalid host parent fiber. This error is likely caused by a bug ' +\n          'in React. Please file an issue.',\n      );\n  }\n  if (parentFiber.flags & ContentReset) {\n    // Reset the text content of the parent before doing any insertions\n    resetTextContent(parent);\n    // Clear ContentReset from the effect tag\n    parentFiber.flags &= ~ContentReset;\n  }\n\n  const before = getHostSibling(finishedWork);\n  // We only have the top Fiber that was inserted but we need to recurse down its\n  // children to find all the terminal nodes.\n  if (isContainer) {\n    insertOrAppendPlacementNodeIntoContainer(finishedWork, before, parent);\n  } else {\n    insertOrAppendPlacementNode(finishedWork, before, parent);\n  }\n}\n\nfunction insertOrAppendPlacementNodeIntoContainer(\n  node: Fiber,\n  before: ?Instance,\n  parent: Container,\n): void {\n  const {tag} = node;\n  const isHost = tag === HostComponent || tag === HostText;\n  if (isHost || (enableFundamentalAPI && tag === FundamentalComponent)) {\n    const stateNode = isHost ? node.stateNode : node.stateNode.instance;\n    if (before) {\n      insertInContainerBefore(parent, stateNode, before);\n    } else {\n      appendChildToContainer(parent, stateNode);\n    }\n  } else if (tag === HostPortal) {\n    // If the insertion itself is a portal, then we don't want to traverse\n    // down its children. Instead, we'll get insertions from each child in\n    // the portal directly.\n  } else {\n    const child = node.child;\n    if (child !== null) {\n      insertOrAppendPlacementNodeIntoContainer(child, before, parent);\n      let sibling = child.sibling;\n      while (sibling !== null) {\n        insertOrAppendPlacementNodeIntoContainer(sibling, before, parent);\n        sibling = sibling.sibling;\n      }\n    }\n  }\n}\n\nfunction insertOrAppendPlacementNode(\n  node: Fiber,\n  before: ?Instance,\n  parent: Instance,\n): void {\n  const {tag} = node;\n  const isHost = tag === HostComponent || tag === HostText;\n  if (isHost || (enableFundamentalAPI && tag === FundamentalComponent)) {\n    const stateNode = isHost ? node.stateNode : node.stateNode.instance;\n    if (before) {\n      insertBefore(parent, stateNode, before);\n    } else {\n      appendChild(parent, stateNode);\n    }\n  } else if (tag === HostPortal) {\n    // If the insertion itself is a portal, then we don't want to traverse\n    // down its children. Instead, we'll get insertions from each child in\n    // the portal directly.\n  } else {\n    const child = node.child;\n    if (child !== null) {\n      insertOrAppendPlacementNode(child, before, parent);\n      let sibling = child.sibling;\n      while (sibling !== null) {\n        insertOrAppendPlacementNode(sibling, before, parent);\n        sibling = sibling.sibling;\n      }\n    }\n  }\n}\n\nfunction unmountHostComponents(\n  finishedRoot: FiberRoot,\n  current: Fiber,\n  renderPriorityLevel: ReactPriorityLevel,\n): void {\n  // We only have the top Fiber that was deleted but we need to recurse down its\n  // children to find all the terminal nodes.\n  let node: Fiber = current;\n\n  // Each iteration, currentParent is populated with node's host parent if not\n  // currentParentIsValid.\n  let currentParentIsValid = false;\n\n  // Note: these two variables *must* always be updated together.\n  let currentParent;\n  let currentParentIsContainer;\n\n  while (true) {\n    if (!currentParentIsValid) {\n      let parent = node.return;\n      findParent: while (true) {\n        invariant(\n          parent !== null,\n          'Expected to find a host parent. This error is likely caused by ' +\n            'a bug in React. Please file an issue.',\n        );\n        const parentStateNode = parent.stateNode;\n        switch (parent.tag) {\n          case HostComponent:\n            currentParent = parentStateNode;\n            currentParentIsContainer = false;\n            break findParent;\n          case HostRoot:\n            currentParent = parentStateNode.containerInfo;\n            currentParentIsContainer = true;\n            break findParent;\n          case HostPortal:\n            currentParent = parentStateNode.containerInfo;\n            currentParentIsContainer = true;\n            break findParent;\n          case FundamentalComponent:\n            if (enableFundamentalAPI) {\n              currentParent = parentStateNode.instance;\n              currentParentIsContainer = false;\n            }\n        }\n        parent = parent.return;\n      }\n      currentParentIsValid = true;\n    }\n\n    if (node.tag === HostComponent || node.tag === HostText) {\n      commitNestedUnmounts(finishedRoot, node, renderPriorityLevel);\n      // After all the children have unmounted, it is now safe to remove the\n      // node from the tree.\n      if (currentParentIsContainer) {\n        removeChildFromContainer(\n          ((currentParent: any): Container),\n          (node.stateNode: Instance | TextInstance),\n        );\n      } else {\n        removeChild(\n          ((currentParent: any): Instance),\n          (node.stateNode: Instance | TextInstance),\n        );\n      }\n      // Don't visit children because we already visited them.\n    } else if (enableFundamentalAPI && node.tag === FundamentalComponent) {\n      const fundamentalNode = node.stateNode.instance;\n      commitNestedUnmounts(finishedRoot, node, renderPriorityLevel);\n      // After all the children have unmounted, it is now safe to remove the\n      // node from the tree.\n      if (currentParentIsContainer) {\n        removeChildFromContainer(\n          ((currentParent: any): Container),\n          (fundamentalNode: Instance),\n        );\n      } else {\n        removeChild(\n          ((currentParent: any): Instance),\n          (fundamentalNode: Instance),\n        );\n      }\n    } else if (\n      enableSuspenseServerRenderer &&\n      node.tag === DehydratedFragment\n    ) {\n      if (enableSuspenseCallback) {\n        const hydrationCallbacks = finishedRoot.hydrationCallbacks;\n        if (hydrationCallbacks !== null) {\n          const onDeleted = hydrationCallbacks.onDeleted;\n          if (onDeleted) {\n            onDeleted((node.stateNode: SuspenseInstance));\n          }\n        }\n      }\n\n      // Delete the dehydrated suspense boundary and all of its content.\n      if (currentParentIsContainer) {\n        clearSuspenseBoundaryFromContainer(\n          ((currentParent: any): Container),\n          (node.stateNode: SuspenseInstance),\n        );\n      } else {\n        clearSuspenseBoundary(\n          ((currentParent: any): Instance),\n          (node.stateNode: SuspenseInstance),\n        );\n      }\n    } else if (node.tag === HostPortal) {\n      if (node.child !== null) {\n        // When we go into a portal, it becomes the parent to remove from.\n        // We will reassign it back when we pop the portal on the way up.\n        currentParent = node.stateNode.containerInfo;\n        currentParentIsContainer = true;\n        // Visit children because portals might contain host components.\n        node.child.return = node;\n        node = node.child;\n        continue;\n      }\n    } else {\n      commitUnmount(finishedRoot, node, renderPriorityLevel);\n      // Visit children because we may find more host components below.\n      if (node.child !== null) {\n        node.child.return = node;\n        node = node.child;\n        continue;\n      }\n    }\n    if (node === current) {\n      return;\n    }\n    while (node.sibling === null) {\n      if (node.return === null || node.return === current) {\n        return;\n      }\n      node = node.return;\n      if (node.tag === HostPortal) {\n        // When we go out of the portal, we need to restore the parent.\n        // Since we don't keep a stack of them, we will search for it.\n        currentParentIsValid = false;\n      }\n    }\n    node.sibling.return = node.return;\n    node = node.sibling;\n  }\n}\n\nfunction commitDeletion(\n  finishedRoot: FiberRoot,\n  current: Fiber,\n  renderPriorityLevel: ReactPriorityLevel,\n): void {\n  if (supportsMutation) {\n    // Recursively delete all host nodes from the parent.\n    // Detach refs and call componentWillUnmount() on the whole subtree.\n    unmountHostComponents(finishedRoot, current, renderPriorityLevel);\n  } else {\n    // Detach refs and call componentWillUnmount() on the whole subtree.\n    commitNestedUnmounts(finishedRoot, current, renderPriorityLevel);\n  }\n  const alternate = current.alternate;\n  detachFiberMutation(current);\n  if (alternate !== null) {\n    detachFiberMutation(alternate);\n  }\n}\n\nfunction commitWork(current: Fiber | null, finishedWork: Fiber): void {\n  if (!supportsMutation) {\n    switch (finishedWork.tag) {\n      case FunctionComponent:\n      case ForwardRef:\n      case MemoComponent:\n      case SimpleMemoComponent:\n      case Block: {\n        // Layout effects are destroyed during the mutation phase so that all\n        // destroy functions for all fibers are called before any create functions.\n        // This prevents sibling component effects from interfering with each other,\n        // e.g. a destroy function in one component should never override a ref set\n        // by a create function in another component during the same commit.\n        if (\n          enableProfilerTimer &&\n          enableProfilerCommitHooks &&\n          finishedWork.mode & ProfileMode\n        ) {\n          try {\n            startLayoutEffectTimer();\n            commitHookEffectListUnmount(\n              HookLayout | HookHasEffect,\n              finishedWork,\n            );\n          } finally {\n            recordLayoutEffectDuration(finishedWork);\n          }\n        } else {\n          commitHookEffectListUnmount(HookLayout | HookHasEffect, finishedWork);\n        }\n        return;\n      }\n      case Profiler: {\n        return;\n      }\n      case SuspenseComponent: {\n        commitSuspenseComponent(finishedWork);\n        attachSuspenseRetryListeners(finishedWork);\n        return;\n      }\n      case SuspenseListComponent: {\n        attachSuspenseRetryListeners(finishedWork);\n        return;\n      }\n      case HostRoot: {\n        if (supportsHydration) {\n          const root: FiberRoot = finishedWork.stateNode;\n          if (root.hydrate) {\n            // We've just hydrated. No need to hydrate again.\n            root.hydrate = false;\n            commitHydratedContainer(root.containerInfo);\n          }\n        }\n        break;\n      }\n      case OffscreenComponent:\n      case LegacyHiddenComponent: {\n        return;\n      }\n    }\n\n    commitContainer(finishedWork);\n    return;\n  }\n\n  switch (finishedWork.tag) {\n    case FunctionComponent:\n    case ForwardRef:\n    case MemoComponent:\n    case SimpleMemoComponent:\n    case Block: {\n      // Layout effects are destroyed during the mutation phase so that all\n      // destroy functions for all fibers are called before any create functions.\n      // This prevents sibling component effects from interfering with each other,\n      // e.g. a destroy function in one component should never override a ref set\n      // by a create function in another component during the same commit.\n      if (\n        enableProfilerTimer &&\n        enableProfilerCommitHooks &&\n        finishedWork.mode & ProfileMode\n      ) {\n        try {\n          startLayoutEffectTimer();\n          commitHookEffectListUnmount(HookLayout | HookHasEffect, finishedWork);\n        } finally {\n          recordLayoutEffectDuration(finishedWork);\n        }\n      } else {\n        commitHookEffectListUnmount(HookLayout | HookHasEffect, finishedWork);\n      }\n      return;\n    }\n    case ClassComponent: {\n      return;\n    }\n    case HostComponent: {\n      const instance: Instance = finishedWork.stateNode;\n      if (instance != null) {\n        // Commit the work prepared earlier.\n        const newProps = finishedWork.memoizedProps;\n        // For hydration we reuse the update path but we treat the oldProps\n        // as the newProps. The updatePayload will contain the real change in\n        // this case.\n        const oldProps = current !== null ? current.memoizedProps : newProps;\n        const type = finishedWork.type;\n        // TODO: Type the updateQueue to be specific to host components.\n        const updatePayload: null | UpdatePayload = (finishedWork.updateQueue: any);\n        finishedWork.updateQueue = null;\n        if (updatePayload !== null) {\n          commitUpdate(\n            instance,\n            updatePayload,\n            type,\n            oldProps,\n            newProps,\n            finishedWork,\n          );\n        }\n      }\n      return;\n    }\n    case HostText: {\n      invariant(\n        finishedWork.stateNode !== null,\n        'This should have a text node initialized. This error is likely ' +\n          'caused by a bug in React. Please file an issue.',\n      );\n      const textInstance: TextInstance = finishedWork.stateNode;\n      const newText: string = finishedWork.memoizedProps;\n      // For hydration we reuse the update path but we treat the oldProps\n      // as the newProps. The updatePayload will contain the real change in\n      // this case.\n      const oldText: string =\n        current !== null ? current.memoizedProps : newText;\n      commitTextUpdate(textInstance, oldText, newText);\n      return;\n    }\n    case HostRoot: {\n      if (supportsHydration) {\n        const root: FiberRoot = finishedWork.stateNode;\n        if (root.hydrate) {\n          // We've just hydrated. No need to hydrate again.\n          root.hydrate = false;\n          commitHydratedContainer(root.containerInfo);\n        }\n      }\n      return;\n    }\n    case Profiler: {\n      return;\n    }\n    case SuspenseComponent: {\n      commitSuspenseComponent(finishedWork);\n      attachSuspenseRetryListeners(finishedWork);\n      return;\n    }\n    case SuspenseListComponent: {\n      attachSuspenseRetryListeners(finishedWork);\n      return;\n    }\n    case IncompleteClassComponent: {\n      return;\n    }\n    case FundamentalComponent: {\n      if (enableFundamentalAPI) {\n        const fundamentalInstance = finishedWork.stateNode;\n        updateFundamentalComponent(fundamentalInstance);\n        return;\n      }\n      break;\n    }\n    case ScopeComponent: {\n      if (enableScopeAPI) {\n        const scopeInstance = finishedWork.stateNode;\n        prepareScopeUpdate(scopeInstance, finishedWork);\n        return;\n      }\n      break;\n    }\n    case OffscreenComponent:\n    case LegacyHiddenComponent: {\n      const newState: OffscreenState | null = finishedWork.memoizedState;\n      const isHidden = newState !== null;\n      hideOrUnhideAllChildren(finishedWork, isHidden);\n      return;\n    }\n  }\n  invariant(\n    false,\n    'This unit of work tag should not have side-effects. This error is ' +\n      'likely caused by a bug in React. Please file an issue.',\n  );\n}\n\nfunction commitSuspenseComponent(finishedWork: Fiber) {\n  const newState: SuspenseState | null = finishedWork.memoizedState;\n\n  if (newState !== null) {\n    markCommitTimeOfFallback();\n\n    if (supportsMutation) {\n      // Hide the Offscreen component that contains the primary children. TODO:\n      // Ideally, this effect would have been scheduled on the Offscreen fiber\n      // itself. That's how unhiding works: the Offscreen component schedules an\n      // effect on itself. However, in this case, the component didn't complete,\n      // so the fiber was never added to the effect list in the normal path. We\n      // could have appended it to the effect list in the Suspense component's\n      // second pass, but doing it this way is less complicated. This would be\n      // simpler if we got rid of the effect list and traversed the tree, like\n      // we're planning to do.\n      const primaryChildParent: Fiber = (finishedWork.child: any);\n      hideOrUnhideAllChildren(primaryChildParent, true);\n    }\n  }\n\n  if (enableSuspenseCallback && newState !== null) {\n    const suspenseCallback = finishedWork.memoizedProps.suspenseCallback;\n    if (typeof suspenseCallback === 'function') {\n      const wakeables: Set<Wakeable> | null = (finishedWork.updateQueue: any);\n      if (wakeables !== null) {\n        suspenseCallback(new Set(wakeables));\n      }\n    } else if (__DEV__) {\n      if (suspenseCallback !== undefined) {\n        console.error('Unexpected type for suspenseCallback.');\n      }\n    }\n  }\n}\n\nfunction commitSuspenseHydrationCallbacks(\n  finishedRoot: FiberRoot,\n  finishedWork: Fiber,\n) {\n  if (!supportsHydration) {\n    return;\n  }\n  const newState: SuspenseState | null = finishedWork.memoizedState;\n  if (newState === null) {\n    const current = finishedWork.alternate;\n    if (current !== null) {\n      const prevState: SuspenseState | null = current.memoizedState;\n      if (prevState !== null) {\n        const suspenseInstance = prevState.dehydrated;\n        if (suspenseInstance !== null) {\n          commitHydratedSuspenseInstance(suspenseInstance);\n          if (enableSuspenseCallback) {\n            const hydrationCallbacks = finishedRoot.hydrationCallbacks;\n            if (hydrationCallbacks !== null) {\n              const onHydrated = hydrationCallbacks.onHydrated;\n              if (onHydrated) {\n                onHydrated(suspenseInstance);\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n\nfunction attachSuspenseRetryListeners(finishedWork: Fiber) {\n  // If this boundary just timed out, then it will have a set of wakeables.\n  // For each wakeable, attach a listener so that when it resolves, React\n  // attempts to re-render the boundary in the primary (pre-timeout) state.\n  const wakeables: Set<Wakeable> | null = (finishedWork.updateQueue: any);\n  if (wakeables !== null) {\n    finishedWork.updateQueue = null;\n    let retryCache = finishedWork.stateNode;\n    if (retryCache === null) {\n      retryCache = finishedWork.stateNode = new PossiblyWeakSet();\n    }\n    wakeables.forEach(wakeable => {\n      // Memoize using the boundary fiber to prevent redundant listeners.\n      let retry = resolveRetryWakeable.bind(null, finishedWork, wakeable);\n      if (!retryCache.has(wakeable)) {\n        if (enableSchedulerTracing) {\n          if (wakeable.__reactDoNotTraceInteractions !== true) {\n            retry = Schedule_tracing_wrap(retry);\n          }\n        }\n        retryCache.add(wakeable);\n        wakeable.then(retry, retry);\n      }\n    });\n  }\n}\n\n// This function detects when a Suspense boundary goes from visible to hidden.\n// It returns false if the boundary is already hidden.\n// TODO: Use an effect tag.\nexport function isSuspenseBoundaryBeingHidden(\n  current: Fiber | null,\n  finishedWork: Fiber,\n): boolean {\n  if (current !== null) {\n    const oldState: SuspenseState | null = current.memoizedState;\n    if (oldState === null || oldState.dehydrated !== null) {\n      const newState: SuspenseState | null = finishedWork.memoizedState;\n      return newState !== null && newState.dehydrated === null;\n    }\n  }\n  return false;\n}\n\nfunction commitResetTextContent(current: Fiber) {\n  if (!supportsMutation) {\n    return;\n  }\n  resetTextContent(current.stateNode);\n}\n\nexport {\n  commitBeforeMutationLifeCycles,\n  commitResetTextContent,\n  commitPlacement,\n  commitDeletion,\n  commitWork,\n  commitLifeCycles,\n  commitAttachRef,\n  commitDetachRef,\n};\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from 'react-reconciler/src/ReactInternalTypes';\nimport type {Instance} from './ReactFiberHostConfig';\n\nimport invariant from 'shared/invariant';\nimport {HostComponent, HostText} from 'react-reconciler/src/ReactWorkTags';\nimport getComponentName from 'shared/getComponentName';\nimport {\n  findFiberRoot,\n  getBoundingRect,\n  getInstanceFromNode,\n  getTextContent,\n  isHiddenSubtree,\n  matchAccessibilityRole,\n  setFocusIfFocusable,\n  setupIntersectionObserver,\n  supportsTestSelectors,\n} from './ReactFiberHostConfig';\n\nlet COMPONENT_TYPE = 0b000;\nlet HAS_PSEUDO_CLASS_TYPE = 0b001;\nlet ROLE_TYPE = 0b010;\nlet TEST_NAME_TYPE = 0b011;\nlet TEXT_TYPE = 0b100;\n\nif (typeof Symbol === 'function' && Symbol.for) {\n  const symbolFor = Symbol.for;\n  COMPONENT_TYPE = symbolFor('selector.component');\n  HAS_PSEUDO_CLASS_TYPE = symbolFor('selector.has_pseudo_class');\n  ROLE_TYPE = symbolFor('selector.role');\n  TEST_NAME_TYPE = symbolFor('selector.test_id');\n  TEXT_TYPE = symbolFor('selector.text');\n}\n\ntype Type = Symbol | number;\n\ntype ComponentSelector = {|\n  $$typeof: Type,\n  value: React$AbstractComponent<empty, mixed>,\n|};\n\ntype HasPsuedoClassSelector = {|\n  $$typeof: Type,\n  value: Array<Selector>,\n|};\n\ntype RoleSelector = {|\n  $$typeof: Type,\n  value: string,\n|};\n\ntype TextSelector = {|\n  $$typeof: Type,\n  value: string,\n|};\n\ntype TestNameSelector = {|\n  $$typeof: Type,\n  value: string,\n|};\n\ntype Selector =\n  | ComponentSelector\n  | HasPsuedoClassSelector\n  | RoleSelector\n  | TextSelector\n  | TestNameSelector;\n\nexport function createComponentSelector(\n  component: React$AbstractComponent<empty, mixed>,\n): ComponentSelector {\n  return {\n    $$typeof: COMPONENT_TYPE,\n    value: component,\n  };\n}\n\nexport function createHasPsuedoClassSelector(\n  selectors: Array<Selector>,\n): HasPsuedoClassSelector {\n  return {\n    $$typeof: HAS_PSEUDO_CLASS_TYPE,\n    value: selectors,\n  };\n}\n\nexport function createRoleSelector(role: string): RoleSelector {\n  return {\n    $$typeof: ROLE_TYPE,\n    value: role,\n  };\n}\n\nexport function createTextSelector(text: string): TextSelector {\n  return {\n    $$typeof: TEXT_TYPE,\n    value: text,\n  };\n}\n\nexport function createTestNameSelector(id: string): TestNameSelector {\n  return {\n    $$typeof: TEST_NAME_TYPE,\n    value: id,\n  };\n}\n\nfunction findFiberRootForHostRoot(hostRoot: Instance): Fiber {\n  const maybeFiber = getInstanceFromNode((hostRoot: any));\n  if (maybeFiber != null) {\n    invariant(\n      typeof maybeFiber.memoizedProps['data-testname'] === 'string',\n      'Invalid host root specified. Should be either a React container or a node with a testname attribute.',\n    );\n    return ((maybeFiber: any): Fiber);\n  } else {\n    const fiberRoot = findFiberRoot(hostRoot);\n    invariant(\n      fiberRoot !== null,\n      'Could not find React container within specified host subtree.',\n    );\n    // The Flow type for FiberRoot is a little funky.\n    // createFiberRoot() cheats this by treating the root as :any and adding stateNode lazily.\n    return ((fiberRoot: any).stateNode.current: Fiber);\n  }\n}\n\nfunction matchSelector(fiber: Fiber, selector: Selector): boolean {\n  switch (selector.$$typeof) {\n    case COMPONENT_TYPE:\n      if (fiber.type === selector.value) {\n        return true;\n      }\n      break;\n    case HAS_PSEUDO_CLASS_TYPE:\n      return hasMatchingPaths(\n        fiber,\n        ((selector: any): HasPsuedoClassSelector).value,\n      );\n    case ROLE_TYPE:\n      if (fiber.tag === HostComponent) {\n        const node = fiber.stateNode;\n        if (\n          matchAccessibilityRole(node, ((selector: any): RoleSelector).value)\n        ) {\n          return true;\n        }\n      }\n      break;\n    case TEXT_TYPE:\n      if (fiber.tag === HostComponent || fiber.tag === HostText) {\n        const textContent = getTextContent(fiber);\n        if (\n          textContent !== null &&\n          textContent.indexOf(((selector: any): TextSelector).value) >= 0\n        ) {\n          return true;\n        }\n      }\n      break;\n    case TEST_NAME_TYPE:\n      if (fiber.tag === HostComponent) {\n        const dataTestID = fiber.memoizedProps['data-testname'];\n        if (\n          typeof dataTestID === 'string' &&\n          dataTestID.toLowerCase() ===\n            ((selector: any): TestNameSelector).value.toLowerCase()\n        ) {\n          return true;\n        }\n      }\n      break;\n    default:\n      invariant(null, 'Invalid selector type %s specified.', selector);\n      break;\n  }\n\n  return false;\n}\n\nfunction selectorToString(selector: Selector): string | null {\n  switch (selector.$$typeof) {\n    case COMPONENT_TYPE:\n      const displayName = getComponentName(selector.value) || 'Unknown';\n      return `<${displayName}>`;\n    case HAS_PSEUDO_CLASS_TYPE:\n      return `:has(${selectorToString(selector) || ''})`;\n    case ROLE_TYPE:\n      return `[role=\"${((selector: any): RoleSelector).value}\"]`;\n    case TEXT_TYPE:\n      return `\"${((selector: any): TextSelector).value}\"`;\n    case TEST_NAME_TYPE:\n      return `[data-testname=\"${((selector: any): TestNameSelector).value}\"]`;\n    default:\n      invariant(null, 'Invalid selector type %s specified.', selector);\n      break;\n  }\n\n  return null;\n}\n\nfunction findPaths(root: Fiber, selectors: Array<Selector>): Array<Fiber> {\n  const matchingFibers: Array<Fiber> = [];\n\n  const stack = [root, 0];\n  let index = 0;\n  while (index < stack.length) {\n    const fiber = ((stack[index++]: any): Fiber);\n    let selectorIndex = ((stack[index++]: any): number);\n    let selector = selectors[selectorIndex];\n\n    if (fiber.tag === HostComponent && isHiddenSubtree(fiber)) {\n      continue;\n    } else {\n      while (selector != null && matchSelector(fiber, selector)) {\n        selectorIndex++;\n        selector = selectors[selectorIndex];\n      }\n    }\n\n    if (selectorIndex === selectors.length) {\n      matchingFibers.push(fiber);\n    } else {\n      let child = fiber.child;\n      while (child !== null) {\n        stack.push(child, selectorIndex);\n        child = child.sibling;\n      }\n    }\n  }\n\n  return matchingFibers;\n}\n\n// Same as findPaths but with eager bailout on first match\nfunction hasMatchingPaths(root: Fiber, selectors: Array<Selector>): boolean {\n  const stack = [root, 0];\n  let index = 0;\n  while (index < stack.length) {\n    const fiber = ((stack[index++]: any): Fiber);\n    let selectorIndex = ((stack[index++]: any): number);\n    let selector = selectors[selectorIndex];\n\n    if (fiber.tag === HostComponent && isHiddenSubtree(fiber)) {\n      continue;\n    } else {\n      while (selector != null && matchSelector(fiber, selector)) {\n        selectorIndex++;\n        selector = selectors[selectorIndex];\n      }\n    }\n\n    if (selectorIndex === selectors.length) {\n      return true;\n    } else {\n      let child = fiber.child;\n      while (child !== null) {\n        stack.push(child, selectorIndex);\n        child = child.sibling;\n      }\n    }\n  }\n\n  return false;\n}\n\nexport function findAllNodes(\n  hostRoot: Instance,\n  selectors: Array<Selector>,\n): Array<Instance> {\n  if (!supportsTestSelectors) {\n    invariant(false, 'Test selector API is not supported by this renderer.');\n  }\n\n  const root = findFiberRootForHostRoot(hostRoot);\n  const matchingFibers = findPaths(root, selectors);\n\n  const instanceRoots: Array<Instance> = [];\n\n  const stack = Array.from(matchingFibers);\n  let index = 0;\n  while (index < stack.length) {\n    const node = ((stack[index++]: any): Fiber);\n    if (node.tag === HostComponent) {\n      if (isHiddenSubtree(node)) {\n        continue;\n      }\n      instanceRoots.push(node.stateNode);\n    } else {\n      let child = node.child;\n      while (child !== null) {\n        stack.push(child);\n        child = child.sibling;\n      }\n    }\n  }\n\n  return instanceRoots;\n}\n\nexport function getFindAllNodesFailureDescription(\n  hostRoot: Instance,\n  selectors: Array<Selector>,\n): string | null {\n  if (!supportsTestSelectors) {\n    invariant(false, 'Test selector API is not supported by this renderer.');\n  }\n\n  const root = findFiberRootForHostRoot(hostRoot);\n\n  let maxSelectorIndex: number = 0;\n  const matchedNames = [];\n\n  // The logic of this loop should be kept in sync with findPaths()\n  const stack = [root, 0];\n  let index = 0;\n  while (index < stack.length) {\n    const fiber = ((stack[index++]: any): Fiber);\n    let selectorIndex = ((stack[index++]: any): number);\n    const selector = selectors[selectorIndex];\n\n    if (fiber.tag === HostComponent && isHiddenSubtree(fiber)) {\n      continue;\n    } else if (matchSelector(fiber, selector)) {\n      matchedNames.push(selectorToString(selector));\n      selectorIndex++;\n\n      if (selectorIndex > maxSelectorIndex) {\n        maxSelectorIndex = selectorIndex;\n      }\n    }\n\n    if (selectorIndex < selectors.length) {\n      let child = fiber.child;\n      while (child !== null) {\n        stack.push(child, selectorIndex);\n        child = child.sibling;\n      }\n    }\n  }\n\n  if (maxSelectorIndex < selectors.length) {\n    const unmatchedNames = [];\n    for (let i = maxSelectorIndex; i < selectors.length; i++) {\n      unmatchedNames.push(selectorToString(selectors[i]));\n    }\n\n    return (\n      'findAllNodes was able to match part of the selector:\\n' +\n      `  ${matchedNames.join(' > ')}\\n\\n` +\n      'No matching component was found for:\\n' +\n      `  ${unmatchedNames.join(' > ')}`\n    );\n  }\n\n  return null;\n}\n\nexport type BoundingRect = {|\n  x: number,\n  y: number,\n  width: number,\n  height: number,\n|};\n\nexport function findBoundingRects(\n  hostRoot: Instance,\n  selectors: Array<Selector>,\n): Array<BoundingRect> {\n  if (!supportsTestSelectors) {\n    invariant(false, 'Test selector API is not supported by this renderer.');\n  }\n\n  const instanceRoots = findAllNodes(hostRoot, selectors);\n\n  const boundingRects: Array<BoundingRect> = [];\n  for (let i = 0; i < instanceRoots.length; i++) {\n    boundingRects.push(getBoundingRect(instanceRoots[i]));\n  }\n\n  for (let i = boundingRects.length - 1; i > 0; i--) {\n    const targetRect = boundingRects[i];\n    const targetLeft = targetRect.x;\n    const targetRight = targetLeft + targetRect.width;\n    const targetTop = targetRect.y;\n    const targetBottom = targetTop + targetRect.height;\n\n    for (let j = i - 1; j >= 0; j--) {\n      if (i !== j) {\n        const otherRect = boundingRects[j];\n        const otherLeft = otherRect.x;\n        const otherRight = otherLeft + otherRect.width;\n        const otherTop = otherRect.y;\n        const otherBottom = otherTop + otherRect.height;\n\n        // Merging all rects to the minimums set would be complicated,\n        // but we can handle the most common cases:\n        // 1. completely overlapping rects\n        // 2. adjacent rects that are the same width or height (e.g. items in a list)\n        //\n        // Even given the above constraints,\n        // we still won't end up with the fewest possible rects without doing multiple passes,\n        // but it's good enough for this purpose.\n\n        if (\n          targetLeft >= otherLeft &&\n          targetTop >= otherTop &&\n          targetRight <= otherRight &&\n          targetBottom <= otherBottom\n        ) {\n          // Complete overlapping rects; remove the inner one.\n          boundingRects.splice(i, 1);\n          break;\n        } else if (\n          targetLeft === otherLeft &&\n          targetRect.width === otherRect.width &&\n          !(otherBottom < targetTop) &&\n          !(otherTop > targetBottom)\n        ) {\n          // Adjacent vertical rects; merge them.\n          if (otherTop > targetTop) {\n            otherRect.height += otherTop - targetTop;\n            otherRect.y = targetTop;\n          }\n          if (otherBottom < targetBottom) {\n            otherRect.height = targetBottom - otherTop;\n          }\n\n          boundingRects.splice(i, 1);\n          break;\n        } else if (\n          targetTop === otherTop &&\n          targetRect.height === otherRect.height &&\n          !(otherRight < targetLeft) &&\n          !(otherLeft > targetRight)\n        ) {\n          // Adjacent horizontal rects; merge them.\n          if (otherLeft > targetLeft) {\n            otherRect.width += otherLeft - targetLeft;\n            otherRect.x = targetLeft;\n          }\n          if (otherRight < targetRight) {\n            otherRect.width = targetRight - otherLeft;\n          }\n\n          boundingRects.splice(i, 1);\n          break;\n        }\n      }\n    }\n  }\n\n  return boundingRects;\n}\n\nexport function focusWithin(\n  hostRoot: Instance,\n  selectors: Array<Selector>,\n): boolean {\n  if (!supportsTestSelectors) {\n    invariant(false, 'Test selector API is not supported by this renderer.');\n  }\n\n  const root = findFiberRootForHostRoot(hostRoot);\n  const matchingFibers = findPaths(root, selectors);\n\n  const stack = Array.from(matchingFibers);\n  let index = 0;\n  while (index < stack.length) {\n    const fiber = ((stack[index++]: any): Fiber);\n    if (isHiddenSubtree(fiber)) {\n      continue;\n    }\n    if (fiber.tag === HostComponent) {\n      const node = fiber.stateNode;\n      if (setFocusIfFocusable(node)) {\n        return true;\n      }\n    }\n    let child = fiber.child;\n    while (child !== null) {\n      stack.push(child);\n      child = child.sibling;\n    }\n  }\n\n  return false;\n}\n\nconst commitHooks: Array<Function> = [];\n\nexport function onCommitRoot(): void {\n  if (supportsTestSelectors) {\n    commitHooks.forEach(commitHook => commitHook());\n  }\n}\n\nexport type IntersectionObserverOptions = Object;\n\nexport type ObserveVisibleRectsCallback = (\n  intersections: Array<{ratio: number, rect: BoundingRect}>,\n) => void;\n\nexport function observeVisibleRects(\n  hostRoot: Instance,\n  selectors: Array<Selector>,\n  callback: (intersections: Array<{ratio: number, rect: BoundingRect}>) => void,\n  options?: IntersectionObserverOptions,\n): {|disconnect: () => void|} {\n  if (!supportsTestSelectors) {\n    invariant(false, 'Test selector API is not supported by this renderer.');\n  }\n\n  const instanceRoots = findAllNodes(hostRoot, selectors);\n\n  const {disconnect, observe, unobserve} = setupIntersectionObserver(\n    instanceRoots,\n    callback,\n    options,\n  );\n\n  // When React mutates the host environment, we may need to change what we're listening to.\n  const commitHook = () => {\n    const nextInstanceRoots = findAllNodes(hostRoot, selectors);\n\n    instanceRoots.forEach(target => {\n      if (nextInstanceRoots.indexOf(target) < 0) {\n        unobserve(target);\n      }\n    });\n\n    nextInstanceRoots.forEach(target => {\n      if (instanceRoots.indexOf(target) < 0) {\n        observe(target);\n      }\n    });\n  };\n\n  commitHooks.push(commitHook);\n\n  return {\n    disconnect: () => {\n      // Stop listening for React mutations:\n      const index = commitHooks.indexOf(commitHook);\n      if (index >= 0) {\n        commitHooks.splice(index, 1);\n      }\n\n      // Disconnect the host observer:\n      disconnect();\n    },\n  };\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Thenable, Wakeable} from 'shared/ReactTypes';\nimport type {Fiber, FiberRoot} from './ReactInternalTypes';\nimport type {Lanes, Lane} from './ReactFiberLane';\nimport type {ReactPriorityLevel} from './ReactInternalTypes';\nimport type {Interaction} from 'scheduler/src/Tracing';\nimport type {SuspenseState} from './ReactFiberSuspenseComponent.old';\nimport type {Effect as HookEffect} from './ReactFiberHooks.old';\nimport type {StackCursor} from './ReactFiberStack.old';\n\nimport {\n  warnAboutDeprecatedLifecycles,\n  enableSuspenseServerRenderer,\n  replayFailedUnitOfWorkWithInvokeGuardedCallback,\n  enableProfilerTimer,\n  enableProfilerCommitHooks,\n  enableSchedulerTracing,\n  warnAboutUnmockedScheduler,\n  deferRenderPhaseUpdateToNextBatch,\n  decoupleUpdatePriorityFromScheduler,\n  enableDebugTracing,\n  enableSchedulingProfiler,\n  enableScopeAPI,\n} from 'shared/ReactFeatureFlags';\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\nimport invariant from 'shared/invariant';\n\nimport {\n  scheduleCallback,\n  cancelCallback,\n  getCurrentPriorityLevel,\n  runWithPriority,\n  shouldYield,\n  requestPaint,\n  now,\n  NoPriority as NoSchedulerPriority,\n  ImmediatePriority as ImmediateSchedulerPriority,\n  UserBlockingPriority as UserBlockingSchedulerPriority,\n  NormalPriority as NormalSchedulerPriority,\n  flushSyncCallbackQueue,\n  scheduleSyncCallback,\n} from './SchedulerWithReactIntegration.old';\nimport {\n  logCommitStarted,\n  logCommitStopped,\n  logLayoutEffectsStarted,\n  logLayoutEffectsStopped,\n  logPassiveEffectsStarted,\n  logPassiveEffectsStopped,\n  logRenderStarted,\n  logRenderStopped,\n} from './DebugTracing';\nimport {\n  markCommitStarted,\n  markCommitStopped,\n  markLayoutEffectsStarted,\n  markLayoutEffectsStopped,\n  markPassiveEffectsStarted,\n  markPassiveEffectsStopped,\n  markRenderStarted,\n  markRenderYielded,\n  markRenderStopped,\n} from './SchedulingProfiler';\n\n// The scheduler is imported here *only* to detect whether it's been mocked\nimport * as Scheduler from 'scheduler';\n\nimport {__interactionsRef, __subscriberRef} from 'scheduler/tracing';\n\nimport {\n  prepareForCommit,\n  resetAfterCommit,\n  scheduleTimeout,\n  cancelTimeout,\n  noTimeout,\n  warnsIfNotActing,\n  beforeActiveInstanceBlur,\n  afterActiveInstanceBlur,\n  clearContainer,\n} from './ReactFiberHostConfig';\n\nimport {\n  createWorkInProgress,\n  assignFiberPropertiesInDEV,\n} from './ReactFiber.old';\nimport {\n  NoMode,\n  StrictMode,\n  ProfileMode,\n  BlockingMode,\n  ConcurrentMode,\n} from './ReactTypeOfMode';\nimport {\n  HostRoot,\n  IndeterminateComponent,\n  ClassComponent,\n  SuspenseComponent,\n  SuspenseListComponent,\n  FunctionComponent,\n  ForwardRef,\n  MemoComponent,\n  SimpleMemoComponent,\n  Block,\n  OffscreenComponent,\n  LegacyHiddenComponent,\n  ScopeComponent,\n} from './ReactWorkTags';\nimport {LegacyRoot} from './ReactRootTags';\nimport {\n  NoFlags,\n  PerformedWork,\n  Placement,\n  Update,\n  PlacementAndUpdate,\n  Deletion,\n  Ref,\n  ContentReset,\n  Snapshot,\n  Callback,\n  Passive,\n  PassiveUnmountPendingDev,\n  Incomplete,\n  HostEffectMask,\n  Hydrating,\n  HydratingAndUpdate,\n} from './ReactFiberFlags';\nimport {\n  NoLanePriority,\n  SyncLanePriority,\n  SyncBatchedLanePriority,\n  InputDiscreteLanePriority,\n  DefaultLanePriority,\n  NoLanes,\n  NoLane,\n  SyncLane,\n  SyncBatchedLane,\n  OffscreenLane,\n  NoTimestamp,\n  findUpdateLane,\n  findTransitionLane,\n  findRetryLane,\n  includesSomeLane,\n  isSubsetOfLanes,\n  mergeLanes,\n  removeLanes,\n  pickArbitraryLane,\n  hasDiscreteLanes,\n  includesNonIdleWork,\n  includesOnlyRetries,\n  includesOnlyTransitions,\n  getNextLanes,\n  returnNextLanesPriority,\n  setCurrentUpdateLanePriority,\n  getCurrentUpdateLanePriority,\n  markStarvedLanesAsExpired,\n  getLanesToRetrySynchronouslyOnError,\n  getMostRecentEventTime,\n  markRootUpdated,\n  markRootSuspended as markRootSuspended_dontCallThisOneDirectly,\n  markRootPinged,\n  markRootExpired,\n  markDiscreteUpdatesExpired,\n  markRootFinished,\n  schedulerPriorityToLanePriority,\n  lanePriorityToSchedulerPriority,\n} from './ReactFiberLane';\nimport {requestCurrentTransition, NoTransition} from './ReactFiberTransition';\nimport {beginWork as originalBeginWork} from './ReactFiberBeginWork.old';\nimport {completeWork} from './ReactFiberCompleteWork.old';\nimport {unwindWork, unwindInterruptedWork} from './ReactFiberUnwindWork.old';\nimport {\n  throwException,\n  createRootErrorUpdate,\n  createClassErrorUpdate,\n} from './ReactFiberThrow.old';\nimport {\n  commitBeforeMutationLifeCycles as commitBeforeMutationEffectOnFiber,\n  commitLifeCycles as commitLayoutEffectOnFiber,\n  commitPlacement,\n  commitWork,\n  commitDeletion,\n  commitDetachRef,\n  commitAttachRef,\n  commitPassiveEffectDurations,\n  commitResetTextContent,\n  isSuspenseBoundaryBeingHidden,\n} from './ReactFiberCommitWork.old';\nimport {enqueueUpdate} from './ReactUpdateQueue.old';\nimport {resetContextDependencies} from './ReactFiberNewContext.old';\nimport {\n  resetHooksAfterThrow,\n  ContextOnlyDispatcher,\n  getIsUpdatingOpaqueValueInRenderPhaseInDEV,\n} from './ReactFiberHooks.old';\nimport {createCapturedValue} from './ReactCapturedValue';\nimport {\n  push as pushToStack,\n  pop as popFromStack,\n  createCursor,\n} from './ReactFiberStack.old';\n\nimport {\n  recordCommitTime,\n  recordPassiveEffectDuration,\n  startPassiveEffectTimer,\n  startProfilerTimer,\n  stopProfilerTimerIfRunningAndRecordDelta,\n} from './ReactProfilerTimer.old';\n\n// DEV stuff\nimport getComponentName from 'shared/getComponentName';\nimport ReactStrictModeWarnings from './ReactStrictModeWarnings.old';\nimport {\n  isRendering as ReactCurrentDebugFiberIsRenderingInDEV,\n  current as ReactCurrentFiberCurrent,\n  resetCurrentFiber as resetCurrentDebugFiberInDEV,\n  setCurrentFiber as setCurrentDebugFiberInDEV,\n} from './ReactCurrentFiber';\nimport {\n  invokeGuardedCallback,\n  hasCaughtError,\n  clearCaughtError,\n} from 'shared/ReactErrorUtils';\nimport {onCommitRoot as onCommitRootDevTools} from './ReactFiberDevToolsHook.old';\nimport {onCommitRoot as onCommitRootTestSelector} from './ReactTestSelectors';\n\n// Used by `act`\nimport enqueueTask from 'shared/enqueueTask';\nimport {doesFiberContain} from './ReactFiberTreeReflection';\n\nconst ceil = Math.ceil;\n\nconst {\n  ReactCurrentDispatcher,\n  ReactCurrentOwner,\n  IsSomeRendererActing,\n} = ReactSharedInternals;\n\ntype ExecutionContext = number;\n\nexport const NoContext = /*             */ 0b0000000;\nconst BatchedContext = /*               */ 0b0000001;\nconst EventContext = /*                 */ 0b0000010;\nconst DiscreteEventContext = /*         */ 0b0000100;\nconst LegacyUnbatchedContext = /*       */ 0b0001000;\nconst RenderContext = /*                */ 0b0010000;\nconst CommitContext = /*                */ 0b0100000;\nexport const RetryAfterError = /*       */ 0b1000000;\n\ntype RootExitStatus = 0 | 1 | 2 | 3 | 4 | 5;\nconst RootIncomplete = 0;\nconst RootFatalErrored = 1;\nconst RootErrored = 2;\nconst RootSuspended = 3;\nconst RootSuspendedWithDelay = 4;\nconst RootCompleted = 5;\n\n// Describes where we are in the React execution stack\nlet executionContext: ExecutionContext = NoContext;\n// The root we're working on\nlet workInProgressRoot: FiberRoot | null = null;\n// The fiber we're working on\nlet workInProgress: Fiber | null = null;\n// The lanes we're rendering\nlet workInProgressRootRenderLanes: Lanes = NoLanes;\n\n// Stack that allows components to change the render lanes for its subtree\n// This is a superset of the lanes we started working on at the root. The only\n// case where it's different from `workInProgressRootRenderLanes` is when we\n// enter a subtree that is hidden and needs to be unhidden: Suspense and\n// Offscreen component.\n//\n// Most things in the work loop should deal with workInProgressRootRenderLanes.\n// Most things in begin/complete phases should deal with subtreeRenderLanes.\nlet subtreeRenderLanes: Lanes = NoLanes;\nconst subtreeRenderLanesCursor: StackCursor<Lanes> = createCursor(NoLanes);\n\n// Whether to root completed, errored, suspended, etc.\nlet workInProgressRootExitStatus: RootExitStatus = RootIncomplete;\n// A fatal error, if one is thrown\nlet workInProgressRootFatalError: mixed = null;\n// \"Included\" lanes refer to lanes that were worked on during this render. It's\n// slightly different than `renderLanes` because `renderLanes` can change as you\n// enter and exit an Offscreen tree. This value is the combination of all render\n// lanes for the entire render phase.\nlet workInProgressRootIncludedLanes: Lanes = NoLanes;\n// The work left over by components that were visited during this render. Only\n// includes unprocessed updates, not work in bailed out children.\nlet workInProgressRootSkippedLanes: Lanes = NoLanes;\n// Lanes that were updated (in an interleaved event) during this render.\nlet workInProgressRootUpdatedLanes: Lanes = NoLanes;\n// Lanes that were pinged (in an interleaved event) during this render.\nlet workInProgressRootPingedLanes: Lanes = NoLanes;\n\nlet mostRecentlyUpdatedRoot: FiberRoot | null = null;\n\n// The most recent time we committed a fallback. This lets us ensure a train\n// model where we don't commit new loading states in too quick succession.\nlet globalMostRecentFallbackTime: number = 0;\nconst FALLBACK_THROTTLE_MS: number = 500;\n\n// The absolute time for when we should start giving up on rendering\n// more and prefer CPU suspense heuristics instead.\nlet workInProgressRootRenderTargetTime: number = Infinity;\n// How long a render is supposed to take before we start following CPU\n// suspense heuristics and opt out of rendering more content.\nconst RENDER_TIMEOUT_MS = 500;\n\nfunction resetRenderTimer() {\n  workInProgressRootRenderTargetTime = now() + RENDER_TIMEOUT_MS;\n}\n\nexport function getRenderTargetTime(): number {\n  return workInProgressRootRenderTargetTime;\n}\n\nlet nextEffect: Fiber | null = null;\nlet hasUncaughtError = false;\nlet firstUncaughtError = null;\nlet legacyErrorBoundariesThatAlreadyFailed: Set<mixed> | null = null;\n\nlet rootDoesHavePassiveEffects: boolean = false;\nlet rootWithPendingPassiveEffects: FiberRoot | null = null;\nlet pendingPassiveEffectsRenderPriority: ReactPriorityLevel = NoSchedulerPriority;\nlet pendingPassiveEffectsLanes: Lanes = NoLanes;\nlet pendingPassiveHookEffectsMount: Array<HookEffect | Fiber> = [];\nlet pendingPassiveHookEffectsUnmount: Array<HookEffect | Fiber> = [];\nlet pendingPassiveProfilerEffects: Array<Fiber> = [];\n\nlet rootsWithPendingDiscreteUpdates: Set<FiberRoot> | null = null;\n\n// Use these to prevent an infinite loop of nested updates\nconst NESTED_UPDATE_LIMIT = 50;\nlet nestedUpdateCount: number = 0;\nlet rootWithNestedUpdates: FiberRoot | null = null;\n\nconst NESTED_PASSIVE_UPDATE_LIMIT = 50;\nlet nestedPassiveUpdateCount: number = 0;\n\n// Marks the need to reschedule pending interactions at these lanes\n// during the commit phase. This enables them to be traced across components\n// that spawn new work during render. E.g. hidden boundaries, suspended SSR\n// hydration or SuspenseList.\n// TODO: Can use a bitmask instead of an array\nlet spawnedWorkDuringRender: null | Array<Lane | Lanes> = null;\n\n// If two updates are scheduled within the same event, we should treat their\n// event times as simultaneous, even if the actual clock time has advanced\n// between the first and second call.\nlet currentEventTime: number = NoTimestamp;\nlet currentEventWipLanes: Lanes = NoLanes;\nlet currentEventPendingLanes: Lanes = NoLanes;\n\n// Dev only flag that tracks if passive effects are currently being flushed.\n// We warn about state updates for unmounted components differently in this case.\nlet isFlushingPassiveEffects = false;\n\nlet focusedInstanceHandle: null | Fiber = null;\nlet shouldFireAfterActiveInstanceBlur: boolean = false;\n\nexport function getWorkInProgressRoot(): FiberRoot | null {\n  return workInProgressRoot;\n}\n\nexport function requestEventTime() {\n  if ((executionContext & (RenderContext | CommitContext)) !== NoContext) {\n    // We're inside React, so it's fine to read the actual time.\n    return now();\n  }\n  // We're not inside React, so we may be in the middle of a browser event.\n  if (currentEventTime !== NoTimestamp) {\n    // Use the same start time for all updates until we enter React again.\n    return currentEventTime;\n  }\n  // This is the first update since React yielded. Compute a new start time.\n  currentEventTime = now();\n  return currentEventTime;\n}\n\nexport function getCurrentTime() {\n  return now();\n}\n\nexport function requestUpdateLane(fiber: Fiber): Lane {\n  // Special cases\n  const mode = fiber.mode;\n  if ((mode & BlockingMode) === NoMode) {\n    return (SyncLane: Lane);\n  } else if ((mode & ConcurrentMode) === NoMode) {\n    return getCurrentPriorityLevel() === ImmediateSchedulerPriority\n      ? (SyncLane: Lane)\n      : (SyncBatchedLane: Lane);\n  } else if (\n    !deferRenderPhaseUpdateToNextBatch &&\n    (executionContext & RenderContext) !== NoContext &&\n    workInProgressRootRenderLanes !== NoLanes\n  ) {\n    // This is a render phase update. These are not officially supported. The\n    // old behavior is to give this the same \"thread\" (expiration time) as\n    // whatever is currently rendering. So if you call `setState` on a component\n    // that happens later in the same render, it will flush. Ideally, we want to\n    // remove the special case and treat them as if they came from an\n    // interleaved event. Regardless, this pattern is not officially supported.\n    // This behavior is only a fallback. The flag only exists until we can roll\n    // out the setState warning, since existing code might accidentally rely on\n    // the current behavior.\n    return pickArbitraryLane(workInProgressRootRenderLanes);\n  }\n\n  // The algorithm for assigning an update to a lane should be stable for all\n  // updates at the same priority within the same event. To do this, the inputs\n  // to the algorithm must be the same. For example, we use the `renderLanes`\n  // to avoid choosing a lane that is already in the middle of rendering.\n  //\n  // However, the \"included\" lanes could be mutated in between updates in the\n  // same event, like if you perform an update inside `flushSync`. Or any other\n  // code path that might call `prepareFreshStack`.\n  //\n  // The trick we use is to cache the first of each of these inputs within an\n  // event. Then reset the cached values once we can be sure the event is over.\n  // Our heuristic for that is whenever we enter a concurrent work loop.\n  //\n  // We'll do the same for `currentEventPendingLanes` below.\n  if (currentEventWipLanes === NoLanes) {\n    currentEventWipLanes = workInProgressRootIncludedLanes;\n  }\n\n  const isTransition = requestCurrentTransition() !== NoTransition;\n  if (isTransition) {\n    if (currentEventPendingLanes !== NoLanes) {\n      currentEventPendingLanes =\n        mostRecentlyUpdatedRoot !== null\n          ? mostRecentlyUpdatedRoot.pendingLanes\n          : NoLanes;\n    }\n    return findTransitionLane(currentEventWipLanes, currentEventPendingLanes);\n  }\n\n  // TODO: Remove this dependency on the Scheduler priority.\n  // To do that, we're replacing it with an update lane priority.\n  const schedulerPriority = getCurrentPriorityLevel();\n\n  // The old behavior was using the priority level of the Scheduler.\n  // This couples React to the Scheduler internals, so we're replacing it\n  // with the currentUpdateLanePriority above. As an example of how this\n  // could be problematic, if we're not inside `Scheduler.runWithPriority`,\n  // then we'll get the priority of the current running Scheduler task,\n  // which is probably not what we want.\n  let lane;\n  if (\n    // TODO: Temporary. We're removing the concept of discrete updates.\n    (executionContext & DiscreteEventContext) !== NoContext &&\n    schedulerPriority === UserBlockingSchedulerPriority\n  ) {\n    lane = findUpdateLane(InputDiscreteLanePriority, currentEventWipLanes);\n  } else {\n    const schedulerLanePriority = schedulerPriorityToLanePriority(\n      schedulerPriority,\n    );\n\n    if (decoupleUpdatePriorityFromScheduler) {\n      // In the new strategy, we will track the current update lane priority\n      // inside React and use that priority to select a lane for this update.\n      // For now, we're just logging when they're different so we can assess.\n      const currentUpdateLanePriority = getCurrentUpdateLanePriority();\n\n      if (\n        schedulerLanePriority !== currentUpdateLanePriority &&\n        currentUpdateLanePriority !== NoLanePriority\n      ) {\n        if (__DEV__) {\n          console.error(\n            'Expected current scheduler lane priority %s to match current update lane priority %s',\n            schedulerLanePriority,\n            currentUpdateLanePriority,\n          );\n        }\n      }\n    }\n\n    lane = findUpdateLane(schedulerLanePriority, currentEventWipLanes);\n  }\n\n  return lane;\n}\n\nfunction requestRetryLane(fiber: Fiber) {\n  // This is a fork of `requestUpdateLane` designed specifically for Suspense\n  // \"retries\" — a special update that attempts to flip a Suspense boundary\n  // from its placeholder state to its primary/resolved state.\n\n  // Special cases\n  const mode = fiber.mode;\n  if ((mode & BlockingMode) === NoMode) {\n    return (SyncLane: Lane);\n  } else if ((mode & ConcurrentMode) === NoMode) {\n    return getCurrentPriorityLevel() === ImmediateSchedulerPriority\n      ? (SyncLane: Lane)\n      : (SyncBatchedLane: Lane);\n  }\n\n  // See `requestUpdateLane` for explanation of `currentEventWipLanes`\n  if (currentEventWipLanes === NoLanes) {\n    currentEventWipLanes = workInProgressRootIncludedLanes;\n  }\n  return findRetryLane(currentEventWipLanes);\n}\n\nexport function scheduleUpdateOnFiber(\n  fiber: Fiber,\n  lane: Lane,\n  eventTime: number,\n) {\n  checkForNestedUpdates();\n  warnAboutRenderPhaseUpdatesInDEV(fiber);\n\n  const root = markUpdateLaneFromFiberToRoot(fiber, lane);\n  if (root === null) {\n    warnAboutUpdateOnUnmountedFiberInDEV(fiber);\n    return null;\n  }\n\n  // Mark that the root has a pending update.\n  markRootUpdated(root, lane, eventTime);\n\n  if (root === workInProgressRoot) {\n    // Received an update to a tree that's in the middle of rendering. Mark\n    // that there was an interleaved update work on this root. Unless the\n    // `deferRenderPhaseUpdateToNextBatch` flag is off and this is a render\n    // phase update. In that case, we don't treat render phase updates as if\n    // they were interleaved, for backwards compat reasons.\n    if (\n      deferRenderPhaseUpdateToNextBatch ||\n      (executionContext & RenderContext) === NoContext\n    ) {\n      workInProgressRootUpdatedLanes = mergeLanes(\n        workInProgressRootUpdatedLanes,\n        lane,\n      );\n    }\n    if (workInProgressRootExitStatus === RootSuspendedWithDelay) {\n      // The root already suspended with a delay, which means this render\n      // definitely won't finish. Since we have a new update, let's mark it as\n      // suspended now, right before marking the incoming update. This has the\n      // effect of interrupting the current render and switching to the update.\n      // TODO: Make sure this doesn't override pings that happen while we've\n      // already started rendering.\n      markRootSuspended(root, workInProgressRootRenderLanes);\n    }\n  }\n\n  // TODO: requestUpdateLanePriority also reads the priority. Pass the\n  // priority as an argument to that function and this one.\n  const priorityLevel = getCurrentPriorityLevel();\n\n  if (lane === SyncLane) {\n    if (\n      // Check if we're inside unbatchedUpdates\n      (executionContext & LegacyUnbatchedContext) !== NoContext &&\n      // Check if we're not already rendering\n      (executionContext & (RenderContext | CommitContext)) === NoContext\n    ) {\n      // Register pending interactions on the root to avoid losing traced interaction data.\n      schedulePendingInteractions(root, lane);\n\n      // This is a legacy edge case. The initial mount of a ReactDOM.render-ed\n      // root inside of batchedUpdates should be synchronous, but layout updates\n      // should be deferred until the end of the batch.\n      performSyncWorkOnRoot(root);\n    } else {\n      ensureRootIsScheduled(root, eventTime);\n      schedulePendingInteractions(root, lane);\n      if (executionContext === NoContext) {\n        // Flush the synchronous work now, unless we're already working or inside\n        // a batch. This is intentionally inside scheduleUpdateOnFiber instead of\n        // scheduleCallbackForFiber to preserve the ability to schedule a callback\n        // without immediately flushing it. We only do this for user-initiated\n        // updates, to preserve historical behavior of legacy mode.\n        resetRenderTimer();\n        flushSyncCallbackQueue();\n      }\n    }\n  } else {\n    // Schedule a discrete update but only if it's not Sync.\n    if (\n      (executionContext & DiscreteEventContext) !== NoContext &&\n      // Only updates at user-blocking priority or greater are considered\n      // discrete, even inside a discrete event.\n      (priorityLevel === UserBlockingSchedulerPriority ||\n        priorityLevel === ImmediateSchedulerPriority)\n    ) {\n      // This is the result of a discrete event. Track the lowest priority\n      // discrete update per root so we can flush them early, if needed.\n      if (rootsWithPendingDiscreteUpdates === null) {\n        rootsWithPendingDiscreteUpdates = new Set([root]);\n      } else {\n        rootsWithPendingDiscreteUpdates.add(root);\n      }\n    }\n    // Schedule other updates after in case the callback is sync.\n    ensureRootIsScheduled(root, eventTime);\n    schedulePendingInteractions(root, lane);\n  }\n\n  // We use this when assigning a lane for a transition inside\n  // `requestUpdateLane`. We assume it's the same as the root being updated,\n  // since in the common case of a single root app it probably is. If it's not\n  // the same root, then it's not a huge deal, we just might batch more stuff\n  // together more than necessary.\n  mostRecentlyUpdatedRoot = root;\n}\n\n// This is split into a separate function so we can mark a fiber with pending\n// work without treating it as a typical update that originates from an event;\n// e.g. retrying a Suspense boundary isn't an update, but it does schedule work\n// on a fiber.\nfunction markUpdateLaneFromFiberToRoot(\n  sourceFiber: Fiber,\n  lane: Lane,\n): FiberRoot | null {\n  // Update the source fiber's lanes\n  sourceFiber.lanes = mergeLanes(sourceFiber.lanes, lane);\n  let alternate = sourceFiber.alternate;\n  if (alternate !== null) {\n    alternate.lanes = mergeLanes(alternate.lanes, lane);\n  }\n  if (__DEV__) {\n    if (\n      alternate === null &&\n      (sourceFiber.flags & (Placement | Hydrating)) !== NoFlags\n    ) {\n      warnAboutUpdateOnNotYetMountedFiberInDEV(sourceFiber);\n    }\n  }\n  // Walk the parent path to the root and update the child expiration time.\n  let node = sourceFiber;\n  let parent = sourceFiber.return;\n  while (parent !== null) {\n    parent.childLanes = mergeLanes(parent.childLanes, lane);\n    alternate = parent.alternate;\n    if (alternate !== null) {\n      alternate.childLanes = mergeLanes(alternate.childLanes, lane);\n    } else {\n      if (__DEV__) {\n        if ((parent.flags & (Placement | Hydrating)) !== NoFlags) {\n          warnAboutUpdateOnNotYetMountedFiberInDEV(sourceFiber);\n        }\n      }\n    }\n    node = parent;\n    parent = parent.return;\n  }\n  if (node.tag === HostRoot) {\n    const root: FiberRoot = node.stateNode;\n    return root;\n  } else {\n    return null;\n  }\n}\n\n// Use this function to schedule a task for a root. There's only one task per\n// root; if a task was already scheduled, we'll check to make sure the priority\n// of the existing task is the same as the priority of the next level that the\n// root has work on. This function is called on every update, and right before\n// exiting a task.\nfunction ensureRootIsScheduled(root: FiberRoot, currentTime: number) {\n  const existingCallbackNode = root.callbackNode;\n\n  // Check if any lanes are being starved by other work. If so, mark them as\n  // expired so we know to work on those next.\n  markStarvedLanesAsExpired(root, currentTime);\n\n  // Determine the next lanes to work on, and their priority.\n  const nextLanes = getNextLanes(\n    root,\n    root === workInProgressRoot ? workInProgressRootRenderLanes : NoLanes,\n  );\n  // This returns the priority level computed during the `getNextLanes` call.\n  const newCallbackPriority = returnNextLanesPriority();\n\n  if (nextLanes === NoLanes) {\n    // Special case: There's nothing to work on.\n    if (existingCallbackNode !== null) {\n      cancelCallback(existingCallbackNode);\n      root.callbackNode = null;\n      root.callbackPriority = NoLanePriority;\n    }\n    return;\n  }\n\n  // Check if there's an existing task. We may be able to reuse it.\n  if (existingCallbackNode !== null) {\n    const existingCallbackPriority = root.callbackPriority;\n    if (existingCallbackPriority === newCallbackPriority) {\n      // The priority hasn't changed. We can reuse the existing task. Exit.\n      return;\n    }\n    // The priority changed. Cancel the existing callback. We'll schedule a new\n    // one below.\n    cancelCallback(existingCallbackNode);\n  }\n\n  // Schedule a new callback.\n  let newCallbackNode;\n  if (newCallbackPriority === SyncLanePriority) {\n    // Special case: Sync React callbacks are scheduled on a special\n    // internal queue\n    newCallbackNode = scheduleSyncCallback(\n      performSyncWorkOnRoot.bind(null, root),\n    );\n  } else if (newCallbackPriority === SyncBatchedLanePriority) {\n    newCallbackNode = scheduleCallback(\n      ImmediateSchedulerPriority,\n      performSyncWorkOnRoot.bind(null, root),\n    );\n  } else {\n    const schedulerPriorityLevel = lanePriorityToSchedulerPriority(\n      newCallbackPriority,\n    );\n    newCallbackNode = scheduleCallback(\n      schedulerPriorityLevel,\n      performConcurrentWorkOnRoot.bind(null, root),\n    );\n  }\n\n  root.callbackPriority = newCallbackPriority;\n  root.callbackNode = newCallbackNode;\n}\n\n// This is the entry point for every concurrent task, i.e. anything that\n// goes through Scheduler.\nfunction performConcurrentWorkOnRoot(root) {\n  // Since we know we're in a React event, we can clear the current\n  // event time. The next update will compute a new event time.\n  currentEventTime = NoTimestamp;\n  currentEventWipLanes = NoLanes;\n  currentEventPendingLanes = NoLanes;\n\n  invariant(\n    (executionContext & (RenderContext | CommitContext)) === NoContext,\n    'Should not already be working.',\n  );\n\n  // Flush any pending passive effects before deciding which lanes to work on,\n  // in case they schedule additional work.\n  const originalCallbackNode = root.callbackNode;\n  const didFlushPassiveEffects = flushPassiveEffects();\n  if (didFlushPassiveEffects) {\n    // Something in the passive effect phase may have canceled the current task.\n    // Check if the task node for this root was changed.\n    if (root.callbackNode !== originalCallbackNode) {\n      // The current task was canceled. Exit. We don't need to call\n      // `ensureRootIsScheduled` because the check above implies either that\n      // there's a new task, or that there's no remaining work on this root.\n      return null;\n    } else {\n      // Current task was not canceled. Continue.\n    }\n  }\n\n  // Determine the next expiration time to work on, using the fields stored\n  // on the root.\n  let lanes = getNextLanes(\n    root,\n    root === workInProgressRoot ? workInProgressRootRenderLanes : NoLanes,\n  );\n  if (lanes === NoLanes) {\n    // Defensive coding. This is never expected to happen.\n    return null;\n  }\n\n  let exitStatus = renderRootConcurrent(root, lanes);\n\n  if (\n    includesSomeLane(\n      workInProgressRootIncludedLanes,\n      workInProgressRootUpdatedLanes,\n    )\n  ) {\n    // The render included lanes that were updated during the render phase.\n    // For example, when unhiding a hidden tree, we include all the lanes\n    // that were previously skipped when the tree was hidden. That set of\n    // lanes is a superset of the lanes we started rendering with.\n    //\n    // So we'll throw out the current work and restart.\n    prepareFreshStack(root, NoLanes);\n  } else if (exitStatus !== RootIncomplete) {\n    if (exitStatus === RootErrored) {\n      executionContext |= RetryAfterError;\n\n      // If an error occurred during hydration,\n      // discard server response and fall back to client side render.\n      if (root.hydrate) {\n        root.hydrate = false;\n        clearContainer(root.containerInfo);\n      }\n\n      // If something threw an error, try rendering one more time. We'll render\n      // synchronously to block concurrent data mutations, and we'll includes\n      // all pending updates are included. If it still fails after the second\n      // attempt, we'll give up and commit the resulting tree.\n      lanes = getLanesToRetrySynchronouslyOnError(root);\n      if (lanes !== NoLanes) {\n        exitStatus = renderRootSync(root, lanes);\n      }\n    }\n\n    if (exitStatus === RootFatalErrored) {\n      const fatalError = workInProgressRootFatalError;\n      prepareFreshStack(root, NoLanes);\n      markRootSuspended(root, lanes);\n      ensureRootIsScheduled(root, now());\n      throw fatalError;\n    }\n\n    // We now have a consistent tree. The next step is either to commit it,\n    // or, if something suspended, wait to commit it after a timeout.\n    const finishedWork: Fiber = (root.current.alternate: any);\n    root.finishedWork = finishedWork;\n    root.finishedLanes = lanes;\n    finishConcurrentRender(root, exitStatus, lanes);\n  }\n\n  ensureRootIsScheduled(root, now());\n  if (root.callbackNode === originalCallbackNode) {\n    // The task node scheduled for this root is the same one that's\n    // currently executed. Need to return a continuation.\n    return performConcurrentWorkOnRoot.bind(null, root);\n  }\n  return null;\n}\n\nfunction finishConcurrentRender(root, exitStatus, lanes) {\n  switch (exitStatus) {\n    case RootIncomplete:\n    case RootFatalErrored: {\n      invariant(false, 'Root did not complete. This is a bug in React.');\n    }\n    // Flow knows about invariant, so it complains if I add a break\n    // statement, but eslint doesn't know about invariant, so it complains\n    // if I do. eslint-disable-next-line no-fallthrough\n    case RootErrored: {\n      // We should have already attempted to retry this tree. If we reached\n      // this point, it errored again. Commit it.\n      commitRoot(root);\n      break;\n    }\n    case RootSuspended: {\n      markRootSuspended(root, lanes);\n\n      // We have an acceptable loading state. We need to figure out if we\n      // should immediately commit it or wait a bit.\n\n      if (\n        includesOnlyRetries(lanes) &&\n        // do not delay if we're inside an act() scope\n        !shouldForceFlushFallbacksInDEV()\n      ) {\n        // This render only included retries, no updates. Throttle committing\n        // retries so that we don't show too many loading states too quickly.\n        const msUntilTimeout =\n          globalMostRecentFallbackTime + FALLBACK_THROTTLE_MS - now();\n        // Don't bother with a very short suspense time.\n        if (msUntilTimeout > 10) {\n          const nextLanes = getNextLanes(root, NoLanes);\n          if (nextLanes !== NoLanes) {\n            // There's additional work on this root.\n            break;\n          }\n          const suspendedLanes = root.suspendedLanes;\n          if (!isSubsetOfLanes(suspendedLanes, lanes)) {\n            // We should prefer to render the fallback of at the last\n            // suspended level. Ping the last suspended level to try\n            // rendering it again.\n            // FIXME: What if the suspended lanes are Idle? Should not restart.\n            const eventTime = requestEventTime();\n            markRootPinged(root, suspendedLanes, eventTime);\n            break;\n          }\n\n          // The render is suspended, it hasn't timed out, and there's no\n          // lower priority work to do. Instead of committing the fallback\n          // immediately, wait for more data to arrive.\n          root.timeoutHandle = scheduleTimeout(\n            commitRoot.bind(null, root),\n            msUntilTimeout,\n          );\n          break;\n        }\n      }\n      // The work expired. Commit immediately.\n      commitRoot(root);\n      break;\n    }\n    case RootSuspendedWithDelay: {\n      markRootSuspended(root, lanes);\n\n      if (includesOnlyTransitions(lanes)) {\n        // This is a transition, so we should exit without committing a\n        // placeholder and without scheduling a timeout. Delay indefinitely\n        // until we receive more data.\n        break;\n      }\n\n      if (!shouldForceFlushFallbacksInDEV()) {\n        // This is not a transition, but we did trigger an avoided state.\n        // Schedule a placeholder to display after a short delay, using the Just\n        // Noticeable Difference.\n        // TODO: Is the JND optimization worth the added complexity? If this is\n        // the only reason we track the event time, then probably not.\n        // Consider removing.\n\n        const mostRecentEventTime = getMostRecentEventTime(root, lanes);\n        const eventTimeMs = mostRecentEventTime;\n        const timeElapsedMs = now() - eventTimeMs;\n        const msUntilTimeout = jnd(timeElapsedMs) - timeElapsedMs;\n\n        // Don't bother with a very short suspense time.\n        if (msUntilTimeout > 10) {\n          // Instead of committing the fallback immediately, wait for more data\n          // to arrive.\n          root.timeoutHandle = scheduleTimeout(\n            commitRoot.bind(null, root),\n            msUntilTimeout,\n          );\n          break;\n        }\n      }\n\n      // Commit the placeholder.\n      commitRoot(root);\n      break;\n    }\n    case RootCompleted: {\n      // The work completed. Ready to commit.\n      commitRoot(root);\n      break;\n    }\n    default: {\n      invariant(false, 'Unknown root exit status.');\n    }\n  }\n}\n\nfunction markRootSuspended(root, suspendedLanes) {\n  // When suspending, we should always exclude lanes that were pinged or (more\n  // rarely, since we try to avoid it) updated during the render phase.\n  // TODO: Lol maybe there's a better way to factor this besides this\n  // obnoxiously named function :)\n  suspendedLanes = removeLanes(suspendedLanes, workInProgressRootPingedLanes);\n  suspendedLanes = removeLanes(suspendedLanes, workInProgressRootUpdatedLanes);\n  markRootSuspended_dontCallThisOneDirectly(root, suspendedLanes);\n}\n\n// This is the entry point for synchronous tasks that don't go\n// through Scheduler\nfunction performSyncWorkOnRoot(root) {\n  invariant(\n    (executionContext & (RenderContext | CommitContext)) === NoContext,\n    'Should not already be working.',\n  );\n\n  flushPassiveEffects();\n\n  let lanes;\n  let exitStatus;\n  if (\n    root === workInProgressRoot &&\n    includesSomeLane(root.expiredLanes, workInProgressRootRenderLanes)\n  ) {\n    // There's a partial tree, and at least one of its lanes has expired. Finish\n    // rendering it before rendering the rest of the expired work.\n    lanes = workInProgressRootRenderLanes;\n    exitStatus = renderRootSync(root, lanes);\n    if (\n      includesSomeLane(\n        workInProgressRootIncludedLanes,\n        workInProgressRootUpdatedLanes,\n      )\n    ) {\n      // The render included lanes that were updated during the render phase.\n      // For example, when unhiding a hidden tree, we include all the lanes\n      // that were previously skipped when the tree was hidden. That set of\n      // lanes is a superset of the lanes we started rendering with.\n      //\n      // Note that this only happens when part of the tree is rendered\n      // concurrently. If the whole tree is rendered synchronously, then there\n      // are no interleaved events.\n      lanes = getNextLanes(root, lanes);\n      exitStatus = renderRootSync(root, lanes);\n    }\n  } else {\n    lanes = getNextLanes(root, NoLanes);\n    exitStatus = renderRootSync(root, lanes);\n  }\n\n  if (root.tag !== LegacyRoot && exitStatus === RootErrored) {\n    executionContext |= RetryAfterError;\n\n    // If an error occurred during hydration,\n    // discard server response and fall back to client side render.\n    if (root.hydrate) {\n      root.hydrate = false;\n      clearContainer(root.containerInfo);\n    }\n\n    // If something threw an error, try rendering one more time. We'll render\n    // synchronously to block concurrent data mutations, and we'll includes\n    // all pending updates are included. If it still fails after the second\n    // attempt, we'll give up and commit the resulting tree.\n    lanes = getLanesToRetrySynchronouslyOnError(root);\n    if (lanes !== NoLanes) {\n      exitStatus = renderRootSync(root, lanes);\n    }\n  }\n\n  if (exitStatus === RootFatalErrored) {\n    const fatalError = workInProgressRootFatalError;\n    prepareFreshStack(root, NoLanes);\n    markRootSuspended(root, lanes);\n    ensureRootIsScheduled(root, now());\n    throw fatalError;\n  }\n\n  // We now have a consistent tree. Because this is a sync render, we\n  // will commit it even if something suspended.\n  const finishedWork: Fiber = (root.current.alternate: any);\n  root.finishedWork = finishedWork;\n  root.finishedLanes = lanes;\n  commitRoot(root);\n\n  // Before exiting, make sure there's a callback scheduled for the next\n  // pending level.\n  ensureRootIsScheduled(root, now());\n\n  return null;\n}\n\nexport function flushRoot(root: FiberRoot, lanes: Lanes) {\n  markRootExpired(root, lanes);\n  ensureRootIsScheduled(root, now());\n  if ((executionContext & (RenderContext | CommitContext)) === NoContext) {\n    resetRenderTimer();\n    flushSyncCallbackQueue();\n  }\n}\n\nexport function getExecutionContext(): ExecutionContext {\n  return executionContext;\n}\n\nexport function flushDiscreteUpdates() {\n  // TODO: Should be able to flush inside batchedUpdates, but not inside `act`.\n  // However, `act` uses `batchedUpdates`, so there's no way to distinguish\n  // those two cases. Need to fix this before exposing flushDiscreteUpdates\n  // as a public API.\n  if (\n    (executionContext & (BatchedContext | RenderContext | CommitContext)) !==\n    NoContext\n  ) {\n    if (__DEV__) {\n      if ((executionContext & RenderContext) !== NoContext) {\n        console.error(\n          'unstable_flushDiscreteUpdates: Cannot flush updates when React is ' +\n            'already rendering.',\n        );\n      }\n    }\n    // We're already rendering, so we can't synchronously flush pending work.\n    // This is probably a nested event dispatch triggered by a lifecycle/effect,\n    // like `el.focus()`. Exit.\n    return;\n  }\n  flushPendingDiscreteUpdates();\n  // If the discrete updates scheduled passive effects, flush them now so that\n  // they fire before the next serial event.\n  flushPassiveEffects();\n}\n\nexport function deferredUpdates<A>(fn: () => A): A {\n  if (decoupleUpdatePriorityFromScheduler) {\n    const previousLanePriority = getCurrentUpdateLanePriority();\n    try {\n      setCurrentUpdateLanePriority(DefaultLanePriority);\n      return runWithPriority(NormalSchedulerPriority, fn);\n    } finally {\n      setCurrentUpdateLanePriority(previousLanePriority);\n    }\n  } else {\n    return runWithPriority(NormalSchedulerPriority, fn);\n  }\n}\n\nfunction flushPendingDiscreteUpdates() {\n  if (rootsWithPendingDiscreteUpdates !== null) {\n    // For each root with pending discrete updates, schedule a callback to\n    // immediately flush them.\n    const roots = rootsWithPendingDiscreteUpdates;\n    rootsWithPendingDiscreteUpdates = null;\n    roots.forEach(root => {\n      markDiscreteUpdatesExpired(root);\n      ensureRootIsScheduled(root, now());\n    });\n  }\n  // Now flush the immediate queue.\n  flushSyncCallbackQueue();\n}\n\nexport function batchedUpdates<A, R>(fn: A => R, a: A): R {\n  const prevExecutionContext = executionContext;\n  executionContext |= BatchedContext;\n  try {\n    return fn(a);\n  } finally {\n    executionContext = prevExecutionContext;\n    if (executionContext === NoContext) {\n      // Flush the immediate callbacks that were scheduled during this batch\n      resetRenderTimer();\n      flushSyncCallbackQueue();\n    }\n  }\n}\n\nexport function batchedEventUpdates<A, R>(fn: A => R, a: A): R {\n  const prevExecutionContext = executionContext;\n  executionContext |= EventContext;\n  try {\n    return fn(a);\n  } finally {\n    executionContext = prevExecutionContext;\n    if (executionContext === NoContext) {\n      // Flush the immediate callbacks that were scheduled during this batch\n      resetRenderTimer();\n      flushSyncCallbackQueue();\n    }\n  }\n}\n\nexport function discreteUpdates<A, B, C, D, R>(\n  fn: (A, B, C) => R,\n  a: A,\n  b: B,\n  c: C,\n  d: D,\n): R {\n  const prevExecutionContext = executionContext;\n  executionContext |= DiscreteEventContext;\n\n  if (decoupleUpdatePriorityFromScheduler) {\n    const previousLanePriority = getCurrentUpdateLanePriority();\n    try {\n      setCurrentUpdateLanePriority(InputDiscreteLanePriority);\n      return runWithPriority(\n        UserBlockingSchedulerPriority,\n        fn.bind(null, a, b, c, d),\n      );\n    } finally {\n      setCurrentUpdateLanePriority(previousLanePriority);\n      executionContext = prevExecutionContext;\n      if (executionContext === NoContext) {\n        // Flush the immediate callbacks that were scheduled during this batch\n        resetRenderTimer();\n        flushSyncCallbackQueue();\n      }\n    }\n  } else {\n    try {\n      return runWithPriority(\n        UserBlockingSchedulerPriority,\n        fn.bind(null, a, b, c, d),\n      );\n    } finally {\n      executionContext = prevExecutionContext;\n      if (executionContext === NoContext) {\n        // Flush the immediate callbacks that were scheduled during this batch\n        resetRenderTimer();\n        flushSyncCallbackQueue();\n      }\n    }\n  }\n}\n\nexport function unbatchedUpdates<A, R>(fn: (a: A) => R, a: A): R {\n  const prevExecutionContext = executionContext;\n  executionContext &= ~BatchedContext;\n  executionContext |= LegacyUnbatchedContext;\n  try {\n    return fn(a);\n  } finally {\n    executionContext = prevExecutionContext;\n    if (executionContext === NoContext) {\n      // Flush the immediate callbacks that were scheduled during this batch\n      resetRenderTimer();\n      flushSyncCallbackQueue();\n    }\n  }\n}\n\nexport function flushSync<A, R>(fn: A => R, a: A): R {\n  const prevExecutionContext = executionContext;\n  if ((prevExecutionContext & (RenderContext | CommitContext)) !== NoContext) {\n    if (__DEV__) {\n      console.error(\n        'flushSync was called from inside a lifecycle method. React cannot ' +\n          'flush when React is already rendering. Consider moving this call to ' +\n          'a scheduler task or micro task.',\n      );\n    }\n    return fn(a);\n  }\n  executionContext |= BatchedContext;\n\n  if (decoupleUpdatePriorityFromScheduler) {\n    const previousLanePriority = getCurrentUpdateLanePriority();\n    try {\n      setCurrentUpdateLanePriority(SyncLanePriority);\n      if (fn) {\n        return runWithPriority(ImmediateSchedulerPriority, fn.bind(null, a));\n      } else {\n        return (undefined: $FlowFixMe);\n      }\n    } finally {\n      setCurrentUpdateLanePriority(previousLanePriority);\n      executionContext = prevExecutionContext;\n      // Flush the immediate callbacks that were scheduled during this batch.\n      // Note that this will happen even if batchedUpdates is higher up\n      // the stack.\n      flushSyncCallbackQueue();\n    }\n  } else {\n    try {\n      if (fn) {\n        return runWithPriority(ImmediateSchedulerPriority, fn.bind(null, a));\n      } else {\n        return (undefined: $FlowFixMe);\n      }\n    } finally {\n      executionContext = prevExecutionContext;\n      // Flush the immediate callbacks that were scheduled during this batch.\n      // Note that this will happen even if batchedUpdates is higher up\n      // the stack.\n      flushSyncCallbackQueue();\n    }\n  }\n}\n\nexport function flushControlled(fn: () => mixed): void {\n  const prevExecutionContext = executionContext;\n  executionContext |= BatchedContext;\n  if (decoupleUpdatePriorityFromScheduler) {\n    const previousLanePriority = getCurrentUpdateLanePriority();\n    try {\n      setCurrentUpdateLanePriority(SyncLanePriority);\n      runWithPriority(ImmediateSchedulerPriority, fn);\n    } finally {\n      setCurrentUpdateLanePriority(previousLanePriority);\n\n      executionContext = prevExecutionContext;\n      if (executionContext === NoContext) {\n        // Flush the immediate callbacks that were scheduled during this batch\n        resetRenderTimer();\n        flushSyncCallbackQueue();\n      }\n    }\n  } else {\n    try {\n      runWithPriority(ImmediateSchedulerPriority, fn);\n    } finally {\n      executionContext = prevExecutionContext;\n      if (executionContext === NoContext) {\n        // Flush the immediate callbacks that were scheduled during this batch\n        resetRenderTimer();\n        flushSyncCallbackQueue();\n      }\n    }\n  }\n}\n\nexport function pushRenderLanes(fiber: Fiber, lanes: Lanes) {\n  pushToStack(subtreeRenderLanesCursor, subtreeRenderLanes, fiber);\n  subtreeRenderLanes = mergeLanes(subtreeRenderLanes, lanes);\n  workInProgressRootIncludedLanes = mergeLanes(\n    workInProgressRootIncludedLanes,\n    lanes,\n  );\n}\n\nexport function popRenderLanes(fiber: Fiber) {\n  subtreeRenderLanes = subtreeRenderLanesCursor.current;\n  popFromStack(subtreeRenderLanesCursor, fiber);\n}\n\nfunction prepareFreshStack(root: FiberRoot, lanes: Lanes) {\n  root.finishedWork = null;\n  root.finishedLanes = NoLanes;\n\n  const timeoutHandle = root.timeoutHandle;\n  if (timeoutHandle !== noTimeout) {\n    // The root previous suspended and scheduled a timeout to commit a fallback\n    // state. Now that we have additional work, cancel the timeout.\n    root.timeoutHandle = noTimeout;\n    // $FlowFixMe Complains noTimeout is not a TimeoutID, despite the check above\n    cancelTimeout(timeoutHandle);\n  }\n\n  if (workInProgress !== null) {\n    let interruptedWork = workInProgress.return;\n    while (interruptedWork !== null) {\n      unwindInterruptedWork(interruptedWork);\n      interruptedWork = interruptedWork.return;\n    }\n  }\n  workInProgressRoot = root;\n  workInProgress = createWorkInProgress(root.current, null);\n  workInProgressRootRenderLanes = subtreeRenderLanes = workInProgressRootIncludedLanes = lanes;\n  workInProgressRootExitStatus = RootIncomplete;\n  workInProgressRootFatalError = null;\n  workInProgressRootSkippedLanes = NoLanes;\n  workInProgressRootUpdatedLanes = NoLanes;\n  workInProgressRootPingedLanes = NoLanes;\n\n  if (enableSchedulerTracing) {\n    spawnedWorkDuringRender = null;\n  }\n\n  if (__DEV__) {\n    ReactStrictModeWarnings.discardPendingWarnings();\n  }\n}\n\nfunction handleError(root, thrownValue): void {\n  do {\n    let erroredWork = workInProgress;\n    try {\n      // Reset module-level state that was set during the render phase.\n      resetContextDependencies();\n      resetHooksAfterThrow();\n      resetCurrentDebugFiberInDEV();\n      // TODO: I found and added this missing line while investigating a\n      // separate issue. Write a regression test using string refs.\n      ReactCurrentOwner.current = null;\n\n      if (erroredWork === null || erroredWork.return === null) {\n        // Expected to be working on a non-root fiber. This is a fatal error\n        // because there's no ancestor that can handle it; the root is\n        // supposed to capture all errors that weren't caught by an error\n        // boundary.\n        workInProgressRootExitStatus = RootFatalErrored;\n        workInProgressRootFatalError = thrownValue;\n        // Set `workInProgress` to null. This represents advancing to the next\n        // sibling, or the parent if there are no siblings. But since the root\n        // has no siblings nor a parent, we set it to null. Usually this is\n        // handled by `completeUnitOfWork` or `unwindWork`, but since we're\n        // intentionally not calling those, we need set it here.\n        // TODO: Consider calling `unwindWork` to pop the contexts.\n        workInProgress = null;\n        return;\n      }\n\n      if (enableProfilerTimer && erroredWork.mode & ProfileMode) {\n        // Record the time spent rendering before an error was thrown. This\n        // avoids inaccurate Profiler durations in the case of a\n        // suspended render.\n        stopProfilerTimerIfRunningAndRecordDelta(erroredWork, true);\n      }\n\n      throwException(\n        root,\n        erroredWork.return,\n        erroredWork,\n        thrownValue,\n        workInProgressRootRenderLanes,\n      );\n      completeUnitOfWork(erroredWork);\n    } catch (yetAnotherThrownValue) {\n      // Something in the return path also threw.\n      thrownValue = yetAnotherThrownValue;\n      if (workInProgress === erroredWork && erroredWork !== null) {\n        // If this boundary has already errored, then we had trouble processing\n        // the error. Bubble it to the next boundary.\n        erroredWork = erroredWork.return;\n        workInProgress = erroredWork;\n      } else {\n        erroredWork = workInProgress;\n      }\n      continue;\n    }\n    // Return to the normal work loop.\n    return;\n  } while (true);\n}\n\nfunction pushDispatcher() {\n  const prevDispatcher = ReactCurrentDispatcher.current;\n  ReactCurrentDispatcher.current = ContextOnlyDispatcher;\n  if (prevDispatcher === null) {\n    // The React isomorphic package does not include a default dispatcher.\n    // Instead the first renderer will lazily attach one, in order to give\n    // nicer error messages.\n    return ContextOnlyDispatcher;\n  } else {\n    return prevDispatcher;\n  }\n}\n\nfunction popDispatcher(prevDispatcher) {\n  ReactCurrentDispatcher.current = prevDispatcher;\n}\n\nfunction pushInteractions(root) {\n  if (enableSchedulerTracing) {\n    const prevInteractions: Set<Interaction> | null = __interactionsRef.current;\n    __interactionsRef.current = root.memoizedInteractions;\n    return prevInteractions;\n  }\n  return null;\n}\n\nfunction popInteractions(prevInteractions) {\n  if (enableSchedulerTracing) {\n    __interactionsRef.current = prevInteractions;\n  }\n}\n\nexport function markCommitTimeOfFallback() {\n  globalMostRecentFallbackTime = now();\n}\n\nexport function markSkippedUpdateLanes(lane: Lane | Lanes): void {\n  workInProgressRootSkippedLanes = mergeLanes(\n    lane,\n    workInProgressRootSkippedLanes,\n  );\n}\n\nexport function renderDidSuspend(): void {\n  if (workInProgressRootExitStatus === RootIncomplete) {\n    workInProgressRootExitStatus = RootSuspended;\n  }\n}\n\nexport function renderDidSuspendDelayIfPossible(): void {\n  if (\n    workInProgressRootExitStatus === RootIncomplete ||\n    workInProgressRootExitStatus === RootSuspended\n  ) {\n    workInProgressRootExitStatus = RootSuspendedWithDelay;\n  }\n\n  // Check if there are updates that we skipped tree that might have unblocked\n  // this render.\n  if (\n    workInProgressRoot !== null &&\n    (includesNonIdleWork(workInProgressRootSkippedLanes) ||\n      includesNonIdleWork(workInProgressRootUpdatedLanes))\n  ) {\n    // Mark the current render as suspended so that we switch to working on\n    // the updates that were skipped. Usually we only suspend at the end of\n    // the render phase.\n    // TODO: We should probably always mark the root as suspended immediately\n    // (inside this function), since by suspending at the end of the render\n    // phase introduces a potential mistake where we suspend lanes that were\n    // pinged or updated while we were rendering.\n    markRootSuspended(workInProgressRoot, workInProgressRootRenderLanes);\n  }\n}\n\nexport function renderDidError() {\n  if (workInProgressRootExitStatus !== RootCompleted) {\n    workInProgressRootExitStatus = RootErrored;\n  }\n}\n\n// Called during render to determine if anything has suspended.\n// Returns false if we're not sure.\nexport function renderHasNotSuspendedYet(): boolean {\n  // If something errored or completed, we can't really be sure,\n  // so those are false.\n  return workInProgressRootExitStatus === RootIncomplete;\n}\n\nfunction renderRootSync(root: FiberRoot, lanes: Lanes) {\n  const prevExecutionContext = executionContext;\n  executionContext |= RenderContext;\n  const prevDispatcher = pushDispatcher();\n\n  // If the root or lanes have changed, throw out the existing stack\n  // and prepare a fresh one. Otherwise we'll continue where we left off.\n  if (workInProgressRoot !== root || workInProgressRootRenderLanes !== lanes) {\n    prepareFreshStack(root, lanes);\n    startWorkOnPendingInteractions(root, lanes);\n  }\n\n  const prevInteractions = pushInteractions(root);\n\n  if (__DEV__) {\n    if (enableDebugTracing) {\n      logRenderStarted(lanes);\n    }\n  }\n\n  if (enableSchedulingProfiler) {\n    markRenderStarted(lanes);\n  }\n\n  do {\n    try {\n      workLoopSync();\n      break;\n    } catch (thrownValue) {\n      handleError(root, thrownValue);\n    }\n  } while (true);\n  resetContextDependencies();\n  if (enableSchedulerTracing) {\n    popInteractions(((prevInteractions: any): Set<Interaction>));\n  }\n\n  executionContext = prevExecutionContext;\n  popDispatcher(prevDispatcher);\n\n  if (workInProgress !== null) {\n    // This is a sync render, so we should have finished the whole tree.\n    invariant(\n      false,\n      'Cannot commit an incomplete root. This error is likely caused by a ' +\n        'bug in React. Please file an issue.',\n    );\n  }\n\n  if (__DEV__) {\n    if (enableDebugTracing) {\n      logRenderStopped();\n    }\n  }\n\n  if (enableSchedulingProfiler) {\n    markRenderStopped();\n  }\n\n  // Set this to null to indicate there's no in-progress render.\n  workInProgressRoot = null;\n  workInProgressRootRenderLanes = NoLanes;\n\n  return workInProgressRootExitStatus;\n}\n\n// The work loop is an extremely hot path. Tell Closure not to inline it.\n/** @noinline */\nfunction workLoopSync() {\n  // Already timed out, so perform work without checking if we need to yield.\n  while (workInProgress !== null) {\n    performUnitOfWork(workInProgress);\n  }\n}\n\nfunction renderRootConcurrent(root: FiberRoot, lanes: Lanes) {\n  const prevExecutionContext = executionContext;\n  executionContext |= RenderContext;\n  const prevDispatcher = pushDispatcher();\n\n  // If the root or lanes have changed, throw out the existing stack\n  // and prepare a fresh one. Otherwise we'll continue where we left off.\n  if (workInProgressRoot !== root || workInProgressRootRenderLanes !== lanes) {\n    resetRenderTimer();\n    prepareFreshStack(root, lanes);\n    startWorkOnPendingInteractions(root, lanes);\n  }\n\n  const prevInteractions = pushInteractions(root);\n\n  if (__DEV__) {\n    if (enableDebugTracing) {\n      logRenderStarted(lanes);\n    }\n  }\n\n  if (enableSchedulingProfiler) {\n    markRenderStarted(lanes);\n  }\n\n  do {\n    try {\n      workLoopConcurrent();\n      break;\n    } catch (thrownValue) {\n      handleError(root, thrownValue);\n    }\n  } while (true);\n  resetContextDependencies();\n  if (enableSchedulerTracing) {\n    popInteractions(((prevInteractions: any): Set<Interaction>));\n  }\n\n  popDispatcher(prevDispatcher);\n  executionContext = prevExecutionContext;\n\n  if (__DEV__) {\n    if (enableDebugTracing) {\n      logRenderStopped();\n    }\n  }\n\n  // Check if the tree has completed.\n  if (workInProgress !== null) {\n    // Still work remaining.\n    if (enableSchedulingProfiler) {\n      markRenderYielded();\n    }\n    return RootIncomplete;\n  } else {\n    // Completed the tree.\n    if (enableSchedulingProfiler) {\n      markRenderStopped();\n    }\n\n    // Set this to null to indicate there's no in-progress render.\n    workInProgressRoot = null;\n    workInProgressRootRenderLanes = NoLanes;\n\n    // Return the final exit status.\n    return workInProgressRootExitStatus;\n  }\n}\n\n/** @noinline */\nfunction workLoopConcurrent() {\n  // Perform work until Scheduler asks us to yield\n  while (workInProgress !== null && !shouldYield()) {\n    performUnitOfWork(workInProgress);\n  }\n}\n\nfunction performUnitOfWork(unitOfWork: Fiber): void {\n  // The current, flushed, state of this fiber is the alternate. Ideally\n  // nothing should rely on this, but relying on it here means that we don't\n  // need an additional field on the work in progress.\n  const current = unitOfWork.alternate;\n  setCurrentDebugFiberInDEV(unitOfWork);\n\n  let next;\n  if (enableProfilerTimer && (unitOfWork.mode & ProfileMode) !== NoMode) {\n    startProfilerTimer(unitOfWork);\n    next = beginWork(current, unitOfWork, subtreeRenderLanes);\n    stopProfilerTimerIfRunningAndRecordDelta(unitOfWork, true);\n  } else {\n    next = beginWork(current, unitOfWork, subtreeRenderLanes);\n  }\n\n  resetCurrentDebugFiberInDEV();\n  unitOfWork.memoizedProps = unitOfWork.pendingProps;\n  if (next === null) {\n    // If this doesn't spawn new work, complete the current work.\n    completeUnitOfWork(unitOfWork);\n  } else {\n    workInProgress = next;\n  }\n\n  ReactCurrentOwner.current = null;\n}\n\nfunction completeUnitOfWork(unitOfWork: Fiber): void {\n  // Attempt to complete the current unit of work, then move to the next\n  // sibling. If there are no more siblings, return to the parent fiber.\n  let completedWork = unitOfWork;\n  do {\n    // The current, flushed, state of this fiber is the alternate. Ideally\n    // nothing should rely on this, but relying on it here means that we don't\n    // need an additional field on the work in progress.\n    const current = completedWork.alternate;\n    const returnFiber = completedWork.return;\n\n    // Check if the work completed or if something threw.\n    if ((completedWork.flags & Incomplete) === NoFlags) {\n      setCurrentDebugFiberInDEV(completedWork);\n      let next;\n      if (\n        !enableProfilerTimer ||\n        (completedWork.mode & ProfileMode) === NoMode\n      ) {\n        next = completeWork(current, completedWork, subtreeRenderLanes);\n      } else {\n        startProfilerTimer(completedWork);\n        next = completeWork(current, completedWork, subtreeRenderLanes);\n        // Update render duration assuming we didn't error.\n        stopProfilerTimerIfRunningAndRecordDelta(completedWork, false);\n      }\n      resetCurrentDebugFiberInDEV();\n\n      if (next !== null) {\n        // Completing this fiber spawned new work. Work on that next.\n        workInProgress = next;\n        return;\n      }\n\n      resetChildLanes(completedWork);\n\n      if (\n        returnFiber !== null &&\n        // Do not append effects to parents if a sibling failed to complete\n        (returnFiber.flags & Incomplete) === NoFlags\n      ) {\n        // Append all the effects of the subtree and this fiber onto the effect\n        // list of the parent. The completion order of the children affects the\n        // side-effect order.\n        if (returnFiber.firstEffect === null) {\n          returnFiber.firstEffect = completedWork.firstEffect;\n        }\n        if (completedWork.lastEffect !== null) {\n          if (returnFiber.lastEffect !== null) {\n            returnFiber.lastEffect.nextEffect = completedWork.firstEffect;\n          }\n          returnFiber.lastEffect = completedWork.lastEffect;\n        }\n\n        // If this fiber had side-effects, we append it AFTER the children's\n        // side-effects. We can perform certain side-effects earlier if needed,\n        // by doing multiple passes over the effect list. We don't want to\n        // schedule our own side-effect on our own list because if end up\n        // reusing children we'll schedule this effect onto itself since we're\n        // at the end.\n        const flags = completedWork.flags;\n\n        // Skip both NoWork and PerformedWork tags when creating the effect\n        // list. PerformedWork effect is read by React DevTools but shouldn't be\n        // committed.\n        if (flags > PerformedWork) {\n          if (returnFiber.lastEffect !== null) {\n            returnFiber.lastEffect.nextEffect = completedWork;\n          } else {\n            returnFiber.firstEffect = completedWork;\n          }\n          returnFiber.lastEffect = completedWork;\n        }\n      }\n    } else {\n      // This fiber did not complete because something threw. Pop values off\n      // the stack without entering the complete phase. If this is a boundary,\n      // capture values if possible.\n      const next = unwindWork(completedWork, subtreeRenderLanes);\n\n      // Because this fiber did not complete, don't reset its expiration time.\n\n      if (next !== null) {\n        // If completing this work spawned new work, do that next. We'll come\n        // back here again.\n        // Since we're restarting, remove anything that is not a host effect\n        // from the effect tag.\n        next.flags &= HostEffectMask;\n        workInProgress = next;\n        return;\n      }\n\n      if (\n        enableProfilerTimer &&\n        (completedWork.mode & ProfileMode) !== NoMode\n      ) {\n        // Record the render duration for the fiber that errored.\n        stopProfilerTimerIfRunningAndRecordDelta(completedWork, false);\n\n        // Include the time spent working on failed children before continuing.\n        let actualDuration = completedWork.actualDuration;\n        let child = completedWork.child;\n        while (child !== null) {\n          actualDuration += child.actualDuration;\n          child = child.sibling;\n        }\n        completedWork.actualDuration = actualDuration;\n      }\n\n      if (returnFiber !== null) {\n        // Mark the parent fiber as incomplete and clear its effect list.\n        returnFiber.firstEffect = returnFiber.lastEffect = null;\n        returnFiber.flags |= Incomplete;\n      }\n    }\n\n    const siblingFiber = completedWork.sibling;\n    if (siblingFiber !== null) {\n      // If there is more work to do in this returnFiber, do that next.\n      workInProgress = siblingFiber;\n      return;\n    }\n    // Otherwise, return to the parent\n    completedWork = returnFiber;\n    // Update the next thing we're working on in case something throws.\n    workInProgress = completedWork;\n  } while (completedWork !== null);\n\n  // We've reached the root.\n  if (workInProgressRootExitStatus === RootIncomplete) {\n    workInProgressRootExitStatus = RootCompleted;\n  }\n}\n\nfunction resetChildLanes(completedWork: Fiber) {\n  if (\n    // TODO: Move this check out of the hot path by moving `resetChildLanes`\n    // to switch statement in `completeWork`.\n    (completedWork.tag === LegacyHiddenComponent ||\n      completedWork.tag === OffscreenComponent) &&\n    completedWork.memoizedState !== null &&\n    !includesSomeLane(subtreeRenderLanes, (OffscreenLane: Lane)) &&\n    (completedWork.mode & ConcurrentMode) !== NoLanes\n  ) {\n    // The children of this component are hidden. Don't bubble their\n    // expiration times.\n    return;\n  }\n\n  let newChildLanes = NoLanes;\n\n  // Bubble up the earliest expiration time.\n  if (enableProfilerTimer && (completedWork.mode & ProfileMode) !== NoMode) {\n    // In profiling mode, resetChildExpirationTime is also used to reset\n    // profiler durations.\n    let actualDuration = completedWork.actualDuration;\n    let treeBaseDuration = ((completedWork.selfBaseDuration: any): number);\n\n    // When a fiber is cloned, its actualDuration is reset to 0. This value will\n    // only be updated if work is done on the fiber (i.e. it doesn't bailout).\n    // When work is done, it should bubble to the parent's actualDuration. If\n    // the fiber has not been cloned though, (meaning no work was done), then\n    // this value will reflect the amount of time spent working on a previous\n    // render. In that case it should not bubble. We determine whether it was\n    // cloned by comparing the child pointer.\n    const shouldBubbleActualDurations =\n      completedWork.alternate === null ||\n      completedWork.child !== completedWork.alternate.child;\n\n    let child = completedWork.child;\n    while (child !== null) {\n      newChildLanes = mergeLanes(\n        newChildLanes,\n        mergeLanes(child.lanes, child.childLanes),\n      );\n      if (shouldBubbleActualDurations) {\n        actualDuration += child.actualDuration;\n      }\n      treeBaseDuration += child.treeBaseDuration;\n      child = child.sibling;\n    }\n\n    const isTimedOutSuspense =\n      completedWork.tag === SuspenseComponent &&\n      completedWork.memoizedState !== null;\n    if (isTimedOutSuspense) {\n      // Don't count time spent in a timed out Suspense subtree as part of the base duration.\n      const primaryChildFragment = completedWork.child;\n      if (primaryChildFragment !== null) {\n        treeBaseDuration -= ((primaryChildFragment.treeBaseDuration: any): number);\n      }\n    }\n\n    completedWork.actualDuration = actualDuration;\n    completedWork.treeBaseDuration = treeBaseDuration;\n  } else {\n    let child = completedWork.child;\n    while (child !== null) {\n      newChildLanes = mergeLanes(\n        newChildLanes,\n        mergeLanes(child.lanes, child.childLanes),\n      );\n      child = child.sibling;\n    }\n  }\n\n  completedWork.childLanes = newChildLanes;\n}\n\nfunction commitRoot(root) {\n  const renderPriorityLevel = getCurrentPriorityLevel();\n  runWithPriority(\n    ImmediateSchedulerPriority,\n    commitRootImpl.bind(null, root, renderPriorityLevel),\n  );\n  return null;\n}\n\nfunction commitRootImpl(root, renderPriorityLevel) {\n  do {\n    // `flushPassiveEffects` will call `flushSyncUpdateQueue` at the end, which\n    // means `flushPassiveEffects` will sometimes result in additional\n    // passive effects. So we need to keep flushing in a loop until there are\n    // no more pending effects.\n    // TODO: Might be better if `flushPassiveEffects` did not automatically\n    // flush synchronous work at the end, to avoid factoring hazards like this.\n    flushPassiveEffects();\n  } while (rootWithPendingPassiveEffects !== null);\n  flushRenderPhaseStrictModeWarningsInDEV();\n\n  invariant(\n    (executionContext & (RenderContext | CommitContext)) === NoContext,\n    'Should not already be working.',\n  );\n\n  const finishedWork = root.finishedWork;\n  const lanes = root.finishedLanes;\n\n  if (__DEV__) {\n    if (enableDebugTracing) {\n      logCommitStarted(lanes);\n    }\n  }\n\n  if (enableSchedulingProfiler) {\n    markCommitStarted(lanes);\n  }\n\n  if (finishedWork === null) {\n    if (__DEV__) {\n      if (enableDebugTracing) {\n        logCommitStopped();\n      }\n    }\n\n    if (enableSchedulingProfiler) {\n      markCommitStopped();\n    }\n\n    return null;\n  }\n  root.finishedWork = null;\n  root.finishedLanes = NoLanes;\n\n  invariant(\n    finishedWork !== root.current,\n    'Cannot commit the same tree as before. This error is likely caused by ' +\n      'a bug in React. Please file an issue.',\n  );\n\n  // commitRoot never returns a continuation; it always finishes synchronously.\n  // So we can clear these now to allow a new callback to be scheduled.\n  root.callbackNode = null;\n\n  // Update the first and last pending times on this root. The new first\n  // pending time is whatever is left on the root fiber.\n  let remainingLanes = mergeLanes(finishedWork.lanes, finishedWork.childLanes);\n  markRootFinished(root, remainingLanes);\n\n  // Clear already finished discrete updates in case that a later call of\n  // `flushDiscreteUpdates` starts a useless render pass which may cancels\n  // a scheduled timeout.\n  if (rootsWithPendingDiscreteUpdates !== null) {\n    if (\n      !hasDiscreteLanes(remainingLanes) &&\n      rootsWithPendingDiscreteUpdates.has(root)\n    ) {\n      rootsWithPendingDiscreteUpdates.delete(root);\n    }\n  }\n\n  if (root === workInProgressRoot) {\n    // We can reset these now that they are finished.\n    workInProgressRoot = null;\n    workInProgress = null;\n    workInProgressRootRenderLanes = NoLanes;\n  } else {\n    // This indicates that the last root we worked on is not the same one that\n    // we're committing now. This most commonly happens when a suspended root\n    // times out.\n  }\n\n  // Get the list of effects.\n  let firstEffect;\n  if (finishedWork.flags > PerformedWork) {\n    // A fiber's effect list consists only of its children, not itself. So if\n    // the root has an effect, we need to add it to the end of the list. The\n    // resulting list is the set that would belong to the root's parent, if it\n    // had one; that is, all the effects in the tree including the root.\n    if (finishedWork.lastEffect !== null) {\n      finishedWork.lastEffect.nextEffect = finishedWork;\n      firstEffect = finishedWork.firstEffect;\n    } else {\n      firstEffect = finishedWork;\n    }\n  } else {\n    // There is no effect on the root.\n    firstEffect = finishedWork.firstEffect;\n  }\n\n  if (firstEffect !== null) {\n    let previousLanePriority;\n    if (decoupleUpdatePriorityFromScheduler) {\n      previousLanePriority = getCurrentUpdateLanePriority();\n      setCurrentUpdateLanePriority(SyncLanePriority);\n    }\n\n    const prevExecutionContext = executionContext;\n    executionContext |= CommitContext;\n    const prevInteractions = pushInteractions(root);\n\n    // Reset this to null before calling lifecycles\n    ReactCurrentOwner.current = null;\n\n    // The commit phase is broken into several sub-phases. We do a separate pass\n    // of the effect list for each phase: all mutation effects come before all\n    // layout effects, and so on.\n\n    // The first phase a \"before mutation\" phase. We use this phase to read the\n    // state of the host tree right before we mutate it. This is where\n    // getSnapshotBeforeUpdate is called.\n    focusedInstanceHandle = prepareForCommit(root.containerInfo);\n    shouldFireAfterActiveInstanceBlur = false;\n\n    nextEffect = firstEffect;\n    do {\n      if (__DEV__) {\n        invokeGuardedCallback(null, commitBeforeMutationEffects, null);\n        if (hasCaughtError()) {\n          invariant(nextEffect !== null, 'Should be working on an effect.');\n          const error = clearCaughtError();\n          captureCommitPhaseError(nextEffect, error);\n          nextEffect = nextEffect.nextEffect;\n        }\n      } else {\n        try {\n          commitBeforeMutationEffects();\n        } catch (error) {\n          invariant(nextEffect !== null, 'Should be working on an effect.');\n          captureCommitPhaseError(nextEffect, error);\n          nextEffect = nextEffect.nextEffect;\n        }\n      }\n    } while (nextEffect !== null);\n\n    // We no longer need to track the active instance fiber\n    focusedInstanceHandle = null;\n\n    if (enableProfilerTimer) {\n      // Mark the current commit time to be shared by all Profilers in this\n      // batch. This enables them to be grouped later.\n      recordCommitTime();\n    }\n\n    // The next phase is the mutation phase, where we mutate the host tree.\n    nextEffect = firstEffect;\n    do {\n      if (__DEV__) {\n        invokeGuardedCallback(\n          null,\n          commitMutationEffects,\n          null,\n          root,\n          renderPriorityLevel,\n        );\n        if (hasCaughtError()) {\n          invariant(nextEffect !== null, 'Should be working on an effect.');\n          const error = clearCaughtError();\n          captureCommitPhaseError(nextEffect, error);\n          nextEffect = nextEffect.nextEffect;\n        }\n      } else {\n        try {\n          commitMutationEffects(root, renderPriorityLevel);\n        } catch (error) {\n          invariant(nextEffect !== null, 'Should be working on an effect.');\n          captureCommitPhaseError(nextEffect, error);\n          nextEffect = nextEffect.nextEffect;\n        }\n      }\n    } while (nextEffect !== null);\n\n    if (shouldFireAfterActiveInstanceBlur) {\n      afterActiveInstanceBlur();\n    }\n    resetAfterCommit(root.containerInfo);\n\n    // The work-in-progress tree is now the current tree. This must come after\n    // the mutation phase, so that the previous tree is still current during\n    // componentWillUnmount, but before the layout phase, so that the finished\n    // work is current during componentDidMount/Update.\n    root.current = finishedWork;\n\n    // The next phase is the layout phase, where we call effects that read\n    // the host tree after it's been mutated. The idiomatic use case for this is\n    // layout, but class component lifecycles also fire here for legacy reasons.\n    nextEffect = firstEffect;\n    do {\n      if (__DEV__) {\n        invokeGuardedCallback(null, commitLayoutEffects, null, root, lanes);\n        if (hasCaughtError()) {\n          invariant(nextEffect !== null, 'Should be working on an effect.');\n          const error = clearCaughtError();\n          captureCommitPhaseError(nextEffect, error);\n          nextEffect = nextEffect.nextEffect;\n        }\n      } else {\n        try {\n          commitLayoutEffects(root, lanes);\n        } catch (error) {\n          invariant(nextEffect !== null, 'Should be working on an effect.');\n          captureCommitPhaseError(nextEffect, error);\n          nextEffect = nextEffect.nextEffect;\n        }\n      }\n    } while (nextEffect !== null);\n\n    nextEffect = null;\n\n    // Tell Scheduler to yield at the end of the frame, so the browser has an\n    // opportunity to paint.\n    requestPaint();\n\n    if (enableSchedulerTracing) {\n      popInteractions(((prevInteractions: any): Set<Interaction>));\n    }\n    executionContext = prevExecutionContext;\n\n    if (decoupleUpdatePriorityFromScheduler && previousLanePriority != null) {\n      // Reset the priority to the previous non-sync value.\n      setCurrentUpdateLanePriority(previousLanePriority);\n    }\n  } else {\n    // No effects.\n    root.current = finishedWork;\n    // Measure these anyway so the flamegraph explicitly shows that there were\n    // no effects.\n    // TODO: Maybe there's a better way to report this.\n    if (enableProfilerTimer) {\n      recordCommitTime();\n    }\n  }\n\n  const rootDidHavePassiveEffects = rootDoesHavePassiveEffects;\n\n  if (rootDoesHavePassiveEffects) {\n    // This commit has passive effects. Stash a reference to them. But don't\n    // schedule a callback until after flushing layout work.\n    rootDoesHavePassiveEffects = false;\n    rootWithPendingPassiveEffects = root;\n    pendingPassiveEffectsLanes = lanes;\n    pendingPassiveEffectsRenderPriority = renderPriorityLevel;\n  } else {\n    // We are done with the effect chain at this point so let's clear the\n    // nextEffect pointers to assist with GC. If we have passive effects, we'll\n    // clear this in flushPassiveEffects.\n    nextEffect = firstEffect;\n    while (nextEffect !== null) {\n      const nextNextEffect = nextEffect.nextEffect;\n      nextEffect.nextEffect = null;\n      if (nextEffect.flags & Deletion) {\n        detachFiberAfterEffects(nextEffect);\n      }\n      nextEffect = nextNextEffect;\n    }\n  }\n\n  // Read this again, since an effect might have updated it\n  remainingLanes = root.pendingLanes;\n\n  // Check if there's remaining work on this root\n  if (remainingLanes !== NoLanes) {\n    if (enableSchedulerTracing) {\n      if (spawnedWorkDuringRender !== null) {\n        const expirationTimes = spawnedWorkDuringRender;\n        spawnedWorkDuringRender = null;\n        for (let i = 0; i < expirationTimes.length; i++) {\n          scheduleInteractions(\n            root,\n            expirationTimes[i],\n            root.memoizedInteractions,\n          );\n        }\n      }\n      schedulePendingInteractions(root, remainingLanes);\n    }\n  } else {\n    // If there's no remaining work, we can clear the set of already failed\n    // error boundaries.\n    legacyErrorBoundariesThatAlreadyFailed = null;\n  }\n\n  if (enableSchedulerTracing) {\n    if (!rootDidHavePassiveEffects) {\n      // If there are no passive effects, then we can complete the pending interactions.\n      // Otherwise, we'll wait until after the passive effects are flushed.\n      // Wait to do this until after remaining work has been scheduled,\n      // so that we don't prematurely signal complete for interactions when there's e.g. hidden work.\n      finishPendingInteractions(root, lanes);\n    }\n  }\n\n  if (remainingLanes === SyncLane) {\n    // Count the number of times the root synchronously re-renders without\n    // finishing. If there are too many, it indicates an infinite update loop.\n    if (root === rootWithNestedUpdates) {\n      nestedUpdateCount++;\n    } else {\n      nestedUpdateCount = 0;\n      rootWithNestedUpdates = root;\n    }\n  } else {\n    nestedUpdateCount = 0;\n  }\n\n  onCommitRootDevTools(finishedWork.stateNode, renderPriorityLevel);\n\n  if (__DEV__) {\n    onCommitRootTestSelector();\n  }\n\n  // Always call this before exiting `commitRoot`, to ensure that any\n  // additional work on this root is scheduled.\n  ensureRootIsScheduled(root, now());\n\n  if (hasUncaughtError) {\n    hasUncaughtError = false;\n    const error = firstUncaughtError;\n    firstUncaughtError = null;\n    throw error;\n  }\n\n  if ((executionContext & LegacyUnbatchedContext) !== NoContext) {\n    if (__DEV__) {\n      if (enableDebugTracing) {\n        logCommitStopped();\n      }\n    }\n\n    if (enableSchedulingProfiler) {\n      markCommitStopped();\n    }\n\n    // This is a legacy edge case. We just committed the initial mount of\n    // a ReactDOM.render-ed root inside of batchedUpdates. The commit fired\n    // synchronously, but layout updates should be deferred until the end\n    // of the batch.\n    return null;\n  }\n\n  // If layout work was scheduled, flush it now.\n  flushSyncCallbackQueue();\n\n  if (__DEV__) {\n    if (enableDebugTracing) {\n      logCommitStopped();\n    }\n  }\n\n  if (enableSchedulingProfiler) {\n    markCommitStopped();\n  }\n\n  return null;\n}\n\nfunction commitBeforeMutationEffects() {\n  while (nextEffect !== null) {\n    const current = nextEffect.alternate;\n\n    if (!shouldFireAfterActiveInstanceBlur && focusedInstanceHandle !== null) {\n      if ((nextEffect.flags & Deletion) !== NoFlags) {\n        if (doesFiberContain(nextEffect, focusedInstanceHandle)) {\n          shouldFireAfterActiveInstanceBlur = true;\n          beforeActiveInstanceBlur();\n        }\n      } else {\n        // TODO: Move this out of the hot path using a dedicated effect tag.\n        if (\n          nextEffect.tag === SuspenseComponent &&\n          isSuspenseBoundaryBeingHidden(current, nextEffect) &&\n          doesFiberContain(nextEffect, focusedInstanceHandle)\n        ) {\n          shouldFireAfterActiveInstanceBlur = true;\n          beforeActiveInstanceBlur();\n        }\n      }\n    }\n\n    const flags = nextEffect.flags;\n    if ((flags & Snapshot) !== NoFlags) {\n      setCurrentDebugFiberInDEV(nextEffect);\n\n      commitBeforeMutationEffectOnFiber(current, nextEffect);\n\n      resetCurrentDebugFiberInDEV();\n    }\n    if ((flags & Passive) !== NoFlags) {\n      // If there are passive effects, schedule a callback to flush at\n      // the earliest opportunity.\n      if (!rootDoesHavePassiveEffects) {\n        rootDoesHavePassiveEffects = true;\n        scheduleCallback(NormalSchedulerPriority, () => {\n          flushPassiveEffects();\n          return null;\n        });\n      }\n    }\n    nextEffect = nextEffect.nextEffect;\n  }\n}\n\nfunction commitMutationEffects(\n  root: FiberRoot,\n  renderPriorityLevel: ReactPriorityLevel,\n) {\n  // TODO: Should probably move the bulk of this function to commitWork.\n  while (nextEffect !== null) {\n    setCurrentDebugFiberInDEV(nextEffect);\n\n    const flags = nextEffect.flags;\n\n    if (flags & ContentReset) {\n      commitResetTextContent(nextEffect);\n    }\n\n    if (flags & Ref) {\n      const current = nextEffect.alternate;\n      if (current !== null) {\n        commitDetachRef(current);\n      }\n      if (enableScopeAPI) {\n        // TODO: This is a temporary solution that allowed us to transition away\n        // from React Flare on www.\n        if (nextEffect.tag === ScopeComponent) {\n          commitAttachRef(nextEffect);\n        }\n      }\n    }\n\n    // The following switch statement is only concerned about placement,\n    // updates, and deletions. To avoid needing to add a case for every possible\n    // bitmap value, we remove the secondary effects from the effect tag and\n    // switch on that value.\n    const primaryFlags = flags & (Placement | Update | Deletion | Hydrating);\n    switch (primaryFlags) {\n      case Placement: {\n        commitPlacement(nextEffect);\n        // Clear the \"placement\" from effect tag so that we know that this is\n        // inserted, before any life-cycles like componentDidMount gets called.\n        // TODO: findDOMNode doesn't rely on this any more but isMounted does\n        // and isMounted is deprecated anyway so we should be able to kill this.\n        nextEffect.flags &= ~Placement;\n        break;\n      }\n      case PlacementAndUpdate: {\n        // Placement\n        commitPlacement(nextEffect);\n        // Clear the \"placement\" from effect tag so that we know that this is\n        // inserted, before any life-cycles like componentDidMount gets called.\n        nextEffect.flags &= ~Placement;\n\n        // Update\n        const current = nextEffect.alternate;\n        commitWork(current, nextEffect);\n        break;\n      }\n      case Hydrating: {\n        nextEffect.flags &= ~Hydrating;\n        break;\n      }\n      case HydratingAndUpdate: {\n        nextEffect.flags &= ~Hydrating;\n\n        // Update\n        const current = nextEffect.alternate;\n        commitWork(current, nextEffect);\n        break;\n      }\n      case Update: {\n        const current = nextEffect.alternate;\n        commitWork(current, nextEffect);\n        break;\n      }\n      case Deletion: {\n        commitDeletion(root, nextEffect, renderPriorityLevel);\n        break;\n      }\n    }\n\n    resetCurrentDebugFiberInDEV();\n    nextEffect = nextEffect.nextEffect;\n  }\n}\n\nfunction commitLayoutEffects(root: FiberRoot, committedLanes: Lanes) {\n  if (__DEV__) {\n    if (enableDebugTracing) {\n      logLayoutEffectsStarted(committedLanes);\n    }\n  }\n\n  if (enableSchedulingProfiler) {\n    markLayoutEffectsStarted(committedLanes);\n  }\n\n  // TODO: Should probably move the bulk of this function to commitWork.\n  while (nextEffect !== null) {\n    setCurrentDebugFiberInDEV(nextEffect);\n\n    const flags = nextEffect.flags;\n\n    if (flags & (Update | Callback)) {\n      const current = nextEffect.alternate;\n      commitLayoutEffectOnFiber(root, current, nextEffect, committedLanes);\n    }\n\n    if (enableScopeAPI) {\n      // TODO: This is a temporary solution that allowed us to transition away\n      // from React Flare on www.\n      if (flags & Ref && nextEffect.tag !== ScopeComponent) {\n        commitAttachRef(nextEffect);\n      }\n    } else {\n      if (flags & Ref) {\n        commitAttachRef(nextEffect);\n      }\n    }\n\n    resetCurrentDebugFiberInDEV();\n    nextEffect = nextEffect.nextEffect;\n  }\n\n  if (__DEV__) {\n    if (enableDebugTracing) {\n      logLayoutEffectsStopped();\n    }\n  }\n\n  if (enableSchedulingProfiler) {\n    markLayoutEffectsStopped();\n  }\n}\n\nexport function flushPassiveEffects(): boolean {\n  // Returns whether passive effects were flushed.\n  if (pendingPassiveEffectsRenderPriority !== NoSchedulerPriority) {\n    const priorityLevel =\n      pendingPassiveEffectsRenderPriority > NormalSchedulerPriority\n        ? NormalSchedulerPriority\n        : pendingPassiveEffectsRenderPriority;\n    pendingPassiveEffectsRenderPriority = NoSchedulerPriority;\n    if (decoupleUpdatePriorityFromScheduler) {\n      const previousLanePriority = getCurrentUpdateLanePriority();\n      try {\n        setCurrentUpdateLanePriority(\n          schedulerPriorityToLanePriority(priorityLevel),\n        );\n        return runWithPriority(priorityLevel, flushPassiveEffectsImpl);\n      } finally {\n        setCurrentUpdateLanePriority(previousLanePriority);\n      }\n    } else {\n      return runWithPriority(priorityLevel, flushPassiveEffectsImpl);\n    }\n  }\n  return false;\n}\n\nexport function enqueuePendingPassiveProfilerEffect(fiber: Fiber): void {\n  if (enableProfilerTimer && enableProfilerCommitHooks) {\n    pendingPassiveProfilerEffects.push(fiber);\n    if (!rootDoesHavePassiveEffects) {\n      rootDoesHavePassiveEffects = true;\n      scheduleCallback(NormalSchedulerPriority, () => {\n        flushPassiveEffects();\n        return null;\n      });\n    }\n  }\n}\n\nexport function enqueuePendingPassiveHookEffectMount(\n  fiber: Fiber,\n  effect: HookEffect,\n): void {\n  pendingPassiveHookEffectsMount.push(effect, fiber);\n  if (!rootDoesHavePassiveEffects) {\n    rootDoesHavePassiveEffects = true;\n    scheduleCallback(NormalSchedulerPriority, () => {\n      flushPassiveEffects();\n      return null;\n    });\n  }\n}\n\nexport function enqueuePendingPassiveHookEffectUnmount(\n  fiber: Fiber,\n  effect: HookEffect,\n): void {\n  pendingPassiveHookEffectsUnmount.push(effect, fiber);\n  if (__DEV__) {\n    fiber.flags |= PassiveUnmountPendingDev;\n    const alternate = fiber.alternate;\n    if (alternate !== null) {\n      alternate.flags |= PassiveUnmountPendingDev;\n    }\n  }\n  if (!rootDoesHavePassiveEffects) {\n    rootDoesHavePassiveEffects = true;\n    scheduleCallback(NormalSchedulerPriority, () => {\n      flushPassiveEffects();\n      return null;\n    });\n  }\n}\n\nfunction invokePassiveEffectCreate(effect: HookEffect): void {\n  const create = effect.create;\n  effect.destroy = create();\n}\n\nfunction flushPassiveEffectsImpl() {\n  if (rootWithPendingPassiveEffects === null) {\n    return false;\n  }\n\n  const root = rootWithPendingPassiveEffects;\n  const lanes = pendingPassiveEffectsLanes;\n  rootWithPendingPassiveEffects = null;\n  pendingPassiveEffectsLanes = NoLanes;\n\n  invariant(\n    (executionContext & (RenderContext | CommitContext)) === NoContext,\n    'Cannot flush passive effects while already rendering.',\n  );\n\n  if (__DEV__) {\n    if (enableDebugTracing) {\n      logPassiveEffectsStarted(lanes);\n    }\n  }\n\n  if (enableSchedulingProfiler) {\n    markPassiveEffectsStarted(lanes);\n  }\n\n  if (__DEV__) {\n    isFlushingPassiveEffects = true;\n  }\n\n  const prevExecutionContext = executionContext;\n  executionContext |= CommitContext;\n  const prevInteractions = pushInteractions(root);\n\n  // It's important that ALL pending passive effect destroy functions are called\n  // before ANY passive effect create functions are called.\n  // Otherwise effects in sibling components might interfere with each other.\n  // e.g. a destroy function in one component may unintentionally override a ref\n  // value set by a create function in another component.\n  // Layout effects have the same constraint.\n\n  // First pass: Destroy stale passive effects.\n  const unmountEffects = pendingPassiveHookEffectsUnmount;\n  pendingPassiveHookEffectsUnmount = [];\n  for (let i = 0; i < unmountEffects.length; i += 2) {\n    const effect = ((unmountEffects[i]: any): HookEffect);\n    const fiber = ((unmountEffects[i + 1]: any): Fiber);\n    const destroy = effect.destroy;\n    effect.destroy = undefined;\n\n    if (__DEV__) {\n      fiber.flags &= ~PassiveUnmountPendingDev;\n      const alternate = fiber.alternate;\n      if (alternate !== null) {\n        alternate.flags &= ~PassiveUnmountPendingDev;\n      }\n    }\n\n    if (typeof destroy === 'function') {\n      if (__DEV__) {\n        setCurrentDebugFiberInDEV(fiber);\n        if (\n          enableProfilerTimer &&\n          enableProfilerCommitHooks &&\n          fiber.mode & ProfileMode\n        ) {\n          startPassiveEffectTimer();\n          invokeGuardedCallback(null, destroy, null);\n          recordPassiveEffectDuration(fiber);\n        } else {\n          invokeGuardedCallback(null, destroy, null);\n        }\n        if (hasCaughtError()) {\n          invariant(fiber !== null, 'Should be working on an effect.');\n          const error = clearCaughtError();\n          captureCommitPhaseError(fiber, error);\n        }\n        resetCurrentDebugFiberInDEV();\n      } else {\n        try {\n          if (\n            enableProfilerTimer &&\n            enableProfilerCommitHooks &&\n            fiber.mode & ProfileMode\n          ) {\n            try {\n              startPassiveEffectTimer();\n              destroy();\n            } finally {\n              recordPassiveEffectDuration(fiber);\n            }\n          } else {\n            destroy();\n          }\n        } catch (error) {\n          invariant(fiber !== null, 'Should be working on an effect.');\n          captureCommitPhaseError(fiber, error);\n        }\n      }\n    }\n  }\n  // Second pass: Create new passive effects.\n  const mountEffects = pendingPassiveHookEffectsMount;\n  pendingPassiveHookEffectsMount = [];\n  for (let i = 0; i < mountEffects.length; i += 2) {\n    const effect = ((mountEffects[i]: any): HookEffect);\n    const fiber = ((mountEffects[i + 1]: any): Fiber);\n    if (__DEV__) {\n      setCurrentDebugFiberInDEV(fiber);\n      if (\n        enableProfilerTimer &&\n        enableProfilerCommitHooks &&\n        fiber.mode & ProfileMode\n      ) {\n        startPassiveEffectTimer();\n        invokeGuardedCallback(null, invokePassiveEffectCreate, null, effect);\n        recordPassiveEffectDuration(fiber);\n      } else {\n        invokeGuardedCallback(null, invokePassiveEffectCreate, null, effect);\n      }\n      if (hasCaughtError()) {\n        invariant(fiber !== null, 'Should be working on an effect.');\n        const error = clearCaughtError();\n        captureCommitPhaseError(fiber, error);\n      }\n      resetCurrentDebugFiberInDEV();\n    } else {\n      try {\n        const create = effect.create;\n        if (\n          enableProfilerTimer &&\n          enableProfilerCommitHooks &&\n          fiber.mode & ProfileMode\n        ) {\n          try {\n            startPassiveEffectTimer();\n            effect.destroy = create();\n          } finally {\n            recordPassiveEffectDuration(fiber);\n          }\n        } else {\n          effect.destroy = create();\n        }\n      } catch (error) {\n        invariant(fiber !== null, 'Should be working on an effect.');\n        captureCommitPhaseError(fiber, error);\n      }\n    }\n  }\n\n  // Note: This currently assumes there are no passive effects on the root fiber\n  // because the root is not part of its own effect list.\n  // This could change in the future.\n  let effect = root.current.firstEffect;\n  while (effect !== null) {\n    const nextNextEffect = effect.nextEffect;\n    // Remove nextEffect pointer to assist GC\n    effect.nextEffect = null;\n    if (effect.flags & Deletion) {\n      detachFiberAfterEffects(effect);\n    }\n    effect = nextNextEffect;\n  }\n\n  if (enableProfilerTimer && enableProfilerCommitHooks) {\n    const profilerEffects = pendingPassiveProfilerEffects;\n    pendingPassiveProfilerEffects = [];\n    for (let i = 0; i < profilerEffects.length; i++) {\n      const fiber = ((profilerEffects[i]: any): Fiber);\n      commitPassiveEffectDurations(root, fiber);\n    }\n  }\n\n  if (enableSchedulerTracing) {\n    popInteractions(((prevInteractions: any): Set<Interaction>));\n    finishPendingInteractions(root, lanes);\n  }\n\n  if (__DEV__) {\n    isFlushingPassiveEffects = false;\n  }\n\n  if (__DEV__) {\n    if (enableDebugTracing) {\n      logPassiveEffectsStopped();\n    }\n  }\n\n  if (enableSchedulingProfiler) {\n    markPassiveEffectsStopped();\n  }\n\n  executionContext = prevExecutionContext;\n\n  flushSyncCallbackQueue();\n\n  // If additional passive effects were scheduled, increment a counter. If this\n  // exceeds the limit, we'll fire a warning.\n  nestedPassiveUpdateCount =\n    rootWithPendingPassiveEffects === null ? 0 : nestedPassiveUpdateCount + 1;\n\n  return true;\n}\n\nexport function isAlreadyFailedLegacyErrorBoundary(instance: mixed): boolean {\n  return (\n    legacyErrorBoundariesThatAlreadyFailed !== null &&\n    legacyErrorBoundariesThatAlreadyFailed.has(instance)\n  );\n}\n\nexport function markLegacyErrorBoundaryAsFailed(instance: mixed) {\n  if (legacyErrorBoundariesThatAlreadyFailed === null) {\n    legacyErrorBoundariesThatAlreadyFailed = new Set([instance]);\n  } else {\n    legacyErrorBoundariesThatAlreadyFailed.add(instance);\n  }\n}\n\nfunction prepareToThrowUncaughtError(error: mixed) {\n  if (!hasUncaughtError) {\n    hasUncaughtError = true;\n    firstUncaughtError = error;\n  }\n}\nexport const onUncaughtError = prepareToThrowUncaughtError;\n\nfunction captureCommitPhaseErrorOnRoot(\n  rootFiber: Fiber,\n  sourceFiber: Fiber,\n  error: mixed,\n) {\n  const errorInfo = createCapturedValue(error, sourceFiber);\n  const update = createRootErrorUpdate(rootFiber, errorInfo, (SyncLane: Lane));\n  enqueueUpdate(rootFiber, update);\n  const eventTime = requestEventTime();\n  const root = markUpdateLaneFromFiberToRoot(rootFiber, (SyncLane: Lane));\n  if (root !== null) {\n    markRootUpdated(root, SyncLane, eventTime);\n    ensureRootIsScheduled(root, eventTime);\n    schedulePendingInteractions(root, SyncLane);\n  }\n}\n\nexport function captureCommitPhaseError(sourceFiber: Fiber, error: mixed) {\n  if (sourceFiber.tag === HostRoot) {\n    // Error was thrown at the root. There is no parent, so the root\n    // itself should capture it.\n    captureCommitPhaseErrorOnRoot(sourceFiber, sourceFiber, error);\n    return;\n  }\n\n  let fiber = sourceFiber.return;\n\n  while (fiber !== null) {\n    if (fiber.tag === HostRoot) {\n      captureCommitPhaseErrorOnRoot(fiber, sourceFiber, error);\n      return;\n    } else if (fiber.tag === ClassComponent) {\n      const ctor = fiber.type;\n      const instance = fiber.stateNode;\n      if (\n        typeof ctor.getDerivedStateFromError === 'function' ||\n        (typeof instance.componentDidCatch === 'function' &&\n          !isAlreadyFailedLegacyErrorBoundary(instance))\n      ) {\n        const errorInfo = createCapturedValue(error, sourceFiber);\n        const update = createClassErrorUpdate(\n          fiber,\n          errorInfo,\n          (SyncLane: Lane),\n        );\n        enqueueUpdate(fiber, update);\n        const eventTime = requestEventTime();\n        const root = markUpdateLaneFromFiberToRoot(fiber, (SyncLane: Lane));\n        if (root !== null) {\n          markRootUpdated(root, SyncLane, eventTime);\n          ensureRootIsScheduled(root, eventTime);\n          schedulePendingInteractions(root, SyncLane);\n        } else {\n          // This component has already been unmounted.\n          // We can't schedule any follow up work for the root because the fiber is already unmounted,\n          // but we can still call the log-only boundary so the error isn't swallowed.\n          //\n          // TODO This is only a temporary bandaid for the old reconciler fork.\n          // We can delete this special case once the new fork is merged.\n          if (\n            typeof instance.componentDidCatch === 'function' &&\n            !isAlreadyFailedLegacyErrorBoundary(instance)\n          ) {\n            try {\n              instance.componentDidCatch(error, errorInfo);\n            } catch (errorToIgnore) {\n              // TODO Ignore this error? Rethrow it?\n              // This is kind of an edge case.\n            }\n          }\n        }\n        return;\n      }\n    }\n    fiber = fiber.return;\n  }\n}\n\nexport function pingSuspendedRoot(\n  root: FiberRoot,\n  wakeable: Wakeable,\n  pingedLanes: Lanes,\n) {\n  const pingCache = root.pingCache;\n  if (pingCache !== null) {\n    // The wakeable resolved, so we no longer need to memoize, because it will\n    // never be thrown again.\n    pingCache.delete(wakeable);\n  }\n\n  const eventTime = requestEventTime();\n  markRootPinged(root, pingedLanes, eventTime);\n\n  if (\n    workInProgressRoot === root &&\n    isSubsetOfLanes(workInProgressRootRenderLanes, pingedLanes)\n  ) {\n    // Received a ping at the same priority level at which we're currently\n    // rendering. We might want to restart this render. This should mirror\n    // the logic of whether or not a root suspends once it completes.\n\n    // TODO: If we're rendering sync either due to Sync, Batched or expired,\n    // we should probably never restart.\n\n    // If we're suspended with delay, or if it's a retry, we'll always suspend\n    // so we can always restart.\n    if (\n      workInProgressRootExitStatus === RootSuspendedWithDelay ||\n      (workInProgressRootExitStatus === RootSuspended &&\n        includesOnlyRetries(workInProgressRootRenderLanes) &&\n        now() - globalMostRecentFallbackTime < FALLBACK_THROTTLE_MS)\n    ) {\n      // Restart from the root.\n      prepareFreshStack(root, NoLanes);\n    } else {\n      // Even though we can't restart right now, we might get an\n      // opportunity later. So we mark this render as having a ping.\n      workInProgressRootPingedLanes = mergeLanes(\n        workInProgressRootPingedLanes,\n        pingedLanes,\n      );\n    }\n  }\n\n  ensureRootIsScheduled(root, eventTime);\n  schedulePendingInteractions(root, pingedLanes);\n}\n\nfunction retryTimedOutBoundary(boundaryFiber: Fiber, retryLane: Lane) {\n  // The boundary fiber (a Suspense component or SuspenseList component)\n  // previously was rendered in its fallback state. One of the promises that\n  // suspended it has resolved, which means at least part of the tree was\n  // likely unblocked. Try rendering again, at a new expiration time.\n  if (retryLane === NoLane) {\n    retryLane = requestRetryLane(boundaryFiber);\n  }\n  // TODO: Special case idle priority?\n  const eventTime = requestEventTime();\n  const root = markUpdateLaneFromFiberToRoot(boundaryFiber, retryLane);\n  if (root !== null) {\n    markRootUpdated(root, retryLane, eventTime);\n    ensureRootIsScheduled(root, eventTime);\n    schedulePendingInteractions(root, retryLane);\n  }\n}\n\nexport function retryDehydratedSuspenseBoundary(boundaryFiber: Fiber) {\n  const suspenseState: null | SuspenseState = boundaryFiber.memoizedState;\n  let retryLane = NoLane;\n  if (suspenseState !== null) {\n    retryLane = suspenseState.retryLane;\n  }\n  retryTimedOutBoundary(boundaryFiber, retryLane);\n}\n\nexport function resolveRetryWakeable(boundaryFiber: Fiber, wakeable: Wakeable) {\n  let retryLane = NoLane; // Default\n  let retryCache: WeakSet<Wakeable> | Set<Wakeable> | null;\n  if (enableSuspenseServerRenderer) {\n    switch (boundaryFiber.tag) {\n      case SuspenseComponent:\n        retryCache = boundaryFiber.stateNode;\n        const suspenseState: null | SuspenseState = boundaryFiber.memoizedState;\n        if (suspenseState !== null) {\n          retryLane = suspenseState.retryLane;\n        }\n        break;\n      case SuspenseListComponent:\n        retryCache = boundaryFiber.stateNode;\n        break;\n      default:\n        invariant(\n          false,\n          'Pinged unknown suspense boundary type. ' +\n            'This is probably a bug in React.',\n        );\n    }\n  } else {\n    retryCache = boundaryFiber.stateNode;\n  }\n\n  if (retryCache !== null) {\n    // The wakeable resolved, so we no longer need to memoize, because it will\n    // never be thrown again.\n    retryCache.delete(wakeable);\n  }\n\n  retryTimedOutBoundary(boundaryFiber, retryLane);\n}\n\n// Computes the next Just Noticeable Difference (JND) boundary.\n// The theory is that a person can't tell the difference between small differences in time.\n// Therefore, if we wait a bit longer than necessary that won't translate to a noticeable\n// difference in the experience. However, waiting for longer might mean that we can avoid\n// showing an intermediate loading state. The longer we have already waited, the harder it\n// is to tell small differences in time. Therefore, the longer we've already waited,\n// the longer we can wait additionally. At some point we have to give up though.\n// We pick a train model where the next boundary commits at a consistent schedule.\n// These particular numbers are vague estimates. We expect to adjust them based on research.\nfunction jnd(timeElapsed: number) {\n  return timeElapsed < 120\n    ? 120\n    : timeElapsed < 480\n    ? 480\n    : timeElapsed < 1080\n    ? 1080\n    : timeElapsed < 1920\n    ? 1920\n    : timeElapsed < 3000\n    ? 3000\n    : timeElapsed < 4320\n    ? 4320\n    : ceil(timeElapsed / 1960) * 1960;\n}\n\nfunction checkForNestedUpdates() {\n  if (nestedUpdateCount > NESTED_UPDATE_LIMIT) {\n    nestedUpdateCount = 0;\n    rootWithNestedUpdates = null;\n    invariant(\n      false,\n      'Maximum update depth exceeded. This can happen when a component ' +\n        'repeatedly calls setState inside componentWillUpdate or ' +\n        'componentDidUpdate. React limits the number of nested updates to ' +\n        'prevent infinite loops.',\n    );\n  }\n\n  if (__DEV__) {\n    if (nestedPassiveUpdateCount > NESTED_PASSIVE_UPDATE_LIMIT) {\n      nestedPassiveUpdateCount = 0;\n      console.error(\n        'Maximum update depth exceeded. This can happen when a component ' +\n          \"calls setState inside useEffect, but useEffect either doesn't \" +\n          'have a dependency array, or one of the dependencies changes on ' +\n          'every render.',\n      );\n    }\n  }\n}\n\nfunction flushRenderPhaseStrictModeWarningsInDEV() {\n  if (__DEV__) {\n    ReactStrictModeWarnings.flushLegacyContextWarning();\n\n    if (warnAboutDeprecatedLifecycles) {\n      ReactStrictModeWarnings.flushPendingUnsafeLifecycleWarnings();\n    }\n  }\n}\n\nlet didWarnStateUpdateForNotYetMountedComponent: Set<string> | null = null;\nfunction warnAboutUpdateOnNotYetMountedFiberInDEV(fiber) {\n  if (__DEV__) {\n    if ((executionContext & RenderContext) !== NoContext) {\n      // We let the other warning about render phase updates deal with this one.\n      return;\n    }\n\n    if (!(fiber.mode & (BlockingMode | ConcurrentMode))) {\n      return;\n    }\n\n    const tag = fiber.tag;\n    if (\n      tag !== IndeterminateComponent &&\n      tag !== HostRoot &&\n      tag !== ClassComponent &&\n      tag !== FunctionComponent &&\n      tag !== ForwardRef &&\n      tag !== MemoComponent &&\n      tag !== SimpleMemoComponent &&\n      tag !== Block\n    ) {\n      // Only warn for user-defined components, not internal ones like Suspense.\n      return;\n    }\n\n    // We show the whole stack but dedupe on the top component's name because\n    // the problematic code almost always lies inside that component.\n    const componentName = getComponentName(fiber.type) || 'ReactComponent';\n    if (didWarnStateUpdateForNotYetMountedComponent !== null) {\n      if (didWarnStateUpdateForNotYetMountedComponent.has(componentName)) {\n        return;\n      }\n      didWarnStateUpdateForNotYetMountedComponent.add(componentName);\n    } else {\n      didWarnStateUpdateForNotYetMountedComponent = new Set([componentName]);\n    }\n\n    const previousFiber = ReactCurrentFiberCurrent;\n    try {\n      setCurrentDebugFiberInDEV(fiber);\n      console.error(\n        \"Can't perform a React state update on a component that hasn't mounted yet. \" +\n          'This indicates that you have a side-effect in your render function that ' +\n          'asynchronously later calls tries to update the component. Move this work to ' +\n          'useEffect instead.',\n      );\n    } finally {\n      if (previousFiber) {\n        setCurrentDebugFiberInDEV(fiber);\n      } else {\n        resetCurrentDebugFiberInDEV();\n      }\n    }\n  }\n}\n\nlet didWarnStateUpdateForUnmountedComponent: Set<string> | null = null;\nfunction warnAboutUpdateOnUnmountedFiberInDEV(fiber) {\n  if (__DEV__) {\n    const tag = fiber.tag;\n    if (\n      tag !== HostRoot &&\n      tag !== ClassComponent &&\n      tag !== FunctionComponent &&\n      tag !== ForwardRef &&\n      tag !== MemoComponent &&\n      tag !== SimpleMemoComponent &&\n      tag !== Block\n    ) {\n      // Only warn for user-defined components, not internal ones like Suspense.\n      return;\n    }\n\n    // If there are pending passive effects unmounts for this Fiber,\n    // we can assume that they would have prevented this update.\n    if ((fiber.flags & PassiveUnmountPendingDev) !== NoFlags) {\n      return;\n    }\n\n    // We show the whole stack but dedupe on the top component's name because\n    // the problematic code almost always lies inside that component.\n    const componentName = getComponentName(fiber.type) || 'ReactComponent';\n    if (didWarnStateUpdateForUnmountedComponent !== null) {\n      if (didWarnStateUpdateForUnmountedComponent.has(componentName)) {\n        return;\n      }\n      didWarnStateUpdateForUnmountedComponent.add(componentName);\n    } else {\n      didWarnStateUpdateForUnmountedComponent = new Set([componentName]);\n    }\n\n    if (isFlushingPassiveEffects) {\n      // Do not warn if we are currently flushing passive effects!\n      //\n      // React can't directly detect a memory leak, but there are some clues that warn about one.\n      // One of these clues is when an unmounted React component tries to update its state.\n      // For example, if a component forgets to remove an event listener when unmounting,\n      // that listener may be called later and try to update state,\n      // at which point React would warn about the potential leak.\n      //\n      // Warning signals are the most useful when they're strong.\n      // (So we should avoid false positive warnings.)\n      // Updating state from within an effect cleanup function is sometimes a necessary pattern, e.g.:\n      // 1. Updating an ancestor that a component had registered itself with on mount.\n      // 2. Resetting state when a component is hidden after going offscreen.\n    } else {\n      const previousFiber = ReactCurrentFiberCurrent;\n      try {\n        setCurrentDebugFiberInDEV(fiber);\n        console.error(\n          \"Can't perform a React state update on an unmounted component. This \" +\n            'is a no-op, but it indicates a memory leak in your application. To ' +\n            'fix, cancel all subscriptions and asynchronous tasks in %s.',\n          tag === ClassComponent\n            ? 'the componentWillUnmount method'\n            : 'a useEffect cleanup function',\n        );\n      } finally {\n        if (previousFiber) {\n          setCurrentDebugFiberInDEV(fiber);\n        } else {\n          resetCurrentDebugFiberInDEV();\n        }\n      }\n    }\n  }\n}\n\nlet beginWork;\nif (__DEV__ && replayFailedUnitOfWorkWithInvokeGuardedCallback) {\n  const dummyFiber = null;\n  beginWork = (current, unitOfWork, lanes) => {\n    // If a component throws an error, we replay it again in a synchronously\n    // dispatched event, so that the debugger will treat it as an uncaught\n    // error See ReactErrorUtils for more information.\n\n    // Before entering the begin phase, copy the work-in-progress onto a dummy\n    // fiber. If beginWork throws, we'll use this to reset the state.\n    const originalWorkInProgressCopy = assignFiberPropertiesInDEV(\n      dummyFiber,\n      unitOfWork,\n    );\n    try {\n      return originalBeginWork(current, unitOfWork, lanes);\n    } catch (originalError) {\n      if (\n        originalError !== null &&\n        typeof originalError === 'object' &&\n        typeof originalError.then === 'function'\n      ) {\n        // Don't replay promises. Treat everything else like an error.\n        throw originalError;\n      }\n\n      // Keep this code in sync with handleError; any changes here must have\n      // corresponding changes there.\n      resetContextDependencies();\n      resetHooksAfterThrow();\n      // Don't reset current debug fiber, since we're about to work on the\n      // same fiber again.\n\n      // Unwind the failed stack frame\n      unwindInterruptedWork(unitOfWork);\n\n      // Restore the original properties of the fiber.\n      assignFiberPropertiesInDEV(unitOfWork, originalWorkInProgressCopy);\n\n      if (enableProfilerTimer && unitOfWork.mode & ProfileMode) {\n        // Reset the profiler timer.\n        startProfilerTimer(unitOfWork);\n      }\n\n      // Run beginWork again.\n      invokeGuardedCallback(\n        null,\n        originalBeginWork,\n        null,\n        current,\n        unitOfWork,\n        lanes,\n      );\n\n      if (hasCaughtError()) {\n        const replayError = clearCaughtError();\n        // `invokeGuardedCallback` sometimes sets an expando `_suppressLogging`.\n        // Rethrow this error instead of the original one.\n        throw replayError;\n      } else {\n        // This branch is reachable if the render phase is impure.\n        throw originalError;\n      }\n    }\n  };\n} else {\n  beginWork = originalBeginWork;\n}\n\nlet didWarnAboutUpdateInRender = false;\nlet didWarnAboutUpdateInRenderForAnotherComponent;\nif (__DEV__) {\n  didWarnAboutUpdateInRenderForAnotherComponent = new Set();\n}\n\nfunction warnAboutRenderPhaseUpdatesInDEV(fiber) {\n  if (__DEV__) {\n    if (\n      ReactCurrentDebugFiberIsRenderingInDEV &&\n      (executionContext & RenderContext) !== NoContext &&\n      !getIsUpdatingOpaqueValueInRenderPhaseInDEV()\n    ) {\n      switch (fiber.tag) {\n        case FunctionComponent:\n        case ForwardRef:\n        case SimpleMemoComponent: {\n          const renderingComponentName =\n            (workInProgress && getComponentName(workInProgress.type)) ||\n            'Unknown';\n          // Dedupe by the rendering component because it's the one that needs to be fixed.\n          const dedupeKey = renderingComponentName;\n          if (!didWarnAboutUpdateInRenderForAnotherComponent.has(dedupeKey)) {\n            didWarnAboutUpdateInRenderForAnotherComponent.add(dedupeKey);\n            const setStateComponentName =\n              getComponentName(fiber.type) || 'Unknown';\n            console.error(\n              'Cannot update a component (`%s`) while rendering a ' +\n                'different component (`%s`). To locate the bad setState() call inside `%s`, ' +\n                'follow the stack trace as described in https://reactjs.org/link/setstate-in-render',\n              setStateComponentName,\n              renderingComponentName,\n              renderingComponentName,\n            );\n          }\n          break;\n        }\n        case ClassComponent: {\n          if (!didWarnAboutUpdateInRender) {\n            console.error(\n              'Cannot update during an existing state transition (such as ' +\n                'within `render`). Render methods should be a pure ' +\n                'function of props and state.',\n            );\n            didWarnAboutUpdateInRender = true;\n          }\n          break;\n        }\n      }\n    }\n  }\n}\n\n// a 'shared' variable that changes when act() opens/closes in tests.\nexport const IsThisRendererActing = {current: (false: boolean)};\n\nexport function warnIfNotScopedWithMatchingAct(fiber: Fiber): void {\n  if (__DEV__) {\n    if (\n      warnsIfNotActing === true &&\n      IsSomeRendererActing.current === true &&\n      IsThisRendererActing.current !== true\n    ) {\n      const previousFiber = ReactCurrentFiberCurrent;\n      try {\n        setCurrentDebugFiberInDEV(fiber);\n        console.error(\n          \"It looks like you're using the wrong act() around your test interactions.\\n\" +\n            'Be sure to use the matching version of act() corresponding to your renderer:\\n\\n' +\n            '// for react-dom:\\n' +\n            // Break up imports to avoid accidentally parsing them as dependencies.\n            'import {act} fr' +\n            \"om 'react-dom/test-utils';\\n\" +\n            '// ...\\n' +\n            'act(() => ...);\\n\\n' +\n            '// for react-test-renderer:\\n' +\n            // Break up imports to avoid accidentally parsing them as dependencies.\n            'import TestRenderer fr' +\n            \"om react-test-renderer';\\n\" +\n            'const {act} = TestRenderer;\\n' +\n            '// ...\\n' +\n            'act(() => ...);',\n        );\n      } finally {\n        if (previousFiber) {\n          setCurrentDebugFiberInDEV(fiber);\n        } else {\n          resetCurrentDebugFiberInDEV();\n        }\n      }\n    }\n  }\n}\n\nexport function warnIfNotCurrentlyActingEffectsInDEV(fiber: Fiber): void {\n  if (__DEV__) {\n    if (\n      warnsIfNotActing === true &&\n      (fiber.mode & StrictMode) !== NoMode &&\n      IsSomeRendererActing.current === false &&\n      IsThisRendererActing.current === false\n    ) {\n      console.error(\n        'An update to %s ran an effect, but was not wrapped in act(...).\\n\\n' +\n          'When testing, code that causes React state updates should be ' +\n          'wrapped into act(...):\\n\\n' +\n          'act(() => {\\n' +\n          '  /* fire events that update state */\\n' +\n          '});\\n' +\n          '/* assert on the output */\\n\\n' +\n          \"This ensures that you're testing the behavior the user would see \" +\n          'in the browser.' +\n          ' Learn more at https://reactjs.org/link/wrap-tests-with-act',\n        getComponentName(fiber.type),\n      );\n    }\n  }\n}\n\nfunction warnIfNotCurrentlyActingUpdatesInDEV(fiber: Fiber): void {\n  if (__DEV__) {\n    if (\n      warnsIfNotActing === true &&\n      executionContext === NoContext &&\n      IsSomeRendererActing.current === false &&\n      IsThisRendererActing.current === false\n    ) {\n      const previousFiber = ReactCurrentFiberCurrent;\n      try {\n        setCurrentDebugFiberInDEV(fiber);\n        console.error(\n          'An update to %s inside a test was not wrapped in act(...).\\n\\n' +\n            'When testing, code that causes React state updates should be ' +\n            'wrapped into act(...):\\n\\n' +\n            'act(() => {\\n' +\n            '  /* fire events that update state */\\n' +\n            '});\\n' +\n            '/* assert on the output */\\n\\n' +\n            \"This ensures that you're testing the behavior the user would see \" +\n            'in the browser.' +\n            ' Learn more at https://reactjs.org/link/wrap-tests-with-act',\n          getComponentName(fiber.type),\n        );\n      } finally {\n        if (previousFiber) {\n          setCurrentDebugFiberInDEV(fiber);\n        } else {\n          resetCurrentDebugFiberInDEV();\n        }\n      }\n    }\n  }\n}\n\nexport const warnIfNotCurrentlyActingUpdatesInDev = warnIfNotCurrentlyActingUpdatesInDEV;\n\n// In tests, we want to enforce a mocked scheduler.\nlet didWarnAboutUnmockedScheduler = false;\n// TODO Before we release concurrent mode, revisit this and decide whether a mocked\n// scheduler is the actual recommendation. The alternative could be a testing build,\n// a new lib, or whatever; we dunno just yet. This message is for early adopters\n// to get their tests right.\n\nexport function warnIfUnmockedScheduler(fiber: Fiber) {\n  if (__DEV__) {\n    if (\n      didWarnAboutUnmockedScheduler === false &&\n      Scheduler.unstable_flushAllWithoutAsserting === undefined\n    ) {\n      if (fiber.mode & BlockingMode || fiber.mode & ConcurrentMode) {\n        didWarnAboutUnmockedScheduler = true;\n        console.error(\n          'In Concurrent or Sync modes, the \"scheduler\" module needs to be mocked ' +\n            'to guarantee consistent behaviour across tests and browsers. ' +\n            'For example, with jest: \\n' +\n            // Break up requires to avoid accidentally parsing them as dependencies.\n            \"jest.mock('scheduler', () => require\" +\n            \"('scheduler/unstable_mock'));\\n\\n\" +\n            'For more info, visit https://reactjs.org/link/mock-scheduler',\n        );\n      } else if (warnAboutUnmockedScheduler === true) {\n        didWarnAboutUnmockedScheduler = true;\n        console.error(\n          'Starting from React v18, the \"scheduler\" module will need to be mocked ' +\n            'to guarantee consistent behaviour across tests and browsers. ' +\n            'For example, with jest: \\n' +\n            // Break up requires to avoid accidentally parsing them as dependencies.\n            \"jest.mock('scheduler', () => require\" +\n            \"('scheduler/unstable_mock'));\\n\\n\" +\n            'For more info, visit https://reactjs.org/link/mock-scheduler',\n        );\n      }\n    }\n  }\n}\n\nfunction computeThreadID(root: FiberRoot, lane: Lane | Lanes) {\n  // Interaction threads are unique per root and expiration time.\n  // NOTE: Intentionally unsound cast. All that matters is that it's a number\n  // and it represents a batch of work. Could make a helper function instead,\n  // but meh this is fine for now.\n  return (lane: any) * 1000 + root.interactionThreadID;\n}\n\nexport function markSpawnedWork(lane: Lane | Lanes) {\n  if (!enableSchedulerTracing) {\n    return;\n  }\n  if (spawnedWorkDuringRender === null) {\n    spawnedWorkDuringRender = [lane];\n  } else {\n    spawnedWorkDuringRender.push(lane);\n  }\n}\n\nfunction scheduleInteractions(\n  root: FiberRoot,\n  lane: Lane | Lanes,\n  interactions: Set<Interaction>,\n) {\n  if (!enableSchedulerTracing) {\n    return;\n  }\n\n  if (interactions.size > 0) {\n    const pendingInteractionMap = root.pendingInteractionMap;\n    const pendingInteractions = pendingInteractionMap.get(lane);\n    if (pendingInteractions != null) {\n      interactions.forEach(interaction => {\n        if (!pendingInteractions.has(interaction)) {\n          // Update the pending async work count for previously unscheduled interaction.\n          interaction.__count++;\n        }\n\n        pendingInteractions.add(interaction);\n      });\n    } else {\n      pendingInteractionMap.set(lane, new Set(interactions));\n\n      // Update the pending async work count for the current interactions.\n      interactions.forEach(interaction => {\n        interaction.__count++;\n      });\n    }\n\n    const subscriber = __subscriberRef.current;\n    if (subscriber !== null) {\n      const threadID = computeThreadID(root, lane);\n      subscriber.onWorkScheduled(interactions, threadID);\n    }\n  }\n}\n\nfunction schedulePendingInteractions(root: FiberRoot, lane: Lane | Lanes) {\n  // This is called when work is scheduled on a root.\n  // It associates the current interactions with the newly-scheduled expiration.\n  // They will be restored when that expiration is later committed.\n  if (!enableSchedulerTracing) {\n    return;\n  }\n\n  scheduleInteractions(root, lane, __interactionsRef.current);\n}\n\nfunction startWorkOnPendingInteractions(root: FiberRoot, lanes: Lanes) {\n  // This is called when new work is started on a root.\n  if (!enableSchedulerTracing) {\n    return;\n  }\n\n  // Determine which interactions this batch of work currently includes, So that\n  // we can accurately attribute time spent working on it, And so that cascading\n  // work triggered during the render phase will be associated with it.\n  const interactions: Set<Interaction> = new Set();\n  root.pendingInteractionMap.forEach((scheduledInteractions, scheduledLane) => {\n    if (includesSomeLane(lanes, scheduledLane)) {\n      scheduledInteractions.forEach(interaction =>\n        interactions.add(interaction),\n      );\n    }\n  });\n\n  // Store the current set of interactions on the FiberRoot for a few reasons:\n  // We can re-use it in hot functions like performConcurrentWorkOnRoot()\n  // without having to recalculate it. We will also use it in commitWork() to\n  // pass to any Profiler onRender() hooks. This also provides DevTools with a\n  // way to access it when the onCommitRoot() hook is called.\n  root.memoizedInteractions = interactions;\n\n  if (interactions.size > 0) {\n    const subscriber = __subscriberRef.current;\n    if (subscriber !== null) {\n      const threadID = computeThreadID(root, lanes);\n      try {\n        subscriber.onWorkStarted(interactions, threadID);\n      } catch (error) {\n        // If the subscriber throws, rethrow it in a separate task\n        scheduleCallback(ImmediateSchedulerPriority, () => {\n          throw error;\n        });\n      }\n    }\n  }\n}\n\nfunction finishPendingInteractions(root, committedLanes) {\n  if (!enableSchedulerTracing) {\n    return;\n  }\n\n  const remainingLanesAfterCommit = root.pendingLanes;\n\n  let subscriber;\n\n  try {\n    subscriber = __subscriberRef.current;\n    if (subscriber !== null && root.memoizedInteractions.size > 0) {\n      // FIXME: More than one lane can finish in a single commit.\n      const threadID = computeThreadID(root, committedLanes);\n      subscriber.onWorkStopped(root.memoizedInteractions, threadID);\n    }\n  } catch (error) {\n    // If the subscriber throws, rethrow it in a separate task\n    scheduleCallback(ImmediateSchedulerPriority, () => {\n      throw error;\n    });\n  } finally {\n    // Clear completed interactions from the pending Map.\n    // Unless the render was suspended or cascading work was scheduled,\n    // In which case– leave pending interactions until the subsequent render.\n    const pendingInteractionMap = root.pendingInteractionMap;\n    pendingInteractionMap.forEach((scheduledInteractions, lane) => {\n      // Only decrement the pending interaction count if we're done.\n      // If there's still work at the current priority,\n      // That indicates that we are waiting for suspense data.\n      if (!includesSomeLane(remainingLanesAfterCommit, lane)) {\n        pendingInteractionMap.delete(lane);\n\n        scheduledInteractions.forEach(interaction => {\n          interaction.__count--;\n\n          if (subscriber !== null && interaction.__count === 0) {\n            try {\n              subscriber.onInteractionScheduledWorkCompleted(interaction);\n            } catch (error) {\n              // If the subscriber throws, rethrow it in a separate task\n              scheduleCallback(ImmediateSchedulerPriority, () => {\n                throw error;\n              });\n            }\n          }\n        });\n      }\n    });\n  }\n}\n\n// `act` testing API\n//\n// TODO: This is mostly a copy-paste from the legacy `act`, which does not have\n// access to the same internals that we do here. Some trade offs in the\n// implementation no longer make sense.\n\nlet isFlushingAct = false;\nlet isInsideThisAct = false;\n\nfunction shouldForceFlushFallbacksInDEV() {\n  // Never force flush in production. This function should get stripped out.\n  return __DEV__ && actingUpdatesScopeDepth > 0;\n}\n\nconst flushMockScheduler = Scheduler.unstable_flushAllWithoutAsserting;\nconst isSchedulerMocked = typeof flushMockScheduler === 'function';\n\n// Returns whether additional work was scheduled. Caller should keep flushing\n// until there's no work left.\nfunction flushActWork(): boolean {\n  if (flushMockScheduler !== undefined) {\n    const prevIsFlushing = isFlushingAct;\n    isFlushingAct = true;\n    try {\n      return flushMockScheduler();\n    } finally {\n      isFlushingAct = prevIsFlushing;\n    }\n  } else {\n    // No mock scheduler available. However, the only type of pending work is\n    // passive effects, which we control. So we can flush that.\n    const prevIsFlushing = isFlushingAct;\n    isFlushingAct = true;\n    try {\n      let didFlushWork = false;\n      while (flushPassiveEffects()) {\n        didFlushWork = true;\n      }\n      return didFlushWork;\n    } finally {\n      isFlushingAct = prevIsFlushing;\n    }\n  }\n}\n\nfunction flushWorkAndMicroTasks(onDone: (err: ?Error) => void) {\n  try {\n    flushActWork();\n    enqueueTask(() => {\n      if (flushActWork()) {\n        flushWorkAndMicroTasks(onDone);\n      } else {\n        onDone();\n      }\n    });\n  } catch (err) {\n    onDone(err);\n  }\n}\n\n// we track the 'depth' of the act() calls with this counter,\n// so we can tell if any async act() calls try to run in parallel.\n\nlet actingUpdatesScopeDepth = 0;\nlet didWarnAboutUsingActInProd = false;\n\nexport function act(callback: () => Thenable<mixed>): Thenable<void> {\n  if (!__DEV__) {\n    if (didWarnAboutUsingActInProd === false) {\n      didWarnAboutUsingActInProd = true;\n      // eslint-disable-next-line react-internal/no-production-logging\n      console.error(\n        'act(...) is not supported in production builds of React, and might not behave as expected.',\n      );\n    }\n  }\n\n  const previousActingUpdatesScopeDepth = actingUpdatesScopeDepth;\n  actingUpdatesScopeDepth++;\n\n  const previousIsSomeRendererActing = IsSomeRendererActing.current;\n  const previousIsThisRendererActing = IsThisRendererActing.current;\n  const previousIsInsideThisAct = isInsideThisAct;\n  IsSomeRendererActing.current = true;\n  IsThisRendererActing.current = true;\n  isInsideThisAct = true;\n\n  function onDone() {\n    actingUpdatesScopeDepth--;\n    IsSomeRendererActing.current = previousIsSomeRendererActing;\n    IsThisRendererActing.current = previousIsThisRendererActing;\n    isInsideThisAct = previousIsInsideThisAct;\n    if (__DEV__) {\n      if (actingUpdatesScopeDepth > previousActingUpdatesScopeDepth) {\n        // if it's _less than_ previousActingUpdatesScopeDepth, then we can assume the 'other' one has warned\n        console.error(\n          'You seem to have overlapping act() calls, this is not supported. ' +\n            'Be sure to await previous act() calls before making a new one. ',\n        );\n      }\n    }\n  }\n\n  let result;\n  try {\n    result = batchedUpdates(callback);\n  } catch (error) {\n    // on sync errors, we still want to 'cleanup' and decrement actingUpdatesScopeDepth\n    onDone();\n    throw error;\n  }\n\n  if (\n    result !== null &&\n    typeof result === 'object' &&\n    typeof result.then === 'function'\n  ) {\n    // setup a boolean that gets set to true only\n    // once this act() call is await-ed\n    let called = false;\n    if (__DEV__) {\n      if (typeof Promise !== 'undefined') {\n        //eslint-disable-next-line no-undef\n        Promise.resolve()\n          .then(() => {})\n          .then(() => {\n            if (called === false) {\n              console.error(\n                'You called act(async () => ...) without await. ' +\n                  'This could lead to unexpected testing behaviour, interleaving multiple act ' +\n                  'calls and mixing their scopes. You should - await act(async () => ...);',\n              );\n            }\n          });\n      }\n    }\n\n    // in the async case, the returned thenable runs the callback, flushes\n    // effects and  microtasks in a loop until flushPassiveEffects() === false,\n    // and cleans up\n    return {\n      then(resolve, reject) {\n        called = true;\n        result.then(\n          () => {\n            if (\n              actingUpdatesScopeDepth > 1 ||\n              (isSchedulerMocked === true &&\n                previousIsSomeRendererActing === true)\n            ) {\n              onDone();\n              resolve();\n              return;\n            }\n            // we're about to exit the act() scope,\n            // now's the time to flush tasks/effects\n            flushWorkAndMicroTasks((err: ?Error) => {\n              onDone();\n              if (err) {\n                reject(err);\n              } else {\n                resolve();\n              }\n            });\n          },\n          err => {\n            onDone();\n            reject(err);\n          },\n        );\n      },\n    };\n  } else {\n    if (__DEV__) {\n      if (result !== undefined) {\n        console.error(\n          'The callback passed to act(...) function ' +\n            'must return undefined, or a Promise. You returned %s',\n          result,\n        );\n      }\n    }\n\n    // flush effects until none remain, and cleanup\n    try {\n      if (\n        actingUpdatesScopeDepth === 1 &&\n        (isSchedulerMocked === false || previousIsSomeRendererActing === false)\n      ) {\n        // we're about to exit the act() scope,\n        // now's the time to flush effects\n        flushActWork();\n      }\n      onDone();\n    } catch (err) {\n      onDone();\n      throw err;\n    }\n\n    // in the sync case, the returned thenable only warns *if* await-ed\n    return {\n      then(resolve) {\n        if (__DEV__) {\n          console.error(\n            'Do not await the result of calling act(...) with sync logic, it is not a Promise.',\n          );\n        }\n        resolve();\n      },\n    };\n  }\n}\n\nfunction detachFiberAfterEffects(fiber: Fiber): void {\n  fiber.sibling = null;\n  fiber.stateNode = null;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {ReactElement} from 'shared/ReactElementType';\nimport type {Fiber} from './ReactInternalTypes';\nimport type {FiberRoot} from './ReactInternalTypes';\nimport type {Instance} from './ReactFiberHostConfig';\nimport type {ReactNodeList} from 'shared/ReactTypes';\n\nimport {\n  flushSync,\n  scheduleUpdateOnFiber,\n  flushPassiveEffects,\n} from './ReactFiberWorkLoop.old';\nimport {updateContainer} from './ReactFiberReconciler.old';\nimport {emptyContextObject} from './ReactFiberContext.old';\nimport {SyncLane, NoTimestamp} from './ReactFiberLane';\nimport {\n  ClassComponent,\n  FunctionComponent,\n  ForwardRef,\n  HostComponent,\n  HostPortal,\n  HostRoot,\n  MemoComponent,\n  SimpleMemoComponent,\n} from './ReactWorkTags';\nimport {\n  REACT_FORWARD_REF_TYPE,\n  REACT_MEMO_TYPE,\n  REACT_LAZY_TYPE,\n} from 'shared/ReactSymbols';\n\nexport type Family = {|\n  current: any,\n|};\n\nexport type RefreshUpdate = {|\n  staleFamilies: Set<Family>,\n  updatedFamilies: Set<Family>,\n|};\n\n// Resolves type to a family.\ntype RefreshHandler = any => Family | void;\n\n// Used by React Refresh runtime through DevTools Global Hook.\nexport type SetRefreshHandler = (handler: RefreshHandler | null) => void;\nexport type ScheduleRefresh = (root: FiberRoot, update: RefreshUpdate) => void;\nexport type ScheduleRoot = (root: FiberRoot, element: ReactNodeList) => void;\nexport type FindHostInstancesForRefresh = (\n  root: FiberRoot,\n  families: Array<Family>,\n) => Set<Instance>;\n\nlet resolveFamily: RefreshHandler | null = null;\n// $FlowFixMe Flow gets confused by a WeakSet feature check below.\nlet failedBoundaries: WeakSet<Fiber> | null = null;\n\nexport const setRefreshHandler = (handler: RefreshHandler | null): void => {\n  if (__DEV__) {\n    resolveFamily = handler;\n  }\n};\n\nexport function resolveFunctionForHotReloading(type: any): any {\n  if (__DEV__) {\n    if (resolveFamily === null) {\n      // Hot reloading is disabled.\n      return type;\n    }\n    const family = resolveFamily(type);\n    if (family === undefined) {\n      return type;\n    }\n    // Use the latest known implementation.\n    return family.current;\n  } else {\n    return type;\n  }\n}\n\nexport function resolveClassForHotReloading(type: any): any {\n  // No implementation differences.\n  return resolveFunctionForHotReloading(type);\n}\n\nexport function resolveForwardRefForHotReloading(type: any): any {\n  if (__DEV__) {\n    if (resolveFamily === null) {\n      // Hot reloading is disabled.\n      return type;\n    }\n    const family = resolveFamily(type);\n    if (family === undefined) {\n      // Check if we're dealing with a real forwardRef. Don't want to crash early.\n      if (\n        type !== null &&\n        type !== undefined &&\n        typeof type.render === 'function'\n      ) {\n        // ForwardRef is special because its resolved .type is an object,\n        // but it's possible that we only have its inner render function in the map.\n        // If that inner render function is different, we'll build a new forwardRef type.\n        const currentRender = resolveFunctionForHotReloading(type.render);\n        if (type.render !== currentRender) {\n          const syntheticType = {\n            $$typeof: REACT_FORWARD_REF_TYPE,\n            render: currentRender,\n          };\n          if (type.displayName !== undefined) {\n            (syntheticType: any).displayName = type.displayName;\n          }\n          return syntheticType;\n        }\n      }\n      return type;\n    }\n    // Use the latest known implementation.\n    return family.current;\n  } else {\n    return type;\n  }\n}\n\nexport function isCompatibleFamilyForHotReloading(\n  fiber: Fiber,\n  element: ReactElement,\n): boolean {\n  if (__DEV__) {\n    if (resolveFamily === null) {\n      // Hot reloading is disabled.\n      return false;\n    }\n\n    const prevType = fiber.elementType;\n    const nextType = element.type;\n\n    // If we got here, we know types aren't === equal.\n    let needsCompareFamilies = false;\n\n    const $$typeofNextType =\n      typeof nextType === 'object' && nextType !== null\n        ? nextType.$$typeof\n        : null;\n\n    switch (fiber.tag) {\n      case ClassComponent: {\n        if (typeof nextType === 'function') {\n          needsCompareFamilies = true;\n        }\n        break;\n      }\n      case FunctionComponent: {\n        if (typeof nextType === 'function') {\n          needsCompareFamilies = true;\n        } else if ($$typeofNextType === REACT_LAZY_TYPE) {\n          // We don't know the inner type yet.\n          // We're going to assume that the lazy inner type is stable,\n          // and so it is sufficient to avoid reconciling it away.\n          // We're not going to unwrap or actually use the new lazy type.\n          needsCompareFamilies = true;\n        }\n        break;\n      }\n      case ForwardRef: {\n        if ($$typeofNextType === REACT_FORWARD_REF_TYPE) {\n          needsCompareFamilies = true;\n        } else if ($$typeofNextType === REACT_LAZY_TYPE) {\n          needsCompareFamilies = true;\n        }\n        break;\n      }\n      case MemoComponent:\n      case SimpleMemoComponent: {\n        if ($$typeofNextType === REACT_MEMO_TYPE) {\n          // TODO: if it was but can no longer be simple,\n          // we shouldn't set this.\n          needsCompareFamilies = true;\n        } else if ($$typeofNextType === REACT_LAZY_TYPE) {\n          needsCompareFamilies = true;\n        }\n        break;\n      }\n      default:\n        return false;\n    }\n\n    // Check if both types have a family and it's the same one.\n    if (needsCompareFamilies) {\n      // Note: memo() and forwardRef() we'll compare outer rather than inner type.\n      // This means both of them need to be registered to preserve state.\n      // If we unwrapped and compared the inner types for wrappers instead,\n      // then we would risk falsely saying two separate memo(Foo)\n      // calls are equivalent because they wrap the same Foo function.\n      const prevFamily = resolveFamily(prevType);\n      if (prevFamily !== undefined && prevFamily === resolveFamily(nextType)) {\n        return true;\n      }\n    }\n    return false;\n  } else {\n    return false;\n  }\n}\n\nexport function markFailedErrorBoundaryForHotReloading(fiber: Fiber) {\n  if (__DEV__) {\n    if (resolveFamily === null) {\n      // Hot reloading is disabled.\n      return;\n    }\n    if (typeof WeakSet !== 'function') {\n      return;\n    }\n    if (failedBoundaries === null) {\n      failedBoundaries = new WeakSet();\n    }\n    failedBoundaries.add(fiber);\n  }\n}\n\nexport const scheduleRefresh: ScheduleRefresh = (\n  root: FiberRoot,\n  update: RefreshUpdate,\n): void => {\n  if (__DEV__) {\n    if (resolveFamily === null) {\n      // Hot reloading is disabled.\n      return;\n    }\n    const {staleFamilies, updatedFamilies} = update;\n    flushPassiveEffects();\n    flushSync(() => {\n      scheduleFibersWithFamiliesRecursively(\n        root.current,\n        updatedFamilies,\n        staleFamilies,\n      );\n    });\n  }\n};\n\nexport const scheduleRoot: ScheduleRoot = (\n  root: FiberRoot,\n  element: ReactNodeList,\n): void => {\n  if (__DEV__) {\n    if (root.context !== emptyContextObject) {\n      // Super edge case: root has a legacy _renderSubtree context\n      // but we don't know the parentComponent so we can't pass it.\n      // Just ignore. We'll delete this with _renderSubtree code path later.\n      return;\n    }\n    flushPassiveEffects();\n    flushSync(() => {\n      updateContainer(element, root, null, null);\n    });\n  }\n};\n\nfunction scheduleFibersWithFamiliesRecursively(\n  fiber: Fiber,\n  updatedFamilies: Set<Family>,\n  staleFamilies: Set<Family>,\n) {\n  if (__DEV__) {\n    const {alternate, child, sibling, tag, type} = fiber;\n\n    let candidateType = null;\n    switch (tag) {\n      case FunctionComponent:\n      case SimpleMemoComponent:\n      case ClassComponent:\n        candidateType = type;\n        break;\n      case ForwardRef:\n        candidateType = type.render;\n        break;\n      default:\n        break;\n    }\n\n    if (resolveFamily === null) {\n      throw new Error('Expected resolveFamily to be set during hot reload.');\n    }\n\n    let needsRender = false;\n    let needsRemount = false;\n    if (candidateType !== null) {\n      const family = resolveFamily(candidateType);\n      if (family !== undefined) {\n        if (staleFamilies.has(family)) {\n          needsRemount = true;\n        } else if (updatedFamilies.has(family)) {\n          if (tag === ClassComponent) {\n            needsRemount = true;\n          } else {\n            needsRender = true;\n          }\n        }\n      }\n    }\n    if (failedBoundaries !== null) {\n      if (\n        failedBoundaries.has(fiber) ||\n        (alternate !== null && failedBoundaries.has(alternate))\n      ) {\n        needsRemount = true;\n      }\n    }\n\n    if (needsRemount) {\n      fiber._debugNeedsRemount = true;\n    }\n    if (needsRemount || needsRender) {\n      scheduleUpdateOnFiber(fiber, SyncLane, NoTimestamp);\n    }\n    if (child !== null && !needsRemount) {\n      scheduleFibersWithFamiliesRecursively(\n        child,\n        updatedFamilies,\n        staleFamilies,\n      );\n    }\n    if (sibling !== null) {\n      scheduleFibersWithFamiliesRecursively(\n        sibling,\n        updatedFamilies,\n        staleFamilies,\n      );\n    }\n  }\n}\n\nexport const findHostInstancesForRefresh: FindHostInstancesForRefresh = (\n  root: FiberRoot,\n  families: Array<Family>,\n): Set<Instance> => {\n  if (__DEV__) {\n    const hostInstances = new Set();\n    const types = new Set(families.map(family => family.current));\n    findHostInstancesForMatchingFibersRecursively(\n      root.current,\n      types,\n      hostInstances,\n    );\n    return hostInstances;\n  } else {\n    throw new Error(\n      'Did not expect findHostInstancesForRefresh to be called in production.',\n    );\n  }\n};\n\nfunction findHostInstancesForMatchingFibersRecursively(\n  fiber: Fiber,\n  types: Set<any>,\n  hostInstances: Set<Instance>,\n) {\n  if (__DEV__) {\n    const {child, sibling, tag, type} = fiber;\n\n    let candidateType = null;\n    switch (tag) {\n      case FunctionComponent:\n      case SimpleMemoComponent:\n      case ClassComponent:\n        candidateType = type;\n        break;\n      case ForwardRef:\n        candidateType = type.render;\n        break;\n      default:\n        break;\n    }\n\n    let didMatch = false;\n    if (candidateType !== null) {\n      if (types.has(candidateType)) {\n        didMatch = true;\n      }\n    }\n\n    if (didMatch) {\n      // We have a match. This only drills down to the closest host components.\n      // There's no need to search deeper because for the purpose of giving\n      // visual feedback, \"flashing\" outermost parent rectangles is sufficient.\n      findHostInstancesForFiberShallowly(fiber, hostInstances);\n    } else {\n      // If there's no match, maybe there will be one further down in the child tree.\n      if (child !== null) {\n        findHostInstancesForMatchingFibersRecursively(\n          child,\n          types,\n          hostInstances,\n        );\n      }\n    }\n\n    if (sibling !== null) {\n      findHostInstancesForMatchingFibersRecursively(\n        sibling,\n        types,\n        hostInstances,\n      );\n    }\n  }\n}\n\nfunction findHostInstancesForFiberShallowly(\n  fiber: Fiber,\n  hostInstances: Set<Instance>,\n): void {\n  if (__DEV__) {\n    const foundHostInstances = findChildHostInstancesForFiberShallowly(\n      fiber,\n      hostInstances,\n    );\n    if (foundHostInstances) {\n      return;\n    }\n    // If we didn't find any host children, fallback to closest host parent.\n    let node = fiber;\n    while (true) {\n      switch (node.tag) {\n        case HostComponent:\n          hostInstances.add(node.stateNode);\n          return;\n        case HostPortal:\n          hostInstances.add(node.stateNode.containerInfo);\n          return;\n        case HostRoot:\n          hostInstances.add(node.stateNode.containerInfo);\n          return;\n      }\n      if (node.return === null) {\n        throw new Error('Expected to reach root first.');\n      }\n      node = node.return;\n    }\n  }\n}\n\nfunction findChildHostInstancesForFiberShallowly(\n  fiber: Fiber,\n  hostInstances: Set<Instance>,\n): boolean {\n  if (__DEV__) {\n    let node: Fiber = fiber;\n    let foundHostInstances = false;\n    while (true) {\n      if (node.tag === HostComponent) {\n        // We got a match.\n        foundHostInstances = true;\n        hostInstances.add(node.stateNode);\n        // There may still be more, so keep searching.\n      } else if (node.child !== null) {\n        node.child.return = node;\n        node = node.child;\n        continue;\n      }\n      if (node === fiber) {\n        return foundHostInstances;\n      }\n      while (node.sibling === null) {\n        if (node.return === null || node.return === fiber) {\n          return foundHostInstances;\n        }\n        node = node.return;\n      }\n      node.sibling.return = node.return;\n      node = node.sibling;\n    }\n  }\n  return false;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {ReactElement} from 'shared/ReactElementType';\nimport type {\n  ReactFragment,\n  ReactPortal,\n  ReactFundamentalComponent,\n  ReactScope,\n} from 'shared/ReactTypes';\nimport type {Fiber} from './ReactInternalTypes';\nimport type {RootTag} from './ReactRootTags';\nimport type {WorkTag} from './ReactWorkTags';\nimport type {TypeOfMode} from './ReactTypeOfMode';\nimport type {Lanes} from './ReactFiberLane';\nimport type {SuspenseInstance} from './ReactFiberHostConfig';\nimport type {OffscreenProps} from './ReactFiberOffscreenComponent';\n\nimport invariant from 'shared/invariant';\nimport {\n  enableProfilerTimer,\n  enableFundamentalAPI,\n  enableScopeAPI,\n  enableBlocksAPI,\n} from 'shared/ReactFeatureFlags';\nimport {NoFlags, Placement} from './ReactFiberFlags';\nimport {ConcurrentRoot, BlockingRoot} from './ReactRootTags';\nimport {\n  IndeterminateComponent,\n  ClassComponent,\n  HostRoot,\n  HostComponent,\n  HostText,\n  HostPortal,\n  ForwardRef,\n  Fragment,\n  Mode,\n  ContextProvider,\n  ContextConsumer,\n  Profiler,\n  SuspenseComponent,\n  SuspenseListComponent,\n  DehydratedFragment,\n  FunctionComponent,\n  MemoComponent,\n  SimpleMemoComponent,\n  LazyComponent,\n  FundamentalComponent,\n  ScopeComponent,\n  Block,\n  OffscreenComponent,\n  LegacyHiddenComponent,\n} from './ReactWorkTags';\nimport getComponentName from 'shared/getComponentName';\n\nimport {isDevToolsPresent} from './ReactFiberDevToolsHook.old';\nimport {\n  resolveClassForHotReloading,\n  resolveFunctionForHotReloading,\n  resolveForwardRefForHotReloading,\n} from './ReactFiberHotReloading.old';\nimport {NoLanes} from './ReactFiberLane';\nimport {\n  NoMode,\n  ConcurrentMode,\n  DebugTracingMode,\n  ProfileMode,\n  StrictMode,\n  BlockingMode,\n} from './ReactTypeOfMode';\nimport {\n  REACT_FORWARD_REF_TYPE,\n  REACT_FRAGMENT_TYPE,\n  REACT_DEBUG_TRACING_MODE_TYPE,\n  REACT_STRICT_MODE_TYPE,\n  REACT_PROFILER_TYPE,\n  REACT_PROVIDER_TYPE,\n  REACT_CONTEXT_TYPE,\n  REACT_SUSPENSE_TYPE,\n  REACT_SUSPENSE_LIST_TYPE,\n  REACT_MEMO_TYPE,\n  REACT_LAZY_TYPE,\n  REACT_FUNDAMENTAL_TYPE,\n  REACT_SCOPE_TYPE,\n  REACT_BLOCK_TYPE,\n  REACT_OFFSCREEN_TYPE,\n  REACT_LEGACY_HIDDEN_TYPE,\n} from 'shared/ReactSymbols';\n\nexport type {Fiber};\n\nlet hasBadMapPolyfill;\n\nif (__DEV__) {\n  hasBadMapPolyfill = false;\n  try {\n    const nonExtensibleObject = Object.preventExtensions({});\n    /* eslint-disable no-new */\n    new Map([[nonExtensibleObject, null]]);\n    new Set([nonExtensibleObject]);\n    /* eslint-enable no-new */\n  } catch (e) {\n    // TODO: Consider warning about bad polyfills\n    hasBadMapPolyfill = true;\n  }\n}\n\nlet debugCounter = 1;\n\nfunction FiberNode(\n  tag: WorkTag,\n  pendingProps: mixed,\n  key: null | string,\n  mode: TypeOfMode,\n) {\n  // Instance\n  this.tag = tag;\n  this.key = key;\n  this.elementType = null;\n  this.type = null;\n  this.stateNode = null;\n\n  // Fiber\n  this.return = null;\n  this.child = null;\n  this.sibling = null;\n  this.index = 0;\n\n  this.ref = null;\n\n  this.pendingProps = pendingProps;\n  this.memoizedProps = null;\n  this.updateQueue = null;\n  this.memoizedState = null;\n  this.dependencies = null;\n\n  this.mode = mode;\n\n  // Effects\n  this.flags = NoFlags;\n  this.nextEffect = null;\n\n  this.firstEffect = null;\n  this.lastEffect = null;\n\n  this.lanes = NoLanes;\n  this.childLanes = NoLanes;\n\n  this.alternate = null;\n\n  if (enableProfilerTimer) {\n    // Note: The following is done to avoid a v8 performance cliff.\n    //\n    // Initializing the fields below to smis and later updating them with\n    // double values will cause Fibers to end up having separate shapes.\n    // This behavior/bug has something to do with Object.preventExtension().\n    // Fortunately this only impacts DEV builds.\n    // Unfortunately it makes React unusably slow for some applications.\n    // To work around this, initialize the fields below with doubles.\n    //\n    // Learn more about this here:\n    // https://github.com/facebook/react/issues/14365\n    // https://bugs.chromium.org/p/v8/issues/detail?id=8538\n    this.actualDuration = Number.NaN;\n    this.actualStartTime = Number.NaN;\n    this.selfBaseDuration = Number.NaN;\n    this.treeBaseDuration = Number.NaN;\n\n    // It's okay to replace the initial doubles with smis after initialization.\n    // This won't trigger the performance cliff mentioned above,\n    // and it simplifies other profiler code (including DevTools).\n    this.actualDuration = 0;\n    this.actualStartTime = -1;\n    this.selfBaseDuration = 0;\n    this.treeBaseDuration = 0;\n  }\n\n  if (__DEV__) {\n    // This isn't directly used but is handy for debugging internals:\n    this._debugID = debugCounter++;\n    this._debugSource = null;\n    this._debugOwner = null;\n    this._debugNeedsRemount = false;\n    this._debugHookTypes = null;\n    if (!hasBadMapPolyfill && typeof Object.preventExtensions === 'function') {\n      Object.preventExtensions(this);\n    }\n  }\n}\n\n// This is a constructor function, rather than a POJO constructor, still\n// please ensure we do the following:\n// 1) Nobody should add any instance methods on this. Instance methods can be\n//    more difficult to predict when they get optimized and they are almost\n//    never inlined properly in static compilers.\n// 2) Nobody should rely on `instanceof Fiber` for type testing. We should\n//    always know when it is a fiber.\n// 3) We might want to experiment with using numeric keys since they are easier\n//    to optimize in a non-JIT environment.\n// 4) We can easily go from a constructor to a createFiber object literal if that\n//    is faster.\n// 5) It should be easy to port this to a C struct and keep a C implementation\n//    compatible.\nconst createFiber = function(\n  tag: WorkTag,\n  pendingProps: mixed,\n  key: null | string,\n  mode: TypeOfMode,\n): Fiber {\n  // $FlowFixMe: the shapes are exact here but Flow doesn't like constructors\n  return new FiberNode(tag, pendingProps, key, mode);\n};\n\nfunction shouldConstruct(Component: Function) {\n  const prototype = Component.prototype;\n  return !!(prototype && prototype.isReactComponent);\n}\n\nexport function isSimpleFunctionComponent(type: any) {\n  return (\n    typeof type === 'function' &&\n    !shouldConstruct(type) &&\n    type.defaultProps === undefined\n  );\n}\n\nexport function resolveLazyComponentTag(Component: Function): WorkTag {\n  if (typeof Component === 'function') {\n    return shouldConstruct(Component) ? ClassComponent : FunctionComponent;\n  } else if (Component !== undefined && Component !== null) {\n    const $$typeof = Component.$$typeof;\n    if ($$typeof === REACT_FORWARD_REF_TYPE) {\n      return ForwardRef;\n    }\n    if ($$typeof === REACT_MEMO_TYPE) {\n      return MemoComponent;\n    }\n    if (enableBlocksAPI) {\n      if ($$typeof === REACT_BLOCK_TYPE) {\n        return Block;\n      }\n    }\n  }\n  return IndeterminateComponent;\n}\n\n// This is used to create an alternate fiber to do work on.\nexport function createWorkInProgress(current: Fiber, pendingProps: any): Fiber {\n  let workInProgress = current.alternate;\n  if (workInProgress === null) {\n    // We use a double buffering pooling technique because we know that we'll\n    // only ever need at most two versions of a tree. We pool the \"other\" unused\n    // node that we're free to reuse. This is lazily created to avoid allocating\n    // extra objects for things that are never updated. It also allow us to\n    // reclaim the extra memory if needed.\n    workInProgress = createFiber(\n      current.tag,\n      pendingProps,\n      current.key,\n      current.mode,\n    );\n    workInProgress.elementType = current.elementType;\n    workInProgress.type = current.type;\n    workInProgress.stateNode = current.stateNode;\n\n    if (__DEV__) {\n      // DEV-only fields\n      workInProgress._debugID = current._debugID;\n      workInProgress._debugSource = current._debugSource;\n      workInProgress._debugOwner = current._debugOwner;\n      workInProgress._debugHookTypes = current._debugHookTypes;\n    }\n\n    workInProgress.alternate = current;\n    current.alternate = workInProgress;\n  } else {\n    workInProgress.pendingProps = pendingProps;\n    // Needed because Blocks store data on type.\n    workInProgress.type = current.type;\n\n    // We already have an alternate.\n    // Reset the effect tag.\n    workInProgress.flags = NoFlags;\n\n    // The effect list is no longer valid.\n    workInProgress.nextEffect = null;\n    workInProgress.firstEffect = null;\n    workInProgress.lastEffect = null;\n\n    if (enableProfilerTimer) {\n      // We intentionally reset, rather than copy, actualDuration & actualStartTime.\n      // This prevents time from endlessly accumulating in new commits.\n      // This has the downside of resetting values for different priority renders,\n      // But works for yielding (the common case) and should support resuming.\n      workInProgress.actualDuration = 0;\n      workInProgress.actualStartTime = -1;\n    }\n  }\n\n  workInProgress.childLanes = current.childLanes;\n  workInProgress.lanes = current.lanes;\n\n  workInProgress.child = current.child;\n  workInProgress.memoizedProps = current.memoizedProps;\n  workInProgress.memoizedState = current.memoizedState;\n  workInProgress.updateQueue = current.updateQueue;\n\n  // Clone the dependencies object. This is mutated during the render phase, so\n  // it cannot be shared with the current fiber.\n  const currentDependencies = current.dependencies;\n  workInProgress.dependencies =\n    currentDependencies === null\n      ? null\n      : {\n          lanes: currentDependencies.lanes,\n          firstContext: currentDependencies.firstContext,\n        };\n\n  // These will be overridden during the parent's reconciliation\n  workInProgress.sibling = current.sibling;\n  workInProgress.index = current.index;\n  workInProgress.ref = current.ref;\n\n  if (enableProfilerTimer) {\n    workInProgress.selfBaseDuration = current.selfBaseDuration;\n    workInProgress.treeBaseDuration = current.treeBaseDuration;\n  }\n\n  if (__DEV__) {\n    workInProgress._debugNeedsRemount = current._debugNeedsRemount;\n    switch (workInProgress.tag) {\n      case IndeterminateComponent:\n      case FunctionComponent:\n      case SimpleMemoComponent:\n        workInProgress.type = resolveFunctionForHotReloading(current.type);\n        break;\n      case ClassComponent:\n        workInProgress.type = resolveClassForHotReloading(current.type);\n        break;\n      case ForwardRef:\n        workInProgress.type = resolveForwardRefForHotReloading(current.type);\n        break;\n      default:\n        break;\n    }\n  }\n\n  return workInProgress;\n}\n\n// Used to reuse a Fiber for a second pass.\nexport function resetWorkInProgress(workInProgress: Fiber, renderLanes: Lanes) {\n  // This resets the Fiber to what createFiber or createWorkInProgress would\n  // have set the values to before during the first pass. Ideally this wouldn't\n  // be necessary but unfortunately many code paths reads from the workInProgress\n  // when they should be reading from current and writing to workInProgress.\n\n  // We assume pendingProps, index, key, ref, return are still untouched to\n  // avoid doing another reconciliation.\n\n  // Reset the effect tag but keep any Placement tags, since that's something\n  // that child fiber is setting, not the reconciliation.\n  workInProgress.flags &= Placement;\n\n  // The effect list is no longer valid.\n  workInProgress.nextEffect = null;\n  workInProgress.firstEffect = null;\n  workInProgress.lastEffect = null;\n\n  const current = workInProgress.alternate;\n  if (current === null) {\n    // Reset to createFiber's initial values.\n    workInProgress.childLanes = NoLanes;\n    workInProgress.lanes = renderLanes;\n\n    workInProgress.child = null;\n    workInProgress.memoizedProps = null;\n    workInProgress.memoizedState = null;\n    workInProgress.updateQueue = null;\n\n    workInProgress.dependencies = null;\n\n    workInProgress.stateNode = null;\n\n    if (enableProfilerTimer) {\n      // Note: We don't reset the actualTime counts. It's useful to accumulate\n      // actual time across multiple render passes.\n      workInProgress.selfBaseDuration = 0;\n      workInProgress.treeBaseDuration = 0;\n    }\n  } else {\n    // Reset to the cloned values that createWorkInProgress would've.\n    workInProgress.childLanes = current.childLanes;\n    workInProgress.lanes = current.lanes;\n\n    workInProgress.child = current.child;\n    workInProgress.memoizedProps = current.memoizedProps;\n    workInProgress.memoizedState = current.memoizedState;\n    workInProgress.updateQueue = current.updateQueue;\n    // Needed because Blocks store data on type.\n    workInProgress.type = current.type;\n\n    // Clone the dependencies object. This is mutated during the render phase, so\n    // it cannot be shared with the current fiber.\n    const currentDependencies = current.dependencies;\n    workInProgress.dependencies =\n      currentDependencies === null\n        ? null\n        : {\n            lanes: currentDependencies.lanes,\n            firstContext: currentDependencies.firstContext,\n          };\n\n    if (enableProfilerTimer) {\n      // Note: We don't reset the actualTime counts. It's useful to accumulate\n      // actual time across multiple render passes.\n      workInProgress.selfBaseDuration = current.selfBaseDuration;\n      workInProgress.treeBaseDuration = current.treeBaseDuration;\n    }\n  }\n\n  return workInProgress;\n}\n\nexport function createHostRootFiber(tag: RootTag): Fiber {\n  let mode;\n  if (tag === ConcurrentRoot) {\n    mode = ConcurrentMode | BlockingMode | StrictMode;\n  } else if (tag === BlockingRoot) {\n    mode = BlockingMode | StrictMode;\n  } else {\n    mode = NoMode;\n  }\n\n  if (enableProfilerTimer && isDevToolsPresent) {\n    // Always collect profile timings when DevTools are present.\n    // This enables DevTools to start capturing timing at any point–\n    // Without some nodes in the tree having empty base times.\n    mode |= ProfileMode;\n  }\n\n  return createFiber(HostRoot, null, null, mode);\n}\n\nexport function createFiberFromTypeAndProps(\n  type: any, // React$ElementType\n  key: null | string,\n  pendingProps: any,\n  owner: null | Fiber,\n  mode: TypeOfMode,\n  lanes: Lanes,\n): Fiber {\n  let fiberTag = IndeterminateComponent;\n  // The resolved type is set if we know what the final type will be. I.e. it's not lazy.\n  let resolvedType = type;\n  if (typeof type === 'function') {\n    if (shouldConstruct(type)) {\n      fiberTag = ClassComponent;\n      if (__DEV__) {\n        resolvedType = resolveClassForHotReloading(resolvedType);\n      }\n    } else {\n      if (__DEV__) {\n        resolvedType = resolveFunctionForHotReloading(resolvedType);\n      }\n    }\n  } else if (typeof type === 'string') {\n    fiberTag = HostComponent;\n  } else {\n    getTag: switch (type) {\n      case REACT_FRAGMENT_TYPE:\n        return createFiberFromFragment(pendingProps.children, mode, lanes, key);\n      case REACT_DEBUG_TRACING_MODE_TYPE:\n        fiberTag = Mode;\n        mode |= DebugTracingMode;\n        break;\n      case REACT_STRICT_MODE_TYPE:\n        fiberTag = Mode;\n        mode |= StrictMode;\n        break;\n      case REACT_PROFILER_TYPE:\n        return createFiberFromProfiler(pendingProps, mode, lanes, key);\n      case REACT_SUSPENSE_TYPE:\n        return createFiberFromSuspense(pendingProps, mode, lanes, key);\n      case REACT_SUSPENSE_LIST_TYPE:\n        return createFiberFromSuspenseList(pendingProps, mode, lanes, key);\n      case REACT_OFFSCREEN_TYPE:\n        return createFiberFromOffscreen(pendingProps, mode, lanes, key);\n      case REACT_LEGACY_HIDDEN_TYPE:\n        return createFiberFromLegacyHidden(pendingProps, mode, lanes, key);\n      case REACT_SCOPE_TYPE:\n        if (enableScopeAPI) {\n          return createFiberFromScope(type, pendingProps, mode, lanes, key);\n        }\n      // eslint-disable-next-line no-fallthrough\n      default: {\n        if (typeof type === 'object' && type !== null) {\n          switch (type.$$typeof) {\n            case REACT_PROVIDER_TYPE:\n              fiberTag = ContextProvider;\n              break getTag;\n            case REACT_CONTEXT_TYPE:\n              // This is a consumer\n              fiberTag = ContextConsumer;\n              break getTag;\n            case REACT_FORWARD_REF_TYPE:\n              fiberTag = ForwardRef;\n              if (__DEV__) {\n                resolvedType = resolveForwardRefForHotReloading(resolvedType);\n              }\n              break getTag;\n            case REACT_MEMO_TYPE:\n              fiberTag = MemoComponent;\n              break getTag;\n            case REACT_LAZY_TYPE:\n              fiberTag = LazyComponent;\n              resolvedType = null;\n              break getTag;\n            case REACT_BLOCK_TYPE:\n              fiberTag = Block;\n              break getTag;\n            case REACT_FUNDAMENTAL_TYPE:\n              if (enableFundamentalAPI) {\n                return createFiberFromFundamental(\n                  type,\n                  pendingProps,\n                  mode,\n                  lanes,\n                  key,\n                );\n              }\n              break;\n          }\n        }\n        let info = '';\n        if (__DEV__) {\n          if (\n            type === undefined ||\n            (typeof type === 'object' &&\n              type !== null &&\n              Object.keys(type).length === 0)\n          ) {\n            info +=\n              ' You likely forgot to export your component from the file ' +\n              \"it's defined in, or you might have mixed up default and \" +\n              'named imports.';\n          }\n          const ownerName = owner ? getComponentName(owner.type) : null;\n          if (ownerName) {\n            info += '\\n\\nCheck the render method of `' + ownerName + '`.';\n          }\n        }\n        invariant(\n          false,\n          'Element type is invalid: expected a string (for built-in ' +\n            'components) or a class/function (for composite components) ' +\n            'but got: %s.%s',\n          type == null ? type : typeof type,\n          info,\n        );\n      }\n    }\n  }\n\n  const fiber = createFiber(fiberTag, pendingProps, key, mode);\n  fiber.elementType = type;\n  fiber.type = resolvedType;\n  fiber.lanes = lanes;\n\n  if (__DEV__) {\n    fiber._debugOwner = owner;\n  }\n\n  return fiber;\n}\n\nexport function createFiberFromElement(\n  element: ReactElement,\n  mode: TypeOfMode,\n  lanes: Lanes,\n): Fiber {\n  let owner = null;\n  if (__DEV__) {\n    owner = element._owner;\n  }\n  const type = element.type;\n  const key = element.key;\n  const pendingProps = element.props;\n  const fiber = createFiberFromTypeAndProps(\n    type,\n    key,\n    pendingProps,\n    owner,\n    mode,\n    lanes,\n  );\n  if (__DEV__) {\n    fiber._debugSource = element._source;\n    fiber._debugOwner = element._owner;\n  }\n  return fiber;\n}\n\nexport function createFiberFromFragment(\n  elements: ReactFragment,\n  mode: TypeOfMode,\n  lanes: Lanes,\n  key: null | string,\n): Fiber {\n  const fiber = createFiber(Fragment, elements, key, mode);\n  fiber.lanes = lanes;\n  return fiber;\n}\n\nexport function createFiberFromFundamental(\n  fundamentalComponent: ReactFundamentalComponent<any, any>,\n  pendingProps: any,\n  mode: TypeOfMode,\n  lanes: Lanes,\n  key: null | string,\n): Fiber {\n  const fiber = createFiber(FundamentalComponent, pendingProps, key, mode);\n  fiber.elementType = fundamentalComponent;\n  fiber.type = fundamentalComponent;\n  fiber.lanes = lanes;\n  return fiber;\n}\n\nfunction createFiberFromScope(\n  scope: ReactScope,\n  pendingProps: any,\n  mode: TypeOfMode,\n  lanes: Lanes,\n  key: null | string,\n) {\n  const fiber = createFiber(ScopeComponent, pendingProps, key, mode);\n  fiber.type = scope;\n  fiber.elementType = scope;\n  fiber.lanes = lanes;\n  return fiber;\n}\n\nfunction createFiberFromProfiler(\n  pendingProps: any,\n  mode: TypeOfMode,\n  lanes: Lanes,\n  key: null | string,\n): Fiber {\n  if (__DEV__) {\n    if (typeof pendingProps.id !== 'string') {\n      console.error('Profiler must specify an \"id\" as a prop');\n    }\n  }\n\n  const fiber = createFiber(Profiler, pendingProps, key, mode | ProfileMode);\n  // TODO: The Profiler fiber shouldn't have a type. It has a tag.\n  fiber.elementType = REACT_PROFILER_TYPE;\n  fiber.type = REACT_PROFILER_TYPE;\n  fiber.lanes = lanes;\n\n  if (enableProfilerTimer) {\n    fiber.stateNode = {\n      effectDuration: 0,\n      passiveEffectDuration: 0,\n    };\n  }\n\n  return fiber;\n}\n\nexport function createFiberFromSuspense(\n  pendingProps: any,\n  mode: TypeOfMode,\n  lanes: Lanes,\n  key: null | string,\n) {\n  const fiber = createFiber(SuspenseComponent, pendingProps, key, mode);\n\n  // TODO: The SuspenseComponent fiber shouldn't have a type. It has a tag.\n  // This needs to be fixed in getComponentName so that it relies on the tag\n  // instead.\n  fiber.type = REACT_SUSPENSE_TYPE;\n  fiber.elementType = REACT_SUSPENSE_TYPE;\n\n  fiber.lanes = lanes;\n  return fiber;\n}\n\nexport function createFiberFromSuspenseList(\n  pendingProps: any,\n  mode: TypeOfMode,\n  lanes: Lanes,\n  key: null | string,\n) {\n  const fiber = createFiber(SuspenseListComponent, pendingProps, key, mode);\n  if (__DEV__) {\n    // TODO: The SuspenseListComponent fiber shouldn't have a type. It has a tag.\n    // This needs to be fixed in getComponentName so that it relies on the tag\n    // instead.\n    fiber.type = REACT_SUSPENSE_LIST_TYPE;\n  }\n  fiber.elementType = REACT_SUSPENSE_LIST_TYPE;\n  fiber.lanes = lanes;\n  return fiber;\n}\n\nexport function createFiberFromOffscreen(\n  pendingProps: OffscreenProps,\n  mode: TypeOfMode,\n  lanes: Lanes,\n  key: null | string,\n) {\n  const fiber = createFiber(OffscreenComponent, pendingProps, key, mode);\n  // TODO: The OffscreenComponent fiber shouldn't have a type. It has a tag.\n  // This needs to be fixed in getComponentName so that it relies on the tag\n  // instead.\n  if (__DEV__) {\n    fiber.type = REACT_OFFSCREEN_TYPE;\n  }\n  fiber.elementType = REACT_OFFSCREEN_TYPE;\n  fiber.lanes = lanes;\n  return fiber;\n}\n\nexport function createFiberFromLegacyHidden(\n  pendingProps: OffscreenProps,\n  mode: TypeOfMode,\n  lanes: Lanes,\n  key: null | string,\n) {\n  const fiber = createFiber(LegacyHiddenComponent, pendingProps, key, mode);\n  // TODO: The LegacyHidden fiber shouldn't have a type. It has a tag.\n  // This needs to be fixed in getComponentName so that it relies on the tag\n  // instead.\n  if (__DEV__) {\n    fiber.type = REACT_LEGACY_HIDDEN_TYPE;\n  }\n  fiber.elementType = REACT_LEGACY_HIDDEN_TYPE;\n  fiber.lanes = lanes;\n  return fiber;\n}\n\nexport function createFiberFromText(\n  content: string,\n  mode: TypeOfMode,\n  lanes: Lanes,\n): Fiber {\n  const fiber = createFiber(HostText, content, null, mode);\n  fiber.lanes = lanes;\n  return fiber;\n}\n\nexport function createFiberFromHostInstanceForDeletion(): Fiber {\n  const fiber = createFiber(HostComponent, null, null, NoMode);\n  // TODO: These should not need a type.\n  fiber.elementType = 'DELETED';\n  fiber.type = 'DELETED';\n  return fiber;\n}\n\nexport function createFiberFromDehydratedFragment(\n  dehydratedNode: SuspenseInstance,\n): Fiber {\n  const fiber = createFiber(DehydratedFragment, null, null, NoMode);\n  fiber.stateNode = dehydratedNode;\n  return fiber;\n}\n\nexport function createFiberFromPortal(\n  portal: ReactPortal,\n  mode: TypeOfMode,\n  lanes: Lanes,\n): Fiber {\n  const pendingProps = portal.children !== null ? portal.children : [];\n  const fiber = createFiber(HostPortal, pendingProps, portal.key, mode);\n  fiber.lanes = lanes;\n  fiber.stateNode = {\n    containerInfo: portal.containerInfo,\n    pendingChildren: null, // Used by persistent updates\n    implementation: portal.implementation,\n  };\n  return fiber;\n}\n\n// Used for stashing WIP properties to replay failed work in DEV.\nexport function assignFiberPropertiesInDEV(\n  target: Fiber | null,\n  source: Fiber,\n): Fiber {\n  if (target === null) {\n    // This Fiber's initial properties will always be overwritten.\n    // We only use a Fiber to ensure the same hidden class so DEV isn't slow.\n    target = createFiber(IndeterminateComponent, null, null, NoMode);\n  }\n\n  // This is intentionally written as a list of all properties.\n  // We tried to use Object.assign() instead but this is called in\n  // the hottest path, and Object.assign() was too slow:\n  // https://github.com/facebook/react/issues/12502\n  // This code is DEV-only so size is not a concern.\n\n  target.tag = source.tag;\n  target.key = source.key;\n  target.elementType = source.elementType;\n  target.type = source.type;\n  target.stateNode = source.stateNode;\n  target.return = source.return;\n  target.child = source.child;\n  target.sibling = source.sibling;\n  target.index = source.index;\n  target.ref = source.ref;\n  target.pendingProps = source.pendingProps;\n  target.memoizedProps = source.memoizedProps;\n  target.updateQueue = source.updateQueue;\n  target.memoizedState = source.memoizedState;\n  target.dependencies = source.dependencies;\n  target.mode = source.mode;\n  target.flags = source.flags;\n  target.nextEffect = source.nextEffect;\n  target.firstEffect = source.firstEffect;\n  target.lastEffect = source.lastEffect;\n  target.lanes = source.lanes;\n  target.childLanes = source.childLanes;\n  target.alternate = source.alternate;\n  if (enableProfilerTimer) {\n    target.actualDuration = source.actualDuration;\n    target.actualStartTime = source.actualStartTime;\n    target.selfBaseDuration = source.selfBaseDuration;\n    target.treeBaseDuration = source.treeBaseDuration;\n  }\n  target._debugID = source._debugID;\n  target._debugSource = source._debugSource;\n  target._debugOwner = source._debugOwner;\n  target._debugNeedsRemount = source._debugNeedsRemount;\n  target._debugHookTypes = source._debugHookTypes;\n  return target;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {FiberRoot, SuspenseHydrationCallbacks} from './ReactInternalTypes';\nimport type {RootTag} from './ReactRootTags';\n\nimport {noTimeout, supportsHydration} from './ReactFiberHostConfig';\nimport {createHostRootFiber} from './ReactFiber.old';\nimport {\n  NoLanes,\n  NoLanePriority,\n  NoTimestamp,\n  createLaneMap,\n} from './ReactFiberLane';\nimport {\n  enableSchedulerTracing,\n  enableSuspenseCallback,\n} from 'shared/ReactFeatureFlags';\nimport {unstable_getThreadID} from 'scheduler/tracing';\nimport {initializeUpdateQueue} from './ReactUpdateQueue.old';\nimport {LegacyRoot, BlockingRoot, ConcurrentRoot} from './ReactRootTags';\n\nfunction FiberRootNode(containerInfo, tag, hydrate) {\n  this.tag = tag;\n  this.containerInfo = containerInfo;\n  this.pendingChildren = null;\n  this.current = null;\n  this.pingCache = null;\n  this.finishedWork = null;\n  this.timeoutHandle = noTimeout;\n  this.context = null;\n  this.pendingContext = null;\n  this.hydrate = hydrate;\n  this.callbackNode = null;\n  this.callbackPriority = NoLanePriority;\n  this.eventTimes = createLaneMap(NoLanes);\n  this.expirationTimes = createLaneMap(NoTimestamp);\n\n  this.pendingLanes = NoLanes;\n  this.suspendedLanes = NoLanes;\n  this.pingedLanes = NoLanes;\n  this.expiredLanes = NoLanes;\n  this.mutableReadLanes = NoLanes;\n  this.finishedLanes = NoLanes;\n\n  this.entangledLanes = NoLanes;\n  this.entanglements = createLaneMap(NoLanes);\n\n  if (supportsHydration) {\n    this.mutableSourceEagerHydrationData = null;\n  }\n\n  if (enableSchedulerTracing) {\n    this.interactionThreadID = unstable_getThreadID();\n    this.memoizedInteractions = new Set();\n    this.pendingInteractionMap = new Map();\n  }\n  if (enableSuspenseCallback) {\n    this.hydrationCallbacks = null;\n  }\n\n  if (__DEV__) {\n    switch (tag) {\n      case BlockingRoot:\n        this._debugRootType = 'createBlockingRoot()';\n        break;\n      case ConcurrentRoot:\n        this._debugRootType = 'createRoot()';\n        break;\n      case LegacyRoot:\n        this._debugRootType = 'createLegacyRoot()';\n        break;\n    }\n  }\n}\n\nexport function createFiberRoot(\n  containerInfo: any,\n  tag: RootTag,\n  hydrate: boolean,\n  hydrationCallbacks: null | SuspenseHydrationCallbacks,\n): FiberRoot {\n  const root: FiberRoot = (new FiberRootNode(containerInfo, tag, hydrate): any);\n  if (enableSuspenseCallback) {\n    root.hydrationCallbacks = hydrationCallbacks;\n  }\n\n  // Cyclic construction. This cheats the type system right now because\n  // stateNode is any.\n  const uninitializedFiber = createHostRootFiber(tag);\n  root.current = uninitializedFiber;\n  uninitializedFiber.stateNode = root;\n\n  initializeUpdateQueue(uninitializedFiber);\n\n  return root;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber, SuspenseHydrationCallbacks} from './ReactInternalTypes';\nimport type {FiberRoot} from './ReactInternalTypes';\nimport type {RootTag} from './ReactRootTags';\nimport type {\n  Instance,\n  TextInstance,\n  Container,\n  PublicInstance,\n} from './ReactFiberHostConfig';\nimport type {RendererInspectionConfig} from './ReactFiberHostConfig';\nimport {FundamentalComponent} from './ReactWorkTags';\nimport type {ReactNodeList} from 'shared/ReactTypes';\nimport type {Lane, LanePriority} from './ReactFiberLane';\nimport type {SuspenseState} from './ReactFiberSuspenseComponent.old';\n\nimport {\n  findCurrentHostFiber,\n  findCurrentHostFiberWithNoPortals,\n} from './ReactFiberTreeReflection';\nimport {get as getInstance} from 'shared/ReactInstanceMap';\nimport {\n  HostComponent,\n  ClassComponent,\n  HostRoot,\n  SuspenseComponent,\n} from './ReactWorkTags';\nimport getComponentName from 'shared/getComponentName';\nimport invariant from 'shared/invariant';\nimport {enableSchedulingProfiler} from 'shared/ReactFeatureFlags';\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\nimport {getPublicInstance} from './ReactFiberHostConfig';\nimport {\n  findCurrentUnmaskedContext,\n  processChildContext,\n  emptyContextObject,\n  isContextProvider as isLegacyContextProvider,\n} from './ReactFiberContext.old';\nimport {createFiberRoot} from './ReactFiberRoot.old';\nimport {injectInternals, onScheduleRoot} from './ReactFiberDevToolsHook.old';\nimport {\n  requestEventTime,\n  requestUpdateLane,\n  scheduleUpdateOnFiber,\n  flushRoot,\n  batchedEventUpdates,\n  batchedUpdates,\n  unbatchedUpdates,\n  flushSync,\n  flushControlled,\n  deferredUpdates,\n  discreteUpdates,\n  flushDiscreteUpdates,\n  flushPassiveEffects,\n  warnIfNotScopedWithMatchingAct,\n  warnIfUnmockedScheduler,\n  IsThisRendererActing,\n  act,\n} from './ReactFiberWorkLoop.old';\nimport {createUpdate, enqueueUpdate} from './ReactUpdateQueue.old';\nimport {\n  isRendering as ReactCurrentFiberIsRendering,\n  current as ReactCurrentFiberCurrent,\n  resetCurrentFiber as resetCurrentDebugFiberInDEV,\n  setCurrentFiber as setCurrentDebugFiberInDEV,\n} from './ReactCurrentFiber';\nimport {StrictMode} from './ReactTypeOfMode';\nimport {\n  SyncLane,\n  InputDiscreteHydrationLane,\n  SelectiveHydrationLane,\n  NoTimestamp,\n  getHighestPriorityPendingLanes,\n  higherPriorityLane,\n  getCurrentUpdateLanePriority,\n  setCurrentUpdateLanePriority,\n} from './ReactFiberLane';\nimport {\n  scheduleRefresh,\n  scheduleRoot,\n  setRefreshHandler,\n  findHostInstancesForRefresh,\n} from './ReactFiberHotReloading.old';\nimport {markRenderScheduled} from './SchedulingProfiler';\n\nexport {registerMutableSourceForHydration} from './ReactMutableSource.new';\nexport {createPortal} from './ReactPortal';\nexport {\n  createComponentSelector,\n  createHasPsuedoClassSelector,\n  createRoleSelector,\n  createTestNameSelector,\n  createTextSelector,\n  getFindAllNodesFailureDescription,\n  findAllNodes,\n  findBoundingRects,\n  focusWithin,\n  observeVisibleRects,\n} from './ReactTestSelectors';\n\ntype OpaqueRoot = FiberRoot;\n\n// 0 is PROD, 1 is DEV.\n// Might add PROFILE later.\ntype BundleType = 0 | 1;\n\ntype DevToolsConfig = {|\n  bundleType: BundleType,\n  version: string,\n  rendererPackageName: string,\n  // Note: this actually *does* depend on Fiber internal fields.\n  // Used by \"inspect clicked DOM element\" in React DevTools.\n  findFiberByHostInstance?: (instance: Instance | TextInstance) => Fiber | null,\n  rendererConfig?: RendererInspectionConfig,\n|};\n\nlet didWarnAboutNestedUpdates;\nlet didWarnAboutFindNodeInStrictMode;\n\nif (__DEV__) {\n  didWarnAboutNestedUpdates = false;\n  didWarnAboutFindNodeInStrictMode = {};\n}\n\nfunction getContextForSubtree(\n  parentComponent: ?React$Component<any, any>,\n): Object {\n  if (!parentComponent) {\n    return emptyContextObject;\n  }\n\n  const fiber = getInstance(parentComponent);\n  const parentContext = findCurrentUnmaskedContext(fiber);\n\n  if (fiber.tag === ClassComponent) {\n    const Component = fiber.type;\n    if (isLegacyContextProvider(Component)) {\n      return processChildContext(fiber, Component, parentContext);\n    }\n  }\n\n  return parentContext;\n}\n\nfunction findHostInstance(component: Object): PublicInstance | null {\n  const fiber = getInstance(component);\n  if (fiber === undefined) {\n    if (typeof component.render === 'function') {\n      invariant(false, 'Unable to find node on an unmounted component.');\n    } else {\n      invariant(\n        false,\n        'Argument appears to not be a ReactComponent. Keys: %s',\n        Object.keys(component),\n      );\n    }\n  }\n  const hostFiber = findCurrentHostFiber(fiber);\n  if (hostFiber === null) {\n    return null;\n  }\n  return hostFiber.stateNode;\n}\n\nfunction findHostInstanceWithWarning(\n  component: Object,\n  methodName: string,\n): PublicInstance | null {\n  if (__DEV__) {\n    const fiber = getInstance(component);\n    if (fiber === undefined) {\n      if (typeof component.render === 'function') {\n        invariant(false, 'Unable to find node on an unmounted component.');\n      } else {\n        invariant(\n          false,\n          'Argument appears to not be a ReactComponent. Keys: %s',\n          Object.keys(component),\n        );\n      }\n    }\n    const hostFiber = findCurrentHostFiber(fiber);\n    if (hostFiber === null) {\n      return null;\n    }\n    if (hostFiber.mode & StrictMode) {\n      const componentName = getComponentName(fiber.type) || 'Component';\n      if (!didWarnAboutFindNodeInStrictMode[componentName]) {\n        didWarnAboutFindNodeInStrictMode[componentName] = true;\n\n        const previousFiber = ReactCurrentFiberCurrent;\n        try {\n          setCurrentDebugFiberInDEV(hostFiber);\n          if (fiber.mode & StrictMode) {\n            console.error(\n              '%s is deprecated in StrictMode. ' +\n                '%s was passed an instance of %s which is inside StrictMode. ' +\n                'Instead, add a ref directly to the element you want to reference. ' +\n                'Learn more about using refs safely here: ' +\n                'https://reactjs.org/link/strict-mode-find-node',\n              methodName,\n              methodName,\n              componentName,\n            );\n          } else {\n            console.error(\n              '%s is deprecated in StrictMode. ' +\n                '%s was passed an instance of %s which renders StrictMode children. ' +\n                'Instead, add a ref directly to the element you want to reference. ' +\n                'Learn more about using refs safely here: ' +\n                'https://reactjs.org/link/strict-mode-find-node',\n              methodName,\n              methodName,\n              componentName,\n            );\n          }\n        } finally {\n          // Ideally this should reset to previous but this shouldn't be called in\n          // render and there's another warning for that anyway.\n          if (previousFiber) {\n            setCurrentDebugFiberInDEV(previousFiber);\n          } else {\n            resetCurrentDebugFiberInDEV();\n          }\n        }\n      }\n    }\n    return hostFiber.stateNode;\n  }\n  return findHostInstance(component);\n}\n\nexport function createContainer(\n  containerInfo: Container,\n  tag: RootTag,\n  hydrate: boolean,\n  hydrationCallbacks: null | SuspenseHydrationCallbacks,\n): OpaqueRoot {\n  return createFiberRoot(containerInfo, tag, hydrate, hydrationCallbacks);\n}\n\nexport function updateContainer(\n  element: ReactNodeList,\n  container: OpaqueRoot,\n  parentComponent: ?React$Component<any, any>,\n  callback: ?Function,\n): Lane {\n  if (__DEV__) {\n    onScheduleRoot(container, element);\n  }\n  const current = container.current;\n  const eventTime = requestEventTime();\n  if (__DEV__) {\n    // $FlowExpectedError - jest isn't a global, and isn't recognized outside of tests\n    if ('undefined' !== typeof jest) {\n      warnIfUnmockedScheduler(current);\n      warnIfNotScopedWithMatchingAct(current);\n    }\n  }\n  const lane = requestUpdateLane(current);\n\n  if (enableSchedulingProfiler) {\n    markRenderScheduled(lane);\n  }\n\n  const context = getContextForSubtree(parentComponent);\n  if (container.context === null) {\n    container.context = context;\n  } else {\n    container.pendingContext = context;\n  }\n\n  if (__DEV__) {\n    if (\n      ReactCurrentFiberIsRendering &&\n      ReactCurrentFiberCurrent !== null &&\n      !didWarnAboutNestedUpdates\n    ) {\n      didWarnAboutNestedUpdates = true;\n      console.error(\n        'Render methods should be a pure function of props and state; ' +\n          'triggering nested component updates from render is not allowed. ' +\n          'If necessary, trigger nested updates in componentDidUpdate.\\n\\n' +\n          'Check the render method of %s.',\n        getComponentName(ReactCurrentFiberCurrent.type) || 'Unknown',\n      );\n    }\n  }\n\n  const update = createUpdate(eventTime, lane);\n  // Caution: React DevTools currently depends on this property\n  // being called \"element\".\n  update.payload = {element};\n\n  callback = callback === undefined ? null : callback;\n  if (callback !== null) {\n    if (__DEV__) {\n      if (typeof callback !== 'function') {\n        console.error(\n          'render(...): Expected the last optional `callback` argument to be a ' +\n            'function. Instead received: %s.',\n          callback,\n        );\n      }\n    }\n    update.callback = callback;\n  }\n\n  enqueueUpdate(current, update);\n  scheduleUpdateOnFiber(current, lane, eventTime);\n\n  return lane;\n}\n\nexport {\n  batchedEventUpdates,\n  batchedUpdates,\n  unbatchedUpdates,\n  deferredUpdates,\n  discreteUpdates,\n  flushDiscreteUpdates,\n  flushControlled,\n  flushSync,\n  flushPassiveEffects,\n  IsThisRendererActing,\n  act,\n};\n\nexport function getPublicRootInstance(\n  container: OpaqueRoot,\n): React$Component<any, any> | PublicInstance | null {\n  const containerFiber = container.current;\n  if (!containerFiber.child) {\n    return null;\n  }\n  switch (containerFiber.child.tag) {\n    case HostComponent:\n      return getPublicInstance(containerFiber.child.stateNode);\n    default:\n      return containerFiber.child.stateNode;\n  }\n}\n\nexport function attemptSynchronousHydration(fiber: Fiber): void {\n  switch (fiber.tag) {\n    case HostRoot:\n      const root: FiberRoot = fiber.stateNode;\n      if (root.hydrate) {\n        // Flush the first scheduled \"update\".\n        const lanes = getHighestPriorityPendingLanes(root);\n        flushRoot(root, lanes);\n      }\n      break;\n    case SuspenseComponent:\n      const eventTime = requestEventTime();\n      flushSync(() => scheduleUpdateOnFiber(fiber, SyncLane, eventTime));\n      // If we're still blocked after this, we need to increase\n      // the priority of any promises resolving within this\n      // boundary so that they next attempt also has higher pri.\n      const retryLane = InputDiscreteHydrationLane;\n      markRetryLaneIfNotHydrated(fiber, retryLane);\n      break;\n  }\n}\n\nfunction markRetryLaneImpl(fiber: Fiber, retryLane: Lane) {\n  const suspenseState: null | SuspenseState = fiber.memoizedState;\n  if (suspenseState !== null && suspenseState.dehydrated !== null) {\n    suspenseState.retryLane = higherPriorityLane(\n      suspenseState.retryLane,\n      retryLane,\n    );\n  }\n}\n\n// Increases the priority of thennables when they resolve within this boundary.\nfunction markRetryLaneIfNotHydrated(fiber: Fiber, retryLane: Lane) {\n  markRetryLaneImpl(fiber, retryLane);\n  const alternate = fiber.alternate;\n  if (alternate) {\n    markRetryLaneImpl(alternate, retryLane);\n  }\n}\n\nexport function attemptUserBlockingHydration(fiber: Fiber): void {\n  if (fiber.tag !== SuspenseComponent) {\n    // We ignore HostRoots here because we can't increase\n    // their priority and they should not suspend on I/O,\n    // since you have to wrap anything that might suspend in\n    // Suspense.\n    return;\n  }\n  const eventTime = requestEventTime();\n  const lane = InputDiscreteHydrationLane;\n  scheduleUpdateOnFiber(fiber, lane, eventTime);\n  markRetryLaneIfNotHydrated(fiber, lane);\n}\n\nexport function attemptContinuousHydration(fiber: Fiber): void {\n  if (fiber.tag !== SuspenseComponent) {\n    // We ignore HostRoots here because we can't increase\n    // their priority and they should not suspend on I/O,\n    // since you have to wrap anything that might suspend in\n    // Suspense.\n    return;\n  }\n  const eventTime = requestEventTime();\n  const lane = SelectiveHydrationLane;\n  scheduleUpdateOnFiber(fiber, lane, eventTime);\n  markRetryLaneIfNotHydrated(fiber, lane);\n}\n\nexport function attemptHydrationAtCurrentPriority(fiber: Fiber): void {\n  if (fiber.tag !== SuspenseComponent) {\n    // We ignore HostRoots here because we can't increase\n    // their priority other than synchronously flush it.\n    return;\n  }\n  const eventTime = requestEventTime();\n  const lane = requestUpdateLane(fiber);\n  scheduleUpdateOnFiber(fiber, lane, eventTime);\n  markRetryLaneIfNotHydrated(fiber, lane);\n}\n\nexport function runWithPriority<T>(priority: LanePriority, fn: () => T) {\n  const previousPriority = getCurrentUpdateLanePriority();\n  try {\n    setCurrentUpdateLanePriority(priority);\n    return fn();\n  } finally {\n    setCurrentUpdateLanePriority(previousPriority);\n  }\n}\n\nexport {getCurrentUpdateLanePriority};\n\nexport {findHostInstance};\n\nexport {findHostInstanceWithWarning};\n\nexport function findHostInstanceWithNoPortals(\n  fiber: Fiber,\n): PublicInstance | null {\n  const hostFiber = findCurrentHostFiberWithNoPortals(fiber);\n  if (hostFiber === null) {\n    return null;\n  }\n  if (hostFiber.tag === FundamentalComponent) {\n    return hostFiber.stateNode.instance;\n  }\n  return hostFiber.stateNode;\n}\n\nlet shouldSuspendImpl = fiber => false;\n\nexport function shouldSuspend(fiber: Fiber): boolean {\n  return shouldSuspendImpl(fiber);\n}\n\nlet overrideHookState = null;\nlet overrideHookStateDeletePath = null;\nlet overrideHookStateRenamePath = null;\nlet overrideProps = null;\nlet overridePropsDeletePath = null;\nlet overridePropsRenamePath = null;\nlet scheduleUpdate = null;\nlet setSuspenseHandler = null;\n\nif (__DEV__) {\n  const copyWithDeleteImpl = (\n    obj: Object | Array<any>,\n    path: Array<string | number>,\n    index: number,\n  ) => {\n    const key = path[index];\n    const updated = Array.isArray(obj) ? obj.slice() : {...obj};\n    if (index + 1 === path.length) {\n      if (Array.isArray(updated)) {\n        updated.splice(((key: any): number), 1);\n      } else {\n        delete updated[key];\n      }\n      return updated;\n    }\n    // $FlowFixMe number or string is fine here\n    updated[key] = copyWithDeleteImpl(obj[key], path, index + 1);\n    return updated;\n  };\n\n  const copyWithDelete = (\n    obj: Object | Array<any>,\n    path: Array<string | number>,\n  ): Object | Array<any> => {\n    return copyWithDeleteImpl(obj, path, 0);\n  };\n\n  const copyWithRenameImpl = (\n    obj: Object | Array<any>,\n    oldPath: Array<string | number>,\n    newPath: Array<string | number>,\n    index: number,\n  ) => {\n    const oldKey = oldPath[index];\n    const updated = Array.isArray(obj) ? obj.slice() : {...obj};\n    if (index + 1 === oldPath.length) {\n      const newKey = newPath[index];\n      // $FlowFixMe number or string is fine here\n      updated[newKey] = updated[oldKey];\n      if (Array.isArray(updated)) {\n        updated.splice(((oldKey: any): number), 1);\n      } else {\n        delete updated[oldKey];\n      }\n    } else {\n      // $FlowFixMe number or string is fine here\n      updated[oldKey] = copyWithRenameImpl(\n        // $FlowFixMe number or string is fine here\n        obj[oldKey],\n        oldPath,\n        newPath,\n        index + 1,\n      );\n    }\n    return updated;\n  };\n\n  const copyWithRename = (\n    obj: Object | Array<any>,\n    oldPath: Array<string | number>,\n    newPath: Array<string | number>,\n  ): Object | Array<any> => {\n    if (oldPath.length !== newPath.length) {\n      console.warn('copyWithRename() expects paths of the same length');\n      return;\n    } else {\n      for (let i = 0; i < newPath.length - 1; i++) {\n        if (oldPath[i] !== newPath[i]) {\n          console.warn(\n            'copyWithRename() expects paths to be the same except for the deepest key',\n          );\n          return;\n        }\n      }\n    }\n    return copyWithRenameImpl(obj, oldPath, newPath, 0);\n  };\n\n  const copyWithSetImpl = (\n    obj: Object | Array<any>,\n    path: Array<string | number>,\n    index: number,\n    value: any,\n  ) => {\n    if (index >= path.length) {\n      return value;\n    }\n    const key = path[index];\n    const updated = Array.isArray(obj) ? obj.slice() : {...obj};\n    // $FlowFixMe number or string is fine here\n    updated[key] = copyWithSetImpl(obj[key], path, index + 1, value);\n    return updated;\n  };\n\n  const copyWithSet = (\n    obj: Object | Array<any>,\n    path: Array<string | number>,\n    value: any,\n  ): Object | Array<any> => {\n    return copyWithSetImpl(obj, path, 0, value);\n  };\n\n  const findHook = (fiber: Fiber, id: number) => {\n    // For now, the \"id\" of stateful hooks is just the stateful hook index.\n    // This may change in the future with e.g. nested hooks.\n    let currentHook = fiber.memoizedState;\n    while (currentHook !== null && id > 0) {\n      currentHook = currentHook.next;\n      id--;\n    }\n    return currentHook;\n  };\n\n  // Support DevTools editable values for useState and useReducer.\n  overrideHookState = (\n    fiber: Fiber,\n    id: number,\n    path: Array<string | number>,\n    value: any,\n  ) => {\n    const hook = findHook(fiber, id);\n    if (hook !== null) {\n      const newState = copyWithSet(hook.memoizedState, path, value);\n      hook.memoizedState = newState;\n      hook.baseState = newState;\n\n      // We aren't actually adding an update to the queue,\n      // because there is no update we can add for useReducer hooks that won't trigger an error.\n      // (There's no appropriate action type for DevTools overrides.)\n      // As a result though, React will see the scheduled update as a noop and bailout.\n      // Shallow cloning props works as a workaround for now to bypass the bailout check.\n      fiber.memoizedProps = {...fiber.memoizedProps};\n\n      scheduleUpdateOnFiber(fiber, SyncLane, NoTimestamp);\n    }\n  };\n  overrideHookStateDeletePath = (\n    fiber: Fiber,\n    id: number,\n    path: Array<string | number>,\n  ) => {\n    const hook = findHook(fiber, id);\n    if (hook !== null) {\n      const newState = copyWithDelete(hook.memoizedState, path);\n      hook.memoizedState = newState;\n      hook.baseState = newState;\n\n      // We aren't actually adding an update to the queue,\n      // because there is no update we can add for useReducer hooks that won't trigger an error.\n      // (There's no appropriate action type for DevTools overrides.)\n      // As a result though, React will see the scheduled update as a noop and bailout.\n      // Shallow cloning props works as a workaround for now to bypass the bailout check.\n      fiber.memoizedProps = {...fiber.memoizedProps};\n\n      scheduleUpdateOnFiber(fiber, SyncLane, NoTimestamp);\n    }\n  };\n  overrideHookStateRenamePath = (\n    fiber: Fiber,\n    id: number,\n    oldPath: Array<string | number>,\n    newPath: Array<string | number>,\n  ) => {\n    const hook = findHook(fiber, id);\n    if (hook !== null) {\n      const newState = copyWithRename(hook.memoizedState, oldPath, newPath);\n      hook.memoizedState = newState;\n      hook.baseState = newState;\n\n      // We aren't actually adding an update to the queue,\n      // because there is no update we can add for useReducer hooks that won't trigger an error.\n      // (There's no appropriate action type for DevTools overrides.)\n      // As a result though, React will see the scheduled update as a noop and bailout.\n      // Shallow cloning props works as a workaround for now to bypass the bailout check.\n      fiber.memoizedProps = {...fiber.memoizedProps};\n\n      scheduleUpdateOnFiber(fiber, SyncLane, NoTimestamp);\n    }\n  };\n\n  // Support DevTools props for function components, forwardRef, memo, host components, etc.\n  overrideProps = (fiber: Fiber, path: Array<string | number>, value: any) => {\n    fiber.pendingProps = copyWithSet(fiber.memoizedProps, path, value);\n    if (fiber.alternate) {\n      fiber.alternate.pendingProps = fiber.pendingProps;\n    }\n    scheduleUpdateOnFiber(fiber, SyncLane, NoTimestamp);\n  };\n  overridePropsDeletePath = (fiber: Fiber, path: Array<string | number>) => {\n    fiber.pendingProps = copyWithDelete(fiber.memoizedProps, path);\n    if (fiber.alternate) {\n      fiber.alternate.pendingProps = fiber.pendingProps;\n    }\n    scheduleUpdateOnFiber(fiber, SyncLane, NoTimestamp);\n  };\n  overridePropsRenamePath = (\n    fiber: Fiber,\n    oldPath: Array<string | number>,\n    newPath: Array<string | number>,\n  ) => {\n    fiber.pendingProps = copyWithRename(fiber.memoizedProps, oldPath, newPath);\n    if (fiber.alternate) {\n      fiber.alternate.pendingProps = fiber.pendingProps;\n    }\n    scheduleUpdateOnFiber(fiber, SyncLane, NoTimestamp);\n  };\n\n  scheduleUpdate = (fiber: Fiber) => {\n    scheduleUpdateOnFiber(fiber, SyncLane, NoTimestamp);\n  };\n\n  setSuspenseHandler = (newShouldSuspendImpl: Fiber => boolean) => {\n    shouldSuspendImpl = newShouldSuspendImpl;\n  };\n}\n\nfunction findHostInstanceByFiber(fiber: Fiber): Instance | TextInstance | null {\n  const hostFiber = findCurrentHostFiber(fiber);\n  if (hostFiber === null) {\n    return null;\n  }\n  return hostFiber.stateNode;\n}\n\nfunction emptyFindFiberByHostInstance(\n  instance: Instance | TextInstance,\n): Fiber | null {\n  return null;\n}\n\nfunction getCurrentFiberForDevTools() {\n  return ReactCurrentFiberCurrent;\n}\n\nexport function injectIntoDevTools(devToolsConfig: DevToolsConfig): boolean {\n  const {findFiberByHostInstance} = devToolsConfig;\n  const {ReactCurrentDispatcher} = ReactSharedInternals;\n\n  return injectInternals({\n    bundleType: devToolsConfig.bundleType,\n    version: devToolsConfig.version,\n    rendererPackageName: devToolsConfig.rendererPackageName,\n    rendererConfig: devToolsConfig.rendererConfig,\n    overrideHookState,\n    overrideHookStateDeletePath,\n    overrideHookStateRenamePath,\n    overrideProps,\n    overridePropsDeletePath,\n    overridePropsRenamePath,\n    setSuspenseHandler,\n    scheduleUpdate,\n    currentDispatcherRef: ReactCurrentDispatcher,\n    findHostInstanceByFiber,\n    findFiberByHostInstance:\n      findFiberByHostInstance || emptyFindFiberByHostInstance,\n    // React Refresh\n    findHostInstancesForRefresh: __DEV__ ? findHostInstancesForRefresh : null,\n    scheduleRefresh: __DEV__ ? scheduleRefresh : null,\n    scheduleRoot: __DEV__ ? scheduleRoot : null,\n    setRefreshHandler: __DEV__ ? setRefreshHandler : null,\n    // Enables DevTools to append owner stacks to error messages in DEV mode.\n    getCurrentFiber: __DEV__ ? getCurrentFiberForDevTools : null,\n  });\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport * as React from 'react';\nimport ReactVersion from 'shared/ReactVersion';\nimport {LegacyRoot} from 'react-reconciler/src/ReactRootTags';\nimport {\n  createContainer,\n  updateContainer,\n  injectIntoDevTools,\n} from 'react-reconciler/src/ReactFiberReconciler';\nimport Transform from 'art/core/transform';\nimport Mode from 'art/modes/current';\nimport FastNoSideEffects from 'art/modes/fast-noSideEffects';\n\nimport {TYPES, childrenAsString} from './ReactARTInternals';\n\nMode.setCurrent(\n  // Change to 'art/modes/dom' for easier debugging via SVG\n  FastNoSideEffects,\n);\n\n/** Declarative fill-type objects; API design not finalized */\n\nconst slice = Array.prototype.slice;\n\nclass LinearGradient {\n  constructor(stops, x1, y1, x2, y2) {\n    this._args = slice.call(arguments);\n  }\n\n  applyFill(node) {\n    node.fillLinear.apply(node, this._args);\n  }\n}\n\nclass RadialGradient {\n  constructor(stops, fx, fy, rx, ry, cx, cy) {\n    this._args = slice.call(arguments);\n  }\n\n  applyFill(node) {\n    node.fillRadial.apply(node, this._args);\n  }\n}\n\nclass Pattern {\n  constructor(url, width, height, left, top) {\n    this._args = slice.call(arguments);\n  }\n\n  applyFill(node) {\n    node.fillImage.apply(node, this._args);\n  }\n}\n\n/** React Components */\n\nclass Surface extends React.Component {\n  componentDidMount() {\n    const {height, width} = this.props;\n\n    this._surface = Mode.Surface(+width, +height, this._tagRef);\n\n    this._mountNode = createContainer(this._surface, LegacyRoot, false, null);\n    updateContainer(this.props.children, this._mountNode, this);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const props = this.props;\n\n    if (props.height !== prevProps.height || props.width !== prevProps.width) {\n      this._surface.resize(+props.width, +props.height);\n    }\n\n    updateContainer(this.props.children, this._mountNode, this);\n\n    if (this._surface.render) {\n      this._surface.render();\n    }\n  }\n\n  componentWillUnmount() {\n    updateContainer(null, this._mountNode, this);\n  }\n\n  render() {\n    // This is going to be a placeholder because we don't know what it will\n    // actually resolve to because ART may render canvas, vml or svg tags here.\n    // We only allow a subset of properties since others might conflict with\n    // ART's properties.\n    const props = this.props;\n\n    // TODO: ART's Canvas Mode overrides surface title and cursor\n    const Tag = Mode.Surface.tagName;\n\n    return (\n      <Tag\n        ref={ref => (this._tagRef = ref)}\n        accessKey={props.accessKey}\n        className={props.className}\n        draggable={props.draggable}\n        role={props.role}\n        style={props.style}\n        tabIndex={props.tabIndex}\n        title={props.title}\n      />\n    );\n  }\n}\n\nclass Text extends React.Component {\n  constructor(props) {\n    super(props);\n    // We allow reading these props. Ideally we could expose the Text node as\n    // ref directly.\n    ['height', 'width', 'x', 'y'].forEach(key => {\n      Object.defineProperty(this, key, {\n        get: function() {\n          return this._text ? this._text[key] : undefined;\n        },\n      });\n    });\n  }\n  render() {\n    // This means you can't have children that render into strings...\n    const T = TYPES.TEXT;\n    return (\n      <T {...this.props} ref={t => (this._text = t)}>\n        {childrenAsString(this.props.children)}\n      </T>\n    );\n  }\n}\n\ninjectIntoDevTools({\n  findFiberByHostInstance: () => null,\n  bundleType: __DEV__ ? 1 : 0,\n  version: ReactVersion,\n  rendererPackageName: 'react-art',\n});\n\n/** API */\n\nexport const ClippingRectangle = TYPES.CLIPPING_RECTANGLE;\nexport const Group = TYPES.GROUP;\nexport const Shape = TYPES.SHAPE;\nexport const Path = Mode.Path;\nexport {LinearGradient, Pattern, RadialGradient, Surface, Text, Transform};\n"],"names":["LegacyRoot","BlockingRoot","ConcurrentRoot","ReactSharedInternals","React","warn","format","args","printWarning","error","level","ReactDebugCurrentFrame","stack","getStackAddendum","concat","argsWithFormat","map","item","unshift","Function","prototype","apply","call","console","FunctionComponent","ClassComponent","IndeterminateComponent","HostRoot","HostPortal","HostComponent","HostText","Fragment","Mode","ContextConsumer","ContextProvider","ForwardRef","Profiler","SuspenseComponent","MemoComponent","SimpleMemoComponent","LazyComponent","IncompleteClassComponent","DehydratedFragment","SuspenseListComponent","FundamentalComponent","ScopeComponent","Block","OffscreenComponent","LegacyHiddenComponent","get","key","_reactInternals","set","value","REACT_ELEMENT_TYPE","REACT_PORTAL_TYPE","REACT_FRAGMENT_TYPE","REACT_STRICT_MODE_TYPE","REACT_PROFILER_TYPE","REACT_PROVIDER_TYPE","REACT_CONTEXT_TYPE","REACT_FORWARD_REF_TYPE","REACT_SUSPENSE_TYPE","REACT_SUSPENSE_LIST_TYPE","REACT_MEMO_TYPE","REACT_LAZY_TYPE","REACT_BLOCK_TYPE","REACT_SERVER_BLOCK_TYPE","REACT_FUNDAMENTAL_TYPE","REACT_SCOPE_TYPE","REACT_OPAQUE_ID_TYPE","REACT_DEBUG_TRACING_MODE_TYPE","REACT_OFFSCREEN_TYPE","REACT_LEGACY_HIDDEN_TYPE","Symbol","for","symbolFor","MAYBE_ITERATOR_SYMBOL","iterator","FAUX_ITERATOR_SYMBOL","getIteratorFn","maybeIterable","maybeIterator","getWrappedName","outerType","innerType","wrapperName","functionName","displayName","name","getContextName","type","getComponentName","tag","$$typeof","context","provider","_context","render","_render","lazyComponent","payload","_payload","init","_init","x","NoFlags","PerformedWork","Placement","Update","PlacementAndUpdate","Deletion","ContentReset","Callback","DidCapture","Ref","Snapshot","Passive","PassiveUnmountPendingDev","Hydrating","HydratingAndUpdate","LifecycleEffectMask","HostEffectMask","Incomplete","ShouldCapture","ForceUpdateForLegacySuspense","enableProfilerTimer","__PROFILE__","enableFundamentalAPI","enableNewReconciler","warnAboutStringRefs","ReactCurrentOwner","getNearestMountedFiber","fiber","node","nearestMounted","alternate","nextNode","flags","return","isFiberMounted","isMounted","component","owner","current","ownerFiber","instance","stateNode","_warnedAboutRefsInRender","getInstance","assertIsMounted","findCurrentFiberUsingSlowPath","a","b","parentA","parentB","nextParent","child","sibling","didFindChild","findCurrentHostFiber","parent","currentParent","doesFiberContain","parentFiber","childFiber","parentFiberAlternate","TYPES","CLIPPING_RECTANGLE","GROUP","SHAPE","TEXT","EVENT_TYPES","onClick","onMouseMove","onMouseOver","onMouseOut","onMouseUp","onMouseDown","childrenAsString","children","length","join","shim","isSuspenseInstancePending","isSuspenseInstanceFallback","registerSuspenseInstanceRetry","hydrateTextInstance","clearSuspenseBoundary","clearSuspenseBoundaryFromContainer","pooledTransform","Transform","NO_CONTEXT","UPDATE_SIGNAL","Object","freeze","addEventListeners","listener","_listeners","_subscriptions","subscribe","createEventHandler","handleEvent","event","destroyEventListeners","getScaleX","props","scaleX","scale","getScaleY","scaleY","isSameFont","oldFont","newFont","fontSize","fontStyle","fontVariant","fontWeight","fontFamily","applyClippingRectangleProps","prevProps","applyNodeProps","width","height","applyGroupProps","transformTo","move","y","rotate","rotation","originX","originY","transform","xx","yx","xy","yy","cursor","title","indicate","blend","opacity","visible","show","hide","applyRenderableNodeProps","fill","applyFill","stroke","strokeWidth","strokeCap","strokeJoin","strokeDash","applyShapeProps","path","d","prevDelta","_prevDelta","prevPath","_prevPath","delta","draw","applyTextProps","string","_currentString","font","alignment","appendInitialChild","parentInstance","inject","createInstance","internalInstanceHandle","ClippingRectangle","_applyProps","Group","Shape","Text","createTextInstance","text","rootContainerInstance","getPublicInstance","prepareForCommit","prepareUpdate","domElement","oldProps","newProps","resetAfterCommit","resetTextContent","getRootHostContext","getChildHostContext","scheduleTimeout","setTimeout","cancelTimeout","clearTimeout","noTimeout","shouldSetTextContent","appendChild","parentNode","eject","appendChildToContainer","insertBefore","beforeChild","injectBefore","insertInContainerBefore","removeChild","removeChildFromContainer","commitUpdate","updatePayload","hideInstance","unhideInstance","unhideTextInstance","textInstance","clearContainer","container","makeClientIdInDEV","warnOnAccessInDEV","Error","preparePortalMount","portalInstance","disabledDepth","prevLog","prevInfo","prevWarn","prevError","prevGroup","prevGroupCollapsed","prevGroupEnd","disabledLog","__reactDisabledLog","disableLogs","log","info","group","groupCollapsed","groupEnd","configurable","enumerable","writable","defineProperties","reenableLogs","ReactCurrentDispatcher","prefix","describeBuiltInComponentFrame","source","ownerFn","undefined","match","trim","reentry","componentFrameCache","PossiblyWeakMap","WeakMap","Map","describeNativeComponentFrame","fn","construct","frame","control","previousPrepareStackTrace","prepareStackTrace","previousDispatcher","Fake","defineProperty","Reflect","sample","sampleLines","split","controlLines","s","c","replace","syntheticFrame","describeClassComponentFrame","ctor","describeFunctionComponentFrame","shouldConstruct","Component","isReactComponent","describeUnknownElementTypeFrameInDEV","loggedTypeFailures","setCurrentlyValidatingElement","element","_owner","_source","setExtraStackFrame","checkPropTypes","typeSpecs","values","location","componentName","has","bind","hasOwnProperty","typeSpecName","err","ex","message","valueStack","fiberStack","index","createCursor","defaultValue","pop","push","warnedAboutMissingGetChildContext","emptyContextObject","contextStackCursor","didPerformWorkStackCursor","previousContext","getUnmaskedContext","workInProgress","didPushOwnContextIfProvider","isContextProvider","cacheContext","unmaskedContext","maskedContext","__reactInternalMemoizedUnmaskedChildContext","__reactInternalMemoizedMaskedChildContext","getMaskedContext","contextTypes","hasContextChanged","childContextTypes","popContext","popTopLevelContextObject","pushTopLevelContextObject","didChange","processChildContext","parentContext","getChildContext","childContext","contextKey","pushContextProvider","memoizedMergedChildContext","__reactInternalMemoizedMergedChildContext","invalidateContextProvider","mergedContext","findCurrentUnmaskedContext","rendererID","injectedHook","hasLoggedError","isDevToolsPresent","__REACT_DEVTOOLS_GLOBAL_HOOK__","injectInternals","internals","hook","isDisabled","supportsFiber","onScheduleRoot","root","onScheduleFiberRoot","__DEV__","onCommitRoot","priorityLevel","onCommitFiberRoot","didError","onCommitUnmount","onCommitFiberUnmount","Scheduler_now","Scheduler","__interactionsRef","ImmediatePriority","UserBlockingPriority","NormalPriority","LowPriority","IdlePriority","NoPriority","initialTimeMs","SyncLanePriority","SyncBatchedLanePriority","InputDiscreteHydrationLanePriority","InputDiscreteLanePriority","InputContinuousHydrationLanePriority","InputContinuousLanePriority","DefaultHydrationLanePriority","DefaultLanePriority","TransitionHydrationPriority","TransitionPriority","RetryLanePriority","SelectiveHydrationLanePriority","IdleHydrationLanePriority","IdleLanePriority","OffscreenLanePriority","NoLanePriority","TotalLanes","NoLanes","NoLane","SyncLane","SyncBatchedLane","InputDiscreteHydrationLane","InputDiscreteLanes","InputContinuousHydrationLane","InputContinuousLanes","DefaultHydrationLane","DefaultLanes","TransitionHydrationLane","TransitionLanes","RetryLanes","SomeRetryLane","SelectiveHydrationLane","NonIdleLanes","IdleHydrationLane","IdleLanes","OffscreenLane","NoTimestamp","return_highestLanePriority","getHighestPriorityLanes","lanes","inputDiscreteLanes","inputContinuousLanes","defaultLanes","transitionLanes","retryLanes","idleLanes","schedulerPriorityToLanePriority","schedulerPriorityLevel","ImmediateSchedulerPriority","UserBlockingSchedulerPriority","NormalSchedulerPriority","LowSchedulerPriority","IdleSchedulerPriority","lanePriorityToSchedulerPriority","lanePriority","NoSchedulerPriority","getNextLanes","wipLanes","pendingLanes","nextLanes","nextLanePriority","expiredLanes","suspendedLanes","pingedLanes","nonIdlePendingLanes","nonIdleUnblockedLanes","nonIdlePingedLanes","unblockedLanes","getEqualOrHigherPriorityLanes","wipLanePriority","entangledLanes","entanglements","pickArbitraryLaneIndex","lane","getMostRecentEventTime","eventTimes","mostRecentEventTime","eventTime","computeExpirationTime","currentTime","priority","markStarvedLanesAsExpired","expirationTimes","expirationTime","getLanesToRetrySynchronouslyOnError","everythingButOffscreen","returnNextLanesPriority","includesNonIdleWork","includesOnlyRetries","includesOnlyTransitions","findUpdateLane","pickArbitraryLane","findTransitionLane","findRetryLane","getHighestPriorityLane","getLowestPriorityLane","clz32","laneToIndex","includesSomeLane","isSubsetOfLanes","subset","mergeLanes","removeLanes","laneToLanes","createLaneMap","initial","laneMap","i","markRootUpdated","updateLane","higherPriorityLanes","markRootSuspended","markRootPinged","hasDiscreteLanes","markRootMutableRead","mutableReadLanes","markRootFinished","remainingLanes","noLongerPendingLanes","markRootEntangled","getBumpedLaneForHydration","renderLanes","highestLanePriority","Math","clz32Fallback","LN2","Scheduler_runWithPriority","Scheduler_scheduleCallback","Scheduler_cancelCallback","Scheduler_shouldYield","Scheduler_requestPaint","Scheduler_getCurrentPriorityLevel","Scheduler_ImmediatePriority","Scheduler_UserBlockingPriority","Scheduler_NormalPriority","Scheduler_LowPriority","Scheduler_IdlePriority","fakeCallbackNode","shouldYield","requestPaint","syncQueue","immediateQueueCallbackNode","isFlushingSyncQueue","now","getCurrentPriorityLevel","reactPriorityToSchedulerPriority","reactPriorityLevel","runWithPriority","scheduleCallback","callback","options","scheduleSyncCallback","flushSyncCallbackQueueImpl","cancelCallback","callbackNode","flushSyncCallbackQueue","isSync","queue","slice","supportsUserTiming","performance","mark","formatLanes","laneOrLanes","toString","ReactVersion","markCommitStarted","markCommitStopped","wakeableIDs","wakeableID","getWakeableID","wakeable","markComponentSuspended","id","then","markLayoutEffectsStarted","markLayoutEffectsStopped","markPassiveEffectsStarted","markPassiveEffectsStopped","markRenderStarted","markRenderYielded","markRenderStopped","markRenderScheduled","markForceUpdateScheduled","markStateUpdateScheduled","NoMode","StrictMode","BlockingMode","ConcurrentMode","ProfileMode","DebugTracingMode","ReactCurrentBatchConfig","NoTransition","requestCurrentTransition","transition","is","objectIs","shallowEqual","objA","objB","keysA","keys","keysB","describeFiber","_debugOwner","_debugSource","getStackByFiberInDevAndProd","isRendering","getCurrentFiberOwnerNameInDevOrNull","getCurrentFiberStackInDev","resetCurrentFiber","getCurrentStack","setCurrentFiber","setIsRendering","rendering","getIsRendering","ReactStrictModeWarnings","recordUnsafeLifecycleWarnings","flushPendingUnsafeLifecycleWarnings","recordLegacyContextWarning","flushLegacyContextWarning","discardPendingWarnings","findStrictRoot","maybeStrictRoot","mode","setToSortedString","array","forEach","sort","pendingComponentWillMountWarnings","pendingUNSAFE_ComponentWillMountWarnings","pendingComponentWillReceivePropsWarnings","pendingUNSAFE_ComponentWillReceivePropsWarnings","pendingComponentWillUpdateWarnings","pendingUNSAFE_ComponentWillUpdateWarnings","didWarnAboutUnsafeLifecycles","Set","componentWillMount","__suppressDeprecationWarning","UNSAFE_componentWillMount","componentWillReceiveProps","UNSAFE_componentWillReceiveProps","componentWillUpdate","UNSAFE_componentWillUpdate","componentWillMountUniqueNames","add","UNSAFE_componentWillMountUniqueNames","componentWillReceivePropsUniqueNames","UNSAFE_componentWillReceivePropsUniqueNames","componentWillUpdateUniqueNames","UNSAFE_componentWillUpdateUniqueNames","size","sortedNames","pendingLegacyContextWarning","didWarnAboutLegacyContext","strictRoot","warningsForRoot","fiberArray","firstFiber","uniqueNames","setCurrentDebugFiberInDEV","resetCurrentDebugFiberInDEV","resolveDefaultProps","baseProps","defaultProps","propName","MAX_SIGNED_31_BIT_INT","valueCursor","rendererSigil","currentlyRenderingFiber","lastContextDependency","lastContextWithAllBitsObserved","isDisallowedContextReadInDEV","resetContextDependencies","enterDisallowedContextReadInDEV","exitDisallowedContextReadInDEV","pushProvider","providerFiber","nextValue","_currentValue2","_currentRenderer2","popProvider","currentValue","calculateChangedBits","newValue","oldValue","changedBits","_calculateChangedBits","scheduleWorkOnParentPath","childLanes","propagateContextChange","nextFiber","list","dependencies","dependency","firstContext","observedBits","update","createUpdate","ForceUpdate","enqueueUpdate","next","enableSuspenseServerRenderer","parentSuspense","prepareToReadContext","markWorkInProgressReceivedUpdate","readContext","resolvedObservedBits","contextItem","responders","isPrimaryRenderer","UpdateState","ReplaceState","CaptureUpdate","hasForceUpdate","didWarnUpdateInsideUpdate","currentlyProcessingQueue","initializeUpdateQueue","baseState","memoizedState","firstBaseUpdate","lastBaseUpdate","shared","pending","effects","updateQueue","cloneUpdateQueue","currentQueue","clone","sharedQueue","enqueueCapturedUpdate","capturedUpdate","newFirst","newLast","getStateFromUpdate","prevState","nextProps","nextState","debugRenderPhaseSideEffectsForStrictMode","partialState","processUpdateQueue","pendingQueue","lastPendingUpdate","firstPendingUpdate","currentLastBaseUpdate","newState","newLanes","newBaseState","newFirstBaseUpdate","newLastBaseUpdate","updateEventTime","markSkippedUpdateLanes","callCallback","resetHasForceUpdateBeforeProcessing","checkHasForceUpdateAfterProcessing","commitUpdateQueue","finishedWork","finishedQueue","effect","fakeInternalInstance","isArray","Array","emptyRefsObject","refs","didWarnAboutStateAssignmentForComponent","didWarnAboutUninitializedState","didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate","didWarnAboutLegacyLifecyclesAndDerivedState","didWarnAboutUndefinedDerivedState","warnOnUndefinedDerivedState","warnOnInvalidCallback","didWarnAboutDirectlyAssigningPropsToState","didWarnAboutContextTypeAndContextTypes","didWarnAboutInvalidateContextType","didWarnOnInvalidCallback","callerName","applyDerivedStateFromProps","getDerivedStateFromProps","classComponentUpdater","enqueueSetState","inst","requestEventTime","requestUpdateLane","scheduleUpdateOnFiber","enqueueReplaceState","enqueueForceUpdate","checkShouldComponentUpdate","oldState","nextContext","shouldComponentUpdate","shouldUpdate","isPureReactComponent","checkClassInstance","renderPresent","getInitialState","isReactClassApproved","state","getDefaultProps","propTypes","contextType","componentShouldUpdate","componentDidUnmount","componentDidReceiveProps","componentWillRecieveProps","UNSAFE_componentWillRecieveProps","hasMutatedProps","getSnapshotBeforeUpdate","componentDidUpdate","getDerivedStateFromError","adoptClassInstance","updater","setInstance","_reactInternalInstance","constructClassInstance","isLegacyContextConsumer","isValid","addendum","foundWillMountName","foundWillReceivePropsName","foundWillUpdateName","newApiName","callComponentWillMount","callComponentWillReceiveProps","mountClassInstance","componentDidMount","resumeMountClassInstance","memoizedProps","oldContext","nextLegacyUnmaskedContext","hasNewLifecycles","updateClassInstance","unresolvedOldProps","elementType","unresolvedNewProps","pendingProps","nextUnmaskedContext","didWarnAboutMaps","didWarnAboutGenerators","didWarnAboutStringRefs","ownerHasKeyUseWarning","ownerHasFunctionTypeWarning","warnForMissingKey","returnFiber","_store","validated","coerceRef","mixedRef","ref","_self","stringRef","_stringRef","throwOnInvalidObjectType","newChild","warnOnFunctionType","resolveLazyType","ChildReconciler","shouldTrackSideEffects","deleteChild","childToDelete","last","lastEffect","nextEffect","firstEffect","deleteRemainingChildren","currentFirstChild","mapRemainingChildren","existingChildren","existingChild","useFiber","createWorkInProgress","placeChild","newFiber","lastPlacedIndex","newIndex","oldIndex","placeSingleChild","updateTextNode","textContent","created","createFiberFromText","existing","updateElement","isCompatibleFamilyForHotReloading","enableBlocksAPI","createFiberFromElement","updatePortal","portal","containerInfo","implementation","createFiberFromPortal","updateFragment","fragment","createFiberFromFragment","createChild","updateSlot","oldFiber","updateFromMap","newIdx","matchedFiber","warnOnInvalidKey","knownKeys","reconcileChildrenArray","newChildren","resultingFirstChild","previousNewFiber","nextOldFiber","delete","reconcileChildrenIterator","newChildrenIterable","iteratorFn","toStringTag","entries","step","done","reconcileSingleTextNode","reconcileSingleElement","reconcileSinglePortal","reconcileChildFibers","isUnkeyedTopLevelFragment","isObject","_isMockFunction","mountChildFibers","cloneChildFibers","currentChild","resetChildFibers","resetWorkInProgress","contextFiberStackCursor","rootInstanceStackCursor","requiredContext","getRootHostContainer","rootInstance","pushHostContainer","nextRootInstance","nextRootContext","popHostContainer","getHostContext","pushHostContext","popHostContext","DefaultSuspenseContext","SubtreeSuspenseContextMask","InvisibleParentSuspenseContext","ForceSuspenseFallback","suspenseStackCursor","hasSuspenseContext","flag","setDefaultShallowSuspenseContext","setShallowSuspenseContext","shallowContext","addSubtreeSuspenseContext","subtreeContext","pushSuspenseContext","newContext","popSuspenseContext","shouldCaptureSuspense","hasInvisibleParent","dehydrated","fallback","unstable_avoidThisFallback","findFirstSuspended","row","revealOrder","didSuspend","HasEffect","Layout","isHydrating","enterHydrationState","prepareToHydrateHostInstance","hostContext","prepareToHydrateHostTextInstance","prepareToHydrateHostSuspenseInstance","popHydrationState","getIsHydrating","workInProgressSources","markSourceAsDirty","mutableSource","resetWorkInProgressVersions","_workInProgressVersionSecondary","getWorkInProgressVersion","setWorkInProgressVersion","version","warnAboutMultipleRenderersDEV","_currentSecondaryRenderer","didWarnAboutMismatchedHooksForComponent","didWarnAboutUseOpaqueIdentifier","currentHook","workInProgressHook","didScheduleRenderPhaseUpdate","didScheduleRenderPhaseUpdateDuringThisPass","RE_RENDER_LIMIT","currentHookNameInDev","hookTypesDev","hookTypesUpdateIndexDev","ignorePreviousDependencies","mountHookTypesDev","hookName","updateHookTypesDev","warnOnHookMismatchInDev","checkDepsAreArrayDev","deps","currentHookName","table","secondColumnStart","oldHookName","newHookName","throwInvalidHookError","areHookInputsEqual","nextDeps","prevDeps","renderWithHooks","secondArg","nextRenderLanes","_debugHookTypes","HooksDispatcherOnUpdateInDEV","HooksDispatcherOnMountWithHookTypesInDEV","HooksDispatcherOnMountInDEV","numberOfReRenders","HooksDispatcherOnRerenderInDEV","ContextOnlyDispatcher","didRenderTooFewHooks","bailoutHooks","PassiveEffect","UpdateEffect","resetHooksAfterThrow","isUpdatingOpaqueValueInRenderPhase","mountWorkInProgressHook","baseQueue","updateWorkInProgressHook","nextCurrentHook","nextWorkInProgressHook","newHook","createFunctionComponentUpdateQueue","basicStateReducer","action","mountReducer","reducer","initialArg","initialState","dispatch","lastRenderedReducer","lastRenderedState","dispatchAction","updateReducer","baseFirst","pendingFirst","first","newBaseQueueFirst","newBaseQueueLast","eagerReducer","eagerState","rerenderReducer","lastRenderPhaseUpdate","firstRenderPhaseUpdate","readFromUnsubcribedMutableSource","getSnapshot","getVersion","_getVersion","isSafeToReadFromSource","currentRenderVersion","snapshot","useMutableSource","getWorkInProgressRoot","dispatcher","useState","currentSnapshot","setSnapshot","stateHook","prevGetSnapshot","prevSource","prevSubscribe","useEffect","maybeNewVersion","maybeNewSnapshot","handleChange","latestGetSnapshot","latestSetSnapshot","unsubscribe","newQueue","mountMutableSource","updateMutableSource","mountState","updateState","rerenderState","pushEffect","create","destroy","componentUpdateQueue","mountRef","initialValue","seal","updateRef","mountEffectImpl","fiberFlags","hookFlags","HookHasEffect","updateEffectImpl","prevEffect","mountEffect","HookPassive","updateEffect","mountLayoutEffect","HookLayout","updateLayoutEffect","imperativeHandleEffect","refCallback","refObject","mountImperativeHandle","effectDeps","updateImperativeHandle","mountDebugValue","formatterFn","updateDebugValue","mountCallback","updateCallback","mountMemo","nextCreate","updateMemo","mountDeferredValue","prevValue","setValue","prevTransition","updateDeferredValue","rerenderDeferredValue","startTransition","setPending","mountTransition","isPending","start","updateTransition","startRef","rerenderTransition","getIsUpdatingOpaqueValueInRenderPhaseInDEV","warnOnOpaqueIdentifierAccessInDEV","mountOpaqueIdentifier","makeId","updateOpaqueIdentifier","rerenderOpaqueIdentifier","arguments","prevDispatcher","InvalidNestedHooksDispatcherOnUpdateInDEV","currentState","useCallback","useContext","useImperativeHandle","useLayoutEffect","useMemo","useReducer","useRef","useDebugValue","useDeferredValue","useTransition","useOpaqueIdentifier","unstable_isNewReconciler","InvalidNestedHooksDispatcherOnMountInDEV","InvalidNestedHooksDispatcherOnRerenderInDEV","warnInvalidContextAccess","warnInvalidHookAccess","commitTime","profilerStartTime","getCommitTime","recordCommitTime","startProfilerTimer","actualStartTime","stopProfilerTimerIfRunning","stopProfilerTimerIfRunningAndRecordDelta","overrideBaseTime","elapsedTime","actualDuration","selfBaseDuration","transferActualDuration","didReceiveUpdate","didWarnAboutBadClass","didWarnAboutModulePatternComponent","didWarnAboutContextTypeOnFunctionComponent","didWarnAboutGetDerivedStateOnFunctionComponent","didWarnAboutFunctionRefs","didWarnAboutReassigningProps","didWarnAboutRevealOrder","didWarnAboutTailOptions","didWarnAboutDefaultPropsOnFunctionComponent","reconcileChildren","nextChildren","forceUnmountCurrentAndReconcile","updateForwardRef","innerPropTypes","bailoutOnAlreadyFinishedWork","updateMemoComponent","updateLanes","isSimpleFunctionComponent","compare","resolvedType","resolveFunctionForHotReloading","validateFunctionComponentInDev","updateSimpleMemoComponent","createFiberFromTypeAndProps","outerMemoType","outerPropTypes","updateFunctionComponent","updateOffscreenComponent","baseLanes","pushRenderLanes","nextBaseLanes","prevBaseLanes","markSpawnedWork","subtreeRenderLanes","updateLegacyHiddenComponent","updateMode","updateProfiler","effectDuration","passiveEffectDuration","markRef","updateBlock","block","data","_data","updateClassComponent","hasContext","isLegacyContextProvider","pushLegacyContextProvider","nextUnitOfWork","finishClassComponent","didCaptureError","pushHostRootContext","pendingContext","updateHostRoot","prevChildren","resetHydrationState","hydrate","updateHostComponent","isDirectTextChild","updateHostText","mountLazyComponent","_current","resolvedTag","resolveLazyComponentTag","resolvedProps","resolveClassForHotReloading","resolveForwardRefForHotReloading","hint","mountIncompleteClassComponent","mountIndeterminateComponent","ownerName","warningKey","_debugID","debugSource","fileName","lineNumber","SUSPENDED_MARKER","retryLane","mountSuspenseOffscreenState","updateSuspenseOffscreenState","prevOffscreenState","shouldRemainOnFallback","suspenseContext","suspenseState","getRemainingWorkInPrimaryTree","updateSuspenseComponent","shouldSuspend","showFallback","tryToClaimNextHydratableInstance","mountDehydratedSuspenseComponent","nextPrimaryChildren","nextFallbackChildren","fallbackFragment","mountSuspenseFallbackChildren","primaryChildFragment","unstable_expectedLoadTime","mountSuspensePrimaryChildren","updateDehydratedSuspenseComponent","fallbackChildFragment","mountSuspenseFallbackAfterRetryWithoutHydrating","updateSuspenseFallbackChildren","updateSuspensePrimaryChildren","primaryChildren","primaryChildProps","createFiberFromOffscreen","fallbackChildren","progressedPrimaryFragment","treeBaseDuration","createWorkInProgressOffscreenFiber","offscreenProps","currentPrimaryChildFragment","currentFallbackChildFragment","progressedLastEffect","retrySuspenseComponentWithoutHydrating","suspenseInstance","getExecutionContext","RetryAfterError","NoContext","attemptHydrationAtLane","renderDidSuspendDelayIfPossible","retry","retryDehydratedSuspenseBoundary","Schedule_tracing_wrap","scheduleWorkOnFiber","propagateSuspenseContextChange","firstChild","findLastContentRow","lastContentRow","currentRow","validateRevealOrder","toLowerCase","validateTailOptions","tailMode","validateSuspenseListNestedChild","childSlot","isIterable","validateSuspenseListChildren","childrenIterator","initSuspenseListRenderState","isBackwards","tail","lastEffectBeforeRendering","renderState","renderingStartTime","updateSuspenseListComponent","shouldForceFallback","didSuspendBefore","nextRow","updatePortalComponent","hasWarnedAboutUsingNoValuePropOnContextProvider","updateContextProvider","providerType","providerPropTypes","hasLegacyContextChanged","hasWarnedAboutUsingContextAsConsumer","updateContextConsumer","Consumer","unstable_observedBits","remountFiber","oldWorkInProgress","newWorkInProgress","prevSibling","beginWork","_debugNeedsRemount","hasChildWork","primaryChildLanes","unresolvedProps","markUpdate","appendAllChildren","updateHostContainer","needsVisibilityToggle","isHidden","currentHostContext","oldText","newText","cutOffTailIfNeeded","hasRenderedATailFallback","tailNode","lastTailNode","completeWork","popLegacyContext","popTopLevelLegacyContextObject","resetMutableSourceWorkInProgressVersions","fiberRoot","wasHydrated","nextDidTimeout","prevDidTimeout","hasInvisibleChildContext","renderDidSuspend","didSuspendAlready","renderedTail","cannotBeSuspended","renderHasNotSuspendedYet","suspended","newThennables","getRenderTargetTime","previousSibling","popRenderLanes","prevIsHidden","nextIsHidden","unwindWork","unwindInterruptedWork","interruptedWork","createCapturedValue","showErrorDialog","boundary","errorInfo","logCapturedError","logError","componentStack","_suppressLogging","componentNameMessage","errorBoundaryMessage","errorBoundaryName","combinedMessage","e","createRootErrorUpdate","onUncaughtError","createClassErrorUpdate","componentDidCatch","markFailedErrorBoundaryForHotReloading","markLegacyErrorBoundaryAsFailed","attachPingListener","pingCache","threadIDs","ping","pingSuspendedRoot","throwException","sourceFiber","rootRenderLanes","currentSource","hasInvisibleParentBoundary","wakeables","currentSourceFiber","renderDidError","isAlreadyFailedLegacyErrorBoundary","invokeGuardedCallbackProd","func","f","funcArgs","onError","invokeGuardedCallbackImpl","window","dispatchEvent","document","createEvent","fakeNode","createElement","invokeGuardedCallbackDev","evt","didCall","windowEvent","windowEventDescriptor","getOwnPropertyDescriptor","restoreAfterDispatch","removeEventListener","evtType","didSetError","isCrossOriginError","handleWindowError","colno","lineno","defaultPrevented","inner","addEventListener","initEvent","hasError","caughtError","reporter","invokeGuardedCallback","hasCaughtError","clearCaughtError","didWarnAboutUndefinedSnapshotBeforeUpdate","PossiblyWeakSet","WeakSet","callComponentWillUnmountWithTimer","componentWillUnmount","safelyCallComponentWillUnmount","unmountError","captureCommitPhaseError","safelyDetachRef","refError","safelyCallDestroy","commitBeforeMutationLifeCycles","didWarnSet","__reactInternalSnapshotBeforeUpdate","commitHookEffectListUnmount","commitHookEffectListMount","schedulePassiveEffects","NoHookEffect","enqueuePendingPassiveHookEffectUnmount","enqueuePendingPassiveHookEffectMount","commitLifeCycles","finishedRoot","committedLanes","commitMount","onCommit","onRender","memoizedInteractions","commitSuspenseHydrationCallbacks","hideOrUnhideAllChildren","commitAttachRef","instanceToUse","commitDetachRef","currentRef","commitUnmount","renderPriorityLevel","unmountHostComponents","commitNestedUnmounts","detachFiberMutation","getHostParentFiber","isHostParent","getHostSibling","siblings","commitPlacement","isContainer","parentStateNode","before","insertOrAppendPlacementNodeIntoContainer","insertOrAppendPlacementNode","isHost","currentParentIsValid","currentParentIsContainer","findParent","commitDeletion","commitWork","commitTextUpdate","commitSuspenseComponent","attachSuspenseRetryListeners","markCommitTimeOfFallback","primaryChildParent","retryCache","resolveRetryWakeable","__reactDoNotTraceInteractions","isSuspenseBoundaryBeingHidden","commitResetTextContent","COMPONENT_TYPE","HAS_PSEUDO_CLASS_TYPE","ROLE_TYPE","TEST_NAME_TYPE","TEXT_TYPE","ceil","IsSomeRendererActing","BatchedContext","DiscreteEventContext","LegacyUnbatchedContext","RenderContext","CommitContext","RootIncomplete","RootFatalErrored","RootErrored","RootSuspended","RootSuspendedWithDelay","RootCompleted","executionContext","workInProgressRoot","workInProgressRootRenderLanes","subtreeRenderLanesCursor","workInProgressRootExitStatus","workInProgressRootFatalError","workInProgressRootIncludedLanes","workInProgressRootSkippedLanes","workInProgressRootUpdatedLanes","workInProgressRootPingedLanes","mostRecentlyUpdatedRoot","globalMostRecentFallbackTime","FALLBACK_THROTTLE_MS","workInProgressRootRenderTargetTime","Infinity","RENDER_TIMEOUT_MS","resetRenderTimer","hasUncaughtError","firstUncaughtError","legacyErrorBoundariesThatAlreadyFailed","rootDoesHavePassiveEffects","rootWithPendingPassiveEffects","pendingPassiveEffectsRenderPriority","pendingPassiveEffectsLanes","pendingPassiveHookEffectsMount","pendingPassiveHookEffectsUnmount","rootsWithPendingDiscreteUpdates","NESTED_UPDATE_LIMIT","nestedUpdateCount","rootWithNestedUpdates","NESTED_PASSIVE_UPDATE_LIMIT","nestedPassiveUpdateCount","spawnedWorkDuringRender","currentEventTime","currentEventWipLanes","currentEventPendingLanes","isFlushingPassiveEffects","focusedInstanceHandle","shouldFireAfterActiveInstanceBlur","isTransition","schedulerPriority","schedulerLanePriority","requestRetryLane","checkForNestedUpdates","warnAboutRenderPhaseUpdatesInDEV","markUpdateLaneFromFiberToRoot","warnAboutUpdateOnUnmountedFiberInDEV","schedulePendingInteractions","performSyncWorkOnRoot","ensureRootIsScheduled","warnAboutUpdateOnNotYetMountedFiberInDEV","existingCallbackNode","newCallbackPriority","callbackPriority","existingCallbackPriority","newCallbackNode","performConcurrentWorkOnRoot","originalCallbackNode","didFlushPassiveEffects","flushPassiveEffects","exitStatus","renderRootConcurrent","prepareFreshStack","renderRootSync","fatalError","finishedLanes","finishConcurrentRender","commitRoot","shouldForceFlushFallbacksInDEV","msUntilTimeout","timeoutHandle","eventTimeMs","timeElapsedMs","jnd","markRootSuspended_dontCallThisOneDirectly","flushSync","prevExecutionContext","pushToStack","popFromStack","handleError","thrownValue","erroredWork","completeUnitOfWork","yetAnotherThrownValue","pushDispatcher","popDispatcher","pushInteractions","prevInteractions","popInteractions","startWorkOnPendingInteractions","workLoopSync","performUnitOfWork","workLoopConcurrent","unitOfWork","completedWork","resetChildLanes","siblingFiber","newChildLanes","shouldBubbleActualDurations","isTimedOutSuspense","commitRootImpl","flushRenderPhaseStrictModeWarningsInDEV","commitBeforeMutationEffects","commitMutationEffects","commitLayoutEffects","rootDidHavePassiveEffects","nextNextEffect","detachFiberAfterEffects","scheduleInteractions","finishPendingInteractions","onCommitRootDevTools","beforeActiveInstanceBlur","commitBeforeMutationEffectOnFiber","primaryFlags","commitLayoutEffectOnFiber","flushPassiveEffectsImpl","invokePassiveEffectCreate","unmountEffects","mountEffects","prepareToThrowUncaughtError","captureCommitPhaseErrorOnRoot","rootFiber","errorToIgnore","retryTimedOutBoundary","boundaryFiber","timeElapsed","didWarnStateUpdateForNotYetMountedComponent","previousFiber","ReactCurrentFiberCurrent","didWarnStateUpdateForUnmountedComponent","dummyFiber","originalWorkInProgressCopy","assignFiberPropertiesInDEV","originalBeginWork","originalError","replayError","didWarnAboutUpdateInRender","didWarnAboutUpdateInRenderForAnotherComponent","ReactCurrentDebugFiberIsRenderingInDEV","renderingComponentName","dedupeKey","setStateComponentName","didWarnAboutUnmockedScheduler","warnIfUnmockedScheduler","computeThreadID","interactionThreadID","interactions","pendingInteractionMap","pendingInteractions","interaction","__count","subscriber","__subscriberRef","threadID","onWorkScheduled","scheduledInteractions","scheduledLane","onWorkStarted","remainingLanesAfterCommit","onWorkStopped","onInteractionScheduledWorkCompleted","actingUpdatesScopeDepth","resolveFamily","failedBoundaries","setRefreshHandler","handler","family","currentRender","syntheticType","prevType","nextType","needsCompareFamilies","$$typeofNextType","prevFamily","scheduleRefresh","staleFamilies","updatedFamilies","scheduleFibersWithFamiliesRecursively","scheduleRoot","updateContainer","candidateType","needsRender","needsRemount","findHostInstancesForRefresh","families","hostInstances","types","findHostInstancesForMatchingFibersRecursively","didMatch","findHostInstancesForFiberShallowly","foundHostInstances","findChildHostInstancesForFiberShallowly","hasBadMapPolyfill","nonExtensibleObject","preventExtensions","debugCounter","FiberNode","Number","NaN","createFiber","currentDependencies","createHostRootFiber","fiberTag","getTag","createFiberFromProfiler","createFiberFromSuspense","createFiberFromSuspenseList","createFiberFromLegacyHidden","elements","content","pendingChildren","target","FiberRootNode","unstable_getThreadID","_debugRootType","createFiberRoot","hydrationCallbacks","uninitializedFiber","didWarnAboutNestedUpdates","didWarnAboutFindNodeInStrictMode","getContextForSubtree","parentComponent","createContainer","jest","warnIfNotScopedWithMatchingAct","ReactCurrentFiberIsRendering","shouldSuspendImpl","overrideHookState","overrideHookStateDeletePath","overrideHookStateRenamePath","overrideProps","overridePropsDeletePath","overridePropsRenamePath","scheduleUpdate","setSuspenseHandler","copyWithDeleteImpl","obj","updated","splice","copyWithDelete","copyWithRenameImpl","oldPath","newPath","oldKey","newKey","copyWithRename","copyWithSetImpl","copyWithSet","findHook","newShouldSuspendImpl","findHostInstanceByFiber","hostFiber","emptyFindFiberByHostInstance","getCurrentFiberForDevTools","injectIntoDevTools","devToolsConfig","findFiberByHostInstance","bundleType","rendererPackageName","rendererConfig","currentDispatcherRef","getCurrentFiber","setCurrent","FastNoSideEffects","LinearGradient","stops","x1","y1","x2","y2","_args","fillLinear","RadialGradient","fx","fy","rx","ry","cx","cy","fillRadial","Pattern","url","left","top","fillImage","Surface","_surface","_tagRef","_mountNode","resize","Tag","tagName","React.createElement","accessKey","className","draggable","role","style","tabIndex","_text","T","t","Path"],"mappings":"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"}