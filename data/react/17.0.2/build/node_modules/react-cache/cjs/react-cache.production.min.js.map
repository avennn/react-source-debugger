{"version":3,"file":"react-cache.production.min.js","sources":["../../../../packages/react-cache/src/LRU.js","../../../../packages/react-cache/src/ReactCacheOld.js"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport * as Scheduler from 'scheduler';\n\n// Intentionally not named imports because Rollup would\n// use dynamic dispatch for CommonJS interop named imports.\nconst {\n  unstable_scheduleCallback: scheduleCallback,\n  unstable_IdlePriority: IdlePriority,\n} = Scheduler;\n\ntype Entry<T> = {|\n  value: T,\n  onDelete: () => mixed,\n  previous: Entry<T>,\n  next: Entry<T>,\n|};\n\nexport function createLRU<T>(limit: number) {\n  let LIMIT = limit;\n\n  // Circular, doubly-linked list\n  let first: Entry<T> | null = null;\n  let size: number = 0;\n\n  let cleanUpIsScheduled: boolean = false;\n\n  function scheduleCleanUp() {\n    if (cleanUpIsScheduled === false && size > LIMIT) {\n      // The cache size exceeds the limit. Schedule a callback to delete the\n      // least recently used entries.\n      cleanUpIsScheduled = true;\n      scheduleCallback(IdlePriority, cleanUp);\n    }\n  }\n\n  function cleanUp() {\n    cleanUpIsScheduled = false;\n    deleteLeastRecentlyUsedEntries(LIMIT);\n  }\n\n  function deleteLeastRecentlyUsedEntries(targetSize: number) {\n    // Delete entries from the cache, starting from the end of the list.\n    if (first !== null) {\n      const resolvedFirst: Entry<T> = (first: any);\n      let last = resolvedFirst.previous;\n      while (size > targetSize && last !== null) {\n        const onDelete = last.onDelete;\n        const previous = last.previous;\n        last.onDelete = (null: any);\n\n        // Remove from the list\n        last.previous = last.next = (null: any);\n        if (last === first) {\n          // Reached the head of the list.\n          first = last = null;\n        } else {\n          (first: any).previous = previous;\n          previous.next = (first: any);\n          last = previous;\n        }\n\n        size -= 1;\n\n        // Call the destroy method after removing the entry from the list. If it\n        // throws, the rest of cache will not be deleted, but it will be in a\n        // valid state.\n        onDelete();\n      }\n    }\n  }\n\n  function add(value: Object, onDelete: () => mixed): Entry<Object> {\n    const entry = {\n      value,\n      onDelete,\n      next: (null: any),\n      previous: (null: any),\n    };\n    if (first === null) {\n      entry.previous = entry.next = entry;\n      first = entry;\n    } else {\n      // Append to head\n      const last = first.previous;\n      last.next = entry;\n      entry.previous = last;\n\n      first.previous = entry;\n      entry.next = first;\n\n      first = entry;\n    }\n    size += 1;\n    return entry;\n  }\n\n  function update(entry: Entry<T>, newValue: T): void {\n    entry.value = newValue;\n  }\n\n  function access(entry: Entry<T>): T {\n    const next = entry.next;\n    if (next !== null) {\n      // Entry already cached\n      const resolvedFirst: Entry<T> = (first: any);\n      if (first !== entry) {\n        // Remove from current position\n        const previous = entry.previous;\n        previous.next = next;\n        next.previous = previous;\n\n        // Append to head\n        const last = resolvedFirst.previous;\n        last.next = entry;\n        entry.previous = last;\n\n        resolvedFirst.previous = entry;\n        entry.next = resolvedFirst;\n\n        first = entry;\n      }\n    } else {\n      // Cannot access a deleted entry\n      // TODO: Error? Warning?\n    }\n    scheduleCleanUp();\n    return entry.value;\n  }\n\n  function setLimit(newLimit: number) {\n    LIMIT = newLimit;\n    scheduleCleanUp();\n  }\n\n  return {\n    add,\n    update,\n    access,\n    setLimit,\n  };\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Thenable} from 'shared/ReactTypes';\n\nimport * as React from 'react';\n\nimport {createLRU} from './LRU';\n\ntype Suspender = {then(resolve: () => mixed, reject: () => mixed): mixed, ...};\n\ntype PendingResult = {|\n  status: 0,\n  value: Suspender,\n|};\n\ntype ResolvedResult<V> = {|\n  status: 1,\n  value: V,\n|};\n\ntype RejectedResult = {|\n  status: 2,\n  value: mixed,\n|};\n\ntype Result<V> = PendingResult | ResolvedResult<V> | RejectedResult;\n\ntype Resource<I, V> = {\n  read(I): V,\n  preload(I): void,\n  ...\n};\n\nconst Pending = 0;\nconst Resolved = 1;\nconst Rejected = 2;\n\nconst ReactCurrentDispatcher =\n  React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED\n    .ReactCurrentDispatcher;\n\nfunction readContext(Context, observedBits) {\n  const dispatcher = ReactCurrentDispatcher.current;\n  if (dispatcher === null) {\n    throw new Error(\n      'react-cache: read and preload may only be called from within a ' +\n        \"component's render. They are not supported in event handlers or \" +\n        'lifecycle methods.',\n    );\n  }\n  return dispatcher.readContext(Context, observedBits);\n}\n\nfunction identityHashFn(input) {\n  if (__DEV__) {\n    if (\n      typeof input !== 'string' &&\n      typeof input !== 'number' &&\n      typeof input !== 'boolean' &&\n      input !== undefined &&\n      input !== null\n    ) {\n      console.error(\n        'Invalid key type. Expected a string, number, symbol, or boolean, ' +\n          'but instead received: %s' +\n          '\\n\\nTo use non-primitive values as keys, you must pass a hash ' +\n          'function as the second argument to createResource().',\n        input,\n      );\n    }\n  }\n  return input;\n}\n\nconst CACHE_LIMIT = 500;\nconst lru = createLRU(CACHE_LIMIT);\n\nconst entries: Map<Resource<any, any>, Map<any, any>> = new Map();\n\nconst CacheContext = React.createContext(null);\n\nfunction accessResult<I, K, V>(\n  resource: any,\n  fetch: I => Thenable<V>,\n  input: I,\n  key: K,\n): Result<V> {\n  let entriesForResource = entries.get(resource);\n  if (entriesForResource === undefined) {\n    entriesForResource = new Map();\n    entries.set(resource, entriesForResource);\n  }\n  const entry = entriesForResource.get(key);\n  if (entry === undefined) {\n    const thenable = fetch(input);\n    thenable.then(\n      value => {\n        if (newResult.status === Pending) {\n          const resolvedResult: ResolvedResult<V> = (newResult: any);\n          resolvedResult.status = Resolved;\n          resolvedResult.value = value;\n        }\n      },\n      error => {\n        if (newResult.status === Pending) {\n          const rejectedResult: RejectedResult = (newResult: any);\n          rejectedResult.status = Rejected;\n          rejectedResult.value = error;\n        }\n      },\n    );\n    const newResult: PendingResult = {\n      status: Pending,\n      value: thenable,\n    };\n    const newEntry = lru.add(newResult, deleteEntry.bind(null, resource, key));\n    entriesForResource.set(key, newEntry);\n    return newResult;\n  } else {\n    return (lru.access(entry): any);\n  }\n}\n\nfunction deleteEntry(resource, key) {\n  const entriesForResource = entries.get(resource);\n  if (entriesForResource !== undefined) {\n    entriesForResource.delete(key);\n    if (entriesForResource.size === 0) {\n      entries.delete(resource);\n    }\n  }\n}\n\nexport function unstable_createResource<I, K: string | number, V>(\n  fetch: I => Thenable<V>,\n  maybeHashInput?: I => K,\n): Resource<I, V> {\n  const hashInput: I => K =\n    maybeHashInput !== undefined ? maybeHashInput : (identityHashFn: any);\n\n  const resource = {\n    read(input: I): V {\n      // react-cache currently doesn't rely on context, but it may in the\n      // future, so we read anyway to prevent access outside of render.\n      readContext(CacheContext);\n      const key = hashInput(input);\n      const result: Result<V> = accessResult(resource, fetch, input, key);\n      switch (result.status) {\n        case Pending: {\n          const suspender = result.value;\n          throw suspender;\n        }\n        case Resolved: {\n          const value = result.value;\n          return value;\n        }\n        case Rejected: {\n          const error = result.value;\n          throw error;\n        }\n        default:\n          // Should be unreachable\n          return (undefined: any);\n      }\n    },\n\n    preload(input: I): void {\n      // react-cache currently doesn't rely on context, but it may in the\n      // future, so we read anyway to prevent access outside of render.\n      readContext(CacheContext);\n      const key = hashInput(input);\n      accessResult(resource, fetch, input, key);\n    },\n  };\n  return resource;\n}\n\nexport function unstable_setGlobalCacheLimit(limit: number) {\n  lru.setLimit(limit);\n}\n"],"names":["scheduleCallback","Scheduler","IdlePriority","createLRU","limit","LIMIT","first","size","cleanUpIsScheduled","scheduleCleanUp","cleanUp","deleteLeastRecentlyUsedEntries","targetSize","resolvedFirst","last","previous","onDelete","next","add","value","entry","update","newValue","access","setLimit","newLimit","Pending","Resolved","Rejected","ReactCurrentDispatcher","React","readContext","Context","observedBits","dispatcher","current","Error","identityHashFn","input","CACHE_LIMIT","lru","entries","Map","CacheContext","accessResult","resource","fetch","key","entriesForResource","get","undefined","set","thenable","then","newResult","status","resolvedResult","error","rejectedResult","newEntry","deleteEntry","bind","delete","unstable_createResource","maybeHashInput","hashInput","read","result","suspender","preload","unstable_setGlobalCacheLimit"],"mappings":"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"}