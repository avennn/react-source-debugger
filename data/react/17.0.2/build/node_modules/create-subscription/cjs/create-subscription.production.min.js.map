{"version":3,"file":"create-subscription.production.min.js","sources":["../../../../packages/shared/formatProdErrorMessage.js","../../../../packages/create-subscription/src/createSubscription.js"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n// Do not require this module directly! Use normal `invariant` calls with\n// template literal strings. The messages will be replaced with error codes\n// during build.\n\nfunction formatProdErrorMessage(code) {\n  let url = 'https://reactjs.org/docs/error-decoder.html?invariant=' + code;\n  for (let i = 1; i < arguments.length; i++) {\n    url += '&args[]=' + encodeURIComponent(arguments[i]);\n  }\n  return (\n    `Minified React error #${code}; visit ${url} for the full message or ` +\n    'use the non-minified dev environment for full errors and additional ' +\n    'helpful warnings.'\n  );\n}\n\nexport default formatProdErrorMessage;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport * as React from 'react';\nimport invariant from 'shared/invariant';\n\ntype Unsubscribe = () => void;\n\nexport function createSubscription<Property, Value>(\n  config: $ReadOnly<{|\n    // Synchronously gets the value for the subscribed property.\n    // Return undefined if the subscribable value is undefined,\n    // Or does not support synchronous reading (e.g. native Promise).\n    getCurrentValue: (source: Property) => Value | void,\n\n    // Setup a subscription for the subscribable value in props, and return an unsubscribe function.\n    // Return empty function if the property cannot be unsubscribed from (e.g. native Promises).\n    // Due to the variety of change event types, subscribers should provide their own handlers.\n    // Those handlers should not attempt to update state though;\n    // They should call the callback() instead when a subscription changes.\n    subscribe: (\n      source: Property,\n      callback: (value: Value | void) => void,\n    ) => Unsubscribe,\n  |}>,\n): React$ComponentType<{|\n  children: (value: Value | void) => React$Node,\n  source: Property,\n|}> {\n  const {getCurrentValue, subscribe} = config;\n\n  if (__DEV__) {\n    if (typeof getCurrentValue !== 'function') {\n      console.error('Subscription must specify a getCurrentValue function');\n    }\n    if (typeof subscribe !== 'function') {\n      console.error('Subscription must specify a subscribe function');\n    }\n  }\n\n  type Props = {|\n    children: (value: Value) => React$Element<any>,\n    source: Property,\n  |};\n  type State = {|\n    source: Property,\n    value: Value | void,\n  |};\n\n  // Reference: https://gist.github.com/bvaughn/d569177d70b50b58bff69c3c4a5353f3\n  class Subscription extends React.Component<Props, State> {\n    state: State = {\n      source: this.props.source,\n      value:\n        this.props.source != null\n          ? getCurrentValue(this.props.source)\n          : undefined,\n    };\n\n    _hasUnmounted: boolean = false;\n    _unsubscribe: Unsubscribe | null = null;\n\n    static getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.source !== prevState.source) {\n        return {\n          source: nextProps.source,\n          value:\n            nextProps.source != null\n              ? getCurrentValue(nextProps.source)\n              : undefined,\n        };\n      }\n\n      return null;\n    }\n\n    componentDidMount() {\n      this.subscribe();\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n      if (this.state.source !== prevState.source) {\n        this.unsubscribe();\n        this.subscribe();\n      }\n    }\n\n    componentWillUnmount() {\n      this.unsubscribe();\n\n      // Track mounted to avoid calling setState after unmounting\n      // For source like Promises that can't be unsubscribed from.\n      this._hasUnmounted = true;\n    }\n\n    render() {\n      return this.props.children(this.state.value);\n    }\n\n    subscribe() {\n      const {source} = this.state;\n      if (source != null) {\n        const callback = (value: Value | void) => {\n          if (this._hasUnmounted) {\n            return;\n          }\n\n          this.setState(state => {\n            // If the value is the same, skip the unnecessary state update.\n            if (value === state.value) {\n              return null;\n            }\n\n            // If this event belongs to an old or uncommitted data source, ignore it.\n            if (source !== state.source) {\n              return null;\n            }\n\n            return {value};\n          });\n        };\n\n        // Store the unsubscribe method for later (in case the subscribable prop changes).\n        const unsubscribe = subscribe(source, callback);\n        invariant(\n          typeof unsubscribe === 'function',\n          'A subscription must return an unsubscribe function.',\n        );\n\n        // It's safe to store unsubscribe on the instance because\n        // We only read or write that property during the \"commit\" phase.\n        this._unsubscribe = unsubscribe;\n\n        // External values could change between render and mount,\n        // In some cases it may be important to handle this case.\n        const value = getCurrentValue(this.props.source);\n        if (value !== this.state.value) {\n          this.setState({value});\n        }\n      }\n    }\n\n    unsubscribe() {\n      if (typeof this._unsubscribe === 'function') {\n        this._unsubscribe();\n      }\n      this._unsubscribe = null;\n    }\n  }\n\n  return Subscription;\n}\n"],"names":["formatProdErrorMessage","code","url","i","arguments","length","encodeURIComponent","createSubscription","config","getCurrentValue","subscribe","Subscription","state","source","props","value","undefined","_hasUnmounted","_unsubscribe","getDerivedStateFromProps","nextProps","prevState","componentDidMount","componentDidUpdate","prevProps","unsubscribe","componentWillUnmount","render","children","callback","setState","React"],"mappings":"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"}