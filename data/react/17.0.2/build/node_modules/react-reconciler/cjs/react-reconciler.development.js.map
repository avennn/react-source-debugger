{"version":3,"file":"react-reconciler.development.js","sources":["../../../../packages/shared/ReactSharedInternals.js","../../../../packages/shared/consoleWithStackDev.js","../../../../packages/react-reconciler/src/ReactWorkTags.js","../../../../packages/shared/ReactInstanceMap.js","../../../../packages/shared/ReactSymbols.js","../../../../packages/shared/getComponentName.js","../../../../packages/react-reconciler/src/ReactFiberFlags.js","../../../../packages/shared/ReactFeatureFlags.js","../../../../packages/react-reconciler/src/ReactFiberTreeReflection.js","../../../../packages/react-reconciler/src/forks/ReactFiberHostConfig.custom.js","../../../../packages/shared/ConsolePatchingDev.js","../../../../packages/shared/ReactComponentStackFrame.js","../../../../packages/shared/checkPropTypes.js","../../../../packages/react-reconciler/src/ReactFiberStack.old.js","../../../../packages/react-reconciler/src/ReactFiberContext.old.js","../../../../packages/react-reconciler/src/ReactRootTags.js","../../../../packages/react-reconciler/src/ReactFiberDevToolsHook.old.js","../../../../packages/react-reconciler/src/SchedulerWithReactIntegration.new.js","../../../../packages/react-reconciler/src/ReactFiberLane.js","../../../../packages/react-reconciler/src/SchedulerWithReactIntegration.old.js","../../../../packages/shared/ReactVersion.js","../../../../packages/react-reconciler/src/SchedulingProfiler.js","../../../../packages/react-reconciler/src/ReactTypeOfMode.js","../../../../packages/react-reconciler/src/ReactFiberTransition.js","../../../../packages/shared/objectIs.js","../../../../packages/shared/shallowEqual.js","../../../../packages/react-reconciler/src/ReactFiberComponentStack.js","../../../../packages/react-reconciler/src/ReactCurrentFiber.js","../../../../packages/react-reconciler/src/ReactStrictModeWarnings.old.js","../../../../packages/react-reconciler/src/ReactFiberLazyComponent.old.js","../../../../packages/react-reconciler/src/MaxInts.js","../../../../packages/react-reconciler/src/ReactFiberNewContext.old.js","../../../../packages/react-reconciler/src/ReactUpdateQueue.old.js","../../../../packages/react-reconciler/src/ReactFiberClassComponent.old.js","../../../../packages/react-reconciler/src/ReactChildFiber.old.js","../../../../packages/react-reconciler/src/ReactFiberHostContext.old.js","../../../../packages/react-reconciler/src/ReactFiberSuspenseContext.old.js","../../../../packages/react-reconciler/src/ReactFiberSuspenseComponent.old.js","../../../../packages/react-reconciler/src/ReactHookEffectTags.js","../../../../packages/react-reconciler/src/ReactFiberHydrationContext.old.js","../../../../packages/react-reconciler/src/ReactMutableSource.old.js","../../../../packages/react-reconciler/src/ReactFiberHooks.old.js","../../../../packages/react-reconciler/src/ReactProfilerTimer.old.js","../../../../packages/react-reconciler/src/ReactFiberBeginWork.old.js","../../../../packages/react-reconciler/src/ReactFiberCompleteWork.old.js","../../../../packages/react-reconciler/src/ReactFiberUnwindWork.old.js","../../../../packages/react-reconciler/src/ReactCapturedValue.js","../../../../packages/react-reconciler/src/ReactFiberErrorDialog.js","../../../../packages/react-reconciler/src/ReactFiberErrorLogger.js","../../../../packages/react-reconciler/src/ReactFiberThrow.old.js","../../../../packages/shared/invokeGuardedCallbackImpl.js","../../../../packages/shared/ReactErrorUtils.js","../../../../packages/react-reconciler/src/ReactFiberCommitWork.old.js","../../../../packages/react-reconciler/src/ReactTestSelectors.js","../../../../packages/shared/enqueueTask.js","../../../../packages/react-reconciler/src/ReactFiberWorkLoop.old.js","../../../../packages/react-reconciler/src/ReactFiberHotReloading.old.js","../../../../packages/react-reconciler/src/ReactFiber.old.js","../../../../packages/react-reconciler/src/ReactFiberRoot.old.js","../../../../packages/react-reconciler/src/ReactMutableSource.new.js","../../../../packages/react-reconciler/src/ReactPortal.js","../../../../packages/react-reconciler/src/ReactFiberReconciler.old.js"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport * as React from 'react';\n\nconst ReactSharedInternals =\n  React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n\nexport default ReactSharedInternals;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\n\n// In DEV, calls to console.warn and console.error get replaced\n// by calls to these methods by a Babel plugin.\n//\n// In PROD (or in packages without access to React internals),\n// they are left as they are instead.\n\nexport function warn(format, ...args) {\n  if (__DEV__) {\n    printWarning('warn', format, args);\n  }\n}\n\nexport function error(format, ...args) {\n  if (__DEV__) {\n    printWarning('error', format, args);\n  }\n}\n\nfunction printWarning(level, format, args) {\n  // When changing this logic, you might want to also\n  // update consoleWithStackDev.www.js as well.\n  if (__DEV__) {\n    const ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    const stack = ReactDebugCurrentFrame.getStackAddendum();\n    if (stack !== '') {\n      format += '%s';\n      args = args.concat([stack]);\n    }\n\n    const argsWithFormat = args.map(item => '' + item);\n    // Careful: RN currently depends on this prefix\n    argsWithFormat.unshift('Warning: ' + format);\n    // We intentionally don't use spread (or .apply) directly because it\n    // breaks IE9: https://github.com/facebook/react/issues/13610\n    // eslint-disable-next-line react-internal/no-production-logging\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nexport type WorkTag =\n  | 0\n  | 1\n  | 2\n  | 3\n  | 4\n  | 5\n  | 6\n  | 7\n  | 8\n  | 9\n  | 10\n  | 11\n  | 12\n  | 13\n  | 14\n  | 15\n  | 16\n  | 17\n  | 18\n  | 19\n  | 20\n  | 21\n  | 22\n  | 23\n  | 24;\n\nexport const FunctionComponent = 0;\nexport const ClassComponent = 1;\nexport const IndeterminateComponent = 2; // Before we know whether it is function or class\nexport const HostRoot = 3; // Root of a host tree. Could be nested inside another node.\nexport const HostPortal = 4; // A subtree. Could be an entry point to a different renderer.\nexport const HostComponent = 5;\nexport const HostText = 6;\nexport const Fragment = 7;\nexport const Mode = 8;\nexport const ContextConsumer = 9;\nexport const ContextProvider = 10;\nexport const ForwardRef = 11;\nexport const Profiler = 12;\nexport const SuspenseComponent = 13;\nexport const MemoComponent = 14;\nexport const SimpleMemoComponent = 15;\nexport const LazyComponent = 16;\nexport const IncompleteClassComponent = 17;\nexport const DehydratedFragment = 18;\nexport const SuspenseListComponent = 19;\nexport const FundamentalComponent = 20;\nexport const ScopeComponent = 21;\nexport const Block = 22;\nexport const OffscreenComponent = 23;\nexport const LegacyHiddenComponent = 24;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/**\n * `ReactInstanceMap` maintains a mapping from a public facing stateful\n * instance (key) and the internal representation (value). This allows public\n * methods to accept the user facing instance as an argument and map them back\n * to internal methods.\n *\n * Note that this module is currently shared and assumed to be stateless.\n * If this becomes an actual Map, that will break.\n */\n\n/**\n * This API should be called `delete` but we'd have to make sure to always\n * transform these to strings for IE support. When this transform is fully\n * supported we can rename it.\n */\nexport function remove(key) {\n  key._reactInternals = undefined;\n}\n\nexport function get(key) {\n  return key._reactInternals;\n}\n\nexport function has(key) {\n  return key._reactInternals !== undefined;\n}\n\nexport function set(key, value) {\n  key._reactInternals = value;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\n// ATTENTION\n// When adding new symbols to this file,\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n\n// The Symbol used to tag the ReactElement-like types. If there is no native Symbol\n// nor polyfill, then a plain number is used for performance.\nexport let REACT_ELEMENT_TYPE = 0xeac7;\nexport let REACT_PORTAL_TYPE = 0xeaca;\nexport let REACT_FRAGMENT_TYPE = 0xeacb;\nexport let REACT_STRICT_MODE_TYPE = 0xeacc;\nexport let REACT_PROFILER_TYPE = 0xead2;\nexport let REACT_PROVIDER_TYPE = 0xeacd;\nexport let REACT_CONTEXT_TYPE = 0xeace;\nexport let REACT_FORWARD_REF_TYPE = 0xead0;\nexport let REACT_SUSPENSE_TYPE = 0xead1;\nexport let REACT_SUSPENSE_LIST_TYPE = 0xead8;\nexport let REACT_MEMO_TYPE = 0xead3;\nexport let REACT_LAZY_TYPE = 0xead4;\nexport let REACT_BLOCK_TYPE = 0xead9;\nexport let REACT_SERVER_BLOCK_TYPE = 0xeada;\nexport let REACT_FUNDAMENTAL_TYPE = 0xead5;\nexport let REACT_SCOPE_TYPE = 0xead7;\nexport let REACT_OPAQUE_ID_TYPE = 0xeae0;\nexport let REACT_DEBUG_TRACING_MODE_TYPE = 0xeae1;\nexport let REACT_OFFSCREEN_TYPE = 0xeae2;\nexport let REACT_LEGACY_HIDDEN_TYPE = 0xeae3;\n\nif (typeof Symbol === 'function' && Symbol.for) {\n  const symbolFor = Symbol.for;\n  REACT_ELEMENT_TYPE = symbolFor('react.element');\n  REACT_PORTAL_TYPE = symbolFor('react.portal');\n  REACT_FRAGMENT_TYPE = symbolFor('react.fragment');\n  REACT_STRICT_MODE_TYPE = symbolFor('react.strict_mode');\n  REACT_PROFILER_TYPE = symbolFor('react.profiler');\n  REACT_PROVIDER_TYPE = symbolFor('react.provider');\n  REACT_CONTEXT_TYPE = symbolFor('react.context');\n  REACT_FORWARD_REF_TYPE = symbolFor('react.forward_ref');\n  REACT_SUSPENSE_TYPE = symbolFor('react.suspense');\n  REACT_SUSPENSE_LIST_TYPE = symbolFor('react.suspense_list');\n  REACT_MEMO_TYPE = symbolFor('react.memo');\n  REACT_LAZY_TYPE = symbolFor('react.lazy');\n  REACT_BLOCK_TYPE = symbolFor('react.block');\n  REACT_SERVER_BLOCK_TYPE = symbolFor('react.server.block');\n  REACT_FUNDAMENTAL_TYPE = symbolFor('react.fundamental');\n  REACT_SCOPE_TYPE = symbolFor('react.scope');\n  REACT_OPAQUE_ID_TYPE = symbolFor('react.opaque.id');\n  REACT_DEBUG_TRACING_MODE_TYPE = symbolFor('react.debug_trace_mode');\n  REACT_OFFSCREEN_TYPE = symbolFor('react.offscreen');\n  REACT_LEGACY_HIDDEN_TYPE = symbolFor('react.legacy_hidden');\n}\n\nconst MAYBE_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\nconst FAUX_ITERATOR_SYMBOL = '@@iterator';\n\nexport function getIteratorFn(maybeIterable: ?any): ?() => ?Iterator<*> {\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\n    return null;\n  }\n  const maybeIterator =\n    (MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL]) ||\n    maybeIterable[FAUX_ITERATOR_SYMBOL];\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n  return null;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {LazyComponent} from 'react/src/ReactLazy';\n\nimport {\n  REACT_CONTEXT_TYPE,\n  REACT_FORWARD_REF_TYPE,\n  REACT_FRAGMENT_TYPE,\n  REACT_PORTAL_TYPE,\n  REACT_MEMO_TYPE,\n  REACT_PROFILER_TYPE,\n  REACT_PROVIDER_TYPE,\n  REACT_STRICT_MODE_TYPE,\n  REACT_SUSPENSE_TYPE,\n  REACT_SUSPENSE_LIST_TYPE,\n  REACT_LAZY_TYPE,\n  REACT_BLOCK_TYPE,\n} from 'shared/ReactSymbols';\nimport type {ReactContext, ReactProviderType} from 'shared/ReactTypes';\n\nfunction getWrappedName(\n  outerType: mixed,\n  innerType: any,\n  wrapperName: string,\n): string {\n  const functionName = innerType.displayName || innerType.name || '';\n  return (\n    (outerType: any).displayName ||\n    (functionName !== '' ? `${wrapperName}(${functionName})` : wrapperName)\n  );\n}\n\nfunction getContextName(type: ReactContext<any>) {\n  return type.displayName || 'Context';\n}\n\nfunction getComponentName(type: mixed): string | null {\n  if (type == null) {\n    // Host root, text node or just invalid type.\n    return null;\n  }\n  if (__DEV__) {\n    if (typeof (type: any).tag === 'number') {\n      console.error(\n        'Received an unexpected object in getComponentName(). ' +\n          'This is likely a bug in React. Please file an issue.',\n      );\n    }\n  }\n  if (typeof type === 'function') {\n    return (type: any).displayName || type.name || null;\n  }\n  if (typeof type === 'string') {\n    return type;\n  }\n  switch (type) {\n    case REACT_FRAGMENT_TYPE:\n      return 'Fragment';\n    case REACT_PORTAL_TYPE:\n      return 'Portal';\n    case REACT_PROFILER_TYPE:\n      return 'Profiler';\n    case REACT_STRICT_MODE_TYPE:\n      return 'StrictMode';\n    case REACT_SUSPENSE_TYPE:\n      return 'Suspense';\n    case REACT_SUSPENSE_LIST_TYPE:\n      return 'SuspenseList';\n  }\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_CONTEXT_TYPE:\n        const context: ReactContext<any> = (type: any);\n        return getContextName(context) + '.Consumer';\n      case REACT_PROVIDER_TYPE:\n        const provider: ReactProviderType<any> = (type: any);\n        return getContextName(provider._context) + '.Provider';\n      case REACT_FORWARD_REF_TYPE:\n        return getWrappedName(type, type.render, 'ForwardRef');\n      case REACT_MEMO_TYPE:\n        return getComponentName(type.type);\n      case REACT_BLOCK_TYPE:\n        return getComponentName(type._render);\n      case REACT_LAZY_TYPE: {\n        const lazyComponent: LazyComponent<any, any> = (type: any);\n        const payload = lazyComponent._payload;\n        const init = lazyComponent._init;\n        try {\n          return getComponentName(init(payload));\n        } catch (x) {\n          return null;\n        }\n      }\n    }\n  }\n  return null;\n}\n\nexport default getComponentName;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nexport type Flags = number;\n\n// Don't change these two values. They're used by React Dev Tools.\nexport const NoFlags = /*                      */ 0b000000000000000000;\nexport const PerformedWork = /*                */ 0b000000000000000001;\n\n// You can change the rest (and add more).\nexport const Placement = /*                    */ 0b000000000000000010;\nexport const Update = /*                       */ 0b000000000000000100;\nexport const PlacementAndUpdate = /*           */ 0b000000000000000110;\nexport const Deletion = /*                     */ 0b000000000000001000;\nexport const ContentReset = /*                 */ 0b000000000000010000;\nexport const Callback = /*                     */ 0b000000000000100000;\nexport const DidCapture = /*                   */ 0b000000000001000000;\nexport const Ref = /*                          */ 0b000000000010000000;\nexport const Snapshot = /*                     */ 0b000000000100000000;\nexport const Passive = /*                      */ 0b000000001000000000;\n// TODO (effects) Remove this bit once the new reconciler is synced to the old.\nexport const PassiveUnmountPendingDev = /*     */ 0b000010000000000000;\nexport const Hydrating = /*                    */ 0b000000010000000000;\nexport const HydratingAndUpdate = /*           */ 0b000000010000000100;\n\n// Passive & Update & Callback & Ref & Snapshot\nexport const LifecycleEffectMask = /*          */ 0b000000001110100100;\n\n// Union of all host effects\nexport const HostEffectMask = /*               */ 0b000000011111111111;\n\n// These are not really side effects, but we still reuse this field.\nexport const Incomplete = /*                   */ 0b000000100000000000;\nexport const ShouldCapture = /*                */ 0b000001000000000000;\nexport const ForceUpdateForLegacySuspense = /* */ 0b000100000000000000;\n\n// Static tags describe aspects of a fiber that are not specific to a render,\n// e.g. a fiber uses a passive effect (even if there are no updates on this particular render).\n// This enables us to defer more work in the unmount case,\n// since we can defer traversing the tree during layout to look for Passive effects,\n// and instead rely on the static flag as a signal that there may be cleanup work.\nexport const PassiveStatic = /*                */ 0b001000000000000000;\n\n// Union of side effect groupings as pertains to subtreeFlags\nexport const BeforeMutationMask = /*           */ 0b000000001100001010;\nexport const MutationMask = /*                 */ 0b000000010010011110;\nexport const LayoutMask = /*                   */ 0b000000000010100100;\nexport const PassiveMask = /*                  */ 0b000000001000001000;\n\n// Union of tags that don't get reset on clones.\n// This allows certain concepts to persist without recalculting them,\n// e.g. whether a subtree contains passive effects or portals.\nexport const StaticMask = /*                   */ 0b001000000000000000;\n\n// These flags allow us to traverse to fibers that have effects on mount\n// without traversing the entire tree after every commit for\n// double invoking\nexport const MountLayoutDev = /*               */ 0b010000000000000000;\nexport const MountPassiveDev = /*              */ 0b100000000000000000;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n */\n\n// Filter certain DOM attributes (e.g. src, href) if their values are empty strings.\n// This prevents e.g. <img src=\"\"> from making an unnecessary HTTP request for certain browsers.\nexport const enableFilterEmptyStringAttributesDOM = false;\n\n// Adds verbose console logging for e.g. state updates, suspense, and work loop stuff.\n// Intended to enable React core members to more easily debug scheduling issues in DEV builds.\nexport const enableDebugTracing = false;\n\n// Adds user timing marks for e.g. state updates, suspense, and work loop stuff,\n// for an experimental scheduling profiler tool.\nexport const enableSchedulingProfiler = __PROFILE__ && __EXPERIMENTAL__;\n\n// Helps identify side effects in render-phase lifecycle hooks and setState\n// reducers by double invoking them in Strict Mode.\nexport const debugRenderPhaseSideEffectsForStrictMode = __DEV__;\n\n// To preserve the \"Pause on caught exceptions\" behavior of the debugger, we\n// replay the begin phase of a failed component inside invokeGuardedCallback.\nexport const replayFailedUnitOfWorkWithInvokeGuardedCallback = __DEV__;\n\n// Warn about deprecated, async-unsafe lifecycles; relates to RFC #6:\nexport const warnAboutDeprecatedLifecycles = true;\n\n// Gather advanced timing metrics for Profiler subtrees.\nexport const enableProfilerTimer = __PROFILE__;\n\n// Record durations for commit and passive effects phases.\nexport const enableProfilerCommitHooks = false;\n\n// Trace which interactions trigger each commit.\nexport const enableSchedulerTracing = __PROFILE__;\n\n// SSR experiments\nexport const enableSuspenseServerRenderer = __EXPERIMENTAL__;\nexport const enableSelectiveHydration = __EXPERIMENTAL__;\n\n// Flight experiments\nexport const enableBlocksAPI = __EXPERIMENTAL__;\nexport const enableLazyElements = __EXPERIMENTAL__;\n\n// Only used in www builds.\nexport const enableSchedulerDebugging = false;\n\n// Disable javascript: URL strings in href for XSS protection.\nexport const disableJavaScriptURLs = false;\n\n// Experimental Host Component support.\nexport const enableFundamentalAPI = false;\n\n// Experimental Scope support.\nexport const enableScopeAPI = false;\n\n// Experimental Create Event Handle API.\nexport const enableCreateEventHandleAPI = false;\n\n// New API for JSX transforms to target - https://github.com/reactjs/rfcs/pull/107\n\n// We will enforce mocking scheduler with scheduler/unstable_mock at some point. (v18?)\n// Till then, we warn about the missing mock, but still fallback to a legacy mode compatible version\nexport const warnAboutUnmockedScheduler = false;\n\n// Add a callback property to suspense to notify which promises are currently\n// in the update queue. This allows reporting and tracing of what is causing\n// the user to see a loading state.\n// Also allows hydration callbacks to fire when a dehydrated boundary gets\n// hydrated or deleted.\nexport const enableSuspenseCallback = false;\n\n// Part of the simplification of React.createElement so we can eventually move\n// from React.createElement to React.jsx\n// https://github.com/reactjs/rfcs/blob/createlement-rfc/text/0000-create-element-changes.md\nexport const warnAboutDefaultPropsOnFunctionComponents = false;\n\nexport const disableSchedulerTimeoutBasedOnReactExpirationTime = false;\n\nexport const enableTrustedTypesIntegration = false;\n\n// Enables a warning when trying to spread a 'key' to an element;\n// a deprecated pattern we want to get rid of in the future\nexport const warnAboutSpreadingKeyToJSX = false;\n\nexport const enableComponentStackLocations = true;\n\nexport const enableNewReconciler = false;\n\n// Errors that are thrown while unmounting (or after in the case of passive effects)\n// should bypass any error boundaries that are also unmounting (or have unmounted)\n// and be handled by the nearest still-mounted boundary.\n// If there are no still-mounted boundaries, the errors should be rethrown.\nexport const skipUnmountedBoundaries = false;\n\n// --------------------------\n// Future APIs to be deprecated\n// --------------------------\n\n// Prevent the value and checked attributes from syncing\n// with their related DOM properties\nexport const disableInputAttributeSyncing = false;\n\nexport const warnAboutStringRefs = false;\n\nexport const disableLegacyContext = false;\n\n// Disables children for <textarea> elements\nexport const disableTextareaChildren = false;\n\nexport const disableModulePatternComponents = false;\n\n// We should remove this flag once the above flag becomes enabled\nexport const warnUnstableRenderSubtreeIntoContainer = false;\n\n// Support legacy Primer support on internal FB www\nexport const enableLegacyFBSupport = false;\n\n// Updates that occur in the render phase are not officially supported. But when\n// they do occur, we defer them to a subsequent render by picking a lane that's\n// not currently rendering. We treat them the same as if they came from an\n// interleaved event. Remove this flag once we have migrated to the\n// new behavior.\nexport const deferRenderPhaseUpdateToNextBatch = true;\n\n// Replacement for runWithPriority in React internals.\nexport const decoupleUpdatePriorityFromScheduler = false;\n\nexport const enableDiscreteEventFlushingChange = false;\n\nexport const enableEagerRootListeners = true;\n\nexport const enableDoubleInvokingEffects = false;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactInternalTypes';\nimport type {Container, SuspenseInstance} from './ReactFiberHostConfig';\nimport type {SuspenseState} from './ReactFiberSuspenseComponent.old';\n\nimport invariant from 'shared/invariant';\n\nimport {get as getInstance} from 'shared/ReactInstanceMap';\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\nimport getComponentName from 'shared/getComponentName';\nimport {\n  ClassComponent,\n  HostComponent,\n  HostRoot,\n  HostPortal,\n  HostText,\n  FundamentalComponent,\n  SuspenseComponent,\n} from './ReactWorkTags';\nimport {NoFlags, Placement, Hydrating} from './ReactFiberFlags';\nimport {enableFundamentalAPI} from 'shared/ReactFeatureFlags';\n\nconst ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\n\nexport function getNearestMountedFiber(fiber: Fiber): null | Fiber {\n  let node = fiber;\n  let nearestMounted = fiber;\n  if (!fiber.alternate) {\n    // If there is no alternate, this might be a new tree that isn't inserted\n    // yet. If it is, then it will have a pending insertion effect on it.\n    let nextNode = node;\n    do {\n      node = nextNode;\n      if ((node.flags & (Placement | Hydrating)) !== NoFlags) {\n        // This is an insertion or in-progress hydration. The nearest possible\n        // mounted fiber is the parent but we need to continue to figure out\n        // if that one is still mounted.\n        nearestMounted = node.return;\n      }\n      nextNode = node.return;\n    } while (nextNode);\n  } else {\n    while (node.return) {\n      node = node.return;\n    }\n  }\n  if (node.tag === HostRoot) {\n    // TODO: Check if this was a nested HostRoot when used with\n    // renderContainerIntoSubtree.\n    return nearestMounted;\n  }\n  // If we didn't hit the root, that means that we're in an disconnected tree\n  // that has been unmounted.\n  return null;\n}\n\nexport function getSuspenseInstanceFromFiber(\n  fiber: Fiber,\n): null | SuspenseInstance {\n  if (fiber.tag === SuspenseComponent) {\n    let suspenseState: SuspenseState | null = fiber.memoizedState;\n    if (suspenseState === null) {\n      const current = fiber.alternate;\n      if (current !== null) {\n        suspenseState = current.memoizedState;\n      }\n    }\n    if (suspenseState !== null) {\n      return suspenseState.dehydrated;\n    }\n  }\n  return null;\n}\n\nexport function getContainerFromFiber(fiber: Fiber): null | Container {\n  return fiber.tag === HostRoot\n    ? (fiber.stateNode.containerInfo: Container)\n    : null;\n}\n\nexport function isFiberMounted(fiber: Fiber): boolean {\n  return getNearestMountedFiber(fiber) === fiber;\n}\n\nexport function isMounted(component: React$Component<any, any>): boolean {\n  if (__DEV__) {\n    const owner = (ReactCurrentOwner.current: any);\n    if (owner !== null && owner.tag === ClassComponent) {\n      const ownerFiber: Fiber = owner;\n      const instance = ownerFiber.stateNode;\n      if (!instance._warnedAboutRefsInRender) {\n        console.error(\n          '%s is accessing isMounted inside its render() function. ' +\n            'render() should be a pure function of props and state. It should ' +\n            'never access something that requires stale data from the previous ' +\n            'render, such as refs. Move this logic to componentDidMount and ' +\n            'componentDidUpdate instead.',\n          getComponentName(ownerFiber.type) || 'A component',\n        );\n      }\n      instance._warnedAboutRefsInRender = true;\n    }\n  }\n\n  const fiber: ?Fiber = getInstance(component);\n  if (!fiber) {\n    return false;\n  }\n  return getNearestMountedFiber(fiber) === fiber;\n}\n\nfunction assertIsMounted(fiber) {\n  invariant(\n    getNearestMountedFiber(fiber) === fiber,\n    'Unable to find node on an unmounted component.',\n  );\n}\n\nexport function findCurrentFiberUsingSlowPath(fiber: Fiber): Fiber | null {\n  const alternate = fiber.alternate;\n  if (!alternate) {\n    // If there is no alternate, then we only need to check if it is mounted.\n    const nearestMounted = getNearestMountedFiber(fiber);\n    invariant(\n      nearestMounted !== null,\n      'Unable to find node on an unmounted component.',\n    );\n    if (nearestMounted !== fiber) {\n      return null;\n    }\n    return fiber;\n  }\n  // If we have two possible branches, we'll walk backwards up to the root\n  // to see what path the root points to. On the way we may hit one of the\n  // special cases and we'll deal with them.\n  let a: Fiber = fiber;\n  let b: Fiber = alternate;\n  while (true) {\n    const parentA = a.return;\n    if (parentA === null) {\n      // We're at the root.\n      break;\n    }\n    const parentB = parentA.alternate;\n    if (parentB === null) {\n      // There is no alternate. This is an unusual case. Currently, it only\n      // happens when a Suspense component is hidden. An extra fragment fiber\n      // is inserted in between the Suspense fiber and its children. Skip\n      // over this extra fragment fiber and proceed to the next parent.\n      const nextParent = parentA.return;\n      if (nextParent !== null) {\n        a = b = nextParent;\n        continue;\n      }\n      // If there's no parent, we're at the root.\n      break;\n    }\n\n    // If both copies of the parent fiber point to the same child, we can\n    // assume that the child is current. This happens when we bailout on low\n    // priority: the bailed out fiber's child reuses the current child.\n    if (parentA.child === parentB.child) {\n      let child = parentA.child;\n      while (child) {\n        if (child === a) {\n          // We've determined that A is the current branch.\n          assertIsMounted(parentA);\n          return fiber;\n        }\n        if (child === b) {\n          // We've determined that B is the current branch.\n          assertIsMounted(parentA);\n          return alternate;\n        }\n        child = child.sibling;\n      }\n      // We should never have an alternate for any mounting node. So the only\n      // way this could possibly happen is if this was unmounted, if at all.\n      invariant(false, 'Unable to find node on an unmounted component.');\n    }\n\n    if (a.return !== b.return) {\n      // The return pointer of A and the return pointer of B point to different\n      // fibers. We assume that return pointers never criss-cross, so A must\n      // belong to the child set of A.return, and B must belong to the child\n      // set of B.return.\n      a = parentA;\n      b = parentB;\n    } else {\n      // The return pointers point to the same fiber. We'll have to use the\n      // default, slow path: scan the child sets of each parent alternate to see\n      // which child belongs to which set.\n      //\n      // Search parent A's child set\n      let didFindChild = false;\n      let child = parentA.child;\n      while (child) {\n        if (child === a) {\n          didFindChild = true;\n          a = parentA;\n          b = parentB;\n          break;\n        }\n        if (child === b) {\n          didFindChild = true;\n          b = parentA;\n          a = parentB;\n          break;\n        }\n        child = child.sibling;\n      }\n      if (!didFindChild) {\n        // Search parent B's child set\n        child = parentB.child;\n        while (child) {\n          if (child === a) {\n            didFindChild = true;\n            a = parentB;\n            b = parentA;\n            break;\n          }\n          if (child === b) {\n            didFindChild = true;\n            b = parentB;\n            a = parentA;\n            break;\n          }\n          child = child.sibling;\n        }\n        invariant(\n          didFindChild,\n          'Child was not found in either parent set. This indicates a bug ' +\n            'in React related to the return pointer. Please file an issue.',\n        );\n      }\n    }\n\n    invariant(\n      a.alternate === b,\n      \"Return fibers should always be each others' alternates. \" +\n        'This error is likely caused by a bug in React. Please file an issue.',\n    );\n  }\n  // If the root is not a host container, we're in a disconnected tree. I.e.\n  // unmounted.\n  invariant(\n    a.tag === HostRoot,\n    'Unable to find node on an unmounted component.',\n  );\n  if (a.stateNode.current === a) {\n    // We've determined that A is the current branch.\n    return fiber;\n  }\n  // Otherwise B has to be current branch.\n  return alternate;\n}\n\nexport function findCurrentHostFiber(parent: Fiber): Fiber | null {\n  const currentParent = findCurrentFiberUsingSlowPath(parent);\n  if (!currentParent) {\n    return null;\n  }\n\n  // Next we'll drill down this component to find the first HostComponent/Text.\n  let node: Fiber = currentParent;\n  while (true) {\n    if (node.tag === HostComponent || node.tag === HostText) {\n      return node;\n    } else if (node.child) {\n      node.child.return = node;\n      node = node.child;\n      continue;\n    }\n    if (node === currentParent) {\n      return null;\n    }\n    while (!node.sibling) {\n      if (!node.return || node.return === currentParent) {\n        return null;\n      }\n      node = node.return;\n    }\n    node.sibling.return = node.return;\n    node = node.sibling;\n  }\n  // Flow needs the return null here, but ESLint complains about it.\n  // eslint-disable-next-line no-unreachable\n  return null;\n}\n\nexport function findCurrentHostFiberWithNoPortals(parent: Fiber): Fiber | null {\n  const currentParent = findCurrentFiberUsingSlowPath(parent);\n  if (!currentParent) {\n    return null;\n  }\n\n  // Next we'll drill down this component to find the first HostComponent/Text.\n  let node: Fiber = currentParent;\n  while (true) {\n    if (\n      node.tag === HostComponent ||\n      node.tag === HostText ||\n      (enableFundamentalAPI && node.tag === FundamentalComponent)\n    ) {\n      return node;\n    } else if (node.child && node.tag !== HostPortal) {\n      node.child.return = node;\n      node = node.child;\n      continue;\n    }\n    if (node === currentParent) {\n      return null;\n    }\n    while (!node.sibling) {\n      if (!node.return || node.return === currentParent) {\n        return null;\n      }\n      node = node.return;\n    }\n    node.sibling.return = node.return;\n    node = node.sibling;\n  }\n  // Flow needs the return null here, but ESLint complains about it.\n  // eslint-disable-next-line no-unreachable\n  return null;\n}\n\nexport function isFiberSuspenseAndTimedOut(fiber: Fiber): boolean {\n  const memoizedState = fiber.memoizedState;\n  return (\n    fiber.tag === SuspenseComponent &&\n    memoizedState !== null &&\n    memoizedState.dehydrated === null\n  );\n}\n\nexport function doesFiberContain(\n  parentFiber: Fiber,\n  childFiber: Fiber,\n): boolean {\n  let node = childFiber;\n  const parentFiberAlternate = parentFiber.alternate;\n  while (node !== null) {\n    if (node === parentFiber || node === parentFiberAlternate) {\n      return true;\n    }\n    node = node.return;\n  }\n  return false;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\n// This is a host config that's used for the `react-reconciler` package on npm.\n// It is only used by third-party renderers.\n//\n// Its API lets you pass the host config as an argument.\n// However, inside the `react-reconciler` we treat host config as a module.\n// This file is a shim between two worlds.\n//\n// It works because the `react-reconciler` bundle is wrapped in something like:\n//\n// module.exports = function ($$$config) {\n//   /* reconciler code */\n// }\n//\n// So `$$$config` looks like a global variable, but it's\n// really an argument to a top-level wrapping function.\n\ndeclare var $$$hostConfig: any;\nexport opaque type Type = mixed; // eslint-disable-line no-undef\nexport opaque type Props = mixed; // eslint-disable-line no-undef\nexport opaque type Container = mixed; // eslint-disable-line no-undef\nexport opaque type Instance = mixed; // eslint-disable-line no-undef\nexport opaque type TextInstance = mixed; // eslint-disable-line no-undef\nexport opaque type SuspenseInstance = mixed; // eslint-disable-line no-undef\nexport opaque type HydratableInstance = mixed; // eslint-disable-line no-undef\nexport opaque type PublicInstance = mixed; // eslint-disable-line no-undef\nexport opaque type HostContext = mixed; // eslint-disable-line no-undef\nexport opaque type UpdatePayload = mixed; // eslint-disable-line no-undef\nexport opaque type ChildSet = mixed; // eslint-disable-line no-undef\nexport opaque type TimeoutHandle = mixed; // eslint-disable-line no-undef\nexport opaque type NoTimeout = mixed; // eslint-disable-line no-undef\nexport opaque type RendererInspectionConfig = mixed; // eslint-disable-line no-undef\nexport opaque type OpaqueIDType = mixed;\nexport type EventResponder = any;\n\nexport const getPublicInstance = $$$hostConfig.getPublicInstance;\nexport const getRootHostContext = $$$hostConfig.getRootHostContext;\nexport const getChildHostContext = $$$hostConfig.getChildHostContext;\nexport const prepareForCommit = $$$hostConfig.prepareForCommit;\nexport const resetAfterCommit = $$$hostConfig.resetAfterCommit;\nexport const createInstance = $$$hostConfig.createInstance;\nexport const appendInitialChild = $$$hostConfig.appendInitialChild;\nexport const finalizeInitialChildren = $$$hostConfig.finalizeInitialChildren;\nexport const prepareUpdate = $$$hostConfig.prepareUpdate;\nexport const shouldSetTextContent = $$$hostConfig.shouldSetTextContent;\nexport const createTextInstance = $$$hostConfig.createTextInstance;\nexport const scheduleTimeout = $$$hostConfig.scheduleTimeout;\nexport const cancelTimeout = $$$hostConfig.cancelTimeout;\nexport const noTimeout = $$$hostConfig.noTimeout;\nexport const now = $$$hostConfig.now;\nexport const isPrimaryRenderer = $$$hostConfig.isPrimaryRenderer;\nexport const warnsIfNotActing = $$$hostConfig.warnsIfNotActing;\nexport const supportsMutation = $$$hostConfig.supportsMutation;\nexport const supportsPersistence = $$$hostConfig.supportsPersistence;\nexport const supportsHydration = $$$hostConfig.supportsHydration;\nexport const getFundamentalComponentInstance =\n  $$$hostConfig.getFundamentalComponentInstance;\nexport const mountFundamentalComponent =\n  $$$hostConfig.mountFundamentalComponent;\nexport const shouldUpdateFundamentalComponent =\n  $$$hostConfig.shouldUpdateFundamentalComponent;\nexport const getInstanceFromNode = $$$hostConfig.getInstanceFromNode;\nexport const isOpaqueHydratingObject = $$$hostConfig.isOpaqueHydratingObject;\nexport const makeOpaqueHydratingObject =\n  $$$hostConfig.makeOpaqueHydratingObject;\nexport const makeClientId = $$$hostConfig.makeClientId;\nexport const makeClientIdInDEV = $$$hostConfig.makeClientIdInDEV;\nexport const beforeActiveInstanceBlur = $$$hostConfig.beforeActiveInstanceBlur;\nexport const afterActiveInstanceBlur = $$$hostConfig.afterActiveInstanceBlur;\nexport const preparePortalMount = $$$hostConfig.preparePortalMount;\nexport const prepareScopeUpdate = $$$hostConfig.preparePortalMount;\nexport const getInstanceFromScope = $$$hostConfig.getInstanceFromScope;\n\n// -------------------\n//      Test selectors\n//     (optional)\n// -------------------\nexport const supportsTestSelectors = $$$hostConfig.supportsTestSelectors;\nexport const findFiberRoot = $$$hostConfig.findFiberRoot;\nexport const getBoundingRect = $$$hostConfig.getBoundingRect;\nexport const getTextContent = $$$hostConfig.getTextContent;\nexport const isHiddenSubtree = $$$hostConfig.isHiddenSubtree;\nexport const matchAccessibilityRole = $$$hostConfig.matchAccessibilityRole;\nexport const setFocusIfFocusable = $$$hostConfig.setFocusIfFocusable;\nexport const setupIntersectionObserver =\n  $$$hostConfig.setupIntersectionObserver;\n\n// -------------------\n//      Mutation\n//     (optional)\n// -------------------\nexport const appendChild = $$$hostConfig.appendChild;\nexport const appendChildToContainer = $$$hostConfig.appendChildToContainer;\nexport const commitTextUpdate = $$$hostConfig.commitTextUpdate;\nexport const commitMount = $$$hostConfig.commitMount;\nexport const commitUpdate = $$$hostConfig.commitUpdate;\nexport const insertBefore = $$$hostConfig.insertBefore;\nexport const insertInContainerBefore = $$$hostConfig.insertInContainerBefore;\nexport const removeChild = $$$hostConfig.removeChild;\nexport const removeChildFromContainer = $$$hostConfig.removeChildFromContainer;\nexport const resetTextContent = $$$hostConfig.resetTextContent;\nexport const hideInstance = $$$hostConfig.hideInstance;\nexport const hideTextInstance = $$$hostConfig.hideTextInstance;\nexport const unhideInstance = $$$hostConfig.unhideInstance;\nexport const unhideTextInstance = $$$hostConfig.unhideTextInstance;\nexport const updateFundamentalComponent =\n  $$$hostConfig.updateFundamentalComponent;\nexport const unmountFundamentalComponent =\n  $$$hostConfig.unmountFundamentalComponent;\nexport const clearContainer = $$$hostConfig.clearContainer;\n\n// -------------------\n//     Persistence\n//     (optional)\n// -------------------\nexport const cloneInstance = $$$hostConfig.cloneInstance;\nexport const createContainerChildSet = $$$hostConfig.createContainerChildSet;\nexport const appendChildToContainerChildSet =\n  $$$hostConfig.appendChildToContainerChildSet;\nexport const finalizeContainerChildren =\n  $$$hostConfig.finalizeContainerChildren;\nexport const replaceContainerChildren = $$$hostConfig.replaceContainerChildren;\nexport const cloneHiddenInstance = $$$hostConfig.cloneHiddenInstance;\nexport const cloneHiddenTextInstance = $$$hostConfig.cloneHiddenTextInstance;\nexport const cloneFundamentalInstance = $$$hostConfig.cloneInstance;\n\n// -------------------\n//     Hydration\n//     (optional)\n// -------------------\nexport const canHydrateInstance = $$$hostConfig.canHydrateInstance;\nexport const canHydrateTextInstance = $$$hostConfig.canHydrateTextInstance;\nexport const canHydrateSuspenseInstance =\n  $$$hostConfig.canHydrateSuspenseInstance;\nexport const isSuspenseInstancePending =\n  $$$hostConfig.isSuspenseInstancePending;\nexport const isSuspenseInstanceFallback =\n  $$$hostConfig.isSuspenseInstanceFallback;\nexport const registerSuspenseInstanceRetry =\n  $$$hostConfig.registerSuspenseInstanceRetry;\nexport const getNextHydratableSibling = $$$hostConfig.getNextHydratableSibling;\nexport const getFirstHydratableChild = $$$hostConfig.getFirstHydratableChild;\nexport const hydrateInstance = $$$hostConfig.hydrateInstance;\nexport const hydrateTextInstance = $$$hostConfig.hydrateTextInstance;\nexport const hydrateSuspenseInstance = $$$hostConfig.hydrateSuspenseInstance;\nexport const getNextHydratableInstanceAfterSuspenseInstance =\n  $$$hostConfig.getNextHydratableInstanceAfterSuspenseInstance;\nexport const commitHydratedContainer = $$$hostConfig.commitHydratedContainer;\nexport const commitHydratedSuspenseInstance =\n  $$$hostConfig.commitHydratedSuspenseInstance;\nexport const clearSuspenseBoundary = $$$hostConfig.clearSuspenseBoundary;\nexport const clearSuspenseBoundaryFromContainer =\n  $$$hostConfig.clearSuspenseBoundaryFromContainer;\nexport const didNotMatchHydratedContainerTextInstance =\n  $$$hostConfig.didNotMatchHydratedContainerTextInstance;\nexport const didNotMatchHydratedTextInstance =\n  $$$hostConfig.didNotMatchHydratedTextInstance;\nexport const didNotHydrateContainerInstance =\n  $$$hostConfig.didNotHydrateContainerInstance;\nexport const didNotHydrateInstance = $$$hostConfig.didNotHydrateInstance;\nexport const didNotFindHydratableContainerInstance =\n  $$$hostConfig.didNotFindHydratableContainerInstance;\nexport const didNotFindHydratableContainerTextInstance =\n  $$$hostConfig.didNotFindHydratableContainerTextInstance;\nexport const didNotFindHydratableContainerSuspenseInstance =\n  $$$hostConfig.didNotFindHydratableContainerSuspenseInstance;\nexport const didNotFindHydratableInstance =\n  $$$hostConfig.didNotFindHydratableInstance;\nexport const didNotFindHydratableTextInstance =\n  $$$hostConfig.didNotFindHydratableTextInstance;\nexport const didNotFindHydratableSuspenseInstance =\n  $$$hostConfig.didNotFindHydratableSuspenseInstance;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\n// Helpers to patch console.logs to avoid logging during side-effect free\n// replaying on render function. This currently only patches the object\n// lazily which won't cover if the log function was extracted eagerly.\n// We could also eagerly patch the method.\n\nlet disabledDepth = 0;\nlet prevLog;\nlet prevInfo;\nlet prevWarn;\nlet prevError;\nlet prevGroup;\nlet prevGroupCollapsed;\nlet prevGroupEnd;\n\nfunction disabledLog() {}\ndisabledLog.__reactDisabledLog = true;\n\nexport function disableLogs(): void {\n  if (__DEV__) {\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      prevLog = console.log;\n      prevInfo = console.info;\n      prevWarn = console.warn;\n      prevError = console.error;\n      prevGroup = console.group;\n      prevGroupCollapsed = console.groupCollapsed;\n      prevGroupEnd = console.groupEnd;\n      // https://github.com/facebook/react/issues/19099\n      const props = {\n        configurable: true,\n        enumerable: true,\n        value: disabledLog,\n        writable: true,\n      };\n      // $FlowFixMe Flow thinks console is immutable.\n      Object.defineProperties(console, {\n        info: props,\n        log: props,\n        warn: props,\n        error: props,\n        group: props,\n        groupCollapsed: props,\n        groupEnd: props,\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n    disabledDepth++;\n  }\n}\n\nexport function reenableLogs(): void {\n  if (__DEV__) {\n    disabledDepth--;\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      const props = {\n        configurable: true,\n        enumerable: true,\n        writable: true,\n      };\n      // $FlowFixMe Flow thinks console is immutable.\n      Object.defineProperties(console, {\n        log: {...props, value: prevLog},\n        info: {...props, value: prevInfo},\n        warn: {...props, value: prevWarn},\n        error: {...props, value: prevError},\n        group: {...props, value: prevGroup},\n        groupCollapsed: {...props, value: prevGroupCollapsed},\n        groupEnd: {...props, value: prevGroupEnd},\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n    if (disabledDepth < 0) {\n      console.error(\n        'disabledDepth fell below zero. ' +\n          'This is a bug in React. Please file an issue.',\n      );\n    }\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Source} from 'shared/ReactElementType';\nimport type {LazyComponent} from 'react/src/ReactLazy';\n\nimport {enableComponentStackLocations} from 'shared/ReactFeatureFlags';\n\nimport {\n  REACT_SUSPENSE_TYPE,\n  REACT_SUSPENSE_LIST_TYPE,\n  REACT_FORWARD_REF_TYPE,\n  REACT_MEMO_TYPE,\n  REACT_BLOCK_TYPE,\n  REACT_LAZY_TYPE,\n} from 'shared/ReactSymbols';\n\nimport {disableLogs, reenableLogs} from 'shared/ConsolePatchingDev';\n\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\n\nconst {ReactCurrentDispatcher} = ReactSharedInternals;\n\nlet prefix;\nexport function describeBuiltInComponentFrame(\n  name: string,\n  source: void | null | Source,\n  ownerFn: void | null | Function,\n): string {\n  if (enableComponentStackLocations) {\n    if (prefix === undefined) {\n      // Extract the VM specific prefix used by each line.\n      try {\n        throw Error();\n      } catch (x) {\n        const match = x.stack.trim().match(/\\n( *(at )?)/);\n        prefix = (match && match[1]) || '';\n      }\n    }\n    // We use the prefix to ensure our stacks line up with native stack frames.\n    return '\\n' + prefix + name;\n  } else {\n    let ownerName = null;\n    if (__DEV__ && ownerFn) {\n      ownerName = ownerFn.displayName || ownerFn.name || null;\n    }\n    return describeComponentFrame(name, source, ownerName);\n  }\n}\n\nlet reentry = false;\nlet componentFrameCache;\nif (__DEV__) {\n  const PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\n  componentFrameCache = new PossiblyWeakMap();\n}\n\nexport function describeNativeComponentFrame(\n  fn: Function,\n  construct: boolean,\n): string {\n  // If something asked for a stack inside a fake render, it should get ignored.\n  if (!fn || reentry) {\n    return '';\n  }\n\n  if (__DEV__) {\n    const frame = componentFrameCache.get(fn);\n    if (frame !== undefined) {\n      return frame;\n    }\n  }\n\n  let control;\n\n  reentry = true;\n  const previousPrepareStackTrace = Error.prepareStackTrace;\n  // $FlowFixMe It does accept undefined.\n  Error.prepareStackTrace = undefined;\n  let previousDispatcher;\n  if (__DEV__) {\n    previousDispatcher = ReactCurrentDispatcher.current;\n    // Set the dispatcher in DEV because this might be call in the render function\n    // for warnings.\n    ReactCurrentDispatcher.current = null;\n    disableLogs();\n  }\n  try {\n    // This should throw.\n    if (construct) {\n      // Something should be setting the props in the constructor.\n      const Fake = function() {\n        throw Error();\n      };\n      // $FlowFixMe\n      Object.defineProperty(Fake.prototype, 'props', {\n        set: function() {\n          // We use a throwing setter instead of frozen or non-writable props\n          // because that won't throw in a non-strict mode function.\n          throw Error();\n        },\n      });\n      if (typeof Reflect === 'object' && Reflect.construct) {\n        // We construct a different control for this case to include any extra\n        // frames added by the construct call.\n        try {\n          Reflect.construct(Fake, []);\n        } catch (x) {\n          control = x;\n        }\n        Reflect.construct(fn, [], Fake);\n      } else {\n        try {\n          Fake.call();\n        } catch (x) {\n          control = x;\n        }\n        fn.call(Fake.prototype);\n      }\n    } else {\n      try {\n        throw Error();\n      } catch (x) {\n        control = x;\n      }\n      fn();\n    }\n  } catch (sample) {\n    // This is inlined manually because closure doesn't do it for us.\n    if (sample && control && typeof sample.stack === 'string') {\n      // This extracts the first frame from the sample that isn't also in the control.\n      // Skipping one frame that we assume is the frame that calls the two.\n      const sampleLines = sample.stack.split('\\n');\n      const controlLines = control.stack.split('\\n');\n      let s = sampleLines.length - 1;\n      let c = controlLines.length - 1;\n      while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {\n        // We expect at least one stack frame to be shared.\n        // Typically this will be the root most one. However, stack frames may be\n        // cut off due to maximum stack limits. In this case, one maybe cut off\n        // earlier than the other. We assume that the sample is longer or the same\n        // and there for cut off earlier. So we should find the root most frame in\n        // the sample somewhere in the control.\n        c--;\n      }\n      for (; s >= 1 && c >= 0; s--, c--) {\n        // Next we find the first one that isn't the same which should be the\n        // frame that called our sample function and the control.\n        if (sampleLines[s] !== controlLines[c]) {\n          // In V8, the first line is describing the message but other VMs don't.\n          // If we're about to return the first line, and the control is also on the same\n          // line, that's a pretty good indicator that our sample threw at same line as\n          // the control. I.e. before we entered the sample frame. So we ignore this result.\n          // This can happen if you passed a class to function component, or non-function.\n          if (s !== 1 || c !== 1) {\n            do {\n              s--;\n              c--;\n              // We may still have similar intermediate frames from the construct call.\n              // The next one that isn't the same should be our match though.\n              if (c < 0 || sampleLines[s] !== controlLines[c]) {\n                // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\n                const frame = '\\n' + sampleLines[s].replace(' at new ', ' at ');\n                if (__DEV__) {\n                  if (typeof fn === 'function') {\n                    componentFrameCache.set(fn, frame);\n                  }\n                }\n                // Return the line we found.\n                return frame;\n              }\n            } while (s >= 1 && c >= 0);\n          }\n          break;\n        }\n      }\n    }\n  } finally {\n    reentry = false;\n    if (__DEV__) {\n      ReactCurrentDispatcher.current = previousDispatcher;\n      reenableLogs();\n    }\n    Error.prepareStackTrace = previousPrepareStackTrace;\n  }\n  // Fallback to just using the name if we couldn't make it throw.\n  const name = fn ? fn.displayName || fn.name : '';\n  const syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';\n  if (__DEV__) {\n    if (typeof fn === 'function') {\n      componentFrameCache.set(fn, syntheticFrame);\n    }\n  }\n  return syntheticFrame;\n}\n\nconst BEFORE_SLASH_RE = /^(.*)[\\\\\\/]/;\n\nfunction describeComponentFrame(\n  name: null | string,\n  source: void | null | Source,\n  ownerName: null | string,\n) {\n  let sourceInfo = '';\n  if (__DEV__ && source) {\n    const path = source.fileName;\n    let fileName = path.replace(BEFORE_SLASH_RE, '');\n    // In DEV, include code for a common special case:\n    // prefer \"folder/index.js\" instead of just \"index.js\".\n    if (/^index\\./.test(fileName)) {\n      const match = path.match(BEFORE_SLASH_RE);\n      if (match) {\n        const pathBeforeSlash = match[1];\n        if (pathBeforeSlash) {\n          const folderName = pathBeforeSlash.replace(BEFORE_SLASH_RE, '');\n          fileName = folderName + '/' + fileName;\n        }\n      }\n    }\n    sourceInfo = ' (at ' + fileName + ':' + source.lineNumber + ')';\n  } else if (ownerName) {\n    sourceInfo = ' (created by ' + ownerName + ')';\n  }\n  return '\\n    in ' + (name || 'Unknown') + sourceInfo;\n}\n\nexport function describeClassComponentFrame(\n  ctor: Function,\n  source: void | null | Source,\n  ownerFn: void | null | Function,\n): string {\n  if (enableComponentStackLocations) {\n    return describeNativeComponentFrame(ctor, true);\n  } else {\n    return describeFunctionComponentFrame(ctor, source, ownerFn);\n  }\n}\n\nexport function describeFunctionComponentFrame(\n  fn: Function,\n  source: void | null | Source,\n  ownerFn: void | null | Function,\n): string {\n  if (enableComponentStackLocations) {\n    return describeNativeComponentFrame(fn, false);\n  } else {\n    if (!fn) {\n      return '';\n    }\n    const name = fn.displayName || fn.name || null;\n    let ownerName = null;\n    if (__DEV__ && ownerFn) {\n      ownerName = ownerFn.displayName || ownerFn.name || null;\n    }\n    return describeComponentFrame(name, source, ownerName);\n  }\n}\n\nfunction shouldConstruct(Component: Function) {\n  const prototype = Component.prototype;\n  return !!(prototype && prototype.isReactComponent);\n}\n\nexport function describeUnknownElementTypeFrameInDEV(\n  type: any,\n  source: void | null | Source,\n  ownerFn: void | null | Function,\n): string {\n  if (!__DEV__) {\n    return '';\n  }\n  if (type == null) {\n    return '';\n  }\n  if (typeof type === 'function') {\n    if (enableComponentStackLocations) {\n      return describeNativeComponentFrame(type, shouldConstruct(type));\n    } else {\n      return describeFunctionComponentFrame(type, source, ownerFn);\n    }\n  }\n  if (typeof type === 'string') {\n    return describeBuiltInComponentFrame(type, source, ownerFn);\n  }\n  switch (type) {\n    case REACT_SUSPENSE_TYPE:\n      return describeBuiltInComponentFrame('Suspense', source, ownerFn);\n    case REACT_SUSPENSE_LIST_TYPE:\n      return describeBuiltInComponentFrame('SuspenseList', source, ownerFn);\n  }\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_FORWARD_REF_TYPE:\n        return describeFunctionComponentFrame(type.render, source, ownerFn);\n      case REACT_MEMO_TYPE:\n        // Memo may contain any component type so we recursively resolve it.\n        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);\n      case REACT_BLOCK_TYPE:\n        return describeFunctionComponentFrame(type._render, source, ownerFn);\n      case REACT_LAZY_TYPE: {\n        const lazyComponent: LazyComponent<any, any> = (type: any);\n        const payload = lazyComponent._payload;\n        const init = lazyComponent._init;\n        try {\n          // Lazy may contain any component type so we recursively resolve it.\n          return describeUnknownElementTypeFrameInDEV(\n            init(payload),\n            source,\n            ownerFn,\n          );\n        } catch (x) {}\n      }\n    }\n  }\n  return '';\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nconst loggedTypeFailures = {};\n\nimport {describeUnknownElementTypeFrameInDEV} from 'shared/ReactComponentStackFrame';\n\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\n\nconst ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n\nfunction setCurrentlyValidatingElement(element) {\n  if (__DEV__) {\n    if (element) {\n      const owner = element._owner;\n      const stack = describeUnknownElementTypeFrameInDEV(\n        element.type,\n        element._source,\n        owner ? owner.type : null,\n      );\n      ReactDebugCurrentFrame.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame.setExtraStackFrame(null);\n    }\n  }\n}\n\nexport default function checkPropTypes(\n  typeSpecs: Object,\n  values: Object,\n  location: string,\n  componentName: ?string,\n  element?: any,\n): void {\n  if (__DEV__) {\n    // $FlowFixMe This is okay but Flow doesn't know it.\n    const has = Function.call.bind(Object.prototype.hasOwnProperty);\n    for (const typeSpecName in typeSpecs) {\n      if (has(typeSpecs, typeSpecName)) {\n        let error;\n        // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\n            const err = Error(\n              (componentName || 'React class') +\n                ': ' +\n                location +\n                ' type `' +\n                typeSpecName +\n                '` is invalid; ' +\n                'it must be a function, usually from the `prop-types` package, but received `' +\n                typeof typeSpecs[typeSpecName] +\n                '`.' +\n                'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.',\n            );\n            err.name = 'Invariant Violation';\n            throw err;\n          }\n          error = typeSpecs[typeSpecName](\n            values,\n            typeSpecName,\n            componentName,\n            location,\n            null,\n            'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED',\n          );\n        } catch (ex) {\n          error = ex;\n        }\n        if (error && !(error instanceof Error)) {\n          setCurrentlyValidatingElement(element);\n          console.error(\n            '%s: type specification of %s' +\n              ' `%s` is invalid; the type checker ' +\n              'function must return `null` or an `Error` but returned a %s. ' +\n              'You may have forgotten to pass an argument to the type checker ' +\n              'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' +\n              'shape all require an argument).',\n            componentName || 'React class',\n            location,\n            typeSpecName,\n            typeof error,\n          );\n          setCurrentlyValidatingElement(null);\n        }\n        if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error.message] = true;\n          setCurrentlyValidatingElement(element);\n          console.error('Failed %s type: %s', location, error.message);\n          setCurrentlyValidatingElement(null);\n        }\n      }\n    }\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactInternalTypes';\n\nexport type StackCursor<T> = {|current: T|};\n\nconst valueStack: Array<any> = [];\n\nlet fiberStack: Array<Fiber | null>;\n\nif (__DEV__) {\n  fiberStack = [];\n}\n\nlet index = -1;\n\nfunction createCursor<T>(defaultValue: T): StackCursor<T> {\n  return {\n    current: defaultValue,\n  };\n}\n\nfunction isEmpty(): boolean {\n  return index === -1;\n}\n\nfunction pop<T>(cursor: StackCursor<T>, fiber: Fiber): void {\n  if (index < 0) {\n    if (__DEV__) {\n      console.error('Unexpected pop.');\n    }\n    return;\n  }\n\n  if (__DEV__) {\n    if (fiber !== fiberStack[index]) {\n      console.error('Unexpected Fiber popped.');\n    }\n  }\n\n  cursor.current = valueStack[index];\n\n  valueStack[index] = null;\n\n  if (__DEV__) {\n    fiberStack[index] = null;\n  }\n\n  index--;\n}\n\nfunction push<T>(cursor: StackCursor<T>, value: T, fiber: Fiber): void {\n  index++;\n\n  valueStack[index] = cursor.current;\n\n  if (__DEV__) {\n    fiberStack[index] = fiber;\n  }\n\n  cursor.current = value;\n}\n\nfunction checkThatStackIsEmpty() {\n  if (__DEV__) {\n    if (index !== -1) {\n      console.error(\n        'Expected an empty stack. Something was not reset properly.',\n      );\n    }\n  }\n}\n\nfunction resetStackAfterFatalErrorInDev() {\n  if (__DEV__) {\n    index = -1;\n    valueStack.length = 0;\n    fiberStack.length = 0;\n  }\n}\n\nexport {\n  createCursor,\n  isEmpty,\n  pop,\n  push,\n  // DEV only:\n  checkThatStackIsEmpty,\n  resetStackAfterFatalErrorInDev,\n};\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactInternalTypes';\nimport type {StackCursor} from './ReactFiberStack.old';\n\nimport {isFiberMounted} from './ReactFiberTreeReflection';\nimport {disableLegacyContext} from 'shared/ReactFeatureFlags';\nimport {ClassComponent, HostRoot} from './ReactWorkTags';\nimport getComponentName from 'shared/getComponentName';\nimport invariant from 'shared/invariant';\nimport checkPropTypes from 'shared/checkPropTypes';\n\nimport {createCursor, push, pop} from './ReactFiberStack.old';\n\nlet warnedAboutMissingGetChildContext;\n\nif (__DEV__) {\n  warnedAboutMissingGetChildContext = {};\n}\n\nexport const emptyContextObject = {};\nif (__DEV__) {\n  Object.freeze(emptyContextObject);\n}\n\n// A cursor to the current merged context object on the stack.\nconst contextStackCursor: StackCursor<Object> = createCursor(\n  emptyContextObject,\n);\n// A cursor to a boolean indicating whether the context has changed.\nconst didPerformWorkStackCursor: StackCursor<boolean> = createCursor(false);\n// Keep track of the previous context object that was on the stack.\n// We use this to get access to the parent context after we have already\n// pushed the next context provider, and now need to merge their contexts.\nlet previousContext: Object = emptyContextObject;\n\nfunction getUnmaskedContext(\n  workInProgress: Fiber,\n  Component: Function,\n  didPushOwnContextIfProvider: boolean,\n): Object {\n  if (disableLegacyContext) {\n    return emptyContextObject;\n  } else {\n    if (didPushOwnContextIfProvider && isContextProvider(Component)) {\n      // If the fiber is a context provider itself, when we read its context\n      // we may have already pushed its own child context on the stack. A context\n      // provider should not \"see\" its own child context. Therefore we read the\n      // previous (parent) context instead for a context provider.\n      return previousContext;\n    }\n    return contextStackCursor.current;\n  }\n}\n\nfunction cacheContext(\n  workInProgress: Fiber,\n  unmaskedContext: Object,\n  maskedContext: Object,\n): void {\n  if (disableLegacyContext) {\n    return;\n  } else {\n    const instance = workInProgress.stateNode;\n    instance.__reactInternalMemoizedUnmaskedChildContext = unmaskedContext;\n    instance.__reactInternalMemoizedMaskedChildContext = maskedContext;\n  }\n}\n\nfunction getMaskedContext(\n  workInProgress: Fiber,\n  unmaskedContext: Object,\n): Object {\n  if (disableLegacyContext) {\n    return emptyContextObject;\n  } else {\n    const type = workInProgress.type;\n    const contextTypes = type.contextTypes;\n    if (!contextTypes) {\n      return emptyContextObject;\n    }\n\n    // Avoid recreating masked context unless unmasked context has changed.\n    // Failing to do this will result in unnecessary calls to componentWillReceiveProps.\n    // This may trigger infinite loops if componentWillReceiveProps calls setState.\n    const instance = workInProgress.stateNode;\n    if (\n      instance &&\n      instance.__reactInternalMemoizedUnmaskedChildContext === unmaskedContext\n    ) {\n      return instance.__reactInternalMemoizedMaskedChildContext;\n    }\n\n    const context = {};\n    for (const key in contextTypes) {\n      context[key] = unmaskedContext[key];\n    }\n\n    if (__DEV__) {\n      const name = getComponentName(type) || 'Unknown';\n      checkPropTypes(contextTypes, context, 'context', name);\n    }\n\n    // Cache unmasked context so we can avoid recreating masked context unless necessary.\n    // Context is created before the class component is instantiated so check for instance.\n    if (instance) {\n      cacheContext(workInProgress, unmaskedContext, context);\n    }\n\n    return context;\n  }\n}\n\nfunction hasContextChanged(): boolean {\n  if (disableLegacyContext) {\n    return false;\n  } else {\n    return didPerformWorkStackCursor.current;\n  }\n}\n\nfunction isContextProvider(type: Function): boolean {\n  if (disableLegacyContext) {\n    return false;\n  } else {\n    const childContextTypes = type.childContextTypes;\n    return childContextTypes !== null && childContextTypes !== undefined;\n  }\n}\n\nfunction popContext(fiber: Fiber): void {\n  if (disableLegacyContext) {\n    return;\n  } else {\n    pop(didPerformWorkStackCursor, fiber);\n    pop(contextStackCursor, fiber);\n  }\n}\n\nfunction popTopLevelContextObject(fiber: Fiber): void {\n  if (disableLegacyContext) {\n    return;\n  } else {\n    pop(didPerformWorkStackCursor, fiber);\n    pop(contextStackCursor, fiber);\n  }\n}\n\nfunction pushTopLevelContextObject(\n  fiber: Fiber,\n  context: Object,\n  didChange: boolean,\n): void {\n  if (disableLegacyContext) {\n    return;\n  } else {\n    invariant(\n      contextStackCursor.current === emptyContextObject,\n      'Unexpected context found on stack. ' +\n        'This error is likely caused by a bug in React. Please file an issue.',\n    );\n\n    push(contextStackCursor, context, fiber);\n    push(didPerformWorkStackCursor, didChange, fiber);\n  }\n}\n\nfunction processChildContext(\n  fiber: Fiber,\n  type: any,\n  parentContext: Object,\n): Object {\n  if (disableLegacyContext) {\n    return parentContext;\n  } else {\n    const instance = fiber.stateNode;\n    const childContextTypes = type.childContextTypes;\n\n    // TODO (bvaughn) Replace this behavior with an invariant() in the future.\n    // It has only been added in Fiber to match the (unintentional) behavior in Stack.\n    if (typeof instance.getChildContext !== 'function') {\n      if (__DEV__) {\n        const componentName = getComponentName(type) || 'Unknown';\n\n        if (!warnedAboutMissingGetChildContext[componentName]) {\n          warnedAboutMissingGetChildContext[componentName] = true;\n          console.error(\n            '%s.childContextTypes is specified but there is no getChildContext() method ' +\n              'on the instance. You can either define getChildContext() on %s or remove ' +\n              'childContextTypes from it.',\n            componentName,\n            componentName,\n          );\n        }\n      }\n      return parentContext;\n    }\n\n    const childContext = instance.getChildContext();\n    for (const contextKey in childContext) {\n      invariant(\n        contextKey in childContextTypes,\n        '%s.getChildContext(): key \"%s\" is not defined in childContextTypes.',\n        getComponentName(type) || 'Unknown',\n        contextKey,\n      );\n    }\n    if (__DEV__) {\n      const name = getComponentName(type) || 'Unknown';\n      checkPropTypes(childContextTypes, childContext, 'child context', name);\n    }\n\n    return {...parentContext, ...childContext};\n  }\n}\n\nfunction pushContextProvider(workInProgress: Fiber): boolean {\n  if (disableLegacyContext) {\n    return false;\n  } else {\n    const instance = workInProgress.stateNode;\n    // We push the context as early as possible to ensure stack integrity.\n    // If the instance does not exist yet, we will push null at first,\n    // and replace it on the stack later when invalidating the context.\n    const memoizedMergedChildContext =\n      (instance && instance.__reactInternalMemoizedMergedChildContext) ||\n      emptyContextObject;\n\n    // Remember the parent context so we can merge with it later.\n    // Inherit the parent's did-perform-work value to avoid inadvertently blocking updates.\n    previousContext = contextStackCursor.current;\n    push(contextStackCursor, memoizedMergedChildContext, workInProgress);\n    push(\n      didPerformWorkStackCursor,\n      didPerformWorkStackCursor.current,\n      workInProgress,\n    );\n\n    return true;\n  }\n}\n\nfunction invalidateContextProvider(\n  workInProgress: Fiber,\n  type: any,\n  didChange: boolean,\n): void {\n  if (disableLegacyContext) {\n    return;\n  } else {\n    const instance = workInProgress.stateNode;\n    invariant(\n      instance,\n      'Expected to have an instance by this point. ' +\n        'This error is likely caused by a bug in React. Please file an issue.',\n    );\n\n    if (didChange) {\n      // Merge parent and own context.\n      // Skip this if we're not updating due to sCU.\n      // This avoids unnecessarily recomputing memoized values.\n      const mergedContext = processChildContext(\n        workInProgress,\n        type,\n        previousContext,\n      );\n      instance.__reactInternalMemoizedMergedChildContext = mergedContext;\n\n      // Replace the old (or empty) context with the new one.\n      // It is important to unwind the context in the reverse order.\n      pop(didPerformWorkStackCursor, workInProgress);\n      pop(contextStackCursor, workInProgress);\n      // Now push the new context and mark that it has changed.\n      push(contextStackCursor, mergedContext, workInProgress);\n      push(didPerformWorkStackCursor, didChange, workInProgress);\n    } else {\n      pop(didPerformWorkStackCursor, workInProgress);\n      push(didPerformWorkStackCursor, didChange, workInProgress);\n    }\n  }\n}\n\nfunction findCurrentUnmaskedContext(fiber: Fiber): Object {\n  if (disableLegacyContext) {\n    return emptyContextObject;\n  } else {\n    // Currently this is only used with renderSubtreeIntoContainer; not sure if it\n    // makes sense elsewhere\n    invariant(\n      isFiberMounted(fiber) && fiber.tag === ClassComponent,\n      'Expected subtree parent to be a mounted class component. ' +\n        'This error is likely caused by a bug in React. Please file an issue.',\n    );\n\n    let node = fiber;\n    do {\n      switch (node.tag) {\n        case HostRoot:\n          return node.stateNode.context;\n        case ClassComponent: {\n          const Component = node.type;\n          if (isContextProvider(Component)) {\n            return node.stateNode.__reactInternalMemoizedMergedChildContext;\n          }\n          break;\n        }\n      }\n      node = node.return;\n    } while (node !== null);\n    invariant(\n      false,\n      'Found unexpected detached subtree parent. ' +\n        'This error is likely caused by a bug in React. Please file an issue.',\n    );\n  }\n}\n\nexport {\n  getUnmaskedContext,\n  cacheContext,\n  getMaskedContext,\n  hasContextChanged,\n  popContext,\n  popTopLevelContextObject,\n  pushTopLevelContextObject,\n  processChildContext,\n  isContextProvider,\n  pushContextProvider,\n  invalidateContextProvider,\n  findCurrentUnmaskedContext,\n};\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nexport type RootTag = 0 | 1 | 2;\n\nexport const LegacyRoot = 0;\nexport const BlockingRoot = 1;\nexport const ConcurrentRoot = 2;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport {enableProfilerTimer} from 'shared/ReactFeatureFlags';\n\nimport type {Fiber, FiberRoot, ReactPriorityLevel} from './ReactInternalTypes';\nimport type {ReactNodeList} from 'shared/ReactTypes';\n\nimport {DidCapture} from './ReactFiberFlags';\n\ndeclare var __REACT_DEVTOOLS_GLOBAL_HOOK__: Object | void;\n\nlet rendererID = null;\nlet injectedHook = null;\nlet hasLoggedError = false;\n\nexport const isDevToolsPresent =\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined';\n\nexport function injectInternals(internals: Object): boolean {\n  if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {\n    // No DevTools\n    return false;\n  }\n  const hook = __REACT_DEVTOOLS_GLOBAL_HOOK__;\n  if (hook.isDisabled) {\n    // This isn't a real property on the hook, but it can be set to opt out\n    // of DevTools integration and associated warnings and logs.\n    // https://github.com/facebook/react/issues/3877\n    return true;\n  }\n  if (!hook.supportsFiber) {\n    if (__DEV__) {\n      console.error(\n        'The installed version of React DevTools is too old and will not work ' +\n          'with the current version of React. Please update React DevTools. ' +\n          'https://reactjs.org/link/react-devtools',\n      );\n    }\n    // DevTools exists, even though it doesn't support Fiber.\n    return true;\n  }\n  try {\n    rendererID = hook.inject(internals);\n    // We have successfully injected, so now it is safe to set up hooks.\n    injectedHook = hook;\n  } catch (err) {\n    // Catch all errors because it is unsafe to throw during initialization.\n    if (__DEV__) {\n      console.error('React instrumentation encountered an error: %s.', err);\n    }\n  }\n  // DevTools exists\n  return true;\n}\n\nexport function onScheduleRoot(root: FiberRoot, children: ReactNodeList) {\n  if (__DEV__) {\n    if (\n      injectedHook &&\n      typeof injectedHook.onScheduleFiberRoot === 'function'\n    ) {\n      try {\n        injectedHook.onScheduleFiberRoot(rendererID, root, children);\n      } catch (err) {\n        if (__DEV__ && !hasLoggedError) {\n          hasLoggedError = true;\n          console.error('React instrumentation encountered an error: %s', err);\n        }\n      }\n    }\n  }\n}\n\nexport function onCommitRoot(\n  root: FiberRoot,\n  priorityLevel: ReactPriorityLevel,\n) {\n  if (injectedHook && typeof injectedHook.onCommitFiberRoot === 'function') {\n    try {\n      const didError = (root.current.flags & DidCapture) === DidCapture;\n      if (enableProfilerTimer) {\n        injectedHook.onCommitFiberRoot(\n          rendererID,\n          root,\n          priorityLevel,\n          didError,\n        );\n      } else {\n        injectedHook.onCommitFiberRoot(rendererID, root, undefined, didError);\n      }\n    } catch (err) {\n      if (__DEV__) {\n        if (!hasLoggedError) {\n          hasLoggedError = true;\n          console.error('React instrumentation encountered an error: %s', err);\n        }\n      }\n    }\n  }\n}\n\nexport function onCommitUnmount(fiber: Fiber) {\n  if (injectedHook && typeof injectedHook.onCommitFiberUnmount === 'function') {\n    try {\n      injectedHook.onCommitFiberUnmount(rendererID, fiber);\n    } catch (err) {\n      if (__DEV__) {\n        if (!hasLoggedError) {\n          hasLoggedError = true;\n          console.error('React instrumentation encountered an error: %s', err);\n        }\n      }\n    }\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {ReactPriorityLevel} from './ReactInternalTypes';\n\n// Intentionally not named imports because Rollup would use dynamic dispatch for\n// CommonJS interop named imports.\nimport * as Scheduler from 'scheduler';\nimport {__interactionsRef} from 'scheduler/tracing';\nimport {\n  enableSchedulerTracing,\n  decoupleUpdatePriorityFromScheduler,\n} from 'shared/ReactFeatureFlags';\nimport invariant from 'shared/invariant';\nimport {\n  SyncLanePriority,\n  getCurrentUpdateLanePriority,\n  setCurrentUpdateLanePriority,\n} from './ReactFiberLane';\n\nconst {\n  unstable_runWithPriority: Scheduler_runWithPriority,\n  unstable_scheduleCallback: Scheduler_scheduleCallback,\n  unstable_cancelCallback: Scheduler_cancelCallback,\n  unstable_shouldYield: Scheduler_shouldYield,\n  unstable_requestPaint: Scheduler_requestPaint,\n  unstable_now: Scheduler_now,\n  unstable_getCurrentPriorityLevel: Scheduler_getCurrentPriorityLevel,\n  unstable_ImmediatePriority: Scheduler_ImmediatePriority,\n  unstable_UserBlockingPriority: Scheduler_UserBlockingPriority,\n  unstable_NormalPriority: Scheduler_NormalPriority,\n  unstable_LowPriority: Scheduler_LowPriority,\n  unstable_IdlePriority: Scheduler_IdlePriority,\n} = Scheduler;\n\nif (enableSchedulerTracing) {\n  // Provide explicit error message when production+profiling bundle of e.g.\n  // react-dom is used with production (non-profiling) bundle of\n  // scheduler/tracing\n  invariant(\n    __interactionsRef != null && __interactionsRef.current != null,\n    'It is not supported to run the profiling version of a renderer (for ' +\n      'example, `react-dom/profiling`) without also replacing the ' +\n      '`scheduler/tracing` module with `scheduler/tracing-profiling`. Your ' +\n      'bundler might have a setting for aliasing both modules. Learn more at ' +\n      'https://reactjs.org/link/profiling',\n  );\n}\n\nexport type SchedulerCallback = (isSync: boolean) => SchedulerCallback | null;\n\ntype SchedulerCallbackOptions = {timeout?: number, ...};\n\nconst fakeCallbackNode = {};\n\n// Except for NoPriority, these correspond to Scheduler priorities. We use\n// ascending numbers so we can compare them like numbers. They start at 90 to\n// avoid clashing with Scheduler's priorities.\nexport const ImmediatePriority: ReactPriorityLevel = 99;\nexport const UserBlockingPriority: ReactPriorityLevel = 98;\nexport const NormalPriority: ReactPriorityLevel = 97;\nexport const LowPriority: ReactPriorityLevel = 96;\nexport const IdlePriority: ReactPriorityLevel = 95;\n// NoPriority is the absence of priority. Also React-only.\nexport const NoPriority: ReactPriorityLevel = 90;\n\nexport const shouldYield = Scheduler_shouldYield;\nexport const requestPaint =\n  // Fall back gracefully if we're running an older version of Scheduler.\n  Scheduler_requestPaint !== undefined ? Scheduler_requestPaint : () => {};\n\nlet syncQueue: Array<SchedulerCallback> | null = null;\nlet immediateQueueCallbackNode: mixed | null = null;\nlet isFlushingSyncQueue: boolean = false;\nconst initialTimeMs: number = Scheduler_now();\n\n// If the initial timestamp is reasonably small, use Scheduler's `now` directly.\n// This will be the case for modern browsers that support `performance.now`. In\n// older browsers, Scheduler falls back to `Date.now`, which returns a Unix\n// timestamp. In that case, subtract the module initialization time to simulate\n// the behavior of performance.now and keep our times small enough to fit\n// within 32 bits.\n// TODO: Consider lifting this into Scheduler.\nexport const now =\n  initialTimeMs < 10000 ? Scheduler_now : () => Scheduler_now() - initialTimeMs;\n\nexport function getCurrentPriorityLevel(): ReactPriorityLevel {\n  switch (Scheduler_getCurrentPriorityLevel()) {\n    case Scheduler_ImmediatePriority:\n      return ImmediatePriority;\n    case Scheduler_UserBlockingPriority:\n      return UserBlockingPriority;\n    case Scheduler_NormalPriority:\n      return NormalPriority;\n    case Scheduler_LowPriority:\n      return LowPriority;\n    case Scheduler_IdlePriority:\n      return IdlePriority;\n    default:\n      invariant(false, 'Unknown priority level.');\n  }\n}\n\nfunction reactPriorityToSchedulerPriority(reactPriorityLevel) {\n  switch (reactPriorityLevel) {\n    case ImmediatePriority:\n      return Scheduler_ImmediatePriority;\n    case UserBlockingPriority:\n      return Scheduler_UserBlockingPriority;\n    case NormalPriority:\n      return Scheduler_NormalPriority;\n    case LowPriority:\n      return Scheduler_LowPriority;\n    case IdlePriority:\n      return Scheduler_IdlePriority;\n    default:\n      invariant(false, 'Unknown priority level.');\n  }\n}\n\nexport function runWithPriority<T>(\n  reactPriorityLevel: ReactPriorityLevel,\n  fn: () => T,\n): T {\n  const priorityLevel = reactPriorityToSchedulerPriority(reactPriorityLevel);\n  return Scheduler_runWithPriority(priorityLevel, fn);\n}\n\nexport function scheduleCallback(\n  reactPriorityLevel: ReactPriorityLevel,\n  callback: SchedulerCallback,\n  options: SchedulerCallbackOptions | void | null,\n) {\n  const priorityLevel = reactPriorityToSchedulerPriority(reactPriorityLevel);\n  return Scheduler_scheduleCallback(priorityLevel, callback, options);\n}\n\nexport function scheduleSyncCallback(callback: SchedulerCallback) {\n  // Push this callback into an internal queue. We'll flush these either in\n  // the next tick, or earlier if something calls `flushSyncCallbackQueue`.\n  if (syncQueue === null) {\n    syncQueue = [callback];\n    // Flush the queue in the next tick, at the earliest.\n    immediateQueueCallbackNode = Scheduler_scheduleCallback(\n      Scheduler_ImmediatePriority,\n      flushSyncCallbackQueueImpl,\n    );\n  } else {\n    // Push onto existing queue. Don't need to schedule a callback because\n    // we already scheduled one when we created the queue.\n    syncQueue.push(callback);\n  }\n  return fakeCallbackNode;\n}\n\nexport function cancelCallback(callbackNode: mixed) {\n  if (callbackNode !== fakeCallbackNode) {\n    Scheduler_cancelCallback(callbackNode);\n  }\n}\n\nexport function flushSyncCallbackQueue(): boolean {\n  if (immediateQueueCallbackNode !== null) {\n    const node = immediateQueueCallbackNode;\n    immediateQueueCallbackNode = null;\n    Scheduler_cancelCallback(node);\n  }\n  return flushSyncCallbackQueueImpl();\n}\n\nfunction flushSyncCallbackQueueImpl() {\n  if (!isFlushingSyncQueue && syncQueue !== null) {\n    // Prevent re-entrancy.\n    isFlushingSyncQueue = true;\n    let i = 0;\n    if (decoupleUpdatePriorityFromScheduler) {\n      const previousLanePriority = getCurrentUpdateLanePriority();\n      try {\n        const isSync = true;\n        const queue = syncQueue;\n        setCurrentUpdateLanePriority(SyncLanePriority);\n        runWithPriority(ImmediatePriority, () => {\n          for (; i < queue.length; i++) {\n            let callback = queue[i];\n            do {\n              callback = callback(isSync);\n            } while (callback !== null);\n          }\n        });\n        syncQueue = null;\n      } catch (error) {\n        // If something throws, leave the remaining callbacks on the queue.\n        if (syncQueue !== null) {\n          syncQueue = syncQueue.slice(i + 1);\n        }\n        // Resume flushing in the next tick\n        Scheduler_scheduleCallback(\n          Scheduler_ImmediatePriority,\n          flushSyncCallbackQueue,\n        );\n        throw error;\n      } finally {\n        setCurrentUpdateLanePriority(previousLanePriority);\n        isFlushingSyncQueue = false;\n      }\n    } else {\n      try {\n        const isSync = true;\n        const queue = syncQueue;\n        runWithPriority(ImmediatePriority, () => {\n          for (; i < queue.length; i++) {\n            let callback = queue[i];\n            do {\n              callback = callback(isSync);\n            } while (callback !== null);\n          }\n        });\n        syncQueue = null;\n      } catch (error) {\n        // If something throws, leave the remaining callbacks on the queue.\n        if (syncQueue !== null) {\n          syncQueue = syncQueue.slice(i + 1);\n        }\n        // Resume flushing in the next tick\n        Scheduler_scheduleCallback(\n          Scheduler_ImmediatePriority,\n          flushSyncCallbackQueue,\n        );\n        throw error;\n      } finally {\n        isFlushingSyncQueue = false;\n      }\n    }\n    return true;\n  } else {\n    return false;\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {FiberRoot, ReactPriorityLevel} from './ReactInternalTypes';\n\nexport opaque type LanePriority =\n  | 0\n  | 1\n  | 2\n  | 3\n  | 4\n  | 5\n  | 6\n  | 7\n  | 8\n  | 9\n  | 10\n  | 11\n  | 12\n  | 13\n  | 14\n  | 15\n  | 16\n  | 17;\nexport opaque type Lanes = number;\nexport opaque type Lane = number;\nexport opaque type LaneMap<T> = Array<T>;\n\nimport invariant from 'shared/invariant';\n\nimport {\n  ImmediatePriority as ImmediateSchedulerPriority,\n  UserBlockingPriority as UserBlockingSchedulerPriority,\n  NormalPriority as NormalSchedulerPriority,\n  LowPriority as LowSchedulerPriority,\n  IdlePriority as IdleSchedulerPriority,\n  NoPriority as NoSchedulerPriority,\n} from './SchedulerWithReactIntegration.new';\n\nexport const SyncLanePriority: LanePriority = 15;\nexport const SyncBatchedLanePriority: LanePriority = 14;\n\nconst InputDiscreteHydrationLanePriority: LanePriority = 13;\nexport const InputDiscreteLanePriority: LanePriority = 12;\n\nconst InputContinuousHydrationLanePriority: LanePriority = 11;\nexport const InputContinuousLanePriority: LanePriority = 10;\n\nconst DefaultHydrationLanePriority: LanePriority = 9;\nexport const DefaultLanePriority: LanePriority = 8;\n\nconst TransitionHydrationPriority: LanePriority = 7;\nexport const TransitionPriority: LanePriority = 6;\n\nconst RetryLanePriority: LanePriority = 5;\n\nconst SelectiveHydrationLanePriority: LanePriority = 4;\n\nconst IdleHydrationLanePriority: LanePriority = 3;\nconst IdleLanePriority: LanePriority = 2;\n\nconst OffscreenLanePriority: LanePriority = 1;\n\nexport const NoLanePriority: LanePriority = 0;\n\nconst TotalLanes = 31;\n\nexport const NoLanes: Lanes = /*                        */ 0b0000000000000000000000000000000;\nexport const NoLane: Lane = /*                          */ 0b0000000000000000000000000000000;\n\nexport const SyncLane: Lane = /*                        */ 0b0000000000000000000000000000001;\nexport const SyncBatchedLane: Lane = /*                 */ 0b0000000000000000000000000000010;\n\nexport const InputDiscreteHydrationLane: Lane = /*      */ 0b0000000000000000000000000000100;\nconst InputDiscreteLanes: Lanes = /*                    */ 0b0000000000000000000000000011000;\n\nconst InputContinuousHydrationLane: Lane = /*           */ 0b0000000000000000000000000100000;\nconst InputContinuousLanes: Lanes = /*                  */ 0b0000000000000000000000011000000;\n\nexport const DefaultHydrationLane: Lane = /*            */ 0b0000000000000000000000100000000;\nexport const DefaultLanes: Lanes = /*                   */ 0b0000000000000000000111000000000;\n\nconst TransitionHydrationLane: Lane = /*                */ 0b0000000000000000001000000000000;\nconst TransitionLanes: Lanes = /*                       */ 0b0000000001111111110000000000000;\n\nconst RetryLanes: Lanes = /*                            */ 0b0000011110000000000000000000000;\n\nexport const SomeRetryLane: Lanes = /*                  */ 0b0000010000000000000000000000000;\n\nexport const SelectiveHydrationLane: Lane = /*          */ 0b0000100000000000000000000000000;\n\nconst NonIdleLanes = /*                                 */ 0b0000111111111111111111111111111;\n\nexport const IdleHydrationLane: Lane = /*               */ 0b0001000000000000000000000000000;\nconst IdleLanes: Lanes = /*                             */ 0b0110000000000000000000000000000;\n\nexport const OffscreenLane: Lane = /*                   */ 0b1000000000000000000000000000000;\n\nexport const NoTimestamp = -1;\n\nlet currentUpdateLanePriority: LanePriority = NoLanePriority;\n\nexport function getCurrentUpdateLanePriority(): LanePriority {\n  return currentUpdateLanePriority;\n}\n\nexport function setCurrentUpdateLanePriority(newLanePriority: LanePriority) {\n  currentUpdateLanePriority = newLanePriority;\n}\n\n// \"Registers\" used to \"return\" multiple values\n// Used by getHighestPriorityLanes and getNextLanes:\nlet return_highestLanePriority: LanePriority = DefaultLanePriority;\n\nfunction getHighestPriorityLanes(lanes: Lanes | Lane): Lanes {\n  if ((SyncLane & lanes) !== NoLanes) {\n    return_highestLanePriority = SyncLanePriority;\n    return SyncLane;\n  }\n  if ((SyncBatchedLane & lanes) !== NoLanes) {\n    return_highestLanePriority = SyncBatchedLanePriority;\n    return SyncBatchedLane;\n  }\n  if ((InputDiscreteHydrationLane & lanes) !== NoLanes) {\n    return_highestLanePriority = InputDiscreteHydrationLanePriority;\n    return InputDiscreteHydrationLane;\n  }\n  const inputDiscreteLanes = InputDiscreteLanes & lanes;\n  if (inputDiscreteLanes !== NoLanes) {\n    return_highestLanePriority = InputDiscreteLanePriority;\n    return inputDiscreteLanes;\n  }\n  if ((lanes & InputContinuousHydrationLane) !== NoLanes) {\n    return_highestLanePriority = InputContinuousHydrationLanePriority;\n    return InputContinuousHydrationLane;\n  }\n  const inputContinuousLanes = InputContinuousLanes & lanes;\n  if (inputContinuousLanes !== NoLanes) {\n    return_highestLanePriority = InputContinuousLanePriority;\n    return inputContinuousLanes;\n  }\n  if ((lanes & DefaultHydrationLane) !== NoLanes) {\n    return_highestLanePriority = DefaultHydrationLanePriority;\n    return DefaultHydrationLane;\n  }\n  const defaultLanes = DefaultLanes & lanes;\n  if (defaultLanes !== NoLanes) {\n    return_highestLanePriority = DefaultLanePriority;\n    return defaultLanes;\n  }\n  if ((lanes & TransitionHydrationLane) !== NoLanes) {\n    return_highestLanePriority = TransitionHydrationPriority;\n    return TransitionHydrationLane;\n  }\n  const transitionLanes = TransitionLanes & lanes;\n  if (transitionLanes !== NoLanes) {\n    return_highestLanePriority = TransitionPriority;\n    return transitionLanes;\n  }\n  const retryLanes = RetryLanes & lanes;\n  if (retryLanes !== NoLanes) {\n    return_highestLanePriority = RetryLanePriority;\n    return retryLanes;\n  }\n  if (lanes & SelectiveHydrationLane) {\n    return_highestLanePriority = SelectiveHydrationLanePriority;\n    return SelectiveHydrationLane;\n  }\n  if ((lanes & IdleHydrationLane) !== NoLanes) {\n    return_highestLanePriority = IdleHydrationLanePriority;\n    return IdleHydrationLane;\n  }\n  const idleLanes = IdleLanes & lanes;\n  if (idleLanes !== NoLanes) {\n    return_highestLanePriority = IdleLanePriority;\n    return idleLanes;\n  }\n  if ((OffscreenLane & lanes) !== NoLanes) {\n    return_highestLanePriority = OffscreenLanePriority;\n    return OffscreenLane;\n  }\n  if (__DEV__) {\n    console.error('Should have found matching lanes. This is a bug in React.');\n  }\n  // This shouldn't be reachable, but as a fallback, return the entire bitmask.\n  return_highestLanePriority = DefaultLanePriority;\n  return lanes;\n}\n\nexport function schedulerPriorityToLanePriority(\n  schedulerPriorityLevel: ReactPriorityLevel,\n): LanePriority {\n  switch (schedulerPriorityLevel) {\n    case ImmediateSchedulerPriority:\n      return SyncLanePriority;\n    case UserBlockingSchedulerPriority:\n      return InputContinuousLanePriority;\n    case NormalSchedulerPriority:\n    case LowSchedulerPriority:\n      // TODO: Handle LowSchedulerPriority, somehow. Maybe the same lane as hydration.\n      return DefaultLanePriority;\n    case IdleSchedulerPriority:\n      return IdleLanePriority;\n    default:\n      return NoLanePriority;\n  }\n}\n\nexport function lanePriorityToSchedulerPriority(\n  lanePriority: LanePriority,\n): ReactPriorityLevel {\n  switch (lanePriority) {\n    case SyncLanePriority:\n    case SyncBatchedLanePriority:\n      return ImmediateSchedulerPriority;\n    case InputDiscreteHydrationLanePriority:\n    case InputDiscreteLanePriority:\n    case InputContinuousHydrationLanePriority:\n    case InputContinuousLanePriority:\n      return UserBlockingSchedulerPriority;\n    case DefaultHydrationLanePriority:\n    case DefaultLanePriority:\n    case TransitionHydrationPriority:\n    case TransitionPriority:\n    case SelectiveHydrationLanePriority:\n    case RetryLanePriority:\n      return NormalSchedulerPriority;\n    case IdleHydrationLanePriority:\n    case IdleLanePriority:\n    case OffscreenLanePriority:\n      return IdleSchedulerPriority;\n    case NoLanePriority:\n      return NoSchedulerPriority;\n    default:\n      invariant(\n        false,\n        'Invalid update priority: %s. This is a bug in React.',\n        lanePriority,\n      );\n  }\n}\n\nexport function getNextLanes(root: FiberRoot, wipLanes: Lanes): Lanes {\n  // Early bailout if there's no pending work left.\n  const pendingLanes = root.pendingLanes;\n  if (pendingLanes === NoLanes) {\n    return_highestLanePriority = NoLanePriority;\n    return NoLanes;\n  }\n\n  let nextLanes = NoLanes;\n  let nextLanePriority = NoLanePriority;\n\n  const expiredLanes = root.expiredLanes;\n  const suspendedLanes = root.suspendedLanes;\n  const pingedLanes = root.pingedLanes;\n\n  // Check if any work has expired.\n  if (expiredLanes !== NoLanes) {\n    nextLanes = expiredLanes;\n    nextLanePriority = return_highestLanePriority = SyncLanePriority;\n  } else {\n    // Do not work on any idle work until all the non-idle work has finished,\n    // even if the work is suspended.\n    const nonIdlePendingLanes = pendingLanes & NonIdleLanes;\n    if (nonIdlePendingLanes !== NoLanes) {\n      const nonIdleUnblockedLanes = nonIdlePendingLanes & ~suspendedLanes;\n      if (nonIdleUnblockedLanes !== NoLanes) {\n        nextLanes = getHighestPriorityLanes(nonIdleUnblockedLanes);\n        nextLanePriority = return_highestLanePriority;\n      } else {\n        const nonIdlePingedLanes = nonIdlePendingLanes & pingedLanes;\n        if (nonIdlePingedLanes !== NoLanes) {\n          nextLanes = getHighestPriorityLanes(nonIdlePingedLanes);\n          nextLanePriority = return_highestLanePriority;\n        }\n      }\n    } else {\n      // The only remaining work is Idle.\n      const unblockedLanes = pendingLanes & ~suspendedLanes;\n      if (unblockedLanes !== NoLanes) {\n        nextLanes = getHighestPriorityLanes(unblockedLanes);\n        nextLanePriority = return_highestLanePriority;\n      } else {\n        if (pingedLanes !== NoLanes) {\n          nextLanes = getHighestPriorityLanes(pingedLanes);\n          nextLanePriority = return_highestLanePriority;\n        }\n      }\n    }\n  }\n\n  if (nextLanes === NoLanes) {\n    // This should only be reachable if we're suspended\n    // TODO: Consider warning in this path if a fallback timer is not scheduled.\n    return NoLanes;\n  }\n\n  // If there are higher priority lanes, we'll include them even if they\n  // are suspended.\n  nextLanes = pendingLanes & getEqualOrHigherPriorityLanes(nextLanes);\n\n  // If we're already in the middle of a render, switching lanes will interrupt\n  // it and we'll lose our progress. We should only do this if the new lanes are\n  // higher priority.\n  if (\n    wipLanes !== NoLanes &&\n    wipLanes !== nextLanes &&\n    // If we already suspended with a delay, then interrupting is fine. Don't\n    // bother waiting until the root is complete.\n    (wipLanes & suspendedLanes) === NoLanes\n  ) {\n    getHighestPriorityLanes(wipLanes);\n    const wipLanePriority = return_highestLanePriority;\n    if (nextLanePriority <= wipLanePriority) {\n      return wipLanes;\n    } else {\n      return_highestLanePriority = nextLanePriority;\n    }\n  }\n\n  // Check for entangled lanes and add them to the batch.\n  //\n  // A lane is said to be entangled with another when it's not allowed to render\n  // in a batch that does not also include the other lane. Typically we do this\n  // when multiple updates have the same source, and we only want to respond to\n  // the most recent event from that source.\n  //\n  // Note that we apply entanglements *after* checking for partial work above.\n  // This means that if a lane is entangled during an interleaved event while\n  // it's already rendering, we won't interrupt it. This is intentional, since\n  // entanglement is usually \"best effort\": we'll try our best to render the\n  // lanes in the same batch, but it's not worth throwing out partially\n  // completed work in order to do it.\n  //\n  // For those exceptions where entanglement is semantically important, like\n  // useMutableSource, we should ensure that there is no partial work at the\n  // time we apply the entanglement.\n  const entangledLanes = root.entangledLanes;\n  if (entangledLanes !== NoLanes) {\n    const entanglements = root.entanglements;\n    let lanes = nextLanes & entangledLanes;\n    while (lanes > 0) {\n      const index = pickArbitraryLaneIndex(lanes);\n      const lane = 1 << index;\n\n      nextLanes |= entanglements[index];\n\n      lanes &= ~lane;\n    }\n  }\n\n  return nextLanes;\n}\n\nexport function getMostRecentEventTime(root: FiberRoot, lanes: Lanes): number {\n  const eventTimes = root.eventTimes;\n\n  let mostRecentEventTime = NoTimestamp;\n  while (lanes > 0) {\n    const index = pickArbitraryLaneIndex(lanes);\n    const lane = 1 << index;\n\n    const eventTime = eventTimes[index];\n    if (eventTime > mostRecentEventTime) {\n      mostRecentEventTime = eventTime;\n    }\n\n    lanes &= ~lane;\n  }\n\n  return mostRecentEventTime;\n}\n\nfunction computeExpirationTime(lane: Lane, currentTime: number) {\n  // TODO: Expiration heuristic is constant per lane, so could use a map.\n  getHighestPriorityLanes(lane);\n  const priority = return_highestLanePriority;\n  if (priority >= InputContinuousLanePriority) {\n    // User interactions should expire slightly more quickly.\n    //\n    // NOTE: This is set to the corresponding constant as in Scheduler.js. When\n    // we made it larger, a product metric in www regressed, suggesting there's\n    // a user interaction that's being starved by a series of synchronous\n    // updates. If that theory is correct, the proper solution is to fix the\n    // starvation. However, this scenario supports the idea that expiration\n    // times are an important safeguard when starvation does happen.\n    //\n    // Also note that, in the case of user input specifically, this will soon no\n    // longer be an issue because we plan to make user input synchronous by\n    // default (until you enter `startTransition`, of course.)\n    //\n    // If weren't planning to make these updates synchronous soon anyway, I\n    // would probably make this number a configurable parameter.\n    return currentTime + 250;\n  } else if (priority >= TransitionPriority) {\n    return currentTime + 5000;\n  } else {\n    // Anything idle priority or lower should never expire.\n    return NoTimestamp;\n  }\n}\n\nexport function markStarvedLanesAsExpired(\n  root: FiberRoot,\n  currentTime: number,\n): void {\n  // TODO: This gets called every time we yield. We can optimize by storing\n  // the earliest expiration time on the root. Then use that to quickly bail out\n  // of this function.\n\n  const pendingLanes = root.pendingLanes;\n  const suspendedLanes = root.suspendedLanes;\n  const pingedLanes = root.pingedLanes;\n  const expirationTimes = root.expirationTimes;\n\n  // Iterate through the pending lanes and check if we've reached their\n  // expiration time. If so, we'll assume the update is being starved and mark\n  // it as expired to force it to finish.\n  let lanes = pendingLanes;\n  while (lanes > 0) {\n    const index = pickArbitraryLaneIndex(lanes);\n    const lane = 1 << index;\n\n    const expirationTime = expirationTimes[index];\n    if (expirationTime === NoTimestamp) {\n      // Found a pending lane with no expiration time. If it's not suspended, or\n      // if it's pinged, assume it's CPU-bound. Compute a new expiration time\n      // using the current time.\n      if (\n        (lane & suspendedLanes) === NoLanes ||\n        (lane & pingedLanes) !== NoLanes\n      ) {\n        // Assumes timestamps are monotonically increasing.\n        expirationTimes[index] = computeExpirationTime(lane, currentTime);\n      }\n    } else if (expirationTime <= currentTime) {\n      // This lane expired\n      root.expiredLanes |= lane;\n    }\n\n    lanes &= ~lane;\n  }\n}\n\n// This returns the highest priority pending lanes regardless of whether they\n// are suspended.\nexport function getHighestPriorityPendingLanes(root: FiberRoot) {\n  return getHighestPriorityLanes(root.pendingLanes);\n}\n\nexport function getLanesToRetrySynchronouslyOnError(root: FiberRoot): Lanes {\n  const everythingButOffscreen = root.pendingLanes & ~OffscreenLane;\n  if (everythingButOffscreen !== NoLanes) {\n    return everythingButOffscreen;\n  }\n  if (everythingButOffscreen & OffscreenLane) {\n    return OffscreenLane;\n  }\n  return NoLanes;\n}\n\nexport function returnNextLanesPriority() {\n  return return_highestLanePriority;\n}\nexport function includesNonIdleWork(lanes: Lanes) {\n  return (lanes & NonIdleLanes) !== NoLanes;\n}\nexport function includesOnlyRetries(lanes: Lanes) {\n  return (lanes & RetryLanes) === lanes;\n}\nexport function includesOnlyTransitions(lanes: Lanes) {\n  return (lanes & TransitionLanes) === lanes;\n}\n\n// To ensure consistency across multiple updates in the same event, this should\n// be a pure function, so that it always returns the same lane for given inputs.\nexport function findUpdateLane(\n  lanePriority: LanePriority,\n  wipLanes: Lanes,\n): Lane {\n  switch (lanePriority) {\n    case NoLanePriority:\n      break;\n    case SyncLanePriority:\n      return SyncLane;\n    case SyncBatchedLanePriority:\n      return SyncBatchedLane;\n    case InputDiscreteLanePriority: {\n      const lane = pickArbitraryLane(InputDiscreteLanes & ~wipLanes);\n      if (lane === NoLane) {\n        // Shift to the next priority level\n        return findUpdateLane(InputContinuousLanePriority, wipLanes);\n      }\n      return lane;\n    }\n    case InputContinuousLanePriority: {\n      const lane = pickArbitraryLane(InputContinuousLanes & ~wipLanes);\n      if (lane === NoLane) {\n        // Shift to the next priority level\n        return findUpdateLane(DefaultLanePriority, wipLanes);\n      }\n      return lane;\n    }\n    case DefaultLanePriority: {\n      let lane = pickArbitraryLane(DefaultLanes & ~wipLanes);\n      if (lane === NoLane) {\n        // If all the default lanes are already being worked on, look for a\n        // lane in the transition range.\n        lane = pickArbitraryLane(TransitionLanes & ~wipLanes);\n        if (lane === NoLane) {\n          // All the transition lanes are taken, too. This should be very\n          // rare, but as a last resort, pick a default lane. This will have\n          // the effect of interrupting the current work-in-progress render.\n          lane = pickArbitraryLane(DefaultLanes);\n        }\n      }\n      return lane;\n    }\n    case TransitionPriority: // Should be handled by findTransitionLane instead\n    case RetryLanePriority: // Should be handled by findRetryLane instead\n      break;\n    case IdleLanePriority:\n      let lane = pickArbitraryLane(IdleLanes & ~wipLanes);\n      if (lane === NoLane) {\n        lane = pickArbitraryLane(IdleLanes);\n      }\n      return lane;\n    default:\n      // The remaining priorities are not valid for updates\n      break;\n  }\n  invariant(\n    false,\n    'Invalid update priority: %s. This is a bug in React.',\n    lanePriority,\n  );\n}\n\n// To ensure consistency across multiple updates in the same event, this should\n// be pure function, so that it always returns the same lane for given inputs.\nexport function findTransitionLane(wipLanes: Lanes, pendingLanes: Lanes): Lane {\n  // First look for lanes that are completely unclaimed, i.e. have no\n  // pending work.\n  let lane = pickArbitraryLane(TransitionLanes & ~pendingLanes);\n  if (lane === NoLane) {\n    // If all lanes have pending work, look for a lane that isn't currently\n    // being worked on.\n    lane = pickArbitraryLane(TransitionLanes & ~wipLanes);\n    if (lane === NoLane) {\n      // If everything is being worked on, pick any lane. This has the\n      // effect of interrupting the current work-in-progress.\n      lane = pickArbitraryLane(TransitionLanes);\n    }\n  }\n  return lane;\n}\n\n// To ensure consistency across multiple updates in the same event, this should\n// be pure function, so that it always returns the same lane for given inputs.\nexport function findRetryLane(wipLanes: Lanes): Lane {\n  // This is a fork of `findUpdateLane` designed specifically for Suspense\n  // \"retries\" — a special update that attempts to flip a Suspense boundary\n  // from its placeholder state to its primary/resolved state.\n  let lane = pickArbitraryLane(RetryLanes & ~wipLanes);\n  if (lane === NoLane) {\n    lane = pickArbitraryLane(RetryLanes);\n  }\n  return lane;\n}\n\nfunction getHighestPriorityLane(lanes: Lanes) {\n  return lanes & -lanes;\n}\n\nfunction getLowestPriorityLane(lanes: Lanes): Lane {\n  // This finds the most significant non-zero bit.\n  const index = 31 - clz32(lanes);\n  return index < 0 ? NoLanes : 1 << index;\n}\n\nfunction getEqualOrHigherPriorityLanes(lanes: Lanes | Lane): Lanes {\n  return (getLowestPriorityLane(lanes) << 1) - 1;\n}\n\nexport function pickArbitraryLane(lanes: Lanes): Lane {\n  // This wrapper function gets inlined. Only exists so to communicate that it\n  // doesn't matter which bit is selected; you can pick any bit without\n  // affecting the algorithms where its used. Here I'm using\n  // getHighestPriorityLane because it requires the fewest operations.\n  return getHighestPriorityLane(lanes);\n}\n\nfunction pickArbitraryLaneIndex(lanes: Lanes) {\n  return 31 - clz32(lanes);\n}\n\nfunction laneToIndex(lane: Lane) {\n  return pickArbitraryLaneIndex(lane);\n}\n\nexport function includesSomeLane(a: Lanes | Lane, b: Lanes | Lane) {\n  return (a & b) !== NoLanes;\n}\n\nexport function isSubsetOfLanes(set: Lanes, subset: Lanes | Lane) {\n  return (set & subset) === subset;\n}\n\nexport function mergeLanes(a: Lanes | Lane, b: Lanes | Lane): Lanes {\n  return a | b;\n}\n\nexport function removeLanes(set: Lanes, subset: Lanes | Lane): Lanes {\n  return set & ~subset;\n}\n\n// Seems redundant, but it changes the type from a single lane (used for\n// updates) to a group of lanes (used for flushing work).\nexport function laneToLanes(lane: Lane): Lanes {\n  return lane;\n}\n\nexport function higherPriorityLane(a: Lane, b: Lane) {\n  // This works because the bit ranges decrease in priority as you go left.\n  return a !== NoLane && a < b ? a : b;\n}\n\nexport function higherLanePriority(\n  a: LanePriority,\n  b: LanePriority,\n): LanePriority {\n  return a !== NoLanePriority && a > b ? a : b;\n}\n\nexport function createLaneMap<T>(initial: T): LaneMap<T> {\n  // Intentionally pushing one by one.\n  // https://v8.dev/blog/elements-kinds#avoid-creating-holes\n  const laneMap = [];\n  for (let i = 0; i < TotalLanes; i++) {\n    laneMap.push(initial);\n  }\n  return laneMap;\n}\n\nexport function markRootUpdated(\n  root: FiberRoot,\n  updateLane: Lane,\n  eventTime: number,\n) {\n  root.pendingLanes |= updateLane;\n\n  // TODO: Theoretically, any update to any lane can unblock any other lane. But\n  // it's not practical to try every single possible combination. We need a\n  // heuristic to decide which lanes to attempt to render, and in which batches.\n  // For now, we use the same heuristic as in the old ExpirationTimes model:\n  // retry any lane at equal or lower priority, but don't try updates at higher\n  // priority without also including the lower priority updates. This works well\n  // when considering updates across different priority levels, but isn't\n  // sufficient for updates within the same priority, since we want to treat\n  // those updates as parallel.\n\n  // Unsuspend any update at equal or lower priority.\n  const higherPriorityLanes = updateLane - 1; // Turns 0b1000 into 0b0111\n\n  root.suspendedLanes &= higherPriorityLanes;\n  root.pingedLanes &= higherPriorityLanes;\n\n  const eventTimes = root.eventTimes;\n  const index = laneToIndex(updateLane);\n  // We can always overwrite an existing timestamp because we prefer the most\n  // recent event, and we assume time is monotonically increasing.\n  eventTimes[index] = eventTime;\n}\n\nexport function markRootSuspended(root: FiberRoot, suspendedLanes: Lanes) {\n  root.suspendedLanes |= suspendedLanes;\n  root.pingedLanes &= ~suspendedLanes;\n\n  // The suspended lanes are no longer CPU-bound. Clear their expiration times.\n  const expirationTimes = root.expirationTimes;\n  let lanes = suspendedLanes;\n  while (lanes > 0) {\n    const index = pickArbitraryLaneIndex(lanes);\n    const lane = 1 << index;\n\n    expirationTimes[index] = NoTimestamp;\n\n    lanes &= ~lane;\n  }\n}\n\nexport function markRootPinged(\n  root: FiberRoot,\n  pingedLanes: Lanes,\n  eventTime: number,\n) {\n  root.pingedLanes |= root.suspendedLanes & pingedLanes;\n}\n\nexport function markRootExpired(root: FiberRoot, expiredLanes: Lanes) {\n  root.expiredLanes |= expiredLanes & root.pendingLanes;\n}\n\nexport function markDiscreteUpdatesExpired(root: FiberRoot) {\n  root.expiredLanes |= InputDiscreteLanes & root.pendingLanes;\n}\n\nexport function hasDiscreteLanes(lanes: Lanes) {\n  return (lanes & InputDiscreteLanes) !== NoLanes;\n}\n\nexport function markRootMutableRead(root: FiberRoot, updateLane: Lane) {\n  root.mutableReadLanes |= updateLane & root.pendingLanes;\n}\n\nexport function markRootFinished(root: FiberRoot, remainingLanes: Lanes) {\n  const noLongerPendingLanes = root.pendingLanes & ~remainingLanes;\n\n  root.pendingLanes = remainingLanes;\n\n  // Let's try everything again\n  root.suspendedLanes = 0;\n  root.pingedLanes = 0;\n\n  root.expiredLanes &= remainingLanes;\n  root.mutableReadLanes &= remainingLanes;\n\n  root.entangledLanes &= remainingLanes;\n\n  const entanglements = root.entanglements;\n  const eventTimes = root.eventTimes;\n  const expirationTimes = root.expirationTimes;\n\n  // Clear the lanes that no longer have pending work\n  let lanes = noLongerPendingLanes;\n  while (lanes > 0) {\n    const index = pickArbitraryLaneIndex(lanes);\n    const lane = 1 << index;\n\n    entanglements[index] = NoLanes;\n    eventTimes[index] = NoTimestamp;\n    expirationTimes[index] = NoTimestamp;\n\n    lanes &= ~lane;\n  }\n}\n\nexport function markRootEntangled(root: FiberRoot, entangledLanes: Lanes) {\n  root.entangledLanes |= entangledLanes;\n\n  const entanglements = root.entanglements;\n  let lanes = entangledLanes;\n  while (lanes > 0) {\n    const index = pickArbitraryLaneIndex(lanes);\n    const lane = 1 << index;\n\n    entanglements[index] |= entangledLanes;\n\n    lanes &= ~lane;\n  }\n}\n\nexport function getBumpedLaneForHydration(\n  root: FiberRoot,\n  renderLanes: Lanes,\n): Lane {\n  getHighestPriorityLanes(renderLanes);\n  const highestLanePriority = return_highestLanePriority;\n\n  let lane;\n  switch (highestLanePriority) {\n    case SyncLanePriority:\n    case SyncBatchedLanePriority:\n      lane = NoLane;\n      break;\n    case InputDiscreteHydrationLanePriority:\n    case InputDiscreteLanePriority:\n      lane = InputDiscreteHydrationLane;\n      break;\n    case InputContinuousHydrationLanePriority:\n    case InputContinuousLanePriority:\n      lane = InputContinuousHydrationLane;\n      break;\n    case DefaultHydrationLanePriority:\n    case DefaultLanePriority:\n      lane = DefaultHydrationLane;\n      break;\n    case TransitionHydrationPriority:\n    case TransitionPriority:\n      lane = TransitionHydrationLane;\n      break;\n    case RetryLanePriority:\n      // Shouldn't be reachable under normal circumstances, so there's no\n      // dedicated lane for retry priority. Use the one for long transitions.\n      lane = TransitionHydrationLane;\n      break;\n    case SelectiveHydrationLanePriority:\n      lane = SelectiveHydrationLane;\n      break;\n    case IdleHydrationLanePriority:\n    case IdleLanePriority:\n      lane = IdleHydrationLane;\n      break;\n    case OffscreenLanePriority:\n    case NoLanePriority:\n      lane = NoLane;\n      break;\n    default:\n      invariant(false, 'Invalid lane: %s. This is a bug in React.', lane);\n  }\n\n  // Check if the lane we chose is suspended. If so, that indicates that we\n  // already attempted and failed to hydrate at that level. Also check if we're\n  // already rendering that lane, which is rare but could happen.\n  if ((lane & (root.suspendedLanes | renderLanes)) !== NoLane) {\n    // Give up trying to hydrate and fall back to client render.\n    return NoLane;\n  }\n\n  return lane;\n}\n\nconst clz32 = Math.clz32 ? Math.clz32 : clz32Fallback;\n\n// Count leading zeros. Only used on lanes, so assume input is an integer.\n// Based on:\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/clz32\nconst log = Math.log;\nconst LN2 = Math.LN2;\nfunction clz32Fallback(lanes: Lanes | Lane) {\n  if (lanes === 0) {\n    return 32;\n  }\n  return (31 - ((log(lanes) / LN2) | 0)) | 0;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {ReactPriorityLevel} from './ReactInternalTypes';\n\n// Intentionally not named imports because Rollup would use dynamic dispatch for\n// CommonJS interop named imports.\nimport * as Scheduler from 'scheduler';\nimport {__interactionsRef} from 'scheduler/tracing';\nimport {\n  enableSchedulerTracing,\n  decoupleUpdatePriorityFromScheduler,\n} from 'shared/ReactFeatureFlags';\nimport invariant from 'shared/invariant';\nimport {\n  SyncLanePriority,\n  getCurrentUpdateLanePriority,\n  setCurrentUpdateLanePriority,\n} from './ReactFiberLane';\n\nconst {\n  unstable_runWithPriority: Scheduler_runWithPriority,\n  unstable_scheduleCallback: Scheduler_scheduleCallback,\n  unstable_cancelCallback: Scheduler_cancelCallback,\n  unstable_shouldYield: Scheduler_shouldYield,\n  unstable_requestPaint: Scheduler_requestPaint,\n  unstable_now: Scheduler_now,\n  unstable_getCurrentPriorityLevel: Scheduler_getCurrentPriorityLevel,\n  unstable_ImmediatePriority: Scheduler_ImmediatePriority,\n  unstable_UserBlockingPriority: Scheduler_UserBlockingPriority,\n  unstable_NormalPriority: Scheduler_NormalPriority,\n  unstable_LowPriority: Scheduler_LowPriority,\n  unstable_IdlePriority: Scheduler_IdlePriority,\n} = Scheduler;\n\nif (enableSchedulerTracing) {\n  // Provide explicit error message when production+profiling bundle of e.g.\n  // react-dom is used with production (non-profiling) bundle of\n  // scheduler/tracing\n  invariant(\n    __interactionsRef != null && __interactionsRef.current != null,\n    'It is not supported to run the profiling version of a renderer (for ' +\n      'example, `react-dom/profiling`) without also replacing the ' +\n      '`scheduler/tracing` module with `scheduler/tracing-profiling`. Your ' +\n      'bundler might have a setting for aliasing both modules. Learn more at ' +\n      'https://reactjs.org/link/profiling',\n  );\n}\n\nexport type SchedulerCallback = (isSync: boolean) => SchedulerCallback | null;\n\ntype SchedulerCallbackOptions = {timeout?: number, ...};\n\nconst fakeCallbackNode = {};\n\n// Except for NoPriority, these correspond to Scheduler priorities. We use\n// ascending numbers so we can compare them like numbers. They start at 90 to\n// avoid clashing with Scheduler's priorities.\nexport const ImmediatePriority: ReactPriorityLevel = 99;\nexport const UserBlockingPriority: ReactPriorityLevel = 98;\nexport const NormalPriority: ReactPriorityLevel = 97;\nexport const LowPriority: ReactPriorityLevel = 96;\nexport const IdlePriority: ReactPriorityLevel = 95;\n// NoPriority is the absence of priority. Also React-only.\nexport const NoPriority: ReactPriorityLevel = 90;\n\nexport const shouldYield = Scheduler_shouldYield;\nexport const requestPaint =\n  // Fall back gracefully if we're running an older version of Scheduler.\n  Scheduler_requestPaint !== undefined ? Scheduler_requestPaint : () => {};\n\nlet syncQueue: Array<SchedulerCallback> | null = null;\nlet immediateQueueCallbackNode: mixed | null = null;\nlet isFlushingSyncQueue: boolean = false;\nconst initialTimeMs: number = Scheduler_now();\n\n// If the initial timestamp is reasonably small, use Scheduler's `now` directly.\n// This will be the case for modern browsers that support `performance.now`. In\n// older browsers, Scheduler falls back to `Date.now`, which returns a Unix\n// timestamp. In that case, subtract the module initialization time to simulate\n// the behavior of performance.now and keep our times small enough to fit\n// within 32 bits.\n// TODO: Consider lifting this into Scheduler.\nexport const now =\n  initialTimeMs < 10000 ? Scheduler_now : () => Scheduler_now() - initialTimeMs;\n\nexport function getCurrentPriorityLevel(): ReactPriorityLevel {\n  switch (Scheduler_getCurrentPriorityLevel()) {\n    case Scheduler_ImmediatePriority:\n      return ImmediatePriority;\n    case Scheduler_UserBlockingPriority:\n      return UserBlockingPriority;\n    case Scheduler_NormalPriority:\n      return NormalPriority;\n    case Scheduler_LowPriority:\n      return LowPriority;\n    case Scheduler_IdlePriority:\n      return IdlePriority;\n    default:\n      invariant(false, 'Unknown priority level.');\n  }\n}\n\nfunction reactPriorityToSchedulerPriority(reactPriorityLevel) {\n  switch (reactPriorityLevel) {\n    case ImmediatePriority:\n      return Scheduler_ImmediatePriority;\n    case UserBlockingPriority:\n      return Scheduler_UserBlockingPriority;\n    case NormalPriority:\n      return Scheduler_NormalPriority;\n    case LowPriority:\n      return Scheduler_LowPriority;\n    case IdlePriority:\n      return Scheduler_IdlePriority;\n    default:\n      invariant(false, 'Unknown priority level.');\n  }\n}\n\nexport function runWithPriority<T>(\n  reactPriorityLevel: ReactPriorityLevel,\n  fn: () => T,\n): T {\n  const priorityLevel = reactPriorityToSchedulerPriority(reactPriorityLevel);\n  return Scheduler_runWithPriority(priorityLevel, fn);\n}\n\nexport function scheduleCallback(\n  reactPriorityLevel: ReactPriorityLevel,\n  callback: SchedulerCallback,\n  options: SchedulerCallbackOptions | void | null,\n) {\n  const priorityLevel = reactPriorityToSchedulerPriority(reactPriorityLevel);\n  return Scheduler_scheduleCallback(priorityLevel, callback, options);\n}\n\nexport function scheduleSyncCallback(callback: SchedulerCallback) {\n  // Push this callback into an internal queue. We'll flush these either in\n  // the next tick, or earlier if something calls `flushSyncCallbackQueue`.\n  if (syncQueue === null) {\n    syncQueue = [callback];\n    // Flush the queue in the next tick, at the earliest.\n    immediateQueueCallbackNode = Scheduler_scheduleCallback(\n      Scheduler_ImmediatePriority,\n      flushSyncCallbackQueueImpl,\n    );\n  } else {\n    // Push onto existing queue. Don't need to schedule a callback because\n    // we already scheduled one when we created the queue.\n    syncQueue.push(callback);\n  }\n  return fakeCallbackNode;\n}\n\nexport function cancelCallback(callbackNode: mixed) {\n  if (callbackNode !== fakeCallbackNode) {\n    Scheduler_cancelCallback(callbackNode);\n  }\n}\n\nexport function flushSyncCallbackQueue() {\n  if (immediateQueueCallbackNode !== null) {\n    const node = immediateQueueCallbackNode;\n    immediateQueueCallbackNode = null;\n    Scheduler_cancelCallback(node);\n  }\n  flushSyncCallbackQueueImpl();\n}\n\nfunction flushSyncCallbackQueueImpl() {\n  if (!isFlushingSyncQueue && syncQueue !== null) {\n    // Prevent re-entrancy.\n    isFlushingSyncQueue = true;\n    let i = 0;\n    if (decoupleUpdatePriorityFromScheduler) {\n      const previousLanePriority = getCurrentUpdateLanePriority();\n      try {\n        const isSync = true;\n        const queue = syncQueue;\n        setCurrentUpdateLanePriority(SyncLanePriority);\n        runWithPriority(ImmediatePriority, () => {\n          for (; i < queue.length; i++) {\n            let callback = queue[i];\n            do {\n              callback = callback(isSync);\n            } while (callback !== null);\n          }\n        });\n        syncQueue = null;\n      } catch (error) {\n        // If something throws, leave the remaining callbacks on the queue.\n        if (syncQueue !== null) {\n          syncQueue = syncQueue.slice(i + 1);\n        }\n        // Resume flushing in the next tick\n        Scheduler_scheduleCallback(\n          Scheduler_ImmediatePriority,\n          flushSyncCallbackQueue,\n        );\n        throw error;\n      } finally {\n        setCurrentUpdateLanePriority(previousLanePriority);\n        isFlushingSyncQueue = false;\n      }\n    } else {\n      try {\n        const isSync = true;\n        const queue = syncQueue;\n        runWithPriority(ImmediatePriority, () => {\n          for (; i < queue.length; i++) {\n            let callback = queue[i];\n            do {\n              callback = callback(isSync);\n            } while (callback !== null);\n          }\n        });\n        syncQueue = null;\n      } catch (error) {\n        // If something throws, leave the remaining callbacks on the queue.\n        if (syncQueue !== null) {\n          syncQueue = syncQueue.slice(i + 1);\n        }\n        // Resume flushing in the next tick\n        Scheduler_scheduleCallback(\n          Scheduler_ImmediatePriority,\n          flushSyncCallbackQueue,\n        );\n        throw error;\n      } finally {\n        isFlushingSyncQueue = false;\n      }\n    }\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// TODO: this is special because it gets imported during build.\nexport default '17.0.0';\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Lane, Lanes} from './ReactFiberLane';\nimport type {Fiber} from './ReactInternalTypes';\nimport type {Wakeable} from 'shared/ReactTypes';\n\nimport {enableSchedulingProfiler} from 'shared/ReactFeatureFlags';\nimport ReactVersion from 'shared/ReactVersion';\nimport getComponentName from 'shared/getComponentName';\n\n/**\n * If performance exists and supports the subset of the User Timing API that we\n * require.\n */\nconst supportsUserTiming =\n  typeof performance !== 'undefined' && typeof performance.mark === 'function';\n\nfunction formatLanes(laneOrLanes: Lane | Lanes): string {\n  return ((laneOrLanes: any): number).toString();\n}\n\n// Create a mark on React initialization\nif (enableSchedulingProfiler) {\n  if (supportsUserTiming) {\n    performance.mark(`--react-init-${ReactVersion}`);\n  }\n}\n\nexport function markCommitStarted(lanes: Lanes): void {\n  if (enableSchedulingProfiler) {\n    if (supportsUserTiming) {\n      performance.mark(`--commit-start-${formatLanes(lanes)}`);\n    }\n  }\n}\n\nexport function markCommitStopped(): void {\n  if (enableSchedulingProfiler) {\n    if (supportsUserTiming) {\n      performance.mark('--commit-stop');\n    }\n  }\n}\n\nconst PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\n\n// $FlowFixMe: Flow cannot handle polymorphic WeakMaps\nconst wakeableIDs: WeakMap<Wakeable, number> = new PossiblyWeakMap();\nlet wakeableID: number = 0;\nfunction getWakeableID(wakeable: Wakeable): number {\n  if (!wakeableIDs.has(wakeable)) {\n    wakeableIDs.set(wakeable, wakeableID++);\n  }\n  return ((wakeableIDs.get(wakeable): any): number);\n}\n\nexport function markComponentSuspended(fiber: Fiber, wakeable: Wakeable): void {\n  if (enableSchedulingProfiler) {\n    if (supportsUserTiming) {\n      const id = getWakeableID(wakeable);\n      const componentName = getComponentName(fiber.type) || 'Unknown';\n      // TODO Add component stack id\n      performance.mark(`--suspense-suspend-${id}-${componentName}`);\n      wakeable.then(\n        () => performance.mark(`--suspense-resolved-${id}-${componentName}`),\n        () => performance.mark(`--suspense-rejected-${id}-${componentName}`),\n      );\n    }\n  }\n}\n\nexport function markLayoutEffectsStarted(lanes: Lanes): void {\n  if (enableSchedulingProfiler) {\n    if (supportsUserTiming) {\n      performance.mark(`--layout-effects-start-${formatLanes(lanes)}`);\n    }\n  }\n}\n\nexport function markLayoutEffectsStopped(): void {\n  if (enableSchedulingProfiler) {\n    if (supportsUserTiming) {\n      performance.mark('--layout-effects-stop');\n    }\n  }\n}\n\nexport function markPassiveEffectsStarted(lanes: Lanes): void {\n  if (enableSchedulingProfiler) {\n    if (supportsUserTiming) {\n      performance.mark(`--passive-effects-start-${formatLanes(lanes)}`);\n    }\n  }\n}\n\nexport function markPassiveEffectsStopped(): void {\n  if (enableSchedulingProfiler) {\n    if (supportsUserTiming) {\n      performance.mark('--passive-effects-stop');\n    }\n  }\n}\n\nexport function markRenderStarted(lanes: Lanes): void {\n  if (enableSchedulingProfiler) {\n    if (supportsUserTiming) {\n      performance.mark(`--render-start-${formatLanes(lanes)}`);\n    }\n  }\n}\n\nexport function markRenderYielded(): void {\n  if (enableSchedulingProfiler) {\n    if (supportsUserTiming) {\n      performance.mark('--render-yield');\n    }\n  }\n}\n\nexport function markRenderStopped(): void {\n  if (enableSchedulingProfiler) {\n    if (supportsUserTiming) {\n      performance.mark('--render-stop');\n    }\n  }\n}\n\nexport function markRenderScheduled(lane: Lane): void {\n  if (enableSchedulingProfiler) {\n    if (supportsUserTiming) {\n      performance.mark(`--schedule-render-${formatLanes(lane)}`);\n    }\n  }\n}\n\nexport function markForceUpdateScheduled(fiber: Fiber, lane: Lane): void {\n  if (enableSchedulingProfiler) {\n    if (supportsUserTiming) {\n      const componentName = getComponentName(fiber.type) || 'Unknown';\n      // TODO Add component stack id\n      performance.mark(\n        `--schedule-forced-update-${formatLanes(lane)}-${componentName}`,\n      );\n    }\n  }\n}\n\nexport function markStateUpdateScheduled(fiber: Fiber, lane: Lane): void {\n  if (enableSchedulingProfiler) {\n    if (supportsUserTiming) {\n      const componentName = getComponentName(fiber.type) || 'Unknown';\n      // TODO Add component stack id\n      performance.mark(\n        `--schedule-state-update-${formatLanes(lane)}-${componentName}`,\n      );\n    }\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nexport type TypeOfMode = number;\n\nexport const NoMode = 0b00000;\nexport const StrictMode = 0b00001;\n// TODO: Remove BlockingMode and ConcurrentMode by reading from the root\n// tag instead\nexport const BlockingMode = 0b00010;\nexport const ConcurrentMode = 0b00100;\nexport const ProfileMode = 0b01000;\nexport const DebugTracingMode = 0b10000;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\n\nconst {ReactCurrentBatchConfig} = ReactSharedInternals;\n\nexport const NoTransition = 0;\n\nexport function requestCurrentTransition(): number {\n  return ReactCurrentBatchConfig.transition;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\n/**\n * inlined Object.is polyfill to avoid requiring consumers ship their own\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n */\nfunction is(x: any, y: any) {\n  return (\n    (x === y && (x !== 0 || 1 / x === 1 / y)) || (x !== x && y !== y) // eslint-disable-line no-self-compare\n  );\n}\n\nconst objectIs: (x: any, y: any) => boolean =\n  typeof Object.is === 'function' ? Object.is : is;\n\nexport default objectIs;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport is from './objectIs';\n\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * Performs equality by iterating through keys on an object and returning false\n * when any key has values which are not strictly equal between the arguments.\n * Returns true when the values of all keys are strictly equal.\n */\nfunction shallowEqual(objA: mixed, objB: mixed): boolean {\n  if (is(objA, objB)) {\n    return true;\n  }\n\n  if (\n    typeof objA !== 'object' ||\n    objA === null ||\n    typeof objB !== 'object' ||\n    objB === null\n  ) {\n    return false;\n  }\n\n  const keysA = Object.keys(objA);\n  const keysB = Object.keys(objB);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  }\n\n  // Test for A's keys different from B.\n  for (let i = 0; i < keysA.length; i++) {\n    if (\n      !hasOwnProperty.call(objB, keysA[i]) ||\n      !is(objA[keysA[i]], objB[keysA[i]])\n    ) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport default shallowEqual;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactInternalTypes';\n\nimport {\n  HostComponent,\n  LazyComponent,\n  SuspenseComponent,\n  SuspenseListComponent,\n  FunctionComponent,\n  IndeterminateComponent,\n  ForwardRef,\n  SimpleMemoComponent,\n  Block,\n  ClassComponent,\n} from './ReactWorkTags';\nimport {\n  describeBuiltInComponentFrame,\n  describeFunctionComponentFrame,\n  describeClassComponentFrame,\n} from 'shared/ReactComponentStackFrame';\n\nfunction describeFiber(fiber: Fiber): string {\n  const owner: null | Function = __DEV__\n    ? fiber._debugOwner\n      ? fiber._debugOwner.type\n      : null\n    : null;\n  const source = __DEV__ ? fiber._debugSource : null;\n  switch (fiber.tag) {\n    case HostComponent:\n      return describeBuiltInComponentFrame(fiber.type, source, owner);\n    case LazyComponent:\n      return describeBuiltInComponentFrame('Lazy', source, owner);\n    case SuspenseComponent:\n      return describeBuiltInComponentFrame('Suspense', source, owner);\n    case SuspenseListComponent:\n      return describeBuiltInComponentFrame('SuspenseList', source, owner);\n    case FunctionComponent:\n    case IndeterminateComponent:\n    case SimpleMemoComponent:\n      return describeFunctionComponentFrame(fiber.type, source, owner);\n    case ForwardRef:\n      return describeFunctionComponentFrame(fiber.type.render, source, owner);\n    case Block:\n      return describeFunctionComponentFrame(fiber.type._render, source, owner);\n    case ClassComponent:\n      return describeClassComponentFrame(fiber.type, source, owner);\n    default:\n      return '';\n  }\n}\n\nexport function getStackByFiberInDevAndProd(workInProgress: Fiber): string {\n  try {\n    let info = '';\n    let node = workInProgress;\n    do {\n      info += describeFiber(node);\n      node = node.return;\n    } while (node);\n    return info;\n  } catch (x) {\n    return '\\nError generating stack: ' + x.message + '\\n' + x.stack;\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactInternalTypes';\n\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\nimport {getStackByFiberInDevAndProd} from './ReactFiberComponentStack';\nimport getComponentName from 'shared/getComponentName';\n\nconst ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n\nexport let current: Fiber | null = null;\nexport let isRendering: boolean = false;\n\nexport function getCurrentFiberOwnerNameInDevOrNull(): string | null {\n  if (__DEV__) {\n    if (current === null) {\n      return null;\n    }\n    const owner = current._debugOwner;\n    if (owner !== null && typeof owner !== 'undefined') {\n      return getComponentName(owner.type);\n    }\n  }\n  return null;\n}\n\nfunction getCurrentFiberStackInDev(): string {\n  if (__DEV__) {\n    if (current === null) {\n      return '';\n    }\n    // Safe because if current fiber exists, we are reconciling,\n    // and it is guaranteed to be the work-in-progress version.\n    return getStackByFiberInDevAndProd(current);\n  }\n  return '';\n}\n\nexport function resetCurrentFiber() {\n  if (__DEV__) {\n    ReactDebugCurrentFrame.getCurrentStack = null;\n    current = null;\n    isRendering = false;\n  }\n}\n\nexport function setCurrentFiber(fiber: Fiber) {\n  if (__DEV__) {\n    ReactDebugCurrentFrame.getCurrentStack = getCurrentFiberStackInDev;\n    current = fiber;\n    isRendering = false;\n  }\n}\n\nexport function setIsRendering(rendering: boolean) {\n  if (__DEV__) {\n    isRendering = rendering;\n  }\n}\n\nexport function getIsRendering() {\n  if (__DEV__) {\n    return isRendering;\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactInternalTypes';\n\nimport {\n  resetCurrentFiber as resetCurrentDebugFiberInDEV,\n  setCurrentFiber as setCurrentDebugFiberInDEV,\n} from './ReactCurrentFiber';\nimport getComponentName from 'shared/getComponentName';\nimport {StrictMode} from './ReactTypeOfMode';\n\ntype FiberArray = Array<Fiber>;\ntype FiberToFiberComponentsMap = Map<Fiber, FiberArray>;\n\nconst ReactStrictModeWarnings = {\n  recordUnsafeLifecycleWarnings(fiber: Fiber, instance: any): void {},\n  flushPendingUnsafeLifecycleWarnings(): void {},\n  recordLegacyContextWarning(fiber: Fiber, instance: any): void {},\n  flushLegacyContextWarning(): void {},\n  discardPendingWarnings(): void {},\n};\n\nif (__DEV__) {\n  const findStrictRoot = (fiber: Fiber): Fiber | null => {\n    let maybeStrictRoot = null;\n\n    let node = fiber;\n    while (node !== null) {\n      if (node.mode & StrictMode) {\n        maybeStrictRoot = node;\n      }\n      node = node.return;\n    }\n\n    return maybeStrictRoot;\n  };\n\n  const setToSortedString = set => {\n    const array = [];\n    set.forEach(value => {\n      array.push(value);\n    });\n    return array.sort().join(', ');\n  };\n\n  let pendingComponentWillMountWarnings: Array<Fiber> = [];\n  let pendingUNSAFE_ComponentWillMountWarnings: Array<Fiber> = [];\n  let pendingComponentWillReceivePropsWarnings: Array<Fiber> = [];\n  let pendingUNSAFE_ComponentWillReceivePropsWarnings: Array<Fiber> = [];\n  let pendingComponentWillUpdateWarnings: Array<Fiber> = [];\n  let pendingUNSAFE_ComponentWillUpdateWarnings: Array<Fiber> = [];\n\n  // Tracks components we have already warned about.\n  const didWarnAboutUnsafeLifecycles = new Set();\n\n  ReactStrictModeWarnings.recordUnsafeLifecycleWarnings = (\n    fiber: Fiber,\n    instance: any,\n  ) => {\n    // Dedup strategy: Warn once per component.\n    if (didWarnAboutUnsafeLifecycles.has(fiber.type)) {\n      return;\n    }\n\n    if (\n      typeof instance.componentWillMount === 'function' &&\n      // Don't warn about react-lifecycles-compat polyfilled components.\n      instance.componentWillMount.__suppressDeprecationWarning !== true\n    ) {\n      pendingComponentWillMountWarnings.push(fiber);\n    }\n\n    if (\n      fiber.mode & StrictMode &&\n      typeof instance.UNSAFE_componentWillMount === 'function'\n    ) {\n      pendingUNSAFE_ComponentWillMountWarnings.push(fiber);\n    }\n\n    if (\n      typeof instance.componentWillReceiveProps === 'function' &&\n      instance.componentWillReceiveProps.__suppressDeprecationWarning !== true\n    ) {\n      pendingComponentWillReceivePropsWarnings.push(fiber);\n    }\n\n    if (\n      fiber.mode & StrictMode &&\n      typeof instance.UNSAFE_componentWillReceiveProps === 'function'\n    ) {\n      pendingUNSAFE_ComponentWillReceivePropsWarnings.push(fiber);\n    }\n\n    if (\n      typeof instance.componentWillUpdate === 'function' &&\n      instance.componentWillUpdate.__suppressDeprecationWarning !== true\n    ) {\n      pendingComponentWillUpdateWarnings.push(fiber);\n    }\n\n    if (\n      fiber.mode & StrictMode &&\n      typeof instance.UNSAFE_componentWillUpdate === 'function'\n    ) {\n      pendingUNSAFE_ComponentWillUpdateWarnings.push(fiber);\n    }\n  };\n\n  ReactStrictModeWarnings.flushPendingUnsafeLifecycleWarnings = () => {\n    // We do an initial pass to gather component names\n    const componentWillMountUniqueNames = new Set();\n    if (pendingComponentWillMountWarnings.length > 0) {\n      pendingComponentWillMountWarnings.forEach(fiber => {\n        componentWillMountUniqueNames.add(\n          getComponentName(fiber.type) || 'Component',\n        );\n        didWarnAboutUnsafeLifecycles.add(fiber.type);\n      });\n      pendingComponentWillMountWarnings = [];\n    }\n\n    const UNSAFE_componentWillMountUniqueNames = new Set();\n    if (pendingUNSAFE_ComponentWillMountWarnings.length > 0) {\n      pendingUNSAFE_ComponentWillMountWarnings.forEach(fiber => {\n        UNSAFE_componentWillMountUniqueNames.add(\n          getComponentName(fiber.type) || 'Component',\n        );\n        didWarnAboutUnsafeLifecycles.add(fiber.type);\n      });\n      pendingUNSAFE_ComponentWillMountWarnings = [];\n    }\n\n    const componentWillReceivePropsUniqueNames = new Set();\n    if (pendingComponentWillReceivePropsWarnings.length > 0) {\n      pendingComponentWillReceivePropsWarnings.forEach(fiber => {\n        componentWillReceivePropsUniqueNames.add(\n          getComponentName(fiber.type) || 'Component',\n        );\n        didWarnAboutUnsafeLifecycles.add(fiber.type);\n      });\n\n      pendingComponentWillReceivePropsWarnings = [];\n    }\n\n    const UNSAFE_componentWillReceivePropsUniqueNames = new Set();\n    if (pendingUNSAFE_ComponentWillReceivePropsWarnings.length > 0) {\n      pendingUNSAFE_ComponentWillReceivePropsWarnings.forEach(fiber => {\n        UNSAFE_componentWillReceivePropsUniqueNames.add(\n          getComponentName(fiber.type) || 'Component',\n        );\n        didWarnAboutUnsafeLifecycles.add(fiber.type);\n      });\n\n      pendingUNSAFE_ComponentWillReceivePropsWarnings = [];\n    }\n\n    const componentWillUpdateUniqueNames = new Set();\n    if (pendingComponentWillUpdateWarnings.length > 0) {\n      pendingComponentWillUpdateWarnings.forEach(fiber => {\n        componentWillUpdateUniqueNames.add(\n          getComponentName(fiber.type) || 'Component',\n        );\n        didWarnAboutUnsafeLifecycles.add(fiber.type);\n      });\n\n      pendingComponentWillUpdateWarnings = [];\n    }\n\n    const UNSAFE_componentWillUpdateUniqueNames = new Set();\n    if (pendingUNSAFE_ComponentWillUpdateWarnings.length > 0) {\n      pendingUNSAFE_ComponentWillUpdateWarnings.forEach(fiber => {\n        UNSAFE_componentWillUpdateUniqueNames.add(\n          getComponentName(fiber.type) || 'Component',\n        );\n        didWarnAboutUnsafeLifecycles.add(fiber.type);\n      });\n\n      pendingUNSAFE_ComponentWillUpdateWarnings = [];\n    }\n\n    // Finally, we flush all the warnings\n    // UNSAFE_ ones before the deprecated ones, since they'll be 'louder'\n    if (UNSAFE_componentWillMountUniqueNames.size > 0) {\n      const sortedNames = setToSortedString(\n        UNSAFE_componentWillMountUniqueNames,\n      );\n      console.error(\n        'Using UNSAFE_componentWillMount in strict mode is not recommended and may indicate bugs in your code. ' +\n          'See https://reactjs.org/link/unsafe-component-lifecycles for details.\\n\\n' +\n          '* Move code with side effects to componentDidMount, and set initial state in the constructor.\\n' +\n          '\\nPlease update the following components: %s',\n        sortedNames,\n      );\n    }\n\n    if (UNSAFE_componentWillReceivePropsUniqueNames.size > 0) {\n      const sortedNames = setToSortedString(\n        UNSAFE_componentWillReceivePropsUniqueNames,\n      );\n      console.error(\n        'Using UNSAFE_componentWillReceiveProps in strict mode is not recommended ' +\n          'and may indicate bugs in your code. ' +\n          'See https://reactjs.org/link/unsafe-component-lifecycles for details.\\n\\n' +\n          '* Move data fetching code or side effects to componentDidUpdate.\\n' +\n          \"* If you're updating state whenever props change, \" +\n          'refactor your code to use memoization techniques or move it to ' +\n          'static getDerivedStateFromProps. Learn more at: https://reactjs.org/link/derived-state\\n' +\n          '\\nPlease update the following components: %s',\n        sortedNames,\n      );\n    }\n\n    if (UNSAFE_componentWillUpdateUniqueNames.size > 0) {\n      const sortedNames = setToSortedString(\n        UNSAFE_componentWillUpdateUniqueNames,\n      );\n      console.error(\n        'Using UNSAFE_componentWillUpdate in strict mode is not recommended ' +\n          'and may indicate bugs in your code. ' +\n          'See https://reactjs.org/link/unsafe-component-lifecycles for details.\\n\\n' +\n          '* Move data fetching code or side effects to componentDidUpdate.\\n' +\n          '\\nPlease update the following components: %s',\n        sortedNames,\n      );\n    }\n\n    if (componentWillMountUniqueNames.size > 0) {\n      const sortedNames = setToSortedString(componentWillMountUniqueNames);\n\n      console.warn(\n        'componentWillMount has been renamed, and is not recommended for use. ' +\n          'See https://reactjs.org/link/unsafe-component-lifecycles for details.\\n\\n' +\n          '* Move code with side effects to componentDidMount, and set initial state in the constructor.\\n' +\n          '* Rename componentWillMount to UNSAFE_componentWillMount to suppress ' +\n          'this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. ' +\n          'To rename all deprecated lifecycles to their new names, you can run ' +\n          '`npx react-codemod rename-unsafe-lifecycles` in your project source folder.\\n' +\n          '\\nPlease update the following components: %s',\n        sortedNames,\n      );\n    }\n\n    if (componentWillReceivePropsUniqueNames.size > 0) {\n      const sortedNames = setToSortedString(\n        componentWillReceivePropsUniqueNames,\n      );\n\n      console.warn(\n        'componentWillReceiveProps has been renamed, and is not recommended for use. ' +\n          'See https://reactjs.org/link/unsafe-component-lifecycles for details.\\n\\n' +\n          '* Move data fetching code or side effects to componentDidUpdate.\\n' +\n          \"* If you're updating state whenever props change, refactor your \" +\n          'code to use memoization techniques or move it to ' +\n          'static getDerivedStateFromProps. Learn more at: https://reactjs.org/link/derived-state\\n' +\n          '* Rename componentWillReceiveProps to UNSAFE_componentWillReceiveProps to suppress ' +\n          'this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. ' +\n          'To rename all deprecated lifecycles to their new names, you can run ' +\n          '`npx react-codemod rename-unsafe-lifecycles` in your project source folder.\\n' +\n          '\\nPlease update the following components: %s',\n        sortedNames,\n      );\n    }\n\n    if (componentWillUpdateUniqueNames.size > 0) {\n      const sortedNames = setToSortedString(componentWillUpdateUniqueNames);\n\n      console.warn(\n        'componentWillUpdate has been renamed, and is not recommended for use. ' +\n          'See https://reactjs.org/link/unsafe-component-lifecycles for details.\\n\\n' +\n          '* Move data fetching code or side effects to componentDidUpdate.\\n' +\n          '* Rename componentWillUpdate to UNSAFE_componentWillUpdate to suppress ' +\n          'this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. ' +\n          'To rename all deprecated lifecycles to their new names, you can run ' +\n          '`npx react-codemod rename-unsafe-lifecycles` in your project source folder.\\n' +\n          '\\nPlease update the following components: %s',\n        sortedNames,\n      );\n    }\n  };\n\n  let pendingLegacyContextWarning: FiberToFiberComponentsMap = new Map();\n\n  // Tracks components we have already warned about.\n  const didWarnAboutLegacyContext = new Set();\n\n  ReactStrictModeWarnings.recordLegacyContextWarning = (\n    fiber: Fiber,\n    instance: any,\n  ) => {\n    const strictRoot = findStrictRoot(fiber);\n    if (strictRoot === null) {\n      console.error(\n        'Expected to find a StrictMode component in a strict mode tree. ' +\n          'This error is likely caused by a bug in React. Please file an issue.',\n      );\n      return;\n    }\n\n    // Dedup strategy: Warn once per component.\n    if (didWarnAboutLegacyContext.has(fiber.type)) {\n      return;\n    }\n\n    let warningsForRoot = pendingLegacyContextWarning.get(strictRoot);\n\n    if (\n      fiber.type.contextTypes != null ||\n      fiber.type.childContextTypes != null ||\n      (instance !== null && typeof instance.getChildContext === 'function')\n    ) {\n      if (warningsForRoot === undefined) {\n        warningsForRoot = [];\n        pendingLegacyContextWarning.set(strictRoot, warningsForRoot);\n      }\n      warningsForRoot.push(fiber);\n    }\n  };\n\n  ReactStrictModeWarnings.flushLegacyContextWarning = () => {\n    ((pendingLegacyContextWarning: any): FiberToFiberComponentsMap).forEach(\n      (fiberArray: FiberArray, strictRoot) => {\n        if (fiberArray.length === 0) {\n          return;\n        }\n        const firstFiber = fiberArray[0];\n\n        const uniqueNames = new Set();\n        fiberArray.forEach(fiber => {\n          uniqueNames.add(getComponentName(fiber.type) || 'Component');\n          didWarnAboutLegacyContext.add(fiber.type);\n        });\n\n        const sortedNames = setToSortedString(uniqueNames);\n\n        try {\n          setCurrentDebugFiberInDEV(firstFiber);\n          console.error(\n            'Legacy context API has been detected within a strict-mode tree.' +\n              '\\n\\nThe old API will be supported in all 16.x releases, but applications ' +\n              'using it should migrate to the new version.' +\n              '\\n\\nPlease update the following components: %s' +\n              '\\n\\nLearn more about this warning here: https://reactjs.org/link/legacy-context',\n            sortedNames,\n          );\n        } finally {\n          resetCurrentDebugFiberInDEV();\n        }\n      },\n    );\n  };\n\n  ReactStrictModeWarnings.discardPendingWarnings = () => {\n    pendingComponentWillMountWarnings = [];\n    pendingUNSAFE_ComponentWillMountWarnings = [];\n    pendingComponentWillReceivePropsWarnings = [];\n    pendingUNSAFE_ComponentWillReceivePropsWarnings = [];\n    pendingComponentWillUpdateWarnings = [];\n    pendingUNSAFE_ComponentWillUpdateWarnings = [];\n    pendingLegacyContextWarning = new Map();\n  };\n}\n\nexport default ReactStrictModeWarnings;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nexport function resolveDefaultProps(Component: any, baseProps: Object): Object {\n  if (Component && Component.defaultProps) {\n    // Resolve default props. Taken from ReactElement\n    const props = Object.assign({}, baseProps);\n    const defaultProps = Component.defaultProps;\n    for (const propName in defaultProps) {\n      if (props[propName] === undefined) {\n        props[propName] = defaultProps[propName];\n      }\n    }\n    return props;\n  }\n  return baseProps;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\n// Max 31 bit integer. The max integer size in V8 for 32-bit systems.\n// Math.pow(2, 30) - 1\n// 0b111111111111111111111111111111\nexport const MAX_SIGNED_31_BIT_INT = 1073741823;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {ReactContext} from 'shared/ReactTypes';\nimport type {Fiber, ContextDependency} from './ReactInternalTypes';\nimport type {StackCursor} from './ReactFiberStack.old';\nimport type {Lanes} from './ReactFiberLane';\n\nimport {isPrimaryRenderer} from './ReactFiberHostConfig';\nimport {createCursor, push, pop} from './ReactFiberStack.old';\nimport {MAX_SIGNED_31_BIT_INT} from './MaxInts';\nimport {\n  ContextProvider,\n  ClassComponent,\n  DehydratedFragment,\n} from './ReactWorkTags';\nimport {\n  NoLanes,\n  NoTimestamp,\n  isSubsetOfLanes,\n  includesSomeLane,\n  mergeLanes,\n  pickArbitraryLane,\n} from './ReactFiberLane';\n\nimport invariant from 'shared/invariant';\nimport is from 'shared/objectIs';\nimport {createUpdate, enqueueUpdate, ForceUpdate} from './ReactUpdateQueue.old';\nimport {markWorkInProgressReceivedUpdate} from './ReactFiberBeginWork.old';\nimport {enableSuspenseServerRenderer} from 'shared/ReactFeatureFlags';\n\nconst valueCursor: StackCursor<mixed> = createCursor(null);\n\nlet rendererSigil;\nif (__DEV__) {\n  // Use this to detect multiple renderers using the same context\n  rendererSigil = {};\n}\n\nlet currentlyRenderingFiber: Fiber | null = null;\nlet lastContextDependency: ContextDependency<mixed> | null = null;\nlet lastContextWithAllBitsObserved: ReactContext<any> | null = null;\n\nlet isDisallowedContextReadInDEV: boolean = false;\n\nexport function resetContextDependencies(): void {\n  // This is called right before React yields execution, to ensure `readContext`\n  // cannot be called outside the render phase.\n  currentlyRenderingFiber = null;\n  lastContextDependency = null;\n  lastContextWithAllBitsObserved = null;\n  if (__DEV__) {\n    isDisallowedContextReadInDEV = false;\n  }\n}\n\nexport function enterDisallowedContextReadInDEV(): void {\n  if (__DEV__) {\n    isDisallowedContextReadInDEV = true;\n  }\n}\n\nexport function exitDisallowedContextReadInDEV(): void {\n  if (__DEV__) {\n    isDisallowedContextReadInDEV = false;\n  }\n}\n\nexport function pushProvider<T>(providerFiber: Fiber, nextValue: T): void {\n  const context: ReactContext<T> = providerFiber.type._context;\n\n  if (isPrimaryRenderer) {\n    push(valueCursor, context._currentValue, providerFiber);\n\n    context._currentValue = nextValue;\n    if (__DEV__) {\n      if (\n        context._currentRenderer !== undefined &&\n        context._currentRenderer !== null &&\n        context._currentRenderer !== rendererSigil\n      ) {\n        console.error(\n          'Detected multiple renderers concurrently rendering the ' +\n            'same context provider. This is currently unsupported.',\n        );\n      }\n      context._currentRenderer = rendererSigil;\n    }\n  } else {\n    push(valueCursor, context._currentValue2, providerFiber);\n\n    context._currentValue2 = nextValue;\n    if (__DEV__) {\n      if (\n        context._currentRenderer2 !== undefined &&\n        context._currentRenderer2 !== null &&\n        context._currentRenderer2 !== rendererSigil\n      ) {\n        console.error(\n          'Detected multiple renderers concurrently rendering the ' +\n            'same context provider. This is currently unsupported.',\n        );\n      }\n      context._currentRenderer2 = rendererSigil;\n    }\n  }\n}\n\nexport function popProvider(providerFiber: Fiber): void {\n  const currentValue = valueCursor.current;\n\n  pop(valueCursor, providerFiber);\n\n  const context: ReactContext<any> = providerFiber.type._context;\n  if (isPrimaryRenderer) {\n    context._currentValue = currentValue;\n  } else {\n    context._currentValue2 = currentValue;\n  }\n}\n\nexport function calculateChangedBits<T>(\n  context: ReactContext<T>,\n  newValue: T,\n  oldValue: T,\n) {\n  if (is(oldValue, newValue)) {\n    // No change\n    return 0;\n  } else {\n    const changedBits =\n      typeof context._calculateChangedBits === 'function'\n        ? context._calculateChangedBits(oldValue, newValue)\n        : MAX_SIGNED_31_BIT_INT;\n\n    if (__DEV__) {\n      if ((changedBits & MAX_SIGNED_31_BIT_INT) !== changedBits) {\n        console.error(\n          'calculateChangedBits: Expected the return value to be a ' +\n            '31-bit integer. Instead received: %s',\n          changedBits,\n        );\n      }\n    }\n    return changedBits | 0;\n  }\n}\n\nexport function scheduleWorkOnParentPath(\n  parent: Fiber | null,\n  renderLanes: Lanes,\n) {\n  // Update the child lanes of all the ancestors, including the alternates.\n  let node = parent;\n  while (node !== null) {\n    const alternate = node.alternate;\n    if (!isSubsetOfLanes(node.childLanes, renderLanes)) {\n      node.childLanes = mergeLanes(node.childLanes, renderLanes);\n      if (alternate !== null) {\n        alternate.childLanes = mergeLanes(alternate.childLanes, renderLanes);\n      }\n    } else if (\n      alternate !== null &&\n      !isSubsetOfLanes(alternate.childLanes, renderLanes)\n    ) {\n      alternate.childLanes = mergeLanes(alternate.childLanes, renderLanes);\n    } else {\n      // Neither alternate was updated, which means the rest of the\n      // ancestor path already has sufficient priority.\n      break;\n    }\n    node = node.return;\n  }\n}\n\nexport function propagateContextChange(\n  workInProgress: Fiber,\n  context: ReactContext<mixed>,\n  changedBits: number,\n  renderLanes: Lanes,\n): void {\n  let fiber = workInProgress.child;\n  if (fiber !== null) {\n    // Set the return pointer of the child to the work-in-progress fiber.\n    fiber.return = workInProgress;\n  }\n  while (fiber !== null) {\n    let nextFiber;\n\n    // Visit this fiber.\n    const list = fiber.dependencies;\n    if (list !== null) {\n      nextFiber = fiber.child;\n\n      let dependency = list.firstContext;\n      while (dependency !== null) {\n        // Check if the context matches.\n        if (\n          dependency.context === context &&\n          (dependency.observedBits & changedBits) !== 0\n        ) {\n          // Match! Schedule an update on this fiber.\n\n          if (fiber.tag === ClassComponent) {\n            // Schedule a force update on the work-in-progress.\n            const update = createUpdate(\n              NoTimestamp,\n              pickArbitraryLane(renderLanes),\n            );\n            update.tag = ForceUpdate;\n            // TODO: Because we don't have a work-in-progress, this will add the\n            // update to the current fiber, too, which means it will persist even if\n            // this render is thrown away. Since it's a race condition, not sure it's\n            // worth fixing.\n            enqueueUpdate(fiber, update);\n          }\n          fiber.lanes = mergeLanes(fiber.lanes, renderLanes);\n          const alternate = fiber.alternate;\n          if (alternate !== null) {\n            alternate.lanes = mergeLanes(alternate.lanes, renderLanes);\n          }\n          scheduleWorkOnParentPath(fiber.return, renderLanes);\n\n          // Mark the updated lanes on the list, too.\n          list.lanes = mergeLanes(list.lanes, renderLanes);\n\n          // Since we already found a match, we can stop traversing the\n          // dependency list.\n          break;\n        }\n        dependency = dependency.next;\n      }\n    } else if (fiber.tag === ContextProvider) {\n      // Don't scan deeper if this is a matching provider\n      nextFiber = fiber.type === workInProgress.type ? null : fiber.child;\n    } else if (\n      enableSuspenseServerRenderer &&\n      fiber.tag === DehydratedFragment\n    ) {\n      // If a dehydrated suspense boundary is in this subtree, we don't know\n      // if it will have any context consumers in it. The best we can do is\n      // mark it as having updates.\n      const parentSuspense = fiber.return;\n      invariant(\n        parentSuspense !== null,\n        'We just came from a parent so we must have had a parent. This is a bug in React.',\n      );\n      parentSuspense.lanes = mergeLanes(parentSuspense.lanes, renderLanes);\n      const alternate = parentSuspense.alternate;\n      if (alternate !== null) {\n        alternate.lanes = mergeLanes(alternate.lanes, renderLanes);\n      }\n      // This is intentionally passing this fiber as the parent\n      // because we want to schedule this fiber as having work\n      // on its children. We'll use the childLanes on\n      // this fiber to indicate that a context has changed.\n      scheduleWorkOnParentPath(parentSuspense, renderLanes);\n      nextFiber = fiber.sibling;\n    } else {\n      // Traverse down.\n      nextFiber = fiber.child;\n    }\n\n    if (nextFiber !== null) {\n      // Set the return pointer of the child to the work-in-progress fiber.\n      nextFiber.return = fiber;\n    } else {\n      // No child. Traverse to next sibling.\n      nextFiber = fiber;\n      while (nextFiber !== null) {\n        if (nextFiber === workInProgress) {\n          // We're back to the root of this subtree. Exit.\n          nextFiber = null;\n          break;\n        }\n        const sibling = nextFiber.sibling;\n        if (sibling !== null) {\n          // Set the return pointer of the sibling to the work-in-progress fiber.\n          sibling.return = nextFiber.return;\n          nextFiber = sibling;\n          break;\n        }\n        // No more siblings. Traverse up.\n        nextFiber = nextFiber.return;\n      }\n    }\n    fiber = nextFiber;\n  }\n}\n\nexport function prepareToReadContext(\n  workInProgress: Fiber,\n  renderLanes: Lanes,\n): void {\n  currentlyRenderingFiber = workInProgress;\n  lastContextDependency = null;\n  lastContextWithAllBitsObserved = null;\n\n  const dependencies = workInProgress.dependencies;\n  if (dependencies !== null) {\n    const firstContext = dependencies.firstContext;\n    if (firstContext !== null) {\n      if (includesSomeLane(dependencies.lanes, renderLanes)) {\n        // Context list has a pending update. Mark that this fiber performed work.\n        markWorkInProgressReceivedUpdate();\n      }\n      // Reset the work-in-progress list\n      dependencies.firstContext = null;\n    }\n  }\n}\n\nexport function readContext<T>(\n  context: ReactContext<T>,\n  observedBits: void | number | boolean,\n): T {\n  if (__DEV__) {\n    // This warning would fire if you read context inside a Hook like useMemo.\n    // Unlike the class check below, it's not enforced in production for perf.\n    if (isDisallowedContextReadInDEV) {\n      console.error(\n        'Context can only be read while React is rendering. ' +\n          'In classes, you can read it in the render method or getDerivedStateFromProps. ' +\n          'In function components, you can read it directly in the function body, but not ' +\n          'inside Hooks like useReducer() or useMemo().',\n      );\n    }\n  }\n\n  if (lastContextWithAllBitsObserved === context) {\n    // Nothing to do. We already observe everything in this context.\n  } else if (observedBits === false || observedBits === 0) {\n    // Do not observe any updates.\n  } else {\n    let resolvedObservedBits; // Avoid deopting on observable arguments or heterogeneous types.\n    if (\n      typeof observedBits !== 'number' ||\n      observedBits === MAX_SIGNED_31_BIT_INT\n    ) {\n      // Observe all updates.\n      lastContextWithAllBitsObserved = ((context: any): ReactContext<mixed>);\n      resolvedObservedBits = MAX_SIGNED_31_BIT_INT;\n    } else {\n      resolvedObservedBits = observedBits;\n    }\n\n    const contextItem = {\n      context: ((context: any): ReactContext<mixed>),\n      observedBits: resolvedObservedBits,\n      next: null,\n    };\n\n    if (lastContextDependency === null) {\n      invariant(\n        currentlyRenderingFiber !== null,\n        'Context can only be read while React is rendering. ' +\n          'In classes, you can read it in the render method or getDerivedStateFromProps. ' +\n          'In function components, you can read it directly in the function body, but not ' +\n          'inside Hooks like useReducer() or useMemo().',\n      );\n\n      // This is the first dependency for this component. Create a new list.\n      lastContextDependency = contextItem;\n      currentlyRenderingFiber.dependencies = {\n        lanes: NoLanes,\n        firstContext: contextItem,\n        responders: null,\n      };\n    } else {\n      // Append a new context item.\n      lastContextDependency = lastContextDependency.next = contextItem;\n    }\n  }\n  return isPrimaryRenderer ? context._currentValue : context._currentValue2;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\n// UpdateQueue is a linked list of prioritized updates.\n//\n// Like fibers, update queues come in pairs: a current queue, which represents\n// the visible state of the screen, and a work-in-progress queue, which can be\n// mutated and processed asynchronously before it is committed — a form of\n// double buffering. If a work-in-progress render is discarded before finishing,\n// we create a new work-in-progress by cloning the current queue.\n//\n// Both queues share a persistent, singly-linked list structure. To schedule an\n// update, we append it to the end of both queues. Each queue maintains a\n// pointer to first update in the persistent list that hasn't been processed.\n// The work-in-progress pointer always has a position equal to or greater than\n// the current queue, since we always work on that one. The current queue's\n// pointer is only updated during the commit phase, when we swap in the\n// work-in-progress.\n//\n// For example:\n//\n//   Current pointer:           A - B - C - D - E - F\n//   Work-in-progress pointer:              D - E - F\n//                                          ^\n//                                          The work-in-progress queue has\n//                                          processed more updates than current.\n//\n// The reason we append to both queues is because otherwise we might drop\n// updates without ever processing them. For example, if we only add updates to\n// the work-in-progress queue, some updates could be lost whenever a work-in\n// -progress render restarts by cloning from current. Similarly, if we only add\n// updates to the current queue, the updates will be lost whenever an already\n// in-progress queue commits and swaps with the current queue. However, by\n// adding to both queues, we guarantee that the update will be part of the next\n// work-in-progress. (And because the work-in-progress queue becomes the\n// current queue once it commits, there's no danger of applying the same\n// update twice.)\n//\n// Prioritization\n// --------------\n//\n// Updates are not sorted by priority, but by insertion; new updates are always\n// appended to the end of the list.\n//\n// The priority is still important, though. When processing the update queue\n// during the render phase, only the updates with sufficient priority are\n// included in the result. If we skip an update because it has insufficient\n// priority, it remains in the queue to be processed later, during a lower\n// priority render. Crucially, all updates subsequent to a skipped update also\n// remain in the queue *regardless of their priority*. That means high priority\n// updates are sometimes processed twice, at two separate priorities. We also\n// keep track of a base state, that represents the state before the first\n// update in the queue is applied.\n//\n// For example:\n//\n//   Given a base state of '', and the following queue of updates\n//\n//     A1 - B2 - C1 - D2\n//\n//   where the number indicates the priority, and the update is applied to the\n//   previous state by appending a letter, React will process these updates as\n//   two separate renders, one per distinct priority level:\n//\n//   First render, at priority 1:\n//     Base state: ''\n//     Updates: [A1, C1]\n//     Result state: 'AC'\n//\n//   Second render, at priority 2:\n//     Base state: 'A'            <-  The base state does not include C1,\n//                                    because B2 was skipped.\n//     Updates: [B2, C1, D2]      <-  C1 was rebased on top of B2\n//     Result state: 'ABCD'\n//\n// Because we process updates in insertion order, and rebase high priority\n// updates when preceding updates are skipped, the final result is deterministic\n// regardless of priority. Intermediate state may vary according to system\n// resources, but the final state is always the same.\n\nimport type {Fiber} from './ReactInternalTypes';\nimport type {Lanes, Lane} from './ReactFiberLane';\n\nimport {NoLane, NoLanes, isSubsetOfLanes, mergeLanes} from './ReactFiberLane';\nimport {\n  enterDisallowedContextReadInDEV,\n  exitDisallowedContextReadInDEV,\n} from './ReactFiberNewContext.old';\nimport {Callback, ShouldCapture, DidCapture} from './ReactFiberFlags';\n\nimport {debugRenderPhaseSideEffectsForStrictMode} from 'shared/ReactFeatureFlags';\n\nimport {StrictMode} from './ReactTypeOfMode';\nimport {markSkippedUpdateLanes} from './ReactFiberWorkLoop.old';\n\nimport invariant from 'shared/invariant';\n\nimport {disableLogs, reenableLogs} from 'shared/ConsolePatchingDev';\n\nexport type Update<State> = {|\n  // TODO: Temporary field. Will remove this by storing a map of\n  // transition -> event time on the root.\n  eventTime: number,\n  lane: Lane,\n\n  tag: 0 | 1 | 2 | 3,\n  payload: any,\n  callback: (() => mixed) | null,\n\n  next: Update<State> | null,\n|};\n\ntype SharedQueue<State> = {|\n  pending: Update<State> | null,\n|};\n\nexport type UpdateQueue<State> = {|\n  baseState: State,\n  firstBaseUpdate: Update<State> | null,\n  lastBaseUpdate: Update<State> | null,\n  shared: SharedQueue<State>,\n  effects: Array<Update<State>> | null,\n|};\n\nexport const UpdateState = 0;\nexport const ReplaceState = 1;\nexport const ForceUpdate = 2;\nexport const CaptureUpdate = 3;\n\n// Global state that is reset at the beginning of calling `processUpdateQueue`.\n// It should only be read right after calling `processUpdateQueue`, via\n// `checkHasForceUpdateAfterProcessing`.\nlet hasForceUpdate = false;\n\nlet didWarnUpdateInsideUpdate;\nlet currentlyProcessingQueue;\nexport let resetCurrentlyProcessingQueue;\nif (__DEV__) {\n  didWarnUpdateInsideUpdate = false;\n  currentlyProcessingQueue = null;\n  resetCurrentlyProcessingQueue = () => {\n    currentlyProcessingQueue = null;\n  };\n}\n\nexport function initializeUpdateQueue<State>(fiber: Fiber): void {\n  const queue: UpdateQueue<State> = {\n    baseState: fiber.memoizedState,\n    firstBaseUpdate: null,\n    lastBaseUpdate: null,\n    shared: {\n      pending: null,\n    },\n    effects: null,\n  };\n  fiber.updateQueue = queue;\n}\n\nexport function cloneUpdateQueue<State>(\n  current: Fiber,\n  workInProgress: Fiber,\n): void {\n  // Clone the update queue from current. Unless it's already a clone.\n  const queue: UpdateQueue<State> = (workInProgress.updateQueue: any);\n  const currentQueue: UpdateQueue<State> = (current.updateQueue: any);\n  if (queue === currentQueue) {\n    const clone: UpdateQueue<State> = {\n      baseState: currentQueue.baseState,\n      firstBaseUpdate: currentQueue.firstBaseUpdate,\n      lastBaseUpdate: currentQueue.lastBaseUpdate,\n      shared: currentQueue.shared,\n      effects: currentQueue.effects,\n    };\n    workInProgress.updateQueue = clone;\n  }\n}\n\nexport function createUpdate(eventTime: number, lane: Lane): Update<*> {\n  const update: Update<*> = {\n    eventTime,\n    lane,\n\n    tag: UpdateState,\n    payload: null,\n    callback: null,\n\n    next: null,\n  };\n  return update;\n}\n\nexport function enqueueUpdate<State>(fiber: Fiber, update: Update<State>) {\n  const updateQueue = fiber.updateQueue;\n  if (updateQueue === null) {\n    // Only occurs if the fiber has been unmounted.\n    return;\n  }\n\n  const sharedQueue: SharedQueue<State> = (updateQueue: any).shared;\n  const pending = sharedQueue.pending;\n  if (pending === null) {\n    // This is the first update. Create a circular list.\n    update.next = update;\n  } else {\n    update.next = pending.next;\n    pending.next = update;\n  }\n  sharedQueue.pending = update;\n\n  if (__DEV__) {\n    if (\n      currentlyProcessingQueue === sharedQueue &&\n      !didWarnUpdateInsideUpdate\n    ) {\n      console.error(\n        'An update (setState, replaceState, or forceUpdate) was scheduled ' +\n          'from inside an update function. Update functions should be pure, ' +\n          'with zero side-effects. Consider using componentDidUpdate or a ' +\n          'callback.',\n      );\n      didWarnUpdateInsideUpdate = true;\n    }\n  }\n}\n\nexport function enqueueCapturedUpdate<State>(\n  workInProgress: Fiber,\n  capturedUpdate: Update<State>,\n) {\n  // Captured updates are updates that are thrown by a child during the render\n  // phase. They should be discarded if the render is aborted. Therefore,\n  // we should only put them on the work-in-progress queue, not the current one.\n  let queue: UpdateQueue<State> = (workInProgress.updateQueue: any);\n\n  // Check if the work-in-progress queue is a clone.\n  const current = workInProgress.alternate;\n  if (current !== null) {\n    const currentQueue: UpdateQueue<State> = (current.updateQueue: any);\n    if (queue === currentQueue) {\n      // The work-in-progress queue is the same as current. This happens when\n      // we bail out on a parent fiber that then captures an error thrown by\n      // a child. Since we want to append the update only to the work-in\n      // -progress queue, we need to clone the updates. We usually clone during\n      // processUpdateQueue, but that didn't happen in this case because we\n      // skipped over the parent when we bailed out.\n      let newFirst = null;\n      let newLast = null;\n      const firstBaseUpdate = queue.firstBaseUpdate;\n      if (firstBaseUpdate !== null) {\n        // Loop through the updates and clone them.\n        let update = firstBaseUpdate;\n        do {\n          const clone: Update<State> = {\n            eventTime: update.eventTime,\n            lane: update.lane,\n\n            tag: update.tag,\n            payload: update.payload,\n            callback: update.callback,\n\n            next: null,\n          };\n          if (newLast === null) {\n            newFirst = newLast = clone;\n          } else {\n            newLast.next = clone;\n            newLast = clone;\n          }\n          update = update.next;\n        } while (update !== null);\n\n        // Append the captured update the end of the cloned list.\n        if (newLast === null) {\n          newFirst = newLast = capturedUpdate;\n        } else {\n          newLast.next = capturedUpdate;\n          newLast = capturedUpdate;\n        }\n      } else {\n        // There are no base updates.\n        newFirst = newLast = capturedUpdate;\n      }\n      queue = {\n        baseState: currentQueue.baseState,\n        firstBaseUpdate: newFirst,\n        lastBaseUpdate: newLast,\n        shared: currentQueue.shared,\n        effects: currentQueue.effects,\n      };\n      workInProgress.updateQueue = queue;\n      return;\n    }\n  }\n\n  // Append the update to the end of the list.\n  const lastBaseUpdate = queue.lastBaseUpdate;\n  if (lastBaseUpdate === null) {\n    queue.firstBaseUpdate = capturedUpdate;\n  } else {\n    lastBaseUpdate.next = capturedUpdate;\n  }\n  queue.lastBaseUpdate = capturedUpdate;\n}\n\nfunction getStateFromUpdate<State>(\n  workInProgress: Fiber,\n  queue: UpdateQueue<State>,\n  update: Update<State>,\n  prevState: State,\n  nextProps: any,\n  instance: any,\n): any {\n  switch (update.tag) {\n    case ReplaceState: {\n      const payload = update.payload;\n      if (typeof payload === 'function') {\n        // Updater function\n        if (__DEV__) {\n          enterDisallowedContextReadInDEV();\n        }\n        const nextState = payload.call(instance, prevState, nextProps);\n        if (__DEV__) {\n          if (\n            debugRenderPhaseSideEffectsForStrictMode &&\n            workInProgress.mode & StrictMode\n          ) {\n            disableLogs();\n            try {\n              payload.call(instance, prevState, nextProps);\n            } finally {\n              reenableLogs();\n            }\n          }\n          exitDisallowedContextReadInDEV();\n        }\n        return nextState;\n      }\n      // State object\n      return payload;\n    }\n    case CaptureUpdate: {\n      workInProgress.flags =\n        (workInProgress.flags & ~ShouldCapture) | DidCapture;\n    }\n    // Intentional fallthrough\n    case UpdateState: {\n      const payload = update.payload;\n      let partialState;\n      if (typeof payload === 'function') {\n        // Updater function\n        if (__DEV__) {\n          enterDisallowedContextReadInDEV();\n        }\n        partialState = payload.call(instance, prevState, nextProps);\n        if (__DEV__) {\n          if (\n            debugRenderPhaseSideEffectsForStrictMode &&\n            workInProgress.mode & StrictMode\n          ) {\n            disableLogs();\n            try {\n              payload.call(instance, prevState, nextProps);\n            } finally {\n              reenableLogs();\n            }\n          }\n          exitDisallowedContextReadInDEV();\n        }\n      } else {\n        // Partial state object\n        partialState = payload;\n      }\n      if (partialState === null || partialState === undefined) {\n        // Null and undefined are treated as no-ops.\n        return prevState;\n      }\n      // Merge the partial state and the previous state.\n      return Object.assign({}, prevState, partialState);\n    }\n    case ForceUpdate: {\n      hasForceUpdate = true;\n      return prevState;\n    }\n  }\n  return prevState;\n}\n\nexport function processUpdateQueue<State>(\n  workInProgress: Fiber,\n  props: any,\n  instance: any,\n  renderLanes: Lanes,\n): void {\n  // This is always non-null on a ClassComponent or HostRoot\n  const queue: UpdateQueue<State> = (workInProgress.updateQueue: any);\n\n  hasForceUpdate = false;\n\n  if (__DEV__) {\n    currentlyProcessingQueue = queue.shared;\n  }\n\n  let firstBaseUpdate = queue.firstBaseUpdate;\n  let lastBaseUpdate = queue.lastBaseUpdate;\n\n  // Check if there are pending updates. If so, transfer them to the base queue.\n  let pendingQueue = queue.shared.pending;\n  if (pendingQueue !== null) {\n    queue.shared.pending = null;\n\n    // The pending queue is circular. Disconnect the pointer between first\n    // and last so that it's non-circular.\n    const lastPendingUpdate = pendingQueue;\n    const firstPendingUpdate = lastPendingUpdate.next;\n    lastPendingUpdate.next = null;\n    // Append pending updates to base queue\n    if (lastBaseUpdate === null) {\n      firstBaseUpdate = firstPendingUpdate;\n    } else {\n      lastBaseUpdate.next = firstPendingUpdate;\n    }\n    lastBaseUpdate = lastPendingUpdate;\n\n    // If there's a current queue, and it's different from the base queue, then\n    // we need to transfer the updates to that queue, too. Because the base\n    // queue is a singly-linked list with no cycles, we can append to both\n    // lists and take advantage of structural sharing.\n    // TODO: Pass `current` as argument\n    const current = workInProgress.alternate;\n    if (current !== null) {\n      // This is always non-null on a ClassComponent or HostRoot\n      const currentQueue: UpdateQueue<State> = (current.updateQueue: any);\n      const currentLastBaseUpdate = currentQueue.lastBaseUpdate;\n      if (currentLastBaseUpdate !== lastBaseUpdate) {\n        if (currentLastBaseUpdate === null) {\n          currentQueue.firstBaseUpdate = firstPendingUpdate;\n        } else {\n          currentLastBaseUpdate.next = firstPendingUpdate;\n        }\n        currentQueue.lastBaseUpdate = lastPendingUpdate;\n      }\n    }\n  }\n\n  // These values may change as we process the queue.\n  if (firstBaseUpdate !== null) {\n    // Iterate through the list of updates to compute the result.\n    let newState = queue.baseState;\n    // TODO: Don't need to accumulate this. Instead, we can remove renderLanes\n    // from the original lanes.\n    let newLanes = NoLanes;\n\n    let newBaseState = null;\n    let newFirstBaseUpdate = null;\n    let newLastBaseUpdate = null;\n\n    let update = firstBaseUpdate;\n    do {\n      const updateLane = update.lane;\n      const updateEventTime = update.eventTime;\n      if (!isSubsetOfLanes(renderLanes, updateLane)) {\n        // Priority is insufficient. Skip this update. If this is the first\n        // skipped update, the previous update/state is the new base\n        // update/state.\n        const clone: Update<State> = {\n          eventTime: updateEventTime,\n          lane: updateLane,\n\n          tag: update.tag,\n          payload: update.payload,\n          callback: update.callback,\n\n          next: null,\n        };\n        if (newLastBaseUpdate === null) {\n          newFirstBaseUpdate = newLastBaseUpdate = clone;\n          newBaseState = newState;\n        } else {\n          newLastBaseUpdate = newLastBaseUpdate.next = clone;\n        }\n        // Update the remaining priority in the queue.\n        newLanes = mergeLanes(newLanes, updateLane);\n      } else {\n        // This update does have sufficient priority.\n\n        if (newLastBaseUpdate !== null) {\n          const clone: Update<State> = {\n            eventTime: updateEventTime,\n            // This update is going to be committed so we never want uncommit\n            // it. Using NoLane works because 0 is a subset of all bitmasks, so\n            // this will never be skipped by the check above.\n            lane: NoLane,\n\n            tag: update.tag,\n            payload: update.payload,\n            callback: update.callback,\n\n            next: null,\n          };\n          newLastBaseUpdate = newLastBaseUpdate.next = clone;\n        }\n\n        // Process this update.\n        newState = getStateFromUpdate(\n          workInProgress,\n          queue,\n          update,\n          newState,\n          props,\n          instance,\n        );\n        const callback = update.callback;\n        if (callback !== null) {\n          workInProgress.flags |= Callback;\n          const effects = queue.effects;\n          if (effects === null) {\n            queue.effects = [update];\n          } else {\n            effects.push(update);\n          }\n        }\n      }\n      update = update.next;\n      if (update === null) {\n        pendingQueue = queue.shared.pending;\n        if (pendingQueue === null) {\n          break;\n        } else {\n          // An update was scheduled from inside a reducer. Add the new\n          // pending updates to the end of the list and keep processing.\n          const lastPendingUpdate = pendingQueue;\n          // Intentionally unsound. Pending updates form a circular list, but we\n          // unravel them when transferring them to the base queue.\n          const firstPendingUpdate = ((lastPendingUpdate.next: any): Update<State>);\n          lastPendingUpdate.next = null;\n          update = firstPendingUpdate;\n          queue.lastBaseUpdate = lastPendingUpdate;\n          queue.shared.pending = null;\n        }\n      }\n    } while (true);\n\n    if (newLastBaseUpdate === null) {\n      newBaseState = newState;\n    }\n\n    queue.baseState = ((newBaseState: any): State);\n    queue.firstBaseUpdate = newFirstBaseUpdate;\n    queue.lastBaseUpdate = newLastBaseUpdate;\n\n    // Set the remaining expiration time to be whatever is remaining in the queue.\n    // This should be fine because the only two other things that contribute to\n    // expiration time are props and context. We're already in the middle of the\n    // begin phase by the time we start processing the queue, so we've already\n    // dealt with the props. Context in components that specify\n    // shouldComponentUpdate is tricky; but we'll have to account for\n    // that regardless.\n    markSkippedUpdateLanes(newLanes);\n    workInProgress.lanes = newLanes;\n    workInProgress.memoizedState = newState;\n  }\n\n  if (__DEV__) {\n    currentlyProcessingQueue = null;\n  }\n}\n\nfunction callCallback(callback, context) {\n  invariant(\n    typeof callback === 'function',\n    'Invalid argument passed as callback. Expected a function. Instead ' +\n      'received: %s',\n    callback,\n  );\n  callback.call(context);\n}\n\nexport function resetHasForceUpdateBeforeProcessing() {\n  hasForceUpdate = false;\n}\n\nexport function checkHasForceUpdateAfterProcessing(): boolean {\n  return hasForceUpdate;\n}\n\nexport function commitUpdateQueue<State>(\n  finishedWork: Fiber,\n  finishedQueue: UpdateQueue<State>,\n  instance: any,\n): void {\n  // Commit the effects\n  const effects = finishedQueue.effects;\n  finishedQueue.effects = null;\n  if (effects !== null) {\n    for (let i = 0; i < effects.length; i++) {\n      const effect = effects[i];\n      const callback = effect.callback;\n      if (callback !== null) {\n        effect.callback = null;\n        callCallback(callback, instance);\n      }\n    }\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactInternalTypes';\nimport type {Lanes} from './ReactFiberLane';\nimport type {UpdateQueue} from './ReactUpdateQueue.old';\n\nimport * as React from 'react';\nimport {Update, Snapshot} from './ReactFiberFlags';\nimport {\n  debugRenderPhaseSideEffectsForStrictMode,\n  disableLegacyContext,\n  enableDebugTracing,\n  enableSchedulingProfiler,\n  warnAboutDeprecatedLifecycles,\n} from 'shared/ReactFeatureFlags';\nimport ReactStrictModeWarnings from './ReactStrictModeWarnings.old';\nimport {isMounted} from './ReactFiberTreeReflection';\nimport {get as getInstance, set as setInstance} from 'shared/ReactInstanceMap';\nimport shallowEqual from 'shared/shallowEqual';\nimport getComponentName from 'shared/getComponentName';\nimport invariant from 'shared/invariant';\nimport {REACT_CONTEXT_TYPE, REACT_PROVIDER_TYPE} from 'shared/ReactSymbols';\n\nimport {resolveDefaultProps} from './ReactFiberLazyComponent.old';\nimport {DebugTracingMode, StrictMode} from './ReactTypeOfMode';\n\nimport {\n  enqueueUpdate,\n  processUpdateQueue,\n  checkHasForceUpdateAfterProcessing,\n  resetHasForceUpdateBeforeProcessing,\n  createUpdate,\n  ReplaceState,\n  ForceUpdate,\n  initializeUpdateQueue,\n  cloneUpdateQueue,\n} from './ReactUpdateQueue.old';\nimport {NoLanes} from './ReactFiberLane';\nimport {\n  cacheContext,\n  getMaskedContext,\n  getUnmaskedContext,\n  hasContextChanged,\n  emptyContextObject,\n} from './ReactFiberContext.old';\nimport {readContext} from './ReactFiberNewContext.old';\nimport {\n  requestEventTime,\n  requestUpdateLane,\n  scheduleUpdateOnFiber,\n} from './ReactFiberWorkLoop.old';\nimport {logForceUpdateScheduled, logStateUpdateScheduled} from './DebugTracing';\n\nimport {disableLogs, reenableLogs} from 'shared/ConsolePatchingDev';\nimport {\n  markForceUpdateScheduled,\n  markStateUpdateScheduled,\n} from './SchedulingProfiler';\n\nconst fakeInternalInstance = {};\nconst isArray = Array.isArray;\n\n// React.Component uses a shared frozen object by default.\n// We'll use it to determine whether we need to initialize legacy refs.\nexport const emptyRefsObject = new React.Component().refs;\n\nlet didWarnAboutStateAssignmentForComponent;\nlet didWarnAboutUninitializedState;\nlet didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate;\nlet didWarnAboutLegacyLifecyclesAndDerivedState;\nlet didWarnAboutUndefinedDerivedState;\nlet warnOnUndefinedDerivedState;\nlet warnOnInvalidCallback;\nlet didWarnAboutDirectlyAssigningPropsToState;\nlet didWarnAboutContextTypeAndContextTypes;\nlet didWarnAboutInvalidateContextType;\n\nif (__DEV__) {\n  didWarnAboutStateAssignmentForComponent = new Set();\n  didWarnAboutUninitializedState = new Set();\n  didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate = new Set();\n  didWarnAboutLegacyLifecyclesAndDerivedState = new Set();\n  didWarnAboutDirectlyAssigningPropsToState = new Set();\n  didWarnAboutUndefinedDerivedState = new Set();\n  didWarnAboutContextTypeAndContextTypes = new Set();\n  didWarnAboutInvalidateContextType = new Set();\n\n  const didWarnOnInvalidCallback = new Set();\n\n  warnOnInvalidCallback = function(callback: mixed, callerName: string) {\n    if (callback === null || typeof callback === 'function') {\n      return;\n    }\n    const key = callerName + '_' + (callback: any);\n    if (!didWarnOnInvalidCallback.has(key)) {\n      didWarnOnInvalidCallback.add(key);\n      console.error(\n        '%s(...): Expected the last optional `callback` argument to be a ' +\n          'function. Instead received: %s.',\n        callerName,\n        callback,\n      );\n    }\n  };\n\n  warnOnUndefinedDerivedState = function(type, partialState) {\n    if (partialState === undefined) {\n      const componentName = getComponentName(type) || 'Component';\n      if (!didWarnAboutUndefinedDerivedState.has(componentName)) {\n        didWarnAboutUndefinedDerivedState.add(componentName);\n        console.error(\n          '%s.getDerivedStateFromProps(): A valid state object (or null) must be returned. ' +\n            'You have returned undefined.',\n          componentName,\n        );\n      }\n    }\n  };\n\n  // This is so gross but it's at least non-critical and can be removed if\n  // it causes problems. This is meant to give a nicer error message for\n  // ReactDOM15.unstable_renderSubtreeIntoContainer(reactDOM16Component,\n  // ...)) which otherwise throws a \"_processChildContext is not a function\"\n  // exception.\n  Object.defineProperty(fakeInternalInstance, '_processChildContext', {\n    enumerable: false,\n    value: function() {\n      invariant(\n        false,\n        '_processChildContext is not available in React 16+. This likely ' +\n          'means you have multiple copies of React and are attempting to nest ' +\n          'a React 15 tree inside a React 16 tree using ' +\n          \"unstable_renderSubtreeIntoContainer, which isn't supported. Try \" +\n          'to make sure you have only one copy of React (and ideally, switch ' +\n          'to ReactDOM.createPortal).',\n      );\n    },\n  });\n  Object.freeze(fakeInternalInstance);\n}\n\nexport function applyDerivedStateFromProps(\n  workInProgress: Fiber,\n  ctor: any,\n  getDerivedStateFromProps: (props: any, state: any) => any,\n  nextProps: any,\n) {\n  const prevState = workInProgress.memoizedState;\n\n  if (__DEV__) {\n    if (\n      debugRenderPhaseSideEffectsForStrictMode &&\n      workInProgress.mode & StrictMode\n    ) {\n      disableLogs();\n      try {\n        // Invoke the function an extra time to help detect side-effects.\n        getDerivedStateFromProps(nextProps, prevState);\n      } finally {\n        reenableLogs();\n      }\n    }\n  }\n\n  const partialState = getDerivedStateFromProps(nextProps, prevState);\n\n  if (__DEV__) {\n    warnOnUndefinedDerivedState(ctor, partialState);\n  }\n  // Merge the partial state and the previous state.\n  const memoizedState =\n    partialState === null || partialState === undefined\n      ? prevState\n      : Object.assign({}, prevState, partialState);\n  workInProgress.memoizedState = memoizedState;\n\n  // Once the update queue is empty, persist the derived state onto the\n  // base state.\n  if (workInProgress.lanes === NoLanes) {\n    // Queue is always non-null for classes\n    const updateQueue: UpdateQueue<any> = (workInProgress.updateQueue: any);\n    updateQueue.baseState = memoizedState;\n  }\n}\n\nconst classComponentUpdater = {\n  isMounted,\n  enqueueSetState(inst, payload, callback) {\n    const fiber = getInstance(inst);\n    const eventTime = requestEventTime();\n    const lane = requestUpdateLane(fiber);\n\n    const update = createUpdate(eventTime, lane);\n    update.payload = payload;\n    if (callback !== undefined && callback !== null) {\n      if (__DEV__) {\n        warnOnInvalidCallback(callback, 'setState');\n      }\n      update.callback = callback;\n    }\n\n    enqueueUpdate(fiber, update);\n    scheduleUpdateOnFiber(fiber, lane, eventTime);\n\n    if (__DEV__) {\n      if (enableDebugTracing) {\n        if (fiber.mode & DebugTracingMode) {\n          const name = getComponentName(fiber.type) || 'Unknown';\n          logStateUpdateScheduled(name, lane, payload);\n        }\n      }\n    }\n\n    if (enableSchedulingProfiler) {\n      markStateUpdateScheduled(fiber, lane);\n    }\n  },\n  enqueueReplaceState(inst, payload, callback) {\n    const fiber = getInstance(inst);\n    const eventTime = requestEventTime();\n    const lane = requestUpdateLane(fiber);\n\n    const update = createUpdate(eventTime, lane);\n    update.tag = ReplaceState;\n    update.payload = payload;\n\n    if (callback !== undefined && callback !== null) {\n      if (__DEV__) {\n        warnOnInvalidCallback(callback, 'replaceState');\n      }\n      update.callback = callback;\n    }\n\n    enqueueUpdate(fiber, update);\n    scheduleUpdateOnFiber(fiber, lane, eventTime);\n\n    if (__DEV__) {\n      if (enableDebugTracing) {\n        if (fiber.mode & DebugTracingMode) {\n          const name = getComponentName(fiber.type) || 'Unknown';\n          logStateUpdateScheduled(name, lane, payload);\n        }\n      }\n    }\n\n    if (enableSchedulingProfiler) {\n      markStateUpdateScheduled(fiber, lane);\n    }\n  },\n  enqueueForceUpdate(inst, callback) {\n    const fiber = getInstance(inst);\n    const eventTime = requestEventTime();\n    const lane = requestUpdateLane(fiber);\n\n    const update = createUpdate(eventTime, lane);\n    update.tag = ForceUpdate;\n\n    if (callback !== undefined && callback !== null) {\n      if (__DEV__) {\n        warnOnInvalidCallback(callback, 'forceUpdate');\n      }\n      update.callback = callback;\n    }\n\n    enqueueUpdate(fiber, update);\n    scheduleUpdateOnFiber(fiber, lane, eventTime);\n\n    if (__DEV__) {\n      if (enableDebugTracing) {\n        if (fiber.mode & DebugTracingMode) {\n          const name = getComponentName(fiber.type) || 'Unknown';\n          logForceUpdateScheduled(name, lane);\n        }\n      }\n    }\n\n    if (enableSchedulingProfiler) {\n      markForceUpdateScheduled(fiber, lane);\n    }\n  },\n};\n\nfunction checkShouldComponentUpdate(\n  workInProgress,\n  ctor,\n  oldProps,\n  newProps,\n  oldState,\n  newState,\n  nextContext,\n) {\n  const instance = workInProgress.stateNode;\n  if (typeof instance.shouldComponentUpdate === 'function') {\n    if (__DEV__) {\n      if (\n        debugRenderPhaseSideEffectsForStrictMode &&\n        workInProgress.mode & StrictMode\n      ) {\n        disableLogs();\n        try {\n          // Invoke the function an extra time to help detect side-effects.\n          instance.shouldComponentUpdate(newProps, newState, nextContext);\n        } finally {\n          reenableLogs();\n        }\n      }\n    }\n    const shouldUpdate = instance.shouldComponentUpdate(\n      newProps,\n      newState,\n      nextContext,\n    );\n\n    if (__DEV__) {\n      if (shouldUpdate === undefined) {\n        console.error(\n          '%s.shouldComponentUpdate(): Returned undefined instead of a ' +\n            'boolean value. Make sure to return true or false.',\n          getComponentName(ctor) || 'Component',\n        );\n      }\n    }\n\n    return shouldUpdate;\n  }\n\n  if (ctor.prototype && ctor.prototype.isPureReactComponent) {\n    return (\n      !shallowEqual(oldProps, newProps) || !shallowEqual(oldState, newState)\n    );\n  }\n\n  return true;\n}\n\nfunction checkClassInstance(workInProgress: Fiber, ctor: any, newProps: any) {\n  const instance = workInProgress.stateNode;\n  if (__DEV__) {\n    const name = getComponentName(ctor) || 'Component';\n    const renderPresent = instance.render;\n\n    if (!renderPresent) {\n      if (ctor.prototype && typeof ctor.prototype.render === 'function') {\n        console.error(\n          '%s(...): No `render` method found on the returned component ' +\n            'instance: did you accidentally return an object from the constructor?',\n          name,\n        );\n      } else {\n        console.error(\n          '%s(...): No `render` method found on the returned component ' +\n            'instance: you may have forgotten to define `render`.',\n          name,\n        );\n      }\n    }\n\n    if (\n      instance.getInitialState &&\n      !instance.getInitialState.isReactClassApproved &&\n      !instance.state\n    ) {\n      console.error(\n        'getInitialState was defined on %s, a plain JavaScript class. ' +\n          'This is only supported for classes created using React.createClass. ' +\n          'Did you mean to define a state property instead?',\n        name,\n      );\n    }\n    if (\n      instance.getDefaultProps &&\n      !instance.getDefaultProps.isReactClassApproved\n    ) {\n      console.error(\n        'getDefaultProps was defined on %s, a plain JavaScript class. ' +\n          'This is only supported for classes created using React.createClass. ' +\n          'Use a static property to define defaultProps instead.',\n        name,\n      );\n    }\n    if (instance.propTypes) {\n      console.error(\n        'propTypes was defined as an instance property on %s. Use a static ' +\n          'property to define propTypes instead.',\n        name,\n      );\n    }\n    if (instance.contextType) {\n      console.error(\n        'contextType was defined as an instance property on %s. Use a static ' +\n          'property to define contextType instead.',\n        name,\n      );\n    }\n\n    if (disableLegacyContext) {\n      if (ctor.childContextTypes) {\n        console.error(\n          '%s uses the legacy childContextTypes API which is no longer supported. ' +\n            'Use React.createContext() instead.',\n          name,\n        );\n      }\n      if (ctor.contextTypes) {\n        console.error(\n          '%s uses the legacy contextTypes API which is no longer supported. ' +\n            'Use React.createContext() with static contextType instead.',\n          name,\n        );\n      }\n    } else {\n      if (instance.contextTypes) {\n        console.error(\n          'contextTypes was defined as an instance property on %s. Use a static ' +\n            'property to define contextTypes instead.',\n          name,\n        );\n      }\n\n      if (\n        ctor.contextType &&\n        ctor.contextTypes &&\n        !didWarnAboutContextTypeAndContextTypes.has(ctor)\n      ) {\n        didWarnAboutContextTypeAndContextTypes.add(ctor);\n        console.error(\n          '%s declares both contextTypes and contextType static properties. ' +\n            'The legacy contextTypes property will be ignored.',\n          name,\n        );\n      }\n    }\n\n    if (typeof instance.componentShouldUpdate === 'function') {\n      console.error(\n        '%s has a method called ' +\n          'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' +\n          'The name is phrased as a question because the function is ' +\n          'expected to return a value.',\n        name,\n      );\n    }\n    if (\n      ctor.prototype &&\n      ctor.prototype.isPureReactComponent &&\n      typeof instance.shouldComponentUpdate !== 'undefined'\n    ) {\n      console.error(\n        '%s has a method called shouldComponentUpdate(). ' +\n          'shouldComponentUpdate should not be used when extending React.PureComponent. ' +\n          'Please extend React.Component if shouldComponentUpdate is used.',\n        getComponentName(ctor) || 'A pure component',\n      );\n    }\n    if (typeof instance.componentDidUnmount === 'function') {\n      console.error(\n        '%s has a method called ' +\n          'componentDidUnmount(). But there is no such lifecycle method. ' +\n          'Did you mean componentWillUnmount()?',\n        name,\n      );\n    }\n    if (typeof instance.componentDidReceiveProps === 'function') {\n      console.error(\n        '%s has a method called ' +\n          'componentDidReceiveProps(). But there is no such lifecycle method. ' +\n          'If you meant to update the state in response to changing props, ' +\n          'use componentWillReceiveProps(). If you meant to fetch data or ' +\n          'run side-effects or mutations after React has updated the UI, use componentDidUpdate().',\n        name,\n      );\n    }\n    if (typeof instance.componentWillRecieveProps === 'function') {\n      console.error(\n        '%s has a method called ' +\n          'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?',\n        name,\n      );\n    }\n    if (typeof instance.UNSAFE_componentWillRecieveProps === 'function') {\n      console.error(\n        '%s has a method called ' +\n          'UNSAFE_componentWillRecieveProps(). Did you mean UNSAFE_componentWillReceiveProps()?',\n        name,\n      );\n    }\n    const hasMutatedProps = instance.props !== newProps;\n    if (instance.props !== undefined && hasMutatedProps) {\n      console.error(\n        '%s(...): When calling super() in `%s`, make sure to pass ' +\n          \"up the same props that your component's constructor was passed.\",\n        name,\n        name,\n      );\n    }\n    if (instance.defaultProps) {\n      console.error(\n        'Setting defaultProps as an instance property on %s is not supported and will be ignored.' +\n          ' Instead, define defaultProps as a static property on %s.',\n        name,\n        name,\n      );\n    }\n\n    if (\n      typeof instance.getSnapshotBeforeUpdate === 'function' &&\n      typeof instance.componentDidUpdate !== 'function' &&\n      !didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.has(ctor)\n    ) {\n      didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.add(ctor);\n      console.error(\n        '%s: getSnapshotBeforeUpdate() should be used with componentDidUpdate(). ' +\n          'This component defines getSnapshotBeforeUpdate() only.',\n        getComponentName(ctor),\n      );\n    }\n\n    if (typeof instance.getDerivedStateFromProps === 'function') {\n      console.error(\n        '%s: getDerivedStateFromProps() is defined as an instance method ' +\n          'and will be ignored. Instead, declare it as a static method.',\n        name,\n      );\n    }\n    if (typeof instance.getDerivedStateFromError === 'function') {\n      console.error(\n        '%s: getDerivedStateFromError() is defined as an instance method ' +\n          'and will be ignored. Instead, declare it as a static method.',\n        name,\n      );\n    }\n    if (typeof ctor.getSnapshotBeforeUpdate === 'function') {\n      console.error(\n        '%s: getSnapshotBeforeUpdate() is defined as a static method ' +\n          'and will be ignored. Instead, declare it as an instance method.',\n        name,\n      );\n    }\n    const state = instance.state;\n    if (state && (typeof state !== 'object' || isArray(state))) {\n      console.error('%s.state: must be set to an object or null', name);\n    }\n    if (\n      typeof instance.getChildContext === 'function' &&\n      typeof ctor.childContextTypes !== 'object'\n    ) {\n      console.error(\n        '%s.getChildContext(): childContextTypes must be defined in order to ' +\n          'use getChildContext().',\n        name,\n      );\n    }\n  }\n}\n\nfunction adoptClassInstance(workInProgress: Fiber, instance: any): void {\n  instance.updater = classComponentUpdater;\n  workInProgress.stateNode = instance;\n  // The instance needs access to the fiber so that it can schedule updates\n  setInstance(instance, workInProgress);\n  if (__DEV__) {\n    instance._reactInternalInstance = fakeInternalInstance;\n  }\n}\n\nfunction constructClassInstance(\n  workInProgress: Fiber,\n  ctor: any,\n  props: any,\n): any {\n  let isLegacyContextConsumer = false;\n  let unmaskedContext = emptyContextObject;\n  let context = emptyContextObject;\n  const contextType = ctor.contextType;\n\n  if (__DEV__) {\n    if ('contextType' in ctor) {\n      const isValid =\n        // Allow null for conditional declaration\n        contextType === null ||\n        (contextType !== undefined &&\n          contextType.$$typeof === REACT_CONTEXT_TYPE &&\n          contextType._context === undefined); // Not a <Context.Consumer>\n\n      if (!isValid && !didWarnAboutInvalidateContextType.has(ctor)) {\n        didWarnAboutInvalidateContextType.add(ctor);\n\n        let addendum = '';\n        if (contextType === undefined) {\n          addendum =\n            ' However, it is set to undefined. ' +\n            'This can be caused by a typo or by mixing up named and default imports. ' +\n            'This can also happen due to a circular dependency, so ' +\n            'try moving the createContext() call to a separate file.';\n        } else if (typeof contextType !== 'object') {\n          addendum = ' However, it is set to a ' + typeof contextType + '.';\n        } else if (contextType.$$typeof === REACT_PROVIDER_TYPE) {\n          addendum = ' Did you accidentally pass the Context.Provider instead?';\n        } else if (contextType._context !== undefined) {\n          // <Context.Consumer>\n          addendum = ' Did you accidentally pass the Context.Consumer instead?';\n        } else {\n          addendum =\n            ' However, it is set to an object with keys {' +\n            Object.keys(contextType).join(', ') +\n            '}.';\n        }\n        console.error(\n          '%s defines an invalid contextType. ' +\n            'contextType should point to the Context object returned by React.createContext().%s',\n          getComponentName(ctor) || 'Component',\n          addendum,\n        );\n      }\n    }\n  }\n\n  if (typeof contextType === 'object' && contextType !== null) {\n    context = readContext((contextType: any));\n  } else if (!disableLegacyContext) {\n    unmaskedContext = getUnmaskedContext(workInProgress, ctor, true);\n    const contextTypes = ctor.contextTypes;\n    isLegacyContextConsumer =\n      contextTypes !== null && contextTypes !== undefined;\n    context = isLegacyContextConsumer\n      ? getMaskedContext(workInProgress, unmaskedContext)\n      : emptyContextObject;\n  }\n\n  // Instantiate twice to help detect side-effects.\n  if (__DEV__) {\n    if (\n      debugRenderPhaseSideEffectsForStrictMode &&\n      workInProgress.mode & StrictMode\n    ) {\n      disableLogs();\n      try {\n        new ctor(props, context); // eslint-disable-line no-new\n      } finally {\n        reenableLogs();\n      }\n    }\n  }\n\n  const instance = new ctor(props, context);\n  const state = (workInProgress.memoizedState =\n    instance.state !== null && instance.state !== undefined\n      ? instance.state\n      : null);\n  adoptClassInstance(workInProgress, instance);\n\n  if (__DEV__) {\n    if (typeof ctor.getDerivedStateFromProps === 'function' && state === null) {\n      const componentName = getComponentName(ctor) || 'Component';\n      if (!didWarnAboutUninitializedState.has(componentName)) {\n        didWarnAboutUninitializedState.add(componentName);\n        console.error(\n          '`%s` uses `getDerivedStateFromProps` but its initial state is ' +\n            '%s. This is not recommended. Instead, define the initial state by ' +\n            'assigning an object to `this.state` in the constructor of `%s`. ' +\n            'This ensures that `getDerivedStateFromProps` arguments have a consistent shape.',\n          componentName,\n          instance.state === null ? 'null' : 'undefined',\n          componentName,\n        );\n      }\n    }\n\n    // If new component APIs are defined, \"unsafe\" lifecycles won't be called.\n    // Warn about these lifecycles if they are present.\n    // Don't warn about react-lifecycles-compat polyfilled methods though.\n    if (\n      typeof ctor.getDerivedStateFromProps === 'function' ||\n      typeof instance.getSnapshotBeforeUpdate === 'function'\n    ) {\n      let foundWillMountName = null;\n      let foundWillReceivePropsName = null;\n      let foundWillUpdateName = null;\n      if (\n        typeof instance.componentWillMount === 'function' &&\n        instance.componentWillMount.__suppressDeprecationWarning !== true\n      ) {\n        foundWillMountName = 'componentWillMount';\n      } else if (typeof instance.UNSAFE_componentWillMount === 'function') {\n        foundWillMountName = 'UNSAFE_componentWillMount';\n      }\n      if (\n        typeof instance.componentWillReceiveProps === 'function' &&\n        instance.componentWillReceiveProps.__suppressDeprecationWarning !== true\n      ) {\n        foundWillReceivePropsName = 'componentWillReceiveProps';\n      } else if (\n        typeof instance.UNSAFE_componentWillReceiveProps === 'function'\n      ) {\n        foundWillReceivePropsName = 'UNSAFE_componentWillReceiveProps';\n      }\n      if (\n        typeof instance.componentWillUpdate === 'function' &&\n        instance.componentWillUpdate.__suppressDeprecationWarning !== true\n      ) {\n        foundWillUpdateName = 'componentWillUpdate';\n      } else if (typeof instance.UNSAFE_componentWillUpdate === 'function') {\n        foundWillUpdateName = 'UNSAFE_componentWillUpdate';\n      }\n      if (\n        foundWillMountName !== null ||\n        foundWillReceivePropsName !== null ||\n        foundWillUpdateName !== null\n      ) {\n        const componentName = getComponentName(ctor) || 'Component';\n        const newApiName =\n          typeof ctor.getDerivedStateFromProps === 'function'\n            ? 'getDerivedStateFromProps()'\n            : 'getSnapshotBeforeUpdate()';\n        if (!didWarnAboutLegacyLifecyclesAndDerivedState.has(componentName)) {\n          didWarnAboutLegacyLifecyclesAndDerivedState.add(componentName);\n          console.error(\n            'Unsafe legacy lifecycles will not be called for components using new component APIs.\\n\\n' +\n              '%s uses %s but also contains the following legacy lifecycles:%s%s%s\\n\\n' +\n              'The above lifecycles should be removed. Learn more about this warning here:\\n' +\n              'https://reactjs.org/link/unsafe-component-lifecycles',\n            componentName,\n            newApiName,\n            foundWillMountName !== null ? `\\n  ${foundWillMountName}` : '',\n            foundWillReceivePropsName !== null\n              ? `\\n  ${foundWillReceivePropsName}`\n              : '',\n            foundWillUpdateName !== null ? `\\n  ${foundWillUpdateName}` : '',\n          );\n        }\n      }\n    }\n  }\n\n  // Cache unmasked context so we can avoid recreating masked context unless necessary.\n  // ReactFiberContext usually updates this cache but can't for newly-created instances.\n  if (isLegacyContextConsumer) {\n    cacheContext(workInProgress, unmaskedContext, context);\n  }\n\n  return instance;\n}\n\nfunction callComponentWillMount(workInProgress, instance) {\n  const oldState = instance.state;\n\n  if (typeof instance.componentWillMount === 'function') {\n    instance.componentWillMount();\n  }\n  if (typeof instance.UNSAFE_componentWillMount === 'function') {\n    instance.UNSAFE_componentWillMount();\n  }\n\n  if (oldState !== instance.state) {\n    if (__DEV__) {\n      console.error(\n        '%s.componentWillMount(): Assigning directly to this.state is ' +\n          \"deprecated (except inside a component's \" +\n          'constructor). Use setState instead.',\n        getComponentName(workInProgress.type) || 'Component',\n      );\n    }\n    classComponentUpdater.enqueueReplaceState(instance, instance.state, null);\n  }\n}\n\nfunction callComponentWillReceiveProps(\n  workInProgress,\n  instance,\n  newProps,\n  nextContext,\n) {\n  const oldState = instance.state;\n  if (typeof instance.componentWillReceiveProps === 'function') {\n    instance.componentWillReceiveProps(newProps, nextContext);\n  }\n  if (typeof instance.UNSAFE_componentWillReceiveProps === 'function') {\n    instance.UNSAFE_componentWillReceiveProps(newProps, nextContext);\n  }\n\n  if (instance.state !== oldState) {\n    if (__DEV__) {\n      const componentName =\n        getComponentName(workInProgress.type) || 'Component';\n      if (!didWarnAboutStateAssignmentForComponent.has(componentName)) {\n        didWarnAboutStateAssignmentForComponent.add(componentName);\n        console.error(\n          '%s.componentWillReceiveProps(): Assigning directly to ' +\n            \"this.state is deprecated (except inside a component's \" +\n            'constructor). Use setState instead.',\n          componentName,\n        );\n      }\n    }\n    classComponentUpdater.enqueueReplaceState(instance, instance.state, null);\n  }\n}\n\n// Invokes the mount life-cycles on a previously never rendered instance.\nfunction mountClassInstance(\n  workInProgress: Fiber,\n  ctor: any,\n  newProps: any,\n  renderLanes: Lanes,\n): void {\n  if (__DEV__) {\n    checkClassInstance(workInProgress, ctor, newProps);\n  }\n\n  const instance = workInProgress.stateNode;\n  instance.props = newProps;\n  instance.state = workInProgress.memoizedState;\n  instance.refs = emptyRefsObject;\n\n  initializeUpdateQueue(workInProgress);\n\n  const contextType = ctor.contextType;\n  if (typeof contextType === 'object' && contextType !== null) {\n    instance.context = readContext(contextType);\n  } else if (disableLegacyContext) {\n    instance.context = emptyContextObject;\n  } else {\n    const unmaskedContext = getUnmaskedContext(workInProgress, ctor, true);\n    instance.context = getMaskedContext(workInProgress, unmaskedContext);\n  }\n\n  if (__DEV__) {\n    if (instance.state === newProps) {\n      const componentName = getComponentName(ctor) || 'Component';\n      if (!didWarnAboutDirectlyAssigningPropsToState.has(componentName)) {\n        didWarnAboutDirectlyAssigningPropsToState.add(componentName);\n        console.error(\n          '%s: It is not recommended to assign props directly to state ' +\n            \"because updates to props won't be reflected in state. \" +\n            'In most cases, it is better to use props directly.',\n          componentName,\n        );\n      }\n    }\n\n    if (workInProgress.mode & StrictMode) {\n      ReactStrictModeWarnings.recordLegacyContextWarning(\n        workInProgress,\n        instance,\n      );\n    }\n\n    if (warnAboutDeprecatedLifecycles) {\n      ReactStrictModeWarnings.recordUnsafeLifecycleWarnings(\n        workInProgress,\n        instance,\n      );\n    }\n  }\n\n  processUpdateQueue(workInProgress, newProps, instance, renderLanes);\n  instance.state = workInProgress.memoizedState;\n\n  const getDerivedStateFromProps = ctor.getDerivedStateFromProps;\n  if (typeof getDerivedStateFromProps === 'function') {\n    applyDerivedStateFromProps(\n      workInProgress,\n      ctor,\n      getDerivedStateFromProps,\n      newProps,\n    );\n    instance.state = workInProgress.memoizedState;\n  }\n\n  // In order to support react-lifecycles-compat polyfilled components,\n  // Unsafe lifecycles should not be invoked for components using the new APIs.\n  if (\n    typeof ctor.getDerivedStateFromProps !== 'function' &&\n    typeof instance.getSnapshotBeforeUpdate !== 'function' &&\n    (typeof instance.UNSAFE_componentWillMount === 'function' ||\n      typeof instance.componentWillMount === 'function')\n  ) {\n    callComponentWillMount(workInProgress, instance);\n    // If we had additional state updates during this life-cycle, let's\n    // process them now.\n    processUpdateQueue(workInProgress, newProps, instance, renderLanes);\n    instance.state = workInProgress.memoizedState;\n  }\n\n  if (typeof instance.componentDidMount === 'function') {\n    workInProgress.flags |= Update;\n  }\n}\n\nfunction resumeMountClassInstance(\n  workInProgress: Fiber,\n  ctor: any,\n  newProps: any,\n  renderLanes: Lanes,\n): boolean {\n  const instance = workInProgress.stateNode;\n\n  const oldProps = workInProgress.memoizedProps;\n  instance.props = oldProps;\n\n  const oldContext = instance.context;\n  const contextType = ctor.contextType;\n  let nextContext = emptyContextObject;\n  if (typeof contextType === 'object' && contextType !== null) {\n    nextContext = readContext(contextType);\n  } else if (!disableLegacyContext) {\n    const nextLegacyUnmaskedContext = getUnmaskedContext(\n      workInProgress,\n      ctor,\n      true,\n    );\n    nextContext = getMaskedContext(workInProgress, nextLegacyUnmaskedContext);\n  }\n\n  const getDerivedStateFromProps = ctor.getDerivedStateFromProps;\n  const hasNewLifecycles =\n    typeof getDerivedStateFromProps === 'function' ||\n    typeof instance.getSnapshotBeforeUpdate === 'function';\n\n  // Note: During these life-cycles, instance.props/instance.state are what\n  // ever the previously attempted to render - not the \"current\". However,\n  // during componentDidUpdate we pass the \"current\" props.\n\n  // In order to support react-lifecycles-compat polyfilled components,\n  // Unsafe lifecycles should not be invoked for components using the new APIs.\n  if (\n    !hasNewLifecycles &&\n    (typeof instance.UNSAFE_componentWillReceiveProps === 'function' ||\n      typeof instance.componentWillReceiveProps === 'function')\n  ) {\n    if (oldProps !== newProps || oldContext !== nextContext) {\n      callComponentWillReceiveProps(\n        workInProgress,\n        instance,\n        newProps,\n        nextContext,\n      );\n    }\n  }\n\n  resetHasForceUpdateBeforeProcessing();\n\n  const oldState = workInProgress.memoizedState;\n  let newState = (instance.state = oldState);\n  processUpdateQueue(workInProgress, newProps, instance, renderLanes);\n  newState = workInProgress.memoizedState;\n  if (\n    oldProps === newProps &&\n    oldState === newState &&\n    !hasContextChanged() &&\n    !checkHasForceUpdateAfterProcessing()\n  ) {\n    // If an update was already in progress, we should schedule an Update\n    // effect even though we're bailing out, so that cWU/cDU are called.\n    if (typeof instance.componentDidMount === 'function') {\n      workInProgress.flags |= Update;\n    }\n    return false;\n  }\n\n  if (typeof getDerivedStateFromProps === 'function') {\n    applyDerivedStateFromProps(\n      workInProgress,\n      ctor,\n      getDerivedStateFromProps,\n      newProps,\n    );\n    newState = workInProgress.memoizedState;\n  }\n\n  const shouldUpdate =\n    checkHasForceUpdateAfterProcessing() ||\n    checkShouldComponentUpdate(\n      workInProgress,\n      ctor,\n      oldProps,\n      newProps,\n      oldState,\n      newState,\n      nextContext,\n    );\n\n  if (shouldUpdate) {\n    // In order to support react-lifecycles-compat polyfilled components,\n    // Unsafe lifecycles should not be invoked for components using the new APIs.\n    if (\n      !hasNewLifecycles &&\n      (typeof instance.UNSAFE_componentWillMount === 'function' ||\n        typeof instance.componentWillMount === 'function')\n    ) {\n      if (typeof instance.componentWillMount === 'function') {\n        instance.componentWillMount();\n      }\n      if (typeof instance.UNSAFE_componentWillMount === 'function') {\n        instance.UNSAFE_componentWillMount();\n      }\n    }\n    if (typeof instance.componentDidMount === 'function') {\n      workInProgress.flags |= Update;\n    }\n  } else {\n    // If an update was already in progress, we should schedule an Update\n    // effect even though we're bailing out, so that cWU/cDU are called.\n    if (typeof instance.componentDidMount === 'function') {\n      workInProgress.flags |= Update;\n    }\n\n    // If shouldComponentUpdate returned false, we should still update the\n    // memoized state to indicate that this work can be reused.\n    workInProgress.memoizedProps = newProps;\n    workInProgress.memoizedState = newState;\n  }\n\n  // Update the existing instance's state, props, and context pointers even\n  // if shouldComponentUpdate returns false.\n  instance.props = newProps;\n  instance.state = newState;\n  instance.context = nextContext;\n\n  return shouldUpdate;\n}\n\n// Invokes the update life-cycles and returns false if it shouldn't rerender.\nfunction updateClassInstance(\n  current: Fiber,\n  workInProgress: Fiber,\n  ctor: any,\n  newProps: any,\n  renderLanes: Lanes,\n): boolean {\n  const instance = workInProgress.stateNode;\n\n  cloneUpdateQueue(current, workInProgress);\n\n  const unresolvedOldProps = workInProgress.memoizedProps;\n  const oldProps =\n    workInProgress.type === workInProgress.elementType\n      ? unresolvedOldProps\n      : resolveDefaultProps(workInProgress.type, unresolvedOldProps);\n  instance.props = oldProps;\n  const unresolvedNewProps = workInProgress.pendingProps;\n\n  const oldContext = instance.context;\n  const contextType = ctor.contextType;\n  let nextContext = emptyContextObject;\n  if (typeof contextType === 'object' && contextType !== null) {\n    nextContext = readContext(contextType);\n  } else if (!disableLegacyContext) {\n    const nextUnmaskedContext = getUnmaskedContext(workInProgress, ctor, true);\n    nextContext = getMaskedContext(workInProgress, nextUnmaskedContext);\n  }\n\n  const getDerivedStateFromProps = ctor.getDerivedStateFromProps;\n  const hasNewLifecycles =\n    typeof getDerivedStateFromProps === 'function' ||\n    typeof instance.getSnapshotBeforeUpdate === 'function';\n\n  // Note: During these life-cycles, instance.props/instance.state are what\n  // ever the previously attempted to render - not the \"current\". However,\n  // during componentDidUpdate we pass the \"current\" props.\n\n  // In order to support react-lifecycles-compat polyfilled components,\n  // Unsafe lifecycles should not be invoked for components using the new APIs.\n  if (\n    !hasNewLifecycles &&\n    (typeof instance.UNSAFE_componentWillReceiveProps === 'function' ||\n      typeof instance.componentWillReceiveProps === 'function')\n  ) {\n    if (\n      unresolvedOldProps !== unresolvedNewProps ||\n      oldContext !== nextContext\n    ) {\n      callComponentWillReceiveProps(\n        workInProgress,\n        instance,\n        newProps,\n        nextContext,\n      );\n    }\n  }\n\n  resetHasForceUpdateBeforeProcessing();\n\n  const oldState = workInProgress.memoizedState;\n  let newState = (instance.state = oldState);\n  processUpdateQueue(workInProgress, newProps, instance, renderLanes);\n  newState = workInProgress.memoizedState;\n\n  if (\n    unresolvedOldProps === unresolvedNewProps &&\n    oldState === newState &&\n    !hasContextChanged() &&\n    !checkHasForceUpdateAfterProcessing()\n  ) {\n    // If an update was already in progress, we should schedule an Update\n    // effect even though we're bailing out, so that cWU/cDU are called.\n    if (typeof instance.componentDidUpdate === 'function') {\n      if (\n        unresolvedOldProps !== current.memoizedProps ||\n        oldState !== current.memoizedState\n      ) {\n        workInProgress.flags |= Update;\n      }\n    }\n    if (typeof instance.getSnapshotBeforeUpdate === 'function') {\n      if (\n        unresolvedOldProps !== current.memoizedProps ||\n        oldState !== current.memoizedState\n      ) {\n        workInProgress.flags |= Snapshot;\n      }\n    }\n    return false;\n  }\n\n  if (typeof getDerivedStateFromProps === 'function') {\n    applyDerivedStateFromProps(\n      workInProgress,\n      ctor,\n      getDerivedStateFromProps,\n      newProps,\n    );\n    newState = workInProgress.memoizedState;\n  }\n\n  const shouldUpdate =\n    checkHasForceUpdateAfterProcessing() ||\n    checkShouldComponentUpdate(\n      workInProgress,\n      ctor,\n      oldProps,\n      newProps,\n      oldState,\n      newState,\n      nextContext,\n    );\n\n  if (shouldUpdate) {\n    // In order to support react-lifecycles-compat polyfilled components,\n    // Unsafe lifecycles should not be invoked for components using the new APIs.\n    if (\n      !hasNewLifecycles &&\n      (typeof instance.UNSAFE_componentWillUpdate === 'function' ||\n        typeof instance.componentWillUpdate === 'function')\n    ) {\n      if (typeof instance.componentWillUpdate === 'function') {\n        instance.componentWillUpdate(newProps, newState, nextContext);\n      }\n      if (typeof instance.UNSAFE_componentWillUpdate === 'function') {\n        instance.UNSAFE_componentWillUpdate(newProps, newState, nextContext);\n      }\n    }\n    if (typeof instance.componentDidUpdate === 'function') {\n      workInProgress.flags |= Update;\n    }\n    if (typeof instance.getSnapshotBeforeUpdate === 'function') {\n      workInProgress.flags |= Snapshot;\n    }\n  } else {\n    // If an update was already in progress, we should schedule an Update\n    // effect even though we're bailing out, so that cWU/cDU are called.\n    if (typeof instance.componentDidUpdate === 'function') {\n      if (\n        unresolvedOldProps !== current.memoizedProps ||\n        oldState !== current.memoizedState\n      ) {\n        workInProgress.flags |= Update;\n      }\n    }\n    if (typeof instance.getSnapshotBeforeUpdate === 'function') {\n      if (\n        unresolvedOldProps !== current.memoizedProps ||\n        oldState !== current.memoizedState\n      ) {\n        workInProgress.flags |= Snapshot;\n      }\n    }\n\n    // If shouldComponentUpdate returned false, we should still update the\n    // memoized props/state to indicate that this work can be reused.\n    workInProgress.memoizedProps = newProps;\n    workInProgress.memoizedState = newState;\n  }\n\n  // Update the existing instance's state, props, and context pointers even\n  // if shouldComponentUpdate returns false.\n  instance.props = newProps;\n  instance.state = newState;\n  instance.context = nextContext;\n\n  return shouldUpdate;\n}\n\nexport {\n  adoptClassInstance,\n  constructClassInstance,\n  mountClassInstance,\n  resumeMountClassInstance,\n  updateClassInstance,\n};\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {ReactElement} from 'shared/ReactElementType';\nimport type {ReactPortal} from 'shared/ReactTypes';\nimport type {BlockComponent} from 'react/src/ReactBlock';\nimport type {LazyComponent} from 'react/src/ReactLazy';\nimport type {Fiber} from './ReactInternalTypes';\nimport type {Lanes} from './ReactFiberLane';\n\nimport getComponentName from 'shared/getComponentName';\nimport {Placement, Deletion} from './ReactFiberFlags';\nimport {\n  getIteratorFn,\n  REACT_ELEMENT_TYPE,\n  REACT_FRAGMENT_TYPE,\n  REACT_PORTAL_TYPE,\n  REACT_LAZY_TYPE,\n  REACT_BLOCK_TYPE,\n} from 'shared/ReactSymbols';\nimport {\n  FunctionComponent,\n  ClassComponent,\n  HostText,\n  HostPortal,\n  ForwardRef,\n  Fragment,\n  SimpleMemoComponent,\n  Block,\n} from './ReactWorkTags';\nimport invariant from 'shared/invariant';\nimport {\n  warnAboutStringRefs,\n  enableBlocksAPI,\n  enableLazyElements,\n} from 'shared/ReactFeatureFlags';\n\nimport {\n  createWorkInProgress,\n  resetWorkInProgress,\n  createFiberFromElement,\n  createFiberFromFragment,\n  createFiberFromText,\n  createFiberFromPortal,\n} from './ReactFiber.old';\nimport {emptyRefsObject} from './ReactFiberClassComponent.old';\nimport {isCompatibleFamilyForHotReloading} from './ReactFiberHotReloading.old';\nimport {StrictMode} from './ReactTypeOfMode';\n\nlet didWarnAboutMaps;\nlet didWarnAboutGenerators;\nlet didWarnAboutStringRefs;\nlet ownerHasKeyUseWarning;\nlet ownerHasFunctionTypeWarning;\nlet warnForMissingKey = (child: mixed, returnFiber: Fiber) => {};\n\nif (__DEV__) {\n  didWarnAboutMaps = false;\n  didWarnAboutGenerators = false;\n  didWarnAboutStringRefs = {};\n\n  /**\n   * Warn if there's no key explicitly set on dynamic arrays of children or\n   * object keys are not valid. This allows us to keep track of children between\n   * updates.\n   */\n  ownerHasKeyUseWarning = {};\n  ownerHasFunctionTypeWarning = {};\n\n  warnForMissingKey = (child: mixed, returnFiber: Fiber) => {\n    if (child === null || typeof child !== 'object') {\n      return;\n    }\n    if (!child._store || child._store.validated || child.key != null) {\n      return;\n    }\n    invariant(\n      typeof child._store === 'object',\n      'React Component in warnForMissingKey should have a _store. ' +\n        'This error is likely caused by a bug in React. Please file an issue.',\n    );\n    child._store.validated = true;\n\n    const componentName = getComponentName(returnFiber.type) || 'Component';\n\n    if (ownerHasKeyUseWarning[componentName]) {\n      return;\n    }\n    ownerHasKeyUseWarning[componentName] = true;\n\n    console.error(\n      'Each child in a list should have a unique ' +\n        '\"key\" prop. See https://reactjs.org/link/warning-keys for ' +\n        'more information.',\n    );\n  };\n}\n\nconst isArray = Array.isArray;\n\nfunction coerceRef(\n  returnFiber: Fiber,\n  current: Fiber | null,\n  element: ReactElement,\n) {\n  const mixedRef = element.ref;\n  if (\n    mixedRef !== null &&\n    typeof mixedRef !== 'function' &&\n    typeof mixedRef !== 'object'\n  ) {\n    if (__DEV__) {\n      // TODO: Clean this up once we turn on the string ref warning for\n      // everyone, because the strict mode case will no longer be relevant\n      if (\n        (returnFiber.mode & StrictMode || warnAboutStringRefs) &&\n        // We warn in ReactElement.js if owner and self are equal for string refs\n        // because these cannot be automatically converted to an arrow function\n        // using a codemod. Therefore, we don't have to warn about string refs again.\n        !(\n          element._owner &&\n          element._self &&\n          element._owner.stateNode !== element._self\n        )\n      ) {\n        const componentName = getComponentName(returnFiber.type) || 'Component';\n        if (!didWarnAboutStringRefs[componentName]) {\n          if (warnAboutStringRefs) {\n            console.error(\n              'Component \"%s\" contains the string ref \"%s\". Support for string refs ' +\n                'will be removed in a future major release. We recommend using ' +\n                'useRef() or createRef() instead. ' +\n                'Learn more about using refs safely here: ' +\n                'https://reactjs.org/link/strict-mode-string-ref',\n              componentName,\n              mixedRef,\n            );\n          } else {\n            console.error(\n              'A string ref, \"%s\", has been found within a strict mode tree. ' +\n                'String refs are a source of potential bugs and should be avoided. ' +\n                'We recommend using useRef() or createRef() instead. ' +\n                'Learn more about using refs safely here: ' +\n                'https://reactjs.org/link/strict-mode-string-ref',\n              mixedRef,\n            );\n          }\n          didWarnAboutStringRefs[componentName] = true;\n        }\n      }\n    }\n\n    if (element._owner) {\n      const owner: ?Fiber = (element._owner: any);\n      let inst;\n      if (owner) {\n        const ownerFiber = ((owner: any): Fiber);\n        invariant(\n          ownerFiber.tag === ClassComponent,\n          'Function components cannot have string refs. ' +\n            'We recommend using useRef() instead. ' +\n            'Learn more about using refs safely here: ' +\n            'https://reactjs.org/link/strict-mode-string-ref',\n        );\n        inst = ownerFiber.stateNode;\n      }\n      invariant(\n        inst,\n        'Missing owner for string ref %s. This error is likely caused by a ' +\n          'bug in React. Please file an issue.',\n        mixedRef,\n      );\n      const stringRef = '' + mixedRef;\n      // Check if previous string ref matches new string ref\n      if (\n        current !== null &&\n        current.ref !== null &&\n        typeof current.ref === 'function' &&\n        current.ref._stringRef === stringRef\n      ) {\n        return current.ref;\n      }\n      const ref = function(value) {\n        let refs = inst.refs;\n        if (refs === emptyRefsObject) {\n          // This is a lazy pooled frozen object, so we need to initialize.\n          refs = inst.refs = {};\n        }\n        if (value === null) {\n          delete refs[stringRef];\n        } else {\n          refs[stringRef] = value;\n        }\n      };\n      ref._stringRef = stringRef;\n      return ref;\n    } else {\n      invariant(\n        typeof mixedRef === 'string',\n        'Expected ref to be a function, a string, an object returned by React.createRef(), or null.',\n      );\n      invariant(\n        element._owner,\n        'Element ref was specified as a string (%s) but no owner was set. This could happen for one of' +\n          ' the following reasons:\\n' +\n          '1. You may be adding a ref to a function component\\n' +\n          \"2. You may be adding a ref to a component that was not created inside a component's render method\\n\" +\n          '3. You have multiple copies of React loaded\\n' +\n          'See https://reactjs.org/link/refs-must-have-owner for more information.',\n        mixedRef,\n      );\n    }\n  }\n  return mixedRef;\n}\n\nfunction throwOnInvalidObjectType(returnFiber: Fiber, newChild: Object) {\n  if (returnFiber.type !== 'textarea') {\n    invariant(\n      false,\n      'Objects are not valid as a React child (found: %s). ' +\n        'If you meant to render a collection of children, use an array ' +\n        'instead.',\n      Object.prototype.toString.call(newChild) === '[object Object]'\n        ? 'object with keys {' + Object.keys(newChild).join(', ') + '}'\n        : newChild,\n    );\n  }\n}\n\nfunction warnOnFunctionType(returnFiber: Fiber) {\n  if (__DEV__) {\n    const componentName = getComponentName(returnFiber.type) || 'Component';\n\n    if (ownerHasFunctionTypeWarning[componentName]) {\n      return;\n    }\n    ownerHasFunctionTypeWarning[componentName] = true;\n\n    console.error(\n      'Functions are not valid as a React child. This may happen if ' +\n        'you return a Component instead of <Component /> from render. ' +\n        'Or maybe you meant to call this function rather than return it.',\n    );\n  }\n}\n\n// We avoid inlining this to avoid potential deopts from using try/catch.\n/** @noinline */\nfunction resolveLazyType<T, P>(\n  lazyComponent: LazyComponent<T, P>,\n): LazyComponent<T, P> | T {\n  try {\n    // If we can, let's peek at the resulting type.\n    const payload = lazyComponent._payload;\n    const init = lazyComponent._init;\n    return init(payload);\n  } catch (x) {\n    // Leave it in place and let it throw again in the begin phase.\n    return lazyComponent;\n  }\n}\n\n// This wrapper function exists because I expect to clone the code in each path\n// to be able to optimize each path individually by branching early. This needs\n// a compiler or we can do it manually. Helpers that don't need this branching\n// live outside of this function.\nfunction ChildReconciler(shouldTrackSideEffects) {\n  function deleteChild(returnFiber: Fiber, childToDelete: Fiber): void {\n    if (!shouldTrackSideEffects) {\n      // Noop.\n      return;\n    }\n    // Deletions are added in reversed order so we add it to the front.\n    // At this point, the return fiber's effect list is empty except for\n    // deletions, so we can just append the deletion to the list. The remaining\n    // effects aren't added until the complete phase. Once we implement\n    // resuming, this may not be true.\n    const last = returnFiber.lastEffect;\n    if (last !== null) {\n      last.nextEffect = childToDelete;\n      returnFiber.lastEffect = childToDelete;\n    } else {\n      returnFiber.firstEffect = returnFiber.lastEffect = childToDelete;\n    }\n    childToDelete.nextEffect = null;\n    childToDelete.flags = Deletion;\n  }\n\n  function deleteRemainingChildren(\n    returnFiber: Fiber,\n    currentFirstChild: Fiber | null,\n  ): null {\n    if (!shouldTrackSideEffects) {\n      // Noop.\n      return null;\n    }\n\n    // TODO: For the shouldClone case, this could be micro-optimized a bit by\n    // assuming that after the first child we've already added everything.\n    let childToDelete = currentFirstChild;\n    while (childToDelete !== null) {\n      deleteChild(returnFiber, childToDelete);\n      childToDelete = childToDelete.sibling;\n    }\n    return null;\n  }\n\n  function mapRemainingChildren(\n    returnFiber: Fiber,\n    currentFirstChild: Fiber,\n  ): Map<string | number, Fiber> {\n    // Add the remaining children to a temporary map so that we can find them by\n    // keys quickly. Implicit (null) keys get added to this set with their index\n    // instead.\n    const existingChildren: Map<string | number, Fiber> = new Map();\n\n    let existingChild = currentFirstChild;\n    while (existingChild !== null) {\n      if (existingChild.key !== null) {\n        existingChildren.set(existingChild.key, existingChild);\n      } else {\n        existingChildren.set(existingChild.index, existingChild);\n      }\n      existingChild = existingChild.sibling;\n    }\n    return existingChildren;\n  }\n\n  function useFiber(fiber: Fiber, pendingProps: mixed): Fiber {\n    // We currently set sibling to null and index to 0 here because it is easy\n    // to forget to do before returning it. E.g. for the single child case.\n    const clone = createWorkInProgress(fiber, pendingProps);\n    clone.index = 0;\n    clone.sibling = null;\n    return clone;\n  }\n\n  function placeChild(\n    newFiber: Fiber,\n    lastPlacedIndex: number,\n    newIndex: number,\n  ): number {\n    newFiber.index = newIndex;\n    if (!shouldTrackSideEffects) {\n      // Noop.\n      return lastPlacedIndex;\n    }\n    const current = newFiber.alternate;\n    if (current !== null) {\n      const oldIndex = current.index;\n      if (oldIndex < lastPlacedIndex) {\n        // This is a move.\n        newFiber.flags = Placement;\n        return lastPlacedIndex;\n      } else {\n        // This item can stay in place.\n        return oldIndex;\n      }\n    } else {\n      // This is an insertion.\n      newFiber.flags = Placement;\n      return lastPlacedIndex;\n    }\n  }\n\n  function placeSingleChild(newFiber: Fiber): Fiber {\n    // This is simpler for the single child case. We only need to do a\n    // placement for inserting new children.\n    if (shouldTrackSideEffects && newFiber.alternate === null) {\n      newFiber.flags = Placement;\n    }\n    return newFiber;\n  }\n\n  function updateTextNode(\n    returnFiber: Fiber,\n    current: Fiber | null,\n    textContent: string,\n    lanes: Lanes,\n  ) {\n    if (current === null || current.tag !== HostText) {\n      // Insert\n      const created = createFiberFromText(textContent, returnFiber.mode, lanes);\n      created.return = returnFiber;\n      return created;\n    } else {\n      // Update\n      const existing = useFiber(current, textContent);\n      existing.return = returnFiber;\n      return existing;\n    }\n  }\n\n  function updateElement(\n    returnFiber: Fiber,\n    current: Fiber | null,\n    element: ReactElement,\n    lanes: Lanes,\n  ): Fiber {\n    if (current !== null) {\n      if (\n        current.elementType === element.type ||\n        // Keep this check inline so it only runs on the false path:\n        (__DEV__ ? isCompatibleFamilyForHotReloading(current, element) : false)\n      ) {\n        // Move based on index\n        const existing = useFiber(current, element.props);\n        existing.ref = coerceRef(returnFiber, current, element);\n        existing.return = returnFiber;\n        if (__DEV__) {\n          existing._debugSource = element._source;\n          existing._debugOwner = element._owner;\n        }\n        return existing;\n      } else if (enableBlocksAPI && current.tag === Block) {\n        // The new Block might not be initialized yet. We need to initialize\n        // it in case initializing it turns out it would match.\n        let type = element.type;\n        if (type.$$typeof === REACT_LAZY_TYPE) {\n          type = resolveLazyType(type);\n        }\n        if (\n          type.$$typeof === REACT_BLOCK_TYPE &&\n          ((type: any): BlockComponent<any, any>)._render ===\n            (current.type: BlockComponent<any, any>)._render\n        ) {\n          // Same as above but also update the .type field.\n          const existing = useFiber(current, element.props);\n          existing.return = returnFiber;\n          existing.type = type;\n          if (__DEV__) {\n            existing._debugSource = element._source;\n            existing._debugOwner = element._owner;\n          }\n          return existing;\n        }\n      }\n    }\n    // Insert\n    const created = createFiberFromElement(element, returnFiber.mode, lanes);\n    created.ref = coerceRef(returnFiber, current, element);\n    created.return = returnFiber;\n    return created;\n  }\n\n  function updatePortal(\n    returnFiber: Fiber,\n    current: Fiber | null,\n    portal: ReactPortal,\n    lanes: Lanes,\n  ): Fiber {\n    if (\n      current === null ||\n      current.tag !== HostPortal ||\n      current.stateNode.containerInfo !== portal.containerInfo ||\n      current.stateNode.implementation !== portal.implementation\n    ) {\n      // Insert\n      const created = createFiberFromPortal(portal, returnFiber.mode, lanes);\n      created.return = returnFiber;\n      return created;\n    } else {\n      // Update\n      const existing = useFiber(current, portal.children || []);\n      existing.return = returnFiber;\n      return existing;\n    }\n  }\n\n  function updateFragment(\n    returnFiber: Fiber,\n    current: Fiber | null,\n    fragment: Iterable<*>,\n    lanes: Lanes,\n    key: null | string,\n  ): Fiber {\n    if (current === null || current.tag !== Fragment) {\n      // Insert\n      const created = createFiberFromFragment(\n        fragment,\n        returnFiber.mode,\n        lanes,\n        key,\n      );\n      created.return = returnFiber;\n      return created;\n    } else {\n      // Update\n      const existing = useFiber(current, fragment);\n      existing.return = returnFiber;\n      return existing;\n    }\n  }\n\n  function createChild(\n    returnFiber: Fiber,\n    newChild: any,\n    lanes: Lanes,\n  ): Fiber | null {\n    if (typeof newChild === 'string' || typeof newChild === 'number') {\n      // Text nodes don't have keys. If the previous node is implicitly keyed\n      // we can continue to replace it without aborting even if it is not a text\n      // node.\n      const created = createFiberFromText(\n        '' + newChild,\n        returnFiber.mode,\n        lanes,\n      );\n      created.return = returnFiber;\n      return created;\n    }\n\n    if (typeof newChild === 'object' && newChild !== null) {\n      switch (newChild.$$typeof) {\n        case REACT_ELEMENT_TYPE: {\n          const created = createFiberFromElement(\n            newChild,\n            returnFiber.mode,\n            lanes,\n          );\n          created.ref = coerceRef(returnFiber, null, newChild);\n          created.return = returnFiber;\n          return created;\n        }\n        case REACT_PORTAL_TYPE: {\n          const created = createFiberFromPortal(\n            newChild,\n            returnFiber.mode,\n            lanes,\n          );\n          created.return = returnFiber;\n          return created;\n        }\n        case REACT_LAZY_TYPE: {\n          if (enableLazyElements) {\n            const payload = newChild._payload;\n            const init = newChild._init;\n            return createChild(returnFiber, init(payload), lanes);\n          }\n        }\n      }\n\n      if (isArray(newChild) || getIteratorFn(newChild)) {\n        const created = createFiberFromFragment(\n          newChild,\n          returnFiber.mode,\n          lanes,\n          null,\n        );\n        created.return = returnFiber;\n        return created;\n      }\n\n      throwOnInvalidObjectType(returnFiber, newChild);\n    }\n\n    if (__DEV__) {\n      if (typeof newChild === 'function') {\n        warnOnFunctionType(returnFiber);\n      }\n    }\n\n    return null;\n  }\n\n  function updateSlot(\n    returnFiber: Fiber,\n    oldFiber: Fiber | null,\n    newChild: any,\n    lanes: Lanes,\n  ): Fiber | null {\n    // Update the fiber if the keys match, otherwise return null.\n\n    const key = oldFiber !== null ? oldFiber.key : null;\n\n    if (typeof newChild === 'string' || typeof newChild === 'number') {\n      // Text nodes don't have keys. If the previous node is implicitly keyed\n      // we can continue to replace it without aborting even if it is not a text\n      // node.\n      if (key !== null) {\n        return null;\n      }\n      return updateTextNode(returnFiber, oldFiber, '' + newChild, lanes);\n    }\n\n    if (typeof newChild === 'object' && newChild !== null) {\n      switch (newChild.$$typeof) {\n        case REACT_ELEMENT_TYPE: {\n          if (newChild.key === key) {\n            if (newChild.type === REACT_FRAGMENT_TYPE) {\n              return updateFragment(\n                returnFiber,\n                oldFiber,\n                newChild.props.children,\n                lanes,\n                key,\n              );\n            }\n            return updateElement(returnFiber, oldFiber, newChild, lanes);\n          } else {\n            return null;\n          }\n        }\n        case REACT_PORTAL_TYPE: {\n          if (newChild.key === key) {\n            return updatePortal(returnFiber, oldFiber, newChild, lanes);\n          } else {\n            return null;\n          }\n        }\n        case REACT_LAZY_TYPE: {\n          if (enableLazyElements) {\n            const payload = newChild._payload;\n            const init = newChild._init;\n            return updateSlot(returnFiber, oldFiber, init(payload), lanes);\n          }\n        }\n      }\n\n      if (isArray(newChild) || getIteratorFn(newChild)) {\n        if (key !== null) {\n          return null;\n        }\n\n        return updateFragment(returnFiber, oldFiber, newChild, lanes, null);\n      }\n\n      throwOnInvalidObjectType(returnFiber, newChild);\n    }\n\n    if (__DEV__) {\n      if (typeof newChild === 'function') {\n        warnOnFunctionType(returnFiber);\n      }\n    }\n\n    return null;\n  }\n\n  function updateFromMap(\n    existingChildren: Map<string | number, Fiber>,\n    returnFiber: Fiber,\n    newIdx: number,\n    newChild: any,\n    lanes: Lanes,\n  ): Fiber | null {\n    if (typeof newChild === 'string' || typeof newChild === 'number') {\n      // Text nodes don't have keys, so we neither have to check the old nor\n      // new node for the key. If both are text nodes, they match.\n      const matchedFiber = existingChildren.get(newIdx) || null;\n      return updateTextNode(returnFiber, matchedFiber, '' + newChild, lanes);\n    }\n\n    if (typeof newChild === 'object' && newChild !== null) {\n      switch (newChild.$$typeof) {\n        case REACT_ELEMENT_TYPE: {\n          const matchedFiber =\n            existingChildren.get(\n              newChild.key === null ? newIdx : newChild.key,\n            ) || null;\n          if (newChild.type === REACT_FRAGMENT_TYPE) {\n            return updateFragment(\n              returnFiber,\n              matchedFiber,\n              newChild.props.children,\n              lanes,\n              newChild.key,\n            );\n          }\n          return updateElement(returnFiber, matchedFiber, newChild, lanes);\n        }\n        case REACT_PORTAL_TYPE: {\n          const matchedFiber =\n            existingChildren.get(\n              newChild.key === null ? newIdx : newChild.key,\n            ) || null;\n          return updatePortal(returnFiber, matchedFiber, newChild, lanes);\n        }\n        case REACT_LAZY_TYPE:\n          if (enableLazyElements) {\n            const payload = newChild._payload;\n            const init = newChild._init;\n            return updateFromMap(\n              existingChildren,\n              returnFiber,\n              newIdx,\n              init(payload),\n              lanes,\n            );\n          }\n      }\n\n      if (isArray(newChild) || getIteratorFn(newChild)) {\n        const matchedFiber = existingChildren.get(newIdx) || null;\n        return updateFragment(returnFiber, matchedFiber, newChild, lanes, null);\n      }\n\n      throwOnInvalidObjectType(returnFiber, newChild);\n    }\n\n    if (__DEV__) {\n      if (typeof newChild === 'function') {\n        warnOnFunctionType(returnFiber);\n      }\n    }\n\n    return null;\n  }\n\n  /**\n   * Warns if there is a duplicate or missing key\n   */\n  function warnOnInvalidKey(\n    child: mixed,\n    knownKeys: Set<string> | null,\n    returnFiber: Fiber,\n  ): Set<string> | null {\n    if (__DEV__) {\n      if (typeof child !== 'object' || child === null) {\n        return knownKeys;\n      }\n      switch (child.$$typeof) {\n        case REACT_ELEMENT_TYPE:\n        case REACT_PORTAL_TYPE:\n          warnForMissingKey(child, returnFiber);\n          const key = child.key;\n          if (typeof key !== 'string') {\n            break;\n          }\n          if (knownKeys === null) {\n            knownKeys = new Set();\n            knownKeys.add(key);\n            break;\n          }\n          if (!knownKeys.has(key)) {\n            knownKeys.add(key);\n            break;\n          }\n          console.error(\n            'Encountered two children with the same key, `%s`. ' +\n              'Keys should be unique so that components maintain their identity ' +\n              'across updates. Non-unique keys may cause children to be ' +\n              'duplicated and/or omitted — the behavior is unsupported and ' +\n              'could change in a future version.',\n            key,\n          );\n          break;\n        case REACT_LAZY_TYPE:\n          if (enableLazyElements) {\n            const payload = child._payload;\n            const init = (child._init: any);\n            warnOnInvalidKey(init(payload), knownKeys, returnFiber);\n            break;\n          }\n        // We intentionally fallthrough here if enableLazyElements is not on.\n        // eslint-disable-next-lined no-fallthrough\n        default:\n          break;\n      }\n    }\n    return knownKeys;\n  }\n\n  function reconcileChildrenArray(\n    returnFiber: Fiber,\n    currentFirstChild: Fiber | null,\n    newChildren: Array<*>,\n    lanes: Lanes,\n  ): Fiber | null {\n    // This algorithm can't optimize by searching from both ends since we\n    // don't have backpointers on fibers. I'm trying to see how far we can get\n    // with that model. If it ends up not being worth the tradeoffs, we can\n    // add it later.\n\n    // Even with a two ended optimization, we'd want to optimize for the case\n    // where there are few changes and brute force the comparison instead of\n    // going for the Map. It'd like to explore hitting that path first in\n    // forward-only mode and only go for the Map once we notice that we need\n    // lots of look ahead. This doesn't handle reversal as well as two ended\n    // search but that's unusual. Besides, for the two ended optimization to\n    // work on Iterables, we'd need to copy the whole set.\n\n    // In this first iteration, we'll just live with hitting the bad case\n    // (adding everything to a Map) in for every insert/move.\n\n    // If you change this code, also update reconcileChildrenIterator() which\n    // uses the same algorithm.\n\n    if (__DEV__) {\n      // First, validate keys.\n      let knownKeys = null;\n      for (let i = 0; i < newChildren.length; i++) {\n        const child = newChildren[i];\n        knownKeys = warnOnInvalidKey(child, knownKeys, returnFiber);\n      }\n    }\n\n    let resultingFirstChild: Fiber | null = null;\n    let previousNewFiber: Fiber | null = null;\n\n    let oldFiber = currentFirstChild;\n    let lastPlacedIndex = 0;\n    let newIdx = 0;\n    let nextOldFiber = null;\n    for (; oldFiber !== null && newIdx < newChildren.length; newIdx++) {\n      if (oldFiber.index > newIdx) {\n        nextOldFiber = oldFiber;\n        oldFiber = null;\n      } else {\n        nextOldFiber = oldFiber.sibling;\n      }\n      const newFiber = updateSlot(\n        returnFiber,\n        oldFiber,\n        newChildren[newIdx],\n        lanes,\n      );\n      if (newFiber === null) {\n        // TODO: This breaks on empty slots like null children. That's\n        // unfortunate because it triggers the slow path all the time. We need\n        // a better way to communicate whether this was a miss or null,\n        // boolean, undefined, etc.\n        if (oldFiber === null) {\n          oldFiber = nextOldFiber;\n        }\n        break;\n      }\n      if (shouldTrackSideEffects) {\n        if (oldFiber && newFiber.alternate === null) {\n          // We matched the slot, but we didn't reuse the existing fiber, so we\n          // need to delete the existing child.\n          deleteChild(returnFiber, oldFiber);\n        }\n      }\n      lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);\n      if (previousNewFiber === null) {\n        // TODO: Move out of the loop. This only happens for the first run.\n        resultingFirstChild = newFiber;\n      } else {\n        // TODO: Defer siblings if we're not at the right index for this slot.\n        // I.e. if we had null values before, then we want to defer this\n        // for each null value. However, we also don't want to call updateSlot\n        // with the previous one.\n        previousNewFiber.sibling = newFiber;\n      }\n      previousNewFiber = newFiber;\n      oldFiber = nextOldFiber;\n    }\n\n    if (newIdx === newChildren.length) {\n      // We've reached the end of the new children. We can delete the rest.\n      deleteRemainingChildren(returnFiber, oldFiber);\n      return resultingFirstChild;\n    }\n\n    if (oldFiber === null) {\n      // If we don't have any more existing children we can choose a fast path\n      // since the rest will all be insertions.\n      for (; newIdx < newChildren.length; newIdx++) {\n        const newFiber = createChild(returnFiber, newChildren[newIdx], lanes);\n        if (newFiber === null) {\n          continue;\n        }\n        lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);\n        if (previousNewFiber === null) {\n          // TODO: Move out of the loop. This only happens for the first run.\n          resultingFirstChild = newFiber;\n        } else {\n          previousNewFiber.sibling = newFiber;\n        }\n        previousNewFiber = newFiber;\n      }\n      return resultingFirstChild;\n    }\n\n    // Add all children to a key map for quick lookups.\n    const existingChildren = mapRemainingChildren(returnFiber, oldFiber);\n\n    // Keep scanning and use the map to restore deleted items as moves.\n    for (; newIdx < newChildren.length; newIdx++) {\n      const newFiber = updateFromMap(\n        existingChildren,\n        returnFiber,\n        newIdx,\n        newChildren[newIdx],\n        lanes,\n      );\n      if (newFiber !== null) {\n        if (shouldTrackSideEffects) {\n          if (newFiber.alternate !== null) {\n            // The new fiber is a work in progress, but if there exists a\n            // current, that means that we reused the fiber. We need to delete\n            // it from the child list so that we don't add it to the deletion\n            // list.\n            existingChildren.delete(\n              newFiber.key === null ? newIdx : newFiber.key,\n            );\n          }\n        }\n        lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);\n        if (previousNewFiber === null) {\n          resultingFirstChild = newFiber;\n        } else {\n          previousNewFiber.sibling = newFiber;\n        }\n        previousNewFiber = newFiber;\n      }\n    }\n\n    if (shouldTrackSideEffects) {\n      // Any existing children that weren't consumed above were deleted. We need\n      // to add them to the deletion list.\n      existingChildren.forEach(child => deleteChild(returnFiber, child));\n    }\n\n    return resultingFirstChild;\n  }\n\n  function reconcileChildrenIterator(\n    returnFiber: Fiber,\n    currentFirstChild: Fiber | null,\n    newChildrenIterable: Iterable<*>,\n    lanes: Lanes,\n  ): Fiber | null {\n    // This is the same implementation as reconcileChildrenArray(),\n    // but using the iterator instead.\n\n    const iteratorFn = getIteratorFn(newChildrenIterable);\n    invariant(\n      typeof iteratorFn === 'function',\n      'An object is not an iterable. This error is likely caused by a bug in ' +\n        'React. Please file an issue.',\n    );\n\n    if (__DEV__) {\n      // We don't support rendering Generators because it's a mutation.\n      // See https://github.com/facebook/react/issues/12995\n      if (\n        typeof Symbol === 'function' &&\n        // $FlowFixMe Flow doesn't know about toStringTag\n        newChildrenIterable[Symbol.toStringTag] === 'Generator'\n      ) {\n        if (!didWarnAboutGenerators) {\n          console.error(\n            'Using Generators as children is unsupported and will likely yield ' +\n              'unexpected results because enumerating a generator mutates it. ' +\n              'You may convert it to an array with `Array.from()` or the ' +\n              '`[...spread]` operator before rendering. Keep in mind ' +\n              'you might need to polyfill these features for older browsers.',\n          );\n        }\n        didWarnAboutGenerators = true;\n      }\n\n      // Warn about using Maps as children\n      if ((newChildrenIterable: any).entries === iteratorFn) {\n        if (!didWarnAboutMaps) {\n          console.error(\n            'Using Maps as children is not supported. ' +\n              'Use an array of keyed ReactElements instead.',\n          );\n        }\n        didWarnAboutMaps = true;\n      }\n\n      // First, validate keys.\n      // We'll get a different iterator later for the main pass.\n      const newChildren = iteratorFn.call(newChildrenIterable);\n      if (newChildren) {\n        let knownKeys = null;\n        let step = newChildren.next();\n        for (; !step.done; step = newChildren.next()) {\n          const child = step.value;\n          knownKeys = warnOnInvalidKey(child, knownKeys, returnFiber);\n        }\n      }\n    }\n\n    const newChildren = iteratorFn.call(newChildrenIterable);\n    invariant(newChildren != null, 'An iterable object provided no iterator.');\n\n    let resultingFirstChild: Fiber | null = null;\n    let previousNewFiber: Fiber | null = null;\n\n    let oldFiber = currentFirstChild;\n    let lastPlacedIndex = 0;\n    let newIdx = 0;\n    let nextOldFiber = null;\n\n    let step = newChildren.next();\n    for (\n      ;\n      oldFiber !== null && !step.done;\n      newIdx++, step = newChildren.next()\n    ) {\n      if (oldFiber.index > newIdx) {\n        nextOldFiber = oldFiber;\n        oldFiber = null;\n      } else {\n        nextOldFiber = oldFiber.sibling;\n      }\n      const newFiber = updateSlot(returnFiber, oldFiber, step.value, lanes);\n      if (newFiber === null) {\n        // TODO: This breaks on empty slots like null children. That's\n        // unfortunate because it triggers the slow path all the time. We need\n        // a better way to communicate whether this was a miss or null,\n        // boolean, undefined, etc.\n        if (oldFiber === null) {\n          oldFiber = nextOldFiber;\n        }\n        break;\n      }\n      if (shouldTrackSideEffects) {\n        if (oldFiber && newFiber.alternate === null) {\n          // We matched the slot, but we didn't reuse the existing fiber, so we\n          // need to delete the existing child.\n          deleteChild(returnFiber, oldFiber);\n        }\n      }\n      lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);\n      if (previousNewFiber === null) {\n        // TODO: Move out of the loop. This only happens for the first run.\n        resultingFirstChild = newFiber;\n      } else {\n        // TODO: Defer siblings if we're not at the right index for this slot.\n        // I.e. if we had null values before, then we want to defer this\n        // for each null value. However, we also don't want to call updateSlot\n        // with the previous one.\n        previousNewFiber.sibling = newFiber;\n      }\n      previousNewFiber = newFiber;\n      oldFiber = nextOldFiber;\n    }\n\n    if (step.done) {\n      // We've reached the end of the new children. We can delete the rest.\n      deleteRemainingChildren(returnFiber, oldFiber);\n      return resultingFirstChild;\n    }\n\n    if (oldFiber === null) {\n      // If we don't have any more existing children we can choose a fast path\n      // since the rest will all be insertions.\n      for (; !step.done; newIdx++, step = newChildren.next()) {\n        const newFiber = createChild(returnFiber, step.value, lanes);\n        if (newFiber === null) {\n          continue;\n        }\n        lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);\n        if (previousNewFiber === null) {\n          // TODO: Move out of the loop. This only happens for the first run.\n          resultingFirstChild = newFiber;\n        } else {\n          previousNewFiber.sibling = newFiber;\n        }\n        previousNewFiber = newFiber;\n      }\n      return resultingFirstChild;\n    }\n\n    // Add all children to a key map for quick lookups.\n    const existingChildren = mapRemainingChildren(returnFiber, oldFiber);\n\n    // Keep scanning and use the map to restore deleted items as moves.\n    for (; !step.done; newIdx++, step = newChildren.next()) {\n      const newFiber = updateFromMap(\n        existingChildren,\n        returnFiber,\n        newIdx,\n        step.value,\n        lanes,\n      );\n      if (newFiber !== null) {\n        if (shouldTrackSideEffects) {\n          if (newFiber.alternate !== null) {\n            // The new fiber is a work in progress, but if there exists a\n            // current, that means that we reused the fiber. We need to delete\n            // it from the child list so that we don't add it to the deletion\n            // list.\n            existingChildren.delete(\n              newFiber.key === null ? newIdx : newFiber.key,\n            );\n          }\n        }\n        lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);\n        if (previousNewFiber === null) {\n          resultingFirstChild = newFiber;\n        } else {\n          previousNewFiber.sibling = newFiber;\n        }\n        previousNewFiber = newFiber;\n      }\n    }\n\n    if (shouldTrackSideEffects) {\n      // Any existing children that weren't consumed above were deleted. We need\n      // to add them to the deletion list.\n      existingChildren.forEach(child => deleteChild(returnFiber, child));\n    }\n\n    return resultingFirstChild;\n  }\n\n  function reconcileSingleTextNode(\n    returnFiber: Fiber,\n    currentFirstChild: Fiber | null,\n    textContent: string,\n    lanes: Lanes,\n  ): Fiber {\n    // There's no need to check for keys on text nodes since we don't have a\n    // way to define them.\n    if (currentFirstChild !== null && currentFirstChild.tag === HostText) {\n      // We already have an existing node so let's just update it and delete\n      // the rest.\n      deleteRemainingChildren(returnFiber, currentFirstChild.sibling);\n      const existing = useFiber(currentFirstChild, textContent);\n      existing.return = returnFiber;\n      return existing;\n    }\n    // The existing first child is not a text node so we need to create one\n    // and delete the existing ones.\n    deleteRemainingChildren(returnFiber, currentFirstChild);\n    const created = createFiberFromText(textContent, returnFiber.mode, lanes);\n    created.return = returnFiber;\n    return created;\n  }\n\n  function reconcileSingleElement(\n    returnFiber: Fiber,\n    currentFirstChild: Fiber | null,\n    element: ReactElement,\n    lanes: Lanes,\n  ): Fiber {\n    const key = element.key;\n    let child = currentFirstChild;\n    while (child !== null) {\n      // TODO: If key === null and child.key === null, then this only applies to\n      // the first item in the list.\n      if (child.key === key) {\n        switch (child.tag) {\n          case Fragment: {\n            if (element.type === REACT_FRAGMENT_TYPE) {\n              deleteRemainingChildren(returnFiber, child.sibling);\n              const existing = useFiber(child, element.props.children);\n              existing.return = returnFiber;\n              if (__DEV__) {\n                existing._debugSource = element._source;\n                existing._debugOwner = element._owner;\n              }\n              return existing;\n            }\n            break;\n          }\n          case Block:\n            if (enableBlocksAPI) {\n              let type = element.type;\n              if (type.$$typeof === REACT_LAZY_TYPE) {\n                type = resolveLazyType(type);\n              }\n              if (type.$$typeof === REACT_BLOCK_TYPE) {\n                // The new Block might not be initialized yet. We need to initialize\n                // it in case initializing it turns out it would match.\n                if (\n                  ((type: any): BlockComponent<any, any>)._render ===\n                  (child.type: BlockComponent<any, any>)._render\n                ) {\n                  deleteRemainingChildren(returnFiber, child.sibling);\n                  const existing = useFiber(child, element.props);\n                  existing.type = type;\n                  existing.return = returnFiber;\n                  if (__DEV__) {\n                    existing._debugSource = element._source;\n                    existing._debugOwner = element._owner;\n                  }\n                  return existing;\n                }\n              }\n            }\n          // We intentionally fallthrough here if enableBlocksAPI is not on.\n          // eslint-disable-next-lined no-fallthrough\n          default: {\n            if (\n              child.elementType === element.type ||\n              // Keep this check inline so it only runs on the false path:\n              (__DEV__\n                ? isCompatibleFamilyForHotReloading(child, element)\n                : false)\n            ) {\n              deleteRemainingChildren(returnFiber, child.sibling);\n              const existing = useFiber(child, element.props);\n              existing.ref = coerceRef(returnFiber, child, element);\n              existing.return = returnFiber;\n              if (__DEV__) {\n                existing._debugSource = element._source;\n                existing._debugOwner = element._owner;\n              }\n              return existing;\n            }\n            break;\n          }\n        }\n        // Didn't match.\n        deleteRemainingChildren(returnFiber, child);\n        break;\n      } else {\n        deleteChild(returnFiber, child);\n      }\n      child = child.sibling;\n    }\n\n    if (element.type === REACT_FRAGMENT_TYPE) {\n      const created = createFiberFromFragment(\n        element.props.children,\n        returnFiber.mode,\n        lanes,\n        element.key,\n      );\n      created.return = returnFiber;\n      return created;\n    } else {\n      const created = createFiberFromElement(element, returnFiber.mode, lanes);\n      created.ref = coerceRef(returnFiber, currentFirstChild, element);\n      created.return = returnFiber;\n      return created;\n    }\n  }\n\n  function reconcileSinglePortal(\n    returnFiber: Fiber,\n    currentFirstChild: Fiber | null,\n    portal: ReactPortal,\n    lanes: Lanes,\n  ): Fiber {\n    const key = portal.key;\n    let child = currentFirstChild;\n    while (child !== null) {\n      // TODO: If key === null and child.key === null, then this only applies to\n      // the first item in the list.\n      if (child.key === key) {\n        if (\n          child.tag === HostPortal &&\n          child.stateNode.containerInfo === portal.containerInfo &&\n          child.stateNode.implementation === portal.implementation\n        ) {\n          deleteRemainingChildren(returnFiber, child.sibling);\n          const existing = useFiber(child, portal.children || []);\n          existing.return = returnFiber;\n          return existing;\n        } else {\n          deleteRemainingChildren(returnFiber, child);\n          break;\n        }\n      } else {\n        deleteChild(returnFiber, child);\n      }\n      child = child.sibling;\n    }\n\n    const created = createFiberFromPortal(portal, returnFiber.mode, lanes);\n    created.return = returnFiber;\n    return created;\n  }\n\n  // This API will tag the children with the side-effect of the reconciliation\n  // itself. They will be added to the side-effect list as we pass through the\n  // children and the parent.\n  function reconcileChildFibers(\n    returnFiber: Fiber,\n    currentFirstChild: Fiber | null,\n    newChild: any,\n    lanes: Lanes,\n  ): Fiber | null {\n    // This function is not recursive.\n    // If the top level item is an array, we treat it as a set of children,\n    // not as a fragment. Nested arrays on the other hand will be treated as\n    // fragment nodes. Recursion happens at the normal flow.\n\n    // Handle top level unkeyed fragments as if they were arrays.\n    // This leads to an ambiguity between <>{[...]}</> and <>...</>.\n    // We treat the ambiguous cases above the same.\n    const isUnkeyedTopLevelFragment =\n      typeof newChild === 'object' &&\n      newChild !== null &&\n      newChild.type === REACT_FRAGMENT_TYPE &&\n      newChild.key === null;\n    if (isUnkeyedTopLevelFragment) {\n      newChild = newChild.props.children;\n    }\n\n    // Handle object types\n    const isObject = typeof newChild === 'object' && newChild !== null;\n\n    if (isObject) {\n      switch (newChild.$$typeof) {\n        case REACT_ELEMENT_TYPE:\n          return placeSingleChild(\n            reconcileSingleElement(\n              returnFiber,\n              currentFirstChild,\n              newChild,\n              lanes,\n            ),\n          );\n        case REACT_PORTAL_TYPE:\n          return placeSingleChild(\n            reconcileSinglePortal(\n              returnFiber,\n              currentFirstChild,\n              newChild,\n              lanes,\n            ),\n          );\n        case REACT_LAZY_TYPE:\n          if (enableLazyElements) {\n            const payload = newChild._payload;\n            const init = newChild._init;\n            // TODO: This function is supposed to be non-recursive.\n            return reconcileChildFibers(\n              returnFiber,\n              currentFirstChild,\n              init(payload),\n              lanes,\n            );\n          }\n      }\n    }\n\n    if (typeof newChild === 'string' || typeof newChild === 'number') {\n      return placeSingleChild(\n        reconcileSingleTextNode(\n          returnFiber,\n          currentFirstChild,\n          '' + newChild,\n          lanes,\n        ),\n      );\n    }\n\n    if (isArray(newChild)) {\n      return reconcileChildrenArray(\n        returnFiber,\n        currentFirstChild,\n        newChild,\n        lanes,\n      );\n    }\n\n    if (getIteratorFn(newChild)) {\n      return reconcileChildrenIterator(\n        returnFiber,\n        currentFirstChild,\n        newChild,\n        lanes,\n      );\n    }\n\n    if (isObject) {\n      throwOnInvalidObjectType(returnFiber, newChild);\n    }\n\n    if (__DEV__) {\n      if (typeof newChild === 'function') {\n        warnOnFunctionType(returnFiber);\n      }\n    }\n    if (typeof newChild === 'undefined' && !isUnkeyedTopLevelFragment) {\n      // If the new child is undefined, and the return fiber is a composite\n      // component, throw an error. If Fiber return types are disabled,\n      // we already threw above.\n      switch (returnFiber.tag) {\n        case ClassComponent: {\n          if (__DEV__) {\n            const instance = returnFiber.stateNode;\n            if (instance.render._isMockFunction) {\n              // We allow auto-mocks to proceed as if they're returning null.\n              break;\n            }\n          }\n        }\n        // Intentionally fall through to the next case, which handles both\n        // functions and classes\n        // eslint-disable-next-lined no-fallthrough\n        case Block:\n        case FunctionComponent:\n        case ForwardRef:\n        case SimpleMemoComponent: {\n          invariant(\n            false,\n            '%s(...): Nothing was returned from render. This usually means a ' +\n              'return statement is missing. Or, to render nothing, ' +\n              'return null.',\n            getComponentName(returnFiber.type) || 'Component',\n          );\n        }\n      }\n    }\n\n    // Remaining cases are all treated as empty.\n    return deleteRemainingChildren(returnFiber, currentFirstChild);\n  }\n\n  return reconcileChildFibers;\n}\n\nexport const reconcileChildFibers = ChildReconciler(true);\nexport const mountChildFibers = ChildReconciler(false);\n\nexport function cloneChildFibers(\n  current: Fiber | null,\n  workInProgress: Fiber,\n): void {\n  invariant(\n    current === null || workInProgress.child === current.child,\n    'Resuming work not yet implemented.',\n  );\n\n  if (workInProgress.child === null) {\n    return;\n  }\n\n  let currentChild = workInProgress.child;\n  let newChild = createWorkInProgress(currentChild, currentChild.pendingProps);\n  workInProgress.child = newChild;\n\n  newChild.return = workInProgress;\n  while (currentChild.sibling !== null) {\n    currentChild = currentChild.sibling;\n    newChild = newChild.sibling = createWorkInProgress(\n      currentChild,\n      currentChild.pendingProps,\n    );\n    newChild.return = workInProgress;\n  }\n  newChild.sibling = null;\n}\n\n// Reset a workInProgress child set to prepare it for a second pass.\nexport function resetChildFibers(workInProgress: Fiber, lanes: Lanes): void {\n  let child = workInProgress.child;\n  while (child !== null) {\n    resetWorkInProgress(child, lanes);\n    child = child.sibling;\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactInternalTypes';\nimport type {StackCursor} from './ReactFiberStack.old';\nimport type {Container, HostContext} from './ReactFiberHostConfig';\n\nimport invariant from 'shared/invariant';\n\nimport {getChildHostContext, getRootHostContext} from './ReactFiberHostConfig';\nimport {createCursor, push, pop} from './ReactFiberStack.old';\n\ndeclare class NoContextT {}\nconst NO_CONTEXT: NoContextT = ({}: any);\n\nconst contextStackCursor: StackCursor<HostContext | NoContextT> = createCursor(\n  NO_CONTEXT,\n);\nconst contextFiberStackCursor: StackCursor<Fiber | NoContextT> = createCursor(\n  NO_CONTEXT,\n);\nconst rootInstanceStackCursor: StackCursor<\n  Container | NoContextT,\n> = createCursor(NO_CONTEXT);\n\nfunction requiredContext<Value>(c: Value | NoContextT): Value {\n  invariant(\n    c !== NO_CONTEXT,\n    'Expected host context to exist. This error is likely caused by a bug ' +\n      'in React. Please file an issue.',\n  );\n  return (c: any);\n}\n\nfunction getRootHostContainer(): Container {\n  const rootInstance = requiredContext(rootInstanceStackCursor.current);\n  return rootInstance;\n}\n\nfunction pushHostContainer(fiber: Fiber, nextRootInstance: Container) {\n  // Push current root instance onto the stack;\n  // This allows us to reset root when portals are popped.\n  push(rootInstanceStackCursor, nextRootInstance, fiber);\n  // Track the context and the Fiber that provided it.\n  // This enables us to pop only Fibers that provide unique contexts.\n  push(contextFiberStackCursor, fiber, fiber);\n\n  // Finally, we need to push the host context to the stack.\n  // However, we can't just call getRootHostContext() and push it because\n  // we'd have a different number of entries on the stack depending on\n  // whether getRootHostContext() throws somewhere in renderer code or not.\n  // So we push an empty value first. This lets us safely unwind on errors.\n  push(contextStackCursor, NO_CONTEXT, fiber);\n  const nextRootContext = getRootHostContext(nextRootInstance);\n  // Now that we know this function doesn't throw, replace it.\n  pop(contextStackCursor, fiber);\n  push(contextStackCursor, nextRootContext, fiber);\n}\n\nfunction popHostContainer(fiber: Fiber) {\n  pop(contextStackCursor, fiber);\n  pop(contextFiberStackCursor, fiber);\n  pop(rootInstanceStackCursor, fiber);\n}\n\nfunction getHostContext(): HostContext {\n  const context = requiredContext(contextStackCursor.current);\n  return context;\n}\n\nfunction pushHostContext(fiber: Fiber): void {\n  const rootInstance: Container = requiredContext(\n    rootInstanceStackCursor.current,\n  );\n  const context: HostContext = requiredContext(contextStackCursor.current);\n  const nextContext = getChildHostContext(context, fiber.type, rootInstance);\n\n  // Don't push this Fiber's context unless it's unique.\n  if (context === nextContext) {\n    return;\n  }\n\n  // Track the context and the Fiber that provided it.\n  // This enables us to pop only Fibers that provide unique contexts.\n  push(contextFiberStackCursor, fiber, fiber);\n  push(contextStackCursor, nextContext, fiber);\n}\n\nfunction popHostContext(fiber: Fiber): void {\n  // Do not pop unless this Fiber provided the current context.\n  // pushHostContext() only pushes Fibers that provide unique contexts.\n  if (contextFiberStackCursor.current !== fiber) {\n    return;\n  }\n\n  pop(contextStackCursor, fiber);\n  pop(contextFiberStackCursor, fiber);\n}\n\nexport {\n  getHostContext,\n  getRootHostContainer,\n  popHostContainer,\n  popHostContext,\n  pushHostContainer,\n  pushHostContext,\n};\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactInternalTypes';\nimport type {StackCursor} from './ReactFiberStack.old';\n\nimport {createCursor, push, pop} from './ReactFiberStack.old';\n\nexport opaque type SuspenseContext = number;\nexport opaque type SubtreeSuspenseContext: SuspenseContext = number;\nexport opaque type ShallowSuspenseContext: SuspenseContext = number;\n\nconst DefaultSuspenseContext: SuspenseContext = 0b00;\n\n// The Suspense Context is split into two parts. The lower bits is\n// inherited deeply down the subtree. The upper bits only affect\n// this immediate suspense boundary and gets reset each new\n// boundary or suspense list.\nconst SubtreeSuspenseContextMask: SuspenseContext = 0b01;\n\n// Subtree Flags:\n\n// InvisibleParentSuspenseContext indicates that one of our parent Suspense\n// boundaries is not currently showing visible main content.\n// Either because it is already showing a fallback or is not mounted at all.\n// We can use this to determine if it is desirable to trigger a fallback at\n// the parent. If not, then we might need to trigger undesirable boundaries\n// and/or suspend the commit to avoid hiding the parent content.\nexport const InvisibleParentSuspenseContext: SubtreeSuspenseContext = 0b01;\n\n// Shallow Flags:\n\n// ForceSuspenseFallback can be used by SuspenseList to force newly added\n// items into their fallback state during one of the render passes.\nexport const ForceSuspenseFallback: ShallowSuspenseContext = 0b10;\n\nexport const suspenseStackCursor: StackCursor<SuspenseContext> = createCursor(\n  DefaultSuspenseContext,\n);\n\nexport function hasSuspenseContext(\n  parentContext: SuspenseContext,\n  flag: SuspenseContext,\n): boolean {\n  return (parentContext & flag) !== 0;\n}\n\nexport function setDefaultShallowSuspenseContext(\n  parentContext: SuspenseContext,\n): SuspenseContext {\n  return parentContext & SubtreeSuspenseContextMask;\n}\n\nexport function setShallowSuspenseContext(\n  parentContext: SuspenseContext,\n  shallowContext: ShallowSuspenseContext,\n): SuspenseContext {\n  return (parentContext & SubtreeSuspenseContextMask) | shallowContext;\n}\n\nexport function addSubtreeSuspenseContext(\n  parentContext: SuspenseContext,\n  subtreeContext: SubtreeSuspenseContext,\n): SuspenseContext {\n  return parentContext | subtreeContext;\n}\n\nexport function pushSuspenseContext(\n  fiber: Fiber,\n  newContext: SuspenseContext,\n): void {\n  push(suspenseStackCursor, newContext, fiber);\n}\n\nexport function popSuspenseContext(fiber: Fiber): void {\n  pop(suspenseStackCursor, fiber);\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {ReactNodeList, Wakeable} from 'shared/ReactTypes';\nimport type {Fiber} from './ReactInternalTypes';\nimport type {SuspenseInstance} from './ReactFiberHostConfig';\nimport type {Lane} from './ReactFiberLane';\nimport {SuspenseComponent, SuspenseListComponent} from './ReactWorkTags';\nimport {NoFlags, DidCapture} from './ReactFiberFlags';\nimport {\n  isSuspenseInstancePending,\n  isSuspenseInstanceFallback,\n} from './ReactFiberHostConfig';\n\nexport type SuspenseProps = {|\n  children?: ReactNodeList,\n  fallback?: ReactNodeList,\n\n  // TODO: Add \"unstable_\" prefix?\n  suspenseCallback?: (Set<Wakeable> | null) => mixed,\n\n  unstable_expectedLoadTime?: number,\n|};\n\n// A null SuspenseState represents an unsuspended normal Suspense boundary.\n// A non-null SuspenseState means that it is blocked for one reason or another.\n// - A non-null dehydrated field means it's blocked pending hydration.\n//   - A non-null dehydrated field can use isSuspenseInstancePending or\n//     isSuspenseInstanceFallback to query the reason for being dehydrated.\n// - A null dehydrated field means it's blocked by something suspending and\n//   we're currently showing a fallback instead.\nexport type SuspenseState = {|\n  // If this boundary is still dehydrated, we store the SuspenseInstance\n  // here to indicate that it is dehydrated (flag) and for quick access\n  // to check things like isSuspenseInstancePending.\n  dehydrated: null | SuspenseInstance,\n  // Represents the lane we should attempt to hydrate a dehydrated boundary at.\n  // OffscreenLane is the default for dehydrated boundaries.\n  // NoLane is the default for normal boundaries, which turns into \"normal\" pri.\n  retryLane: Lane,\n|};\n\nexport type SuspenseListTailMode = 'collapsed' | 'hidden' | void;\n\nexport type SuspenseListRenderState = {|\n  isBackwards: boolean,\n  // The currently rendering tail row.\n  rendering: null | Fiber,\n  // The absolute time when we started rendering the most recent tail row.\n  renderingStartTime: number,\n  // The last of the already rendered children.\n  last: null | Fiber,\n  // Remaining rows on the tail of the list.\n  tail: null | Fiber,\n  // Tail insertions setting.\n  tailMode: SuspenseListTailMode,\n  // Last Effect before we rendered the \"rendering\" item.\n  // Used to remove new effects added by the rendered item.\n  lastEffect: null | Fiber,\n|};\n\nexport function shouldCaptureSuspense(\n  workInProgress: Fiber,\n  hasInvisibleParent: boolean,\n): boolean {\n  // If it was the primary children that just suspended, capture and render the\n  // fallback. Otherwise, don't capture and bubble to the next boundary.\n  const nextState: SuspenseState | null = workInProgress.memoizedState;\n  if (nextState !== null) {\n    if (nextState.dehydrated !== null) {\n      // A dehydrated boundary always captures.\n      return true;\n    }\n    return false;\n  }\n  const props = workInProgress.memoizedProps;\n  // In order to capture, the Suspense component must have a fallback prop.\n  if (props.fallback === undefined) {\n    return false;\n  }\n  // Regular boundaries always capture.\n  if (props.unstable_avoidThisFallback !== true) {\n    return true;\n  }\n  // If it's a boundary we should avoid, then we prefer to bubble up to the\n  // parent boundary if it is currently invisible.\n  if (hasInvisibleParent) {\n    return false;\n  }\n  // If the parent is not able to handle it, we must handle it.\n  return true;\n}\n\nexport function findFirstSuspended(row: Fiber): null | Fiber {\n  let node = row;\n  while (node !== null) {\n    if (node.tag === SuspenseComponent) {\n      const state: SuspenseState | null = node.memoizedState;\n      if (state !== null) {\n        const dehydrated: null | SuspenseInstance = state.dehydrated;\n        if (\n          dehydrated === null ||\n          isSuspenseInstancePending(dehydrated) ||\n          isSuspenseInstanceFallback(dehydrated)\n        ) {\n          return node;\n        }\n      }\n    } else if (\n      node.tag === SuspenseListComponent &&\n      // revealOrder undefined can't be trusted because it don't\n      // keep track of whether it suspended or not.\n      node.memoizedProps.revealOrder !== undefined\n    ) {\n      const didSuspend = (node.flags & DidCapture) !== NoFlags;\n      if (didSuspend) {\n        return node;\n      }\n    } else if (node.child !== null) {\n      node.child.return = node;\n      node = node.child;\n      continue;\n    }\n    if (node === row) {\n      return null;\n    }\n    while (node.sibling === null) {\n      if (node.return === null || node.return === row) {\n        return null;\n      }\n      node = node.return;\n    }\n    node.sibling.return = node.return;\n    node = node.sibling;\n  }\n  return null;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nexport type HookFlags = number;\n\nexport const NoFlags = /*  */ 0b000;\n\n// Represents whether effect should fire.\nexport const HasEffect = /* */ 0b001;\n\n// Represents the phase in which the effect (not the clean-up) fires.\nexport const Layout = /*    */ 0b010;\nexport const Passive = /*   */ 0b100;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactInternalTypes';\nimport type {\n  Instance,\n  TextInstance,\n  HydratableInstance,\n  SuspenseInstance,\n  Container,\n  HostContext,\n} from './ReactFiberHostConfig';\nimport type {SuspenseState} from './ReactFiberSuspenseComponent.old';\n\nimport {\n  HostComponent,\n  HostText,\n  HostRoot,\n  SuspenseComponent,\n} from './ReactWorkTags';\nimport {Deletion, Placement, Hydrating} from './ReactFiberFlags';\nimport invariant from 'shared/invariant';\n\nimport {\n  createFiberFromHostInstanceForDeletion,\n  createFiberFromDehydratedFragment,\n} from './ReactFiber.old';\nimport {\n  shouldSetTextContent,\n  supportsHydration,\n  canHydrateInstance,\n  canHydrateTextInstance,\n  canHydrateSuspenseInstance,\n  getNextHydratableSibling,\n  getFirstHydratableChild,\n  hydrateInstance,\n  hydrateTextInstance,\n  hydrateSuspenseInstance,\n  getNextHydratableInstanceAfterSuspenseInstance,\n  didNotMatchHydratedContainerTextInstance,\n  didNotMatchHydratedTextInstance,\n  didNotHydrateContainerInstance,\n  didNotHydrateInstance,\n  didNotFindHydratableContainerInstance,\n  didNotFindHydratableContainerTextInstance,\n  didNotFindHydratableContainerSuspenseInstance,\n  didNotFindHydratableInstance,\n  didNotFindHydratableTextInstance,\n  didNotFindHydratableSuspenseInstance,\n} from './ReactFiberHostConfig';\nimport {enableSuspenseServerRenderer} from 'shared/ReactFeatureFlags';\nimport {OffscreenLane} from './ReactFiberLane';\n\n// The deepest Fiber on the stack involved in a hydration context.\n// This may have been an insertion or a hydration.\nlet hydrationParentFiber: null | Fiber = null;\nlet nextHydratableInstance: null | HydratableInstance = null;\nlet isHydrating: boolean = false;\n\nfunction warnIfHydrating() {\n  if (__DEV__) {\n    if (isHydrating) {\n      console.error(\n        'We should not be hydrating here. This is a bug in React. Please file a bug.',\n      );\n    }\n  }\n}\n\nfunction enterHydrationState(fiber: Fiber): boolean {\n  if (!supportsHydration) {\n    return false;\n  }\n\n  const parentInstance = fiber.stateNode.containerInfo;\n  nextHydratableInstance = getFirstHydratableChild(parentInstance);\n  hydrationParentFiber = fiber;\n  isHydrating = true;\n  return true;\n}\n\nfunction reenterHydrationStateFromDehydratedSuspenseInstance(\n  fiber: Fiber,\n  suspenseInstance: SuspenseInstance,\n): boolean {\n  if (!supportsHydration) {\n    return false;\n  }\n  nextHydratableInstance = getNextHydratableSibling(suspenseInstance);\n  popToNextHostParent(fiber);\n  isHydrating = true;\n  return true;\n}\n\nfunction deleteHydratableInstance(\n  returnFiber: Fiber,\n  instance: HydratableInstance,\n) {\n  if (__DEV__) {\n    switch (returnFiber.tag) {\n      case HostRoot:\n        didNotHydrateContainerInstance(\n          returnFiber.stateNode.containerInfo,\n          instance,\n        );\n        break;\n      case HostComponent:\n        didNotHydrateInstance(\n          returnFiber.type,\n          returnFiber.memoizedProps,\n          returnFiber.stateNode,\n          instance,\n        );\n        break;\n    }\n  }\n\n  const childToDelete = createFiberFromHostInstanceForDeletion();\n  childToDelete.stateNode = instance;\n  childToDelete.return = returnFiber;\n  childToDelete.flags = Deletion;\n\n  // This might seem like it belongs on progressedFirstDeletion. However,\n  // these children are not part of the reconciliation list of children.\n  // Even if we abort and rereconcile the children, that will try to hydrate\n  // again and the nodes are still in the host tree so these will be\n  // recreated.\n  if (returnFiber.lastEffect !== null) {\n    returnFiber.lastEffect.nextEffect = childToDelete;\n    returnFiber.lastEffect = childToDelete;\n  } else {\n    returnFiber.firstEffect = returnFiber.lastEffect = childToDelete;\n  }\n}\n\nfunction insertNonHydratedInstance(returnFiber: Fiber, fiber: Fiber) {\n  fiber.flags = (fiber.flags & ~Hydrating) | Placement;\n  if (__DEV__) {\n    switch (returnFiber.tag) {\n      case HostRoot: {\n        const parentContainer = returnFiber.stateNode.containerInfo;\n        switch (fiber.tag) {\n          case HostComponent:\n            const type = fiber.type;\n            const props = fiber.pendingProps;\n            didNotFindHydratableContainerInstance(parentContainer, type, props);\n            break;\n          case HostText:\n            const text = fiber.pendingProps;\n            didNotFindHydratableContainerTextInstance(parentContainer, text);\n            break;\n          case SuspenseComponent:\n            didNotFindHydratableContainerSuspenseInstance(parentContainer);\n            break;\n        }\n        break;\n      }\n      case HostComponent: {\n        const parentType = returnFiber.type;\n        const parentProps = returnFiber.memoizedProps;\n        const parentInstance = returnFiber.stateNode;\n        switch (fiber.tag) {\n          case HostComponent:\n            const type = fiber.type;\n            const props = fiber.pendingProps;\n            didNotFindHydratableInstance(\n              parentType,\n              parentProps,\n              parentInstance,\n              type,\n              props,\n            );\n            break;\n          case HostText:\n            const text = fiber.pendingProps;\n            didNotFindHydratableTextInstance(\n              parentType,\n              parentProps,\n              parentInstance,\n              text,\n            );\n            break;\n          case SuspenseComponent:\n            didNotFindHydratableSuspenseInstance(\n              parentType,\n              parentProps,\n              parentInstance,\n            );\n            break;\n        }\n        break;\n      }\n      default:\n        return;\n    }\n  }\n}\n\nfunction tryHydrate(fiber, nextInstance) {\n  switch (fiber.tag) {\n    case HostComponent: {\n      const type = fiber.type;\n      const props = fiber.pendingProps;\n      const instance = canHydrateInstance(nextInstance, type, props);\n      if (instance !== null) {\n        fiber.stateNode = (instance: Instance);\n        return true;\n      }\n      return false;\n    }\n    case HostText: {\n      const text = fiber.pendingProps;\n      const textInstance = canHydrateTextInstance(nextInstance, text);\n      if (textInstance !== null) {\n        fiber.stateNode = (textInstance: TextInstance);\n        return true;\n      }\n      return false;\n    }\n    case SuspenseComponent: {\n      if (enableSuspenseServerRenderer) {\n        const suspenseInstance: null | SuspenseInstance = canHydrateSuspenseInstance(\n          nextInstance,\n        );\n        if (suspenseInstance !== null) {\n          const suspenseState: SuspenseState = {\n            dehydrated: suspenseInstance,\n            retryLane: OffscreenLane,\n          };\n          fiber.memoizedState = suspenseState;\n          // Store the dehydrated fragment as a child fiber.\n          // This simplifies the code for getHostSibling and deleting nodes,\n          // since it doesn't have to consider all Suspense boundaries and\n          // check if they're dehydrated ones or not.\n          const dehydratedFragment = createFiberFromDehydratedFragment(\n            suspenseInstance,\n          );\n          dehydratedFragment.return = fiber;\n          fiber.child = dehydratedFragment;\n          return true;\n        }\n      }\n      return false;\n    }\n    default:\n      return false;\n  }\n}\n\nfunction tryToClaimNextHydratableInstance(fiber: Fiber): void {\n  if (!isHydrating) {\n    return;\n  }\n  let nextInstance = nextHydratableInstance;\n  if (!nextInstance) {\n    // Nothing to hydrate. Make it an insertion.\n    insertNonHydratedInstance((hydrationParentFiber: any), fiber);\n    isHydrating = false;\n    hydrationParentFiber = fiber;\n    return;\n  }\n  const firstAttemptedInstance = nextInstance;\n  if (!tryHydrate(fiber, nextInstance)) {\n    // If we can't hydrate this instance let's try the next one.\n    // We use this as a heuristic. It's based on intuition and not data so it\n    // might be flawed or unnecessary.\n    nextInstance = getNextHydratableSibling(firstAttemptedInstance);\n    if (!nextInstance || !tryHydrate(fiber, nextInstance)) {\n      // Nothing to hydrate. Make it an insertion.\n      insertNonHydratedInstance((hydrationParentFiber: any), fiber);\n      isHydrating = false;\n      hydrationParentFiber = fiber;\n      return;\n    }\n    // We matched the next one, we'll now assume that the first one was\n    // superfluous and we'll delete it. Since we can't eagerly delete it\n    // we'll have to schedule a deletion. To do that, this node needs a dummy\n    // fiber associated with it.\n    deleteHydratableInstance(\n      (hydrationParentFiber: any),\n      firstAttemptedInstance,\n    );\n  }\n  hydrationParentFiber = fiber;\n  nextHydratableInstance = getFirstHydratableChild((nextInstance: any));\n}\n\nfunction prepareToHydrateHostInstance(\n  fiber: Fiber,\n  rootContainerInstance: Container,\n  hostContext: HostContext,\n): boolean {\n  if (!supportsHydration) {\n    invariant(\n      false,\n      'Expected prepareToHydrateHostInstance() to never be called. ' +\n        'This error is likely caused by a bug in React. Please file an issue.',\n    );\n  }\n\n  const instance: Instance = fiber.stateNode;\n  const updatePayload = hydrateInstance(\n    instance,\n    fiber.type,\n    fiber.memoizedProps,\n    rootContainerInstance,\n    hostContext,\n    fiber,\n  );\n  // TODO: Type this specific to this type of component.\n  fiber.updateQueue = (updatePayload: any);\n  // If the update payload indicates that there is a change or if there\n  // is a new ref we mark this as an update.\n  if (updatePayload !== null) {\n    return true;\n  }\n  return false;\n}\n\nfunction prepareToHydrateHostTextInstance(fiber: Fiber): boolean {\n  if (!supportsHydration) {\n    invariant(\n      false,\n      'Expected prepareToHydrateHostTextInstance() to never be called. ' +\n        'This error is likely caused by a bug in React. Please file an issue.',\n    );\n  }\n\n  const textInstance: TextInstance = fiber.stateNode;\n  const textContent: string = fiber.memoizedProps;\n  const shouldUpdate = hydrateTextInstance(textInstance, textContent, fiber);\n  if (__DEV__) {\n    if (shouldUpdate) {\n      // We assume that prepareToHydrateHostTextInstance is called in a context where the\n      // hydration parent is the parent host component of this host text.\n      const returnFiber = hydrationParentFiber;\n      if (returnFiber !== null) {\n        switch (returnFiber.tag) {\n          case HostRoot: {\n            const parentContainer = returnFiber.stateNode.containerInfo;\n            didNotMatchHydratedContainerTextInstance(\n              parentContainer,\n              textInstance,\n              textContent,\n            );\n            break;\n          }\n          case HostComponent: {\n            const parentType = returnFiber.type;\n            const parentProps = returnFiber.memoizedProps;\n            const parentInstance = returnFiber.stateNode;\n            didNotMatchHydratedTextInstance(\n              parentType,\n              parentProps,\n              parentInstance,\n              textInstance,\n              textContent,\n            );\n            break;\n          }\n        }\n      }\n    }\n  }\n  return shouldUpdate;\n}\n\nfunction prepareToHydrateHostSuspenseInstance(fiber: Fiber): void {\n  if (!supportsHydration) {\n    invariant(\n      false,\n      'Expected prepareToHydrateHostSuspenseInstance() to never be called. ' +\n        'This error is likely caused by a bug in React. Please file an issue.',\n    );\n  }\n\n  const suspenseState: null | SuspenseState = fiber.memoizedState;\n  const suspenseInstance: null | SuspenseInstance =\n    suspenseState !== null ? suspenseState.dehydrated : null;\n  invariant(\n    suspenseInstance,\n    'Expected to have a hydrated suspense instance. ' +\n      'This error is likely caused by a bug in React. Please file an issue.',\n  );\n  hydrateSuspenseInstance(suspenseInstance, fiber);\n}\n\nfunction skipPastDehydratedSuspenseInstance(\n  fiber: Fiber,\n): null | HydratableInstance {\n  if (!supportsHydration) {\n    invariant(\n      false,\n      'Expected skipPastDehydratedSuspenseInstance() to never be called. ' +\n        'This error is likely caused by a bug in React. Please file an issue.',\n    );\n  }\n  const suspenseState: null | SuspenseState = fiber.memoizedState;\n  const suspenseInstance: null | SuspenseInstance =\n    suspenseState !== null ? suspenseState.dehydrated : null;\n  invariant(\n    suspenseInstance,\n    'Expected to have a hydrated suspense instance. ' +\n      'This error is likely caused by a bug in React. Please file an issue.',\n  );\n  return getNextHydratableInstanceAfterSuspenseInstance(suspenseInstance);\n}\n\nfunction popToNextHostParent(fiber: Fiber): void {\n  let parent = fiber.return;\n  while (\n    parent !== null &&\n    parent.tag !== HostComponent &&\n    parent.tag !== HostRoot &&\n    parent.tag !== SuspenseComponent\n  ) {\n    parent = parent.return;\n  }\n  hydrationParentFiber = parent;\n}\n\nfunction popHydrationState(fiber: Fiber): boolean {\n  if (!supportsHydration) {\n    return false;\n  }\n  if (fiber !== hydrationParentFiber) {\n    // We're deeper than the current hydration context, inside an inserted\n    // tree.\n    return false;\n  }\n  if (!isHydrating) {\n    // If we're not currently hydrating but we're in a hydration context, then\n    // we were an insertion and now need to pop up reenter hydration of our\n    // siblings.\n    popToNextHostParent(fiber);\n    isHydrating = true;\n    return false;\n  }\n\n  const type = fiber.type;\n\n  // If we have any remaining hydratable nodes, we need to delete them now.\n  // We only do this deeper than head and body since they tend to have random\n  // other nodes in them. We also ignore components with pure text content in\n  // side of them.\n  // TODO: Better heuristic.\n  if (\n    fiber.tag !== HostComponent ||\n    (type !== 'head' &&\n      type !== 'body' &&\n      !shouldSetTextContent(type, fiber.memoizedProps))\n  ) {\n    let nextInstance = nextHydratableInstance;\n    while (nextInstance) {\n      deleteHydratableInstance(fiber, nextInstance);\n      nextInstance = getNextHydratableSibling(nextInstance);\n    }\n  }\n\n  popToNextHostParent(fiber);\n  if (fiber.tag === SuspenseComponent) {\n    nextHydratableInstance = skipPastDehydratedSuspenseInstance(fiber);\n  } else {\n    nextHydratableInstance = hydrationParentFiber\n      ? getNextHydratableSibling(fiber.stateNode)\n      : null;\n  }\n  return true;\n}\n\nfunction resetHydrationState(): void {\n  if (!supportsHydration) {\n    return;\n  }\n\n  hydrationParentFiber = null;\n  nextHydratableInstance = null;\n  isHydrating = false;\n}\n\nfunction getIsHydrating(): boolean {\n  return isHydrating;\n}\n\nexport {\n  warnIfHydrating,\n  enterHydrationState,\n  getIsHydrating,\n  reenterHydrationStateFromDehydratedSuspenseInstance,\n  resetHydrationState,\n  tryToClaimNextHydratableInstance,\n  prepareToHydrateHostInstance,\n  prepareToHydrateHostTextInstance,\n  prepareToHydrateHostSuspenseInstance,\n  popHydrationState,\n};\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {MutableSource, MutableSourceVersion} from 'shared/ReactTypes';\nimport type {FiberRoot} from './ReactInternalTypes';\n\nimport {isPrimaryRenderer} from './ReactFiberHostConfig';\n\n// Work in progress version numbers only apply to a single render,\n// and should be reset before starting a new render.\n// This tracks which mutable sources need to be reset after a render.\nconst workInProgressSources: Array<MutableSource<any>> = [];\n\nlet rendererSigil;\nif (__DEV__) {\n  // Used to detect multiple renderers using the same mutable source.\n  rendererSigil = {};\n}\n\nexport function markSourceAsDirty(mutableSource: MutableSource<any>): void {\n  workInProgressSources.push(mutableSource);\n}\n\nexport function resetWorkInProgressVersions(): void {\n  for (let i = 0; i < workInProgressSources.length; i++) {\n    const mutableSource = workInProgressSources[i];\n    if (isPrimaryRenderer) {\n      mutableSource._workInProgressVersionPrimary = null;\n    } else {\n      mutableSource._workInProgressVersionSecondary = null;\n    }\n  }\n  workInProgressSources.length = 0;\n}\n\nexport function getWorkInProgressVersion(\n  mutableSource: MutableSource<any>,\n): null | MutableSourceVersion {\n  if (isPrimaryRenderer) {\n    return mutableSource._workInProgressVersionPrimary;\n  } else {\n    return mutableSource._workInProgressVersionSecondary;\n  }\n}\n\nexport function setWorkInProgressVersion(\n  mutableSource: MutableSource<any>,\n  version: MutableSourceVersion,\n): void {\n  if (isPrimaryRenderer) {\n    mutableSource._workInProgressVersionPrimary = version;\n  } else {\n    mutableSource._workInProgressVersionSecondary = version;\n  }\n  workInProgressSources.push(mutableSource);\n}\n\nexport function warnAboutMultipleRenderersDEV(\n  mutableSource: MutableSource<any>,\n): void {\n  if (__DEV__) {\n    if (isPrimaryRenderer) {\n      if (mutableSource._currentPrimaryRenderer == null) {\n        mutableSource._currentPrimaryRenderer = rendererSigil;\n      } else if (mutableSource._currentPrimaryRenderer !== rendererSigil) {\n        console.error(\n          'Detected multiple renderers concurrently rendering the ' +\n            'same mutable source. This is currently unsupported.',\n        );\n      }\n    } else {\n      if (mutableSource._currentSecondaryRenderer == null) {\n        mutableSource._currentSecondaryRenderer = rendererSigil;\n      } else if (mutableSource._currentSecondaryRenderer !== rendererSigil) {\n        console.error(\n          'Detected multiple renderers concurrently rendering the ' +\n            'same mutable source. This is currently unsupported.',\n        );\n      }\n    }\n  }\n}\n\n// Eager reads the version of a mutable source and stores it on the root.\n// This ensures that the version used for server rendering matches the one\n// that is eventually read during hydration.\n// If they don't match there's a potential tear and a full deopt render is required.\nexport function registerMutableSourceForHydration(\n  root: FiberRoot,\n  mutableSource: MutableSource<any>,\n): void {\n  const getVersion = mutableSource._getVersion;\n  const version = getVersion(mutableSource._source);\n\n  // TODO Clear this data once all pending hydration work is finished.\n  // Retaining it forever may interfere with GC.\n  if (root.mutableSourceEagerHydrationData == null) {\n    root.mutableSourceEagerHydrationData = [mutableSource, version];\n  } else {\n    root.mutableSourceEagerHydrationData.push(mutableSource, version);\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {\n  MutableSource,\n  MutableSourceGetSnapshotFn,\n  MutableSourceSubscribeFn,\n  ReactContext,\n} from 'shared/ReactTypes';\nimport type {Fiber, Dispatcher} from './ReactInternalTypes';\nimport type {Lanes, Lane} from './ReactFiberLane';\nimport type {HookFlags} from './ReactHookEffectTags';\nimport type {ReactPriorityLevel} from './ReactInternalTypes';\nimport type {FiberRoot} from './ReactInternalTypes';\nimport type {OpaqueIDType} from './ReactFiberHostConfig';\n\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\nimport {\n  enableDebugTracing,\n  enableSchedulingProfiler,\n  enableNewReconciler,\n  decoupleUpdatePriorityFromScheduler,\n} from 'shared/ReactFeatureFlags';\n\nimport {NoMode, BlockingMode, DebugTracingMode} from './ReactTypeOfMode';\nimport {\n  NoLane,\n  NoLanes,\n  InputContinuousLanePriority,\n  isSubsetOfLanes,\n  mergeLanes,\n  removeLanes,\n  markRootEntangled,\n  markRootMutableRead,\n  getCurrentUpdateLanePriority,\n  setCurrentUpdateLanePriority,\n  higherLanePriority,\n  DefaultLanePriority,\n} from './ReactFiberLane';\nimport {readContext} from './ReactFiberNewContext.old';\nimport {\n  Update as UpdateEffect,\n  Passive as PassiveEffect,\n} from './ReactFiberFlags';\nimport {\n  HasEffect as HookHasEffect,\n  Layout as HookLayout,\n  Passive as HookPassive,\n} from './ReactHookEffectTags';\nimport {\n  getWorkInProgressRoot,\n  scheduleUpdateOnFiber,\n  requestUpdateLane,\n  requestEventTime,\n  warnIfNotCurrentlyActingEffectsInDEV,\n  warnIfNotCurrentlyActingUpdatesInDev,\n  warnIfNotScopedWithMatchingAct,\n  markSkippedUpdateLanes,\n} from './ReactFiberWorkLoop.old';\n\nimport invariant from 'shared/invariant';\nimport getComponentName from 'shared/getComponentName';\nimport is from 'shared/objectIs';\nimport {markWorkInProgressReceivedUpdate} from './ReactFiberBeginWork.old';\nimport {\n  UserBlockingPriority,\n  NormalPriority,\n  runWithPriority,\n  getCurrentPriorityLevel,\n} from './SchedulerWithReactIntegration.old';\nimport {getIsHydrating} from './ReactFiberHydrationContext.old';\nimport {\n  makeClientId,\n  makeClientIdInDEV,\n  makeOpaqueHydratingObject,\n} from './ReactFiberHostConfig';\nimport {\n  getWorkInProgressVersion,\n  markSourceAsDirty,\n  setWorkInProgressVersion,\n  warnAboutMultipleRenderersDEV,\n} from './ReactMutableSource.old';\nimport {getIsRendering} from './ReactCurrentFiber';\nimport {logStateUpdateScheduled} from './DebugTracing';\nimport {markStateUpdateScheduled} from './SchedulingProfiler';\n\nconst {ReactCurrentDispatcher, ReactCurrentBatchConfig} = ReactSharedInternals;\n\ntype Update<S, A> = {|\n  lane: Lane,\n  action: A,\n  eagerReducer: ((S, A) => S) | null,\n  eagerState: S | null,\n  next: Update<S, A>,\n  priority?: ReactPriorityLevel,\n|};\n\ntype UpdateQueue<S, A> = {|\n  pending: Update<S, A> | null,\n  dispatch: (A => mixed) | null,\n  lastRenderedReducer: ((S, A) => S) | null,\n  lastRenderedState: S | null,\n|};\n\nexport type HookType =\n  | 'useState'\n  | 'useReducer'\n  | 'useContext'\n  | 'useRef'\n  | 'useEffect'\n  | 'useLayoutEffect'\n  | 'useCallback'\n  | 'useMemo'\n  | 'useImperativeHandle'\n  | 'useDebugValue'\n  | 'useDeferredValue'\n  | 'useTransition'\n  | 'useMutableSource'\n  | 'useOpaqueIdentifier';\n\nlet didWarnAboutMismatchedHooksForComponent;\nlet didWarnAboutUseOpaqueIdentifier;\nif (__DEV__) {\n  didWarnAboutUseOpaqueIdentifier = {};\n  didWarnAboutMismatchedHooksForComponent = new Set();\n}\n\nexport type Hook = {|\n  memoizedState: any,\n  baseState: any,\n  baseQueue: Update<any, any> | null,\n  queue: UpdateQueue<any, any> | null,\n  next: Hook | null,\n|};\n\nexport type Effect = {|\n  tag: HookFlags,\n  create: () => (() => void) | void,\n  destroy: (() => void) | void,\n  deps: Array<mixed> | null,\n  next: Effect,\n|};\n\nexport type FunctionComponentUpdateQueue = {|lastEffect: Effect | null|};\n\ntype BasicStateAction<S> = (S => S) | S;\n\ntype Dispatch<A> = A => void;\n\n// These are set right before calling the component.\nlet renderLanes: Lanes = NoLanes;\n// The work-in-progress fiber. I've named it differently to distinguish it from\n// the work-in-progress hook.\nlet currentlyRenderingFiber: Fiber = (null: any);\n\n// Hooks are stored as a linked list on the fiber's memoizedState field. The\n// current hook list is the list that belongs to the current fiber. The\n// work-in-progress hook list is a new list that will be added to the\n// work-in-progress fiber.\nlet currentHook: Hook | null = null;\nlet workInProgressHook: Hook | null = null;\n\n// Whether an update was scheduled at any point during the render phase. This\n// does not get reset if we do another render pass; only when we're completely\n// finished evaluating this component. This is an optimization so we know\n// whether we need to clear render phase updates after a throw.\nlet didScheduleRenderPhaseUpdate: boolean = false;\n// Where an update was scheduled only during the current render pass. This\n// gets reset after each attempt.\n// TODO: Maybe there's some way to consolidate this with\n// `didScheduleRenderPhaseUpdate`. Or with `numberOfReRenders`.\nlet didScheduleRenderPhaseUpdateDuringThisPass: boolean = false;\n\nconst RE_RENDER_LIMIT = 25;\n\n// In DEV, this is the name of the currently executing primitive hook\nlet currentHookNameInDev: ?HookType = null;\n\n// In DEV, this list ensures that hooks are called in the same order between renders.\n// The list stores the order of hooks used during the initial render (mount).\n// Subsequent renders (updates) reference this list.\nlet hookTypesDev: Array<HookType> | null = null;\nlet hookTypesUpdateIndexDev: number = -1;\n\n// In DEV, this tracks whether currently rendering component needs to ignore\n// the dependencies for Hooks that need them (e.g. useEffect or useMemo).\n// When true, such Hooks will always be \"remounted\". Only used during hot reload.\nlet ignorePreviousDependencies: boolean = false;\n\nfunction mountHookTypesDev() {\n  if (__DEV__) {\n    const hookName = ((currentHookNameInDev: any): HookType);\n\n    if (hookTypesDev === null) {\n      hookTypesDev = [hookName];\n    } else {\n      hookTypesDev.push(hookName);\n    }\n  }\n}\n\nfunction updateHookTypesDev() {\n  if (__DEV__) {\n    const hookName = ((currentHookNameInDev: any): HookType);\n\n    if (hookTypesDev !== null) {\n      hookTypesUpdateIndexDev++;\n      if (hookTypesDev[hookTypesUpdateIndexDev] !== hookName) {\n        warnOnHookMismatchInDev(hookName);\n      }\n    }\n  }\n}\n\nfunction checkDepsAreArrayDev(deps: mixed) {\n  if (__DEV__) {\n    if (deps !== undefined && deps !== null && !Array.isArray(deps)) {\n      // Verify deps, but only on mount to avoid extra checks.\n      // It's unlikely their type would change as usually you define them inline.\n      console.error(\n        '%s received a final argument that is not an array (instead, received `%s`). When ' +\n          'specified, the final argument must be an array.',\n        currentHookNameInDev,\n        typeof deps,\n      );\n    }\n  }\n}\n\nfunction warnOnHookMismatchInDev(currentHookName: HookType) {\n  if (__DEV__) {\n    const componentName = getComponentName(currentlyRenderingFiber.type);\n    if (!didWarnAboutMismatchedHooksForComponent.has(componentName)) {\n      didWarnAboutMismatchedHooksForComponent.add(componentName);\n\n      if (hookTypesDev !== null) {\n        let table = '';\n\n        const secondColumnStart = 30;\n\n        for (let i = 0; i <= ((hookTypesUpdateIndexDev: any): number); i++) {\n          const oldHookName = hookTypesDev[i];\n          const newHookName =\n            i === ((hookTypesUpdateIndexDev: any): number)\n              ? currentHookName\n              : oldHookName;\n\n          let row = `${i + 1}. ${oldHookName}`;\n\n          // Extra space so second column lines up\n          // lol @ IE not supporting String#repeat\n          while (row.length < secondColumnStart) {\n            row += ' ';\n          }\n\n          row += newHookName + '\\n';\n\n          table += row;\n        }\n\n        console.error(\n          'React has detected a change in the order of Hooks called by %s. ' +\n            'This will lead to bugs and errors if not fixed. ' +\n            'For more information, read the Rules of Hooks: https://reactjs.org/link/rules-of-hooks\\n\\n' +\n            '   Previous render            Next render\\n' +\n            '   ------------------------------------------------------\\n' +\n            '%s' +\n            '   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n',\n          componentName,\n          table,\n        );\n      }\n    }\n  }\n}\n\nfunction throwInvalidHookError() {\n  invariant(\n    false,\n    'Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for' +\n      ' one of the following reasons:\\n' +\n      '1. You might have mismatching versions of React and the renderer (such as React DOM)\\n' +\n      '2. You might be breaking the Rules of Hooks\\n' +\n      '3. You might have more than one copy of React in the same app\\n' +\n      'See https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.',\n  );\n}\n\nfunction areHookInputsEqual(\n  nextDeps: Array<mixed>,\n  prevDeps: Array<mixed> | null,\n) {\n  if (__DEV__) {\n    if (ignorePreviousDependencies) {\n      // Only true when this component is being hot reloaded.\n      return false;\n    }\n  }\n\n  if (prevDeps === null) {\n    if (__DEV__) {\n      console.error(\n        '%s received a final argument during this render, but not during ' +\n          'the previous render. Even though the final argument is optional, ' +\n          'its type cannot change between renders.',\n        currentHookNameInDev,\n      );\n    }\n    return false;\n  }\n\n  if (__DEV__) {\n    // Don't bother comparing lengths in prod because these arrays should be\n    // passed inline.\n    if (nextDeps.length !== prevDeps.length) {\n      console.error(\n        'The final argument passed to %s changed size between renders. The ' +\n          'order and size of this array must remain constant.\\n\\n' +\n          'Previous: %s\\n' +\n          'Incoming: %s',\n        currentHookNameInDev,\n        `[${prevDeps.join(', ')}]`,\n        `[${nextDeps.join(', ')}]`,\n      );\n    }\n  }\n  for (let i = 0; i < prevDeps.length && i < nextDeps.length; i++) {\n    if (is(nextDeps[i], prevDeps[i])) {\n      continue;\n    }\n    return false;\n  }\n  return true;\n}\n\nexport function renderWithHooks<Props, SecondArg>(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  Component: (p: Props, arg: SecondArg) => any,\n  props: Props,\n  secondArg: SecondArg,\n  nextRenderLanes: Lanes,\n): any {\n  renderLanes = nextRenderLanes;\n  currentlyRenderingFiber = workInProgress;\n\n  if (__DEV__) {\n    hookTypesDev =\n      current !== null\n        ? ((current._debugHookTypes: any): Array<HookType>)\n        : null;\n    hookTypesUpdateIndexDev = -1;\n    // Used for hot reloading:\n    ignorePreviousDependencies =\n      current !== null && current.type !== workInProgress.type;\n  }\n\n  workInProgress.memoizedState = null;\n  workInProgress.updateQueue = null;\n  workInProgress.lanes = NoLanes;\n\n  // The following should have already been reset\n  // currentHook = null;\n  // workInProgressHook = null;\n\n  // didScheduleRenderPhaseUpdate = false;\n\n  // TODO Warn if no hooks are used at all during mount, then some are used during update.\n  // Currently we will identify the update render as a mount because memoizedState === null.\n  // This is tricky because it's valid for certain types of components (e.g. React.lazy)\n\n  // Using memoizedState to differentiate between mount/update only works if at least one stateful hook is used.\n  // Non-stateful hooks (e.g. context) don't get added to memoizedState,\n  // so memoizedState would be null during updates and mounts.\n  if (__DEV__) {\n    if (current !== null && current.memoizedState !== null) {\n      ReactCurrentDispatcher.current = HooksDispatcherOnUpdateInDEV;\n    } else if (hookTypesDev !== null) {\n      // This dispatcher handles an edge case where a component is updating,\n      // but no stateful hooks have been used.\n      // We want to match the production code behavior (which will use HooksDispatcherOnMount),\n      // but with the extra DEV validation to ensure hooks ordering hasn't changed.\n      // This dispatcher does that.\n      ReactCurrentDispatcher.current = HooksDispatcherOnMountWithHookTypesInDEV;\n    } else {\n      ReactCurrentDispatcher.current = HooksDispatcherOnMountInDEV;\n    }\n  } else {\n    ReactCurrentDispatcher.current =\n      current === null || current.memoizedState === null\n        ? HooksDispatcherOnMount\n        : HooksDispatcherOnUpdate;\n  }\n\n  let children = Component(props, secondArg);\n\n  // Check if there was a render phase update\n  if (didScheduleRenderPhaseUpdateDuringThisPass) {\n    // Keep rendering in a loop for as long as render phase updates continue to\n    // be scheduled. Use a counter to prevent infinite loops.\n    let numberOfReRenders: number = 0;\n    do {\n      didScheduleRenderPhaseUpdateDuringThisPass = false;\n      invariant(\n        numberOfReRenders < RE_RENDER_LIMIT,\n        'Too many re-renders. React limits the number of renders to prevent ' +\n          'an infinite loop.',\n      );\n\n      numberOfReRenders += 1;\n      if (__DEV__) {\n        // Even when hot reloading, allow dependencies to stabilize\n        // after first render to prevent infinite render phase updates.\n        ignorePreviousDependencies = false;\n      }\n\n      // Start over from the beginning of the list\n      currentHook = null;\n      workInProgressHook = null;\n\n      workInProgress.updateQueue = null;\n\n      if (__DEV__) {\n        // Also validate hook order for cascading updates.\n        hookTypesUpdateIndexDev = -1;\n      }\n\n      ReactCurrentDispatcher.current = __DEV__\n        ? HooksDispatcherOnRerenderInDEV\n        : HooksDispatcherOnRerender;\n\n      children = Component(props, secondArg);\n    } while (didScheduleRenderPhaseUpdateDuringThisPass);\n  }\n\n  // We can assume the previous dispatcher is always this one, since we set it\n  // at the beginning of the render phase and there's no re-entrancy.\n  ReactCurrentDispatcher.current = ContextOnlyDispatcher;\n\n  if (__DEV__) {\n    workInProgress._debugHookTypes = hookTypesDev;\n  }\n\n  // This check uses currentHook so that it works the same in DEV and prod bundles.\n  // hookTypesDev could catch more cases (e.g. context) but only in DEV bundles.\n  const didRenderTooFewHooks =\n    currentHook !== null && currentHook.next !== null;\n\n  renderLanes = NoLanes;\n  currentlyRenderingFiber = (null: any);\n\n  currentHook = null;\n  workInProgressHook = null;\n\n  if (__DEV__) {\n    currentHookNameInDev = null;\n    hookTypesDev = null;\n    hookTypesUpdateIndexDev = -1;\n  }\n\n  didScheduleRenderPhaseUpdate = false;\n\n  invariant(\n    !didRenderTooFewHooks,\n    'Rendered fewer hooks than expected. This may be caused by an accidental ' +\n      'early return statement.',\n  );\n\n  return children;\n}\n\nexport function bailoutHooks(\n  current: Fiber,\n  workInProgress: Fiber,\n  lanes: Lanes,\n) {\n  workInProgress.updateQueue = current.updateQueue;\n  workInProgress.flags &= ~(PassiveEffect | UpdateEffect);\n  current.lanes = removeLanes(current.lanes, lanes);\n}\n\nexport function resetHooksAfterThrow(): void {\n  // We can assume the previous dispatcher is always this one, since we set it\n  // at the beginning of the render phase and there's no re-entrancy.\n  ReactCurrentDispatcher.current = ContextOnlyDispatcher;\n\n  if (didScheduleRenderPhaseUpdate) {\n    // There were render phase updates. These are only valid for this render\n    // phase, which we are now aborting. Remove the updates from the queues so\n    // they do not persist to the next render. Do not remove updates from hooks\n    // that weren't processed.\n    //\n    // Only reset the updates from the queue if it has a clone. If it does\n    // not have a clone, that means it wasn't processed, and the updates were\n    // scheduled before we entered the render phase.\n    let hook: Hook | null = currentlyRenderingFiber.memoizedState;\n    while (hook !== null) {\n      const queue = hook.queue;\n      if (queue !== null) {\n        queue.pending = null;\n      }\n      hook = hook.next;\n    }\n    didScheduleRenderPhaseUpdate = false;\n  }\n\n  renderLanes = NoLanes;\n  currentlyRenderingFiber = (null: any);\n\n  currentHook = null;\n  workInProgressHook = null;\n\n  if (__DEV__) {\n    hookTypesDev = null;\n    hookTypesUpdateIndexDev = -1;\n\n    currentHookNameInDev = null;\n\n    isUpdatingOpaqueValueInRenderPhase = false;\n  }\n\n  didScheduleRenderPhaseUpdateDuringThisPass = false;\n}\n\nfunction mountWorkInProgressHook(): Hook {\n  const hook: Hook = {\n    memoizedState: null,\n\n    baseState: null,\n    baseQueue: null,\n    queue: null,\n\n    next: null,\n  };\n\n  if (workInProgressHook === null) {\n    // This is the first hook in the list\n    currentlyRenderingFiber.memoizedState = workInProgressHook = hook;\n  } else {\n    // Append to the end of the list\n    workInProgressHook = workInProgressHook.next = hook;\n  }\n  return workInProgressHook;\n}\n\nfunction updateWorkInProgressHook(): Hook {\n  // This function is used both for updates and for re-renders triggered by a\n  // render phase update. It assumes there is either a current hook we can\n  // clone, or a work-in-progress hook from a previous render pass that we can\n  // use as a base. When we reach the end of the base list, we must switch to\n  // the dispatcher used for mounts.\n  let nextCurrentHook: null | Hook;\n  if (currentHook === null) {\n    const current = currentlyRenderingFiber.alternate;\n    if (current !== null) {\n      nextCurrentHook = current.memoizedState;\n    } else {\n      nextCurrentHook = null;\n    }\n  } else {\n    nextCurrentHook = currentHook.next;\n  }\n\n  let nextWorkInProgressHook: null | Hook;\n  if (workInProgressHook === null) {\n    nextWorkInProgressHook = currentlyRenderingFiber.memoizedState;\n  } else {\n    nextWorkInProgressHook = workInProgressHook.next;\n  }\n\n  if (nextWorkInProgressHook !== null) {\n    // There's already a work-in-progress. Reuse it.\n    workInProgressHook = nextWorkInProgressHook;\n    nextWorkInProgressHook = workInProgressHook.next;\n\n    currentHook = nextCurrentHook;\n  } else {\n    // Clone from the current hook.\n\n    invariant(\n      nextCurrentHook !== null,\n      'Rendered more hooks than during the previous render.',\n    );\n    currentHook = nextCurrentHook;\n\n    const newHook: Hook = {\n      memoizedState: currentHook.memoizedState,\n\n      baseState: currentHook.baseState,\n      baseQueue: currentHook.baseQueue,\n      queue: currentHook.queue,\n\n      next: null,\n    };\n\n    if (workInProgressHook === null) {\n      // This is the first hook in the list.\n      currentlyRenderingFiber.memoizedState = workInProgressHook = newHook;\n    } else {\n      // Append to the end of the list.\n      workInProgressHook = workInProgressHook.next = newHook;\n    }\n  }\n  return workInProgressHook;\n}\n\nfunction createFunctionComponentUpdateQueue(): FunctionComponentUpdateQueue {\n  return {\n    lastEffect: null,\n  };\n}\n\nfunction basicStateReducer<S>(state: S, action: BasicStateAction<S>): S {\n  // $FlowFixMe: Flow doesn't like mixed types\n  return typeof action === 'function' ? action(state) : action;\n}\n\nfunction mountReducer<S, I, A>(\n  reducer: (S, A) => S,\n  initialArg: I,\n  init?: I => S,\n): [S, Dispatch<A>] {\n  const hook = mountWorkInProgressHook();\n  let initialState;\n  if (init !== undefined) {\n    initialState = init(initialArg);\n  } else {\n    initialState = ((initialArg: any): S);\n  }\n  hook.memoizedState = hook.baseState = initialState;\n  const queue = (hook.queue = {\n    pending: null,\n    dispatch: null,\n    lastRenderedReducer: reducer,\n    lastRenderedState: (initialState: any),\n  });\n  const dispatch: Dispatch<A> = (queue.dispatch = (dispatchAction.bind(\n    null,\n    currentlyRenderingFiber,\n    queue,\n  ): any));\n  return [hook.memoizedState, dispatch];\n}\n\nfunction updateReducer<S, I, A>(\n  reducer: (S, A) => S,\n  initialArg: I,\n  init?: I => S,\n): [S, Dispatch<A>] {\n  const hook = updateWorkInProgressHook();\n  const queue = hook.queue;\n  invariant(\n    queue !== null,\n    'Should have a queue. This is likely a bug in React. Please file an issue.',\n  );\n\n  queue.lastRenderedReducer = reducer;\n\n  const current: Hook = (currentHook: any);\n\n  // The last rebase update that is NOT part of the base state.\n  let baseQueue = current.baseQueue;\n\n  // The last pending update that hasn't been processed yet.\n  const pendingQueue = queue.pending;\n  if (pendingQueue !== null) {\n    // We have new updates that haven't been processed yet.\n    // We'll add them to the base queue.\n    if (baseQueue !== null) {\n      // Merge the pending queue and the base queue.\n      const baseFirst = baseQueue.next;\n      const pendingFirst = pendingQueue.next;\n      baseQueue.next = pendingFirst;\n      pendingQueue.next = baseFirst;\n    }\n    if (__DEV__) {\n      if (current.baseQueue !== baseQueue) {\n        // Internal invariant that should never happen, but feasibly could in\n        // the future if we implement resuming, or some form of that.\n        console.error(\n          'Internal error: Expected work-in-progress queue to be a clone. ' +\n            'This is a bug in React.',\n        );\n      }\n    }\n    current.baseQueue = baseQueue = pendingQueue;\n    queue.pending = null;\n  }\n\n  if (baseQueue !== null) {\n    // We have a queue to process.\n    const first = baseQueue.next;\n    let newState = current.baseState;\n\n    let newBaseState = null;\n    let newBaseQueueFirst = null;\n    let newBaseQueueLast = null;\n    let update = first;\n    do {\n      const updateLane = update.lane;\n      if (!isSubsetOfLanes(renderLanes, updateLane)) {\n        // Priority is insufficient. Skip this update. If this is the first\n        // skipped update, the previous update/state is the new base\n        // update/state.\n        const clone: Update<S, A> = {\n          lane: updateLane,\n          action: update.action,\n          eagerReducer: update.eagerReducer,\n          eagerState: update.eagerState,\n          next: (null: any),\n        };\n        if (newBaseQueueLast === null) {\n          newBaseQueueFirst = newBaseQueueLast = clone;\n          newBaseState = newState;\n        } else {\n          newBaseQueueLast = newBaseQueueLast.next = clone;\n        }\n        // Update the remaining priority in the queue.\n        // TODO: Don't need to accumulate this. Instead, we can remove\n        // renderLanes from the original lanes.\n        currentlyRenderingFiber.lanes = mergeLanes(\n          currentlyRenderingFiber.lanes,\n          updateLane,\n        );\n        markSkippedUpdateLanes(updateLane);\n      } else {\n        // This update does have sufficient priority.\n\n        if (newBaseQueueLast !== null) {\n          const clone: Update<S, A> = {\n            // This update is going to be committed so we never want uncommit\n            // it. Using NoLane works because 0 is a subset of all bitmasks, so\n            // this will never be skipped by the check above.\n            lane: NoLane,\n            action: update.action,\n            eagerReducer: update.eagerReducer,\n            eagerState: update.eagerState,\n            next: (null: any),\n          };\n          newBaseQueueLast = newBaseQueueLast.next = clone;\n        }\n\n        // Process this update.\n        if (update.eagerReducer === reducer) {\n          // If this update was processed eagerly, and its reducer matches the\n          // current reducer, we can use the eagerly computed state.\n          newState = ((update.eagerState: any): S);\n        } else {\n          const action = update.action;\n          newState = reducer(newState, action);\n        }\n      }\n      update = update.next;\n    } while (update !== null && update !== first);\n\n    if (newBaseQueueLast === null) {\n      newBaseState = newState;\n    } else {\n      newBaseQueueLast.next = (newBaseQueueFirst: any);\n    }\n\n    // Mark that the fiber performed work, but only if the new state is\n    // different from the current state.\n    if (!is(newState, hook.memoizedState)) {\n      markWorkInProgressReceivedUpdate();\n    }\n\n    hook.memoizedState = newState;\n    hook.baseState = newBaseState;\n    hook.baseQueue = newBaseQueueLast;\n\n    queue.lastRenderedState = newState;\n  }\n\n  const dispatch: Dispatch<A> = (queue.dispatch: any);\n  return [hook.memoizedState, dispatch];\n}\n\nfunction rerenderReducer<S, I, A>(\n  reducer: (S, A) => S,\n  initialArg: I,\n  init?: I => S,\n): [S, Dispatch<A>] {\n  const hook = updateWorkInProgressHook();\n  const queue = hook.queue;\n  invariant(\n    queue !== null,\n    'Should have a queue. This is likely a bug in React. Please file an issue.',\n  );\n\n  queue.lastRenderedReducer = reducer;\n\n  // This is a re-render. Apply the new render phase updates to the previous\n  // work-in-progress hook.\n  const dispatch: Dispatch<A> = (queue.dispatch: any);\n  const lastRenderPhaseUpdate = queue.pending;\n  let newState = hook.memoizedState;\n  if (lastRenderPhaseUpdate !== null) {\n    // The queue doesn't persist past this render pass.\n    queue.pending = null;\n\n    const firstRenderPhaseUpdate = lastRenderPhaseUpdate.next;\n    let update = firstRenderPhaseUpdate;\n    do {\n      // Process this render phase update. We don't have to check the\n      // priority because it will always be the same as the current\n      // render's.\n      const action = update.action;\n      newState = reducer(newState, action);\n      update = update.next;\n    } while (update !== firstRenderPhaseUpdate);\n\n    // Mark that the fiber performed work, but only if the new state is\n    // different from the current state.\n    if (!is(newState, hook.memoizedState)) {\n      markWorkInProgressReceivedUpdate();\n    }\n\n    hook.memoizedState = newState;\n    // Don't persist the state accumulated from the render phase updates to\n    // the base state unless the queue is empty.\n    // TODO: Not sure if this is the desired semantics, but it's what we\n    // do for gDSFP. I can't remember why.\n    if (hook.baseQueue === null) {\n      hook.baseState = newState;\n    }\n\n    queue.lastRenderedState = newState;\n  }\n  return [newState, dispatch];\n}\n\ntype MutableSourceMemoizedState<Source, Snapshot> = {|\n  refs: {\n    getSnapshot: MutableSourceGetSnapshotFn<Source, Snapshot>,\n    setSnapshot: Snapshot => void,\n  },\n  source: MutableSource<any>,\n  subscribe: MutableSourceSubscribeFn<Source, Snapshot>,\n|};\n\nfunction readFromUnsubcribedMutableSource<Source, Snapshot>(\n  root: FiberRoot,\n  source: MutableSource<Source>,\n  getSnapshot: MutableSourceGetSnapshotFn<Source, Snapshot>,\n): Snapshot {\n  if (__DEV__) {\n    warnAboutMultipleRenderersDEV(source);\n  }\n\n  const getVersion = source._getVersion;\n  const version = getVersion(source._source);\n\n  // Is it safe for this component to read from this source during the current render?\n  let isSafeToReadFromSource = false;\n\n  // Check the version first.\n  // If this render has already been started with a specific version,\n  // we can use it alone to determine if we can safely read from the source.\n  const currentRenderVersion = getWorkInProgressVersion(source);\n  if (currentRenderVersion !== null) {\n    // It's safe to read if the store hasn't been mutated since the last time\n    // we read something.\n    isSafeToReadFromSource = currentRenderVersion === version;\n  } else {\n    // If there's no version, then this is the first time we've read from the\n    // source during the current render pass, so we need to do a bit more work.\n    // What we need to determine is if there are any hooks that already\n    // subscribed to the source, and if so, whether there are any pending\n    // mutations that haven't been synchronized yet.\n    //\n    // If there are no pending mutations, then `root.mutableReadLanes` will be\n    // empty, and we know we can safely read.\n    //\n    // If there *are* pending mutations, we may still be able to safely read\n    // if the currently rendering lanes are inclusive of the pending mutation\n    // lanes, since that guarantees that the value we're about to read from\n    // the source is consistent with the values that we read during the most\n    // recent mutation.\n    isSafeToReadFromSource = isSubsetOfLanes(\n      renderLanes,\n      root.mutableReadLanes,\n    );\n\n    if (isSafeToReadFromSource) {\n      // If it's safe to read from this source during the current render,\n      // store the version in case other components read from it.\n      // A changed version number will let those components know to throw and restart the render.\n      setWorkInProgressVersion(source, version);\n    }\n  }\n\n  if (isSafeToReadFromSource) {\n    const snapshot = getSnapshot(source._source);\n    if (__DEV__) {\n      if (typeof snapshot === 'function') {\n        console.error(\n          'Mutable source should not return a function as the snapshot value. ' +\n            'Functions may close over mutable values and cause tearing.',\n        );\n      }\n    }\n    return snapshot;\n  } else {\n    // This handles the special case of a mutable source being shared between renderers.\n    // In that case, if the source is mutated between the first and second renderer,\n    // The second renderer don't know that it needs to reset the WIP version during unwind,\n    // (because the hook only marks sources as dirty if it's written to their WIP version).\n    // That would cause this tear check to throw again and eventually be visible to the user.\n    // We can avoid this infinite loop by explicitly marking the source as dirty.\n    //\n    // This can lead to tearing in the first renderer when it resumes,\n    // but there's nothing we can do about that (short of throwing here and refusing to continue the render).\n    markSourceAsDirty(source);\n\n    invariant(\n      false,\n      'Cannot read from mutable source during the current render without tearing. This is a bug in React. Please file an issue.',\n    );\n  }\n}\n\nfunction useMutableSource<Source, Snapshot>(\n  hook: Hook,\n  source: MutableSource<Source>,\n  getSnapshot: MutableSourceGetSnapshotFn<Source, Snapshot>,\n  subscribe: MutableSourceSubscribeFn<Source, Snapshot>,\n): Snapshot {\n  const root = ((getWorkInProgressRoot(): any): FiberRoot);\n  invariant(\n    root !== null,\n    'Expected a work-in-progress root. This is a bug in React. Please file an issue.',\n  );\n\n  const getVersion = source._getVersion;\n  const version = getVersion(source._source);\n\n  const dispatcher = ReactCurrentDispatcher.current;\n\n  // eslint-disable-next-line prefer-const\n  let [currentSnapshot, setSnapshot] = dispatcher.useState(() =>\n    readFromUnsubcribedMutableSource(root, source, getSnapshot),\n  );\n  let snapshot = currentSnapshot;\n\n  // Grab a handle to the state hook as well.\n  // We use it to clear the pending update queue if we have a new source.\n  const stateHook = ((workInProgressHook: any): Hook);\n\n  const memoizedState = ((hook.memoizedState: any): MutableSourceMemoizedState<\n    Source,\n    Snapshot,\n  >);\n  const refs = memoizedState.refs;\n  const prevGetSnapshot = refs.getSnapshot;\n  const prevSource = memoizedState.source;\n  const prevSubscribe = memoizedState.subscribe;\n\n  const fiber = currentlyRenderingFiber;\n\n  hook.memoizedState = ({\n    refs,\n    source,\n    subscribe,\n  }: MutableSourceMemoizedState<Source, Snapshot>);\n\n  // Sync the values needed by our subscription handler after each commit.\n  dispatcher.useEffect(() => {\n    refs.getSnapshot = getSnapshot;\n\n    // Normally the dispatch function for a state hook never changes,\n    // but this hook recreates the queue in certain cases  to avoid updates from stale sources.\n    // handleChange() below needs to reference the dispatch function without re-subscribing,\n    // so we use a ref to ensure that it always has the latest version.\n    refs.setSnapshot = setSnapshot;\n\n    // Check for a possible change between when we last rendered now.\n    const maybeNewVersion = getVersion(source._source);\n    if (!is(version, maybeNewVersion)) {\n      const maybeNewSnapshot = getSnapshot(source._source);\n      if (__DEV__) {\n        if (typeof maybeNewSnapshot === 'function') {\n          console.error(\n            'Mutable source should not return a function as the snapshot value. ' +\n              'Functions may close over mutable values and cause tearing.',\n          );\n        }\n      }\n\n      if (!is(snapshot, maybeNewSnapshot)) {\n        setSnapshot(maybeNewSnapshot);\n\n        const lane = requestUpdateLane(fiber);\n        markRootMutableRead(root, lane);\n      }\n      // If the source mutated between render and now,\n      // there may be state updates already scheduled from the old source.\n      // Entangle the updates so that they render in the same batch.\n      markRootEntangled(root, root.mutableReadLanes);\n    }\n  }, [getSnapshot, source, subscribe]);\n\n  // If we got a new source or subscribe function, re-subscribe in a passive effect.\n  dispatcher.useEffect(() => {\n    const handleChange = () => {\n      const latestGetSnapshot = refs.getSnapshot;\n      const latestSetSnapshot = refs.setSnapshot;\n\n      try {\n        latestSetSnapshot(latestGetSnapshot(source._source));\n\n        // Record a pending mutable source update with the same expiration time.\n        const lane = requestUpdateLane(fiber);\n\n        markRootMutableRead(root, lane);\n      } catch (error) {\n        // A selector might throw after a source mutation.\n        // e.g. it might try to read from a part of the store that no longer exists.\n        // In this case we should still schedule an update with React.\n        // Worst case the selector will throw again and then an error boundary will handle it.\n        latestSetSnapshot(\n          (() => {\n            throw error;\n          }: any),\n        );\n      }\n    };\n\n    const unsubscribe = subscribe(source._source, handleChange);\n    if (__DEV__) {\n      if (typeof unsubscribe !== 'function') {\n        console.error(\n          'Mutable source subscribe function must return an unsubscribe function.',\n        );\n      }\n    }\n\n    return unsubscribe;\n  }, [source, subscribe]);\n\n  // If any of the inputs to useMutableSource change, reading is potentially unsafe.\n  //\n  // If either the source or the subscription have changed we can't can't trust the update queue.\n  // Maybe the source changed in a way that the old subscription ignored but the new one depends on.\n  //\n  // If the getSnapshot function changed, we also shouldn't rely on the update queue.\n  // It's possible that the underlying source was mutated between the when the last \"change\" event fired,\n  // and when the current render (with the new getSnapshot function) is processed.\n  //\n  // In both cases, we need to throw away pending updates (since they are no longer relevant)\n  // and treat reading from the source as we do in the mount case.\n  if (\n    !is(prevGetSnapshot, getSnapshot) ||\n    !is(prevSource, source) ||\n    !is(prevSubscribe, subscribe)\n  ) {\n    // Create a new queue and setState method,\n    // So if there are interleaved updates, they get pushed to the older queue.\n    // When this becomes current, the previous queue and dispatch method will be discarded,\n    // including any interleaving updates that occur.\n    const newQueue = {\n      pending: null,\n      dispatch: null,\n      lastRenderedReducer: basicStateReducer,\n      lastRenderedState: snapshot,\n    };\n    newQueue.dispatch = setSnapshot = (dispatchAction.bind(\n      null,\n      currentlyRenderingFiber,\n      newQueue,\n    ): any);\n    stateHook.queue = newQueue;\n    stateHook.baseQueue = null;\n    snapshot = readFromUnsubcribedMutableSource(root, source, getSnapshot);\n    stateHook.memoizedState = stateHook.baseState = snapshot;\n  }\n\n  return snapshot;\n}\n\nfunction mountMutableSource<Source, Snapshot>(\n  source: MutableSource<Source>,\n  getSnapshot: MutableSourceGetSnapshotFn<Source, Snapshot>,\n  subscribe: MutableSourceSubscribeFn<Source, Snapshot>,\n): Snapshot {\n  const hook = mountWorkInProgressHook();\n  hook.memoizedState = ({\n    refs: {\n      getSnapshot,\n      setSnapshot: (null: any),\n    },\n    source,\n    subscribe,\n  }: MutableSourceMemoizedState<Source, Snapshot>);\n  return useMutableSource(hook, source, getSnapshot, subscribe);\n}\n\nfunction updateMutableSource<Source, Snapshot>(\n  source: MutableSource<Source>,\n  getSnapshot: MutableSourceGetSnapshotFn<Source, Snapshot>,\n  subscribe: MutableSourceSubscribeFn<Source, Snapshot>,\n): Snapshot {\n  const hook = updateWorkInProgressHook();\n  return useMutableSource(hook, source, getSnapshot, subscribe);\n}\n\nfunction mountState<S>(\n  initialState: (() => S) | S,\n): [S, Dispatch<BasicStateAction<S>>] {\n  const hook = mountWorkInProgressHook();\n  if (typeof initialState === 'function') {\n    // $FlowFixMe: Flow doesn't like mixed types\n    initialState = initialState();\n  }\n  hook.memoizedState = hook.baseState = initialState;\n  const queue = (hook.queue = {\n    pending: null,\n    dispatch: null,\n    lastRenderedReducer: basicStateReducer,\n    lastRenderedState: (initialState: any),\n  });\n  const dispatch: Dispatch<\n    BasicStateAction<S>,\n  > = (queue.dispatch = (dispatchAction.bind(\n    null,\n    currentlyRenderingFiber,\n    queue,\n  ): any));\n  return [hook.memoizedState, dispatch];\n}\n\nfunction updateState<S>(\n  initialState: (() => S) | S,\n): [S, Dispatch<BasicStateAction<S>>] {\n  return updateReducer(basicStateReducer, (initialState: any));\n}\n\nfunction rerenderState<S>(\n  initialState: (() => S) | S,\n): [S, Dispatch<BasicStateAction<S>>] {\n  return rerenderReducer(basicStateReducer, (initialState: any));\n}\n\nfunction pushEffect(tag, create, destroy, deps) {\n  const effect: Effect = {\n    tag,\n    create,\n    destroy,\n    deps,\n    // Circular\n    next: (null: any),\n  };\n  let componentUpdateQueue: null | FunctionComponentUpdateQueue = (currentlyRenderingFiber.updateQueue: any);\n  if (componentUpdateQueue === null) {\n    componentUpdateQueue = createFunctionComponentUpdateQueue();\n    currentlyRenderingFiber.updateQueue = (componentUpdateQueue: any);\n    componentUpdateQueue.lastEffect = effect.next = effect;\n  } else {\n    const lastEffect = componentUpdateQueue.lastEffect;\n    if (lastEffect === null) {\n      componentUpdateQueue.lastEffect = effect.next = effect;\n    } else {\n      const firstEffect = lastEffect.next;\n      lastEffect.next = effect;\n      effect.next = firstEffect;\n      componentUpdateQueue.lastEffect = effect;\n    }\n  }\n  return effect;\n}\n\nfunction mountRef<T>(initialValue: T): {|current: T|} {\n  const hook = mountWorkInProgressHook();\n  const ref = {current: initialValue};\n  if (__DEV__) {\n    Object.seal(ref);\n  }\n  hook.memoizedState = ref;\n  return ref;\n}\n\nfunction updateRef<T>(initialValue: T): {|current: T|} {\n  const hook = updateWorkInProgressHook();\n  return hook.memoizedState;\n}\n\nfunction mountEffectImpl(fiberFlags, hookFlags, create, deps): void {\n  const hook = mountWorkInProgressHook();\n  const nextDeps = deps === undefined ? null : deps;\n  currentlyRenderingFiber.flags |= fiberFlags;\n  hook.memoizedState = pushEffect(\n    HookHasEffect | hookFlags,\n    create,\n    undefined,\n    nextDeps,\n  );\n}\n\nfunction updateEffectImpl(fiberFlags, hookFlags, create, deps): void {\n  const hook = updateWorkInProgressHook();\n  const nextDeps = deps === undefined ? null : deps;\n  let destroy = undefined;\n\n  if (currentHook !== null) {\n    const prevEffect = currentHook.memoizedState;\n    destroy = prevEffect.destroy;\n    if (nextDeps !== null) {\n      const prevDeps = prevEffect.deps;\n      if (areHookInputsEqual(nextDeps, prevDeps)) {\n        pushEffect(hookFlags, create, destroy, nextDeps);\n        return;\n      }\n    }\n  }\n\n  currentlyRenderingFiber.flags |= fiberFlags;\n\n  hook.memoizedState = pushEffect(\n    HookHasEffect | hookFlags,\n    create,\n    destroy,\n    nextDeps,\n  );\n}\n\nfunction mountEffect(\n  create: () => (() => void) | void,\n  deps: Array<mixed> | void | null,\n): void {\n  if (__DEV__) {\n    // $FlowExpectedError - jest isn't a global, and isn't recognized outside of tests\n    if ('undefined' !== typeof jest) {\n      warnIfNotCurrentlyActingEffectsInDEV(currentlyRenderingFiber);\n    }\n  }\n  return mountEffectImpl(\n    UpdateEffect | PassiveEffect,\n    HookPassive,\n    create,\n    deps,\n  );\n}\n\nfunction updateEffect(\n  create: () => (() => void) | void,\n  deps: Array<mixed> | void | null,\n): void {\n  if (__DEV__) {\n    // $FlowExpectedError - jest isn't a global, and isn't recognized outside of tests\n    if ('undefined' !== typeof jest) {\n      warnIfNotCurrentlyActingEffectsInDEV(currentlyRenderingFiber);\n    }\n  }\n  return updateEffectImpl(\n    UpdateEffect | PassiveEffect,\n    HookPassive,\n    create,\n    deps,\n  );\n}\n\nfunction mountLayoutEffect(\n  create: () => (() => void) | void,\n  deps: Array<mixed> | void | null,\n): void {\n  return mountEffectImpl(UpdateEffect, HookLayout, create, deps);\n}\n\nfunction updateLayoutEffect(\n  create: () => (() => void) | void,\n  deps: Array<mixed> | void | null,\n): void {\n  return updateEffectImpl(UpdateEffect, HookLayout, create, deps);\n}\n\nfunction imperativeHandleEffect<T>(\n  create: () => T,\n  ref: {|current: T | null|} | ((inst: T | null) => mixed) | null | void,\n) {\n  if (typeof ref === 'function') {\n    const refCallback = ref;\n    const inst = create();\n    refCallback(inst);\n    return () => {\n      refCallback(null);\n    };\n  } else if (ref !== null && ref !== undefined) {\n    const refObject = ref;\n    if (__DEV__) {\n      if (!refObject.hasOwnProperty('current')) {\n        console.error(\n          'Expected useImperativeHandle() first argument to either be a ' +\n            'ref callback or React.createRef() object. Instead received: %s.',\n          'an object with keys {' + Object.keys(refObject).join(', ') + '}',\n        );\n      }\n    }\n    const inst = create();\n    refObject.current = inst;\n    return () => {\n      refObject.current = null;\n    };\n  }\n}\n\nfunction mountImperativeHandle<T>(\n  ref: {|current: T | null|} | ((inst: T | null) => mixed) | null | void,\n  create: () => T,\n  deps: Array<mixed> | void | null,\n): void {\n  if (__DEV__) {\n    if (typeof create !== 'function') {\n      console.error(\n        'Expected useImperativeHandle() second argument to be a function ' +\n          'that creates a handle. Instead received: %s.',\n        create !== null ? typeof create : 'null',\n      );\n    }\n  }\n\n  // TODO: If deps are provided, should we skip comparing the ref itself?\n  const effectDeps =\n    deps !== null && deps !== undefined ? deps.concat([ref]) : null;\n\n  return mountEffectImpl(\n    UpdateEffect,\n    HookLayout,\n    imperativeHandleEffect.bind(null, create, ref),\n    effectDeps,\n  );\n}\n\nfunction updateImperativeHandle<T>(\n  ref: {|current: T | null|} | ((inst: T | null) => mixed) | null | void,\n  create: () => T,\n  deps: Array<mixed> | void | null,\n): void {\n  if (__DEV__) {\n    if (typeof create !== 'function') {\n      console.error(\n        'Expected useImperativeHandle() second argument to be a function ' +\n          'that creates a handle. Instead received: %s.',\n        create !== null ? typeof create : 'null',\n      );\n    }\n  }\n\n  // TODO: If deps are provided, should we skip comparing the ref itself?\n  const effectDeps =\n    deps !== null && deps !== undefined ? deps.concat([ref]) : null;\n\n  return updateEffectImpl(\n    UpdateEffect,\n    HookLayout,\n    imperativeHandleEffect.bind(null, create, ref),\n    effectDeps,\n  );\n}\n\nfunction mountDebugValue<T>(value: T, formatterFn: ?(value: T) => mixed): void {\n  // This hook is normally a no-op.\n  // The react-debug-hooks package injects its own implementation\n  // so that e.g. DevTools can display custom hook values.\n}\n\nconst updateDebugValue = mountDebugValue;\n\nfunction mountCallback<T>(callback: T, deps: Array<mixed> | void | null): T {\n  const hook = mountWorkInProgressHook();\n  const nextDeps = deps === undefined ? null : deps;\n  hook.memoizedState = [callback, nextDeps];\n  return callback;\n}\n\nfunction updateCallback<T>(callback: T, deps: Array<mixed> | void | null): T {\n  const hook = updateWorkInProgressHook();\n  const nextDeps = deps === undefined ? null : deps;\n  const prevState = hook.memoizedState;\n  if (prevState !== null) {\n    if (nextDeps !== null) {\n      const prevDeps: Array<mixed> | null = prevState[1];\n      if (areHookInputsEqual(nextDeps, prevDeps)) {\n        return prevState[0];\n      }\n    }\n  }\n  hook.memoizedState = [callback, nextDeps];\n  return callback;\n}\n\nfunction mountMemo<T>(\n  nextCreate: () => T,\n  deps: Array<mixed> | void | null,\n): T {\n  const hook = mountWorkInProgressHook();\n  const nextDeps = deps === undefined ? null : deps;\n  const nextValue = nextCreate();\n  hook.memoizedState = [nextValue, nextDeps];\n  return nextValue;\n}\n\nfunction updateMemo<T>(\n  nextCreate: () => T,\n  deps: Array<mixed> | void | null,\n): T {\n  const hook = updateWorkInProgressHook();\n  const nextDeps = deps === undefined ? null : deps;\n  const prevState = hook.memoizedState;\n  if (prevState !== null) {\n    // Assume these are defined. If they're not, areHookInputsEqual will warn.\n    if (nextDeps !== null) {\n      const prevDeps: Array<mixed> | null = prevState[1];\n      if (areHookInputsEqual(nextDeps, prevDeps)) {\n        return prevState[0];\n      }\n    }\n  }\n  const nextValue = nextCreate();\n  hook.memoizedState = [nextValue, nextDeps];\n  return nextValue;\n}\n\nfunction mountDeferredValue<T>(value: T): T {\n  const [prevValue, setValue] = mountState(value);\n  mountEffect(() => {\n    const prevTransition = ReactCurrentBatchConfig.transition;\n    ReactCurrentBatchConfig.transition = 1;\n    try {\n      setValue(value);\n    } finally {\n      ReactCurrentBatchConfig.transition = prevTransition;\n    }\n  }, [value]);\n  return prevValue;\n}\n\nfunction updateDeferredValue<T>(value: T): T {\n  const [prevValue, setValue] = updateState(value);\n  updateEffect(() => {\n    const prevTransition = ReactCurrentBatchConfig.transition;\n    ReactCurrentBatchConfig.transition = 1;\n    try {\n      setValue(value);\n    } finally {\n      ReactCurrentBatchConfig.transition = prevTransition;\n    }\n  }, [value]);\n  return prevValue;\n}\n\nfunction rerenderDeferredValue<T>(value: T): T {\n  const [prevValue, setValue] = rerenderState(value);\n  updateEffect(() => {\n    const prevTransition = ReactCurrentBatchConfig.transition;\n    ReactCurrentBatchConfig.transition = 1;\n    try {\n      setValue(value);\n    } finally {\n      ReactCurrentBatchConfig.transition = prevTransition;\n    }\n  }, [value]);\n  return prevValue;\n}\n\nfunction startTransition(setPending, callback) {\n  const priorityLevel = getCurrentPriorityLevel();\n  if (decoupleUpdatePriorityFromScheduler) {\n    const previousLanePriority = getCurrentUpdateLanePriority();\n    setCurrentUpdateLanePriority(\n      higherLanePriority(previousLanePriority, InputContinuousLanePriority),\n    );\n\n    runWithPriority(\n      priorityLevel < UserBlockingPriority\n        ? UserBlockingPriority\n        : priorityLevel,\n      () => {\n        setPending(true);\n      },\n    );\n\n    // TODO: Can remove this. Was only necessary because we used to give\n    // different behavior to transitions without a config object. Now they are\n    // all treated the same.\n    setCurrentUpdateLanePriority(DefaultLanePriority);\n\n    runWithPriority(\n      priorityLevel > NormalPriority ? NormalPriority : priorityLevel,\n      () => {\n        const prevTransition = ReactCurrentBatchConfig.transition;\n        ReactCurrentBatchConfig.transition = 1;\n        try {\n          setPending(false);\n          callback();\n        } finally {\n          if (decoupleUpdatePriorityFromScheduler) {\n            setCurrentUpdateLanePriority(previousLanePriority);\n          }\n          ReactCurrentBatchConfig.transition = prevTransition;\n        }\n      },\n    );\n  } else {\n    runWithPriority(\n      priorityLevel < UserBlockingPriority\n        ? UserBlockingPriority\n        : priorityLevel,\n      () => {\n        setPending(true);\n      },\n    );\n\n    runWithPriority(\n      priorityLevel > NormalPriority ? NormalPriority : priorityLevel,\n      () => {\n        const prevTransition = ReactCurrentBatchConfig.transition;\n        ReactCurrentBatchConfig.transition = 1;\n        try {\n          setPending(false);\n          callback();\n        } finally {\n          ReactCurrentBatchConfig.transition = prevTransition;\n        }\n      },\n    );\n  }\n}\n\nfunction mountTransition(): [(() => void) => void, boolean] {\n  const [isPending, setPending] = mountState(false);\n  // The `start` method can be stored on a ref, since `setPending`\n  // never changes.\n  const start = startTransition.bind(null, setPending);\n  mountRef(start);\n  return [start, isPending];\n}\n\nfunction updateTransition(): [(() => void) => void, boolean] {\n  const [isPending] = updateState(false);\n  const startRef = updateRef();\n  const start: (() => void) => void = (startRef.current: any);\n  return [start, isPending];\n}\n\nfunction rerenderTransition(): [(() => void) => void, boolean] {\n  const [isPending] = rerenderState(false);\n  const startRef = updateRef();\n  const start: (() => void) => void = (startRef.current: any);\n  return [start, isPending];\n}\n\nlet isUpdatingOpaqueValueInRenderPhase = false;\nexport function getIsUpdatingOpaqueValueInRenderPhaseInDEV(): boolean | void {\n  if (__DEV__) {\n    return isUpdatingOpaqueValueInRenderPhase;\n  }\n}\n\nfunction warnOnOpaqueIdentifierAccessInDEV(fiber) {\n  if (__DEV__) {\n    // TODO: Should warn in effects and callbacks, too\n    const name = getComponentName(fiber.type) || 'Unknown';\n    if (getIsRendering() && !didWarnAboutUseOpaqueIdentifier[name]) {\n      console.error(\n        'The object passed back from useOpaqueIdentifier is meant to be ' +\n          'passed through to attributes only. Do not read the ' +\n          'value directly.',\n      );\n      didWarnAboutUseOpaqueIdentifier[name] = true;\n    }\n  }\n}\n\nfunction mountOpaqueIdentifier(): OpaqueIDType | void {\n  const makeId = __DEV__\n    ? makeClientIdInDEV.bind(\n        null,\n        warnOnOpaqueIdentifierAccessInDEV.bind(null, currentlyRenderingFiber),\n      )\n    : makeClientId;\n\n  if (getIsHydrating()) {\n    let didUpgrade = false;\n    const fiber = currentlyRenderingFiber;\n    const readValue = () => {\n      if (!didUpgrade) {\n        // Only upgrade once. This works even inside the render phase because\n        // the update is added to a shared queue, which outlasts the\n        // in-progress render.\n        didUpgrade = true;\n        if (__DEV__) {\n          isUpdatingOpaqueValueInRenderPhase = true;\n          setId(makeId());\n          isUpdatingOpaqueValueInRenderPhase = false;\n          warnOnOpaqueIdentifierAccessInDEV(fiber);\n        } else {\n          setId(makeId());\n        }\n      }\n      invariant(\n        false,\n        'The object passed back from useOpaqueIdentifier is meant to be ' +\n          'passed through to attributes only. Do not read the value directly.',\n      );\n    };\n    const id = makeOpaqueHydratingObject(readValue);\n\n    const setId = mountState(id)[1];\n\n    if ((currentlyRenderingFiber.mode & BlockingMode) === NoMode) {\n      currentlyRenderingFiber.flags |= UpdateEffect | PassiveEffect;\n      pushEffect(\n        HookHasEffect | HookPassive,\n        () => {\n          setId(makeId());\n        },\n        undefined,\n        null,\n      );\n    }\n    return id;\n  } else {\n    const id = makeId();\n    mountState(id);\n    return id;\n  }\n}\n\nfunction updateOpaqueIdentifier(): OpaqueIDType | void {\n  const id = updateState(undefined)[0];\n  return id;\n}\n\nfunction rerenderOpaqueIdentifier(): OpaqueIDType | void {\n  const id = rerenderState(undefined)[0];\n  return id;\n}\n\nfunction dispatchAction<S, A>(\n  fiber: Fiber,\n  queue: UpdateQueue<S, A>,\n  action: A,\n) {\n  if (__DEV__) {\n    if (typeof arguments[3] === 'function') {\n      console.error(\n        \"State updates from the useState() and useReducer() Hooks don't support the \" +\n          'second callback argument. To execute a side effect after ' +\n          'rendering, declare it in the component body with useEffect().',\n      );\n    }\n  }\n\n  const eventTime = requestEventTime();\n  const lane = requestUpdateLane(fiber);\n\n  const update: Update<S, A> = {\n    lane,\n    action,\n    eagerReducer: null,\n    eagerState: null,\n    next: (null: any),\n  };\n\n  // Append the update to the end of the list.\n  const pending = queue.pending;\n  if (pending === null) {\n    // This is the first update. Create a circular list.\n    update.next = update;\n  } else {\n    update.next = pending.next;\n    pending.next = update;\n  }\n  queue.pending = update;\n\n  const alternate = fiber.alternate;\n  if (\n    fiber === currentlyRenderingFiber ||\n    (alternate !== null && alternate === currentlyRenderingFiber)\n  ) {\n    // This is a render phase update. Stash it in a lazily-created map of\n    // queue -> linked list of updates. After this render pass, we'll restart\n    // and apply the stashed updates on top of the work-in-progress hook.\n    didScheduleRenderPhaseUpdateDuringThisPass = didScheduleRenderPhaseUpdate = true;\n  } else {\n    if (\n      fiber.lanes === NoLanes &&\n      (alternate === null || alternate.lanes === NoLanes)\n    ) {\n      // The queue is currently empty, which means we can eagerly compute the\n      // next state before entering the render phase. If the new state is the\n      // same as the current state, we may be able to bail out entirely.\n      const lastRenderedReducer = queue.lastRenderedReducer;\n      if (lastRenderedReducer !== null) {\n        let prevDispatcher;\n        if (__DEV__) {\n          prevDispatcher = ReactCurrentDispatcher.current;\n          ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n        }\n        try {\n          const currentState: S = (queue.lastRenderedState: any);\n          const eagerState = lastRenderedReducer(currentState, action);\n          // Stash the eagerly computed state, and the reducer used to compute\n          // it, on the update object. If the reducer hasn't changed by the\n          // time we enter the render phase, then the eager state can be used\n          // without calling the reducer again.\n          update.eagerReducer = lastRenderedReducer;\n          update.eagerState = eagerState;\n          if (is(eagerState, currentState)) {\n            // Fast path. We can bail out without scheduling React to re-render.\n            // It's still possible that we'll need to rebase this update later,\n            // if the component re-renders for a different reason and by that\n            // time the reducer has changed.\n            return;\n          }\n        } catch (error) {\n          // Suppress the error. It will throw again in the render phase.\n        } finally {\n          if (__DEV__) {\n            ReactCurrentDispatcher.current = prevDispatcher;\n          }\n        }\n      }\n    }\n    if (__DEV__) {\n      // $FlowExpectedError - jest isn't a global, and isn't recognized outside of tests\n      if ('undefined' !== typeof jest) {\n        warnIfNotScopedWithMatchingAct(fiber);\n        warnIfNotCurrentlyActingUpdatesInDev(fiber);\n      }\n    }\n    scheduleUpdateOnFiber(fiber, lane, eventTime);\n  }\n\n  if (__DEV__) {\n    if (enableDebugTracing) {\n      if (fiber.mode & DebugTracingMode) {\n        const name = getComponentName(fiber.type) || 'Unknown';\n        logStateUpdateScheduled(name, lane, action);\n      }\n    }\n  }\n\n  if (enableSchedulingProfiler) {\n    markStateUpdateScheduled(fiber, lane);\n  }\n}\n\nexport const ContextOnlyDispatcher: Dispatcher = {\n  readContext,\n\n  useCallback: throwInvalidHookError,\n  useContext: throwInvalidHookError,\n  useEffect: throwInvalidHookError,\n  useImperativeHandle: throwInvalidHookError,\n  useLayoutEffect: throwInvalidHookError,\n  useMemo: throwInvalidHookError,\n  useReducer: throwInvalidHookError,\n  useRef: throwInvalidHookError,\n  useState: throwInvalidHookError,\n  useDebugValue: throwInvalidHookError,\n  useDeferredValue: throwInvalidHookError,\n  useTransition: throwInvalidHookError,\n  useMutableSource: throwInvalidHookError,\n  useOpaqueIdentifier: throwInvalidHookError,\n\n  unstable_isNewReconciler: enableNewReconciler,\n};\n\nconst HooksDispatcherOnMount: Dispatcher = {\n  readContext,\n\n  useCallback: mountCallback,\n  useContext: readContext,\n  useEffect: mountEffect,\n  useImperativeHandle: mountImperativeHandle,\n  useLayoutEffect: mountLayoutEffect,\n  useMemo: mountMemo,\n  useReducer: mountReducer,\n  useRef: mountRef,\n  useState: mountState,\n  useDebugValue: mountDebugValue,\n  useDeferredValue: mountDeferredValue,\n  useTransition: mountTransition,\n  useMutableSource: mountMutableSource,\n  useOpaqueIdentifier: mountOpaqueIdentifier,\n\n  unstable_isNewReconciler: enableNewReconciler,\n};\n\nconst HooksDispatcherOnUpdate: Dispatcher = {\n  readContext,\n\n  useCallback: updateCallback,\n  useContext: readContext,\n  useEffect: updateEffect,\n  useImperativeHandle: updateImperativeHandle,\n  useLayoutEffect: updateLayoutEffect,\n  useMemo: updateMemo,\n  useReducer: updateReducer,\n  useRef: updateRef,\n  useState: updateState,\n  useDebugValue: updateDebugValue,\n  useDeferredValue: updateDeferredValue,\n  useTransition: updateTransition,\n  useMutableSource: updateMutableSource,\n  useOpaqueIdentifier: updateOpaqueIdentifier,\n\n  unstable_isNewReconciler: enableNewReconciler,\n};\n\nconst HooksDispatcherOnRerender: Dispatcher = {\n  readContext,\n\n  useCallback: updateCallback,\n  useContext: readContext,\n  useEffect: updateEffect,\n  useImperativeHandle: updateImperativeHandle,\n  useLayoutEffect: updateLayoutEffect,\n  useMemo: updateMemo,\n  useReducer: rerenderReducer,\n  useRef: updateRef,\n  useState: rerenderState,\n  useDebugValue: updateDebugValue,\n  useDeferredValue: rerenderDeferredValue,\n  useTransition: rerenderTransition,\n  useMutableSource: updateMutableSource,\n  useOpaqueIdentifier: rerenderOpaqueIdentifier,\n\n  unstable_isNewReconciler: enableNewReconciler,\n};\n\nlet HooksDispatcherOnMountInDEV: Dispatcher | null = null;\nlet HooksDispatcherOnMountWithHookTypesInDEV: Dispatcher | null = null;\nlet HooksDispatcherOnUpdateInDEV: Dispatcher | null = null;\nlet HooksDispatcherOnRerenderInDEV: Dispatcher | null = null;\nlet InvalidNestedHooksDispatcherOnMountInDEV: Dispatcher | null = null;\nlet InvalidNestedHooksDispatcherOnUpdateInDEV: Dispatcher | null = null;\nlet InvalidNestedHooksDispatcherOnRerenderInDEV: Dispatcher | null = null;\n\nif (__DEV__) {\n  const warnInvalidContextAccess = () => {\n    console.error(\n      'Context can only be read while React is rendering. ' +\n        'In classes, you can read it in the render method or getDerivedStateFromProps. ' +\n        'In function components, you can read it directly in the function body, but not ' +\n        'inside Hooks like useReducer() or useMemo().',\n    );\n  };\n\n  const warnInvalidHookAccess = () => {\n    console.error(\n      'Do not call Hooks inside useEffect(...), useMemo(...), or other built-in Hooks. ' +\n        'You can only call Hooks at the top level of your React function. ' +\n        'For more information, see ' +\n        'https://reactjs.org/link/rules-of-hooks',\n    );\n  };\n\n  HooksDispatcherOnMountInDEV = {\n    readContext<T>(\n      context: ReactContext<T>,\n      observedBits: void | number | boolean,\n    ): T {\n      return readContext(context, observedBits);\n    },\n    useCallback<T>(callback: T, deps: Array<mixed> | void | null): T {\n      currentHookNameInDev = 'useCallback';\n      mountHookTypesDev();\n      checkDepsAreArrayDev(deps);\n      return mountCallback(callback, deps);\n    },\n    useContext<T>(\n      context: ReactContext<T>,\n      observedBits: void | number | boolean,\n    ): T {\n      currentHookNameInDev = 'useContext';\n      mountHookTypesDev();\n      return readContext(context, observedBits);\n    },\n    useEffect(\n      create: () => (() => void) | void,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useEffect';\n      mountHookTypesDev();\n      checkDepsAreArrayDev(deps);\n      return mountEffect(create, deps);\n    },\n    useImperativeHandle<T>(\n      ref: {|current: T | null|} | ((inst: T | null) => mixed) | null | void,\n      create: () => T,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useImperativeHandle';\n      mountHookTypesDev();\n      checkDepsAreArrayDev(deps);\n      return mountImperativeHandle(ref, create, deps);\n    },\n    useLayoutEffect(\n      create: () => (() => void) | void,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useLayoutEffect';\n      mountHookTypesDev();\n      checkDepsAreArrayDev(deps);\n      return mountLayoutEffect(create, deps);\n    },\n    useMemo<T>(create: () => T, deps: Array<mixed> | void | null): T {\n      currentHookNameInDev = 'useMemo';\n      mountHookTypesDev();\n      checkDepsAreArrayDev(deps);\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnMountInDEV;\n      try {\n        return mountMemo(create, deps);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useReducer<S, I, A>(\n      reducer: (S, A) => S,\n      initialArg: I,\n      init?: I => S,\n    ): [S, Dispatch<A>] {\n      currentHookNameInDev = 'useReducer';\n      mountHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnMountInDEV;\n      try {\n        return mountReducer(reducer, initialArg, init);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useRef<T>(initialValue: T): {|current: T|} {\n      currentHookNameInDev = 'useRef';\n      mountHookTypesDev();\n      return mountRef(initialValue);\n    },\n    useState<S>(\n      initialState: (() => S) | S,\n    ): [S, Dispatch<BasicStateAction<S>>] {\n      currentHookNameInDev = 'useState';\n      mountHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnMountInDEV;\n      try {\n        return mountState(initialState);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useDebugValue<T>(value: T, formatterFn: ?(value: T) => mixed): void {\n      currentHookNameInDev = 'useDebugValue';\n      mountHookTypesDev();\n      return mountDebugValue(value, formatterFn);\n    },\n    useDeferredValue<T>(value: T): T {\n      currentHookNameInDev = 'useDeferredValue';\n      mountHookTypesDev();\n      return mountDeferredValue(value);\n    },\n    useTransition(): [(() => void) => void, boolean] {\n      currentHookNameInDev = 'useTransition';\n      mountHookTypesDev();\n      return mountTransition();\n    },\n    useMutableSource<Source, Snapshot>(\n      source: MutableSource<Source>,\n      getSnapshot: MutableSourceGetSnapshotFn<Source, Snapshot>,\n      subscribe: MutableSourceSubscribeFn<Source, Snapshot>,\n    ): Snapshot {\n      currentHookNameInDev = 'useMutableSource';\n      mountHookTypesDev();\n      return mountMutableSource(source, getSnapshot, subscribe);\n    },\n    useOpaqueIdentifier(): OpaqueIDType | void {\n      currentHookNameInDev = 'useOpaqueIdentifier';\n      mountHookTypesDev();\n      return mountOpaqueIdentifier();\n    },\n\n    unstable_isNewReconciler: enableNewReconciler,\n  };\n\n  HooksDispatcherOnMountWithHookTypesInDEV = {\n    readContext<T>(\n      context: ReactContext<T>,\n      observedBits: void | number | boolean,\n    ): T {\n      return readContext(context, observedBits);\n    },\n    useCallback<T>(callback: T, deps: Array<mixed> | void | null): T {\n      currentHookNameInDev = 'useCallback';\n      updateHookTypesDev();\n      return mountCallback(callback, deps);\n    },\n    useContext<T>(\n      context: ReactContext<T>,\n      observedBits: void | number | boolean,\n    ): T {\n      currentHookNameInDev = 'useContext';\n      updateHookTypesDev();\n      return readContext(context, observedBits);\n    },\n    useEffect(\n      create: () => (() => void) | void,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useEffect';\n      updateHookTypesDev();\n      return mountEffect(create, deps);\n    },\n    useImperativeHandle<T>(\n      ref: {|current: T | null|} | ((inst: T | null) => mixed) | null | void,\n      create: () => T,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useImperativeHandle';\n      updateHookTypesDev();\n      return mountImperativeHandle(ref, create, deps);\n    },\n    useLayoutEffect(\n      create: () => (() => void) | void,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useLayoutEffect';\n      updateHookTypesDev();\n      return mountLayoutEffect(create, deps);\n    },\n    useMemo<T>(create: () => T, deps: Array<mixed> | void | null): T {\n      currentHookNameInDev = 'useMemo';\n      updateHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnMountInDEV;\n      try {\n        return mountMemo(create, deps);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useReducer<S, I, A>(\n      reducer: (S, A) => S,\n      initialArg: I,\n      init?: I => S,\n    ): [S, Dispatch<A>] {\n      currentHookNameInDev = 'useReducer';\n      updateHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnMountInDEV;\n      try {\n        return mountReducer(reducer, initialArg, init);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useRef<T>(initialValue: T): {|current: T|} {\n      currentHookNameInDev = 'useRef';\n      updateHookTypesDev();\n      return mountRef(initialValue);\n    },\n    useState<S>(\n      initialState: (() => S) | S,\n    ): [S, Dispatch<BasicStateAction<S>>] {\n      currentHookNameInDev = 'useState';\n      updateHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnMountInDEV;\n      try {\n        return mountState(initialState);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useDebugValue<T>(value: T, formatterFn: ?(value: T) => mixed): void {\n      currentHookNameInDev = 'useDebugValue';\n      updateHookTypesDev();\n      return mountDebugValue(value, formatterFn);\n    },\n    useDeferredValue<T>(value: T): T {\n      currentHookNameInDev = 'useDeferredValue';\n      updateHookTypesDev();\n      return mountDeferredValue(value);\n    },\n    useTransition(): [(() => void) => void, boolean] {\n      currentHookNameInDev = 'useTransition';\n      updateHookTypesDev();\n      return mountTransition();\n    },\n    useMutableSource<Source, Snapshot>(\n      source: MutableSource<Source>,\n      getSnapshot: MutableSourceGetSnapshotFn<Source, Snapshot>,\n      subscribe: MutableSourceSubscribeFn<Source, Snapshot>,\n    ): Snapshot {\n      currentHookNameInDev = 'useMutableSource';\n      updateHookTypesDev();\n      return mountMutableSource(source, getSnapshot, subscribe);\n    },\n    useOpaqueIdentifier(): OpaqueIDType | void {\n      currentHookNameInDev = 'useOpaqueIdentifier';\n      updateHookTypesDev();\n      return mountOpaqueIdentifier();\n    },\n\n    unstable_isNewReconciler: enableNewReconciler,\n  };\n\n  HooksDispatcherOnUpdateInDEV = {\n    readContext<T>(\n      context: ReactContext<T>,\n      observedBits: void | number | boolean,\n    ): T {\n      return readContext(context, observedBits);\n    },\n    useCallback<T>(callback: T, deps: Array<mixed> | void | null): T {\n      currentHookNameInDev = 'useCallback';\n      updateHookTypesDev();\n      return updateCallback(callback, deps);\n    },\n    useContext<T>(\n      context: ReactContext<T>,\n      observedBits: void | number | boolean,\n    ): T {\n      currentHookNameInDev = 'useContext';\n      updateHookTypesDev();\n      return readContext(context, observedBits);\n    },\n    useEffect(\n      create: () => (() => void) | void,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useEffect';\n      updateHookTypesDev();\n      return updateEffect(create, deps);\n    },\n    useImperativeHandle<T>(\n      ref: {|current: T | null|} | ((inst: T | null) => mixed) | null | void,\n      create: () => T,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useImperativeHandle';\n      updateHookTypesDev();\n      return updateImperativeHandle(ref, create, deps);\n    },\n    useLayoutEffect(\n      create: () => (() => void) | void,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useLayoutEffect';\n      updateHookTypesDev();\n      return updateLayoutEffect(create, deps);\n    },\n    useMemo<T>(create: () => T, deps: Array<mixed> | void | null): T {\n      currentHookNameInDev = 'useMemo';\n      updateHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n      try {\n        return updateMemo(create, deps);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useReducer<S, I, A>(\n      reducer: (S, A) => S,\n      initialArg: I,\n      init?: I => S,\n    ): [S, Dispatch<A>] {\n      currentHookNameInDev = 'useReducer';\n      updateHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n      try {\n        return updateReducer(reducer, initialArg, init);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useRef<T>(initialValue: T): {|current: T|} {\n      currentHookNameInDev = 'useRef';\n      updateHookTypesDev();\n      return updateRef(initialValue);\n    },\n    useState<S>(\n      initialState: (() => S) | S,\n    ): [S, Dispatch<BasicStateAction<S>>] {\n      currentHookNameInDev = 'useState';\n      updateHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n      try {\n        return updateState(initialState);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useDebugValue<T>(value: T, formatterFn: ?(value: T) => mixed): void {\n      currentHookNameInDev = 'useDebugValue';\n      updateHookTypesDev();\n      return updateDebugValue(value, formatterFn);\n    },\n    useDeferredValue<T>(value: T): T {\n      currentHookNameInDev = 'useDeferredValue';\n      updateHookTypesDev();\n      return updateDeferredValue(value);\n    },\n    useTransition(): [(() => void) => void, boolean] {\n      currentHookNameInDev = 'useTransition';\n      updateHookTypesDev();\n      return updateTransition();\n    },\n    useMutableSource<Source, Snapshot>(\n      source: MutableSource<Source>,\n      getSnapshot: MutableSourceGetSnapshotFn<Source, Snapshot>,\n      subscribe: MutableSourceSubscribeFn<Source, Snapshot>,\n    ): Snapshot {\n      currentHookNameInDev = 'useMutableSource';\n      updateHookTypesDev();\n      return updateMutableSource(source, getSnapshot, subscribe);\n    },\n    useOpaqueIdentifier(): OpaqueIDType | void {\n      currentHookNameInDev = 'useOpaqueIdentifier';\n      updateHookTypesDev();\n      return updateOpaqueIdentifier();\n    },\n\n    unstable_isNewReconciler: enableNewReconciler,\n  };\n\n  HooksDispatcherOnRerenderInDEV = {\n    readContext<T>(\n      context: ReactContext<T>,\n      observedBits: void | number | boolean,\n    ): T {\n      return readContext(context, observedBits);\n    },\n\n    useCallback<T>(callback: T, deps: Array<mixed> | void | null): T {\n      currentHookNameInDev = 'useCallback';\n      updateHookTypesDev();\n      return updateCallback(callback, deps);\n    },\n    useContext<T>(\n      context: ReactContext<T>,\n      observedBits: void | number | boolean,\n    ): T {\n      currentHookNameInDev = 'useContext';\n      updateHookTypesDev();\n      return readContext(context, observedBits);\n    },\n    useEffect(\n      create: () => (() => void) | void,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useEffect';\n      updateHookTypesDev();\n      return updateEffect(create, deps);\n    },\n    useImperativeHandle<T>(\n      ref: {|current: T | null|} | ((inst: T | null) => mixed) | null | void,\n      create: () => T,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useImperativeHandle';\n      updateHookTypesDev();\n      return updateImperativeHandle(ref, create, deps);\n    },\n    useLayoutEffect(\n      create: () => (() => void) | void,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useLayoutEffect';\n      updateHookTypesDev();\n      return updateLayoutEffect(create, deps);\n    },\n    useMemo<T>(create: () => T, deps: Array<mixed> | void | null): T {\n      currentHookNameInDev = 'useMemo';\n      updateHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnRerenderInDEV;\n      try {\n        return updateMemo(create, deps);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useReducer<S, I, A>(\n      reducer: (S, A) => S,\n      initialArg: I,\n      init?: I => S,\n    ): [S, Dispatch<A>] {\n      currentHookNameInDev = 'useReducer';\n      updateHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnRerenderInDEV;\n      try {\n        return rerenderReducer(reducer, initialArg, init);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useRef<T>(initialValue: T): {|current: T|} {\n      currentHookNameInDev = 'useRef';\n      updateHookTypesDev();\n      return updateRef(initialValue);\n    },\n    useState<S>(\n      initialState: (() => S) | S,\n    ): [S, Dispatch<BasicStateAction<S>>] {\n      currentHookNameInDev = 'useState';\n      updateHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnRerenderInDEV;\n      try {\n        return rerenderState(initialState);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useDebugValue<T>(value: T, formatterFn: ?(value: T) => mixed): void {\n      currentHookNameInDev = 'useDebugValue';\n      updateHookTypesDev();\n      return updateDebugValue(value, formatterFn);\n    },\n    useDeferredValue<T>(value: T): T {\n      currentHookNameInDev = 'useDeferredValue';\n      updateHookTypesDev();\n      return rerenderDeferredValue(value);\n    },\n    useTransition(): [(() => void) => void, boolean] {\n      currentHookNameInDev = 'useTransition';\n      updateHookTypesDev();\n      return rerenderTransition();\n    },\n    useMutableSource<Source, Snapshot>(\n      source: MutableSource<Source>,\n      getSnapshot: MutableSourceGetSnapshotFn<Source, Snapshot>,\n      subscribe: MutableSourceSubscribeFn<Source, Snapshot>,\n    ): Snapshot {\n      currentHookNameInDev = 'useMutableSource';\n      updateHookTypesDev();\n      return updateMutableSource(source, getSnapshot, subscribe);\n    },\n    useOpaqueIdentifier(): OpaqueIDType | void {\n      currentHookNameInDev = 'useOpaqueIdentifier';\n      updateHookTypesDev();\n      return rerenderOpaqueIdentifier();\n    },\n\n    unstable_isNewReconciler: enableNewReconciler,\n  };\n\n  InvalidNestedHooksDispatcherOnMountInDEV = {\n    readContext<T>(\n      context: ReactContext<T>,\n      observedBits: void | number | boolean,\n    ): T {\n      warnInvalidContextAccess();\n      return readContext(context, observedBits);\n    },\n    useCallback<T>(callback: T, deps: Array<mixed> | void | null): T {\n      currentHookNameInDev = 'useCallback';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountCallback(callback, deps);\n    },\n    useContext<T>(\n      context: ReactContext<T>,\n      observedBits: void | number | boolean,\n    ): T {\n      currentHookNameInDev = 'useContext';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return readContext(context, observedBits);\n    },\n    useEffect(\n      create: () => (() => void) | void,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useEffect';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountEffect(create, deps);\n    },\n    useImperativeHandle<T>(\n      ref: {|current: T | null|} | ((inst: T | null) => mixed) | null | void,\n      create: () => T,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useImperativeHandle';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountImperativeHandle(ref, create, deps);\n    },\n    useLayoutEffect(\n      create: () => (() => void) | void,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useLayoutEffect';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountLayoutEffect(create, deps);\n    },\n    useMemo<T>(create: () => T, deps: Array<mixed> | void | null): T {\n      currentHookNameInDev = 'useMemo';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnMountInDEV;\n      try {\n        return mountMemo(create, deps);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useReducer<S, I, A>(\n      reducer: (S, A) => S,\n      initialArg: I,\n      init?: I => S,\n    ): [S, Dispatch<A>] {\n      currentHookNameInDev = 'useReducer';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnMountInDEV;\n      try {\n        return mountReducer(reducer, initialArg, init);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useRef<T>(initialValue: T): {|current: T|} {\n      currentHookNameInDev = 'useRef';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountRef(initialValue);\n    },\n    useState<S>(\n      initialState: (() => S) | S,\n    ): [S, Dispatch<BasicStateAction<S>>] {\n      currentHookNameInDev = 'useState';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnMountInDEV;\n      try {\n        return mountState(initialState);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useDebugValue<T>(value: T, formatterFn: ?(value: T) => mixed): void {\n      currentHookNameInDev = 'useDebugValue';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountDebugValue(value, formatterFn);\n    },\n    useDeferredValue<T>(value: T): T {\n      currentHookNameInDev = 'useDeferredValue';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountDeferredValue(value);\n    },\n    useTransition(): [(() => void) => void, boolean] {\n      currentHookNameInDev = 'useTransition';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountTransition();\n    },\n    useMutableSource<Source, Snapshot>(\n      source: MutableSource<Source>,\n      getSnapshot: MutableSourceGetSnapshotFn<Source, Snapshot>,\n      subscribe: MutableSourceSubscribeFn<Source, Snapshot>,\n    ): Snapshot {\n      currentHookNameInDev = 'useMutableSource';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountMutableSource(source, getSnapshot, subscribe);\n    },\n    useOpaqueIdentifier(): OpaqueIDType | void {\n      currentHookNameInDev = 'useOpaqueIdentifier';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountOpaqueIdentifier();\n    },\n\n    unstable_isNewReconciler: enableNewReconciler,\n  };\n\n  InvalidNestedHooksDispatcherOnUpdateInDEV = {\n    readContext<T>(\n      context: ReactContext<T>,\n      observedBits: void | number | boolean,\n    ): T {\n      warnInvalidContextAccess();\n      return readContext(context, observedBits);\n    },\n    useCallback<T>(callback: T, deps: Array<mixed> | void | null): T {\n      currentHookNameInDev = 'useCallback';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateCallback(callback, deps);\n    },\n    useContext<T>(\n      context: ReactContext<T>,\n      observedBits: void | number | boolean,\n    ): T {\n      currentHookNameInDev = 'useContext';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return readContext(context, observedBits);\n    },\n    useEffect(\n      create: () => (() => void) | void,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useEffect';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateEffect(create, deps);\n    },\n    useImperativeHandle<T>(\n      ref: {|current: T | null|} | ((inst: T | null) => mixed) | null | void,\n      create: () => T,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useImperativeHandle';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateImperativeHandle(ref, create, deps);\n    },\n    useLayoutEffect(\n      create: () => (() => void) | void,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useLayoutEffect';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateLayoutEffect(create, deps);\n    },\n    useMemo<T>(create: () => T, deps: Array<mixed> | void | null): T {\n      currentHookNameInDev = 'useMemo';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n      try {\n        return updateMemo(create, deps);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useReducer<S, I, A>(\n      reducer: (S, A) => S,\n      initialArg: I,\n      init?: I => S,\n    ): [S, Dispatch<A>] {\n      currentHookNameInDev = 'useReducer';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n      try {\n        return updateReducer(reducer, initialArg, init);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useRef<T>(initialValue: T): {|current: T|} {\n      currentHookNameInDev = 'useRef';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateRef(initialValue);\n    },\n    useState<S>(\n      initialState: (() => S) | S,\n    ): [S, Dispatch<BasicStateAction<S>>] {\n      currentHookNameInDev = 'useState';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n      try {\n        return updateState(initialState);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useDebugValue<T>(value: T, formatterFn: ?(value: T) => mixed): void {\n      currentHookNameInDev = 'useDebugValue';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateDebugValue(value, formatterFn);\n    },\n    useDeferredValue<T>(value: T): T {\n      currentHookNameInDev = 'useDeferredValue';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateDeferredValue(value);\n    },\n    useTransition(): [(() => void) => void, boolean] {\n      currentHookNameInDev = 'useTransition';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateTransition();\n    },\n    useMutableSource<Source, Snapshot>(\n      source: MutableSource<Source>,\n      getSnapshot: MutableSourceGetSnapshotFn<Source, Snapshot>,\n      subscribe: MutableSourceSubscribeFn<Source, Snapshot>,\n    ): Snapshot {\n      currentHookNameInDev = 'useMutableSource';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateMutableSource(source, getSnapshot, subscribe);\n    },\n    useOpaqueIdentifier(): OpaqueIDType | void {\n      currentHookNameInDev = 'useOpaqueIdentifier';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateOpaqueIdentifier();\n    },\n\n    unstable_isNewReconciler: enableNewReconciler,\n  };\n\n  InvalidNestedHooksDispatcherOnRerenderInDEV = {\n    readContext<T>(\n      context: ReactContext<T>,\n      observedBits: void | number | boolean,\n    ): T {\n      warnInvalidContextAccess();\n      return readContext(context, observedBits);\n    },\n\n    useCallback<T>(callback: T, deps: Array<mixed> | void | null): T {\n      currentHookNameInDev = 'useCallback';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateCallback(callback, deps);\n    },\n    useContext<T>(\n      context: ReactContext<T>,\n      observedBits: void | number | boolean,\n    ): T {\n      currentHookNameInDev = 'useContext';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return readContext(context, observedBits);\n    },\n    useEffect(\n      create: () => (() => void) | void,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useEffect';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateEffect(create, deps);\n    },\n    useImperativeHandle<T>(\n      ref: {|current: T | null|} | ((inst: T | null) => mixed) | null | void,\n      create: () => T,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useImperativeHandle';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateImperativeHandle(ref, create, deps);\n    },\n    useLayoutEffect(\n      create: () => (() => void) | void,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useLayoutEffect';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateLayoutEffect(create, deps);\n    },\n    useMemo<T>(create: () => T, deps: Array<mixed> | void | null): T {\n      currentHookNameInDev = 'useMemo';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n      try {\n        return updateMemo(create, deps);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useReducer<S, I, A>(\n      reducer: (S, A) => S,\n      initialArg: I,\n      init?: I => S,\n    ): [S, Dispatch<A>] {\n      currentHookNameInDev = 'useReducer';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n      try {\n        return rerenderReducer(reducer, initialArg, init);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useRef<T>(initialValue: T): {|current: T|} {\n      currentHookNameInDev = 'useRef';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateRef(initialValue);\n    },\n    useState<S>(\n      initialState: (() => S) | S,\n    ): [S, Dispatch<BasicStateAction<S>>] {\n      currentHookNameInDev = 'useState';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n      try {\n        return rerenderState(initialState);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useDebugValue<T>(value: T, formatterFn: ?(value: T) => mixed): void {\n      currentHookNameInDev = 'useDebugValue';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateDebugValue(value, formatterFn);\n    },\n    useDeferredValue<T>(value: T): T {\n      currentHookNameInDev = 'useDeferredValue';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return rerenderDeferredValue(value);\n    },\n    useTransition(): [(() => void) => void, boolean] {\n      currentHookNameInDev = 'useTransition';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return rerenderTransition();\n    },\n    useMutableSource<Source, Snapshot>(\n      source: MutableSource<Source>,\n      getSnapshot: MutableSourceGetSnapshotFn<Source, Snapshot>,\n      subscribe: MutableSourceSubscribeFn<Source, Snapshot>,\n    ): Snapshot {\n      currentHookNameInDev = 'useMutableSource';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateMutableSource(source, getSnapshot, subscribe);\n    },\n    useOpaqueIdentifier(): OpaqueIDType | void {\n      currentHookNameInDev = 'useOpaqueIdentifier';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return rerenderOpaqueIdentifier();\n    },\n\n    unstable_isNewReconciler: enableNewReconciler,\n  };\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactInternalTypes';\n\nimport {\n  enableProfilerTimer,\n  enableProfilerCommitHooks,\n} from 'shared/ReactFeatureFlags';\nimport {Profiler} from './ReactWorkTags';\n\n// Intentionally not named imports because Rollup would use dynamic dispatch for\n// CommonJS interop named imports.\nimport * as Scheduler from 'scheduler';\n\nconst {unstable_now: now} = Scheduler;\n\nexport type ProfilerTimer = {\n  getCommitTime(): number,\n  recordCommitTime(): void,\n  startProfilerTimer(fiber: Fiber): void,\n  stopProfilerTimerIfRunning(fiber: Fiber): void,\n  stopProfilerTimerIfRunningAndRecordDelta(fiber: Fiber): void,\n  ...\n};\n\nlet commitTime: number = 0;\nlet layoutEffectStartTime: number = -1;\nlet profilerStartTime: number = -1;\nlet passiveEffectStartTime: number = -1;\n\nfunction getCommitTime(): number {\n  return commitTime;\n}\n\nfunction recordCommitTime(): void {\n  if (!enableProfilerTimer) {\n    return;\n  }\n  commitTime = now();\n}\n\nfunction startProfilerTimer(fiber: Fiber): void {\n  if (!enableProfilerTimer) {\n    return;\n  }\n\n  profilerStartTime = now();\n\n  if (((fiber.actualStartTime: any): number) < 0) {\n    fiber.actualStartTime = now();\n  }\n}\n\nfunction stopProfilerTimerIfRunning(fiber: Fiber): void {\n  if (!enableProfilerTimer) {\n    return;\n  }\n  profilerStartTime = -1;\n}\n\nfunction stopProfilerTimerIfRunningAndRecordDelta(\n  fiber: Fiber,\n  overrideBaseTime: boolean,\n): void {\n  if (!enableProfilerTimer) {\n    return;\n  }\n\n  if (profilerStartTime >= 0) {\n    const elapsedTime = now() - profilerStartTime;\n    fiber.actualDuration += elapsedTime;\n    if (overrideBaseTime) {\n      fiber.selfBaseDuration = elapsedTime;\n    }\n    profilerStartTime = -1;\n  }\n}\n\nfunction recordLayoutEffectDuration(fiber: Fiber): void {\n  if (!enableProfilerTimer || !enableProfilerCommitHooks) {\n    return;\n  }\n\n  if (layoutEffectStartTime >= 0) {\n    const elapsedTime = now() - layoutEffectStartTime;\n\n    layoutEffectStartTime = -1;\n\n    // Store duration on the next nearest Profiler ancestor.\n    let parentFiber = fiber.return;\n    while (parentFiber !== null) {\n      if (parentFiber.tag === Profiler) {\n        const parentStateNode = parentFiber.stateNode;\n        parentStateNode.effectDuration += elapsedTime;\n        break;\n      }\n      parentFiber = parentFiber.return;\n    }\n  }\n}\n\nfunction recordPassiveEffectDuration(fiber: Fiber): void {\n  if (!enableProfilerTimer || !enableProfilerCommitHooks) {\n    return;\n  }\n\n  if (passiveEffectStartTime >= 0) {\n    const elapsedTime = now() - passiveEffectStartTime;\n\n    passiveEffectStartTime = -1;\n\n    // Store duration on the next nearest Profiler ancestor.\n    let parentFiber = fiber.return;\n    while (parentFiber !== null) {\n      if (parentFiber.tag === Profiler) {\n        const parentStateNode = parentFiber.stateNode;\n        if (parentStateNode !== null) {\n          // Detached fibers have their state node cleared out.\n          // In this case, the return pointer is also cleared out,\n          // so we won't be able to report the time spent in this Profiler's subtree.\n          parentStateNode.passiveEffectDuration += elapsedTime;\n        }\n        break;\n      }\n      parentFiber = parentFiber.return;\n    }\n  }\n}\n\nfunction startLayoutEffectTimer(): void {\n  if (!enableProfilerTimer || !enableProfilerCommitHooks) {\n    return;\n  }\n  layoutEffectStartTime = now();\n}\n\nfunction startPassiveEffectTimer(): void {\n  if (!enableProfilerTimer || !enableProfilerCommitHooks) {\n    return;\n  }\n  passiveEffectStartTime = now();\n}\n\nfunction transferActualDuration(fiber: Fiber): void {\n  // Transfer time spent rendering these children so we don't lose it\n  // after we rerender. This is used as a helper in special cases\n  // where we should count the work of multiple passes.\n  let child = fiber.child;\n  while (child) {\n    fiber.actualDuration += child.actualDuration;\n    child = child.sibling;\n  }\n}\n\nexport {\n  getCommitTime,\n  recordCommitTime,\n  recordLayoutEffectDuration,\n  recordPassiveEffectDuration,\n  startLayoutEffectTimer,\n  startPassiveEffectTimer,\n  startProfilerTimer,\n  stopProfilerTimerIfRunning,\n  stopProfilerTimerIfRunningAndRecordDelta,\n  transferActualDuration,\n};\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {ReactProviderType, ReactContext} from 'shared/ReactTypes';\nimport type {BlockComponent} from 'react/src/ReactBlock';\nimport type {LazyComponent as LazyComponentType} from 'react/src/ReactLazy';\nimport type {Fiber} from './ReactInternalTypes';\nimport type {FiberRoot} from './ReactInternalTypes';\nimport type {Lanes, Lane} from './ReactFiberLane';\nimport type {MutableSource} from 'shared/ReactTypes';\nimport type {\n  SuspenseState,\n  SuspenseListRenderState,\n  SuspenseListTailMode,\n} from './ReactFiberSuspenseComponent.old';\nimport type {SuspenseContext} from './ReactFiberSuspenseContext.old';\nimport type {\n  OffscreenProps,\n  OffscreenState,\n} from './ReactFiberOffscreenComponent';\n\nimport checkPropTypes from 'shared/checkPropTypes';\n\nimport {\n  IndeterminateComponent,\n  FunctionComponent,\n  ClassComponent,\n  HostRoot,\n  HostComponent,\n  HostText,\n  HostPortal,\n  ForwardRef,\n  Fragment,\n  Mode,\n  ContextProvider,\n  ContextConsumer,\n  Profiler,\n  SuspenseComponent,\n  SuspenseListComponent,\n  MemoComponent,\n  SimpleMemoComponent,\n  LazyComponent,\n  IncompleteClassComponent,\n  FundamentalComponent,\n  ScopeComponent,\n  Block,\n  OffscreenComponent,\n  LegacyHiddenComponent,\n} from './ReactWorkTags';\nimport {\n  NoFlags,\n  PerformedWork,\n  Placement,\n  Hydrating,\n  ContentReset,\n  DidCapture,\n  Update,\n  Ref,\n  Deletion,\n  ForceUpdateForLegacySuspense,\n} from './ReactFiberFlags';\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\nimport {\n  debugRenderPhaseSideEffectsForStrictMode,\n  disableLegacyContext,\n  disableModulePatternComponents,\n  enableProfilerTimer,\n  enableSchedulerTracing,\n  enableSuspenseServerRenderer,\n  enableFundamentalAPI,\n  warnAboutDefaultPropsOnFunctionComponents,\n  enableScopeAPI,\n  enableBlocksAPI,\n} from 'shared/ReactFeatureFlags';\nimport invariant from 'shared/invariant';\nimport shallowEqual from 'shared/shallowEqual';\nimport getComponentName from 'shared/getComponentName';\nimport ReactStrictModeWarnings from './ReactStrictModeWarnings.old';\nimport {REACT_LAZY_TYPE, getIteratorFn} from 'shared/ReactSymbols';\nimport {\n  getCurrentFiberOwnerNameInDevOrNull,\n  setIsRendering,\n} from './ReactCurrentFiber';\nimport {\n  resolveFunctionForHotReloading,\n  resolveForwardRefForHotReloading,\n  resolveClassForHotReloading,\n} from './ReactFiberHotReloading.old';\n\nimport {\n  mountChildFibers,\n  reconcileChildFibers,\n  cloneChildFibers,\n} from './ReactChildFiber.old';\nimport {\n  processUpdateQueue,\n  cloneUpdateQueue,\n  initializeUpdateQueue,\n} from './ReactUpdateQueue.old';\nimport {\n  NoLane,\n  NoLanes,\n  SyncLane,\n  OffscreenLane,\n  DefaultHydrationLane,\n  SomeRetryLane,\n  NoTimestamp,\n  includesSomeLane,\n  laneToLanes,\n  removeLanes,\n  mergeLanes,\n  getBumpedLaneForHydration,\n} from './ReactFiberLane';\nimport {\n  ConcurrentMode,\n  NoMode,\n  ProfileMode,\n  StrictMode,\n  BlockingMode,\n} from './ReactTypeOfMode';\nimport {\n  shouldSetTextContent,\n  isSuspenseInstancePending,\n  isSuspenseInstanceFallback,\n  registerSuspenseInstanceRetry,\n  supportsHydration,\n} from './ReactFiberHostConfig';\nimport type {SuspenseInstance} from './ReactFiberHostConfig';\nimport {shouldSuspend} from './ReactFiberReconciler';\nimport {pushHostContext, pushHostContainer} from './ReactFiberHostContext.old';\nimport {\n  suspenseStackCursor,\n  pushSuspenseContext,\n  InvisibleParentSuspenseContext,\n  ForceSuspenseFallback,\n  hasSuspenseContext,\n  setDefaultShallowSuspenseContext,\n  addSubtreeSuspenseContext,\n  setShallowSuspenseContext,\n} from './ReactFiberSuspenseContext.old';\nimport {findFirstSuspended} from './ReactFiberSuspenseComponent.old';\nimport {\n  pushProvider,\n  propagateContextChange,\n  readContext,\n  prepareToReadContext,\n  calculateChangedBits,\n  scheduleWorkOnParentPath,\n} from './ReactFiberNewContext.old';\nimport {renderWithHooks, bailoutHooks} from './ReactFiberHooks.old';\nimport {stopProfilerTimerIfRunning} from './ReactProfilerTimer.old';\nimport {\n  getMaskedContext,\n  getUnmaskedContext,\n  hasContextChanged as hasLegacyContextChanged,\n  pushContextProvider as pushLegacyContextProvider,\n  isContextProvider as isLegacyContextProvider,\n  pushTopLevelContextObject,\n  invalidateContextProvider,\n} from './ReactFiberContext.old';\nimport {\n  enterHydrationState,\n  reenterHydrationStateFromDehydratedSuspenseInstance,\n  resetHydrationState,\n  tryToClaimNextHydratableInstance,\n  warnIfHydrating,\n} from './ReactFiberHydrationContext.old';\nimport {\n  adoptClassInstance,\n  applyDerivedStateFromProps,\n  constructClassInstance,\n  mountClassInstance,\n  resumeMountClassInstance,\n  updateClassInstance,\n} from './ReactFiberClassComponent.old';\nimport {resolveDefaultProps} from './ReactFiberLazyComponent.old';\nimport {\n  resolveLazyComponentTag,\n  createFiberFromTypeAndProps,\n  createFiberFromFragment,\n  createFiberFromOffscreen,\n  createWorkInProgress,\n  isSimpleFunctionComponent,\n} from './ReactFiber.old';\nimport {\n  markSpawnedWork,\n  retryDehydratedSuspenseBoundary,\n  scheduleUpdateOnFiber,\n  renderDidSuspendDelayIfPossible,\n  markSkippedUpdateLanes,\n  getWorkInProgressRoot,\n  pushRenderLanes,\n  getExecutionContext,\n  RetryAfterError,\n  NoContext,\n} from './ReactFiberWorkLoop.old';\nimport {unstable_wrap as Schedule_tracing_wrap} from 'scheduler/tracing';\nimport {setWorkInProgressVersion} from './ReactMutableSource.old';\n\nimport {disableLogs, reenableLogs} from 'shared/ConsolePatchingDev';\n\nconst ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\n\nlet didReceiveUpdate: boolean = false;\n\nlet didWarnAboutBadClass;\nlet didWarnAboutModulePatternComponent;\nlet didWarnAboutContextTypeOnFunctionComponent;\nlet didWarnAboutGetDerivedStateOnFunctionComponent;\nlet didWarnAboutFunctionRefs;\nexport let didWarnAboutReassigningProps;\nlet didWarnAboutRevealOrder;\nlet didWarnAboutTailOptions;\nlet didWarnAboutDefaultPropsOnFunctionComponent;\n\nif (__DEV__) {\n  didWarnAboutBadClass = {};\n  didWarnAboutModulePatternComponent = {};\n  didWarnAboutContextTypeOnFunctionComponent = {};\n  didWarnAboutGetDerivedStateOnFunctionComponent = {};\n  didWarnAboutFunctionRefs = {};\n  didWarnAboutReassigningProps = false;\n  didWarnAboutRevealOrder = {};\n  didWarnAboutTailOptions = {};\n  didWarnAboutDefaultPropsOnFunctionComponent = {};\n}\n\nexport function reconcileChildren(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  nextChildren: any,\n  renderLanes: Lanes,\n) {\n  if (current === null) {\n    // If this is a fresh new component that hasn't been rendered yet, we\n    // won't update its child set by applying minimal side-effects. Instead,\n    // we will add them all to the child before it gets rendered. That means\n    // we can optimize this reconciliation pass by not tracking side-effects.\n    workInProgress.child = mountChildFibers(\n      workInProgress,\n      null,\n      nextChildren,\n      renderLanes,\n    );\n  } else {\n    // If the current child is the same as the work in progress, it means that\n    // we haven't yet started any work on these children. Therefore, we use\n    // the clone algorithm to create a copy of all the current children.\n\n    // If we had any progressed work already, that is invalid at this point so\n    // let's throw it out.\n    workInProgress.child = reconcileChildFibers(\n      workInProgress,\n      current.child,\n      nextChildren,\n      renderLanes,\n    );\n  }\n}\n\nfunction forceUnmountCurrentAndReconcile(\n  current: Fiber,\n  workInProgress: Fiber,\n  nextChildren: any,\n  renderLanes: Lanes,\n) {\n  // This function is fork of reconcileChildren. It's used in cases where we\n  // want to reconcile without matching against the existing set. This has the\n  // effect of all current children being unmounted; even if the type and key\n  // are the same, the old child is unmounted and a new child is created.\n  //\n  // To do this, we're going to go through the reconcile algorithm twice. In\n  // the first pass, we schedule a deletion for all the current children by\n  // passing null.\n  workInProgress.child = reconcileChildFibers(\n    workInProgress,\n    current.child,\n    null,\n    renderLanes,\n  );\n  // In the second pass, we mount the new children. The trick here is that we\n  // pass null in place of where we usually pass the current child set. This has\n  // the effect of remounting all children regardless of whether their\n  // identities match.\n  workInProgress.child = reconcileChildFibers(\n    workInProgress,\n    null,\n    nextChildren,\n    renderLanes,\n  );\n}\n\nfunction updateForwardRef(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  Component: any,\n  nextProps: any,\n  renderLanes: Lanes,\n) {\n  // TODO: current can be non-null here even if the component\n  // hasn't yet mounted. This happens after the first render suspends.\n  // We'll need to figure out if this is fine or can cause issues.\n\n  if (__DEV__) {\n    if (workInProgress.type !== workInProgress.elementType) {\n      // Lazy component props can't be validated in createElement\n      // because they're only guaranteed to be resolved here.\n      const innerPropTypes = Component.propTypes;\n      if (innerPropTypes) {\n        checkPropTypes(\n          innerPropTypes,\n          nextProps, // Resolved props\n          'prop',\n          getComponentName(Component),\n        );\n      }\n    }\n  }\n\n  const render = Component.render;\n  const ref = workInProgress.ref;\n\n  // The rest is a fork of updateFunctionComponent\n  let nextChildren;\n  prepareToReadContext(workInProgress, renderLanes);\n  if (__DEV__) {\n    ReactCurrentOwner.current = workInProgress;\n    setIsRendering(true);\n    nextChildren = renderWithHooks(\n      current,\n      workInProgress,\n      render,\n      nextProps,\n      ref,\n      renderLanes,\n    );\n    if (\n      debugRenderPhaseSideEffectsForStrictMode &&\n      workInProgress.mode & StrictMode\n    ) {\n      disableLogs();\n      try {\n        nextChildren = renderWithHooks(\n          current,\n          workInProgress,\n          render,\n          nextProps,\n          ref,\n          renderLanes,\n        );\n      } finally {\n        reenableLogs();\n      }\n    }\n    setIsRendering(false);\n  } else {\n    nextChildren = renderWithHooks(\n      current,\n      workInProgress,\n      render,\n      nextProps,\n      ref,\n      renderLanes,\n    );\n  }\n\n  if (current !== null && !didReceiveUpdate) {\n    bailoutHooks(current, workInProgress, renderLanes);\n    return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n  }\n\n  // React DevTools reads this flag.\n  workInProgress.flags |= PerformedWork;\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  return workInProgress.child;\n}\n\nfunction updateMemoComponent(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  Component: any,\n  nextProps: any,\n  updateLanes: Lanes,\n  renderLanes: Lanes,\n): null | Fiber {\n  if (current === null) {\n    const type = Component.type;\n    if (\n      isSimpleFunctionComponent(type) &&\n      Component.compare === null &&\n      // SimpleMemoComponent codepath doesn't resolve outer props either.\n      Component.defaultProps === undefined\n    ) {\n      let resolvedType = type;\n      if (__DEV__) {\n        resolvedType = resolveFunctionForHotReloading(type);\n      }\n      // If this is a plain function component without default props,\n      // and with only the default shallow comparison, we upgrade it\n      // to a SimpleMemoComponent to allow fast path updates.\n      workInProgress.tag = SimpleMemoComponent;\n      workInProgress.type = resolvedType;\n      if (__DEV__) {\n        validateFunctionComponentInDev(workInProgress, type);\n      }\n      return updateSimpleMemoComponent(\n        current,\n        workInProgress,\n        resolvedType,\n        nextProps,\n        updateLanes,\n        renderLanes,\n      );\n    }\n    if (__DEV__) {\n      const innerPropTypes = type.propTypes;\n      if (innerPropTypes) {\n        // Inner memo component props aren't currently validated in createElement.\n        // We could move it there, but we'd still need this for lazy code path.\n        checkPropTypes(\n          innerPropTypes,\n          nextProps, // Resolved props\n          'prop',\n          getComponentName(type),\n        );\n      }\n    }\n    const child = createFiberFromTypeAndProps(\n      Component.type,\n      null,\n      nextProps,\n      workInProgress,\n      workInProgress.mode,\n      renderLanes,\n    );\n    child.ref = workInProgress.ref;\n    child.return = workInProgress;\n    workInProgress.child = child;\n    return child;\n  }\n  if (__DEV__) {\n    const type = Component.type;\n    const innerPropTypes = type.propTypes;\n    if (innerPropTypes) {\n      // Inner memo component props aren't currently validated in createElement.\n      // We could move it there, but we'd still need this for lazy code path.\n      checkPropTypes(\n        innerPropTypes,\n        nextProps, // Resolved props\n        'prop',\n        getComponentName(type),\n      );\n    }\n  }\n  const currentChild = ((current.child: any): Fiber); // This is always exactly one child\n  if (!includesSomeLane(updateLanes, renderLanes)) {\n    // This will be the props with resolved defaultProps,\n    // unlike current.memoizedProps which will be the unresolved ones.\n    const prevProps = currentChild.memoizedProps;\n    // Default to shallow comparison\n    let compare = Component.compare;\n    compare = compare !== null ? compare : shallowEqual;\n    if (compare(prevProps, nextProps) && current.ref === workInProgress.ref) {\n      return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n    }\n  }\n  // React DevTools reads this flag.\n  workInProgress.flags |= PerformedWork;\n  const newChild = createWorkInProgress(currentChild, nextProps);\n  newChild.ref = workInProgress.ref;\n  newChild.return = workInProgress;\n  workInProgress.child = newChild;\n  return newChild;\n}\n\nfunction updateSimpleMemoComponent(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  Component: any,\n  nextProps: any,\n  updateLanes: Lanes,\n  renderLanes: Lanes,\n): null | Fiber {\n  // TODO: current can be non-null here even if the component\n  // hasn't yet mounted. This happens when the inner render suspends.\n  // We'll need to figure out if this is fine or can cause issues.\n\n  if (__DEV__) {\n    if (workInProgress.type !== workInProgress.elementType) {\n      // Lazy component props can't be validated in createElement\n      // because they're only guaranteed to be resolved here.\n      let outerMemoType = workInProgress.elementType;\n      if (outerMemoType.$$typeof === REACT_LAZY_TYPE) {\n        // We warn when you define propTypes on lazy()\n        // so let's just skip over it to find memo() outer wrapper.\n        // Inner props for memo are validated later.\n        const lazyComponent: LazyComponentType<any, any> = outerMemoType;\n        const payload = lazyComponent._payload;\n        const init = lazyComponent._init;\n        try {\n          outerMemoType = init(payload);\n        } catch (x) {\n          outerMemoType = null;\n        }\n        // Inner propTypes will be validated in the function component path.\n        const outerPropTypes = outerMemoType && (outerMemoType: any).propTypes;\n        if (outerPropTypes) {\n          checkPropTypes(\n            outerPropTypes,\n            nextProps, // Resolved (SimpleMemoComponent has no defaultProps)\n            'prop',\n            getComponentName(outerMemoType),\n          );\n        }\n      }\n    }\n  }\n  if (current !== null) {\n    const prevProps = current.memoizedProps;\n    if (\n      shallowEqual(prevProps, nextProps) &&\n      current.ref === workInProgress.ref &&\n      // Prevent bailout if the implementation changed due to hot reload.\n      (__DEV__ ? workInProgress.type === current.type : true)\n    ) {\n      didReceiveUpdate = false;\n      if (!includesSomeLane(renderLanes, updateLanes)) {\n        // The pending lanes were cleared at the beginning of beginWork. We're\n        // about to bail out, but there might be other lanes that weren't\n        // included in the current render. Usually, the priority level of the\n        // remaining updates is accumlated during the evaluation of the\n        // component (i.e. when processing the update queue). But since since\n        // we're bailing out early *without* evaluating the component, we need\n        // to account for it here, too. Reset to the value of the current fiber.\n        // NOTE: This only applies to SimpleMemoComponent, not MemoComponent,\n        // because a MemoComponent fiber does not have hooks or an update queue;\n        // rather, it wraps around an inner component, which may or may not\n        // contains hooks.\n        // TODO: Move the reset at in beginWork out of the common path so that\n        // this is no longer necessary.\n        workInProgress.lanes = current.lanes;\n        return bailoutOnAlreadyFinishedWork(\n          current,\n          workInProgress,\n          renderLanes,\n        );\n      } else if ((current.flags & ForceUpdateForLegacySuspense) !== NoFlags) {\n        // This is a special case that only exists for legacy mode.\n        // See https://github.com/facebook/react/pull/19216.\n        didReceiveUpdate = true;\n      }\n    }\n  }\n  return updateFunctionComponent(\n    current,\n    workInProgress,\n    Component,\n    nextProps,\n    renderLanes,\n  );\n}\n\nfunction updateOffscreenComponent(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  renderLanes: Lanes,\n) {\n  const nextProps: OffscreenProps = workInProgress.pendingProps;\n  const nextChildren = nextProps.children;\n\n  const prevState: OffscreenState | null =\n    current !== null ? current.memoizedState : null;\n\n  if (\n    nextProps.mode === 'hidden' ||\n    nextProps.mode === 'unstable-defer-without-hiding'\n  ) {\n    if ((workInProgress.mode & ConcurrentMode) === NoMode) {\n      // In legacy sync mode, don't defer the subtree. Render it now.\n      // TODO: Figure out what we should do in Blocking mode.\n      const nextState: OffscreenState = {\n        baseLanes: NoLanes,\n      };\n      workInProgress.memoizedState = nextState;\n      pushRenderLanes(workInProgress, renderLanes);\n    } else if (!includesSomeLane(renderLanes, (OffscreenLane: Lane))) {\n      let nextBaseLanes;\n      if (prevState !== null) {\n        const prevBaseLanes = prevState.baseLanes;\n        nextBaseLanes = mergeLanes(prevBaseLanes, renderLanes);\n      } else {\n        nextBaseLanes = renderLanes;\n      }\n\n      // Schedule this fiber to re-render at offscreen priority. Then bailout.\n      if (enableSchedulerTracing) {\n        markSpawnedWork((OffscreenLane: Lane));\n      }\n      workInProgress.lanes = workInProgress.childLanes = laneToLanes(\n        OffscreenLane,\n      );\n      const nextState: OffscreenState = {\n        baseLanes: nextBaseLanes,\n      };\n      workInProgress.memoizedState = nextState;\n      // We're about to bail out, but we need to push this to the stack anyway\n      // to avoid a push/pop misalignment.\n      pushRenderLanes(workInProgress, nextBaseLanes);\n      return null;\n    } else {\n      // Rendering at offscreen, so we can clear the base lanes.\n      const nextState: OffscreenState = {\n        baseLanes: NoLanes,\n      };\n      workInProgress.memoizedState = nextState;\n      // Push the lanes that were skipped when we bailed out.\n      const subtreeRenderLanes =\n        prevState !== null ? prevState.baseLanes : renderLanes;\n      pushRenderLanes(workInProgress, subtreeRenderLanes);\n    }\n  } else {\n    let subtreeRenderLanes;\n    if (prevState !== null) {\n      subtreeRenderLanes = mergeLanes(prevState.baseLanes, renderLanes);\n      // Since we're not hidden anymore, reset the state\n      workInProgress.memoizedState = null;\n    } else {\n      // We weren't previously hidden, and we still aren't, so there's nothing\n      // special to do. Need to push to the stack regardless, though, to avoid\n      // a push/pop misalignment.\n      subtreeRenderLanes = renderLanes;\n    }\n    pushRenderLanes(workInProgress, subtreeRenderLanes);\n  }\n\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  return workInProgress.child;\n}\n\n// Note: These happen to have identical begin phases, for now. We shouldn't hold\n// ourselves to this constraint, though. If the behavior diverges, we should\n// fork the function.\nconst updateLegacyHiddenComponent = updateOffscreenComponent;\n\nfunction updateFragment(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  renderLanes: Lanes,\n) {\n  const nextChildren = workInProgress.pendingProps;\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  return workInProgress.child;\n}\n\nfunction updateMode(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  renderLanes: Lanes,\n) {\n  const nextChildren = workInProgress.pendingProps.children;\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  return workInProgress.child;\n}\n\nfunction updateProfiler(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  renderLanes: Lanes,\n) {\n  if (enableProfilerTimer) {\n    workInProgress.flags |= Update;\n\n    // Reset effect durations for the next eventual effect phase.\n    // These are reset during render to allow the DevTools commit hook a chance to read them,\n    const stateNode = workInProgress.stateNode;\n    stateNode.effectDuration = 0;\n    stateNode.passiveEffectDuration = 0;\n  }\n  const nextProps = workInProgress.pendingProps;\n  const nextChildren = nextProps.children;\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  return workInProgress.child;\n}\n\nfunction markRef(current: Fiber | null, workInProgress: Fiber) {\n  const ref = workInProgress.ref;\n  if (\n    (current === null && ref !== null) ||\n    (current !== null && current.ref !== ref)\n  ) {\n    // Schedule a Ref effect\n    workInProgress.flags |= Ref;\n  }\n}\n\nfunction updateFunctionComponent(\n  current,\n  workInProgress,\n  Component,\n  nextProps: any,\n  renderLanes,\n) {\n  if (__DEV__) {\n    if (workInProgress.type !== workInProgress.elementType) {\n      // Lazy component props can't be validated in createElement\n      // because they're only guaranteed to be resolved here.\n      const innerPropTypes = Component.propTypes;\n      if (innerPropTypes) {\n        checkPropTypes(\n          innerPropTypes,\n          nextProps, // Resolved props\n          'prop',\n          getComponentName(Component),\n        );\n      }\n    }\n  }\n\n  let context;\n  if (!disableLegacyContext) {\n    const unmaskedContext = getUnmaskedContext(workInProgress, Component, true);\n    context = getMaskedContext(workInProgress, unmaskedContext);\n  }\n\n  let nextChildren;\n  prepareToReadContext(workInProgress, renderLanes);\n  if (__DEV__) {\n    ReactCurrentOwner.current = workInProgress;\n    setIsRendering(true);\n    nextChildren = renderWithHooks(\n      current,\n      workInProgress,\n      Component,\n      nextProps,\n      context,\n      renderLanes,\n    );\n    if (\n      debugRenderPhaseSideEffectsForStrictMode &&\n      workInProgress.mode & StrictMode\n    ) {\n      disableLogs();\n      try {\n        nextChildren = renderWithHooks(\n          current,\n          workInProgress,\n          Component,\n          nextProps,\n          context,\n          renderLanes,\n        );\n      } finally {\n        reenableLogs();\n      }\n    }\n    setIsRendering(false);\n  } else {\n    nextChildren = renderWithHooks(\n      current,\n      workInProgress,\n      Component,\n      nextProps,\n      context,\n      renderLanes,\n    );\n  }\n\n  if (current !== null && !didReceiveUpdate) {\n    bailoutHooks(current, workInProgress, renderLanes);\n    return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n  }\n\n  // React DevTools reads this flag.\n  workInProgress.flags |= PerformedWork;\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  return workInProgress.child;\n}\n\nfunction updateBlock<Props, Data>(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  block: BlockComponent<Props, Data>,\n  nextProps: any,\n  renderLanes: Lanes,\n) {\n  // TODO: current can be non-null here even if the component\n  // hasn't yet mounted. This happens after the first render suspends.\n  // We'll need to figure out if this is fine or can cause issues.\n\n  const render = block._render;\n  const data = block._data;\n\n  // The rest is a fork of updateFunctionComponent\n  let nextChildren;\n  prepareToReadContext(workInProgress, renderLanes);\n  if (__DEV__) {\n    ReactCurrentOwner.current = workInProgress;\n    setIsRendering(true);\n    nextChildren = renderWithHooks(\n      current,\n      workInProgress,\n      render,\n      nextProps,\n      data,\n      renderLanes,\n    );\n    if (\n      debugRenderPhaseSideEffectsForStrictMode &&\n      workInProgress.mode & StrictMode\n    ) {\n      disableLogs();\n      try {\n        nextChildren = renderWithHooks(\n          current,\n          workInProgress,\n          render,\n          nextProps,\n          data,\n          renderLanes,\n        );\n      } finally {\n        reenableLogs();\n      }\n    }\n    setIsRendering(false);\n  } else {\n    nextChildren = renderWithHooks(\n      current,\n      workInProgress,\n      render,\n      nextProps,\n      data,\n      renderLanes,\n    );\n  }\n\n  if (current !== null && !didReceiveUpdate) {\n    bailoutHooks(current, workInProgress, renderLanes);\n    return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n  }\n\n  // React DevTools reads this flag.\n  workInProgress.flags |= PerformedWork;\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  return workInProgress.child;\n}\n\nfunction updateClassComponent(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  Component: any,\n  nextProps: any,\n  renderLanes: Lanes,\n) {\n  if (__DEV__) {\n    if (workInProgress.type !== workInProgress.elementType) {\n      // Lazy component props can't be validated in createElement\n      // because they're only guaranteed to be resolved here.\n      const innerPropTypes = Component.propTypes;\n      if (innerPropTypes) {\n        checkPropTypes(\n          innerPropTypes,\n          nextProps, // Resolved props\n          'prop',\n          getComponentName(Component),\n        );\n      }\n    }\n  }\n\n  // Push context providers early to prevent context stack mismatches.\n  // During mounting we don't know the child context yet as the instance doesn't exist.\n  // We will invalidate the child context in finishClassComponent() right after rendering.\n  let hasContext;\n  if (isLegacyContextProvider(Component)) {\n    hasContext = true;\n    pushLegacyContextProvider(workInProgress);\n  } else {\n    hasContext = false;\n  }\n  prepareToReadContext(workInProgress, renderLanes);\n\n  const instance = workInProgress.stateNode;\n  let shouldUpdate;\n  if (instance === null) {\n    if (current !== null) {\n      // A class component without an instance only mounts if it suspended\n      // inside a non-concurrent tree, in an inconsistent state. We want to\n      // treat it like a new mount, even though an empty version of it already\n      // committed. Disconnect the alternate pointers.\n      current.alternate = null;\n      workInProgress.alternate = null;\n      // Since this is conceptually a new fiber, schedule a Placement effect\n      workInProgress.flags |= Placement;\n    }\n    // In the initial pass we might need to construct the instance.\n    constructClassInstance(workInProgress, Component, nextProps);\n    mountClassInstance(workInProgress, Component, nextProps, renderLanes);\n    shouldUpdate = true;\n  } else if (current === null) {\n    // In a resume, we'll already have an instance we can reuse.\n    shouldUpdate = resumeMountClassInstance(\n      workInProgress,\n      Component,\n      nextProps,\n      renderLanes,\n    );\n  } else {\n    shouldUpdate = updateClassInstance(\n      current,\n      workInProgress,\n      Component,\n      nextProps,\n      renderLanes,\n    );\n  }\n  const nextUnitOfWork = finishClassComponent(\n    current,\n    workInProgress,\n    Component,\n    shouldUpdate,\n    hasContext,\n    renderLanes,\n  );\n  if (__DEV__) {\n    const inst = workInProgress.stateNode;\n    if (shouldUpdate && inst.props !== nextProps) {\n      if (!didWarnAboutReassigningProps) {\n        console.error(\n          'It looks like %s is reassigning its own `this.props` while rendering. ' +\n            'This is not supported and can lead to confusing bugs.',\n          getComponentName(workInProgress.type) || 'a component',\n        );\n      }\n      didWarnAboutReassigningProps = true;\n    }\n  }\n  return nextUnitOfWork;\n}\n\nfunction finishClassComponent(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  Component: any,\n  shouldUpdate: boolean,\n  hasContext: boolean,\n  renderLanes: Lanes,\n) {\n  // Refs should update even if shouldComponentUpdate returns false\n  markRef(current, workInProgress);\n\n  const didCaptureError = (workInProgress.flags & DidCapture) !== NoFlags;\n\n  if (!shouldUpdate && !didCaptureError) {\n    // Context providers should defer to sCU for rendering\n    if (hasContext) {\n      invalidateContextProvider(workInProgress, Component, false);\n    }\n\n    return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n  }\n\n  const instance = workInProgress.stateNode;\n\n  // Rerender\n  ReactCurrentOwner.current = workInProgress;\n  let nextChildren;\n  if (\n    didCaptureError &&\n    typeof Component.getDerivedStateFromError !== 'function'\n  ) {\n    // If we captured an error, but getDerivedStateFromError is not defined,\n    // unmount all the children. componentDidCatch will schedule an update to\n    // re-render a fallback. This is temporary until we migrate everyone to\n    // the new API.\n    // TODO: Warn in a future release.\n    nextChildren = null;\n\n    if (enableProfilerTimer) {\n      stopProfilerTimerIfRunning(workInProgress);\n    }\n  } else {\n    if (__DEV__) {\n      setIsRendering(true);\n      nextChildren = instance.render();\n      if (\n        debugRenderPhaseSideEffectsForStrictMode &&\n        workInProgress.mode & StrictMode\n      ) {\n        disableLogs();\n        try {\n          instance.render();\n        } finally {\n          reenableLogs();\n        }\n      }\n      setIsRendering(false);\n    } else {\n      nextChildren = instance.render();\n    }\n  }\n\n  // React DevTools reads this flag.\n  workInProgress.flags |= PerformedWork;\n  if (current !== null && didCaptureError) {\n    // If we're recovering from an error, reconcile without reusing any of\n    // the existing children. Conceptually, the normal children and the children\n    // that are shown on error are two different sets, so we shouldn't reuse\n    // normal children even if their identities match.\n    forceUnmountCurrentAndReconcile(\n      current,\n      workInProgress,\n      nextChildren,\n      renderLanes,\n    );\n  } else {\n    reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  }\n\n  // Memoize state using the values we just used to render.\n  // TODO: Restructure so we never read values from the instance.\n  workInProgress.memoizedState = instance.state;\n\n  // The context might have changed so we need to recalculate it.\n  if (hasContext) {\n    invalidateContextProvider(workInProgress, Component, true);\n  }\n\n  return workInProgress.child;\n}\n\nfunction pushHostRootContext(workInProgress) {\n  const root = (workInProgress.stateNode: FiberRoot);\n  if (root.pendingContext) {\n    pushTopLevelContextObject(\n      workInProgress,\n      root.pendingContext,\n      root.pendingContext !== root.context,\n    );\n  } else if (root.context) {\n    // Should always be set\n    pushTopLevelContextObject(workInProgress, root.context, false);\n  }\n  pushHostContainer(workInProgress, root.containerInfo);\n}\n\nfunction updateHostRoot(current, workInProgress, renderLanes) {\n  pushHostRootContext(workInProgress);\n  const updateQueue = workInProgress.updateQueue;\n  invariant(\n    current !== null && updateQueue !== null,\n    'If the root does not have an updateQueue, we should have already ' +\n      'bailed out. This error is likely caused by a bug in React. Please ' +\n      'file an issue.',\n  );\n  const nextProps = workInProgress.pendingProps;\n  const prevState = workInProgress.memoizedState;\n  const prevChildren = prevState !== null ? prevState.element : null;\n  cloneUpdateQueue(current, workInProgress);\n  processUpdateQueue(workInProgress, nextProps, null, renderLanes);\n  const nextState = workInProgress.memoizedState;\n  // Caution: React DevTools currently depends on this property\n  // being called \"element\".\n  const nextChildren = nextState.element;\n  if (nextChildren === prevChildren) {\n    resetHydrationState();\n    return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n  }\n  const root: FiberRoot = workInProgress.stateNode;\n  if (root.hydrate && enterHydrationState(workInProgress)) {\n    // If we don't have any current children this might be the first pass.\n    // We always try to hydrate. If this isn't a hydration pass there won't\n    // be any children to hydrate which is effectively the same thing as\n    // not hydrating.\n\n    if (supportsHydration) {\n      const mutableSourceEagerHydrationData =\n        root.mutableSourceEagerHydrationData;\n      if (mutableSourceEagerHydrationData != null) {\n        for (let i = 0; i < mutableSourceEagerHydrationData.length; i += 2) {\n          const mutableSource = ((mutableSourceEagerHydrationData[\n            i\n          ]: any): MutableSource<any>);\n          const version = mutableSourceEagerHydrationData[i + 1];\n          setWorkInProgressVersion(mutableSource, version);\n        }\n      }\n    }\n\n    const child = mountChildFibers(\n      workInProgress,\n      null,\n      nextChildren,\n      renderLanes,\n    );\n    workInProgress.child = child;\n\n    let node = child;\n    while (node) {\n      // Mark each child as hydrating. This is a fast path to know whether this\n      // tree is part of a hydrating tree. This is used to determine if a child\n      // node has fully mounted yet, and for scheduling event replaying.\n      // Conceptually this is similar to Placement in that a new subtree is\n      // inserted into the React tree here. It just happens to not need DOM\n      // mutations because it already exists.\n      node.flags = (node.flags & ~Placement) | Hydrating;\n      node = node.sibling;\n    }\n  } else {\n    // Otherwise reset hydration state in case we aborted and resumed another\n    // root.\n    reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n    resetHydrationState();\n  }\n  return workInProgress.child;\n}\n\nfunction updateHostComponent(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  renderLanes: Lanes,\n) {\n  pushHostContext(workInProgress);\n\n  if (current === null) {\n    tryToClaimNextHydratableInstance(workInProgress);\n  }\n\n  const type = workInProgress.type;\n  const nextProps = workInProgress.pendingProps;\n  const prevProps = current !== null ? current.memoizedProps : null;\n\n  let nextChildren = nextProps.children;\n  const isDirectTextChild = shouldSetTextContent(type, nextProps);\n\n  if (isDirectTextChild) {\n    // We special case a direct text child of a host node. This is a common\n    // case. We won't handle it as a reified child. We will instead handle\n    // this in the host environment that also has access to this prop. That\n    // avoids allocating another HostText fiber and traversing it.\n    nextChildren = null;\n  } else if (prevProps !== null && shouldSetTextContent(type, prevProps)) {\n    // If we're switching from a direct text child to a normal child, or to\n    // empty, we need to schedule the text content to be reset.\n    workInProgress.flags |= ContentReset;\n  }\n\n  markRef(current, workInProgress);\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  return workInProgress.child;\n}\n\nfunction updateHostText(current, workInProgress) {\n  if (current === null) {\n    tryToClaimNextHydratableInstance(workInProgress);\n  }\n  // Nothing to do here. This is terminal. We'll do the completion step\n  // immediately after.\n  return null;\n}\n\nfunction mountLazyComponent(\n  _current,\n  workInProgress,\n  elementType,\n  updateLanes,\n  renderLanes,\n) {\n  if (_current !== null) {\n    // A lazy component only mounts if it suspended inside a non-\n    // concurrent tree, in an inconsistent state. We want to treat it like\n    // a new mount, even though an empty version of it already committed.\n    // Disconnect the alternate pointers.\n    _current.alternate = null;\n    workInProgress.alternate = null;\n    // Since this is conceptually a new fiber, schedule a Placement effect\n    workInProgress.flags |= Placement;\n  }\n\n  const props = workInProgress.pendingProps;\n  const lazyComponent: LazyComponentType<any, any> = elementType;\n  const payload = lazyComponent._payload;\n  const init = lazyComponent._init;\n  let Component = init(payload);\n  // Store the unwrapped component in the type.\n  workInProgress.type = Component;\n  const resolvedTag = (workInProgress.tag = resolveLazyComponentTag(Component));\n  const resolvedProps = resolveDefaultProps(Component, props);\n  let child;\n  switch (resolvedTag) {\n    case FunctionComponent: {\n      if (__DEV__) {\n        validateFunctionComponentInDev(workInProgress, Component);\n        workInProgress.type = Component = resolveFunctionForHotReloading(\n          Component,\n        );\n      }\n      child = updateFunctionComponent(\n        null,\n        workInProgress,\n        Component,\n        resolvedProps,\n        renderLanes,\n      );\n      return child;\n    }\n    case ClassComponent: {\n      if (__DEV__) {\n        workInProgress.type = Component = resolveClassForHotReloading(\n          Component,\n        );\n      }\n      child = updateClassComponent(\n        null,\n        workInProgress,\n        Component,\n        resolvedProps,\n        renderLanes,\n      );\n      return child;\n    }\n    case ForwardRef: {\n      if (__DEV__) {\n        workInProgress.type = Component = resolveForwardRefForHotReloading(\n          Component,\n        );\n      }\n      child = updateForwardRef(\n        null,\n        workInProgress,\n        Component,\n        resolvedProps,\n        renderLanes,\n      );\n      return child;\n    }\n    case MemoComponent: {\n      if (__DEV__) {\n        if (workInProgress.type !== workInProgress.elementType) {\n          const outerPropTypes = Component.propTypes;\n          if (outerPropTypes) {\n            checkPropTypes(\n              outerPropTypes,\n              resolvedProps, // Resolved for outer only\n              'prop',\n              getComponentName(Component),\n            );\n          }\n        }\n      }\n      child = updateMemoComponent(\n        null,\n        workInProgress,\n        Component,\n        resolveDefaultProps(Component.type, resolvedProps), // The inner type can have defaults too\n        updateLanes,\n        renderLanes,\n      );\n      return child;\n    }\n    case Block: {\n      if (enableBlocksAPI) {\n        // TODO: Resolve for Hot Reloading.\n        child = updateBlock(\n          null,\n          workInProgress,\n          Component,\n          props,\n          renderLanes,\n        );\n        return child;\n      }\n      break;\n    }\n  }\n  let hint = '';\n  if (__DEV__) {\n    if (\n      Component !== null &&\n      typeof Component === 'object' &&\n      Component.$$typeof === REACT_LAZY_TYPE\n    ) {\n      hint = ' Did you wrap a component in React.lazy() more than once?';\n    }\n  }\n  // This message intentionally doesn't mention ForwardRef or MemoComponent\n  // because the fact that it's a separate type of work is an\n  // implementation detail.\n  invariant(\n    false,\n    'Element type is invalid. Received a promise that resolves to: %s. ' +\n      'Lazy element type must resolve to a class or function.%s',\n    Component,\n    hint,\n  );\n}\n\nfunction mountIncompleteClassComponent(\n  _current,\n  workInProgress,\n  Component,\n  nextProps,\n  renderLanes,\n) {\n  if (_current !== null) {\n    // An incomplete component only mounts if it suspended inside a non-\n    // concurrent tree, in an inconsistent state. We want to treat it like\n    // a new mount, even though an empty version of it already committed.\n    // Disconnect the alternate pointers.\n    _current.alternate = null;\n    workInProgress.alternate = null;\n    // Since this is conceptually a new fiber, schedule a Placement effect\n    workInProgress.flags |= Placement;\n  }\n\n  // Promote the fiber to a class and try rendering again.\n  workInProgress.tag = ClassComponent;\n\n  // The rest of this function is a fork of `updateClassComponent`\n\n  // Push context providers early to prevent context stack mismatches.\n  // During mounting we don't know the child context yet as the instance doesn't exist.\n  // We will invalidate the child context in finishClassComponent() right after rendering.\n  let hasContext;\n  if (isLegacyContextProvider(Component)) {\n    hasContext = true;\n    pushLegacyContextProvider(workInProgress);\n  } else {\n    hasContext = false;\n  }\n  prepareToReadContext(workInProgress, renderLanes);\n\n  constructClassInstance(workInProgress, Component, nextProps);\n  mountClassInstance(workInProgress, Component, nextProps, renderLanes);\n\n  return finishClassComponent(\n    null,\n    workInProgress,\n    Component,\n    true,\n    hasContext,\n    renderLanes,\n  );\n}\n\nfunction mountIndeterminateComponent(\n  _current,\n  workInProgress,\n  Component,\n  renderLanes,\n) {\n  if (_current !== null) {\n    // An indeterminate component only mounts if it suspended inside a non-\n    // concurrent tree, in an inconsistent state. We want to treat it like\n    // a new mount, even though an empty version of it already committed.\n    // Disconnect the alternate pointers.\n    _current.alternate = null;\n    workInProgress.alternate = null;\n    // Since this is conceptually a new fiber, schedule a Placement effect\n    workInProgress.flags |= Placement;\n  }\n\n  const props = workInProgress.pendingProps;\n  let context;\n  if (!disableLegacyContext) {\n    const unmaskedContext = getUnmaskedContext(\n      workInProgress,\n      Component,\n      false,\n    );\n    context = getMaskedContext(workInProgress, unmaskedContext);\n  }\n\n  prepareToReadContext(workInProgress, renderLanes);\n  let value;\n\n  if (__DEV__) {\n    if (\n      Component.prototype &&\n      typeof Component.prototype.render === 'function'\n    ) {\n      const componentName = getComponentName(Component) || 'Unknown';\n\n      if (!didWarnAboutBadClass[componentName]) {\n        console.error(\n          \"The <%s /> component appears to have a render method, but doesn't extend React.Component. \" +\n            'This is likely to cause errors. Change %s to extend React.Component instead.',\n          componentName,\n          componentName,\n        );\n        didWarnAboutBadClass[componentName] = true;\n      }\n    }\n\n    if (workInProgress.mode & StrictMode) {\n      ReactStrictModeWarnings.recordLegacyContextWarning(workInProgress, null);\n    }\n\n    setIsRendering(true);\n    ReactCurrentOwner.current = workInProgress;\n    value = renderWithHooks(\n      null,\n      workInProgress,\n      Component,\n      props,\n      context,\n      renderLanes,\n    );\n    setIsRendering(false);\n  } else {\n    value = renderWithHooks(\n      null,\n      workInProgress,\n      Component,\n      props,\n      context,\n      renderLanes,\n    );\n  }\n  // React DevTools reads this flag.\n  workInProgress.flags |= PerformedWork;\n\n  if (__DEV__) {\n    // Support for module components is deprecated and is removed behind a flag.\n    // Whether or not it would crash later, we want to show a good message in DEV first.\n    if (\n      typeof value === 'object' &&\n      value !== null &&\n      typeof value.render === 'function' &&\n      value.$$typeof === undefined\n    ) {\n      const componentName = getComponentName(Component) || 'Unknown';\n      if (!didWarnAboutModulePatternComponent[componentName]) {\n        console.error(\n          'The <%s /> component appears to be a function component that returns a class instance. ' +\n            'Change %s to a class that extends React.Component instead. ' +\n            \"If you can't use a class try assigning the prototype on the function as a workaround. \" +\n            \"`%s.prototype = React.Component.prototype`. Don't use an arrow function since it \" +\n            'cannot be called with `new` by React.',\n          componentName,\n          componentName,\n          componentName,\n        );\n        didWarnAboutModulePatternComponent[componentName] = true;\n      }\n    }\n  }\n\n  if (\n    // Run these checks in production only if the flag is off.\n    // Eventually we'll delete this branch altogether.\n    !disableModulePatternComponents &&\n    typeof value === 'object' &&\n    value !== null &&\n    typeof value.render === 'function' &&\n    value.$$typeof === undefined\n  ) {\n    if (__DEV__) {\n      const componentName = getComponentName(Component) || 'Unknown';\n      if (!didWarnAboutModulePatternComponent[componentName]) {\n        console.error(\n          'The <%s /> component appears to be a function component that returns a class instance. ' +\n            'Change %s to a class that extends React.Component instead. ' +\n            \"If you can't use a class try assigning the prototype on the function as a workaround. \" +\n            \"`%s.prototype = React.Component.prototype`. Don't use an arrow function since it \" +\n            'cannot be called with `new` by React.',\n          componentName,\n          componentName,\n          componentName,\n        );\n        didWarnAboutModulePatternComponent[componentName] = true;\n      }\n    }\n\n    // Proceed under the assumption that this is a class instance\n    workInProgress.tag = ClassComponent;\n\n    // Throw out any hooks that were used.\n    workInProgress.memoizedState = null;\n    workInProgress.updateQueue = null;\n\n    // Push context providers early to prevent context stack mismatches.\n    // During mounting we don't know the child context yet as the instance doesn't exist.\n    // We will invalidate the child context in finishClassComponent() right after rendering.\n    let hasContext = false;\n    if (isLegacyContextProvider(Component)) {\n      hasContext = true;\n      pushLegacyContextProvider(workInProgress);\n    } else {\n      hasContext = false;\n    }\n\n    workInProgress.memoizedState =\n      value.state !== null && value.state !== undefined ? value.state : null;\n\n    initializeUpdateQueue(workInProgress);\n\n    const getDerivedStateFromProps = Component.getDerivedStateFromProps;\n    if (typeof getDerivedStateFromProps === 'function') {\n      applyDerivedStateFromProps(\n        workInProgress,\n        Component,\n        getDerivedStateFromProps,\n        props,\n      );\n    }\n\n    adoptClassInstance(workInProgress, value);\n    mountClassInstance(workInProgress, Component, props, renderLanes);\n    return finishClassComponent(\n      null,\n      workInProgress,\n      Component,\n      true,\n      hasContext,\n      renderLanes,\n    );\n  } else {\n    // Proceed under the assumption that this is a function component\n    workInProgress.tag = FunctionComponent;\n    if (__DEV__) {\n      if (disableLegacyContext && Component.contextTypes) {\n        console.error(\n          '%s uses the legacy contextTypes API which is no longer supported. ' +\n            'Use React.createContext() with React.useContext() instead.',\n          getComponentName(Component) || 'Unknown',\n        );\n      }\n\n      if (\n        debugRenderPhaseSideEffectsForStrictMode &&\n        workInProgress.mode & StrictMode\n      ) {\n        disableLogs();\n        try {\n          value = renderWithHooks(\n            null,\n            workInProgress,\n            Component,\n            props,\n            context,\n            renderLanes,\n          );\n        } finally {\n          reenableLogs();\n        }\n      }\n    }\n    reconcileChildren(null, workInProgress, value, renderLanes);\n    if (__DEV__) {\n      validateFunctionComponentInDev(workInProgress, Component);\n    }\n    return workInProgress.child;\n  }\n}\n\nfunction validateFunctionComponentInDev(workInProgress: Fiber, Component: any) {\n  if (__DEV__) {\n    if (Component) {\n      if (Component.childContextTypes) {\n        console.error(\n          '%s(...): childContextTypes cannot be defined on a function component.',\n          Component.displayName || Component.name || 'Component',\n        );\n      }\n    }\n    if (workInProgress.ref !== null) {\n      let info = '';\n      const ownerName = getCurrentFiberOwnerNameInDevOrNull();\n      if (ownerName) {\n        info += '\\n\\nCheck the render method of `' + ownerName + '`.';\n      }\n\n      let warningKey = ownerName || workInProgress._debugID || '';\n      const debugSource = workInProgress._debugSource;\n      if (debugSource) {\n        warningKey = debugSource.fileName + ':' + debugSource.lineNumber;\n      }\n      if (!didWarnAboutFunctionRefs[warningKey]) {\n        didWarnAboutFunctionRefs[warningKey] = true;\n        console.error(\n          'Function components cannot be given refs. ' +\n            'Attempts to access this ref will fail. ' +\n            'Did you mean to use React.forwardRef()?%s',\n          info,\n        );\n      }\n    }\n\n    if (\n      warnAboutDefaultPropsOnFunctionComponents &&\n      Component.defaultProps !== undefined\n    ) {\n      const componentName = getComponentName(Component) || 'Unknown';\n\n      if (!didWarnAboutDefaultPropsOnFunctionComponent[componentName]) {\n        console.error(\n          '%s: Support for defaultProps will be removed from function components ' +\n            'in a future major release. Use JavaScript default parameters instead.',\n          componentName,\n        );\n        didWarnAboutDefaultPropsOnFunctionComponent[componentName] = true;\n      }\n    }\n\n    if (typeof Component.getDerivedStateFromProps === 'function') {\n      const componentName = getComponentName(Component) || 'Unknown';\n\n      if (!didWarnAboutGetDerivedStateOnFunctionComponent[componentName]) {\n        console.error(\n          '%s: Function components do not support getDerivedStateFromProps.',\n          componentName,\n        );\n        didWarnAboutGetDerivedStateOnFunctionComponent[componentName] = true;\n      }\n    }\n\n    if (\n      typeof Component.contextType === 'object' &&\n      Component.contextType !== null\n    ) {\n      const componentName = getComponentName(Component) || 'Unknown';\n\n      if (!didWarnAboutContextTypeOnFunctionComponent[componentName]) {\n        console.error(\n          '%s: Function components do not support contextType.',\n          componentName,\n        );\n        didWarnAboutContextTypeOnFunctionComponent[componentName] = true;\n      }\n    }\n  }\n}\n\nconst SUSPENDED_MARKER: SuspenseState = {\n  dehydrated: null,\n  retryLane: NoLane,\n};\n\nfunction mountSuspenseOffscreenState(renderLanes: Lanes): OffscreenState {\n  return {\n    baseLanes: renderLanes,\n  };\n}\n\nfunction updateSuspenseOffscreenState(\n  prevOffscreenState: OffscreenState,\n  renderLanes: Lanes,\n): OffscreenState {\n  return {\n    baseLanes: mergeLanes(prevOffscreenState.baseLanes, renderLanes),\n  };\n}\n\n// TODO: Probably should inline this back\nfunction shouldRemainOnFallback(\n  suspenseContext: SuspenseContext,\n  current: null | Fiber,\n  workInProgress: Fiber,\n  renderLanes: Lanes,\n) {\n  // If we're already showing a fallback, there are cases where we need to\n  // remain on that fallback regardless of whether the content has resolved.\n  // For example, SuspenseList coordinates when nested content appears.\n  if (current !== null) {\n    const suspenseState: SuspenseState = current.memoizedState;\n    if (suspenseState === null) {\n      // Currently showing content. Don't hide it, even if ForceSuspenseFallack\n      // is true. More precise name might be \"ForceRemainSuspenseFallback\".\n      // Note: This is a factoring smell. Can't remain on a fallback if there's\n      // no fallback to remain on.\n      return false;\n    }\n  }\n\n  // Not currently showing content. Consult the Suspense context.\n  return hasSuspenseContext(\n    suspenseContext,\n    (ForceSuspenseFallback: SuspenseContext),\n  );\n}\n\nfunction getRemainingWorkInPrimaryTree(current: Fiber, renderLanes) {\n  // TODO: Should not remove render lanes that were pinged during this render\n  return removeLanes(current.childLanes, renderLanes);\n}\n\nfunction updateSuspenseComponent(current, workInProgress, renderLanes) {\n  const nextProps = workInProgress.pendingProps;\n\n  // This is used by DevTools to force a boundary to suspend.\n  if (__DEV__) {\n    if (shouldSuspend(workInProgress)) {\n      workInProgress.flags |= DidCapture;\n    }\n  }\n\n  let suspenseContext: SuspenseContext = suspenseStackCursor.current;\n\n  let showFallback = false;\n  const didSuspend = (workInProgress.flags & DidCapture) !== NoFlags;\n\n  if (\n    didSuspend ||\n    shouldRemainOnFallback(\n      suspenseContext,\n      current,\n      workInProgress,\n      renderLanes,\n    )\n  ) {\n    // Something in this boundary's subtree already suspended. Switch to\n    // rendering the fallback children.\n    showFallback = true;\n    workInProgress.flags &= ~DidCapture;\n  } else {\n    // Attempting the main content\n    if (\n      current === null ||\n      (current.memoizedState: null | SuspenseState) !== null\n    ) {\n      // This is a new mount or this boundary is already showing a fallback state.\n      // Mark this subtree context as having at least one invisible parent that could\n      // handle the fallback state.\n      // Boundaries without fallbacks or should be avoided are not considered since\n      // they cannot handle preferred fallback states.\n      if (\n        nextProps.fallback !== undefined &&\n        nextProps.unstable_avoidThisFallback !== true\n      ) {\n        suspenseContext = addSubtreeSuspenseContext(\n          suspenseContext,\n          InvisibleParentSuspenseContext,\n        );\n      }\n    }\n  }\n\n  suspenseContext = setDefaultShallowSuspenseContext(suspenseContext);\n\n  pushSuspenseContext(workInProgress, suspenseContext);\n\n  // OK, the next part is confusing. We're about to reconcile the Suspense\n  // boundary's children. This involves some custom reconcilation logic. Two\n  // main reasons this is so complicated.\n  //\n  // First, Legacy Mode has different semantics for backwards compatibility. The\n  // primary tree will commit in an inconsistent state, so when we do the\n  // second pass to render the fallback, we do some exceedingly, uh, clever\n  // hacks to make that not totally break. Like transferring effects and\n  // deletions from hidden tree. In Concurrent Mode, it's much simpler,\n  // because we bailout on the primary tree completely and leave it in its old\n  // state, no effects. Same as what we do for Offscreen (except that\n  // Offscreen doesn't have the first render pass).\n  //\n  // Second is hydration. During hydration, the Suspense fiber has a slightly\n  // different layout, where the child points to a dehydrated fragment, which\n  // contains the DOM rendered by the server.\n  //\n  // Third, even if you set all that aside, Suspense is like error boundaries in\n  // that we first we try to render one tree, and if that fails, we render again\n  // and switch to a different tree. Like a try/catch block. So we have to track\n  // which branch we're currently rendering. Ideally we would model this using\n  // a stack.\n  if (current === null) {\n    // Initial mount\n    // If we're currently hydrating, try to hydrate this boundary.\n    // But only if this has a fallback.\n    if (nextProps.fallback !== undefined) {\n      tryToClaimNextHydratableInstance(workInProgress);\n      // This could've been a dehydrated suspense component.\n      if (enableSuspenseServerRenderer) {\n        const suspenseState: null | SuspenseState =\n          workInProgress.memoizedState;\n        if (suspenseState !== null) {\n          const dehydrated = suspenseState.dehydrated;\n          if (dehydrated !== null) {\n            return mountDehydratedSuspenseComponent(\n              workInProgress,\n              dehydrated,\n              renderLanes,\n            );\n          }\n        }\n      }\n    }\n\n    const nextPrimaryChildren = nextProps.children;\n    const nextFallbackChildren = nextProps.fallback;\n    if (showFallback) {\n      const fallbackFragment = mountSuspenseFallbackChildren(\n        workInProgress,\n        nextPrimaryChildren,\n        nextFallbackChildren,\n        renderLanes,\n      );\n      const primaryChildFragment: Fiber = (workInProgress.child: any);\n      primaryChildFragment.memoizedState = mountSuspenseOffscreenState(\n        renderLanes,\n      );\n      workInProgress.memoizedState = SUSPENDED_MARKER;\n      return fallbackFragment;\n    } else if (typeof nextProps.unstable_expectedLoadTime === 'number') {\n      // This is a CPU-bound tree. Skip this tree and show a placeholder to\n      // unblock the surrounding content. Then immediately retry after the\n      // initial commit.\n      const fallbackFragment = mountSuspenseFallbackChildren(\n        workInProgress,\n        nextPrimaryChildren,\n        nextFallbackChildren,\n        renderLanes,\n      );\n      const primaryChildFragment: Fiber = (workInProgress.child: any);\n      primaryChildFragment.memoizedState = mountSuspenseOffscreenState(\n        renderLanes,\n      );\n      workInProgress.memoizedState = SUSPENDED_MARKER;\n\n      // Since nothing actually suspended, there will nothing to ping this to\n      // get it started back up to attempt the next item. While in terms of\n      // priority this work has the same priority as this current render, it's\n      // not part of the same transition once the transition has committed. If\n      // it's sync, we still want to yield so that it can be painted.\n      // Conceptually, this is really the same as pinging. We can use any\n      // RetryLane even if it's the one currently rendering since we're leaving\n      // it behind on this node.\n      workInProgress.lanes = SomeRetryLane;\n      if (enableSchedulerTracing) {\n        markSpawnedWork(SomeRetryLane);\n      }\n      return fallbackFragment;\n    } else {\n      return mountSuspensePrimaryChildren(\n        workInProgress,\n        nextPrimaryChildren,\n        renderLanes,\n      );\n    }\n  } else {\n    // This is an update.\n\n    // If the current fiber has a SuspenseState, that means it's already showing\n    // a fallback.\n    const prevState: null | SuspenseState = current.memoizedState;\n    if (prevState !== null) {\n      // The current tree is already showing a fallback\n\n      // Special path for hydration\n      if (enableSuspenseServerRenderer) {\n        const dehydrated = prevState.dehydrated;\n        if (dehydrated !== null) {\n          if (!didSuspend) {\n            return updateDehydratedSuspenseComponent(\n              current,\n              workInProgress,\n              dehydrated,\n              prevState,\n              renderLanes,\n            );\n          } else if (\n            (workInProgress.memoizedState: null | SuspenseState) !== null\n          ) {\n            // Something suspended and we should still be in dehydrated mode.\n            // Leave the existing child in place.\n            workInProgress.child = current.child;\n            // The dehydrated completion pass expects this flag to be there\n            // but the normal suspense pass doesn't.\n            workInProgress.flags |= DidCapture;\n            return null;\n          } else {\n            // Suspended but we should no longer be in dehydrated mode.\n            // Therefore we now have to render the fallback.\n            const nextPrimaryChildren = nextProps.children;\n            const nextFallbackChildren = nextProps.fallback;\n            const fallbackChildFragment = mountSuspenseFallbackAfterRetryWithoutHydrating(\n              current,\n              workInProgress,\n              nextPrimaryChildren,\n              nextFallbackChildren,\n              renderLanes,\n            );\n            const primaryChildFragment: Fiber = (workInProgress.child: any);\n            primaryChildFragment.memoizedState = mountSuspenseOffscreenState(\n              renderLanes,\n            );\n            workInProgress.memoizedState = SUSPENDED_MARKER;\n            return fallbackChildFragment;\n          }\n        }\n      }\n\n      if (showFallback) {\n        const nextFallbackChildren = nextProps.fallback;\n        const nextPrimaryChildren = nextProps.children;\n        const fallbackChildFragment = updateSuspenseFallbackChildren(\n          current,\n          workInProgress,\n          nextPrimaryChildren,\n          nextFallbackChildren,\n          renderLanes,\n        );\n        const primaryChildFragment: Fiber = (workInProgress.child: any);\n        const prevOffscreenState: OffscreenState | null = (current.child: any)\n          .memoizedState;\n        primaryChildFragment.memoizedState =\n          prevOffscreenState === null\n            ? mountSuspenseOffscreenState(renderLanes)\n            : updateSuspenseOffscreenState(prevOffscreenState, renderLanes);\n        primaryChildFragment.childLanes = getRemainingWorkInPrimaryTree(\n          current,\n          renderLanes,\n        );\n        workInProgress.memoizedState = SUSPENDED_MARKER;\n        return fallbackChildFragment;\n      } else {\n        const nextPrimaryChildren = nextProps.children;\n        const primaryChildFragment = updateSuspensePrimaryChildren(\n          current,\n          workInProgress,\n          nextPrimaryChildren,\n          renderLanes,\n        );\n        workInProgress.memoizedState = null;\n        return primaryChildFragment;\n      }\n    } else {\n      // The current tree is not already showing a fallback.\n      if (showFallback) {\n        // Timed out.\n        const nextFallbackChildren = nextProps.fallback;\n        const nextPrimaryChildren = nextProps.children;\n        const fallbackChildFragment = updateSuspenseFallbackChildren(\n          current,\n          workInProgress,\n          nextPrimaryChildren,\n          nextFallbackChildren,\n          renderLanes,\n        );\n        const primaryChildFragment: Fiber = (workInProgress.child: any);\n        const prevOffscreenState: OffscreenState | null = (current.child: any)\n          .memoizedState;\n        primaryChildFragment.memoizedState =\n          prevOffscreenState === null\n            ? mountSuspenseOffscreenState(renderLanes)\n            : updateSuspenseOffscreenState(prevOffscreenState, renderLanes);\n        primaryChildFragment.childLanes = getRemainingWorkInPrimaryTree(\n          current,\n          renderLanes,\n        );\n        // Skip the primary children, and continue working on the\n        // fallback children.\n        workInProgress.memoizedState = SUSPENDED_MARKER;\n        return fallbackChildFragment;\n      } else {\n        // Still haven't timed out. Continue rendering the children, like we\n        // normally do.\n        const nextPrimaryChildren = nextProps.children;\n        const primaryChildFragment = updateSuspensePrimaryChildren(\n          current,\n          workInProgress,\n          nextPrimaryChildren,\n          renderLanes,\n        );\n        workInProgress.memoizedState = null;\n        return primaryChildFragment;\n      }\n    }\n  }\n}\n\nfunction mountSuspensePrimaryChildren(\n  workInProgress,\n  primaryChildren,\n  renderLanes,\n) {\n  const mode = workInProgress.mode;\n  const primaryChildProps: OffscreenProps = {\n    mode: 'visible',\n    children: primaryChildren,\n  };\n  const primaryChildFragment = createFiberFromOffscreen(\n    primaryChildProps,\n    mode,\n    renderLanes,\n    null,\n  );\n  primaryChildFragment.return = workInProgress;\n  workInProgress.child = primaryChildFragment;\n  return primaryChildFragment;\n}\n\nfunction mountSuspenseFallbackChildren(\n  workInProgress,\n  primaryChildren,\n  fallbackChildren,\n  renderLanes,\n) {\n  const mode = workInProgress.mode;\n  const progressedPrimaryFragment: Fiber | null = workInProgress.child;\n\n  const primaryChildProps: OffscreenProps = {\n    mode: 'hidden',\n    children: primaryChildren,\n  };\n\n  let primaryChildFragment;\n  let fallbackChildFragment;\n  if ((mode & BlockingMode) === NoMode && progressedPrimaryFragment !== null) {\n    // In legacy mode, we commit the primary tree as if it successfully\n    // completed, even though it's in an inconsistent state.\n    primaryChildFragment = progressedPrimaryFragment;\n    primaryChildFragment.childLanes = NoLanes;\n    primaryChildFragment.pendingProps = primaryChildProps;\n\n    if (enableProfilerTimer && workInProgress.mode & ProfileMode) {\n      // Reset the durations from the first pass so they aren't included in the\n      // final amounts. This seems counterintuitive, since we're intentionally\n      // not measuring part of the render phase, but this makes it match what we\n      // do in Concurrent Mode.\n      primaryChildFragment.actualDuration = 0;\n      primaryChildFragment.actualStartTime = -1;\n      primaryChildFragment.selfBaseDuration = 0;\n      primaryChildFragment.treeBaseDuration = 0;\n    }\n\n    fallbackChildFragment = createFiberFromFragment(\n      fallbackChildren,\n      mode,\n      renderLanes,\n      null,\n    );\n  } else {\n    primaryChildFragment = createFiberFromOffscreen(\n      primaryChildProps,\n      mode,\n      NoLanes,\n      null,\n    );\n    fallbackChildFragment = createFiberFromFragment(\n      fallbackChildren,\n      mode,\n      renderLanes,\n      null,\n    );\n  }\n\n  primaryChildFragment.return = workInProgress;\n  fallbackChildFragment.return = workInProgress;\n  primaryChildFragment.sibling = fallbackChildFragment;\n  workInProgress.child = primaryChildFragment;\n  return fallbackChildFragment;\n}\n\nfunction createWorkInProgressOffscreenFiber(\n  current: Fiber,\n  offscreenProps: OffscreenProps,\n) {\n  // The props argument to `createWorkInProgress` is `any` typed, so we use this\n  // wrapper function to constrain it.\n  return createWorkInProgress(current, offscreenProps);\n}\n\nfunction updateSuspensePrimaryChildren(\n  current,\n  workInProgress,\n  primaryChildren,\n  renderLanes,\n) {\n  const currentPrimaryChildFragment: Fiber = (current.child: any);\n  const currentFallbackChildFragment: Fiber | null =\n    currentPrimaryChildFragment.sibling;\n\n  const primaryChildFragment = createWorkInProgressOffscreenFiber(\n    currentPrimaryChildFragment,\n    {\n      mode: 'visible',\n      children: primaryChildren,\n    },\n  );\n  if ((workInProgress.mode & BlockingMode) === NoMode) {\n    primaryChildFragment.lanes = renderLanes;\n  }\n  primaryChildFragment.return = workInProgress;\n  primaryChildFragment.sibling = null;\n  if (currentFallbackChildFragment !== null) {\n    // Delete the fallback child fragment\n    currentFallbackChildFragment.nextEffect = null;\n    currentFallbackChildFragment.flags = Deletion;\n    workInProgress.firstEffect = workInProgress.lastEffect = currentFallbackChildFragment;\n  }\n\n  workInProgress.child = primaryChildFragment;\n  return primaryChildFragment;\n}\n\nfunction updateSuspenseFallbackChildren(\n  current,\n  workInProgress,\n  primaryChildren,\n  fallbackChildren,\n  renderLanes,\n) {\n  const mode = workInProgress.mode;\n  const currentPrimaryChildFragment: Fiber = (current.child: any);\n  const currentFallbackChildFragment: Fiber | null =\n    currentPrimaryChildFragment.sibling;\n\n  const primaryChildProps: OffscreenProps = {\n    mode: 'hidden',\n    children: primaryChildren,\n  };\n\n  let primaryChildFragment;\n  if (\n    // In legacy mode, we commit the primary tree as if it successfully\n    // completed, even though it's in an inconsistent state.\n    (mode & BlockingMode) === NoMode &&\n    // Make sure we're on the second pass, i.e. the primary child fragment was\n    // already cloned. In legacy mode, the only case where this isn't true is\n    // when DevTools forces us to display a fallback; we skip the first render\n    // pass entirely and go straight to rendering the fallback. (In Concurrent\n    // Mode, SuspenseList can also trigger this scenario, but this is a legacy-\n    // only codepath.)\n    workInProgress.child !== currentPrimaryChildFragment\n  ) {\n    const progressedPrimaryFragment: Fiber = (workInProgress.child: any);\n    primaryChildFragment = progressedPrimaryFragment;\n    primaryChildFragment.childLanes = NoLanes;\n    primaryChildFragment.pendingProps = primaryChildProps;\n\n    if (enableProfilerTimer && workInProgress.mode & ProfileMode) {\n      // Reset the durations from the first pass so they aren't included in the\n      // final amounts. This seems counterintuitive, since we're intentionally\n      // not measuring part of the render phase, but this makes it match what we\n      // do in Concurrent Mode.\n      primaryChildFragment.actualDuration = 0;\n      primaryChildFragment.actualStartTime = -1;\n      primaryChildFragment.selfBaseDuration =\n        currentPrimaryChildFragment.selfBaseDuration;\n      primaryChildFragment.treeBaseDuration =\n        currentPrimaryChildFragment.treeBaseDuration;\n    }\n\n    // The fallback fiber was added as a deletion effect during the first pass.\n    // However, since we're going to remain on the fallback, we no longer want\n    // to delete it. So we need to remove it from the list. Deletions are stored\n    // on the same list as effects. We want to keep the effects from the primary\n    // tree. So we copy the primary child fragment's effect list, which does not\n    // include the fallback deletion effect.\n    const progressedLastEffect = primaryChildFragment.lastEffect;\n    if (progressedLastEffect !== null) {\n      workInProgress.firstEffect = primaryChildFragment.firstEffect;\n      workInProgress.lastEffect = progressedLastEffect;\n      progressedLastEffect.nextEffect = null;\n    } else {\n      // TODO: Reset this somewhere else? Lol legacy mode is so weird.\n      workInProgress.firstEffect = workInProgress.lastEffect = null;\n    }\n  } else {\n    primaryChildFragment = createWorkInProgressOffscreenFiber(\n      currentPrimaryChildFragment,\n      primaryChildProps,\n    );\n  }\n  let fallbackChildFragment;\n  if (currentFallbackChildFragment !== null) {\n    fallbackChildFragment = createWorkInProgress(\n      currentFallbackChildFragment,\n      fallbackChildren,\n    );\n  } else {\n    fallbackChildFragment = createFiberFromFragment(\n      fallbackChildren,\n      mode,\n      renderLanes,\n      null,\n    );\n    // Needs a placement effect because the parent (the Suspense boundary) already\n    // mounted but this is a new fiber.\n    fallbackChildFragment.flags |= Placement;\n  }\n\n  fallbackChildFragment.return = workInProgress;\n  primaryChildFragment.return = workInProgress;\n  primaryChildFragment.sibling = fallbackChildFragment;\n  workInProgress.child = primaryChildFragment;\n\n  return fallbackChildFragment;\n}\n\nfunction retrySuspenseComponentWithoutHydrating(\n  current: Fiber,\n  workInProgress: Fiber,\n  renderLanes: Lanes,\n) {\n  // This will add the old fiber to the deletion list\n  reconcileChildFibers(workInProgress, current.child, null, renderLanes);\n\n  // We're now not suspended nor dehydrated.\n  const nextProps = workInProgress.pendingProps;\n  const primaryChildren = nextProps.children;\n  const primaryChildFragment = mountSuspensePrimaryChildren(\n    workInProgress,\n    primaryChildren,\n    renderLanes,\n  );\n  // Needs a placement effect because the parent (the Suspense boundary) already\n  // mounted but this is a new fiber.\n  primaryChildFragment.flags |= Placement;\n  workInProgress.memoizedState = null;\n\n  return primaryChildFragment;\n}\n\nfunction mountSuspenseFallbackAfterRetryWithoutHydrating(\n  current,\n  workInProgress,\n  primaryChildren,\n  fallbackChildren,\n  renderLanes,\n) {\n  const mode = workInProgress.mode;\n  const primaryChildFragment = createFiberFromOffscreen(\n    primaryChildren,\n    mode,\n    NoLanes,\n    null,\n  );\n  const fallbackChildFragment = createFiberFromFragment(\n    fallbackChildren,\n    mode,\n    renderLanes,\n    null,\n  );\n  // Needs a placement effect because the parent (the Suspense\n  // boundary) already mounted but this is a new fiber.\n  fallbackChildFragment.flags |= Placement;\n\n  primaryChildFragment.return = workInProgress;\n  fallbackChildFragment.return = workInProgress;\n  primaryChildFragment.sibling = fallbackChildFragment;\n  workInProgress.child = primaryChildFragment;\n\n  if ((workInProgress.mode & BlockingMode) !== NoMode) {\n    // We will have dropped the effect list which contains the\n    // deletion. We need to reconcile to delete the current child.\n    reconcileChildFibers(workInProgress, current.child, null, renderLanes);\n  }\n\n  return fallbackChildFragment;\n}\n\nfunction mountDehydratedSuspenseComponent(\n  workInProgress: Fiber,\n  suspenseInstance: SuspenseInstance,\n  renderLanes: Lanes,\n): null | Fiber {\n  // During the first pass, we'll bail out and not drill into the children.\n  // Instead, we'll leave the content in place and try to hydrate it later.\n  if ((workInProgress.mode & BlockingMode) === NoMode) {\n    if (__DEV__) {\n      console.error(\n        'Cannot hydrate Suspense in legacy mode. Switch from ' +\n          'ReactDOM.hydrate(element, container) to ' +\n          'ReactDOM.createBlockingRoot(container, { hydrate: true })' +\n          '.render(element) or remove the Suspense components from ' +\n          'the server rendered components.',\n      );\n    }\n    workInProgress.lanes = laneToLanes(SyncLane);\n  } else if (isSuspenseInstanceFallback(suspenseInstance)) {\n    // This is a client-only boundary. Since we won't get any content from the server\n    // for this, we need to schedule that at a higher priority based on when it would\n    // have timed out. In theory we could render it in this pass but it would have the\n    // wrong priority associated with it and will prevent hydration of parent path.\n    // Instead, we'll leave work left on it to render it in a separate commit.\n\n    // TODO This time should be the time at which the server rendered response that is\n    // a parent to this boundary was displayed. However, since we currently don't have\n    // a protocol to transfer that time, we'll just estimate it by using the current\n    // time. This will mean that Suspense timeouts are slightly shifted to later than\n    // they should be.\n    // Schedule a normal pri update to render this content.\n    if (enableSchedulerTracing) {\n      markSpawnedWork(DefaultHydrationLane);\n    }\n    workInProgress.lanes = laneToLanes(DefaultHydrationLane);\n  } else {\n    // We'll continue hydrating the rest at offscreen priority since we'll already\n    // be showing the right content coming from the server, it is no rush.\n    workInProgress.lanes = laneToLanes(OffscreenLane);\n    if (enableSchedulerTracing) {\n      markSpawnedWork(OffscreenLane);\n    }\n  }\n  return null;\n}\n\nfunction updateDehydratedSuspenseComponent(\n  current: Fiber,\n  workInProgress: Fiber,\n  suspenseInstance: SuspenseInstance,\n  suspenseState: SuspenseState,\n  renderLanes: Lanes,\n): null | Fiber {\n  // We should never be hydrating at this point because it is the first pass,\n  // but after we've already committed once.\n  warnIfHydrating();\n\n  if ((getExecutionContext() & RetryAfterError) !== NoContext) {\n    return retrySuspenseComponentWithoutHydrating(\n      current,\n      workInProgress,\n      renderLanes,\n    );\n  }\n\n  if ((workInProgress.mode & BlockingMode) === NoMode) {\n    return retrySuspenseComponentWithoutHydrating(\n      current,\n      workInProgress,\n      renderLanes,\n    );\n  }\n\n  if (isSuspenseInstanceFallback(suspenseInstance)) {\n    // This boundary is in a permanent fallback state. In this case, we'll never\n    // get an update and we'll never be able to hydrate the final content. Let's just try the\n    // client side render instead.\n    return retrySuspenseComponentWithoutHydrating(\n      current,\n      workInProgress,\n      renderLanes,\n    );\n  }\n  // We use lanes to indicate that a child might depend on context, so if\n  // any context has changed, we need to treat is as if the input might have changed.\n  const hasContextChanged = includesSomeLane(renderLanes, current.childLanes);\n  if (didReceiveUpdate || hasContextChanged) {\n    // This boundary has changed since the first render. This means that we are now unable to\n    // hydrate it. We might still be able to hydrate it using a higher priority lane.\n    const root = getWorkInProgressRoot();\n    if (root !== null) {\n      const attemptHydrationAtLane = getBumpedLaneForHydration(\n        root,\n        renderLanes,\n      );\n      if (\n        attemptHydrationAtLane !== NoLane &&\n        attemptHydrationAtLane !== suspenseState.retryLane\n      ) {\n        // Intentionally mutating since this render will get interrupted. This\n        // is one of the very rare times where we mutate the current tree\n        // during the render phase.\n        suspenseState.retryLane = attemptHydrationAtLane;\n        // TODO: Ideally this would inherit the event time of the current render\n        const eventTime = NoTimestamp;\n        scheduleUpdateOnFiber(current, attemptHydrationAtLane, eventTime);\n      } else {\n        // We have already tried to ping at a higher priority than we're rendering with\n        // so if we got here, we must have failed to hydrate at those levels. We must\n        // now give up. Instead, we're going to delete the whole subtree and instead inject\n        // a new real Suspense boundary to take its place, which may render content\n        // or fallback. This might suspend for a while and if it does we might still have\n        // an opportunity to hydrate before this pass commits.\n      }\n    }\n\n    // If we have scheduled higher pri work above, this will probably just abort the render\n    // since we now have higher priority work, but in case it doesn't, we need to prepare to\n    // render something, if we time out. Even if that requires us to delete everything and\n    // skip hydration.\n    // Delay having to do this as long as the suspense timeout allows us.\n    renderDidSuspendDelayIfPossible();\n    return retrySuspenseComponentWithoutHydrating(\n      current,\n      workInProgress,\n      renderLanes,\n    );\n  } else if (isSuspenseInstancePending(suspenseInstance)) {\n    // This component is still pending more data from the server, so we can't hydrate its\n    // content. We treat it as if this component suspended itself. It might seem as if\n    // we could just try to render it client-side instead. However, this will perform a\n    // lot of unnecessary work and is unlikely to complete since it often will suspend\n    // on missing data anyway. Additionally, the server might be able to render more\n    // than we can on the client yet. In that case we'd end up with more fallback states\n    // on the client than if we just leave it alone. If the server times out or errors\n    // these should update this boundary to the permanent Fallback state instead.\n    // Mark it as having captured (i.e. suspended).\n    workInProgress.flags |= DidCapture;\n    // Leave the child in place. I.e. the dehydrated fragment.\n    workInProgress.child = current.child;\n    // Register a callback to retry this boundary once the server has sent the result.\n    let retry = retryDehydratedSuspenseBoundary.bind(null, current);\n    if (enableSchedulerTracing) {\n      retry = Schedule_tracing_wrap(retry);\n    }\n    registerSuspenseInstanceRetry(suspenseInstance, retry);\n    return null;\n  } else {\n    // This is the first attempt.\n    reenterHydrationStateFromDehydratedSuspenseInstance(\n      workInProgress,\n      suspenseInstance,\n    );\n    const nextProps = workInProgress.pendingProps;\n    const primaryChildren = nextProps.children;\n    const primaryChildFragment = mountSuspensePrimaryChildren(\n      workInProgress,\n      primaryChildren,\n      renderLanes,\n    );\n    // Mark the children as hydrating. This is a fast path to know whether this\n    // tree is part of a hydrating tree. This is used to determine if a child\n    // node has fully mounted yet, and for scheduling event replaying.\n    // Conceptually this is similar to Placement in that a new subtree is\n    // inserted into the React tree here. It just happens to not need DOM\n    // mutations because it already exists.\n    primaryChildFragment.flags |= Hydrating;\n    return primaryChildFragment;\n  }\n}\n\nfunction scheduleWorkOnFiber(fiber: Fiber, renderLanes: Lanes) {\n  fiber.lanes = mergeLanes(fiber.lanes, renderLanes);\n  const alternate = fiber.alternate;\n  if (alternate !== null) {\n    alternate.lanes = mergeLanes(alternate.lanes, renderLanes);\n  }\n  scheduleWorkOnParentPath(fiber.return, renderLanes);\n}\n\nfunction propagateSuspenseContextChange(\n  workInProgress: Fiber,\n  firstChild: null | Fiber,\n  renderLanes: Lanes,\n): void {\n  // Mark any Suspense boundaries with fallbacks as having work to do.\n  // If they were previously forced into fallbacks, they may now be able\n  // to unblock.\n  let node = firstChild;\n  while (node !== null) {\n    if (node.tag === SuspenseComponent) {\n      const state: SuspenseState | null = node.memoizedState;\n      if (state !== null) {\n        scheduleWorkOnFiber(node, renderLanes);\n      }\n    } else if (node.tag === SuspenseListComponent) {\n      // If the tail is hidden there might not be an Suspense boundaries\n      // to schedule work on. In this case we have to schedule it on the\n      // list itself.\n      // We don't have to traverse to the children of the list since\n      // the list will propagate the change when it rerenders.\n      scheduleWorkOnFiber(node, renderLanes);\n    } else if (node.child !== null) {\n      node.child.return = node;\n      node = node.child;\n      continue;\n    }\n    if (node === workInProgress) {\n      return;\n    }\n    while (node.sibling === null) {\n      if (node.return === null || node.return === workInProgress) {\n        return;\n      }\n      node = node.return;\n    }\n    node.sibling.return = node.return;\n    node = node.sibling;\n  }\n}\n\nfunction findLastContentRow(firstChild: null | Fiber): null | Fiber {\n  // This is going to find the last row among these children that is already\n  // showing content on the screen, as opposed to being in fallback state or\n  // new. If a row has multiple Suspense boundaries, any of them being in the\n  // fallback state, counts as the whole row being in a fallback state.\n  // Note that the \"rows\" will be workInProgress, but any nested children\n  // will still be current since we haven't rendered them yet. The mounted\n  // order may not be the same as the new order. We use the new order.\n  let row = firstChild;\n  let lastContentRow: null | Fiber = null;\n  while (row !== null) {\n    const currentRow = row.alternate;\n    // New rows can't be content rows.\n    if (currentRow !== null && findFirstSuspended(currentRow) === null) {\n      lastContentRow = row;\n    }\n    row = row.sibling;\n  }\n  return lastContentRow;\n}\n\ntype SuspenseListRevealOrder = 'forwards' | 'backwards' | 'together' | void;\n\nfunction validateRevealOrder(revealOrder: SuspenseListRevealOrder) {\n  if (__DEV__) {\n    if (\n      revealOrder !== undefined &&\n      revealOrder !== 'forwards' &&\n      revealOrder !== 'backwards' &&\n      revealOrder !== 'together' &&\n      !didWarnAboutRevealOrder[revealOrder]\n    ) {\n      didWarnAboutRevealOrder[revealOrder] = true;\n      if (typeof revealOrder === 'string') {\n        switch (revealOrder.toLowerCase()) {\n          case 'together':\n          case 'forwards':\n          case 'backwards': {\n            console.error(\n              '\"%s\" is not a valid value for revealOrder on <SuspenseList />. ' +\n                'Use lowercase \"%s\" instead.',\n              revealOrder,\n              revealOrder.toLowerCase(),\n            );\n            break;\n          }\n          case 'forward':\n          case 'backward': {\n            console.error(\n              '\"%s\" is not a valid value for revealOrder on <SuspenseList />. ' +\n                'React uses the -s suffix in the spelling. Use \"%ss\" instead.',\n              revealOrder,\n              revealOrder.toLowerCase(),\n            );\n            break;\n          }\n          default:\n            console.error(\n              '\"%s\" is not a supported revealOrder on <SuspenseList />. ' +\n                'Did you mean \"together\", \"forwards\" or \"backwards\"?',\n              revealOrder,\n            );\n            break;\n        }\n      } else {\n        console.error(\n          '%s is not a supported value for revealOrder on <SuspenseList />. ' +\n            'Did you mean \"together\", \"forwards\" or \"backwards\"?',\n          revealOrder,\n        );\n      }\n    }\n  }\n}\n\nfunction validateTailOptions(\n  tailMode: SuspenseListTailMode,\n  revealOrder: SuspenseListRevealOrder,\n) {\n  if (__DEV__) {\n    if (tailMode !== undefined && !didWarnAboutTailOptions[tailMode]) {\n      if (tailMode !== 'collapsed' && tailMode !== 'hidden') {\n        didWarnAboutTailOptions[tailMode] = true;\n        console.error(\n          '\"%s\" is not a supported value for tail on <SuspenseList />. ' +\n            'Did you mean \"collapsed\" or \"hidden\"?',\n          tailMode,\n        );\n      } else if (revealOrder !== 'forwards' && revealOrder !== 'backwards') {\n        didWarnAboutTailOptions[tailMode] = true;\n        console.error(\n          '<SuspenseList tail=\"%s\" /> is only valid if revealOrder is ' +\n            '\"forwards\" or \"backwards\". ' +\n            'Did you mean to specify revealOrder=\"forwards\"?',\n          tailMode,\n        );\n      }\n    }\n  }\n}\n\nfunction validateSuspenseListNestedChild(childSlot: mixed, index: number) {\n  if (__DEV__) {\n    const isArray = Array.isArray(childSlot);\n    const isIterable =\n      !isArray && typeof getIteratorFn(childSlot) === 'function';\n    if (isArray || isIterable) {\n      const type = isArray ? 'array' : 'iterable';\n      console.error(\n        'A nested %s was passed to row #%s in <SuspenseList />. Wrap it in ' +\n          'an additional SuspenseList to configure its revealOrder: ' +\n          '<SuspenseList revealOrder=...> ... ' +\n          '<SuspenseList revealOrder=...>{%s}</SuspenseList> ... ' +\n          '</SuspenseList>',\n        type,\n        index,\n        type,\n      );\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction validateSuspenseListChildren(\n  children: mixed,\n  revealOrder: SuspenseListRevealOrder,\n) {\n  if (__DEV__) {\n    if (\n      (revealOrder === 'forwards' || revealOrder === 'backwards') &&\n      children !== undefined &&\n      children !== null &&\n      children !== false\n    ) {\n      if (Array.isArray(children)) {\n        for (let i = 0; i < children.length; i++) {\n          if (!validateSuspenseListNestedChild(children[i], i)) {\n            return;\n          }\n        }\n      } else {\n        const iteratorFn = getIteratorFn(children);\n        if (typeof iteratorFn === 'function') {\n          const childrenIterator = iteratorFn.call(children);\n          if (childrenIterator) {\n            let step = childrenIterator.next();\n            let i = 0;\n            for (; !step.done; step = childrenIterator.next()) {\n              if (!validateSuspenseListNestedChild(step.value, i)) {\n                return;\n              }\n              i++;\n            }\n          }\n        } else {\n          console.error(\n            'A single row was passed to a <SuspenseList revealOrder=\"%s\" />. ' +\n              'This is not useful since it needs multiple rows. ' +\n              'Did you mean to pass multiple children or an array?',\n            revealOrder,\n          );\n        }\n      }\n    }\n  }\n}\n\nfunction initSuspenseListRenderState(\n  workInProgress: Fiber,\n  isBackwards: boolean,\n  tail: null | Fiber,\n  lastContentRow: null | Fiber,\n  tailMode: SuspenseListTailMode,\n  lastEffectBeforeRendering: null | Fiber,\n): void {\n  const renderState: null | SuspenseListRenderState =\n    workInProgress.memoizedState;\n  if (renderState === null) {\n    workInProgress.memoizedState = ({\n      isBackwards: isBackwards,\n      rendering: null,\n      renderingStartTime: 0,\n      last: lastContentRow,\n      tail: tail,\n      tailMode: tailMode,\n      lastEffect: lastEffectBeforeRendering,\n    }: SuspenseListRenderState);\n  } else {\n    // We can reuse the existing object from previous renders.\n    renderState.isBackwards = isBackwards;\n    renderState.rendering = null;\n    renderState.renderingStartTime = 0;\n    renderState.last = lastContentRow;\n    renderState.tail = tail;\n    renderState.tailMode = tailMode;\n    renderState.lastEffect = lastEffectBeforeRendering;\n  }\n}\n\n// This can end up rendering this component multiple passes.\n// The first pass splits the children fibers into two sets. A head and tail.\n// We first render the head. If anything is in fallback state, we do another\n// pass through beginWork to rerender all children (including the tail) with\n// the force suspend context. If the first render didn't have anything in\n// in fallback state. Then we render each row in the tail one-by-one.\n// That happens in the completeWork phase without going back to beginWork.\nfunction updateSuspenseListComponent(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  renderLanes: Lanes,\n) {\n  const nextProps = workInProgress.pendingProps;\n  const revealOrder: SuspenseListRevealOrder = nextProps.revealOrder;\n  const tailMode: SuspenseListTailMode = nextProps.tail;\n  const newChildren = nextProps.children;\n\n  validateRevealOrder(revealOrder);\n  validateTailOptions(tailMode, revealOrder);\n  validateSuspenseListChildren(newChildren, revealOrder);\n\n  reconcileChildren(current, workInProgress, newChildren, renderLanes);\n\n  let suspenseContext: SuspenseContext = suspenseStackCursor.current;\n\n  const shouldForceFallback = hasSuspenseContext(\n    suspenseContext,\n    (ForceSuspenseFallback: SuspenseContext),\n  );\n  if (shouldForceFallback) {\n    suspenseContext = setShallowSuspenseContext(\n      suspenseContext,\n      ForceSuspenseFallback,\n    );\n    workInProgress.flags |= DidCapture;\n  } else {\n    const didSuspendBefore =\n      current !== null && (current.flags & DidCapture) !== NoFlags;\n    if (didSuspendBefore) {\n      // If we previously forced a fallback, we need to schedule work\n      // on any nested boundaries to let them know to try to render\n      // again. This is the same as context updating.\n      propagateSuspenseContextChange(\n        workInProgress,\n        workInProgress.child,\n        renderLanes,\n      );\n    }\n    suspenseContext = setDefaultShallowSuspenseContext(suspenseContext);\n  }\n  pushSuspenseContext(workInProgress, suspenseContext);\n\n  if ((workInProgress.mode & BlockingMode) === NoMode) {\n    // In legacy mode, SuspenseList doesn't work so we just\n    // use make it a noop by treating it as the default revealOrder.\n    workInProgress.memoizedState = null;\n  } else {\n    switch (revealOrder) {\n      case 'forwards': {\n        const lastContentRow = findLastContentRow(workInProgress.child);\n        let tail;\n        if (lastContentRow === null) {\n          // The whole list is part of the tail.\n          // TODO: We could fast path by just rendering the tail now.\n          tail = workInProgress.child;\n          workInProgress.child = null;\n        } else {\n          // Disconnect the tail rows after the content row.\n          // We're going to render them separately later.\n          tail = lastContentRow.sibling;\n          lastContentRow.sibling = null;\n        }\n        initSuspenseListRenderState(\n          workInProgress,\n          false, // isBackwards\n          tail,\n          lastContentRow,\n          tailMode,\n          workInProgress.lastEffect,\n        );\n        break;\n      }\n      case 'backwards': {\n        // We're going to find the first row that has existing content.\n        // At the same time we're going to reverse the list of everything\n        // we pass in the meantime. That's going to be our tail in reverse\n        // order.\n        let tail = null;\n        let row = workInProgress.child;\n        workInProgress.child = null;\n        while (row !== null) {\n          const currentRow = row.alternate;\n          // New rows can't be content rows.\n          if (currentRow !== null && findFirstSuspended(currentRow) === null) {\n            // This is the beginning of the main content.\n            workInProgress.child = row;\n            break;\n          }\n          const nextRow = row.sibling;\n          row.sibling = tail;\n          tail = row;\n          row = nextRow;\n        }\n        // TODO: If workInProgress.child is null, we can continue on the tail immediately.\n        initSuspenseListRenderState(\n          workInProgress,\n          true, // isBackwards\n          tail,\n          null, // last\n          tailMode,\n          workInProgress.lastEffect,\n        );\n        break;\n      }\n      case 'together': {\n        initSuspenseListRenderState(\n          workInProgress,\n          false, // isBackwards\n          null, // tail\n          null, // last\n          undefined,\n          workInProgress.lastEffect,\n        );\n        break;\n      }\n      default: {\n        // The default reveal order is the same as not having\n        // a boundary.\n        workInProgress.memoizedState = null;\n      }\n    }\n  }\n  return workInProgress.child;\n}\n\nfunction updatePortalComponent(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  renderLanes: Lanes,\n) {\n  pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);\n  const nextChildren = workInProgress.pendingProps;\n  if (current === null) {\n    // Portals are special because we don't append the children during mount\n    // but at commit. Therefore we need to track insertions which the normal\n    // flow doesn't do during mount. This doesn't happen at the root because\n    // the root always starts with a \"current\" with a null child.\n    // TODO: Consider unifying this with how the root works.\n    workInProgress.child = reconcileChildFibers(\n      workInProgress,\n      null,\n      nextChildren,\n      renderLanes,\n    );\n  } else {\n    reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  }\n  return workInProgress.child;\n}\n\nlet hasWarnedAboutUsingNoValuePropOnContextProvider = false;\n\nfunction updateContextProvider(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  renderLanes: Lanes,\n) {\n  const providerType: ReactProviderType<any> = workInProgress.type;\n  const context: ReactContext<any> = providerType._context;\n\n  const newProps = workInProgress.pendingProps;\n  const oldProps = workInProgress.memoizedProps;\n\n  const newValue = newProps.value;\n\n  if (__DEV__) {\n    if (!('value' in newProps)) {\n      if (!hasWarnedAboutUsingNoValuePropOnContextProvider) {\n        hasWarnedAboutUsingNoValuePropOnContextProvider = true;\n        console.error(\n          'The `value` prop is required for the `<Context.Provider>`. Did you misspell it or forget to pass it?',\n        );\n      }\n    }\n    const providerPropTypes = workInProgress.type.propTypes;\n\n    if (providerPropTypes) {\n      checkPropTypes(providerPropTypes, newProps, 'prop', 'Context.Provider');\n    }\n  }\n\n  pushProvider(workInProgress, newValue);\n\n  if (oldProps !== null) {\n    const oldValue = oldProps.value;\n    const changedBits = calculateChangedBits(context, newValue, oldValue);\n    if (changedBits === 0) {\n      // No change. Bailout early if children are the same.\n      if (\n        oldProps.children === newProps.children &&\n        !hasLegacyContextChanged()\n      ) {\n        return bailoutOnAlreadyFinishedWork(\n          current,\n          workInProgress,\n          renderLanes,\n        );\n      }\n    } else {\n      // The context value changed. Search for matching consumers and schedule\n      // them to update.\n      propagateContextChange(workInProgress, context, changedBits, renderLanes);\n    }\n  }\n\n  const newChildren = newProps.children;\n  reconcileChildren(current, workInProgress, newChildren, renderLanes);\n  return workInProgress.child;\n}\n\nlet hasWarnedAboutUsingContextAsConsumer = false;\n\nfunction updateContextConsumer(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  renderLanes: Lanes,\n) {\n  let context: ReactContext<any> = workInProgress.type;\n  // The logic below for Context differs depending on PROD or DEV mode. In\n  // DEV mode, we create a separate object for Context.Consumer that acts\n  // like a proxy to Context. This proxy object adds unnecessary code in PROD\n  // so we use the old behaviour (Context.Consumer references Context) to\n  // reduce size and overhead. The separate object references context via\n  // a property called \"_context\", which also gives us the ability to check\n  // in DEV mode if this property exists or not and warn if it does not.\n  if (__DEV__) {\n    if ((context: any)._context === undefined) {\n      // This may be because it's a Context (rather than a Consumer).\n      // Or it may be because it's older React where they're the same thing.\n      // We only want to warn if we're sure it's a new React.\n      if (context !== context.Consumer) {\n        if (!hasWarnedAboutUsingContextAsConsumer) {\n          hasWarnedAboutUsingContextAsConsumer = true;\n          console.error(\n            'Rendering <Context> directly is not supported and will be removed in ' +\n              'a future major release. Did you mean to render <Context.Consumer> instead?',\n          );\n        }\n      }\n    } else {\n      context = (context: any)._context;\n    }\n  }\n  const newProps = workInProgress.pendingProps;\n  const render = newProps.children;\n\n  if (__DEV__) {\n    if (typeof render !== 'function') {\n      console.error(\n        'A context consumer was rendered with multiple children, or a child ' +\n          \"that isn't a function. A context consumer expects a single child \" +\n          'that is a function. If you did pass a function, make sure there ' +\n          'is no trailing or leading whitespace around it.',\n      );\n    }\n  }\n\n  prepareToReadContext(workInProgress, renderLanes);\n  const newValue = readContext(context, newProps.unstable_observedBits);\n  let newChildren;\n  if (__DEV__) {\n    ReactCurrentOwner.current = workInProgress;\n    setIsRendering(true);\n    newChildren = render(newValue);\n    setIsRendering(false);\n  } else {\n    newChildren = render(newValue);\n  }\n\n  // React DevTools reads this flag.\n  workInProgress.flags |= PerformedWork;\n  reconcileChildren(current, workInProgress, newChildren, renderLanes);\n  return workInProgress.child;\n}\n\nfunction updateFundamentalComponent(current, workInProgress, renderLanes) {\n  const fundamentalImpl = workInProgress.type.impl;\n  if (fundamentalImpl.reconcileChildren === false) {\n    return null;\n  }\n  const nextProps = workInProgress.pendingProps;\n  const nextChildren = nextProps.children;\n\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  return workInProgress.child;\n}\n\nfunction updateScopeComponent(current, workInProgress, renderLanes) {\n  const nextProps = workInProgress.pendingProps;\n  const nextChildren = nextProps.children;\n\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  return workInProgress.child;\n}\n\nexport function markWorkInProgressReceivedUpdate() {\n  didReceiveUpdate = true;\n}\n\nfunction bailoutOnAlreadyFinishedWork(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  renderLanes: Lanes,\n): Fiber | null {\n  if (current !== null) {\n    // Reuse previous dependencies\n    workInProgress.dependencies = current.dependencies;\n  }\n\n  if (enableProfilerTimer) {\n    // Don't update \"base\" render times for bailouts.\n    stopProfilerTimerIfRunning(workInProgress);\n  }\n\n  markSkippedUpdateLanes(workInProgress.lanes);\n\n  // Check if the children have any pending work.\n  if (!includesSomeLane(renderLanes, workInProgress.childLanes)) {\n    // The children don't have any work either. We can skip them.\n    // TODO: Once we add back resuming, we should check if the children are\n    // a work-in-progress set. If so, we need to transfer their effects.\n    return null;\n  } else {\n    // This fiber doesn't have work, but its subtree does. Clone the child\n    // fibers and continue.\n    cloneChildFibers(current, workInProgress);\n    return workInProgress.child;\n  }\n}\n\nfunction remountFiber(\n  current: Fiber,\n  oldWorkInProgress: Fiber,\n  newWorkInProgress: Fiber,\n): Fiber | null {\n  if (__DEV__) {\n    const returnFiber = oldWorkInProgress.return;\n    if (returnFiber === null) {\n      throw new Error('Cannot swap the root fiber.');\n    }\n\n    // Disconnect from the old current.\n    // It will get deleted.\n    current.alternate = null;\n    oldWorkInProgress.alternate = null;\n\n    // Connect to the new tree.\n    newWorkInProgress.index = oldWorkInProgress.index;\n    newWorkInProgress.sibling = oldWorkInProgress.sibling;\n    newWorkInProgress.return = oldWorkInProgress.return;\n    newWorkInProgress.ref = oldWorkInProgress.ref;\n\n    // Replace the child/sibling pointers above it.\n    if (oldWorkInProgress === returnFiber.child) {\n      returnFiber.child = newWorkInProgress;\n    } else {\n      let prevSibling = returnFiber.child;\n      if (prevSibling === null) {\n        throw new Error('Expected parent to have a child.');\n      }\n      while (prevSibling.sibling !== oldWorkInProgress) {\n        prevSibling = prevSibling.sibling;\n        if (prevSibling === null) {\n          throw new Error('Expected to find the previous sibling.');\n        }\n      }\n      prevSibling.sibling = newWorkInProgress;\n    }\n\n    // Delete the old fiber and place the new one.\n    // Since the old fiber is disconnected, we have to schedule it manually.\n    const last = returnFiber.lastEffect;\n    if (last !== null) {\n      last.nextEffect = current;\n      returnFiber.lastEffect = current;\n    } else {\n      returnFiber.firstEffect = returnFiber.lastEffect = current;\n    }\n    current.nextEffect = null;\n    current.flags = Deletion;\n\n    newWorkInProgress.flags |= Placement;\n\n    // Restart work from the new fiber.\n    return newWorkInProgress;\n  } else {\n    throw new Error(\n      'Did not expect this call in production. ' +\n        'This is a bug in React. Please file an issue.',\n    );\n  }\n}\n\nfunction beginWork(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  renderLanes: Lanes,\n): Fiber | null {\n  const updateLanes = workInProgress.lanes;\n\n  if (__DEV__) {\n    if (workInProgress._debugNeedsRemount && current !== null) {\n      // This will restart the begin phase with a new fiber.\n      return remountFiber(\n        current,\n        workInProgress,\n        createFiberFromTypeAndProps(\n          workInProgress.type,\n          workInProgress.key,\n          workInProgress.pendingProps,\n          workInProgress._debugOwner || null,\n          workInProgress.mode,\n          workInProgress.lanes,\n        ),\n      );\n    }\n  }\n\n  if (current !== null) {\n    const oldProps = current.memoizedProps;\n    const newProps = workInProgress.pendingProps;\n\n    if (\n      oldProps !== newProps ||\n      hasLegacyContextChanged() ||\n      // Force a re-render if the implementation changed due to hot reload:\n      (__DEV__ ? workInProgress.type !== current.type : false)\n    ) {\n      // If props or context changed, mark the fiber as having performed work.\n      // This may be unset if the props are determined to be equal later (memo).\n      didReceiveUpdate = true;\n    } else if (!includesSomeLane(renderLanes, updateLanes)) {\n      didReceiveUpdate = false;\n      // This fiber does not have any pending work. Bailout without entering\n      // the begin phase. There's still some bookkeeping we that needs to be done\n      // in this optimized path, mostly pushing stuff onto the stack.\n      switch (workInProgress.tag) {\n        case HostRoot:\n          pushHostRootContext(workInProgress);\n          resetHydrationState();\n          break;\n        case HostComponent:\n          pushHostContext(workInProgress);\n          break;\n        case ClassComponent: {\n          const Component = workInProgress.type;\n          if (isLegacyContextProvider(Component)) {\n            pushLegacyContextProvider(workInProgress);\n          }\n          break;\n        }\n        case HostPortal:\n          pushHostContainer(\n            workInProgress,\n            workInProgress.stateNode.containerInfo,\n          );\n          break;\n        case ContextProvider: {\n          const newValue = workInProgress.memoizedProps.value;\n          pushProvider(workInProgress, newValue);\n          break;\n        }\n        case Profiler:\n          if (enableProfilerTimer) {\n            // Profiler should only call onRender when one of its descendants actually rendered.\n            const hasChildWork = includesSomeLane(\n              renderLanes,\n              workInProgress.childLanes,\n            );\n            if (hasChildWork) {\n              workInProgress.flags |= Update;\n            }\n\n            // Reset effect durations for the next eventual effect phase.\n            // These are reset during render to allow the DevTools commit hook a chance to read them,\n            const stateNode = workInProgress.stateNode;\n            stateNode.effectDuration = 0;\n            stateNode.passiveEffectDuration = 0;\n          }\n          break;\n        case SuspenseComponent: {\n          const state: SuspenseState | null = workInProgress.memoizedState;\n          if (state !== null) {\n            if (enableSuspenseServerRenderer) {\n              if (state.dehydrated !== null) {\n                pushSuspenseContext(\n                  workInProgress,\n                  setDefaultShallowSuspenseContext(suspenseStackCursor.current),\n                );\n                // We know that this component will suspend again because if it has\n                // been unsuspended it has committed as a resolved Suspense component.\n                // If it needs to be retried, it should have work scheduled on it.\n                workInProgress.flags |= DidCapture;\n                // We should never render the children of a dehydrated boundary until we\n                // upgrade it. We return null instead of bailoutOnAlreadyFinishedWork.\n                return null;\n              }\n            }\n\n            // If this boundary is currently timed out, we need to decide\n            // whether to retry the primary children, or to skip over it and\n            // go straight to the fallback. Check the priority of the primary\n            // child fragment.\n            const primaryChildFragment: Fiber = (workInProgress.child: any);\n            const primaryChildLanes = primaryChildFragment.childLanes;\n            if (includesSomeLane(renderLanes, primaryChildLanes)) {\n              // The primary children have pending work. Use the normal path\n              // to attempt to render the primary children again.\n              return updateSuspenseComponent(\n                current,\n                workInProgress,\n                renderLanes,\n              );\n            } else {\n              // The primary child fragment does not have pending work marked\n              // on it\n              pushSuspenseContext(\n                workInProgress,\n                setDefaultShallowSuspenseContext(suspenseStackCursor.current),\n              );\n              // The primary children do not have pending work with sufficient\n              // priority. Bailout.\n              const child = bailoutOnAlreadyFinishedWork(\n                current,\n                workInProgress,\n                renderLanes,\n              );\n              if (child !== null) {\n                // The fallback children have pending work. Skip over the\n                // primary children and work on the fallback.\n                return child.sibling;\n              } else {\n                return null;\n              }\n            }\n          } else {\n            pushSuspenseContext(\n              workInProgress,\n              setDefaultShallowSuspenseContext(suspenseStackCursor.current),\n            );\n          }\n          break;\n        }\n        case SuspenseListComponent: {\n          const didSuspendBefore = (current.flags & DidCapture) !== NoFlags;\n\n          const hasChildWork = includesSomeLane(\n            renderLanes,\n            workInProgress.childLanes,\n          );\n\n          if (didSuspendBefore) {\n            if (hasChildWork) {\n              // If something was in fallback state last time, and we have all the\n              // same children then we're still in progressive loading state.\n              // Something might get unblocked by state updates or retries in the\n              // tree which will affect the tail. So we need to use the normal\n              // path to compute the correct tail.\n              return updateSuspenseListComponent(\n                current,\n                workInProgress,\n                renderLanes,\n              );\n            }\n            // If none of the children had any work, that means that none of\n            // them got retried so they'll still be blocked in the same way\n            // as before. We can fast bail out.\n            workInProgress.flags |= DidCapture;\n          }\n\n          // If nothing suspended before and we're rendering the same children,\n          // then the tail doesn't matter. Anything new that suspends will work\n          // in the \"together\" mode, so we can continue from the state we had.\n          const renderState = workInProgress.memoizedState;\n          if (renderState !== null) {\n            // Reset to the \"together\" mode in case we've started a different\n            // update in the past but didn't complete it.\n            renderState.rendering = null;\n            renderState.tail = null;\n            renderState.lastEffect = null;\n          }\n          pushSuspenseContext(workInProgress, suspenseStackCursor.current);\n\n          if (hasChildWork) {\n            break;\n          } else {\n            // If none of the children had any work, that means that none of\n            // them got retried so they'll still be blocked in the same way\n            // as before. We can fast bail out.\n            return null;\n          }\n        }\n        case OffscreenComponent:\n        case LegacyHiddenComponent: {\n          // Need to check if the tree still needs to be deferred. This is\n          // almost identical to the logic used in the normal update path,\n          // so we'll just enter that. The only difference is we'll bail out\n          // at the next level instead of this one, because the child props\n          // have not changed. Which is fine.\n          // TODO: Probably should refactor `beginWork` to split the bailout\n          // path from the normal path. I'm tempted to do a labeled break here\n          // but I won't :)\n          workInProgress.lanes = NoLanes;\n          return updateOffscreenComponent(current, workInProgress, renderLanes);\n        }\n      }\n      return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n    } else {\n      if ((current.flags & ForceUpdateForLegacySuspense) !== NoFlags) {\n        // This is a special case that only exists for legacy mode.\n        // See https://github.com/facebook/react/pull/19216.\n        didReceiveUpdate = true;\n      } else {\n        // An update was scheduled on this fiber, but there are no new props\n        // nor legacy context. Set this to false. If an update queue or context\n        // consumer produces a changed value, it will set this to true. Otherwise,\n        // the component will assume the children have not changed and bail out.\n        didReceiveUpdate = false;\n      }\n    }\n  } else {\n    didReceiveUpdate = false;\n  }\n\n  // Before entering the begin phase, clear pending update priority.\n  // TODO: This assumes that we're about to evaluate the component and process\n  // the update queue. However, there's an exception: SimpleMemoComponent\n  // sometimes bails out later in the begin phase. This indicates that we should\n  // move this assignment out of the common path and into each branch.\n  workInProgress.lanes = NoLanes;\n\n  switch (workInProgress.tag) {\n    case IndeterminateComponent: {\n      return mountIndeterminateComponent(\n        current,\n        workInProgress,\n        workInProgress.type,\n        renderLanes,\n      );\n    }\n    case LazyComponent: {\n      const elementType = workInProgress.elementType;\n      return mountLazyComponent(\n        current,\n        workInProgress,\n        elementType,\n        updateLanes,\n        renderLanes,\n      );\n    }\n    case FunctionComponent: {\n      const Component = workInProgress.type;\n      const unresolvedProps = workInProgress.pendingProps;\n      const resolvedProps =\n        workInProgress.elementType === Component\n          ? unresolvedProps\n          : resolveDefaultProps(Component, unresolvedProps);\n      return updateFunctionComponent(\n        current,\n        workInProgress,\n        Component,\n        resolvedProps,\n        renderLanes,\n      );\n    }\n    case ClassComponent: {\n      const Component = workInProgress.type;\n      const unresolvedProps = workInProgress.pendingProps;\n      const resolvedProps =\n        workInProgress.elementType === Component\n          ? unresolvedProps\n          : resolveDefaultProps(Component, unresolvedProps);\n      return updateClassComponent(\n        current,\n        workInProgress,\n        Component,\n        resolvedProps,\n        renderLanes,\n      );\n    }\n    case HostRoot:\n      return updateHostRoot(current, workInProgress, renderLanes);\n    case HostComponent:\n      return updateHostComponent(current, workInProgress, renderLanes);\n    case HostText:\n      return updateHostText(current, workInProgress);\n    case SuspenseComponent:\n      return updateSuspenseComponent(current, workInProgress, renderLanes);\n    case HostPortal:\n      return updatePortalComponent(current, workInProgress, renderLanes);\n    case ForwardRef: {\n      const type = workInProgress.type;\n      const unresolvedProps = workInProgress.pendingProps;\n      const resolvedProps =\n        workInProgress.elementType === type\n          ? unresolvedProps\n          : resolveDefaultProps(type, unresolvedProps);\n      return updateForwardRef(\n        current,\n        workInProgress,\n        type,\n        resolvedProps,\n        renderLanes,\n      );\n    }\n    case Fragment:\n      return updateFragment(current, workInProgress, renderLanes);\n    case Mode:\n      return updateMode(current, workInProgress, renderLanes);\n    case Profiler:\n      return updateProfiler(current, workInProgress, renderLanes);\n    case ContextProvider:\n      return updateContextProvider(current, workInProgress, renderLanes);\n    case ContextConsumer:\n      return updateContextConsumer(current, workInProgress, renderLanes);\n    case MemoComponent: {\n      const type = workInProgress.type;\n      const unresolvedProps = workInProgress.pendingProps;\n      // Resolve outer props first, then resolve inner props.\n      let resolvedProps = resolveDefaultProps(type, unresolvedProps);\n      if (__DEV__) {\n        if (workInProgress.type !== workInProgress.elementType) {\n          const outerPropTypes = type.propTypes;\n          if (outerPropTypes) {\n            checkPropTypes(\n              outerPropTypes,\n              resolvedProps, // Resolved for outer only\n              'prop',\n              getComponentName(type),\n            );\n          }\n        }\n      }\n      resolvedProps = resolveDefaultProps(type.type, resolvedProps);\n      return updateMemoComponent(\n        current,\n        workInProgress,\n        type,\n        resolvedProps,\n        updateLanes,\n        renderLanes,\n      );\n    }\n    case SimpleMemoComponent: {\n      return updateSimpleMemoComponent(\n        current,\n        workInProgress,\n        workInProgress.type,\n        workInProgress.pendingProps,\n        updateLanes,\n        renderLanes,\n      );\n    }\n    case IncompleteClassComponent: {\n      const Component = workInProgress.type;\n      const unresolvedProps = workInProgress.pendingProps;\n      const resolvedProps =\n        workInProgress.elementType === Component\n          ? unresolvedProps\n          : resolveDefaultProps(Component, unresolvedProps);\n      return mountIncompleteClassComponent(\n        current,\n        workInProgress,\n        Component,\n        resolvedProps,\n        renderLanes,\n      );\n    }\n    case SuspenseListComponent: {\n      return updateSuspenseListComponent(current, workInProgress, renderLanes);\n    }\n    case FundamentalComponent: {\n      if (enableFundamentalAPI) {\n        return updateFundamentalComponent(current, workInProgress, renderLanes);\n      }\n      break;\n    }\n    case ScopeComponent: {\n      if (enableScopeAPI) {\n        return updateScopeComponent(current, workInProgress, renderLanes);\n      }\n      break;\n    }\n    case Block: {\n      if (enableBlocksAPI) {\n        const block = workInProgress.type;\n        const props = workInProgress.pendingProps;\n        return updateBlock(current, workInProgress, block, props, renderLanes);\n      }\n      break;\n    }\n    case OffscreenComponent: {\n      return updateOffscreenComponent(current, workInProgress, renderLanes);\n    }\n    case LegacyHiddenComponent: {\n      return updateLegacyHiddenComponent(current, workInProgress, renderLanes);\n    }\n  }\n  invariant(\n    false,\n    'Unknown unit of work tag (%s). This error is likely caused by a bug in ' +\n      'React. Please file an issue.',\n    workInProgress.tag,\n  );\n}\n\nexport {beginWork};\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactInternalTypes';\nimport type {Lanes} from './ReactFiberLane';\nimport type {\n  ReactFundamentalComponentInstance,\n  ReactScopeInstance,\n} from 'shared/ReactTypes';\nimport type {FiberRoot} from './ReactInternalTypes';\nimport type {\n  Instance,\n  Type,\n  Props,\n  Container,\n  ChildSet,\n} from './ReactFiberHostConfig';\nimport type {\n  SuspenseState,\n  SuspenseListRenderState,\n} from './ReactFiberSuspenseComponent.old';\nimport type {SuspenseContext} from './ReactFiberSuspenseContext.old';\nimport type {OffscreenState} from './ReactFiberOffscreenComponent';\n\nimport {resetWorkInProgressVersions as resetMutableSourceWorkInProgressVersions} from './ReactMutableSource.old';\n\nimport {now} from './SchedulerWithReactIntegration.old';\n\nimport {\n  IndeterminateComponent,\n  FunctionComponent,\n  ClassComponent,\n  HostRoot,\n  HostComponent,\n  HostText,\n  HostPortal,\n  ContextProvider,\n  ContextConsumer,\n  ForwardRef,\n  Fragment,\n  Mode,\n  Profiler,\n  SuspenseComponent,\n  SuspenseListComponent,\n  MemoComponent,\n  SimpleMemoComponent,\n  LazyComponent,\n  IncompleteClassComponent,\n  FundamentalComponent,\n  ScopeComponent,\n  Block,\n  OffscreenComponent,\n  LegacyHiddenComponent,\n} from './ReactWorkTags';\nimport {NoMode, BlockingMode, ProfileMode} from './ReactTypeOfMode';\nimport {Ref, Update, NoFlags, DidCapture, Snapshot} from './ReactFiberFlags';\nimport invariant from 'shared/invariant';\n\nimport {\n  createInstance,\n  createTextInstance,\n  appendInitialChild,\n  finalizeInitialChildren,\n  prepareUpdate,\n  supportsMutation,\n  supportsPersistence,\n  cloneInstance,\n  cloneHiddenInstance,\n  cloneHiddenTextInstance,\n  createContainerChildSet,\n  appendChildToContainerChildSet,\n  finalizeContainerChildren,\n  getFundamentalComponentInstance,\n  mountFundamentalComponent,\n  cloneFundamentalInstance,\n  shouldUpdateFundamentalComponent,\n  preparePortalMount,\n  prepareScopeUpdate,\n} from './ReactFiberHostConfig';\nimport {\n  getRootHostContainer,\n  popHostContext,\n  getHostContext,\n  popHostContainer,\n} from './ReactFiberHostContext.old';\nimport {\n  suspenseStackCursor,\n  InvisibleParentSuspenseContext,\n  hasSuspenseContext,\n  popSuspenseContext,\n  pushSuspenseContext,\n  setShallowSuspenseContext,\n  ForceSuspenseFallback,\n  setDefaultShallowSuspenseContext,\n} from './ReactFiberSuspenseContext.old';\nimport {findFirstSuspended} from './ReactFiberSuspenseComponent.old';\nimport {\n  isContextProvider as isLegacyContextProvider,\n  popContext as popLegacyContext,\n  popTopLevelContextObject as popTopLevelLegacyContextObject,\n} from './ReactFiberContext.old';\nimport {popProvider} from './ReactFiberNewContext.old';\nimport {\n  prepareToHydrateHostInstance,\n  prepareToHydrateHostTextInstance,\n  prepareToHydrateHostSuspenseInstance,\n  popHydrationState,\n  resetHydrationState,\n  getIsHydrating,\n} from './ReactFiberHydrationContext.old';\nimport {\n  enableSchedulerTracing,\n  enableSuspenseCallback,\n  enableSuspenseServerRenderer,\n  enableFundamentalAPI,\n  enableScopeAPI,\n  enableBlocksAPI,\n  enableProfilerTimer,\n} from 'shared/ReactFeatureFlags';\nimport {\n  markSpawnedWork,\n  renderDidSuspend,\n  renderDidSuspendDelayIfPossible,\n  renderHasNotSuspendedYet,\n  popRenderLanes,\n  getRenderTargetTime,\n} from './ReactFiberWorkLoop.old';\nimport {createFundamentalStateInstance} from './ReactFiberFundamental.old';\nimport {OffscreenLane, SomeRetryLane} from './ReactFiberLane';\nimport {resetChildFibers} from './ReactChildFiber.old';\nimport {createScopeInstance} from './ReactFiberScope.old';\nimport {transferActualDuration} from './ReactProfilerTimer.old';\n\nfunction markUpdate(workInProgress: Fiber) {\n  // Tag the fiber with an update effect. This turns a Placement into\n  // a PlacementAndUpdate.\n  workInProgress.flags |= Update;\n}\n\nfunction markRef(workInProgress: Fiber) {\n  workInProgress.flags |= Ref;\n}\n\nlet appendAllChildren;\nlet updateHostContainer;\nlet updateHostComponent;\nlet updateHostText;\nif (supportsMutation) {\n  // Mutation mode\n\n  appendAllChildren = function(\n    parent: Instance,\n    workInProgress: Fiber,\n    needsVisibilityToggle: boolean,\n    isHidden: boolean,\n  ) {\n    // We only have the top Fiber that was created but we need recurse down its\n    // children to find all the terminal nodes.\n    let node = workInProgress.child;\n    while (node !== null) {\n      if (node.tag === HostComponent || node.tag === HostText) {\n        appendInitialChild(parent, node.stateNode);\n      } else if (enableFundamentalAPI && node.tag === FundamentalComponent) {\n        appendInitialChild(parent, node.stateNode.instance);\n      } else if (node.tag === HostPortal) {\n        // If we have a portal child, then we don't want to traverse\n        // down its children. Instead, we'll get insertions from each child in\n        // the portal directly.\n      } else if (node.child !== null) {\n        node.child.return = node;\n        node = node.child;\n        continue;\n      }\n      if (node === workInProgress) {\n        return;\n      }\n      while (node.sibling === null) {\n        if (node.return === null || node.return === workInProgress) {\n          return;\n        }\n        node = node.return;\n      }\n      node.sibling.return = node.return;\n      node = node.sibling;\n    }\n  };\n\n  updateHostContainer = function(workInProgress: Fiber) {\n    // Noop\n  };\n  updateHostComponent = function(\n    current: Fiber,\n    workInProgress: Fiber,\n    type: Type,\n    newProps: Props,\n    rootContainerInstance: Container,\n  ) {\n    // If we have an alternate, that means this is an update and we need to\n    // schedule a side-effect to do the updates.\n    const oldProps = current.memoizedProps;\n    if (oldProps === newProps) {\n      // In mutation mode, this is sufficient for a bailout because\n      // we won't touch this node even if children changed.\n      return;\n    }\n\n    // If we get updated because one of our children updated, we don't\n    // have newProps so we'll have to reuse them.\n    // TODO: Split the update API as separate for the props vs. children.\n    // Even better would be if children weren't special cased at all tho.\n    const instance: Instance = workInProgress.stateNode;\n    const currentHostContext = getHostContext();\n    // TODO: Experiencing an error where oldProps is null. Suggests a host\n    // component is hitting the resume path. Figure out why. Possibly\n    // related to `hidden`.\n    const updatePayload = prepareUpdate(\n      instance,\n      type,\n      oldProps,\n      newProps,\n      rootContainerInstance,\n      currentHostContext,\n    );\n    // TODO: Type this specific to this type of component.\n    workInProgress.updateQueue = (updatePayload: any);\n    // If the update payload indicates that there is a change or if there\n    // is a new ref we mark this as an update. All the work is done in commitWork.\n    if (updatePayload) {\n      markUpdate(workInProgress);\n    }\n  };\n  updateHostText = function(\n    current: Fiber,\n    workInProgress: Fiber,\n    oldText: string,\n    newText: string,\n  ) {\n    // If the text differs, mark it as an update. All the work in done in commitWork.\n    if (oldText !== newText) {\n      markUpdate(workInProgress);\n    }\n  };\n} else if (supportsPersistence) {\n  // Persistent host tree mode\n\n  appendAllChildren = function(\n    parent: Instance,\n    workInProgress: Fiber,\n    needsVisibilityToggle: boolean,\n    isHidden: boolean,\n  ) {\n    // We only have the top Fiber that was created but we need recurse down its\n    // children to find all the terminal nodes.\n    let node = workInProgress.child;\n    while (node !== null) {\n      // eslint-disable-next-line no-labels\n      branches: if (node.tag === HostComponent) {\n        let instance = node.stateNode;\n        if (needsVisibilityToggle && isHidden) {\n          // This child is inside a timed out tree. Hide it.\n          const props = node.memoizedProps;\n          const type = node.type;\n          instance = cloneHiddenInstance(instance, type, props, node);\n        }\n        appendInitialChild(parent, instance);\n      } else if (node.tag === HostText) {\n        let instance = node.stateNode;\n        if (needsVisibilityToggle && isHidden) {\n          // This child is inside a timed out tree. Hide it.\n          const text = node.memoizedProps;\n          instance = cloneHiddenTextInstance(instance, text, node);\n        }\n        appendInitialChild(parent, instance);\n      } else if (enableFundamentalAPI && node.tag === FundamentalComponent) {\n        let instance = node.stateNode.instance;\n        if (needsVisibilityToggle && isHidden) {\n          // This child is inside a timed out tree. Hide it.\n          const props = node.memoizedProps;\n          const type = node.type;\n          instance = cloneHiddenInstance(instance, type, props, node);\n        }\n        appendInitialChild(parent, instance);\n      } else if (node.tag === HostPortal) {\n        // If we have a portal child, then we don't want to traverse\n        // down its children. Instead, we'll get insertions from each child in\n        // the portal directly.\n      } else if (node.tag === SuspenseComponent) {\n        if ((node.flags & Update) !== NoFlags) {\n          // Need to toggle the visibility of the primary children.\n          const newIsHidden = node.memoizedState !== null;\n          if (newIsHidden) {\n            const primaryChildParent = node.child;\n            if (primaryChildParent !== null) {\n              if (primaryChildParent.child !== null) {\n                primaryChildParent.child.return = primaryChildParent;\n                appendAllChildren(\n                  parent,\n                  primaryChildParent,\n                  true,\n                  newIsHidden,\n                );\n              }\n              const fallbackChildParent = primaryChildParent.sibling;\n              if (fallbackChildParent !== null) {\n                fallbackChildParent.return = node;\n                node = fallbackChildParent;\n                continue;\n              }\n            }\n          }\n        }\n        if (node.child !== null) {\n          // Continue traversing like normal\n          node.child.return = node;\n          node = node.child;\n          continue;\n        }\n      } else if (node.child !== null) {\n        node.child.return = node;\n        node = node.child;\n        continue;\n      }\n      // $FlowFixMe This is correct but Flow is confused by the labeled break.\n      node = (node: Fiber);\n      if (node === workInProgress) {\n        return;\n      }\n      while (node.sibling === null) {\n        if (node.return === null || node.return === workInProgress) {\n          return;\n        }\n        node = node.return;\n      }\n      node.sibling.return = node.return;\n      node = node.sibling;\n    }\n  };\n\n  // An unfortunate fork of appendAllChildren because we have two different parent types.\n  const appendAllChildrenToContainer = function(\n    containerChildSet: ChildSet,\n    workInProgress: Fiber,\n    needsVisibilityToggle: boolean,\n    isHidden: boolean,\n  ) {\n    // We only have the top Fiber that was created but we need recurse down its\n    // children to find all the terminal nodes.\n    let node = workInProgress.child;\n    while (node !== null) {\n      // eslint-disable-next-line no-labels\n      branches: if (node.tag === HostComponent) {\n        let instance = node.stateNode;\n        if (needsVisibilityToggle && isHidden) {\n          // This child is inside a timed out tree. Hide it.\n          const props = node.memoizedProps;\n          const type = node.type;\n          instance = cloneHiddenInstance(instance, type, props, node);\n        }\n        appendChildToContainerChildSet(containerChildSet, instance);\n      } else if (node.tag === HostText) {\n        let instance = node.stateNode;\n        if (needsVisibilityToggle && isHidden) {\n          // This child is inside a timed out tree. Hide it.\n          const text = node.memoizedProps;\n          instance = cloneHiddenTextInstance(instance, text, node);\n        }\n        appendChildToContainerChildSet(containerChildSet, instance);\n      } else if (enableFundamentalAPI && node.tag === FundamentalComponent) {\n        let instance = node.stateNode.instance;\n        if (needsVisibilityToggle && isHidden) {\n          // This child is inside a timed out tree. Hide it.\n          const props = node.memoizedProps;\n          const type = node.type;\n          instance = cloneHiddenInstance(instance, type, props, node);\n        }\n        appendChildToContainerChildSet(containerChildSet, instance);\n      } else if (node.tag === HostPortal) {\n        // If we have a portal child, then we don't want to traverse\n        // down its children. Instead, we'll get insertions from each child in\n        // the portal directly.\n      } else if (node.tag === SuspenseComponent) {\n        if ((node.flags & Update) !== NoFlags) {\n          // Need to toggle the visibility of the primary children.\n          const newIsHidden = node.memoizedState !== null;\n          if (newIsHidden) {\n            const primaryChildParent = node.child;\n            if (primaryChildParent !== null) {\n              if (primaryChildParent.child !== null) {\n                primaryChildParent.child.return = primaryChildParent;\n                appendAllChildrenToContainer(\n                  containerChildSet,\n                  primaryChildParent,\n                  true,\n                  newIsHidden,\n                );\n              }\n              const fallbackChildParent = primaryChildParent.sibling;\n              if (fallbackChildParent !== null) {\n                fallbackChildParent.return = node;\n                node = fallbackChildParent;\n                continue;\n              }\n            }\n          }\n        }\n        if (node.child !== null) {\n          // Continue traversing like normal\n          node.child.return = node;\n          node = node.child;\n          continue;\n        }\n      } else if (node.child !== null) {\n        node.child.return = node;\n        node = node.child;\n        continue;\n      }\n      // $FlowFixMe This is correct but Flow is confused by the labeled break.\n      node = (node: Fiber);\n      if (node === workInProgress) {\n        return;\n      }\n      while (node.sibling === null) {\n        if (node.return === null || node.return === workInProgress) {\n          return;\n        }\n        node = node.return;\n      }\n      node.sibling.return = node.return;\n      node = node.sibling;\n    }\n  };\n  updateHostContainer = function(workInProgress: Fiber) {\n    const portalOrRoot: {\n      containerInfo: Container,\n      pendingChildren: ChildSet,\n      ...\n    } = workInProgress.stateNode;\n    const childrenUnchanged = workInProgress.firstEffect === null;\n    if (childrenUnchanged) {\n      // No changes, just reuse the existing instance.\n    } else {\n      const container = portalOrRoot.containerInfo;\n      const newChildSet = createContainerChildSet(container);\n      // If children might have changed, we have to add them all to the set.\n      appendAllChildrenToContainer(newChildSet, workInProgress, false, false);\n      portalOrRoot.pendingChildren = newChildSet;\n      // Schedule an update on the container to swap out the container.\n      markUpdate(workInProgress);\n      finalizeContainerChildren(container, newChildSet);\n    }\n  };\n  updateHostComponent = function(\n    current: Fiber,\n    workInProgress: Fiber,\n    type: Type,\n    newProps: Props,\n    rootContainerInstance: Container,\n  ) {\n    const currentInstance = current.stateNode;\n    const oldProps = current.memoizedProps;\n    // If there are no effects associated with this node, then none of our children had any updates.\n    // This guarantees that we can reuse all of them.\n    const childrenUnchanged = workInProgress.firstEffect === null;\n    if (childrenUnchanged && oldProps === newProps) {\n      // No changes, just reuse the existing instance.\n      // Note that this might release a previous clone.\n      workInProgress.stateNode = currentInstance;\n      return;\n    }\n    const recyclableInstance: Instance = workInProgress.stateNode;\n    const currentHostContext = getHostContext();\n    let updatePayload = null;\n    if (oldProps !== newProps) {\n      updatePayload = prepareUpdate(\n        recyclableInstance,\n        type,\n        oldProps,\n        newProps,\n        rootContainerInstance,\n        currentHostContext,\n      );\n    }\n    if (childrenUnchanged && updatePayload === null) {\n      // No changes, just reuse the existing instance.\n      // Note that this might release a previous clone.\n      workInProgress.stateNode = currentInstance;\n      return;\n    }\n    const newInstance = cloneInstance(\n      currentInstance,\n      updatePayload,\n      type,\n      oldProps,\n      newProps,\n      workInProgress,\n      childrenUnchanged,\n      recyclableInstance,\n    );\n    if (\n      finalizeInitialChildren(\n        newInstance,\n        type,\n        newProps,\n        rootContainerInstance,\n        currentHostContext,\n      )\n    ) {\n      markUpdate(workInProgress);\n    }\n    workInProgress.stateNode = newInstance;\n    if (childrenUnchanged) {\n      // If there are no other effects in this tree, we need to flag this node as having one.\n      // Even though we're not going to use it for anything.\n      // Otherwise parents won't know that there are new children to propagate upwards.\n      markUpdate(workInProgress);\n    } else {\n      // If children might have changed, we have to add them all to the set.\n      appendAllChildren(newInstance, workInProgress, false, false);\n    }\n  };\n  updateHostText = function(\n    current: Fiber,\n    workInProgress: Fiber,\n    oldText: string,\n    newText: string,\n  ) {\n    if (oldText !== newText) {\n      // If the text content differs, we'll create a new text instance for it.\n      const rootContainerInstance = getRootHostContainer();\n      const currentHostContext = getHostContext();\n      workInProgress.stateNode = createTextInstance(\n        newText,\n        rootContainerInstance,\n        currentHostContext,\n        workInProgress,\n      );\n      // We'll have to mark it as having an effect, even though we won't use the effect for anything.\n      // This lets the parents know that at least one of their children has changed.\n      markUpdate(workInProgress);\n    } else {\n      workInProgress.stateNode = current.stateNode;\n    }\n  };\n} else {\n  // No host operations\n  updateHostContainer = function(workInProgress: Fiber) {\n    // Noop\n  };\n  updateHostComponent = function(\n    current: Fiber,\n    workInProgress: Fiber,\n    type: Type,\n    newProps: Props,\n    rootContainerInstance: Container,\n  ) {\n    // Noop\n  };\n  updateHostText = function(\n    current: Fiber,\n    workInProgress: Fiber,\n    oldText: string,\n    newText: string,\n  ) {\n    // Noop\n  };\n}\n\nfunction cutOffTailIfNeeded(\n  renderState: SuspenseListRenderState,\n  hasRenderedATailFallback: boolean,\n) {\n  if (getIsHydrating()) {\n    // If we're hydrating, we should consume as many items as we can\n    // so we don't leave any behind.\n    return;\n  }\n  switch (renderState.tailMode) {\n    case 'hidden': {\n      // Any insertions at the end of the tail list after this point\n      // should be invisible. If there are already mounted boundaries\n      // anything before them are not considered for collapsing.\n      // Therefore we need to go through the whole tail to find if\n      // there are any.\n      let tailNode = renderState.tail;\n      let lastTailNode = null;\n      while (tailNode !== null) {\n        if (tailNode.alternate !== null) {\n          lastTailNode = tailNode;\n        }\n        tailNode = tailNode.sibling;\n      }\n      // Next we're simply going to delete all insertions after the\n      // last rendered item.\n      if (lastTailNode === null) {\n        // All remaining items in the tail are insertions.\n        renderState.tail = null;\n      } else {\n        // Detach the insertion after the last node that was already\n        // inserted.\n        lastTailNode.sibling = null;\n      }\n      break;\n    }\n    case 'collapsed': {\n      // Any insertions at the end of the tail list after this point\n      // should be invisible. If there are already mounted boundaries\n      // anything before them are not considered for collapsing.\n      // Therefore we need to go through the whole tail to find if\n      // there are any.\n      let tailNode = renderState.tail;\n      let lastTailNode = null;\n      while (tailNode !== null) {\n        if (tailNode.alternate !== null) {\n          lastTailNode = tailNode;\n        }\n        tailNode = tailNode.sibling;\n      }\n      // Next we're simply going to delete all insertions after the\n      // last rendered item.\n      if (lastTailNode === null) {\n        // All remaining items in the tail are insertions.\n        if (!hasRenderedATailFallback && renderState.tail !== null) {\n          // We suspended during the head. We want to show at least one\n          // row at the tail. So we'll keep on and cut off the rest.\n          renderState.tail.sibling = null;\n        } else {\n          renderState.tail = null;\n        }\n      } else {\n        // Detach the insertion after the last node that was already\n        // inserted.\n        lastTailNode.sibling = null;\n      }\n      break;\n    }\n  }\n}\n\nfunction completeWork(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  renderLanes: Lanes,\n): Fiber | null {\n  const newProps = workInProgress.pendingProps;\n\n  switch (workInProgress.tag) {\n    case IndeterminateComponent:\n    case LazyComponent:\n    case SimpleMemoComponent:\n    case FunctionComponent:\n    case ForwardRef:\n    case Fragment:\n    case Mode:\n    case Profiler:\n    case ContextConsumer:\n    case MemoComponent:\n      return null;\n    case ClassComponent: {\n      const Component = workInProgress.type;\n      if (isLegacyContextProvider(Component)) {\n        popLegacyContext(workInProgress);\n      }\n      return null;\n    }\n    case HostRoot: {\n      popHostContainer(workInProgress);\n      popTopLevelLegacyContextObject(workInProgress);\n      resetMutableSourceWorkInProgressVersions();\n      const fiberRoot = (workInProgress.stateNode: FiberRoot);\n      if (fiberRoot.pendingContext) {\n        fiberRoot.context = fiberRoot.pendingContext;\n        fiberRoot.pendingContext = null;\n      }\n      if (current === null || current.child === null) {\n        // If we hydrated, pop so that we can delete any remaining children\n        // that weren't hydrated.\n        const wasHydrated = popHydrationState(workInProgress);\n        if (wasHydrated) {\n          // If we hydrated, then we'll need to schedule an update for\n          // the commit side-effects on the root.\n          markUpdate(workInProgress);\n        } else if (!fiberRoot.hydrate) {\n          // Schedule an effect to clear this container at the start of the next commit.\n          // This handles the case of React rendering into a container with previous children.\n          // It's also safe to do for updates too, because current.child would only be null\n          // if the previous render was null (so the the container would already be empty).\n          workInProgress.flags |= Snapshot;\n        }\n      }\n      updateHostContainer(workInProgress);\n      return null;\n    }\n    case HostComponent: {\n      popHostContext(workInProgress);\n      const rootContainerInstance = getRootHostContainer();\n      const type = workInProgress.type;\n      if (current !== null && workInProgress.stateNode != null) {\n        updateHostComponent(\n          current,\n          workInProgress,\n          type,\n          newProps,\n          rootContainerInstance,\n        );\n\n        if (current.ref !== workInProgress.ref) {\n          markRef(workInProgress);\n        }\n      } else {\n        if (!newProps) {\n          invariant(\n            workInProgress.stateNode !== null,\n            'We must have new props for new mounts. This error is likely ' +\n              'caused by a bug in React. Please file an issue.',\n          );\n          // This can happen when we abort work.\n          return null;\n        }\n\n        const currentHostContext = getHostContext();\n        // TODO: Move createInstance to beginWork and keep it on a context\n        // \"stack\" as the parent. Then append children as we go in beginWork\n        // or completeWork depending on whether we want to add them top->down or\n        // bottom->up. Top->down is faster in IE11.\n        const wasHydrated = popHydrationState(workInProgress);\n        if (wasHydrated) {\n          // TODO: Move this and createInstance step into the beginPhase\n          // to consolidate.\n          if (\n            prepareToHydrateHostInstance(\n              workInProgress,\n              rootContainerInstance,\n              currentHostContext,\n            )\n          ) {\n            // If changes to the hydrated node need to be applied at the\n            // commit-phase we mark this as such.\n            markUpdate(workInProgress);\n          }\n        } else {\n          const instance = createInstance(\n            type,\n            newProps,\n            rootContainerInstance,\n            currentHostContext,\n            workInProgress,\n          );\n\n          appendAllChildren(instance, workInProgress, false, false);\n\n          workInProgress.stateNode = instance;\n\n          // Certain renderers require commit-time effects for initial mount.\n          // (eg DOM renderer supports auto-focus for certain elements).\n          // Make sure such renderers get scheduled for later work.\n          if (\n            finalizeInitialChildren(\n              instance,\n              type,\n              newProps,\n              rootContainerInstance,\n              currentHostContext,\n            )\n          ) {\n            markUpdate(workInProgress);\n          }\n        }\n\n        if (workInProgress.ref !== null) {\n          // If there is a ref on a host node we need to schedule a callback\n          markRef(workInProgress);\n        }\n      }\n      return null;\n    }\n    case HostText: {\n      const newText = newProps;\n      if (current && workInProgress.stateNode != null) {\n        const oldText = current.memoizedProps;\n        // If we have an alternate, that means this is an update and we need\n        // to schedule a side-effect to do the updates.\n        updateHostText(current, workInProgress, oldText, newText);\n      } else {\n        if (typeof newText !== 'string') {\n          invariant(\n            workInProgress.stateNode !== null,\n            'We must have new props for new mounts. This error is likely ' +\n              'caused by a bug in React. Please file an issue.',\n          );\n          // This can happen when we abort work.\n        }\n        const rootContainerInstance = getRootHostContainer();\n        const currentHostContext = getHostContext();\n        const wasHydrated = popHydrationState(workInProgress);\n        if (wasHydrated) {\n          if (prepareToHydrateHostTextInstance(workInProgress)) {\n            markUpdate(workInProgress);\n          }\n        } else {\n          workInProgress.stateNode = createTextInstance(\n            newText,\n            rootContainerInstance,\n            currentHostContext,\n            workInProgress,\n          );\n        }\n      }\n      return null;\n    }\n    case SuspenseComponent: {\n      popSuspenseContext(workInProgress);\n      const nextState: null | SuspenseState = workInProgress.memoizedState;\n\n      if (enableSuspenseServerRenderer) {\n        if (nextState !== null && nextState.dehydrated !== null) {\n          if (current === null) {\n            const wasHydrated = popHydrationState(workInProgress);\n            invariant(\n              wasHydrated,\n              'A dehydrated suspense component was completed without a hydrated node. ' +\n                'This is probably a bug in React.',\n            );\n            prepareToHydrateHostSuspenseInstance(workInProgress);\n            if (enableSchedulerTracing) {\n              markSpawnedWork(OffscreenLane);\n            }\n            return null;\n          } else {\n            // We should never have been in a hydration state if we didn't have a current.\n            // However, in some of those paths, we might have reentered a hydration state\n            // and then we might be inside a hydration state. In that case, we'll need to exit out of it.\n            resetHydrationState();\n            if ((workInProgress.flags & DidCapture) === NoFlags) {\n              // This boundary did not suspend so it's now hydrated and unsuspended.\n              workInProgress.memoizedState = null;\n            }\n            // If nothing suspended, we need to schedule an effect to mark this boundary\n            // as having hydrated so events know that they're free to be invoked.\n            // It's also a signal to replay events and the suspense callback.\n            // If something suspended, schedule an effect to attach retry listeners.\n            // So we might as well always mark this.\n            workInProgress.flags |= Update;\n            return null;\n          }\n        }\n      }\n\n      if ((workInProgress.flags & DidCapture) !== NoFlags) {\n        // Something suspended. Re-render with the fallback children.\n        workInProgress.lanes = renderLanes;\n        // Do not reset the effect list.\n        if (\n          enableProfilerTimer &&\n          (workInProgress.mode & ProfileMode) !== NoMode\n        ) {\n          transferActualDuration(workInProgress);\n        }\n        return workInProgress;\n      }\n\n      const nextDidTimeout = nextState !== null;\n      let prevDidTimeout = false;\n      if (current === null) {\n        if (workInProgress.memoizedProps.fallback !== undefined) {\n          popHydrationState(workInProgress);\n        }\n      } else {\n        const prevState: null | SuspenseState = current.memoizedState;\n        prevDidTimeout = prevState !== null;\n      }\n\n      if (nextDidTimeout && !prevDidTimeout) {\n        // If this subtreee is running in blocking mode we can suspend,\n        // otherwise we won't suspend.\n        // TODO: This will still suspend a synchronous tree if anything\n        // in the concurrent tree already suspended during this render.\n        // This is a known bug.\n        if ((workInProgress.mode & BlockingMode) !== NoMode) {\n          // TODO: Move this back to throwException because this is too late\n          // if this is a large tree which is common for initial loads. We\n          // don't know if we should restart a render or not until we get\n          // this marker, and this is too late.\n          // If this render already had a ping or lower pri updates,\n          // and this is the first time we know we're going to suspend we\n          // should be able to immediately restart from within throwException.\n          const hasInvisibleChildContext =\n            current === null &&\n            workInProgress.memoizedProps.unstable_avoidThisFallback !== true;\n          if (\n            hasInvisibleChildContext ||\n            hasSuspenseContext(\n              suspenseStackCursor.current,\n              (InvisibleParentSuspenseContext: SuspenseContext),\n            )\n          ) {\n            // If this was in an invisible tree or a new render, then showing\n            // this boundary is ok.\n            renderDidSuspend();\n          } else {\n            // Otherwise, we're going to have to hide content so we should\n            // suspend for longer if possible.\n            renderDidSuspendDelayIfPossible();\n          }\n        }\n      }\n\n      if (supportsPersistence) {\n        // TODO: Only schedule updates if not prevDidTimeout.\n        if (nextDidTimeout) {\n          // If this boundary just timed out, schedule an effect to attach a\n          // retry listener to the promise. This flag is also used to hide the\n          // primary children.\n          workInProgress.flags |= Update;\n        }\n      }\n      if (supportsMutation) {\n        // TODO: Only schedule updates if these values are non equal, i.e. it changed.\n        if (nextDidTimeout || prevDidTimeout) {\n          // If this boundary just timed out, schedule an effect to attach a\n          // retry listener to the promise. This flag is also used to hide the\n          // primary children. In mutation mode, we also need the flag to\n          // *unhide* children that were previously hidden, so check if this\n          // is currently timed out, too.\n          workInProgress.flags |= Update;\n        }\n      }\n      if (\n        enableSuspenseCallback &&\n        workInProgress.updateQueue !== null &&\n        workInProgress.memoizedProps.suspenseCallback != null\n      ) {\n        // Always notify the callback\n        workInProgress.flags |= Update;\n      }\n      return null;\n    }\n    case HostPortal:\n      popHostContainer(workInProgress);\n      updateHostContainer(workInProgress);\n      if (current === null) {\n        preparePortalMount(workInProgress.stateNode.containerInfo);\n      }\n      return null;\n    case ContextProvider:\n      // Pop provider fiber\n      popProvider(workInProgress);\n      return null;\n    case IncompleteClassComponent: {\n      // Same as class component case. I put it down here so that the tags are\n      // sequential to ensure this switch is compiled to a jump table.\n      const Component = workInProgress.type;\n      if (isLegacyContextProvider(Component)) {\n        popLegacyContext(workInProgress);\n      }\n      return null;\n    }\n    case SuspenseListComponent: {\n      popSuspenseContext(workInProgress);\n\n      const renderState: null | SuspenseListRenderState =\n        workInProgress.memoizedState;\n\n      if (renderState === null) {\n        // We're running in the default, \"independent\" mode.\n        // We don't do anything in this mode.\n        return null;\n      }\n\n      let didSuspendAlready = (workInProgress.flags & DidCapture) !== NoFlags;\n\n      const renderedTail = renderState.rendering;\n      if (renderedTail === null) {\n        // We just rendered the head.\n        if (!didSuspendAlready) {\n          // This is the first pass. We need to figure out if anything is still\n          // suspended in the rendered set.\n\n          // If new content unsuspended, but there's still some content that\n          // didn't. Then we need to do a second pass that forces everything\n          // to keep showing their fallbacks.\n\n          // We might be suspended if something in this render pass suspended, or\n          // something in the previous committed pass suspended. Otherwise,\n          // there's no chance so we can skip the expensive call to\n          // findFirstSuspended.\n          const cannotBeSuspended =\n            renderHasNotSuspendedYet() &&\n            (current === null || (current.flags & DidCapture) === NoFlags);\n          if (!cannotBeSuspended) {\n            let row = workInProgress.child;\n            while (row !== null) {\n              const suspended = findFirstSuspended(row);\n              if (suspended !== null) {\n                didSuspendAlready = true;\n                workInProgress.flags |= DidCapture;\n                cutOffTailIfNeeded(renderState, false);\n\n                // If this is a newly suspended tree, it might not get committed as\n                // part of the second pass. In that case nothing will subscribe to\n                // its thennables. Instead, we'll transfer its thennables to the\n                // SuspenseList so that it can retry if they resolve.\n                // There might be multiple of these in the list but since we're\n                // going to wait for all of them anyway, it doesn't really matter\n                // which ones gets to ping. In theory we could get clever and keep\n                // track of how many dependencies remain but it gets tricky because\n                // in the meantime, we can add/remove/change items and dependencies.\n                // We might bail out of the loop before finding any but that\n                // doesn't matter since that means that the other boundaries that\n                // we did find already has their listeners attached.\n                const newThennables = suspended.updateQueue;\n                if (newThennables !== null) {\n                  workInProgress.updateQueue = newThennables;\n                  workInProgress.flags |= Update;\n                }\n\n                // Rerender the whole list, but this time, we'll force fallbacks\n                // to stay in place.\n                // Reset the effect list before doing the second pass since that's now invalid.\n                if (renderState.lastEffect === null) {\n                  workInProgress.firstEffect = null;\n                }\n                workInProgress.lastEffect = renderState.lastEffect;\n                // Reset the child fibers to their original state.\n                resetChildFibers(workInProgress, renderLanes);\n\n                // Set up the Suspense Context to force suspense and immediately\n                // rerender the children.\n                pushSuspenseContext(\n                  workInProgress,\n                  setShallowSuspenseContext(\n                    suspenseStackCursor.current,\n                    ForceSuspenseFallback,\n                  ),\n                );\n                return workInProgress.child;\n              }\n              row = row.sibling;\n            }\n          }\n\n          if (renderState.tail !== null && now() > getRenderTargetTime()) {\n            // We have already passed our CPU deadline but we still have rows\n            // left in the tail. We'll just give up further attempts to render\n            // the main content and only render fallbacks.\n            workInProgress.flags |= DidCapture;\n            didSuspendAlready = true;\n\n            cutOffTailIfNeeded(renderState, false);\n\n            // Since nothing actually suspended, there will nothing to ping this\n            // to get it started back up to attempt the next item. While in terms\n            // of priority this work has the same priority as this current render,\n            // it's not part of the same transition once the transition has\n            // committed. If it's sync, we still want to yield so that it can be\n            // painted. Conceptually, this is really the same as pinging.\n            // We can use any RetryLane even if it's the one currently rendering\n            // since we're leaving it behind on this node.\n            workInProgress.lanes = SomeRetryLane;\n            if (enableSchedulerTracing) {\n              markSpawnedWork(SomeRetryLane);\n            }\n          }\n        } else {\n          cutOffTailIfNeeded(renderState, false);\n        }\n        // Next we're going to render the tail.\n      } else {\n        // Append the rendered row to the child list.\n        if (!didSuspendAlready) {\n          const suspended = findFirstSuspended(renderedTail);\n          if (suspended !== null) {\n            workInProgress.flags |= DidCapture;\n            didSuspendAlready = true;\n\n            // Ensure we transfer the update queue to the parent so that it doesn't\n            // get lost if this row ends up dropped during a second pass.\n            const newThennables = suspended.updateQueue;\n            if (newThennables !== null) {\n              workInProgress.updateQueue = newThennables;\n              workInProgress.flags |= Update;\n            }\n\n            cutOffTailIfNeeded(renderState, true);\n            // This might have been modified.\n            if (\n              renderState.tail === null &&\n              renderState.tailMode === 'hidden' &&\n              !renderedTail.alternate &&\n              !getIsHydrating() // We don't cut it if we're hydrating.\n            ) {\n              // We need to delete the row we just rendered.\n              // Reset the effect list to what it was before we rendered this\n              // child. The nested children have already appended themselves.\n              const lastEffect = (workInProgress.lastEffect =\n                renderState.lastEffect);\n              // Remove any effects that were appended after this point.\n              if (lastEffect !== null) {\n                lastEffect.nextEffect = null;\n              }\n              // We're done.\n              return null;\n            }\n          } else if (\n            // The time it took to render last row is greater than the remaining\n            // time we have to render. So rendering one more row would likely\n            // exceed it.\n            now() * 2 - renderState.renderingStartTime >\n              getRenderTargetTime() &&\n            renderLanes !== OffscreenLane\n          ) {\n            // We have now passed our CPU deadline and we'll just give up further\n            // attempts to render the main content and only render fallbacks.\n            // The assumption is that this is usually faster.\n            workInProgress.flags |= DidCapture;\n            didSuspendAlready = true;\n\n            cutOffTailIfNeeded(renderState, false);\n\n            // Since nothing actually suspended, there will nothing to ping this\n            // to get it started back up to attempt the next item. While in terms\n            // of priority this work has the same priority as this current render,\n            // it's not part of the same transition once the transition has\n            // committed. If it's sync, we still want to yield so that it can be\n            // painted. Conceptually, this is really the same as pinging.\n            // We can use any RetryLane even if it's the one currently rendering\n            // since we're leaving it behind on this node.\n            workInProgress.lanes = SomeRetryLane;\n            if (enableSchedulerTracing) {\n              markSpawnedWork(SomeRetryLane);\n            }\n          }\n        }\n        if (renderState.isBackwards) {\n          // The effect list of the backwards tail will have been added\n          // to the end. This breaks the guarantee that life-cycles fire in\n          // sibling order but that isn't a strong guarantee promised by React.\n          // Especially since these might also just pop in during future commits.\n          // Append to the beginning of the list.\n          renderedTail.sibling = workInProgress.child;\n          workInProgress.child = renderedTail;\n        } else {\n          const previousSibling = renderState.last;\n          if (previousSibling !== null) {\n            previousSibling.sibling = renderedTail;\n          } else {\n            workInProgress.child = renderedTail;\n          }\n          renderState.last = renderedTail;\n        }\n      }\n\n      if (renderState.tail !== null) {\n        // We still have tail rows to render.\n        // Pop a row.\n        const next = renderState.tail;\n        renderState.rendering = next;\n        renderState.tail = next.sibling;\n        renderState.lastEffect = workInProgress.lastEffect;\n        renderState.renderingStartTime = now();\n        next.sibling = null;\n\n        // Restore the context.\n        // TODO: We can probably just avoid popping it instead and only\n        // setting it the first time we go from not suspended to suspended.\n        let suspenseContext = suspenseStackCursor.current;\n        if (didSuspendAlready) {\n          suspenseContext = setShallowSuspenseContext(\n            suspenseContext,\n            ForceSuspenseFallback,\n          );\n        } else {\n          suspenseContext = setDefaultShallowSuspenseContext(suspenseContext);\n        }\n        pushSuspenseContext(workInProgress, suspenseContext);\n        // Do a pass over the next row.\n        return next;\n      }\n      return null;\n    }\n    case FundamentalComponent: {\n      if (enableFundamentalAPI) {\n        const fundamentalImpl = workInProgress.type.impl;\n        let fundamentalInstance: ReactFundamentalComponentInstance<\n          any,\n          any,\n        > | null = workInProgress.stateNode;\n\n        if (fundamentalInstance === null) {\n          const getInitialState = fundamentalImpl.getInitialState;\n          let fundamentalState;\n          if (getInitialState !== undefined) {\n            fundamentalState = getInitialState(newProps);\n          }\n          fundamentalInstance = workInProgress.stateNode = createFundamentalStateInstance(\n            workInProgress,\n            newProps,\n            fundamentalImpl,\n            fundamentalState || {},\n          );\n          const instance = ((getFundamentalComponentInstance(\n            fundamentalInstance,\n          ): any): Instance);\n          fundamentalInstance.instance = instance;\n          if (fundamentalImpl.reconcileChildren === false) {\n            return null;\n          }\n          appendAllChildren(instance, workInProgress, false, false);\n          mountFundamentalComponent(fundamentalInstance);\n        } else {\n          // We fire update in commit phase\n          const prevProps = fundamentalInstance.props;\n          fundamentalInstance.prevProps = prevProps;\n          fundamentalInstance.props = newProps;\n          fundamentalInstance.currentFiber = workInProgress;\n          if (supportsPersistence) {\n            const instance = cloneFundamentalInstance(fundamentalInstance);\n            fundamentalInstance.instance = instance;\n            appendAllChildren(instance, workInProgress, false, false);\n          }\n          const shouldUpdate = shouldUpdateFundamentalComponent(\n            fundamentalInstance,\n          );\n          if (shouldUpdate) {\n            markUpdate(workInProgress);\n          }\n        }\n        return null;\n      }\n      break;\n    }\n    case ScopeComponent: {\n      if (enableScopeAPI) {\n        if (current === null) {\n          const scopeInstance: ReactScopeInstance = createScopeInstance();\n          workInProgress.stateNode = scopeInstance;\n          prepareScopeUpdate(scopeInstance, workInProgress);\n          if (workInProgress.ref !== null) {\n            markRef(workInProgress);\n            markUpdate(workInProgress);\n          }\n        } else {\n          if (workInProgress.ref !== null) {\n            markUpdate(workInProgress);\n          }\n          if (current.ref !== workInProgress.ref) {\n            markRef(workInProgress);\n          }\n        }\n        return null;\n      }\n      break;\n    }\n    case Block:\n      if (enableBlocksAPI) {\n        return null;\n      }\n      break;\n    case OffscreenComponent:\n    case LegacyHiddenComponent: {\n      popRenderLanes(workInProgress);\n      if (current !== null) {\n        const nextState: OffscreenState | null = workInProgress.memoizedState;\n        const prevState: OffscreenState | null = current.memoizedState;\n\n        const prevIsHidden = prevState !== null;\n        const nextIsHidden = nextState !== null;\n        if (\n          prevIsHidden !== nextIsHidden &&\n          newProps.mode !== 'unstable-defer-without-hiding'\n        ) {\n          workInProgress.flags |= Update;\n        }\n      }\n      return null;\n    }\n  }\n  invariant(\n    false,\n    'Unknown unit of work tag (%s). This error is likely caused by a bug in ' +\n      'React. Please file an issue.',\n    workInProgress.tag,\n  );\n}\n\nexport {completeWork};\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactInternalTypes';\nimport type {Lanes} from './ReactFiberLane';\nimport type {SuspenseState} from './ReactFiberSuspenseComponent.old';\n\nimport {resetWorkInProgressVersions as resetMutableSourceWorkInProgressVersions} from './ReactMutableSource.old';\nimport {\n  ClassComponent,\n  HostRoot,\n  HostComponent,\n  HostPortal,\n  ContextProvider,\n  SuspenseComponent,\n  SuspenseListComponent,\n  OffscreenComponent,\n  LegacyHiddenComponent,\n} from './ReactWorkTags';\nimport {DidCapture, NoFlags, ShouldCapture} from './ReactFiberFlags';\nimport {NoMode, ProfileMode} from './ReactTypeOfMode';\nimport {\n  enableSuspenseServerRenderer,\n  enableProfilerTimer,\n} from 'shared/ReactFeatureFlags';\n\nimport {popHostContainer, popHostContext} from './ReactFiberHostContext.old';\nimport {popSuspenseContext} from './ReactFiberSuspenseContext.old';\nimport {resetHydrationState} from './ReactFiberHydrationContext.old';\nimport {\n  isContextProvider as isLegacyContextProvider,\n  popContext as popLegacyContext,\n  popTopLevelContextObject as popTopLevelLegacyContextObject,\n} from './ReactFiberContext.old';\nimport {popProvider} from './ReactFiberNewContext.old';\nimport {popRenderLanes} from './ReactFiberWorkLoop.old';\nimport {transferActualDuration} from './ReactProfilerTimer.old';\n\nimport invariant from 'shared/invariant';\n\nfunction unwindWork(workInProgress: Fiber, renderLanes: Lanes) {\n  switch (workInProgress.tag) {\n    case ClassComponent: {\n      const Component = workInProgress.type;\n      if (isLegacyContextProvider(Component)) {\n        popLegacyContext(workInProgress);\n      }\n      const flags = workInProgress.flags;\n      if (flags & ShouldCapture) {\n        workInProgress.flags = (flags & ~ShouldCapture) | DidCapture;\n        if (\n          enableProfilerTimer &&\n          (workInProgress.mode & ProfileMode) !== NoMode\n        ) {\n          transferActualDuration(workInProgress);\n        }\n        return workInProgress;\n      }\n      return null;\n    }\n    case HostRoot: {\n      popHostContainer(workInProgress);\n      popTopLevelLegacyContextObject(workInProgress);\n      resetMutableSourceWorkInProgressVersions();\n      const flags = workInProgress.flags;\n      invariant(\n        (flags & DidCapture) === NoFlags,\n        'The root failed to unmount after an error. This is likely a bug in ' +\n          'React. Please file an issue.',\n      );\n      workInProgress.flags = (flags & ~ShouldCapture) | DidCapture;\n      return workInProgress;\n    }\n    case HostComponent: {\n      // TODO: popHydrationState\n      popHostContext(workInProgress);\n      return null;\n    }\n    case SuspenseComponent: {\n      popSuspenseContext(workInProgress);\n      if (enableSuspenseServerRenderer) {\n        const suspenseState: null | SuspenseState =\n          workInProgress.memoizedState;\n        if (suspenseState !== null && suspenseState.dehydrated !== null) {\n          invariant(\n            workInProgress.alternate !== null,\n            'Threw in newly mounted dehydrated component. This is likely a bug in ' +\n              'React. Please file an issue.',\n          );\n          resetHydrationState();\n        }\n      }\n      const flags = workInProgress.flags;\n      if (flags & ShouldCapture) {\n        workInProgress.flags = (flags & ~ShouldCapture) | DidCapture;\n        // Captured a suspense effect. Re-render the boundary.\n        if (\n          enableProfilerTimer &&\n          (workInProgress.mode & ProfileMode) !== NoMode\n        ) {\n          transferActualDuration(workInProgress);\n        }\n        return workInProgress;\n      }\n      return null;\n    }\n    case SuspenseListComponent: {\n      popSuspenseContext(workInProgress);\n      // SuspenseList doesn't actually catch anything. It should've been\n      // caught by a nested boundary. If not, it should bubble through.\n      return null;\n    }\n    case HostPortal:\n      popHostContainer(workInProgress);\n      return null;\n    case ContextProvider:\n      popProvider(workInProgress);\n      return null;\n    case OffscreenComponent:\n    case LegacyHiddenComponent:\n      popRenderLanes(workInProgress);\n      return null;\n    default:\n      return null;\n  }\n}\n\nfunction unwindInterruptedWork(interruptedWork: Fiber) {\n  switch (interruptedWork.tag) {\n    case ClassComponent: {\n      const childContextTypes = interruptedWork.type.childContextTypes;\n      if (childContextTypes !== null && childContextTypes !== undefined) {\n        popLegacyContext(interruptedWork);\n      }\n      break;\n    }\n    case HostRoot: {\n      popHostContainer(interruptedWork);\n      popTopLevelLegacyContextObject(interruptedWork);\n      resetMutableSourceWorkInProgressVersions();\n      break;\n    }\n    case HostComponent: {\n      popHostContext(interruptedWork);\n      break;\n    }\n    case HostPortal:\n      popHostContainer(interruptedWork);\n      break;\n    case SuspenseComponent:\n      popSuspenseContext(interruptedWork);\n      break;\n    case SuspenseListComponent:\n      popSuspenseContext(interruptedWork);\n      break;\n    case ContextProvider:\n      popProvider(interruptedWork);\n      break;\n    case OffscreenComponent:\n    case LegacyHiddenComponent:\n      popRenderLanes(interruptedWork);\n      break;\n    default:\n      break;\n  }\n}\n\nexport {unwindWork, unwindInterruptedWork};\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactInternalTypes';\n\nimport {getStackByFiberInDevAndProd} from './ReactFiberComponentStack';\n\nexport type CapturedValue<T> = {|\n  value: T,\n  source: Fiber | null,\n  stack: string | null,\n|};\n\nexport function createCapturedValue<T>(\n  value: T,\n  source: Fiber,\n): CapturedValue<T> {\n  // If the value is an error, call this function immediately after it is thrown\n  // so the stack is accurate.\n  return {\n    value,\n    source,\n    stack: getStackByFiberInDevAndProd(source),\n  };\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactInternalTypes';\nimport type {CapturedValue} from './ReactCapturedValue';\n\n// This module is forked in different environments.\n// By default, return `true` to log errors to the console.\n// Forks can return `false` if this isn't desirable.\n\nexport function showErrorDialog(\n  boundary: Fiber,\n  errorInfo: CapturedValue<mixed>,\n): boolean {\n  return true;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactInternalTypes';\nimport type {CapturedValue} from './ReactCapturedValue';\n\nimport {showErrorDialog} from './ReactFiberErrorDialog';\nimport {ClassComponent} from './ReactWorkTags';\nimport getComponentName from 'shared/getComponentName';\n\nexport function logCapturedError(\n  boundary: Fiber,\n  errorInfo: CapturedValue<mixed>,\n): void {\n  try {\n    const logError = showErrorDialog(boundary, errorInfo);\n\n    // Allow injected showErrorDialog() to prevent default console.error logging.\n    // This enables renderers like ReactNative to better manage redbox behavior.\n    if (logError === false) {\n      return;\n    }\n\n    const error = (errorInfo.value: any);\n    if (__DEV__) {\n      const source = errorInfo.source;\n      const stack = errorInfo.stack;\n      const componentStack = stack !== null ? stack : '';\n      // Browsers support silencing uncaught errors by calling\n      // `preventDefault()` in window `error` handler.\n      // We record this information as an expando on the error.\n      if (error != null && error._suppressLogging) {\n        if (boundary.tag === ClassComponent) {\n          // The error is recoverable and was silenced.\n          // Ignore it and don't print the stack addendum.\n          // This is handy for testing error boundaries without noise.\n          return;\n        }\n        // The error is fatal. Since the silencing might have\n        // been accidental, we'll surface it anyway.\n        // However, the browser would have silenced the original error\n        // so we'll print it first, and then print the stack addendum.\n        console['error'](error); // Don't transform to our wrapper\n        // For a more detailed description of this block, see:\n        // https://github.com/facebook/react/pull/13384\n      }\n\n      const componentName = source ? getComponentName(source.type) : null;\n      const componentNameMessage = componentName\n        ? `The above error occurred in the <${componentName}> component:`\n        : 'The above error occurred in one of your React components:';\n\n      let errorBoundaryMessage;\n      const errorBoundaryName = getComponentName(boundary.type);\n      if (errorBoundaryName) {\n        errorBoundaryMessage =\n          `React will try to recreate this component tree from scratch ` +\n          `using the error boundary you provided, ${errorBoundaryName}.`;\n      } else {\n        errorBoundaryMessage =\n          'Consider adding an error boundary to your tree to customize error handling behavior.\\n' +\n          'Visit https://reactjs.org/link/error-boundaries to learn more about error boundaries.';\n      }\n      const combinedMessage =\n        `${componentNameMessage}\\n${componentStack}\\n\\n` +\n        `${errorBoundaryMessage}`;\n\n      // In development, we provide our own message with just the component stack.\n      // We don't include the original error message and JS stack because the browser\n      // has already printed it. Even if the application swallows the error, it is still\n      // displayed by the browser thanks to the DEV-only fake event trick in ReactErrorUtils.\n      console['error'](combinedMessage); // Don't transform to our wrapper\n    } else {\n      // In production, we print the error directly.\n      // This will include the message, the JS stack, and anything the browser wants to show.\n      // We pass the error object instead of custom message so that the browser displays the error natively.\n      console['error'](error); // Don't transform to our wrapper\n    }\n  } catch (e) {\n    // This method must not throw, or React internal state will get messed up.\n    // If console.error is overridden, or logCapturedError() shows a dialog that throws,\n    // we want to report this error outside of the normal stack as a last resort.\n    // https://github.com/facebook/react/issues/13188\n    setTimeout(() => {\n      throw e;\n    });\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactInternalTypes';\nimport type {FiberRoot} from './ReactInternalTypes';\nimport type {Lane, Lanes} from './ReactFiberLane';\nimport type {CapturedValue} from './ReactCapturedValue';\nimport type {Update} from './ReactUpdateQueue.old';\nimport type {Wakeable} from 'shared/ReactTypes';\nimport type {SuspenseContext} from './ReactFiberSuspenseContext.old';\n\nimport getComponentName from 'shared/getComponentName';\nimport {\n  ClassComponent,\n  HostRoot,\n  SuspenseComponent,\n  IncompleteClassComponent,\n} from './ReactWorkTags';\nimport {\n  DidCapture,\n  Incomplete,\n  NoFlags,\n  ShouldCapture,\n  LifecycleEffectMask,\n  ForceUpdateForLegacySuspense,\n} from './ReactFiberFlags';\nimport {shouldCaptureSuspense} from './ReactFiberSuspenseComponent.old';\nimport {NoMode, BlockingMode, DebugTracingMode} from './ReactTypeOfMode';\nimport {\n  enableDebugTracing,\n  enableSchedulingProfiler,\n} from 'shared/ReactFeatureFlags';\nimport {createCapturedValue} from './ReactCapturedValue';\nimport {\n  enqueueCapturedUpdate,\n  createUpdate,\n  CaptureUpdate,\n  ForceUpdate,\n  enqueueUpdate,\n} from './ReactUpdateQueue.old';\nimport {markFailedErrorBoundaryForHotReloading} from './ReactFiberHotReloading.old';\nimport {\n  suspenseStackCursor,\n  InvisibleParentSuspenseContext,\n  hasSuspenseContext,\n} from './ReactFiberSuspenseContext.old';\nimport {\n  renderDidError,\n  onUncaughtError,\n  markLegacyErrorBoundaryAsFailed,\n  isAlreadyFailedLegacyErrorBoundary,\n  pingSuspendedRoot,\n} from './ReactFiberWorkLoop.old';\nimport {logCapturedError} from './ReactFiberErrorLogger';\nimport {logComponentSuspended} from './DebugTracing';\nimport {markComponentSuspended} from './SchedulingProfiler';\n\nimport {\n  SyncLane,\n  NoTimestamp,\n  includesSomeLane,\n  mergeLanes,\n  pickArbitraryLane,\n} from './ReactFiberLane';\n\nconst PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\n\nfunction createRootErrorUpdate(\n  fiber: Fiber,\n  errorInfo: CapturedValue<mixed>,\n  lane: Lane,\n): Update<mixed> {\n  const update = createUpdate(NoTimestamp, lane);\n  // Unmount the root by rendering null.\n  update.tag = CaptureUpdate;\n  // Caution: React DevTools currently depends on this property\n  // being called \"element\".\n  update.payload = {element: null};\n  const error = errorInfo.value;\n  update.callback = () => {\n    onUncaughtError(error);\n    logCapturedError(fiber, errorInfo);\n  };\n  return update;\n}\n\nfunction createClassErrorUpdate(\n  fiber: Fiber,\n  errorInfo: CapturedValue<mixed>,\n  lane: Lane,\n): Update<mixed> {\n  const update = createUpdate(NoTimestamp, lane);\n  update.tag = CaptureUpdate;\n  const getDerivedStateFromError = fiber.type.getDerivedStateFromError;\n  if (typeof getDerivedStateFromError === 'function') {\n    const error = errorInfo.value;\n    update.payload = () => {\n      logCapturedError(fiber, errorInfo);\n      return getDerivedStateFromError(error);\n    };\n  }\n\n  const inst = fiber.stateNode;\n  if (inst !== null && typeof inst.componentDidCatch === 'function') {\n    update.callback = function callback() {\n      if (__DEV__) {\n        markFailedErrorBoundaryForHotReloading(fiber);\n      }\n      if (typeof getDerivedStateFromError !== 'function') {\n        // To preserve the preexisting retry behavior of error boundaries,\n        // we keep track of which ones already failed during this batch.\n        // This gets reset before we yield back to the browser.\n        // TODO: Warn in strict mode if getDerivedStateFromError is\n        // not defined.\n        markLegacyErrorBoundaryAsFailed(this);\n\n        // Only log here if componentDidCatch is the only error boundary method defined\n        logCapturedError(fiber, errorInfo);\n      }\n      const error = errorInfo.value;\n      const stack = errorInfo.stack;\n      this.componentDidCatch(error, {\n        componentStack: stack !== null ? stack : '',\n      });\n      if (__DEV__) {\n        if (typeof getDerivedStateFromError !== 'function') {\n          // If componentDidCatch is the only error boundary method defined,\n          // then it needs to call setState to recover from errors.\n          // If no state update is scheduled then the boundary will swallow the error.\n          if (!includesSomeLane(fiber.lanes, (SyncLane: Lane))) {\n            console.error(\n              '%s: Error boundaries should implement getDerivedStateFromError(). ' +\n                'In that method, return a state update to display an error message or fallback UI.',\n              getComponentName(fiber.type) || 'Unknown',\n            );\n          }\n        }\n      }\n    };\n  } else if (__DEV__) {\n    update.callback = () => {\n      markFailedErrorBoundaryForHotReloading(fiber);\n    };\n  }\n  return update;\n}\n\nfunction attachPingListener(root: FiberRoot, wakeable: Wakeable, lanes: Lanes) {\n  // Attach a listener to the promise to \"ping\" the root and retry. But only if\n  // one does not already exist for the lanes we're currently rendering (which\n  // acts like a \"thread ID\" here).\n  let pingCache = root.pingCache;\n  let threadIDs;\n  if (pingCache === null) {\n    pingCache = root.pingCache = new PossiblyWeakMap();\n    threadIDs = new Set();\n    pingCache.set(wakeable, threadIDs);\n  } else {\n    threadIDs = pingCache.get(wakeable);\n    if (threadIDs === undefined) {\n      threadIDs = new Set();\n      pingCache.set(wakeable, threadIDs);\n    }\n  }\n  if (!threadIDs.has(lanes)) {\n    // Memoize using the thread ID to prevent redundant listeners.\n    threadIDs.add(lanes);\n    const ping = pingSuspendedRoot.bind(null, root, wakeable, lanes);\n    wakeable.then(ping, ping);\n  }\n}\n\nfunction throwException(\n  root: FiberRoot,\n  returnFiber: Fiber,\n  sourceFiber: Fiber,\n  value: mixed,\n  rootRenderLanes: Lanes,\n) {\n  // The source fiber did not complete.\n  sourceFiber.flags |= Incomplete;\n  // Its effect list is no longer valid.\n  sourceFiber.firstEffect = sourceFiber.lastEffect = null;\n\n  if (\n    value !== null &&\n    typeof value === 'object' &&\n    typeof value.then === 'function'\n  ) {\n    // This is a wakeable.\n    const wakeable: Wakeable = (value: any);\n\n    if (__DEV__) {\n      if (enableDebugTracing) {\n        if (sourceFiber.mode & DebugTracingMode) {\n          const name = getComponentName(sourceFiber.type) || 'Unknown';\n          logComponentSuspended(name, wakeable);\n        }\n      }\n    }\n\n    if (enableSchedulingProfiler) {\n      markComponentSuspended(sourceFiber, wakeable);\n    }\n\n    if ((sourceFiber.mode & BlockingMode) === NoMode) {\n      // Reset the memoizedState to what it was before we attempted\n      // to render it.\n      const currentSource = sourceFiber.alternate;\n      if (currentSource) {\n        sourceFiber.updateQueue = currentSource.updateQueue;\n        sourceFiber.memoizedState = currentSource.memoizedState;\n        sourceFiber.lanes = currentSource.lanes;\n      } else {\n        sourceFiber.updateQueue = null;\n        sourceFiber.memoizedState = null;\n      }\n    }\n\n    const hasInvisibleParentBoundary = hasSuspenseContext(\n      suspenseStackCursor.current,\n      (InvisibleParentSuspenseContext: SuspenseContext),\n    );\n\n    // Schedule the nearest Suspense to re-render the timed out view.\n    let workInProgress = returnFiber;\n    do {\n      if (\n        workInProgress.tag === SuspenseComponent &&\n        shouldCaptureSuspense(workInProgress, hasInvisibleParentBoundary)\n      ) {\n        // Found the nearest boundary.\n\n        // Stash the promise on the boundary fiber. If the boundary times out, we'll\n        // attach another listener to flip the boundary back to its normal state.\n        const wakeables: Set<Wakeable> = (workInProgress.updateQueue: any);\n        if (wakeables === null) {\n          const updateQueue = (new Set(): any);\n          updateQueue.add(wakeable);\n          workInProgress.updateQueue = updateQueue;\n        } else {\n          wakeables.add(wakeable);\n        }\n\n        // If the boundary is outside of blocking mode, we should *not*\n        // suspend the commit. Pretend as if the suspended component rendered\n        // null and keep rendering. In the commit phase, we'll schedule a\n        // subsequent synchronous update to re-render the Suspense.\n        //\n        // Note: It doesn't matter whether the component that suspended was\n        // inside a blocking mode tree. If the Suspense is outside of it, we\n        // should *not* suspend the commit.\n        if ((workInProgress.mode & BlockingMode) === NoMode) {\n          workInProgress.flags |= DidCapture;\n          sourceFiber.flags |= ForceUpdateForLegacySuspense;\n\n          // We're going to commit this fiber even though it didn't complete.\n          // But we shouldn't call any lifecycle methods or callbacks. Remove\n          // all lifecycle effect tags.\n          sourceFiber.flags &= ~(LifecycleEffectMask | Incomplete);\n\n          if (sourceFiber.tag === ClassComponent) {\n            const currentSourceFiber = sourceFiber.alternate;\n            if (currentSourceFiber === null) {\n              // This is a new mount. Change the tag so it's not mistaken for a\n              // completed class component. For example, we should not call\n              // componentWillUnmount if it is deleted.\n              sourceFiber.tag = IncompleteClassComponent;\n            } else {\n              // When we try rendering again, we should not reuse the current fiber,\n              // since it's known to be in an inconsistent state. Use a force update to\n              // prevent a bail out.\n              const update = createUpdate(NoTimestamp, SyncLane);\n              update.tag = ForceUpdate;\n              enqueueUpdate(sourceFiber, update);\n            }\n          }\n\n          // The source fiber did not complete. Mark it with Sync priority to\n          // indicate that it still has pending work.\n          sourceFiber.lanes = mergeLanes(sourceFiber.lanes, SyncLane);\n\n          // Exit without suspending.\n          return;\n        }\n\n        // Confirmed that the boundary is in a concurrent mode tree. Continue\n        // with the normal suspend path.\n        //\n        // After this we'll use a set of heuristics to determine whether this\n        // render pass will run to completion or restart or \"suspend\" the commit.\n        // The actual logic for this is spread out in different places.\n        //\n        // This first principle is that if we're going to suspend when we complete\n        // a root, then we should also restart if we get an update or ping that\n        // might unsuspend it, and vice versa. The only reason to suspend is\n        // because you think you might want to restart before committing. However,\n        // it doesn't make sense to restart only while in the period we're suspended.\n        //\n        // Restarting too aggressively is also not good because it starves out any\n        // intermediate loading state. So we use heuristics to determine when.\n\n        // Suspense Heuristics\n        //\n        // If nothing threw a Promise or all the same fallbacks are already showing,\n        // then don't suspend/restart.\n        //\n        // If this is an initial render of a new tree of Suspense boundaries and\n        // those trigger a fallback, then don't suspend/restart. We want to ensure\n        // that we can show the initial loading state as quickly as possible.\n        //\n        // If we hit a \"Delayed\" case, such as when we'd switch from content back into\n        // a fallback, then we should always suspend/restart. Transitions apply\n        // to this case. If none is defined, JND is used instead.\n        //\n        // If we're already showing a fallback and it gets \"retried\", allowing us to show\n        // another level, but there's still an inner boundary that would show a fallback,\n        // then we suspend/restart for 500ms since the last time we showed a fallback\n        // anywhere in the tree. This effectively throttles progressive loading into a\n        // consistent train of commits. This also gives us an opportunity to restart to\n        // get to the completed state slightly earlier.\n        //\n        // If there's ambiguity due to batching it's resolved in preference of:\n        // 1) \"delayed\", 2) \"initial render\", 3) \"retry\".\n        //\n        // We want to ensure that a \"busy\" state doesn't get force committed. We want to\n        // ensure that new initial loading states can commit as soon as possible.\n\n        attachPingListener(root, wakeable, rootRenderLanes);\n\n        workInProgress.flags |= ShouldCapture;\n        workInProgress.lanes = rootRenderLanes;\n\n        return;\n      }\n      // This boundary already captured during this render. Continue to the next\n      // boundary.\n      workInProgress = workInProgress.return;\n    } while (workInProgress !== null);\n    // No boundary was found. Fallthrough to error mode.\n    // TODO: Use invariant so the message is stripped in prod?\n    value = new Error(\n      (getComponentName(sourceFiber.type) || 'A React component') +\n        ' suspended while rendering, but no fallback UI was specified.\\n' +\n        '\\n' +\n        'Add a <Suspense fallback=...> component higher in the tree to ' +\n        'provide a loading indicator or placeholder to display.',\n    );\n  }\n\n  // We didn't find a boundary that could handle this type of exception. Start\n  // over and traverse parent path again, this time treating the exception\n  // as an error.\n  renderDidError();\n\n  value = createCapturedValue(value, sourceFiber);\n  let workInProgress = returnFiber;\n  do {\n    switch (workInProgress.tag) {\n      case HostRoot: {\n        const errorInfo = value;\n        workInProgress.flags |= ShouldCapture;\n        const lane = pickArbitraryLane(rootRenderLanes);\n        workInProgress.lanes = mergeLanes(workInProgress.lanes, lane);\n        const update = createRootErrorUpdate(workInProgress, errorInfo, lane);\n        enqueueCapturedUpdate(workInProgress, update);\n        return;\n      }\n      case ClassComponent:\n        // Capture and retry\n        const errorInfo = value;\n        const ctor = workInProgress.type;\n        const instance = workInProgress.stateNode;\n        if (\n          (workInProgress.flags & DidCapture) === NoFlags &&\n          (typeof ctor.getDerivedStateFromError === 'function' ||\n            (instance !== null &&\n              typeof instance.componentDidCatch === 'function' &&\n              !isAlreadyFailedLegacyErrorBoundary(instance)))\n        ) {\n          workInProgress.flags |= ShouldCapture;\n          const lane = pickArbitraryLane(rootRenderLanes);\n          workInProgress.lanes = mergeLanes(workInProgress.lanes, lane);\n          // Schedule the error boundary to re-render using updated state\n          const update = createClassErrorUpdate(\n            workInProgress,\n            errorInfo,\n            lane,\n          );\n          enqueueCapturedUpdate(workInProgress, update);\n          return;\n        }\n        break;\n      default:\n        break;\n    }\n    workInProgress = workInProgress.return;\n  } while (workInProgress !== null);\n}\n\nexport {throwException, createRootErrorUpdate, createClassErrorUpdate};\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport invariant from 'shared/invariant';\n\nfunction invokeGuardedCallbackProd<A, B, C, D, E, F, Context>(\n  name: string | null,\n  func: (a: A, b: B, c: C, d: D, e: E, f: F) => mixed,\n  context: Context,\n  a: A,\n  b: B,\n  c: C,\n  d: D,\n  e: E,\n  f: F,\n) {\n  const funcArgs = Array.prototype.slice.call(arguments, 3);\n  try {\n    func.apply(context, funcArgs);\n  } catch (error) {\n    this.onError(error);\n  }\n}\n\nlet invokeGuardedCallbackImpl = invokeGuardedCallbackProd;\n\nif (__DEV__) {\n  // In DEV mode, we swap out invokeGuardedCallback for a special version\n  // that plays more nicely with the browser's DevTools. The idea is to preserve\n  // \"Pause on exceptions\" behavior. Because React wraps all user-provided\n  // functions in invokeGuardedCallback, and the production version of\n  // invokeGuardedCallback uses a try-catch, all user exceptions are treated\n  // like caught exceptions, and the DevTools won't pause unless the developer\n  // takes the extra step of enabling pause on caught exceptions. This is\n  // unintuitive, though, because even though React has caught the error, from\n  // the developer's perspective, the error is uncaught.\n  //\n  // To preserve the expected \"Pause on exceptions\" behavior, we don't use a\n  // try-catch in DEV. Instead, we synchronously dispatch a fake event to a fake\n  // DOM node, and call the user-provided callback from inside an event handler\n  // for that fake event. If the callback throws, the error is \"captured\" using\n  // a global event handler. But because the error happens in a different\n  // event loop context, it does not interrupt the normal program flow.\n  // Effectively, this gives us try-catch behavior without actually using\n  // try-catch. Neat!\n\n  // Check that the browser supports the APIs we need to implement our special\n  // DEV version of invokeGuardedCallback\n  if (\n    typeof window !== 'undefined' &&\n    typeof window.dispatchEvent === 'function' &&\n    typeof document !== 'undefined' &&\n    typeof document.createEvent === 'function'\n  ) {\n    const fakeNode = document.createElement('react');\n\n    invokeGuardedCallbackImpl = function invokeGuardedCallbackDev<\n      A,\n      B,\n      C,\n      D,\n      E,\n      F,\n      Context,\n    >(\n      name: string | null,\n      func: (a: A, b: B, c: C, d: D, e: E, f: F) => mixed,\n      context: Context,\n      a: A,\n      b: B,\n      c: C,\n      d: D,\n      e: E,\n      f: F,\n    ) {\n      // If document doesn't exist we know for sure we will crash in this method\n      // when we call document.createEvent(). However this can cause confusing\n      // errors: https://github.com/facebookincubator/create-react-app/issues/3482\n      // So we preemptively throw with a better message instead.\n      invariant(\n        typeof document !== 'undefined',\n        'The `document` global was defined when React was initialized, but is not ' +\n          'defined anymore. This can happen in a test environment if a component ' +\n          'schedules an update from an asynchronous callback, but the test has already ' +\n          'finished running. To solve this, you can either unmount the component at ' +\n          'the end of your test (and ensure that any asynchronous operations get ' +\n          'canceled in `componentWillUnmount`), or you can change the test itself ' +\n          'to be asynchronous.',\n      );\n      const evt = document.createEvent('Event');\n\n      let didCall = false;\n      // Keeps track of whether the user-provided callback threw an error. We\n      // set this to true at the beginning, then set it to false right after\n      // calling the function. If the function errors, `didError` will never be\n      // set to false. This strategy works even if the browser is flaky and\n      // fails to call our global error handler, because it doesn't rely on\n      // the error event at all.\n      let didError = true;\n\n      // Keeps track of the value of window.event so that we can reset it\n      // during the callback to let user code access window.event in the\n      // browsers that support it.\n      const windowEvent = window.event;\n\n      // Keeps track of the descriptor of window.event to restore it after event\n      // dispatching: https://github.com/facebook/react/issues/13688\n      const windowEventDescriptor = Object.getOwnPropertyDescriptor(\n        window,\n        'event',\n      );\n\n      function restoreAfterDispatch() {\n        // We immediately remove the callback from event listeners so that\n        // nested `invokeGuardedCallback` calls do not clash. Otherwise, a\n        // nested call would trigger the fake event handlers of any call higher\n        // in the stack.\n        fakeNode.removeEventListener(evtType, callCallback, false);\n\n        // We check for window.hasOwnProperty('event') to prevent the\n        // window.event assignment in both IE <= 10 as they throw an error\n        // \"Member not found\" in strict mode, and in Firefox which does not\n        // support window.event.\n        if (\n          typeof window.event !== 'undefined' &&\n          window.hasOwnProperty('event')\n        ) {\n          window.event = windowEvent;\n        }\n      }\n\n      // Create an event handler for our fake event. We will synchronously\n      // dispatch our fake event using `dispatchEvent`. Inside the handler, we\n      // call the user-provided callback.\n      const funcArgs = Array.prototype.slice.call(arguments, 3);\n      function callCallback() {\n        didCall = true;\n        restoreAfterDispatch();\n        func.apply(context, funcArgs);\n        didError = false;\n      }\n\n      // Create a global error event handler. We use this to capture the value\n      // that was thrown. It's possible that this error handler will fire more\n      // than once; for example, if non-React code also calls `dispatchEvent`\n      // and a handler for that event throws. We should be resilient to most of\n      // those cases. Even if our error event handler fires more than once, the\n      // last error event is always used. If the callback actually does error,\n      // we know that the last error event is the correct one, because it's not\n      // possible for anything else to have happened in between our callback\n      // erroring and the code that follows the `dispatchEvent` call below. If\n      // the callback doesn't error, but the error event was fired, we know to\n      // ignore it because `didError` will be false, as described above.\n      let error;\n      // Use this to track whether the error event is ever called.\n      let didSetError = false;\n      let isCrossOriginError = false;\n\n      function handleWindowError(event) {\n        error = event.error;\n        didSetError = true;\n        if (error === null && event.colno === 0 && event.lineno === 0) {\n          isCrossOriginError = true;\n        }\n        if (event.defaultPrevented) {\n          // Some other error handler has prevented default.\n          // Browsers silence the error report if this happens.\n          // We'll remember this to later decide whether to log it or not.\n          if (error != null && typeof error === 'object') {\n            try {\n              error._suppressLogging = true;\n            } catch (inner) {\n              // Ignore.\n            }\n          }\n        }\n      }\n\n      // Create a fake event type.\n      const evtType = `react-${name ? name : 'invokeguardedcallback'}`;\n\n      // Attach our event handlers\n      window.addEventListener('error', handleWindowError);\n      fakeNode.addEventListener(evtType, callCallback, false);\n\n      // Synchronously dispatch our fake event. If the user-provided function\n      // errors, it will trigger our global error handler.\n      evt.initEvent(evtType, false, false);\n      fakeNode.dispatchEvent(evt);\n\n      if (windowEventDescriptor) {\n        Object.defineProperty(window, 'event', windowEventDescriptor);\n      }\n\n      if (didCall && didError) {\n        if (!didSetError) {\n          // The callback errored, but the error event never fired.\n          error = new Error(\n            'An error was thrown inside one of your components, but React ' +\n              \"doesn't know what it was. This is likely due to browser \" +\n              'flakiness. React does its best to preserve the \"Pause on ' +\n              'exceptions\" behavior of the DevTools, which requires some ' +\n              \"DEV-mode only tricks. It's possible that these don't work in \" +\n              'your browser. Try triggering the error in production mode, ' +\n              'or switching to a modern browser. If you suspect that this is ' +\n              'actually an issue with React, please file an issue.',\n          );\n        } else if (isCrossOriginError) {\n          error = new Error(\n            \"A cross-origin error was thrown. React doesn't have access to \" +\n              'the actual error object in development. ' +\n              'See https://reactjs.org/link/crossorigin-error for more information.',\n          );\n        }\n        this.onError(error);\n      }\n\n      // Remove our event listeners\n      window.removeEventListener('error', handleWindowError);\n\n      if (!didCall) {\n        // Something went really wrong, and our event was not dispatched.\n        // https://github.com/facebook/react/issues/16734\n        // https://github.com/facebook/react/issues/16585\n        // Fall back to the production implementation.\n        restoreAfterDispatch();\n        return invokeGuardedCallbackProd.apply(this, arguments);\n      }\n    };\n  }\n}\n\nexport default invokeGuardedCallbackImpl;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport invariant from 'shared/invariant';\nimport invokeGuardedCallbackImpl from './invokeGuardedCallbackImpl';\n\n// Used by Fiber to simulate a try-catch.\nlet hasError: boolean = false;\nlet caughtError: mixed = null;\n\n// Used by event system to capture/rethrow the first error.\nlet hasRethrowError: boolean = false;\nlet rethrowError: mixed = null;\n\nconst reporter = {\n  onError(error: mixed) {\n    hasError = true;\n    caughtError = error;\n  },\n};\n\n/**\n * Call a function while guarding against errors that happens within it.\n * Returns an error if it throws, otherwise null.\n *\n * In production, this is implemented using a try-catch. The reason we don't\n * use a try-catch directly is so that we can swap out a different\n * implementation in DEV mode.\n *\n * @param {String} name of the guard to use for logging or debugging\n * @param {Function} func The function to invoke\n * @param {*} context The context to use when calling the function\n * @param {...*} args Arguments for function\n */\nexport function invokeGuardedCallback<A, B, C, D, E, F, Context>(\n  name: string | null,\n  func: (a: A, b: B, c: C, d: D, e: E, f: F) => mixed,\n  context: Context,\n  a: A,\n  b: B,\n  c: C,\n  d: D,\n  e: E,\n  f: F,\n): void {\n  hasError = false;\n  caughtError = null;\n  invokeGuardedCallbackImpl.apply(reporter, arguments);\n}\n\n/**\n * Same as invokeGuardedCallback, but instead of returning an error, it stores\n * it in a global so it can be rethrown by `rethrowCaughtError` later.\n * TODO: See if caughtError and rethrowError can be unified.\n *\n * @param {String} name of the guard to use for logging or debugging\n * @param {Function} func The function to invoke\n * @param {*} context The context to use when calling the function\n * @param {...*} args Arguments for function\n */\nexport function invokeGuardedCallbackAndCatchFirstError<\n  A,\n  B,\n  C,\n  D,\n  E,\n  F,\n  Context,\n>(\n  name: string | null,\n  func: (a: A, b: B, c: C, d: D, e: E, f: F) => void,\n  context: Context,\n  a: A,\n  b: B,\n  c: C,\n  d: D,\n  e: E,\n  f: F,\n): void {\n  invokeGuardedCallback.apply(this, arguments);\n  if (hasError) {\n    const error = clearCaughtError();\n    if (!hasRethrowError) {\n      hasRethrowError = true;\n      rethrowError = error;\n    }\n  }\n}\n\n/**\n * During execution of guarded functions we will capture the first error which\n * we will rethrow to be handled by the top level error handler.\n */\nexport function rethrowCaughtError() {\n  if (hasRethrowError) {\n    const error = rethrowError;\n    hasRethrowError = false;\n    rethrowError = null;\n    throw error;\n  }\n}\n\nexport function hasCaughtError() {\n  return hasError;\n}\n\nexport function clearCaughtError() {\n  if (hasError) {\n    const error = caughtError;\n    hasError = false;\n    caughtError = null;\n    return error;\n  } else {\n    invariant(\n      false,\n      'clearCaughtError was called but no error was captured. This error ' +\n        'is likely caused by a bug in React. Please file an issue.',\n    );\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {\n  Instance,\n  TextInstance,\n  SuspenseInstance,\n  Container,\n  ChildSet,\n  UpdatePayload,\n} from './ReactFiberHostConfig';\nimport type {Fiber} from './ReactInternalTypes';\nimport type {FiberRoot} from './ReactInternalTypes';\nimport type {Lanes} from './ReactFiberLane';\nimport type {SuspenseState} from './ReactFiberSuspenseComponent.old';\nimport type {UpdateQueue} from './ReactUpdateQueue.old';\nimport type {FunctionComponentUpdateQueue} from './ReactFiberHooks.old';\nimport type {Wakeable} from 'shared/ReactTypes';\nimport type {ReactPriorityLevel} from './ReactInternalTypes';\nimport type {OffscreenState} from './ReactFiberOffscreenComponent';\n\nimport {unstable_wrap as Schedule_tracing_wrap} from 'scheduler/tracing';\nimport {\n  enableSchedulerTracing,\n  enableProfilerTimer,\n  enableProfilerCommitHooks,\n  enableSuspenseServerRenderer,\n  enableFundamentalAPI,\n  enableSuspenseCallback,\n  enableScopeAPI,\n} from 'shared/ReactFeatureFlags';\nimport {\n  FunctionComponent,\n  ForwardRef,\n  ClassComponent,\n  HostRoot,\n  HostComponent,\n  HostText,\n  HostPortal,\n  Profiler,\n  SuspenseComponent,\n  DehydratedFragment,\n  IncompleteClassComponent,\n  MemoComponent,\n  SimpleMemoComponent,\n  SuspenseListComponent,\n  FundamentalComponent,\n  ScopeComponent,\n  Block,\n  OffscreenComponent,\n  LegacyHiddenComponent,\n} from './ReactWorkTags';\nimport {\n  invokeGuardedCallback,\n  hasCaughtError,\n  clearCaughtError,\n} from 'shared/ReactErrorUtils';\nimport {\n  NoFlags,\n  ContentReset,\n  Placement,\n  Snapshot,\n  Update,\n} from './ReactFiberFlags';\nimport getComponentName from 'shared/getComponentName';\nimport invariant from 'shared/invariant';\n\nimport {onCommitUnmount} from './ReactFiberDevToolsHook.old';\nimport {resolveDefaultProps} from './ReactFiberLazyComponent.old';\nimport {\n  getCommitTime,\n  recordLayoutEffectDuration,\n  startLayoutEffectTimer,\n} from './ReactProfilerTimer.old';\nimport {ProfileMode} from './ReactTypeOfMode';\nimport {commitUpdateQueue} from './ReactUpdateQueue.old';\nimport {\n  getPublicInstance,\n  supportsMutation,\n  supportsPersistence,\n  supportsHydration,\n  commitMount,\n  commitUpdate,\n  resetTextContent,\n  commitTextUpdate,\n  appendChild,\n  appendChildToContainer,\n  insertBefore,\n  insertInContainerBefore,\n  removeChild,\n  removeChildFromContainer,\n  clearSuspenseBoundary,\n  clearSuspenseBoundaryFromContainer,\n  replaceContainerChildren,\n  createContainerChildSet,\n  hideInstance,\n  hideTextInstance,\n  unhideInstance,\n  unhideTextInstance,\n  unmountFundamentalComponent,\n  updateFundamentalComponent,\n  commitHydratedContainer,\n  commitHydratedSuspenseInstance,\n  clearContainer,\n  prepareScopeUpdate,\n} from './ReactFiberHostConfig';\nimport {\n  captureCommitPhaseError,\n  resolveRetryWakeable,\n  markCommitTimeOfFallback,\n  enqueuePendingPassiveHookEffectMount,\n  enqueuePendingPassiveHookEffectUnmount,\n  enqueuePendingPassiveProfilerEffect,\n} from './ReactFiberWorkLoop.old';\nimport {\n  NoFlags as NoHookEffect,\n  HasEffect as HookHasEffect,\n  Layout as HookLayout,\n  Passive as HookPassive,\n} from './ReactHookEffectTags';\nimport {didWarnAboutReassigningProps} from './ReactFiberBeginWork.old';\n\nlet didWarnAboutUndefinedSnapshotBeforeUpdate: Set<mixed> | null = null;\nif (__DEV__) {\n  didWarnAboutUndefinedSnapshotBeforeUpdate = new Set();\n}\n\nconst PossiblyWeakSet = typeof WeakSet === 'function' ? WeakSet : Set;\n\nconst callComponentWillUnmountWithTimer = function(current, instance) {\n  instance.props = current.memoizedProps;\n  instance.state = current.memoizedState;\n  if (\n    enableProfilerTimer &&\n    enableProfilerCommitHooks &&\n    current.mode & ProfileMode\n  ) {\n    try {\n      startLayoutEffectTimer();\n      instance.componentWillUnmount();\n    } finally {\n      recordLayoutEffectDuration(current);\n    }\n  } else {\n    instance.componentWillUnmount();\n  }\n};\n\n// Capture errors so they don't interrupt unmounting.\nfunction safelyCallComponentWillUnmount(current: Fiber, instance: any) {\n  if (__DEV__) {\n    invokeGuardedCallback(\n      null,\n      callComponentWillUnmountWithTimer,\n      null,\n      current,\n      instance,\n    );\n    if (hasCaughtError()) {\n      const unmountError = clearCaughtError();\n      captureCommitPhaseError(current, unmountError);\n    }\n  } else {\n    try {\n      callComponentWillUnmountWithTimer(current, instance);\n    } catch (unmountError) {\n      captureCommitPhaseError(current, unmountError);\n    }\n  }\n}\n\nfunction safelyDetachRef(current: Fiber) {\n  const ref = current.ref;\n  if (ref !== null) {\n    if (typeof ref === 'function') {\n      if (__DEV__) {\n        invokeGuardedCallback(null, ref, null, null);\n        if (hasCaughtError()) {\n          const refError = clearCaughtError();\n          captureCommitPhaseError(current, refError);\n        }\n      } else {\n        try {\n          ref(null);\n        } catch (refError) {\n          captureCommitPhaseError(current, refError);\n        }\n      }\n    } else {\n      ref.current = null;\n    }\n  }\n}\n\nfunction safelyCallDestroy(current: Fiber, destroy: () => void) {\n  if (__DEV__) {\n    invokeGuardedCallback(null, destroy, null);\n    if (hasCaughtError()) {\n      const error = clearCaughtError();\n      captureCommitPhaseError(current, error);\n    }\n  } else {\n    try {\n      destroy();\n    } catch (error) {\n      captureCommitPhaseError(current, error);\n    }\n  }\n}\n\nfunction commitBeforeMutationLifeCycles(\n  current: Fiber | null,\n  finishedWork: Fiber,\n): void {\n  switch (finishedWork.tag) {\n    case FunctionComponent:\n    case ForwardRef:\n    case SimpleMemoComponent:\n    case Block: {\n      return;\n    }\n    case ClassComponent: {\n      if (finishedWork.flags & Snapshot) {\n        if (current !== null) {\n          const prevProps = current.memoizedProps;\n          const prevState = current.memoizedState;\n          const instance = finishedWork.stateNode;\n          // We could update instance props and state here,\n          // but instead we rely on them being set during last render.\n          // TODO: revisit this when we implement resuming.\n          if (__DEV__) {\n            if (\n              finishedWork.type === finishedWork.elementType &&\n              !didWarnAboutReassigningProps\n            ) {\n              if (instance.props !== finishedWork.memoizedProps) {\n                console.error(\n                  'Expected %s props to match memoized props before ' +\n                    'getSnapshotBeforeUpdate. ' +\n                    'This might either be because of a bug in React, or because ' +\n                    'a component reassigns its own `this.props`. ' +\n                    'Please file an issue.',\n                  getComponentName(finishedWork.type) || 'instance',\n                );\n              }\n              if (instance.state !== finishedWork.memoizedState) {\n                console.error(\n                  'Expected %s state to match memoized state before ' +\n                    'getSnapshotBeforeUpdate. ' +\n                    'This might either be because of a bug in React, or because ' +\n                    'a component reassigns its own `this.state`. ' +\n                    'Please file an issue.',\n                  getComponentName(finishedWork.type) || 'instance',\n                );\n              }\n            }\n          }\n          const snapshot = instance.getSnapshotBeforeUpdate(\n            finishedWork.elementType === finishedWork.type\n              ? prevProps\n              : resolveDefaultProps(finishedWork.type, prevProps),\n            prevState,\n          );\n          if (__DEV__) {\n            const didWarnSet = ((didWarnAboutUndefinedSnapshotBeforeUpdate: any): Set<mixed>);\n            if (snapshot === undefined && !didWarnSet.has(finishedWork.type)) {\n              didWarnSet.add(finishedWork.type);\n              console.error(\n                '%s.getSnapshotBeforeUpdate(): A snapshot value (or null) ' +\n                  'must be returned. You have returned undefined.',\n                getComponentName(finishedWork.type),\n              );\n            }\n          }\n          instance.__reactInternalSnapshotBeforeUpdate = snapshot;\n        }\n      }\n      return;\n    }\n    case HostRoot: {\n      if (supportsMutation) {\n        if (finishedWork.flags & Snapshot) {\n          const root = finishedWork.stateNode;\n          clearContainer(root.containerInfo);\n        }\n      }\n      return;\n    }\n    case HostComponent:\n    case HostText:\n    case HostPortal:\n    case IncompleteClassComponent:\n      // Nothing to do for these component types\n      return;\n  }\n  invariant(\n    false,\n    'This unit of work tag should not have side-effects. This error is ' +\n      'likely caused by a bug in React. Please file an issue.',\n  );\n}\n\nfunction commitHookEffectListUnmount(tag: number, finishedWork: Fiber) {\n  const updateQueue: FunctionComponentUpdateQueue | null = (finishedWork.updateQueue: any);\n  const lastEffect = updateQueue !== null ? updateQueue.lastEffect : null;\n  if (lastEffect !== null) {\n    const firstEffect = lastEffect.next;\n    let effect = firstEffect;\n    do {\n      if ((effect.tag & tag) === tag) {\n        // Unmount\n        const destroy = effect.destroy;\n        effect.destroy = undefined;\n        if (destroy !== undefined) {\n          destroy();\n        }\n      }\n      effect = effect.next;\n    } while (effect !== firstEffect);\n  }\n}\n\nfunction commitHookEffectListMount(tag: number, finishedWork: Fiber) {\n  const updateQueue: FunctionComponentUpdateQueue | null = (finishedWork.updateQueue: any);\n  const lastEffect = updateQueue !== null ? updateQueue.lastEffect : null;\n  if (lastEffect !== null) {\n    const firstEffect = lastEffect.next;\n    let effect = firstEffect;\n    do {\n      if ((effect.tag & tag) === tag) {\n        // Mount\n        const create = effect.create;\n        effect.destroy = create();\n\n        if (__DEV__) {\n          const destroy = effect.destroy;\n          if (destroy !== undefined && typeof destroy !== 'function') {\n            let addendum;\n            if (destroy === null) {\n              addendum =\n                ' You returned null. If your effect does not require clean ' +\n                'up, return undefined (or nothing).';\n            } else if (typeof destroy.then === 'function') {\n              addendum =\n                '\\n\\nIt looks like you wrote useEffect(async () => ...) or returned a Promise. ' +\n                'Instead, write the async function inside your effect ' +\n                'and call it immediately:\\n\\n' +\n                'useEffect(() => {\\n' +\n                '  async function fetchData() {\\n' +\n                '    // You can await here\\n' +\n                '    const response = await MyAPI.getData(someId);\\n' +\n                '    // ...\\n' +\n                '  }\\n' +\n                '  fetchData();\\n' +\n                `}, [someId]); // Or [] if effect doesn't need props or state\\n\\n` +\n                'Learn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching';\n            } else {\n              addendum = ' You returned: ' + destroy;\n            }\n            console.error(\n              'An effect function must not return anything besides a function, ' +\n                'which is used for clean-up.%s',\n              addendum,\n            );\n          }\n        }\n      }\n      effect = effect.next;\n    } while (effect !== firstEffect);\n  }\n}\n\nfunction schedulePassiveEffects(finishedWork: Fiber) {\n  const updateQueue: FunctionComponentUpdateQueue | null = (finishedWork.updateQueue: any);\n  const lastEffect = updateQueue !== null ? updateQueue.lastEffect : null;\n  if (lastEffect !== null) {\n    const firstEffect = lastEffect.next;\n    let effect = firstEffect;\n    do {\n      const {next, tag} = effect;\n      if (\n        (tag & HookPassive) !== NoHookEffect &&\n        (tag & HookHasEffect) !== NoHookEffect\n      ) {\n        enqueuePendingPassiveHookEffectUnmount(finishedWork, effect);\n        enqueuePendingPassiveHookEffectMount(finishedWork, effect);\n      }\n      effect = next;\n    } while (effect !== firstEffect);\n  }\n}\n\nexport function commitPassiveEffectDurations(\n  finishedRoot: FiberRoot,\n  finishedWork: Fiber,\n): void {\n  if (enableProfilerTimer && enableProfilerCommitHooks) {\n    // Only Profilers with work in their subtree will have an Update effect scheduled.\n    if ((finishedWork.flags & Update) !== NoFlags) {\n      switch (finishedWork.tag) {\n        case Profiler: {\n          const {passiveEffectDuration} = finishedWork.stateNode;\n          const {id, onPostCommit} = finishedWork.memoizedProps;\n\n          // This value will still reflect the previous commit phase.\n          // It does not get reset until the start of the next commit phase.\n          const commitTime = getCommitTime();\n\n          if (typeof onPostCommit === 'function') {\n            if (enableSchedulerTracing) {\n              onPostCommit(\n                id,\n                finishedWork.alternate === null ? 'mount' : 'update',\n                passiveEffectDuration,\n                commitTime,\n                finishedRoot.memoizedInteractions,\n              );\n            } else {\n              onPostCommit(\n                id,\n                finishedWork.alternate === null ? 'mount' : 'update',\n                passiveEffectDuration,\n                commitTime,\n              );\n            }\n          }\n\n          // Bubble times to the next nearest ancestor Profiler.\n          // After we process that Profiler, we'll bubble further up.\n          let parentFiber = finishedWork.return;\n          while (parentFiber !== null) {\n            if (parentFiber.tag === Profiler) {\n              const parentStateNode = parentFiber.stateNode;\n              parentStateNode.passiveEffectDuration += passiveEffectDuration;\n              break;\n            }\n            parentFiber = parentFiber.return;\n          }\n          break;\n        }\n        default:\n          break;\n      }\n    }\n  }\n}\n\nfunction commitLifeCycles(\n  finishedRoot: FiberRoot,\n  current: Fiber | null,\n  finishedWork: Fiber,\n  committedLanes: Lanes,\n): void {\n  switch (finishedWork.tag) {\n    case FunctionComponent:\n    case ForwardRef:\n    case SimpleMemoComponent:\n    case Block: {\n      // At this point layout effects have already been destroyed (during mutation phase).\n      // This is done to prevent sibling component effects from interfering with each other,\n      // e.g. a destroy function in one component should never override a ref set\n      // by a create function in another component during the same commit.\n      if (\n        enableProfilerTimer &&\n        enableProfilerCommitHooks &&\n        finishedWork.mode & ProfileMode\n      ) {\n        try {\n          startLayoutEffectTimer();\n          commitHookEffectListMount(HookLayout | HookHasEffect, finishedWork);\n        } finally {\n          recordLayoutEffectDuration(finishedWork);\n        }\n      } else {\n        commitHookEffectListMount(HookLayout | HookHasEffect, finishedWork);\n      }\n\n      schedulePassiveEffects(finishedWork);\n      return;\n    }\n    case ClassComponent: {\n      const instance = finishedWork.stateNode;\n      if (finishedWork.flags & Update) {\n        if (current === null) {\n          // We could update instance props and state here,\n          // but instead we rely on them being set during last render.\n          // TODO: revisit this when we implement resuming.\n          if (__DEV__) {\n            if (\n              finishedWork.type === finishedWork.elementType &&\n              !didWarnAboutReassigningProps\n            ) {\n              if (instance.props !== finishedWork.memoizedProps) {\n                console.error(\n                  'Expected %s props to match memoized props before ' +\n                    'componentDidMount. ' +\n                    'This might either be because of a bug in React, or because ' +\n                    'a component reassigns its own `this.props`. ' +\n                    'Please file an issue.',\n                  getComponentName(finishedWork.type) || 'instance',\n                );\n              }\n              if (instance.state !== finishedWork.memoizedState) {\n                console.error(\n                  'Expected %s state to match memoized state before ' +\n                    'componentDidMount. ' +\n                    'This might either be because of a bug in React, or because ' +\n                    'a component reassigns its own `this.state`. ' +\n                    'Please file an issue.',\n                  getComponentName(finishedWork.type) || 'instance',\n                );\n              }\n            }\n          }\n          if (\n            enableProfilerTimer &&\n            enableProfilerCommitHooks &&\n            finishedWork.mode & ProfileMode\n          ) {\n            try {\n              startLayoutEffectTimer();\n              instance.componentDidMount();\n            } finally {\n              recordLayoutEffectDuration(finishedWork);\n            }\n          } else {\n            instance.componentDidMount();\n          }\n        } else {\n          const prevProps =\n            finishedWork.elementType === finishedWork.type\n              ? current.memoizedProps\n              : resolveDefaultProps(finishedWork.type, current.memoizedProps);\n          const prevState = current.memoizedState;\n          // We could update instance props and state here,\n          // but instead we rely on them being set during last render.\n          // TODO: revisit this when we implement resuming.\n          if (__DEV__) {\n            if (\n              finishedWork.type === finishedWork.elementType &&\n              !didWarnAboutReassigningProps\n            ) {\n              if (instance.props !== finishedWork.memoizedProps) {\n                console.error(\n                  'Expected %s props to match memoized props before ' +\n                    'componentDidUpdate. ' +\n                    'This might either be because of a bug in React, or because ' +\n                    'a component reassigns its own `this.props`. ' +\n                    'Please file an issue.',\n                  getComponentName(finishedWork.type) || 'instance',\n                );\n              }\n              if (instance.state !== finishedWork.memoizedState) {\n                console.error(\n                  'Expected %s state to match memoized state before ' +\n                    'componentDidUpdate. ' +\n                    'This might either be because of a bug in React, or because ' +\n                    'a component reassigns its own `this.state`. ' +\n                    'Please file an issue.',\n                  getComponentName(finishedWork.type) || 'instance',\n                );\n              }\n            }\n          }\n          if (\n            enableProfilerTimer &&\n            enableProfilerCommitHooks &&\n            finishedWork.mode & ProfileMode\n          ) {\n            try {\n              startLayoutEffectTimer();\n              instance.componentDidUpdate(\n                prevProps,\n                prevState,\n                instance.__reactInternalSnapshotBeforeUpdate,\n              );\n            } finally {\n              recordLayoutEffectDuration(finishedWork);\n            }\n          } else {\n            instance.componentDidUpdate(\n              prevProps,\n              prevState,\n              instance.__reactInternalSnapshotBeforeUpdate,\n            );\n          }\n        }\n      }\n\n      // TODO: I think this is now always non-null by the time it reaches the\n      // commit phase. Consider removing the type check.\n      const updateQueue: UpdateQueue<\n        *,\n      > | null = (finishedWork.updateQueue: any);\n      if (updateQueue !== null) {\n        if (__DEV__) {\n          if (\n            finishedWork.type === finishedWork.elementType &&\n            !didWarnAboutReassigningProps\n          ) {\n            if (instance.props !== finishedWork.memoizedProps) {\n              console.error(\n                'Expected %s props to match memoized props before ' +\n                  'processing the update queue. ' +\n                  'This might either be because of a bug in React, or because ' +\n                  'a component reassigns its own `this.props`. ' +\n                  'Please file an issue.',\n                getComponentName(finishedWork.type) || 'instance',\n              );\n            }\n            if (instance.state !== finishedWork.memoizedState) {\n              console.error(\n                'Expected %s state to match memoized state before ' +\n                  'processing the update queue. ' +\n                  'This might either be because of a bug in React, or because ' +\n                  'a component reassigns its own `this.state`. ' +\n                  'Please file an issue.',\n                getComponentName(finishedWork.type) || 'instance',\n              );\n            }\n          }\n        }\n        // We could update instance props and state here,\n        // but instead we rely on them being set during last render.\n        // TODO: revisit this when we implement resuming.\n        commitUpdateQueue(finishedWork, updateQueue, instance);\n      }\n      return;\n    }\n    case HostRoot: {\n      // TODO: I think this is now always non-null by the time it reaches the\n      // commit phase. Consider removing the type check.\n      const updateQueue: UpdateQueue<\n        *,\n      > | null = (finishedWork.updateQueue: any);\n      if (updateQueue !== null) {\n        let instance = null;\n        if (finishedWork.child !== null) {\n          switch (finishedWork.child.tag) {\n            case HostComponent:\n              instance = getPublicInstance(finishedWork.child.stateNode);\n              break;\n            case ClassComponent:\n              instance = finishedWork.child.stateNode;\n              break;\n          }\n        }\n        commitUpdateQueue(finishedWork, updateQueue, instance);\n      }\n      return;\n    }\n    case HostComponent: {\n      const instance: Instance = finishedWork.stateNode;\n\n      // Renderers may schedule work to be done after host components are mounted\n      // (eg DOM renderer may schedule auto-focus for inputs and form controls).\n      // These effects should only be committed when components are first mounted,\n      // aka when there is no current/alternate.\n      if (current === null && finishedWork.flags & Update) {\n        const type = finishedWork.type;\n        const props = finishedWork.memoizedProps;\n        commitMount(instance, type, props, finishedWork);\n      }\n\n      return;\n    }\n    case HostText: {\n      // We have no life-cycles associated with text.\n      return;\n    }\n    case HostPortal: {\n      // We have no life-cycles associated with portals.\n      return;\n    }\n    case Profiler: {\n      if (enableProfilerTimer) {\n        const {onCommit, onRender} = finishedWork.memoizedProps;\n        const {effectDuration} = finishedWork.stateNode;\n\n        const commitTime = getCommitTime();\n\n        if (typeof onRender === 'function') {\n          if (enableSchedulerTracing) {\n            onRender(\n              finishedWork.memoizedProps.id,\n              current === null ? 'mount' : 'update',\n              finishedWork.actualDuration,\n              finishedWork.treeBaseDuration,\n              finishedWork.actualStartTime,\n              commitTime,\n              finishedRoot.memoizedInteractions,\n            );\n          } else {\n            onRender(\n              finishedWork.memoizedProps.id,\n              current === null ? 'mount' : 'update',\n              finishedWork.actualDuration,\n              finishedWork.treeBaseDuration,\n              finishedWork.actualStartTime,\n              commitTime,\n            );\n          }\n        }\n\n        if (enableProfilerCommitHooks) {\n          if (typeof onCommit === 'function') {\n            if (enableSchedulerTracing) {\n              onCommit(\n                finishedWork.memoizedProps.id,\n                current === null ? 'mount' : 'update',\n                effectDuration,\n                commitTime,\n                finishedRoot.memoizedInteractions,\n              );\n            } else {\n              onCommit(\n                finishedWork.memoizedProps.id,\n                current === null ? 'mount' : 'update',\n                effectDuration,\n                commitTime,\n              );\n            }\n          }\n\n          // Schedule a passive effect for this Profiler to call onPostCommit hooks.\n          // This effect should be scheduled even if there is no onPostCommit callback for this Profiler,\n          // because the effect is also where times bubble to parent Profilers.\n          enqueuePendingPassiveProfilerEffect(finishedWork);\n\n          // Propagate layout effect durations to the next nearest Profiler ancestor.\n          // Do not reset these values until the next render so DevTools has a chance to read them first.\n          let parentFiber = finishedWork.return;\n          while (parentFiber !== null) {\n            if (parentFiber.tag === Profiler) {\n              const parentStateNode = parentFiber.stateNode;\n              parentStateNode.effectDuration += effectDuration;\n              break;\n            }\n            parentFiber = parentFiber.return;\n          }\n        }\n      }\n      return;\n    }\n    case SuspenseComponent: {\n      commitSuspenseHydrationCallbacks(finishedRoot, finishedWork);\n      return;\n    }\n    case SuspenseListComponent:\n    case IncompleteClassComponent:\n    case FundamentalComponent:\n    case ScopeComponent:\n    case OffscreenComponent:\n    case LegacyHiddenComponent:\n      return;\n  }\n  invariant(\n    false,\n    'This unit of work tag should not have side-effects. This error is ' +\n      'likely caused by a bug in React. Please file an issue.',\n  );\n}\n\nfunction hideOrUnhideAllChildren(finishedWork, isHidden) {\n  if (supportsMutation) {\n    // We only have the top Fiber that was inserted but we need to recurse down its\n    // children to find all the terminal nodes.\n    let node: Fiber = finishedWork;\n    while (true) {\n      if (node.tag === HostComponent) {\n        const instance = node.stateNode;\n        if (isHidden) {\n          hideInstance(instance);\n        } else {\n          unhideInstance(node.stateNode, node.memoizedProps);\n        }\n      } else if (node.tag === HostText) {\n        const instance = node.stateNode;\n        if (isHidden) {\n          hideTextInstance(instance);\n        } else {\n          unhideTextInstance(instance, node.memoizedProps);\n        }\n      } else if (\n        (node.tag === OffscreenComponent ||\n          node.tag === LegacyHiddenComponent) &&\n        (node.memoizedState: OffscreenState) !== null &&\n        node !== finishedWork\n      ) {\n        // Found a nested Offscreen component that is hidden. Don't search\n        // any deeper. This tree should remain hidden.\n      } else if (node.child !== null) {\n        node.child.return = node;\n        node = node.child;\n        continue;\n      }\n      if (node === finishedWork) {\n        return;\n      }\n      while (node.sibling === null) {\n        if (node.return === null || node.return === finishedWork) {\n          return;\n        }\n        node = node.return;\n      }\n      node.sibling.return = node.return;\n      node = node.sibling;\n    }\n  }\n}\n\nfunction commitAttachRef(finishedWork: Fiber) {\n  const ref = finishedWork.ref;\n  if (ref !== null) {\n    const instance = finishedWork.stateNode;\n    let instanceToUse;\n    switch (finishedWork.tag) {\n      case HostComponent:\n        instanceToUse = getPublicInstance(instance);\n        break;\n      default:\n        instanceToUse = instance;\n    }\n    // Moved outside to ensure DCE works with this flag\n    if (enableScopeAPI && finishedWork.tag === ScopeComponent) {\n      instanceToUse = instance;\n    }\n    if (typeof ref === 'function') {\n      ref(instanceToUse);\n    } else {\n      if (__DEV__) {\n        if (!ref.hasOwnProperty('current')) {\n          console.error(\n            'Unexpected ref object provided for %s. ' +\n              'Use either a ref-setter function or React.createRef().',\n            getComponentName(finishedWork.type),\n          );\n        }\n      }\n\n      ref.current = instanceToUse;\n    }\n  }\n}\n\nfunction commitDetachRef(current: Fiber) {\n  const currentRef = current.ref;\n  if (currentRef !== null) {\n    if (typeof currentRef === 'function') {\n      currentRef(null);\n    } else {\n      currentRef.current = null;\n    }\n  }\n}\n\n// User-originating errors (lifecycles and refs) should not interrupt\n// deletion, so don't let them throw. Host-originating errors should\n// interrupt deletion, so it's okay\nfunction commitUnmount(\n  finishedRoot: FiberRoot,\n  current: Fiber,\n  renderPriorityLevel: ReactPriorityLevel,\n): void {\n  onCommitUnmount(current);\n\n  switch (current.tag) {\n    case FunctionComponent:\n    case ForwardRef:\n    case MemoComponent:\n    case SimpleMemoComponent:\n    case Block: {\n      const updateQueue: FunctionComponentUpdateQueue | null = (current.updateQueue: any);\n      if (updateQueue !== null) {\n        const lastEffect = updateQueue.lastEffect;\n        if (lastEffect !== null) {\n          const firstEffect = lastEffect.next;\n\n          let effect = firstEffect;\n          do {\n            const {destroy, tag} = effect;\n            if (destroy !== undefined) {\n              if ((tag & HookPassive) !== NoHookEffect) {\n                enqueuePendingPassiveHookEffectUnmount(current, effect);\n              } else {\n                if (\n                  enableProfilerTimer &&\n                  enableProfilerCommitHooks &&\n                  current.mode & ProfileMode\n                ) {\n                  startLayoutEffectTimer();\n                  safelyCallDestroy(current, destroy);\n                  recordLayoutEffectDuration(current);\n                } else {\n                  safelyCallDestroy(current, destroy);\n                }\n              }\n            }\n            effect = effect.next;\n          } while (effect !== firstEffect);\n        }\n      }\n      return;\n    }\n    case ClassComponent: {\n      safelyDetachRef(current);\n      const instance = current.stateNode;\n      if (typeof instance.componentWillUnmount === 'function') {\n        safelyCallComponentWillUnmount(current, instance);\n      }\n      return;\n    }\n    case HostComponent: {\n      safelyDetachRef(current);\n      return;\n    }\n    case HostPortal: {\n      // TODO: this is recursive.\n      // We are also not using this parent because\n      // the portal will get pushed immediately.\n      if (supportsMutation) {\n        unmountHostComponents(finishedRoot, current, renderPriorityLevel);\n      } else if (supportsPersistence) {\n        emptyPortalContainer(current);\n      }\n      return;\n    }\n    case FundamentalComponent: {\n      if (enableFundamentalAPI) {\n        const fundamentalInstance = current.stateNode;\n        if (fundamentalInstance !== null) {\n          unmountFundamentalComponent(fundamentalInstance);\n          current.stateNode = null;\n        }\n      }\n      return;\n    }\n    case DehydratedFragment: {\n      if (enableSuspenseCallback) {\n        const hydrationCallbacks = finishedRoot.hydrationCallbacks;\n        if (hydrationCallbacks !== null) {\n          const onDeleted = hydrationCallbacks.onDeleted;\n          if (onDeleted) {\n            onDeleted((current.stateNode: SuspenseInstance));\n          }\n        }\n      }\n      return;\n    }\n    case ScopeComponent: {\n      if (enableScopeAPI) {\n        safelyDetachRef(current);\n      }\n      return;\n    }\n  }\n}\n\nfunction commitNestedUnmounts(\n  finishedRoot: FiberRoot,\n  root: Fiber,\n  renderPriorityLevel: ReactPriorityLevel,\n): void {\n  // While we're inside a removed host node we don't want to call\n  // removeChild on the inner nodes because they're removed by the top\n  // call anyway. We also want to call componentWillUnmount on all\n  // composites before this host node is removed from the tree. Therefore\n  // we do an inner loop while we're still inside the host node.\n  let node: Fiber = root;\n  while (true) {\n    commitUnmount(finishedRoot, node, renderPriorityLevel);\n    // Visit children because they may contain more composite or host nodes.\n    // Skip portals because commitUnmount() currently visits them recursively.\n    if (\n      node.child !== null &&\n      // If we use mutation we drill down into portals using commitUnmount above.\n      // If we don't use mutation we drill down into portals here instead.\n      (!supportsMutation || node.tag !== HostPortal)\n    ) {\n      node.child.return = node;\n      node = node.child;\n      continue;\n    }\n    if (node === root) {\n      return;\n    }\n    while (node.sibling === null) {\n      if (node.return === null || node.return === root) {\n        return;\n      }\n      node = node.return;\n    }\n    node.sibling.return = node.return;\n    node = node.sibling;\n  }\n}\n\nfunction detachFiberMutation(fiber: Fiber) {\n  // Cut off the return pointers to disconnect it from the tree. Ideally, we\n  // should clear the child pointer of the parent alternate to let this\n  // get GC:ed but we don't know which for sure which parent is the current\n  // one so we'll settle for GC:ing the subtree of this child. This child\n  // itself will be GC:ed when the parent updates the next time.\n  // Note: we cannot null out sibling here, otherwise it can cause issues\n  // with findDOMNode and how it requires the sibling field to carry out\n  // traversal in a later effect. See PR #16820. We now clear the sibling\n  // field after effects, see: detachFiberAfterEffects.\n  //\n  // Don't disconnect stateNode now; it will be detached in detachFiberAfterEffects.\n  // It may be required if the current component is an error boundary,\n  // and one of its descendants throws while unmounting a passive effect.\n  fiber.alternate = null;\n  fiber.child = null;\n  fiber.dependencies = null;\n  fiber.firstEffect = null;\n  fiber.lastEffect = null;\n  fiber.memoizedProps = null;\n  fiber.memoizedState = null;\n  fiber.pendingProps = null;\n  fiber.return = null;\n  fiber.updateQueue = null;\n  if (__DEV__) {\n    fiber._debugOwner = null;\n  }\n}\n\nfunction emptyPortalContainer(current: Fiber) {\n  if (!supportsPersistence) {\n    return;\n  }\n\n  const portal: {\n    containerInfo: Container,\n    pendingChildren: ChildSet,\n    ...\n  } = current.stateNode;\n  const {containerInfo} = portal;\n  const emptyChildSet = createContainerChildSet(containerInfo);\n  replaceContainerChildren(containerInfo, emptyChildSet);\n}\n\nfunction commitContainer(finishedWork: Fiber) {\n  if (!supportsPersistence) {\n    return;\n  }\n\n  switch (finishedWork.tag) {\n    case ClassComponent:\n    case HostComponent:\n    case HostText:\n    case FundamentalComponent: {\n      return;\n    }\n    case HostRoot:\n    case HostPortal: {\n      const portalOrRoot: {\n        containerInfo: Container,\n        pendingChildren: ChildSet,\n        ...\n      } = finishedWork.stateNode;\n      const {containerInfo, pendingChildren} = portalOrRoot;\n      replaceContainerChildren(containerInfo, pendingChildren);\n      return;\n    }\n  }\n  invariant(\n    false,\n    'This unit of work tag should not have side-effects. This error is ' +\n      'likely caused by a bug in React. Please file an issue.',\n  );\n}\n\nfunction getHostParentFiber(fiber: Fiber): Fiber {\n  let parent = fiber.return;\n  while (parent !== null) {\n    if (isHostParent(parent)) {\n      return parent;\n    }\n    parent = parent.return;\n  }\n  invariant(\n    false,\n    'Expected to find a host parent. This error is likely caused by a bug ' +\n      'in React. Please file an issue.',\n  );\n}\n\nfunction isHostParent(fiber: Fiber): boolean {\n  return (\n    fiber.tag === HostComponent ||\n    fiber.tag === HostRoot ||\n    fiber.tag === HostPortal\n  );\n}\n\nfunction getHostSibling(fiber: Fiber): ?Instance {\n  // We're going to search forward into the tree until we find a sibling host\n  // node. Unfortunately, if multiple insertions are done in a row we have to\n  // search past them. This leads to exponential search for the next sibling.\n  // TODO: Find a more efficient way to do this.\n  let node: Fiber = fiber;\n  siblings: while (true) {\n    // If we didn't find anything, let's try the next sibling.\n    while (node.sibling === null) {\n      if (node.return === null || isHostParent(node.return)) {\n        // If we pop out of the root or hit the parent the fiber we are the\n        // last sibling.\n        return null;\n      }\n      node = node.return;\n    }\n    node.sibling.return = node.return;\n    node = node.sibling;\n    while (\n      node.tag !== HostComponent &&\n      node.tag !== HostText &&\n      node.tag !== DehydratedFragment\n    ) {\n      // If it is not host node and, we might have a host node inside it.\n      // Try to search down until we find one.\n      if (node.flags & Placement) {\n        // If we don't have a child, try the siblings instead.\n        continue siblings;\n      }\n      // If we don't have a child, try the siblings instead.\n      // We also skip portals because they are not part of this host tree.\n      if (node.child === null || node.tag === HostPortal) {\n        continue siblings;\n      } else {\n        node.child.return = node;\n        node = node.child;\n      }\n    }\n    // Check if this host node is stable or about to be placed.\n    if (!(node.flags & Placement)) {\n      // Found it!\n      return node.stateNode;\n    }\n  }\n}\n\nfunction commitPlacement(finishedWork: Fiber): void {\n  if (!supportsMutation) {\n    return;\n  }\n\n  // Recursively insert all host nodes into the parent.\n  const parentFiber = getHostParentFiber(finishedWork);\n\n  // Note: these two variables *must* always be updated together.\n  let parent;\n  let isContainer;\n  const parentStateNode = parentFiber.stateNode;\n  switch (parentFiber.tag) {\n    case HostComponent:\n      parent = parentStateNode;\n      isContainer = false;\n      break;\n    case HostRoot:\n      parent = parentStateNode.containerInfo;\n      isContainer = true;\n      break;\n    case HostPortal:\n      parent = parentStateNode.containerInfo;\n      isContainer = true;\n      break;\n    case FundamentalComponent:\n      if (enableFundamentalAPI) {\n        parent = parentStateNode.instance;\n        isContainer = false;\n      }\n    // eslint-disable-next-line-no-fallthrough\n    default:\n      invariant(\n        false,\n        'Invalid host parent fiber. This error is likely caused by a bug ' +\n          'in React. Please file an issue.',\n      );\n  }\n  if (parentFiber.flags & ContentReset) {\n    // Reset the text content of the parent before doing any insertions\n    resetTextContent(parent);\n    // Clear ContentReset from the effect tag\n    parentFiber.flags &= ~ContentReset;\n  }\n\n  const before = getHostSibling(finishedWork);\n  // We only have the top Fiber that was inserted but we need to recurse down its\n  // children to find all the terminal nodes.\n  if (isContainer) {\n    insertOrAppendPlacementNodeIntoContainer(finishedWork, before, parent);\n  } else {\n    insertOrAppendPlacementNode(finishedWork, before, parent);\n  }\n}\n\nfunction insertOrAppendPlacementNodeIntoContainer(\n  node: Fiber,\n  before: ?Instance,\n  parent: Container,\n): void {\n  const {tag} = node;\n  const isHost = tag === HostComponent || tag === HostText;\n  if (isHost || (enableFundamentalAPI && tag === FundamentalComponent)) {\n    const stateNode = isHost ? node.stateNode : node.stateNode.instance;\n    if (before) {\n      insertInContainerBefore(parent, stateNode, before);\n    } else {\n      appendChildToContainer(parent, stateNode);\n    }\n  } else if (tag === HostPortal) {\n    // If the insertion itself is a portal, then we don't want to traverse\n    // down its children. Instead, we'll get insertions from each child in\n    // the portal directly.\n  } else {\n    const child = node.child;\n    if (child !== null) {\n      insertOrAppendPlacementNodeIntoContainer(child, before, parent);\n      let sibling = child.sibling;\n      while (sibling !== null) {\n        insertOrAppendPlacementNodeIntoContainer(sibling, before, parent);\n        sibling = sibling.sibling;\n      }\n    }\n  }\n}\n\nfunction insertOrAppendPlacementNode(\n  node: Fiber,\n  before: ?Instance,\n  parent: Instance,\n): void {\n  const {tag} = node;\n  const isHost = tag === HostComponent || tag === HostText;\n  if (isHost || (enableFundamentalAPI && tag === FundamentalComponent)) {\n    const stateNode = isHost ? node.stateNode : node.stateNode.instance;\n    if (before) {\n      insertBefore(parent, stateNode, before);\n    } else {\n      appendChild(parent, stateNode);\n    }\n  } else if (tag === HostPortal) {\n    // If the insertion itself is a portal, then we don't want to traverse\n    // down its children. Instead, we'll get insertions from each child in\n    // the portal directly.\n  } else {\n    const child = node.child;\n    if (child !== null) {\n      insertOrAppendPlacementNode(child, before, parent);\n      let sibling = child.sibling;\n      while (sibling !== null) {\n        insertOrAppendPlacementNode(sibling, before, parent);\n        sibling = sibling.sibling;\n      }\n    }\n  }\n}\n\nfunction unmountHostComponents(\n  finishedRoot: FiberRoot,\n  current: Fiber,\n  renderPriorityLevel: ReactPriorityLevel,\n): void {\n  // We only have the top Fiber that was deleted but we need to recurse down its\n  // children to find all the terminal nodes.\n  let node: Fiber = current;\n\n  // Each iteration, currentParent is populated with node's host parent if not\n  // currentParentIsValid.\n  let currentParentIsValid = false;\n\n  // Note: these two variables *must* always be updated together.\n  let currentParent;\n  let currentParentIsContainer;\n\n  while (true) {\n    if (!currentParentIsValid) {\n      let parent = node.return;\n      findParent: while (true) {\n        invariant(\n          parent !== null,\n          'Expected to find a host parent. This error is likely caused by ' +\n            'a bug in React. Please file an issue.',\n        );\n        const parentStateNode = parent.stateNode;\n        switch (parent.tag) {\n          case HostComponent:\n            currentParent = parentStateNode;\n            currentParentIsContainer = false;\n            break findParent;\n          case HostRoot:\n            currentParent = parentStateNode.containerInfo;\n            currentParentIsContainer = true;\n            break findParent;\n          case HostPortal:\n            currentParent = parentStateNode.containerInfo;\n            currentParentIsContainer = true;\n            break findParent;\n          case FundamentalComponent:\n            if (enableFundamentalAPI) {\n              currentParent = parentStateNode.instance;\n              currentParentIsContainer = false;\n            }\n        }\n        parent = parent.return;\n      }\n      currentParentIsValid = true;\n    }\n\n    if (node.tag === HostComponent || node.tag === HostText) {\n      commitNestedUnmounts(finishedRoot, node, renderPriorityLevel);\n      // After all the children have unmounted, it is now safe to remove the\n      // node from the tree.\n      if (currentParentIsContainer) {\n        removeChildFromContainer(\n          ((currentParent: any): Container),\n          (node.stateNode: Instance | TextInstance),\n        );\n      } else {\n        removeChild(\n          ((currentParent: any): Instance),\n          (node.stateNode: Instance | TextInstance),\n        );\n      }\n      // Don't visit children because we already visited them.\n    } else if (enableFundamentalAPI && node.tag === FundamentalComponent) {\n      const fundamentalNode = node.stateNode.instance;\n      commitNestedUnmounts(finishedRoot, node, renderPriorityLevel);\n      // After all the children have unmounted, it is now safe to remove the\n      // node from the tree.\n      if (currentParentIsContainer) {\n        removeChildFromContainer(\n          ((currentParent: any): Container),\n          (fundamentalNode: Instance),\n        );\n      } else {\n        removeChild(\n          ((currentParent: any): Instance),\n          (fundamentalNode: Instance),\n        );\n      }\n    } else if (\n      enableSuspenseServerRenderer &&\n      node.tag === DehydratedFragment\n    ) {\n      if (enableSuspenseCallback) {\n        const hydrationCallbacks = finishedRoot.hydrationCallbacks;\n        if (hydrationCallbacks !== null) {\n          const onDeleted = hydrationCallbacks.onDeleted;\n          if (onDeleted) {\n            onDeleted((node.stateNode: SuspenseInstance));\n          }\n        }\n      }\n\n      // Delete the dehydrated suspense boundary and all of its content.\n      if (currentParentIsContainer) {\n        clearSuspenseBoundaryFromContainer(\n          ((currentParent: any): Container),\n          (node.stateNode: SuspenseInstance),\n        );\n      } else {\n        clearSuspenseBoundary(\n          ((currentParent: any): Instance),\n          (node.stateNode: SuspenseInstance),\n        );\n      }\n    } else if (node.tag === HostPortal) {\n      if (node.child !== null) {\n        // When we go into a portal, it becomes the parent to remove from.\n        // We will reassign it back when we pop the portal on the way up.\n        currentParent = node.stateNode.containerInfo;\n        currentParentIsContainer = true;\n        // Visit children because portals might contain host components.\n        node.child.return = node;\n        node = node.child;\n        continue;\n      }\n    } else {\n      commitUnmount(finishedRoot, node, renderPriorityLevel);\n      // Visit children because we may find more host components below.\n      if (node.child !== null) {\n        node.child.return = node;\n        node = node.child;\n        continue;\n      }\n    }\n    if (node === current) {\n      return;\n    }\n    while (node.sibling === null) {\n      if (node.return === null || node.return === current) {\n        return;\n      }\n      node = node.return;\n      if (node.tag === HostPortal) {\n        // When we go out of the portal, we need to restore the parent.\n        // Since we don't keep a stack of them, we will search for it.\n        currentParentIsValid = false;\n      }\n    }\n    node.sibling.return = node.return;\n    node = node.sibling;\n  }\n}\n\nfunction commitDeletion(\n  finishedRoot: FiberRoot,\n  current: Fiber,\n  renderPriorityLevel: ReactPriorityLevel,\n): void {\n  if (supportsMutation) {\n    // Recursively delete all host nodes from the parent.\n    // Detach refs and call componentWillUnmount() on the whole subtree.\n    unmountHostComponents(finishedRoot, current, renderPriorityLevel);\n  } else {\n    // Detach refs and call componentWillUnmount() on the whole subtree.\n    commitNestedUnmounts(finishedRoot, current, renderPriorityLevel);\n  }\n  const alternate = current.alternate;\n  detachFiberMutation(current);\n  if (alternate !== null) {\n    detachFiberMutation(alternate);\n  }\n}\n\nfunction commitWork(current: Fiber | null, finishedWork: Fiber): void {\n  if (!supportsMutation) {\n    switch (finishedWork.tag) {\n      case FunctionComponent:\n      case ForwardRef:\n      case MemoComponent:\n      case SimpleMemoComponent:\n      case Block: {\n        // Layout effects are destroyed during the mutation phase so that all\n        // destroy functions for all fibers are called before any create functions.\n        // This prevents sibling component effects from interfering with each other,\n        // e.g. a destroy function in one component should never override a ref set\n        // by a create function in another component during the same commit.\n        if (\n          enableProfilerTimer &&\n          enableProfilerCommitHooks &&\n          finishedWork.mode & ProfileMode\n        ) {\n          try {\n            startLayoutEffectTimer();\n            commitHookEffectListUnmount(\n              HookLayout | HookHasEffect,\n              finishedWork,\n            );\n          } finally {\n            recordLayoutEffectDuration(finishedWork);\n          }\n        } else {\n          commitHookEffectListUnmount(HookLayout | HookHasEffect, finishedWork);\n        }\n        return;\n      }\n      case Profiler: {\n        return;\n      }\n      case SuspenseComponent: {\n        commitSuspenseComponent(finishedWork);\n        attachSuspenseRetryListeners(finishedWork);\n        return;\n      }\n      case SuspenseListComponent: {\n        attachSuspenseRetryListeners(finishedWork);\n        return;\n      }\n      case HostRoot: {\n        if (supportsHydration) {\n          const root: FiberRoot = finishedWork.stateNode;\n          if (root.hydrate) {\n            // We've just hydrated. No need to hydrate again.\n            root.hydrate = false;\n            commitHydratedContainer(root.containerInfo);\n          }\n        }\n        break;\n      }\n      case OffscreenComponent:\n      case LegacyHiddenComponent: {\n        return;\n      }\n    }\n\n    commitContainer(finishedWork);\n    return;\n  }\n\n  switch (finishedWork.tag) {\n    case FunctionComponent:\n    case ForwardRef:\n    case MemoComponent:\n    case SimpleMemoComponent:\n    case Block: {\n      // Layout effects are destroyed during the mutation phase so that all\n      // destroy functions for all fibers are called before any create functions.\n      // This prevents sibling component effects from interfering with each other,\n      // e.g. a destroy function in one component should never override a ref set\n      // by a create function in another component during the same commit.\n      if (\n        enableProfilerTimer &&\n        enableProfilerCommitHooks &&\n        finishedWork.mode & ProfileMode\n      ) {\n        try {\n          startLayoutEffectTimer();\n          commitHookEffectListUnmount(HookLayout | HookHasEffect, finishedWork);\n        } finally {\n          recordLayoutEffectDuration(finishedWork);\n        }\n      } else {\n        commitHookEffectListUnmount(HookLayout | HookHasEffect, finishedWork);\n      }\n      return;\n    }\n    case ClassComponent: {\n      return;\n    }\n    case HostComponent: {\n      const instance: Instance = finishedWork.stateNode;\n      if (instance != null) {\n        // Commit the work prepared earlier.\n        const newProps = finishedWork.memoizedProps;\n        // For hydration we reuse the update path but we treat the oldProps\n        // as the newProps. The updatePayload will contain the real change in\n        // this case.\n        const oldProps = current !== null ? current.memoizedProps : newProps;\n        const type = finishedWork.type;\n        // TODO: Type the updateQueue to be specific to host components.\n        const updatePayload: null | UpdatePayload = (finishedWork.updateQueue: any);\n        finishedWork.updateQueue = null;\n        if (updatePayload !== null) {\n          commitUpdate(\n            instance,\n            updatePayload,\n            type,\n            oldProps,\n            newProps,\n            finishedWork,\n          );\n        }\n      }\n      return;\n    }\n    case HostText: {\n      invariant(\n        finishedWork.stateNode !== null,\n        'This should have a text node initialized. This error is likely ' +\n          'caused by a bug in React. Please file an issue.',\n      );\n      const textInstance: TextInstance = finishedWork.stateNode;\n      const newText: string = finishedWork.memoizedProps;\n      // For hydration we reuse the update path but we treat the oldProps\n      // as the newProps. The updatePayload will contain the real change in\n      // this case.\n      const oldText: string =\n        current !== null ? current.memoizedProps : newText;\n      commitTextUpdate(textInstance, oldText, newText);\n      return;\n    }\n    case HostRoot: {\n      if (supportsHydration) {\n        const root: FiberRoot = finishedWork.stateNode;\n        if (root.hydrate) {\n          // We've just hydrated. No need to hydrate again.\n          root.hydrate = false;\n          commitHydratedContainer(root.containerInfo);\n        }\n      }\n      return;\n    }\n    case Profiler: {\n      return;\n    }\n    case SuspenseComponent: {\n      commitSuspenseComponent(finishedWork);\n      attachSuspenseRetryListeners(finishedWork);\n      return;\n    }\n    case SuspenseListComponent: {\n      attachSuspenseRetryListeners(finishedWork);\n      return;\n    }\n    case IncompleteClassComponent: {\n      return;\n    }\n    case FundamentalComponent: {\n      if (enableFundamentalAPI) {\n        const fundamentalInstance = finishedWork.stateNode;\n        updateFundamentalComponent(fundamentalInstance);\n        return;\n      }\n      break;\n    }\n    case ScopeComponent: {\n      if (enableScopeAPI) {\n        const scopeInstance = finishedWork.stateNode;\n        prepareScopeUpdate(scopeInstance, finishedWork);\n        return;\n      }\n      break;\n    }\n    case OffscreenComponent:\n    case LegacyHiddenComponent: {\n      const newState: OffscreenState | null = finishedWork.memoizedState;\n      const isHidden = newState !== null;\n      hideOrUnhideAllChildren(finishedWork, isHidden);\n      return;\n    }\n  }\n  invariant(\n    false,\n    'This unit of work tag should not have side-effects. This error is ' +\n      'likely caused by a bug in React. Please file an issue.',\n  );\n}\n\nfunction commitSuspenseComponent(finishedWork: Fiber) {\n  const newState: SuspenseState | null = finishedWork.memoizedState;\n\n  if (newState !== null) {\n    markCommitTimeOfFallback();\n\n    if (supportsMutation) {\n      // Hide the Offscreen component that contains the primary children. TODO:\n      // Ideally, this effect would have been scheduled on the Offscreen fiber\n      // itself. That's how unhiding works: the Offscreen component schedules an\n      // effect on itself. However, in this case, the component didn't complete,\n      // so the fiber was never added to the effect list in the normal path. We\n      // could have appended it to the effect list in the Suspense component's\n      // second pass, but doing it this way is less complicated. This would be\n      // simpler if we got rid of the effect list and traversed the tree, like\n      // we're planning to do.\n      const primaryChildParent: Fiber = (finishedWork.child: any);\n      hideOrUnhideAllChildren(primaryChildParent, true);\n    }\n  }\n\n  if (enableSuspenseCallback && newState !== null) {\n    const suspenseCallback = finishedWork.memoizedProps.suspenseCallback;\n    if (typeof suspenseCallback === 'function') {\n      const wakeables: Set<Wakeable> | null = (finishedWork.updateQueue: any);\n      if (wakeables !== null) {\n        suspenseCallback(new Set(wakeables));\n      }\n    } else if (__DEV__) {\n      if (suspenseCallback !== undefined) {\n        console.error('Unexpected type for suspenseCallback.');\n      }\n    }\n  }\n}\n\nfunction commitSuspenseHydrationCallbacks(\n  finishedRoot: FiberRoot,\n  finishedWork: Fiber,\n) {\n  if (!supportsHydration) {\n    return;\n  }\n  const newState: SuspenseState | null = finishedWork.memoizedState;\n  if (newState === null) {\n    const current = finishedWork.alternate;\n    if (current !== null) {\n      const prevState: SuspenseState | null = current.memoizedState;\n      if (prevState !== null) {\n        const suspenseInstance = prevState.dehydrated;\n        if (suspenseInstance !== null) {\n          commitHydratedSuspenseInstance(suspenseInstance);\n          if (enableSuspenseCallback) {\n            const hydrationCallbacks = finishedRoot.hydrationCallbacks;\n            if (hydrationCallbacks !== null) {\n              const onHydrated = hydrationCallbacks.onHydrated;\n              if (onHydrated) {\n                onHydrated(suspenseInstance);\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n\nfunction attachSuspenseRetryListeners(finishedWork: Fiber) {\n  // If this boundary just timed out, then it will have a set of wakeables.\n  // For each wakeable, attach a listener so that when it resolves, React\n  // attempts to re-render the boundary in the primary (pre-timeout) state.\n  const wakeables: Set<Wakeable> | null = (finishedWork.updateQueue: any);\n  if (wakeables !== null) {\n    finishedWork.updateQueue = null;\n    let retryCache = finishedWork.stateNode;\n    if (retryCache === null) {\n      retryCache = finishedWork.stateNode = new PossiblyWeakSet();\n    }\n    wakeables.forEach(wakeable => {\n      // Memoize using the boundary fiber to prevent redundant listeners.\n      let retry = resolveRetryWakeable.bind(null, finishedWork, wakeable);\n      if (!retryCache.has(wakeable)) {\n        if (enableSchedulerTracing) {\n          if (wakeable.__reactDoNotTraceInteractions !== true) {\n            retry = Schedule_tracing_wrap(retry);\n          }\n        }\n        retryCache.add(wakeable);\n        wakeable.then(retry, retry);\n      }\n    });\n  }\n}\n\n// This function detects when a Suspense boundary goes from visible to hidden.\n// It returns false if the boundary is already hidden.\n// TODO: Use an effect tag.\nexport function isSuspenseBoundaryBeingHidden(\n  current: Fiber | null,\n  finishedWork: Fiber,\n): boolean {\n  if (current !== null) {\n    const oldState: SuspenseState | null = current.memoizedState;\n    if (oldState === null || oldState.dehydrated !== null) {\n      const newState: SuspenseState | null = finishedWork.memoizedState;\n      return newState !== null && newState.dehydrated === null;\n    }\n  }\n  return false;\n}\n\nfunction commitResetTextContent(current: Fiber) {\n  if (!supportsMutation) {\n    return;\n  }\n  resetTextContent(current.stateNode);\n}\n\nexport {\n  commitBeforeMutationLifeCycles,\n  commitResetTextContent,\n  commitPlacement,\n  commitDeletion,\n  commitWork,\n  commitLifeCycles,\n  commitAttachRef,\n  commitDetachRef,\n};\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from 'react-reconciler/src/ReactInternalTypes';\nimport type {Instance} from './ReactFiberHostConfig';\n\nimport invariant from 'shared/invariant';\nimport {HostComponent, HostText} from 'react-reconciler/src/ReactWorkTags';\nimport getComponentName from 'shared/getComponentName';\nimport {\n  findFiberRoot,\n  getBoundingRect,\n  getInstanceFromNode,\n  getTextContent,\n  isHiddenSubtree,\n  matchAccessibilityRole,\n  setFocusIfFocusable,\n  setupIntersectionObserver,\n  supportsTestSelectors,\n} from './ReactFiberHostConfig';\n\nlet COMPONENT_TYPE = 0b000;\nlet HAS_PSEUDO_CLASS_TYPE = 0b001;\nlet ROLE_TYPE = 0b010;\nlet TEST_NAME_TYPE = 0b011;\nlet TEXT_TYPE = 0b100;\n\nif (typeof Symbol === 'function' && Symbol.for) {\n  const symbolFor = Symbol.for;\n  COMPONENT_TYPE = symbolFor('selector.component');\n  HAS_PSEUDO_CLASS_TYPE = symbolFor('selector.has_pseudo_class');\n  ROLE_TYPE = symbolFor('selector.role');\n  TEST_NAME_TYPE = symbolFor('selector.test_id');\n  TEXT_TYPE = symbolFor('selector.text');\n}\n\ntype Type = Symbol | number;\n\ntype ComponentSelector = {|\n  $$typeof: Type,\n  value: React$AbstractComponent<empty, mixed>,\n|};\n\ntype HasPsuedoClassSelector = {|\n  $$typeof: Type,\n  value: Array<Selector>,\n|};\n\ntype RoleSelector = {|\n  $$typeof: Type,\n  value: string,\n|};\n\ntype TextSelector = {|\n  $$typeof: Type,\n  value: string,\n|};\n\ntype TestNameSelector = {|\n  $$typeof: Type,\n  value: string,\n|};\n\ntype Selector =\n  | ComponentSelector\n  | HasPsuedoClassSelector\n  | RoleSelector\n  | TextSelector\n  | TestNameSelector;\n\nexport function createComponentSelector(\n  component: React$AbstractComponent<empty, mixed>,\n): ComponentSelector {\n  return {\n    $$typeof: COMPONENT_TYPE,\n    value: component,\n  };\n}\n\nexport function createHasPsuedoClassSelector(\n  selectors: Array<Selector>,\n): HasPsuedoClassSelector {\n  return {\n    $$typeof: HAS_PSEUDO_CLASS_TYPE,\n    value: selectors,\n  };\n}\n\nexport function createRoleSelector(role: string): RoleSelector {\n  return {\n    $$typeof: ROLE_TYPE,\n    value: role,\n  };\n}\n\nexport function createTextSelector(text: string): TextSelector {\n  return {\n    $$typeof: TEXT_TYPE,\n    value: text,\n  };\n}\n\nexport function createTestNameSelector(id: string): TestNameSelector {\n  return {\n    $$typeof: TEST_NAME_TYPE,\n    value: id,\n  };\n}\n\nfunction findFiberRootForHostRoot(hostRoot: Instance): Fiber {\n  const maybeFiber = getInstanceFromNode((hostRoot: any));\n  if (maybeFiber != null) {\n    invariant(\n      typeof maybeFiber.memoizedProps['data-testname'] === 'string',\n      'Invalid host root specified. Should be either a React container or a node with a testname attribute.',\n    );\n    return ((maybeFiber: any): Fiber);\n  } else {\n    const fiberRoot = findFiberRoot(hostRoot);\n    invariant(\n      fiberRoot !== null,\n      'Could not find React container within specified host subtree.',\n    );\n    // The Flow type for FiberRoot is a little funky.\n    // createFiberRoot() cheats this by treating the root as :any and adding stateNode lazily.\n    return ((fiberRoot: any).stateNode.current: Fiber);\n  }\n}\n\nfunction matchSelector(fiber: Fiber, selector: Selector): boolean {\n  switch (selector.$$typeof) {\n    case COMPONENT_TYPE:\n      if (fiber.type === selector.value) {\n        return true;\n      }\n      break;\n    case HAS_PSEUDO_CLASS_TYPE:\n      return hasMatchingPaths(\n        fiber,\n        ((selector: any): HasPsuedoClassSelector).value,\n      );\n    case ROLE_TYPE:\n      if (fiber.tag === HostComponent) {\n        const node = fiber.stateNode;\n        if (\n          matchAccessibilityRole(node, ((selector: any): RoleSelector).value)\n        ) {\n          return true;\n        }\n      }\n      break;\n    case TEXT_TYPE:\n      if (fiber.tag === HostComponent || fiber.tag === HostText) {\n        const textContent = getTextContent(fiber);\n        if (\n          textContent !== null &&\n          textContent.indexOf(((selector: any): TextSelector).value) >= 0\n        ) {\n          return true;\n        }\n      }\n      break;\n    case TEST_NAME_TYPE:\n      if (fiber.tag === HostComponent) {\n        const dataTestID = fiber.memoizedProps['data-testname'];\n        if (\n          typeof dataTestID === 'string' &&\n          dataTestID.toLowerCase() ===\n            ((selector: any): TestNameSelector).value.toLowerCase()\n        ) {\n          return true;\n        }\n      }\n      break;\n    default:\n      invariant(null, 'Invalid selector type %s specified.', selector);\n      break;\n  }\n\n  return false;\n}\n\nfunction selectorToString(selector: Selector): string | null {\n  switch (selector.$$typeof) {\n    case COMPONENT_TYPE:\n      const displayName = getComponentName(selector.value) || 'Unknown';\n      return `<${displayName}>`;\n    case HAS_PSEUDO_CLASS_TYPE:\n      return `:has(${selectorToString(selector) || ''})`;\n    case ROLE_TYPE:\n      return `[role=\"${((selector: any): RoleSelector).value}\"]`;\n    case TEXT_TYPE:\n      return `\"${((selector: any): TextSelector).value}\"`;\n    case TEST_NAME_TYPE:\n      return `[data-testname=\"${((selector: any): TestNameSelector).value}\"]`;\n    default:\n      invariant(null, 'Invalid selector type %s specified.', selector);\n      break;\n  }\n\n  return null;\n}\n\nfunction findPaths(root: Fiber, selectors: Array<Selector>): Array<Fiber> {\n  const matchingFibers: Array<Fiber> = [];\n\n  const stack = [root, 0];\n  let index = 0;\n  while (index < stack.length) {\n    const fiber = ((stack[index++]: any): Fiber);\n    let selectorIndex = ((stack[index++]: any): number);\n    let selector = selectors[selectorIndex];\n\n    if (fiber.tag === HostComponent && isHiddenSubtree(fiber)) {\n      continue;\n    } else {\n      while (selector != null && matchSelector(fiber, selector)) {\n        selectorIndex++;\n        selector = selectors[selectorIndex];\n      }\n    }\n\n    if (selectorIndex === selectors.length) {\n      matchingFibers.push(fiber);\n    } else {\n      let child = fiber.child;\n      while (child !== null) {\n        stack.push(child, selectorIndex);\n        child = child.sibling;\n      }\n    }\n  }\n\n  return matchingFibers;\n}\n\n// Same as findPaths but with eager bailout on first match\nfunction hasMatchingPaths(root: Fiber, selectors: Array<Selector>): boolean {\n  const stack = [root, 0];\n  let index = 0;\n  while (index < stack.length) {\n    const fiber = ((stack[index++]: any): Fiber);\n    let selectorIndex = ((stack[index++]: any): number);\n    let selector = selectors[selectorIndex];\n\n    if (fiber.tag === HostComponent && isHiddenSubtree(fiber)) {\n      continue;\n    } else {\n      while (selector != null && matchSelector(fiber, selector)) {\n        selectorIndex++;\n        selector = selectors[selectorIndex];\n      }\n    }\n\n    if (selectorIndex === selectors.length) {\n      return true;\n    } else {\n      let child = fiber.child;\n      while (child !== null) {\n        stack.push(child, selectorIndex);\n        child = child.sibling;\n      }\n    }\n  }\n\n  return false;\n}\n\nexport function findAllNodes(\n  hostRoot: Instance,\n  selectors: Array<Selector>,\n): Array<Instance> {\n  if (!supportsTestSelectors) {\n    invariant(false, 'Test selector API is not supported by this renderer.');\n  }\n\n  const root = findFiberRootForHostRoot(hostRoot);\n  const matchingFibers = findPaths(root, selectors);\n\n  const instanceRoots: Array<Instance> = [];\n\n  const stack = Array.from(matchingFibers);\n  let index = 0;\n  while (index < stack.length) {\n    const node = ((stack[index++]: any): Fiber);\n    if (node.tag === HostComponent) {\n      if (isHiddenSubtree(node)) {\n        continue;\n      }\n      instanceRoots.push(node.stateNode);\n    } else {\n      let child = node.child;\n      while (child !== null) {\n        stack.push(child);\n        child = child.sibling;\n      }\n    }\n  }\n\n  return instanceRoots;\n}\n\nexport function getFindAllNodesFailureDescription(\n  hostRoot: Instance,\n  selectors: Array<Selector>,\n): string | null {\n  if (!supportsTestSelectors) {\n    invariant(false, 'Test selector API is not supported by this renderer.');\n  }\n\n  const root = findFiberRootForHostRoot(hostRoot);\n\n  let maxSelectorIndex: number = 0;\n  const matchedNames = [];\n\n  // The logic of this loop should be kept in sync with findPaths()\n  const stack = [root, 0];\n  let index = 0;\n  while (index < stack.length) {\n    const fiber = ((stack[index++]: any): Fiber);\n    let selectorIndex = ((stack[index++]: any): number);\n    const selector = selectors[selectorIndex];\n\n    if (fiber.tag === HostComponent && isHiddenSubtree(fiber)) {\n      continue;\n    } else if (matchSelector(fiber, selector)) {\n      matchedNames.push(selectorToString(selector));\n      selectorIndex++;\n\n      if (selectorIndex > maxSelectorIndex) {\n        maxSelectorIndex = selectorIndex;\n      }\n    }\n\n    if (selectorIndex < selectors.length) {\n      let child = fiber.child;\n      while (child !== null) {\n        stack.push(child, selectorIndex);\n        child = child.sibling;\n      }\n    }\n  }\n\n  if (maxSelectorIndex < selectors.length) {\n    const unmatchedNames = [];\n    for (let i = maxSelectorIndex; i < selectors.length; i++) {\n      unmatchedNames.push(selectorToString(selectors[i]));\n    }\n\n    return (\n      'findAllNodes was able to match part of the selector:\\n' +\n      `  ${matchedNames.join(' > ')}\\n\\n` +\n      'No matching component was found for:\\n' +\n      `  ${unmatchedNames.join(' > ')}`\n    );\n  }\n\n  return null;\n}\n\nexport type BoundingRect = {|\n  x: number,\n  y: number,\n  width: number,\n  height: number,\n|};\n\nexport function findBoundingRects(\n  hostRoot: Instance,\n  selectors: Array<Selector>,\n): Array<BoundingRect> {\n  if (!supportsTestSelectors) {\n    invariant(false, 'Test selector API is not supported by this renderer.');\n  }\n\n  const instanceRoots = findAllNodes(hostRoot, selectors);\n\n  const boundingRects: Array<BoundingRect> = [];\n  for (let i = 0; i < instanceRoots.length; i++) {\n    boundingRects.push(getBoundingRect(instanceRoots[i]));\n  }\n\n  for (let i = boundingRects.length - 1; i > 0; i--) {\n    const targetRect = boundingRects[i];\n    const targetLeft = targetRect.x;\n    const targetRight = targetLeft + targetRect.width;\n    const targetTop = targetRect.y;\n    const targetBottom = targetTop + targetRect.height;\n\n    for (let j = i - 1; j >= 0; j--) {\n      if (i !== j) {\n        const otherRect = boundingRects[j];\n        const otherLeft = otherRect.x;\n        const otherRight = otherLeft + otherRect.width;\n        const otherTop = otherRect.y;\n        const otherBottom = otherTop + otherRect.height;\n\n        // Merging all rects to the minimums set would be complicated,\n        // but we can handle the most common cases:\n        // 1. completely overlapping rects\n        // 2. adjacent rects that are the same width or height (e.g. items in a list)\n        //\n        // Even given the above constraints,\n        // we still won't end up with the fewest possible rects without doing multiple passes,\n        // but it's good enough for this purpose.\n\n        if (\n          targetLeft >= otherLeft &&\n          targetTop >= otherTop &&\n          targetRight <= otherRight &&\n          targetBottom <= otherBottom\n        ) {\n          // Complete overlapping rects; remove the inner one.\n          boundingRects.splice(i, 1);\n          break;\n        } else if (\n          targetLeft === otherLeft &&\n          targetRect.width === otherRect.width &&\n          !(otherBottom < targetTop) &&\n          !(otherTop > targetBottom)\n        ) {\n          // Adjacent vertical rects; merge them.\n          if (otherTop > targetTop) {\n            otherRect.height += otherTop - targetTop;\n            otherRect.y = targetTop;\n          }\n          if (otherBottom < targetBottom) {\n            otherRect.height = targetBottom - otherTop;\n          }\n\n          boundingRects.splice(i, 1);\n          break;\n        } else if (\n          targetTop === otherTop &&\n          targetRect.height === otherRect.height &&\n          !(otherRight < targetLeft) &&\n          !(otherLeft > targetRight)\n        ) {\n          // Adjacent horizontal rects; merge them.\n          if (otherLeft > targetLeft) {\n            otherRect.width += otherLeft - targetLeft;\n            otherRect.x = targetLeft;\n          }\n          if (otherRight < targetRight) {\n            otherRect.width = targetRight - otherLeft;\n          }\n\n          boundingRects.splice(i, 1);\n          break;\n        }\n      }\n    }\n  }\n\n  return boundingRects;\n}\n\nexport function focusWithin(\n  hostRoot: Instance,\n  selectors: Array<Selector>,\n): boolean {\n  if (!supportsTestSelectors) {\n    invariant(false, 'Test selector API is not supported by this renderer.');\n  }\n\n  const root = findFiberRootForHostRoot(hostRoot);\n  const matchingFibers = findPaths(root, selectors);\n\n  const stack = Array.from(matchingFibers);\n  let index = 0;\n  while (index < stack.length) {\n    const fiber = ((stack[index++]: any): Fiber);\n    if (isHiddenSubtree(fiber)) {\n      continue;\n    }\n    if (fiber.tag === HostComponent) {\n      const node = fiber.stateNode;\n      if (setFocusIfFocusable(node)) {\n        return true;\n      }\n    }\n    let child = fiber.child;\n    while (child !== null) {\n      stack.push(child);\n      child = child.sibling;\n    }\n  }\n\n  return false;\n}\n\nconst commitHooks: Array<Function> = [];\n\nexport function onCommitRoot(): void {\n  if (supportsTestSelectors) {\n    commitHooks.forEach(commitHook => commitHook());\n  }\n}\n\nexport type IntersectionObserverOptions = Object;\n\nexport type ObserveVisibleRectsCallback = (\n  intersections: Array<{ratio: number, rect: BoundingRect}>,\n) => void;\n\nexport function observeVisibleRects(\n  hostRoot: Instance,\n  selectors: Array<Selector>,\n  callback: (intersections: Array<{ratio: number, rect: BoundingRect}>) => void,\n  options?: IntersectionObserverOptions,\n): {|disconnect: () => void|} {\n  if (!supportsTestSelectors) {\n    invariant(false, 'Test selector API is not supported by this renderer.');\n  }\n\n  const instanceRoots = findAllNodes(hostRoot, selectors);\n\n  const {disconnect, observe, unobserve} = setupIntersectionObserver(\n    instanceRoots,\n    callback,\n    options,\n  );\n\n  // When React mutates the host environment, we may need to change what we're listening to.\n  const commitHook = () => {\n    const nextInstanceRoots = findAllNodes(hostRoot, selectors);\n\n    instanceRoots.forEach(target => {\n      if (nextInstanceRoots.indexOf(target) < 0) {\n        unobserve(target);\n      }\n    });\n\n    nextInstanceRoots.forEach(target => {\n      if (instanceRoots.indexOf(target) < 0) {\n        observe(target);\n      }\n    });\n  };\n\n  commitHooks.push(commitHook);\n\n  return {\n    disconnect: () => {\n      // Stop listening for React mutations:\n      const index = commitHooks.indexOf(commitHook);\n      if (index >= 0) {\n        commitHooks.splice(index, 1);\n      }\n\n      // Disconnect the host observer:\n      disconnect();\n    },\n  };\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nlet didWarnAboutMessageChannel = false;\nlet enqueueTaskImpl = null;\n\nexport default function enqueueTask(task: () => void) {\n  if (enqueueTaskImpl === null) {\n    try {\n      // read require off the module object to get around the bundlers.\n      // we don't want them to detect a require and bundle a Node polyfill.\n      const requireString = ('require' + Math.random()).slice(0, 7);\n      const nodeRequire = module && module[requireString];\n      // assuming we're in node, let's try to get node's\n      // version of setImmediate, bypassing fake timers if any.\n      enqueueTaskImpl = nodeRequire.call(module, 'timers').setImmediate;\n    } catch (_err) {\n      // we're in a browser\n      // we can't use regular timers because they may still be faked\n      // so we try MessageChannel+postMessage instead\n      enqueueTaskImpl = function(callback: () => void) {\n        if (__DEV__) {\n          if (didWarnAboutMessageChannel === false) {\n            didWarnAboutMessageChannel = true;\n            if (typeof MessageChannel === 'undefined') {\n              console.error(\n                'This browser does not have a MessageChannel implementation, ' +\n                  'so enqueuing tasks via await act(async () => ...) will fail. ' +\n                  'Please file an issue at https://github.com/facebook/react/issues ' +\n                  'if you encounter this warning.',\n              );\n            }\n          }\n        }\n        const channel = new MessageChannel();\n        channel.port1.onmessage = callback;\n        channel.port2.postMessage(undefined);\n      };\n    }\n  }\n  return enqueueTaskImpl(task);\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Thenable, Wakeable} from 'shared/ReactTypes';\nimport type {Fiber, FiberRoot} from './ReactInternalTypes';\nimport type {Lanes, Lane} from './ReactFiberLane';\nimport type {ReactPriorityLevel} from './ReactInternalTypes';\nimport type {Interaction} from 'scheduler/src/Tracing';\nimport type {SuspenseState} from './ReactFiberSuspenseComponent.old';\nimport type {Effect as HookEffect} from './ReactFiberHooks.old';\nimport type {StackCursor} from './ReactFiberStack.old';\n\nimport {\n  warnAboutDeprecatedLifecycles,\n  enableSuspenseServerRenderer,\n  replayFailedUnitOfWorkWithInvokeGuardedCallback,\n  enableProfilerTimer,\n  enableProfilerCommitHooks,\n  enableSchedulerTracing,\n  warnAboutUnmockedScheduler,\n  deferRenderPhaseUpdateToNextBatch,\n  decoupleUpdatePriorityFromScheduler,\n  enableDebugTracing,\n  enableSchedulingProfiler,\n  enableScopeAPI,\n} from 'shared/ReactFeatureFlags';\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\nimport invariant from 'shared/invariant';\n\nimport {\n  scheduleCallback,\n  cancelCallback,\n  getCurrentPriorityLevel,\n  runWithPriority,\n  shouldYield,\n  requestPaint,\n  now,\n  NoPriority as NoSchedulerPriority,\n  ImmediatePriority as ImmediateSchedulerPriority,\n  UserBlockingPriority as UserBlockingSchedulerPriority,\n  NormalPriority as NormalSchedulerPriority,\n  flushSyncCallbackQueue,\n  scheduleSyncCallback,\n} from './SchedulerWithReactIntegration.old';\nimport {\n  logCommitStarted,\n  logCommitStopped,\n  logLayoutEffectsStarted,\n  logLayoutEffectsStopped,\n  logPassiveEffectsStarted,\n  logPassiveEffectsStopped,\n  logRenderStarted,\n  logRenderStopped,\n} from './DebugTracing';\nimport {\n  markCommitStarted,\n  markCommitStopped,\n  markLayoutEffectsStarted,\n  markLayoutEffectsStopped,\n  markPassiveEffectsStarted,\n  markPassiveEffectsStopped,\n  markRenderStarted,\n  markRenderYielded,\n  markRenderStopped,\n} from './SchedulingProfiler';\n\n// The scheduler is imported here *only* to detect whether it's been mocked\nimport * as Scheduler from 'scheduler';\n\nimport {__interactionsRef, __subscriberRef} from 'scheduler/tracing';\n\nimport {\n  prepareForCommit,\n  resetAfterCommit,\n  scheduleTimeout,\n  cancelTimeout,\n  noTimeout,\n  warnsIfNotActing,\n  beforeActiveInstanceBlur,\n  afterActiveInstanceBlur,\n  clearContainer,\n} from './ReactFiberHostConfig';\n\nimport {\n  createWorkInProgress,\n  assignFiberPropertiesInDEV,\n} from './ReactFiber.old';\nimport {\n  NoMode,\n  StrictMode,\n  ProfileMode,\n  BlockingMode,\n  ConcurrentMode,\n} from './ReactTypeOfMode';\nimport {\n  HostRoot,\n  IndeterminateComponent,\n  ClassComponent,\n  SuspenseComponent,\n  SuspenseListComponent,\n  FunctionComponent,\n  ForwardRef,\n  MemoComponent,\n  SimpleMemoComponent,\n  Block,\n  OffscreenComponent,\n  LegacyHiddenComponent,\n  ScopeComponent,\n} from './ReactWorkTags';\nimport {LegacyRoot} from './ReactRootTags';\nimport {\n  NoFlags,\n  PerformedWork,\n  Placement,\n  Update,\n  PlacementAndUpdate,\n  Deletion,\n  Ref,\n  ContentReset,\n  Snapshot,\n  Callback,\n  Passive,\n  PassiveUnmountPendingDev,\n  Incomplete,\n  HostEffectMask,\n  Hydrating,\n  HydratingAndUpdate,\n} from './ReactFiberFlags';\nimport {\n  NoLanePriority,\n  SyncLanePriority,\n  SyncBatchedLanePriority,\n  InputDiscreteLanePriority,\n  DefaultLanePriority,\n  NoLanes,\n  NoLane,\n  SyncLane,\n  SyncBatchedLane,\n  OffscreenLane,\n  NoTimestamp,\n  findUpdateLane,\n  findTransitionLane,\n  findRetryLane,\n  includesSomeLane,\n  isSubsetOfLanes,\n  mergeLanes,\n  removeLanes,\n  pickArbitraryLane,\n  hasDiscreteLanes,\n  includesNonIdleWork,\n  includesOnlyRetries,\n  includesOnlyTransitions,\n  getNextLanes,\n  returnNextLanesPriority,\n  setCurrentUpdateLanePriority,\n  getCurrentUpdateLanePriority,\n  markStarvedLanesAsExpired,\n  getLanesToRetrySynchronouslyOnError,\n  getMostRecentEventTime,\n  markRootUpdated,\n  markRootSuspended as markRootSuspended_dontCallThisOneDirectly,\n  markRootPinged,\n  markRootExpired,\n  markDiscreteUpdatesExpired,\n  markRootFinished,\n  schedulerPriorityToLanePriority,\n  lanePriorityToSchedulerPriority,\n} from './ReactFiberLane';\nimport {requestCurrentTransition, NoTransition} from './ReactFiberTransition';\nimport {beginWork as originalBeginWork} from './ReactFiberBeginWork.old';\nimport {completeWork} from './ReactFiberCompleteWork.old';\nimport {unwindWork, unwindInterruptedWork} from './ReactFiberUnwindWork.old';\nimport {\n  throwException,\n  createRootErrorUpdate,\n  createClassErrorUpdate,\n} from './ReactFiberThrow.old';\nimport {\n  commitBeforeMutationLifeCycles as commitBeforeMutationEffectOnFiber,\n  commitLifeCycles as commitLayoutEffectOnFiber,\n  commitPlacement,\n  commitWork,\n  commitDeletion,\n  commitDetachRef,\n  commitAttachRef,\n  commitPassiveEffectDurations,\n  commitResetTextContent,\n  isSuspenseBoundaryBeingHidden,\n} from './ReactFiberCommitWork.old';\nimport {enqueueUpdate} from './ReactUpdateQueue.old';\nimport {resetContextDependencies} from './ReactFiberNewContext.old';\nimport {\n  resetHooksAfterThrow,\n  ContextOnlyDispatcher,\n  getIsUpdatingOpaqueValueInRenderPhaseInDEV,\n} from './ReactFiberHooks.old';\nimport {createCapturedValue} from './ReactCapturedValue';\nimport {\n  push as pushToStack,\n  pop as popFromStack,\n  createCursor,\n} from './ReactFiberStack.old';\n\nimport {\n  recordCommitTime,\n  recordPassiveEffectDuration,\n  startPassiveEffectTimer,\n  startProfilerTimer,\n  stopProfilerTimerIfRunningAndRecordDelta,\n} from './ReactProfilerTimer.old';\n\n// DEV stuff\nimport getComponentName from 'shared/getComponentName';\nimport ReactStrictModeWarnings from './ReactStrictModeWarnings.old';\nimport {\n  isRendering as ReactCurrentDebugFiberIsRenderingInDEV,\n  current as ReactCurrentFiberCurrent,\n  resetCurrentFiber as resetCurrentDebugFiberInDEV,\n  setCurrentFiber as setCurrentDebugFiberInDEV,\n} from './ReactCurrentFiber';\nimport {\n  invokeGuardedCallback,\n  hasCaughtError,\n  clearCaughtError,\n} from 'shared/ReactErrorUtils';\nimport {onCommitRoot as onCommitRootDevTools} from './ReactFiberDevToolsHook.old';\nimport {onCommitRoot as onCommitRootTestSelector} from './ReactTestSelectors';\n\n// Used by `act`\nimport enqueueTask from 'shared/enqueueTask';\nimport {doesFiberContain} from './ReactFiberTreeReflection';\n\nconst ceil = Math.ceil;\n\nconst {\n  ReactCurrentDispatcher,\n  ReactCurrentOwner,\n  IsSomeRendererActing,\n} = ReactSharedInternals;\n\ntype ExecutionContext = number;\n\nexport const NoContext = /*             */ 0b0000000;\nconst BatchedContext = /*               */ 0b0000001;\nconst EventContext = /*                 */ 0b0000010;\nconst DiscreteEventContext = /*         */ 0b0000100;\nconst LegacyUnbatchedContext = /*       */ 0b0001000;\nconst RenderContext = /*                */ 0b0010000;\nconst CommitContext = /*                */ 0b0100000;\nexport const RetryAfterError = /*       */ 0b1000000;\n\ntype RootExitStatus = 0 | 1 | 2 | 3 | 4 | 5;\nconst RootIncomplete = 0;\nconst RootFatalErrored = 1;\nconst RootErrored = 2;\nconst RootSuspended = 3;\nconst RootSuspendedWithDelay = 4;\nconst RootCompleted = 5;\n\n// Describes where we are in the React execution stack\nlet executionContext: ExecutionContext = NoContext;\n// The root we're working on\nlet workInProgressRoot: FiberRoot | null = null;\n// The fiber we're working on\nlet workInProgress: Fiber | null = null;\n// The lanes we're rendering\nlet workInProgressRootRenderLanes: Lanes = NoLanes;\n\n// Stack that allows components to change the render lanes for its subtree\n// This is a superset of the lanes we started working on at the root. The only\n// case where it's different from `workInProgressRootRenderLanes` is when we\n// enter a subtree that is hidden and needs to be unhidden: Suspense and\n// Offscreen component.\n//\n// Most things in the work loop should deal with workInProgressRootRenderLanes.\n// Most things in begin/complete phases should deal with subtreeRenderLanes.\nlet subtreeRenderLanes: Lanes = NoLanes;\nconst subtreeRenderLanesCursor: StackCursor<Lanes> = createCursor(NoLanes);\n\n// Whether to root completed, errored, suspended, etc.\nlet workInProgressRootExitStatus: RootExitStatus = RootIncomplete;\n// A fatal error, if one is thrown\nlet workInProgressRootFatalError: mixed = null;\n// \"Included\" lanes refer to lanes that were worked on during this render. It's\n// slightly different than `renderLanes` because `renderLanes` can change as you\n// enter and exit an Offscreen tree. This value is the combination of all render\n// lanes for the entire render phase.\nlet workInProgressRootIncludedLanes: Lanes = NoLanes;\n// The work left over by components that were visited during this render. Only\n// includes unprocessed updates, not work in bailed out children.\nlet workInProgressRootSkippedLanes: Lanes = NoLanes;\n// Lanes that were updated (in an interleaved event) during this render.\nlet workInProgressRootUpdatedLanes: Lanes = NoLanes;\n// Lanes that were pinged (in an interleaved event) during this render.\nlet workInProgressRootPingedLanes: Lanes = NoLanes;\n\nlet mostRecentlyUpdatedRoot: FiberRoot | null = null;\n\n// The most recent time we committed a fallback. This lets us ensure a train\n// model where we don't commit new loading states in too quick succession.\nlet globalMostRecentFallbackTime: number = 0;\nconst FALLBACK_THROTTLE_MS: number = 500;\n\n// The absolute time for when we should start giving up on rendering\n// more and prefer CPU suspense heuristics instead.\nlet workInProgressRootRenderTargetTime: number = Infinity;\n// How long a render is supposed to take before we start following CPU\n// suspense heuristics and opt out of rendering more content.\nconst RENDER_TIMEOUT_MS = 500;\n\nfunction resetRenderTimer() {\n  workInProgressRootRenderTargetTime = now() + RENDER_TIMEOUT_MS;\n}\n\nexport function getRenderTargetTime(): number {\n  return workInProgressRootRenderTargetTime;\n}\n\nlet nextEffect: Fiber | null = null;\nlet hasUncaughtError = false;\nlet firstUncaughtError = null;\nlet legacyErrorBoundariesThatAlreadyFailed: Set<mixed> | null = null;\n\nlet rootDoesHavePassiveEffects: boolean = false;\nlet rootWithPendingPassiveEffects: FiberRoot | null = null;\nlet pendingPassiveEffectsRenderPriority: ReactPriorityLevel = NoSchedulerPriority;\nlet pendingPassiveEffectsLanes: Lanes = NoLanes;\nlet pendingPassiveHookEffectsMount: Array<HookEffect | Fiber> = [];\nlet pendingPassiveHookEffectsUnmount: Array<HookEffect | Fiber> = [];\nlet pendingPassiveProfilerEffects: Array<Fiber> = [];\n\nlet rootsWithPendingDiscreteUpdates: Set<FiberRoot> | null = null;\n\n// Use these to prevent an infinite loop of nested updates\nconst NESTED_UPDATE_LIMIT = 50;\nlet nestedUpdateCount: number = 0;\nlet rootWithNestedUpdates: FiberRoot | null = null;\n\nconst NESTED_PASSIVE_UPDATE_LIMIT = 50;\nlet nestedPassiveUpdateCount: number = 0;\n\n// Marks the need to reschedule pending interactions at these lanes\n// during the commit phase. This enables them to be traced across components\n// that spawn new work during render. E.g. hidden boundaries, suspended SSR\n// hydration or SuspenseList.\n// TODO: Can use a bitmask instead of an array\nlet spawnedWorkDuringRender: null | Array<Lane | Lanes> = null;\n\n// If two updates are scheduled within the same event, we should treat their\n// event times as simultaneous, even if the actual clock time has advanced\n// between the first and second call.\nlet currentEventTime: number = NoTimestamp;\nlet currentEventWipLanes: Lanes = NoLanes;\nlet currentEventPendingLanes: Lanes = NoLanes;\n\n// Dev only flag that tracks if passive effects are currently being flushed.\n// We warn about state updates for unmounted components differently in this case.\nlet isFlushingPassiveEffects = false;\n\nlet focusedInstanceHandle: null | Fiber = null;\nlet shouldFireAfterActiveInstanceBlur: boolean = false;\n\nexport function getWorkInProgressRoot(): FiberRoot | null {\n  return workInProgressRoot;\n}\n\nexport function requestEventTime() {\n  if ((executionContext & (RenderContext | CommitContext)) !== NoContext) {\n    // We're inside React, so it's fine to read the actual time.\n    return now();\n  }\n  // We're not inside React, so we may be in the middle of a browser event.\n  if (currentEventTime !== NoTimestamp) {\n    // Use the same start time for all updates until we enter React again.\n    return currentEventTime;\n  }\n  // This is the first update since React yielded. Compute a new start time.\n  currentEventTime = now();\n  return currentEventTime;\n}\n\nexport function getCurrentTime() {\n  return now();\n}\n\nexport function requestUpdateLane(fiber: Fiber): Lane {\n  // Special cases\n  const mode = fiber.mode;\n  if ((mode & BlockingMode) === NoMode) {\n    return (SyncLane: Lane);\n  } else if ((mode & ConcurrentMode) === NoMode) {\n    return getCurrentPriorityLevel() === ImmediateSchedulerPriority\n      ? (SyncLane: Lane)\n      : (SyncBatchedLane: Lane);\n  } else if (\n    !deferRenderPhaseUpdateToNextBatch &&\n    (executionContext & RenderContext) !== NoContext &&\n    workInProgressRootRenderLanes !== NoLanes\n  ) {\n    // This is a render phase update. These are not officially supported. The\n    // old behavior is to give this the same \"thread\" (expiration time) as\n    // whatever is currently rendering. So if you call `setState` on a component\n    // that happens later in the same render, it will flush. Ideally, we want to\n    // remove the special case and treat them as if they came from an\n    // interleaved event. Regardless, this pattern is not officially supported.\n    // This behavior is only a fallback. The flag only exists until we can roll\n    // out the setState warning, since existing code might accidentally rely on\n    // the current behavior.\n    return pickArbitraryLane(workInProgressRootRenderLanes);\n  }\n\n  // The algorithm for assigning an update to a lane should be stable for all\n  // updates at the same priority within the same event. To do this, the inputs\n  // to the algorithm must be the same. For example, we use the `renderLanes`\n  // to avoid choosing a lane that is already in the middle of rendering.\n  //\n  // However, the \"included\" lanes could be mutated in between updates in the\n  // same event, like if you perform an update inside `flushSync`. Or any other\n  // code path that might call `prepareFreshStack`.\n  //\n  // The trick we use is to cache the first of each of these inputs within an\n  // event. Then reset the cached values once we can be sure the event is over.\n  // Our heuristic for that is whenever we enter a concurrent work loop.\n  //\n  // We'll do the same for `currentEventPendingLanes` below.\n  if (currentEventWipLanes === NoLanes) {\n    currentEventWipLanes = workInProgressRootIncludedLanes;\n  }\n\n  const isTransition = requestCurrentTransition() !== NoTransition;\n  if (isTransition) {\n    if (currentEventPendingLanes !== NoLanes) {\n      currentEventPendingLanes =\n        mostRecentlyUpdatedRoot !== null\n          ? mostRecentlyUpdatedRoot.pendingLanes\n          : NoLanes;\n    }\n    return findTransitionLane(currentEventWipLanes, currentEventPendingLanes);\n  }\n\n  // TODO: Remove this dependency on the Scheduler priority.\n  // To do that, we're replacing it with an update lane priority.\n  const schedulerPriority = getCurrentPriorityLevel();\n\n  // The old behavior was using the priority level of the Scheduler.\n  // This couples React to the Scheduler internals, so we're replacing it\n  // with the currentUpdateLanePriority above. As an example of how this\n  // could be problematic, if we're not inside `Scheduler.runWithPriority`,\n  // then we'll get the priority of the current running Scheduler task,\n  // which is probably not what we want.\n  let lane;\n  if (\n    // TODO: Temporary. We're removing the concept of discrete updates.\n    (executionContext & DiscreteEventContext) !== NoContext &&\n    schedulerPriority === UserBlockingSchedulerPriority\n  ) {\n    lane = findUpdateLane(InputDiscreteLanePriority, currentEventWipLanes);\n  } else {\n    const schedulerLanePriority = schedulerPriorityToLanePriority(\n      schedulerPriority,\n    );\n\n    if (decoupleUpdatePriorityFromScheduler) {\n      // In the new strategy, we will track the current update lane priority\n      // inside React and use that priority to select a lane for this update.\n      // For now, we're just logging when they're different so we can assess.\n      const currentUpdateLanePriority = getCurrentUpdateLanePriority();\n\n      if (\n        schedulerLanePriority !== currentUpdateLanePriority &&\n        currentUpdateLanePriority !== NoLanePriority\n      ) {\n        if (__DEV__) {\n          console.error(\n            'Expected current scheduler lane priority %s to match current update lane priority %s',\n            schedulerLanePriority,\n            currentUpdateLanePriority,\n          );\n        }\n      }\n    }\n\n    lane = findUpdateLane(schedulerLanePriority, currentEventWipLanes);\n  }\n\n  return lane;\n}\n\nfunction requestRetryLane(fiber: Fiber) {\n  // This is a fork of `requestUpdateLane` designed specifically for Suspense\n  // \"retries\" — a special update that attempts to flip a Suspense boundary\n  // from its placeholder state to its primary/resolved state.\n\n  // Special cases\n  const mode = fiber.mode;\n  if ((mode & BlockingMode) === NoMode) {\n    return (SyncLane: Lane);\n  } else if ((mode & ConcurrentMode) === NoMode) {\n    return getCurrentPriorityLevel() === ImmediateSchedulerPriority\n      ? (SyncLane: Lane)\n      : (SyncBatchedLane: Lane);\n  }\n\n  // See `requestUpdateLane` for explanation of `currentEventWipLanes`\n  if (currentEventWipLanes === NoLanes) {\n    currentEventWipLanes = workInProgressRootIncludedLanes;\n  }\n  return findRetryLane(currentEventWipLanes);\n}\n\nexport function scheduleUpdateOnFiber(\n  fiber: Fiber,\n  lane: Lane,\n  eventTime: number,\n) {\n  checkForNestedUpdates();\n  warnAboutRenderPhaseUpdatesInDEV(fiber);\n\n  const root = markUpdateLaneFromFiberToRoot(fiber, lane);\n  if (root === null) {\n    warnAboutUpdateOnUnmountedFiberInDEV(fiber);\n    return null;\n  }\n\n  // Mark that the root has a pending update.\n  markRootUpdated(root, lane, eventTime);\n\n  if (root === workInProgressRoot) {\n    // Received an update to a tree that's in the middle of rendering. Mark\n    // that there was an interleaved update work on this root. Unless the\n    // `deferRenderPhaseUpdateToNextBatch` flag is off and this is a render\n    // phase update. In that case, we don't treat render phase updates as if\n    // they were interleaved, for backwards compat reasons.\n    if (\n      deferRenderPhaseUpdateToNextBatch ||\n      (executionContext & RenderContext) === NoContext\n    ) {\n      workInProgressRootUpdatedLanes = mergeLanes(\n        workInProgressRootUpdatedLanes,\n        lane,\n      );\n    }\n    if (workInProgressRootExitStatus === RootSuspendedWithDelay) {\n      // The root already suspended with a delay, which means this render\n      // definitely won't finish. Since we have a new update, let's mark it as\n      // suspended now, right before marking the incoming update. This has the\n      // effect of interrupting the current render and switching to the update.\n      // TODO: Make sure this doesn't override pings that happen while we've\n      // already started rendering.\n      markRootSuspended(root, workInProgressRootRenderLanes);\n    }\n  }\n\n  // TODO: requestUpdateLanePriority also reads the priority. Pass the\n  // priority as an argument to that function and this one.\n  const priorityLevel = getCurrentPriorityLevel();\n\n  if (lane === SyncLane) {\n    if (\n      // Check if we're inside unbatchedUpdates\n      (executionContext & LegacyUnbatchedContext) !== NoContext &&\n      // Check if we're not already rendering\n      (executionContext & (RenderContext | CommitContext)) === NoContext\n    ) {\n      // Register pending interactions on the root to avoid losing traced interaction data.\n      schedulePendingInteractions(root, lane);\n\n      // This is a legacy edge case. The initial mount of a ReactDOM.render-ed\n      // root inside of batchedUpdates should be synchronous, but layout updates\n      // should be deferred until the end of the batch.\n      performSyncWorkOnRoot(root);\n    } else {\n      ensureRootIsScheduled(root, eventTime);\n      schedulePendingInteractions(root, lane);\n      if (executionContext === NoContext) {\n        // Flush the synchronous work now, unless we're already working or inside\n        // a batch. This is intentionally inside scheduleUpdateOnFiber instead of\n        // scheduleCallbackForFiber to preserve the ability to schedule a callback\n        // without immediately flushing it. We only do this for user-initiated\n        // updates, to preserve historical behavior of legacy mode.\n        resetRenderTimer();\n        flushSyncCallbackQueue();\n      }\n    }\n  } else {\n    // Schedule a discrete update but only if it's not Sync.\n    if (\n      (executionContext & DiscreteEventContext) !== NoContext &&\n      // Only updates at user-blocking priority or greater are considered\n      // discrete, even inside a discrete event.\n      (priorityLevel === UserBlockingSchedulerPriority ||\n        priorityLevel === ImmediateSchedulerPriority)\n    ) {\n      // This is the result of a discrete event. Track the lowest priority\n      // discrete update per root so we can flush them early, if needed.\n      if (rootsWithPendingDiscreteUpdates === null) {\n        rootsWithPendingDiscreteUpdates = new Set([root]);\n      } else {\n        rootsWithPendingDiscreteUpdates.add(root);\n      }\n    }\n    // Schedule other updates after in case the callback is sync.\n    ensureRootIsScheduled(root, eventTime);\n    schedulePendingInteractions(root, lane);\n  }\n\n  // We use this when assigning a lane for a transition inside\n  // `requestUpdateLane`. We assume it's the same as the root being updated,\n  // since in the common case of a single root app it probably is. If it's not\n  // the same root, then it's not a huge deal, we just might batch more stuff\n  // together more than necessary.\n  mostRecentlyUpdatedRoot = root;\n}\n\n// This is split into a separate function so we can mark a fiber with pending\n// work without treating it as a typical update that originates from an event;\n// e.g. retrying a Suspense boundary isn't an update, but it does schedule work\n// on a fiber.\nfunction markUpdateLaneFromFiberToRoot(\n  sourceFiber: Fiber,\n  lane: Lane,\n): FiberRoot | null {\n  // Update the source fiber's lanes\n  sourceFiber.lanes = mergeLanes(sourceFiber.lanes, lane);\n  let alternate = sourceFiber.alternate;\n  if (alternate !== null) {\n    alternate.lanes = mergeLanes(alternate.lanes, lane);\n  }\n  if (__DEV__) {\n    if (\n      alternate === null &&\n      (sourceFiber.flags & (Placement | Hydrating)) !== NoFlags\n    ) {\n      warnAboutUpdateOnNotYetMountedFiberInDEV(sourceFiber);\n    }\n  }\n  // Walk the parent path to the root and update the child expiration time.\n  let node = sourceFiber;\n  let parent = sourceFiber.return;\n  while (parent !== null) {\n    parent.childLanes = mergeLanes(parent.childLanes, lane);\n    alternate = parent.alternate;\n    if (alternate !== null) {\n      alternate.childLanes = mergeLanes(alternate.childLanes, lane);\n    } else {\n      if (__DEV__) {\n        if ((parent.flags & (Placement | Hydrating)) !== NoFlags) {\n          warnAboutUpdateOnNotYetMountedFiberInDEV(sourceFiber);\n        }\n      }\n    }\n    node = parent;\n    parent = parent.return;\n  }\n  if (node.tag === HostRoot) {\n    const root: FiberRoot = node.stateNode;\n    return root;\n  } else {\n    return null;\n  }\n}\n\n// Use this function to schedule a task for a root. There's only one task per\n// root; if a task was already scheduled, we'll check to make sure the priority\n// of the existing task is the same as the priority of the next level that the\n// root has work on. This function is called on every update, and right before\n// exiting a task.\nfunction ensureRootIsScheduled(root: FiberRoot, currentTime: number) {\n  const existingCallbackNode = root.callbackNode;\n\n  // Check if any lanes are being starved by other work. If so, mark them as\n  // expired so we know to work on those next.\n  markStarvedLanesAsExpired(root, currentTime);\n\n  // Determine the next lanes to work on, and their priority.\n  const nextLanes = getNextLanes(\n    root,\n    root === workInProgressRoot ? workInProgressRootRenderLanes : NoLanes,\n  );\n  // This returns the priority level computed during the `getNextLanes` call.\n  const newCallbackPriority = returnNextLanesPriority();\n\n  if (nextLanes === NoLanes) {\n    // Special case: There's nothing to work on.\n    if (existingCallbackNode !== null) {\n      cancelCallback(existingCallbackNode);\n      root.callbackNode = null;\n      root.callbackPriority = NoLanePriority;\n    }\n    return;\n  }\n\n  // Check if there's an existing task. We may be able to reuse it.\n  if (existingCallbackNode !== null) {\n    const existingCallbackPriority = root.callbackPriority;\n    if (existingCallbackPriority === newCallbackPriority) {\n      // The priority hasn't changed. We can reuse the existing task. Exit.\n      return;\n    }\n    // The priority changed. Cancel the existing callback. We'll schedule a new\n    // one below.\n    cancelCallback(existingCallbackNode);\n  }\n\n  // Schedule a new callback.\n  let newCallbackNode;\n  if (newCallbackPriority === SyncLanePriority) {\n    // Special case: Sync React callbacks are scheduled on a special\n    // internal queue\n    newCallbackNode = scheduleSyncCallback(\n      performSyncWorkOnRoot.bind(null, root),\n    );\n  } else if (newCallbackPriority === SyncBatchedLanePriority) {\n    newCallbackNode = scheduleCallback(\n      ImmediateSchedulerPriority,\n      performSyncWorkOnRoot.bind(null, root),\n    );\n  } else {\n    const schedulerPriorityLevel = lanePriorityToSchedulerPriority(\n      newCallbackPriority,\n    );\n    newCallbackNode = scheduleCallback(\n      schedulerPriorityLevel,\n      performConcurrentWorkOnRoot.bind(null, root),\n    );\n  }\n\n  root.callbackPriority = newCallbackPriority;\n  root.callbackNode = newCallbackNode;\n}\n\n// This is the entry point for every concurrent task, i.e. anything that\n// goes through Scheduler.\nfunction performConcurrentWorkOnRoot(root) {\n  // Since we know we're in a React event, we can clear the current\n  // event time. The next update will compute a new event time.\n  currentEventTime = NoTimestamp;\n  currentEventWipLanes = NoLanes;\n  currentEventPendingLanes = NoLanes;\n\n  invariant(\n    (executionContext & (RenderContext | CommitContext)) === NoContext,\n    'Should not already be working.',\n  );\n\n  // Flush any pending passive effects before deciding which lanes to work on,\n  // in case they schedule additional work.\n  const originalCallbackNode = root.callbackNode;\n  const didFlushPassiveEffects = flushPassiveEffects();\n  if (didFlushPassiveEffects) {\n    // Something in the passive effect phase may have canceled the current task.\n    // Check if the task node for this root was changed.\n    if (root.callbackNode !== originalCallbackNode) {\n      // The current task was canceled. Exit. We don't need to call\n      // `ensureRootIsScheduled` because the check above implies either that\n      // there's a new task, or that there's no remaining work on this root.\n      return null;\n    } else {\n      // Current task was not canceled. Continue.\n    }\n  }\n\n  // Determine the next expiration time to work on, using the fields stored\n  // on the root.\n  let lanes = getNextLanes(\n    root,\n    root === workInProgressRoot ? workInProgressRootRenderLanes : NoLanes,\n  );\n  if (lanes === NoLanes) {\n    // Defensive coding. This is never expected to happen.\n    return null;\n  }\n\n  let exitStatus = renderRootConcurrent(root, lanes);\n\n  if (\n    includesSomeLane(\n      workInProgressRootIncludedLanes,\n      workInProgressRootUpdatedLanes,\n    )\n  ) {\n    // The render included lanes that were updated during the render phase.\n    // For example, when unhiding a hidden tree, we include all the lanes\n    // that were previously skipped when the tree was hidden. That set of\n    // lanes is a superset of the lanes we started rendering with.\n    //\n    // So we'll throw out the current work and restart.\n    prepareFreshStack(root, NoLanes);\n  } else if (exitStatus !== RootIncomplete) {\n    if (exitStatus === RootErrored) {\n      executionContext |= RetryAfterError;\n\n      // If an error occurred during hydration,\n      // discard server response and fall back to client side render.\n      if (root.hydrate) {\n        root.hydrate = false;\n        clearContainer(root.containerInfo);\n      }\n\n      // If something threw an error, try rendering one more time. We'll render\n      // synchronously to block concurrent data mutations, and we'll includes\n      // all pending updates are included. If it still fails after the second\n      // attempt, we'll give up and commit the resulting tree.\n      lanes = getLanesToRetrySynchronouslyOnError(root);\n      if (lanes !== NoLanes) {\n        exitStatus = renderRootSync(root, lanes);\n      }\n    }\n\n    if (exitStatus === RootFatalErrored) {\n      const fatalError = workInProgressRootFatalError;\n      prepareFreshStack(root, NoLanes);\n      markRootSuspended(root, lanes);\n      ensureRootIsScheduled(root, now());\n      throw fatalError;\n    }\n\n    // We now have a consistent tree. The next step is either to commit it,\n    // or, if something suspended, wait to commit it after a timeout.\n    const finishedWork: Fiber = (root.current.alternate: any);\n    root.finishedWork = finishedWork;\n    root.finishedLanes = lanes;\n    finishConcurrentRender(root, exitStatus, lanes);\n  }\n\n  ensureRootIsScheduled(root, now());\n  if (root.callbackNode === originalCallbackNode) {\n    // The task node scheduled for this root is the same one that's\n    // currently executed. Need to return a continuation.\n    return performConcurrentWorkOnRoot.bind(null, root);\n  }\n  return null;\n}\n\nfunction finishConcurrentRender(root, exitStatus, lanes) {\n  switch (exitStatus) {\n    case RootIncomplete:\n    case RootFatalErrored: {\n      invariant(false, 'Root did not complete. This is a bug in React.');\n    }\n    // Flow knows about invariant, so it complains if I add a break\n    // statement, but eslint doesn't know about invariant, so it complains\n    // if I do. eslint-disable-next-line no-fallthrough\n    case RootErrored: {\n      // We should have already attempted to retry this tree. If we reached\n      // this point, it errored again. Commit it.\n      commitRoot(root);\n      break;\n    }\n    case RootSuspended: {\n      markRootSuspended(root, lanes);\n\n      // We have an acceptable loading state. We need to figure out if we\n      // should immediately commit it or wait a bit.\n\n      if (\n        includesOnlyRetries(lanes) &&\n        // do not delay if we're inside an act() scope\n        !shouldForceFlushFallbacksInDEV()\n      ) {\n        // This render only included retries, no updates. Throttle committing\n        // retries so that we don't show too many loading states too quickly.\n        const msUntilTimeout =\n          globalMostRecentFallbackTime + FALLBACK_THROTTLE_MS - now();\n        // Don't bother with a very short suspense time.\n        if (msUntilTimeout > 10) {\n          const nextLanes = getNextLanes(root, NoLanes);\n          if (nextLanes !== NoLanes) {\n            // There's additional work on this root.\n            break;\n          }\n          const suspendedLanes = root.suspendedLanes;\n          if (!isSubsetOfLanes(suspendedLanes, lanes)) {\n            // We should prefer to render the fallback of at the last\n            // suspended level. Ping the last suspended level to try\n            // rendering it again.\n            // FIXME: What if the suspended lanes are Idle? Should not restart.\n            const eventTime = requestEventTime();\n            markRootPinged(root, suspendedLanes, eventTime);\n            break;\n          }\n\n          // The render is suspended, it hasn't timed out, and there's no\n          // lower priority work to do. Instead of committing the fallback\n          // immediately, wait for more data to arrive.\n          root.timeoutHandle = scheduleTimeout(\n            commitRoot.bind(null, root),\n            msUntilTimeout,\n          );\n          break;\n        }\n      }\n      // The work expired. Commit immediately.\n      commitRoot(root);\n      break;\n    }\n    case RootSuspendedWithDelay: {\n      markRootSuspended(root, lanes);\n\n      if (includesOnlyTransitions(lanes)) {\n        // This is a transition, so we should exit without committing a\n        // placeholder and without scheduling a timeout. Delay indefinitely\n        // until we receive more data.\n        break;\n      }\n\n      if (!shouldForceFlushFallbacksInDEV()) {\n        // This is not a transition, but we did trigger an avoided state.\n        // Schedule a placeholder to display after a short delay, using the Just\n        // Noticeable Difference.\n        // TODO: Is the JND optimization worth the added complexity? If this is\n        // the only reason we track the event time, then probably not.\n        // Consider removing.\n\n        const mostRecentEventTime = getMostRecentEventTime(root, lanes);\n        const eventTimeMs = mostRecentEventTime;\n        const timeElapsedMs = now() - eventTimeMs;\n        const msUntilTimeout = jnd(timeElapsedMs) - timeElapsedMs;\n\n        // Don't bother with a very short suspense time.\n        if (msUntilTimeout > 10) {\n          // Instead of committing the fallback immediately, wait for more data\n          // to arrive.\n          root.timeoutHandle = scheduleTimeout(\n            commitRoot.bind(null, root),\n            msUntilTimeout,\n          );\n          break;\n        }\n      }\n\n      // Commit the placeholder.\n      commitRoot(root);\n      break;\n    }\n    case RootCompleted: {\n      // The work completed. Ready to commit.\n      commitRoot(root);\n      break;\n    }\n    default: {\n      invariant(false, 'Unknown root exit status.');\n    }\n  }\n}\n\nfunction markRootSuspended(root, suspendedLanes) {\n  // When suspending, we should always exclude lanes that were pinged or (more\n  // rarely, since we try to avoid it) updated during the render phase.\n  // TODO: Lol maybe there's a better way to factor this besides this\n  // obnoxiously named function :)\n  suspendedLanes = removeLanes(suspendedLanes, workInProgressRootPingedLanes);\n  suspendedLanes = removeLanes(suspendedLanes, workInProgressRootUpdatedLanes);\n  markRootSuspended_dontCallThisOneDirectly(root, suspendedLanes);\n}\n\n// This is the entry point for synchronous tasks that don't go\n// through Scheduler\nfunction performSyncWorkOnRoot(root) {\n  invariant(\n    (executionContext & (RenderContext | CommitContext)) === NoContext,\n    'Should not already be working.',\n  );\n\n  flushPassiveEffects();\n\n  let lanes;\n  let exitStatus;\n  if (\n    root === workInProgressRoot &&\n    includesSomeLane(root.expiredLanes, workInProgressRootRenderLanes)\n  ) {\n    // There's a partial tree, and at least one of its lanes has expired. Finish\n    // rendering it before rendering the rest of the expired work.\n    lanes = workInProgressRootRenderLanes;\n    exitStatus = renderRootSync(root, lanes);\n    if (\n      includesSomeLane(\n        workInProgressRootIncludedLanes,\n        workInProgressRootUpdatedLanes,\n      )\n    ) {\n      // The render included lanes that were updated during the render phase.\n      // For example, when unhiding a hidden tree, we include all the lanes\n      // that were previously skipped when the tree was hidden. That set of\n      // lanes is a superset of the lanes we started rendering with.\n      //\n      // Note that this only happens when part of the tree is rendered\n      // concurrently. If the whole tree is rendered synchronously, then there\n      // are no interleaved events.\n      lanes = getNextLanes(root, lanes);\n      exitStatus = renderRootSync(root, lanes);\n    }\n  } else {\n    lanes = getNextLanes(root, NoLanes);\n    exitStatus = renderRootSync(root, lanes);\n  }\n\n  if (root.tag !== LegacyRoot && exitStatus === RootErrored) {\n    executionContext |= RetryAfterError;\n\n    // If an error occurred during hydration,\n    // discard server response and fall back to client side render.\n    if (root.hydrate) {\n      root.hydrate = false;\n      clearContainer(root.containerInfo);\n    }\n\n    // If something threw an error, try rendering one more time. We'll render\n    // synchronously to block concurrent data mutations, and we'll includes\n    // all pending updates are included. If it still fails after the second\n    // attempt, we'll give up and commit the resulting tree.\n    lanes = getLanesToRetrySynchronouslyOnError(root);\n    if (lanes !== NoLanes) {\n      exitStatus = renderRootSync(root, lanes);\n    }\n  }\n\n  if (exitStatus === RootFatalErrored) {\n    const fatalError = workInProgressRootFatalError;\n    prepareFreshStack(root, NoLanes);\n    markRootSuspended(root, lanes);\n    ensureRootIsScheduled(root, now());\n    throw fatalError;\n  }\n\n  // We now have a consistent tree. Because this is a sync render, we\n  // will commit it even if something suspended.\n  const finishedWork: Fiber = (root.current.alternate: any);\n  root.finishedWork = finishedWork;\n  root.finishedLanes = lanes;\n  commitRoot(root);\n\n  // Before exiting, make sure there's a callback scheduled for the next\n  // pending level.\n  ensureRootIsScheduled(root, now());\n\n  return null;\n}\n\nexport function flushRoot(root: FiberRoot, lanes: Lanes) {\n  markRootExpired(root, lanes);\n  ensureRootIsScheduled(root, now());\n  if ((executionContext & (RenderContext | CommitContext)) === NoContext) {\n    resetRenderTimer();\n    flushSyncCallbackQueue();\n  }\n}\n\nexport function getExecutionContext(): ExecutionContext {\n  return executionContext;\n}\n\nexport function flushDiscreteUpdates() {\n  // TODO: Should be able to flush inside batchedUpdates, but not inside `act`.\n  // However, `act` uses `batchedUpdates`, so there's no way to distinguish\n  // those two cases. Need to fix this before exposing flushDiscreteUpdates\n  // as a public API.\n  if (\n    (executionContext & (BatchedContext | RenderContext | CommitContext)) !==\n    NoContext\n  ) {\n    if (__DEV__) {\n      if ((executionContext & RenderContext) !== NoContext) {\n        console.error(\n          'unstable_flushDiscreteUpdates: Cannot flush updates when React is ' +\n            'already rendering.',\n        );\n      }\n    }\n    // We're already rendering, so we can't synchronously flush pending work.\n    // This is probably a nested event dispatch triggered by a lifecycle/effect,\n    // like `el.focus()`. Exit.\n    return;\n  }\n  flushPendingDiscreteUpdates();\n  // If the discrete updates scheduled passive effects, flush them now so that\n  // they fire before the next serial event.\n  flushPassiveEffects();\n}\n\nexport function deferredUpdates<A>(fn: () => A): A {\n  if (decoupleUpdatePriorityFromScheduler) {\n    const previousLanePriority = getCurrentUpdateLanePriority();\n    try {\n      setCurrentUpdateLanePriority(DefaultLanePriority);\n      return runWithPriority(NormalSchedulerPriority, fn);\n    } finally {\n      setCurrentUpdateLanePriority(previousLanePriority);\n    }\n  } else {\n    return runWithPriority(NormalSchedulerPriority, fn);\n  }\n}\n\nfunction flushPendingDiscreteUpdates() {\n  if (rootsWithPendingDiscreteUpdates !== null) {\n    // For each root with pending discrete updates, schedule a callback to\n    // immediately flush them.\n    const roots = rootsWithPendingDiscreteUpdates;\n    rootsWithPendingDiscreteUpdates = null;\n    roots.forEach(root => {\n      markDiscreteUpdatesExpired(root);\n      ensureRootIsScheduled(root, now());\n    });\n  }\n  // Now flush the immediate queue.\n  flushSyncCallbackQueue();\n}\n\nexport function batchedUpdates<A, R>(fn: A => R, a: A): R {\n  const prevExecutionContext = executionContext;\n  executionContext |= BatchedContext;\n  try {\n    return fn(a);\n  } finally {\n    executionContext = prevExecutionContext;\n    if (executionContext === NoContext) {\n      // Flush the immediate callbacks that were scheduled during this batch\n      resetRenderTimer();\n      flushSyncCallbackQueue();\n    }\n  }\n}\n\nexport function batchedEventUpdates<A, R>(fn: A => R, a: A): R {\n  const prevExecutionContext = executionContext;\n  executionContext |= EventContext;\n  try {\n    return fn(a);\n  } finally {\n    executionContext = prevExecutionContext;\n    if (executionContext === NoContext) {\n      // Flush the immediate callbacks that were scheduled during this batch\n      resetRenderTimer();\n      flushSyncCallbackQueue();\n    }\n  }\n}\n\nexport function discreteUpdates<A, B, C, D, R>(\n  fn: (A, B, C) => R,\n  a: A,\n  b: B,\n  c: C,\n  d: D,\n): R {\n  const prevExecutionContext = executionContext;\n  executionContext |= DiscreteEventContext;\n\n  if (decoupleUpdatePriorityFromScheduler) {\n    const previousLanePriority = getCurrentUpdateLanePriority();\n    try {\n      setCurrentUpdateLanePriority(InputDiscreteLanePriority);\n      return runWithPriority(\n        UserBlockingSchedulerPriority,\n        fn.bind(null, a, b, c, d),\n      );\n    } finally {\n      setCurrentUpdateLanePriority(previousLanePriority);\n      executionContext = prevExecutionContext;\n      if (executionContext === NoContext) {\n        // Flush the immediate callbacks that were scheduled during this batch\n        resetRenderTimer();\n        flushSyncCallbackQueue();\n      }\n    }\n  } else {\n    try {\n      return runWithPriority(\n        UserBlockingSchedulerPriority,\n        fn.bind(null, a, b, c, d),\n      );\n    } finally {\n      executionContext = prevExecutionContext;\n      if (executionContext === NoContext) {\n        // Flush the immediate callbacks that were scheduled during this batch\n        resetRenderTimer();\n        flushSyncCallbackQueue();\n      }\n    }\n  }\n}\n\nexport function unbatchedUpdates<A, R>(fn: (a: A) => R, a: A): R {\n  const prevExecutionContext = executionContext;\n  executionContext &= ~BatchedContext;\n  executionContext |= LegacyUnbatchedContext;\n  try {\n    return fn(a);\n  } finally {\n    executionContext = prevExecutionContext;\n    if (executionContext === NoContext) {\n      // Flush the immediate callbacks that were scheduled during this batch\n      resetRenderTimer();\n      flushSyncCallbackQueue();\n    }\n  }\n}\n\nexport function flushSync<A, R>(fn: A => R, a: A): R {\n  const prevExecutionContext = executionContext;\n  if ((prevExecutionContext & (RenderContext | CommitContext)) !== NoContext) {\n    if (__DEV__) {\n      console.error(\n        'flushSync was called from inside a lifecycle method. React cannot ' +\n          'flush when React is already rendering. Consider moving this call to ' +\n          'a scheduler task or micro task.',\n      );\n    }\n    return fn(a);\n  }\n  executionContext |= BatchedContext;\n\n  if (decoupleUpdatePriorityFromScheduler) {\n    const previousLanePriority = getCurrentUpdateLanePriority();\n    try {\n      setCurrentUpdateLanePriority(SyncLanePriority);\n      if (fn) {\n        return runWithPriority(ImmediateSchedulerPriority, fn.bind(null, a));\n      } else {\n        return (undefined: $FlowFixMe);\n      }\n    } finally {\n      setCurrentUpdateLanePriority(previousLanePriority);\n      executionContext = prevExecutionContext;\n      // Flush the immediate callbacks that were scheduled during this batch.\n      // Note that this will happen even if batchedUpdates is higher up\n      // the stack.\n      flushSyncCallbackQueue();\n    }\n  } else {\n    try {\n      if (fn) {\n        return runWithPriority(ImmediateSchedulerPriority, fn.bind(null, a));\n      } else {\n        return (undefined: $FlowFixMe);\n      }\n    } finally {\n      executionContext = prevExecutionContext;\n      // Flush the immediate callbacks that were scheduled during this batch.\n      // Note that this will happen even if batchedUpdates is higher up\n      // the stack.\n      flushSyncCallbackQueue();\n    }\n  }\n}\n\nexport function flushControlled(fn: () => mixed): void {\n  const prevExecutionContext = executionContext;\n  executionContext |= BatchedContext;\n  if (decoupleUpdatePriorityFromScheduler) {\n    const previousLanePriority = getCurrentUpdateLanePriority();\n    try {\n      setCurrentUpdateLanePriority(SyncLanePriority);\n      runWithPriority(ImmediateSchedulerPriority, fn);\n    } finally {\n      setCurrentUpdateLanePriority(previousLanePriority);\n\n      executionContext = prevExecutionContext;\n      if (executionContext === NoContext) {\n        // Flush the immediate callbacks that were scheduled during this batch\n        resetRenderTimer();\n        flushSyncCallbackQueue();\n      }\n    }\n  } else {\n    try {\n      runWithPriority(ImmediateSchedulerPriority, fn);\n    } finally {\n      executionContext = prevExecutionContext;\n      if (executionContext === NoContext) {\n        // Flush the immediate callbacks that were scheduled during this batch\n        resetRenderTimer();\n        flushSyncCallbackQueue();\n      }\n    }\n  }\n}\n\nexport function pushRenderLanes(fiber: Fiber, lanes: Lanes) {\n  pushToStack(subtreeRenderLanesCursor, subtreeRenderLanes, fiber);\n  subtreeRenderLanes = mergeLanes(subtreeRenderLanes, lanes);\n  workInProgressRootIncludedLanes = mergeLanes(\n    workInProgressRootIncludedLanes,\n    lanes,\n  );\n}\n\nexport function popRenderLanes(fiber: Fiber) {\n  subtreeRenderLanes = subtreeRenderLanesCursor.current;\n  popFromStack(subtreeRenderLanesCursor, fiber);\n}\n\nfunction prepareFreshStack(root: FiberRoot, lanes: Lanes) {\n  root.finishedWork = null;\n  root.finishedLanes = NoLanes;\n\n  const timeoutHandle = root.timeoutHandle;\n  if (timeoutHandle !== noTimeout) {\n    // The root previous suspended and scheduled a timeout to commit a fallback\n    // state. Now that we have additional work, cancel the timeout.\n    root.timeoutHandle = noTimeout;\n    // $FlowFixMe Complains noTimeout is not a TimeoutID, despite the check above\n    cancelTimeout(timeoutHandle);\n  }\n\n  if (workInProgress !== null) {\n    let interruptedWork = workInProgress.return;\n    while (interruptedWork !== null) {\n      unwindInterruptedWork(interruptedWork);\n      interruptedWork = interruptedWork.return;\n    }\n  }\n  workInProgressRoot = root;\n  workInProgress = createWorkInProgress(root.current, null);\n  workInProgressRootRenderLanes = subtreeRenderLanes = workInProgressRootIncludedLanes = lanes;\n  workInProgressRootExitStatus = RootIncomplete;\n  workInProgressRootFatalError = null;\n  workInProgressRootSkippedLanes = NoLanes;\n  workInProgressRootUpdatedLanes = NoLanes;\n  workInProgressRootPingedLanes = NoLanes;\n\n  if (enableSchedulerTracing) {\n    spawnedWorkDuringRender = null;\n  }\n\n  if (__DEV__) {\n    ReactStrictModeWarnings.discardPendingWarnings();\n  }\n}\n\nfunction handleError(root, thrownValue): void {\n  do {\n    let erroredWork = workInProgress;\n    try {\n      // Reset module-level state that was set during the render phase.\n      resetContextDependencies();\n      resetHooksAfterThrow();\n      resetCurrentDebugFiberInDEV();\n      // TODO: I found and added this missing line while investigating a\n      // separate issue. Write a regression test using string refs.\n      ReactCurrentOwner.current = null;\n\n      if (erroredWork === null || erroredWork.return === null) {\n        // Expected to be working on a non-root fiber. This is a fatal error\n        // because there's no ancestor that can handle it; the root is\n        // supposed to capture all errors that weren't caught by an error\n        // boundary.\n        workInProgressRootExitStatus = RootFatalErrored;\n        workInProgressRootFatalError = thrownValue;\n        // Set `workInProgress` to null. This represents advancing to the next\n        // sibling, or the parent if there are no siblings. But since the root\n        // has no siblings nor a parent, we set it to null. Usually this is\n        // handled by `completeUnitOfWork` or `unwindWork`, but since we're\n        // intentionally not calling those, we need set it here.\n        // TODO: Consider calling `unwindWork` to pop the contexts.\n        workInProgress = null;\n        return;\n      }\n\n      if (enableProfilerTimer && erroredWork.mode & ProfileMode) {\n        // Record the time spent rendering before an error was thrown. This\n        // avoids inaccurate Profiler durations in the case of a\n        // suspended render.\n        stopProfilerTimerIfRunningAndRecordDelta(erroredWork, true);\n      }\n\n      throwException(\n        root,\n        erroredWork.return,\n        erroredWork,\n        thrownValue,\n        workInProgressRootRenderLanes,\n      );\n      completeUnitOfWork(erroredWork);\n    } catch (yetAnotherThrownValue) {\n      // Something in the return path also threw.\n      thrownValue = yetAnotherThrownValue;\n      if (workInProgress === erroredWork && erroredWork !== null) {\n        // If this boundary has already errored, then we had trouble processing\n        // the error. Bubble it to the next boundary.\n        erroredWork = erroredWork.return;\n        workInProgress = erroredWork;\n      } else {\n        erroredWork = workInProgress;\n      }\n      continue;\n    }\n    // Return to the normal work loop.\n    return;\n  } while (true);\n}\n\nfunction pushDispatcher() {\n  const prevDispatcher = ReactCurrentDispatcher.current;\n  ReactCurrentDispatcher.current = ContextOnlyDispatcher;\n  if (prevDispatcher === null) {\n    // The React isomorphic package does not include a default dispatcher.\n    // Instead the first renderer will lazily attach one, in order to give\n    // nicer error messages.\n    return ContextOnlyDispatcher;\n  } else {\n    return prevDispatcher;\n  }\n}\n\nfunction popDispatcher(prevDispatcher) {\n  ReactCurrentDispatcher.current = prevDispatcher;\n}\n\nfunction pushInteractions(root) {\n  if (enableSchedulerTracing) {\n    const prevInteractions: Set<Interaction> | null = __interactionsRef.current;\n    __interactionsRef.current = root.memoizedInteractions;\n    return prevInteractions;\n  }\n  return null;\n}\n\nfunction popInteractions(prevInteractions) {\n  if (enableSchedulerTracing) {\n    __interactionsRef.current = prevInteractions;\n  }\n}\n\nexport function markCommitTimeOfFallback() {\n  globalMostRecentFallbackTime = now();\n}\n\nexport function markSkippedUpdateLanes(lane: Lane | Lanes): void {\n  workInProgressRootSkippedLanes = mergeLanes(\n    lane,\n    workInProgressRootSkippedLanes,\n  );\n}\n\nexport function renderDidSuspend(): void {\n  if (workInProgressRootExitStatus === RootIncomplete) {\n    workInProgressRootExitStatus = RootSuspended;\n  }\n}\n\nexport function renderDidSuspendDelayIfPossible(): void {\n  if (\n    workInProgressRootExitStatus === RootIncomplete ||\n    workInProgressRootExitStatus === RootSuspended\n  ) {\n    workInProgressRootExitStatus = RootSuspendedWithDelay;\n  }\n\n  // Check if there are updates that we skipped tree that might have unblocked\n  // this render.\n  if (\n    workInProgressRoot !== null &&\n    (includesNonIdleWork(workInProgressRootSkippedLanes) ||\n      includesNonIdleWork(workInProgressRootUpdatedLanes))\n  ) {\n    // Mark the current render as suspended so that we switch to working on\n    // the updates that were skipped. Usually we only suspend at the end of\n    // the render phase.\n    // TODO: We should probably always mark the root as suspended immediately\n    // (inside this function), since by suspending at the end of the render\n    // phase introduces a potential mistake where we suspend lanes that were\n    // pinged or updated while we were rendering.\n    markRootSuspended(workInProgressRoot, workInProgressRootRenderLanes);\n  }\n}\n\nexport function renderDidError() {\n  if (workInProgressRootExitStatus !== RootCompleted) {\n    workInProgressRootExitStatus = RootErrored;\n  }\n}\n\n// Called during render to determine if anything has suspended.\n// Returns false if we're not sure.\nexport function renderHasNotSuspendedYet(): boolean {\n  // If something errored or completed, we can't really be sure,\n  // so those are false.\n  return workInProgressRootExitStatus === RootIncomplete;\n}\n\nfunction renderRootSync(root: FiberRoot, lanes: Lanes) {\n  const prevExecutionContext = executionContext;\n  executionContext |= RenderContext;\n  const prevDispatcher = pushDispatcher();\n\n  // If the root or lanes have changed, throw out the existing stack\n  // and prepare a fresh one. Otherwise we'll continue where we left off.\n  if (workInProgressRoot !== root || workInProgressRootRenderLanes !== lanes) {\n    prepareFreshStack(root, lanes);\n    startWorkOnPendingInteractions(root, lanes);\n  }\n\n  const prevInteractions = pushInteractions(root);\n\n  if (__DEV__) {\n    if (enableDebugTracing) {\n      logRenderStarted(lanes);\n    }\n  }\n\n  if (enableSchedulingProfiler) {\n    markRenderStarted(lanes);\n  }\n\n  do {\n    try {\n      workLoopSync();\n      break;\n    } catch (thrownValue) {\n      handleError(root, thrownValue);\n    }\n  } while (true);\n  resetContextDependencies();\n  if (enableSchedulerTracing) {\n    popInteractions(((prevInteractions: any): Set<Interaction>));\n  }\n\n  executionContext = prevExecutionContext;\n  popDispatcher(prevDispatcher);\n\n  if (workInProgress !== null) {\n    // This is a sync render, so we should have finished the whole tree.\n    invariant(\n      false,\n      'Cannot commit an incomplete root. This error is likely caused by a ' +\n        'bug in React. Please file an issue.',\n    );\n  }\n\n  if (__DEV__) {\n    if (enableDebugTracing) {\n      logRenderStopped();\n    }\n  }\n\n  if (enableSchedulingProfiler) {\n    markRenderStopped();\n  }\n\n  // Set this to null to indicate there's no in-progress render.\n  workInProgressRoot = null;\n  workInProgressRootRenderLanes = NoLanes;\n\n  return workInProgressRootExitStatus;\n}\n\n// The work loop is an extremely hot path. Tell Closure not to inline it.\n/** @noinline */\nfunction workLoopSync() {\n  // Already timed out, so perform work without checking if we need to yield.\n  while (workInProgress !== null) {\n    performUnitOfWork(workInProgress);\n  }\n}\n\nfunction renderRootConcurrent(root: FiberRoot, lanes: Lanes) {\n  const prevExecutionContext = executionContext;\n  executionContext |= RenderContext;\n  const prevDispatcher = pushDispatcher();\n\n  // If the root or lanes have changed, throw out the existing stack\n  // and prepare a fresh one. Otherwise we'll continue where we left off.\n  if (workInProgressRoot !== root || workInProgressRootRenderLanes !== lanes) {\n    resetRenderTimer();\n    prepareFreshStack(root, lanes);\n    startWorkOnPendingInteractions(root, lanes);\n  }\n\n  const prevInteractions = pushInteractions(root);\n\n  if (__DEV__) {\n    if (enableDebugTracing) {\n      logRenderStarted(lanes);\n    }\n  }\n\n  if (enableSchedulingProfiler) {\n    markRenderStarted(lanes);\n  }\n\n  do {\n    try {\n      workLoopConcurrent();\n      break;\n    } catch (thrownValue) {\n      handleError(root, thrownValue);\n    }\n  } while (true);\n  resetContextDependencies();\n  if (enableSchedulerTracing) {\n    popInteractions(((prevInteractions: any): Set<Interaction>));\n  }\n\n  popDispatcher(prevDispatcher);\n  executionContext = prevExecutionContext;\n\n  if (__DEV__) {\n    if (enableDebugTracing) {\n      logRenderStopped();\n    }\n  }\n\n  // Check if the tree has completed.\n  if (workInProgress !== null) {\n    // Still work remaining.\n    if (enableSchedulingProfiler) {\n      markRenderYielded();\n    }\n    return RootIncomplete;\n  } else {\n    // Completed the tree.\n    if (enableSchedulingProfiler) {\n      markRenderStopped();\n    }\n\n    // Set this to null to indicate there's no in-progress render.\n    workInProgressRoot = null;\n    workInProgressRootRenderLanes = NoLanes;\n\n    // Return the final exit status.\n    return workInProgressRootExitStatus;\n  }\n}\n\n/** @noinline */\nfunction workLoopConcurrent() {\n  // Perform work until Scheduler asks us to yield\n  while (workInProgress !== null && !shouldYield()) {\n    performUnitOfWork(workInProgress);\n  }\n}\n\nfunction performUnitOfWork(unitOfWork: Fiber): void {\n  // The current, flushed, state of this fiber is the alternate. Ideally\n  // nothing should rely on this, but relying on it here means that we don't\n  // need an additional field on the work in progress.\n  const current = unitOfWork.alternate;\n  setCurrentDebugFiberInDEV(unitOfWork);\n\n  let next;\n  if (enableProfilerTimer && (unitOfWork.mode & ProfileMode) !== NoMode) {\n    startProfilerTimer(unitOfWork);\n    next = beginWork(current, unitOfWork, subtreeRenderLanes);\n    stopProfilerTimerIfRunningAndRecordDelta(unitOfWork, true);\n  } else {\n    next = beginWork(current, unitOfWork, subtreeRenderLanes);\n  }\n\n  resetCurrentDebugFiberInDEV();\n  unitOfWork.memoizedProps = unitOfWork.pendingProps;\n  if (next === null) {\n    // If this doesn't spawn new work, complete the current work.\n    completeUnitOfWork(unitOfWork);\n  } else {\n    workInProgress = next;\n  }\n\n  ReactCurrentOwner.current = null;\n}\n\nfunction completeUnitOfWork(unitOfWork: Fiber): void {\n  // Attempt to complete the current unit of work, then move to the next\n  // sibling. If there are no more siblings, return to the parent fiber.\n  let completedWork = unitOfWork;\n  do {\n    // The current, flushed, state of this fiber is the alternate. Ideally\n    // nothing should rely on this, but relying on it here means that we don't\n    // need an additional field on the work in progress.\n    const current = completedWork.alternate;\n    const returnFiber = completedWork.return;\n\n    // Check if the work completed or if something threw.\n    if ((completedWork.flags & Incomplete) === NoFlags) {\n      setCurrentDebugFiberInDEV(completedWork);\n      let next;\n      if (\n        !enableProfilerTimer ||\n        (completedWork.mode & ProfileMode) === NoMode\n      ) {\n        next = completeWork(current, completedWork, subtreeRenderLanes);\n      } else {\n        startProfilerTimer(completedWork);\n        next = completeWork(current, completedWork, subtreeRenderLanes);\n        // Update render duration assuming we didn't error.\n        stopProfilerTimerIfRunningAndRecordDelta(completedWork, false);\n      }\n      resetCurrentDebugFiberInDEV();\n\n      if (next !== null) {\n        // Completing this fiber spawned new work. Work on that next.\n        workInProgress = next;\n        return;\n      }\n\n      resetChildLanes(completedWork);\n\n      if (\n        returnFiber !== null &&\n        // Do not append effects to parents if a sibling failed to complete\n        (returnFiber.flags & Incomplete) === NoFlags\n      ) {\n        // Append all the effects of the subtree and this fiber onto the effect\n        // list of the parent. The completion order of the children affects the\n        // side-effect order.\n        if (returnFiber.firstEffect === null) {\n          returnFiber.firstEffect = completedWork.firstEffect;\n        }\n        if (completedWork.lastEffect !== null) {\n          if (returnFiber.lastEffect !== null) {\n            returnFiber.lastEffect.nextEffect = completedWork.firstEffect;\n          }\n          returnFiber.lastEffect = completedWork.lastEffect;\n        }\n\n        // If this fiber had side-effects, we append it AFTER the children's\n        // side-effects. We can perform certain side-effects earlier if needed,\n        // by doing multiple passes over the effect list. We don't want to\n        // schedule our own side-effect on our own list because if end up\n        // reusing children we'll schedule this effect onto itself since we're\n        // at the end.\n        const flags = completedWork.flags;\n\n        // Skip both NoWork and PerformedWork tags when creating the effect\n        // list. PerformedWork effect is read by React DevTools but shouldn't be\n        // committed.\n        if (flags > PerformedWork) {\n          if (returnFiber.lastEffect !== null) {\n            returnFiber.lastEffect.nextEffect = completedWork;\n          } else {\n            returnFiber.firstEffect = completedWork;\n          }\n          returnFiber.lastEffect = completedWork;\n        }\n      }\n    } else {\n      // This fiber did not complete because something threw. Pop values off\n      // the stack without entering the complete phase. If this is a boundary,\n      // capture values if possible.\n      const next = unwindWork(completedWork, subtreeRenderLanes);\n\n      // Because this fiber did not complete, don't reset its expiration time.\n\n      if (next !== null) {\n        // If completing this work spawned new work, do that next. We'll come\n        // back here again.\n        // Since we're restarting, remove anything that is not a host effect\n        // from the effect tag.\n        next.flags &= HostEffectMask;\n        workInProgress = next;\n        return;\n      }\n\n      if (\n        enableProfilerTimer &&\n        (completedWork.mode & ProfileMode) !== NoMode\n      ) {\n        // Record the render duration for the fiber that errored.\n        stopProfilerTimerIfRunningAndRecordDelta(completedWork, false);\n\n        // Include the time spent working on failed children before continuing.\n        let actualDuration = completedWork.actualDuration;\n        let child = completedWork.child;\n        while (child !== null) {\n          actualDuration += child.actualDuration;\n          child = child.sibling;\n        }\n        completedWork.actualDuration = actualDuration;\n      }\n\n      if (returnFiber !== null) {\n        // Mark the parent fiber as incomplete and clear its effect list.\n        returnFiber.firstEffect = returnFiber.lastEffect = null;\n        returnFiber.flags |= Incomplete;\n      }\n    }\n\n    const siblingFiber = completedWork.sibling;\n    if (siblingFiber !== null) {\n      // If there is more work to do in this returnFiber, do that next.\n      workInProgress = siblingFiber;\n      return;\n    }\n    // Otherwise, return to the parent\n    completedWork = returnFiber;\n    // Update the next thing we're working on in case something throws.\n    workInProgress = completedWork;\n  } while (completedWork !== null);\n\n  // We've reached the root.\n  if (workInProgressRootExitStatus === RootIncomplete) {\n    workInProgressRootExitStatus = RootCompleted;\n  }\n}\n\nfunction resetChildLanes(completedWork: Fiber) {\n  if (\n    // TODO: Move this check out of the hot path by moving `resetChildLanes`\n    // to switch statement in `completeWork`.\n    (completedWork.tag === LegacyHiddenComponent ||\n      completedWork.tag === OffscreenComponent) &&\n    completedWork.memoizedState !== null &&\n    !includesSomeLane(subtreeRenderLanes, (OffscreenLane: Lane)) &&\n    (completedWork.mode & ConcurrentMode) !== NoLanes\n  ) {\n    // The children of this component are hidden. Don't bubble their\n    // expiration times.\n    return;\n  }\n\n  let newChildLanes = NoLanes;\n\n  // Bubble up the earliest expiration time.\n  if (enableProfilerTimer && (completedWork.mode & ProfileMode) !== NoMode) {\n    // In profiling mode, resetChildExpirationTime is also used to reset\n    // profiler durations.\n    let actualDuration = completedWork.actualDuration;\n    let treeBaseDuration = ((completedWork.selfBaseDuration: any): number);\n\n    // When a fiber is cloned, its actualDuration is reset to 0. This value will\n    // only be updated if work is done on the fiber (i.e. it doesn't bailout).\n    // When work is done, it should bubble to the parent's actualDuration. If\n    // the fiber has not been cloned though, (meaning no work was done), then\n    // this value will reflect the amount of time spent working on a previous\n    // render. In that case it should not bubble. We determine whether it was\n    // cloned by comparing the child pointer.\n    const shouldBubbleActualDurations =\n      completedWork.alternate === null ||\n      completedWork.child !== completedWork.alternate.child;\n\n    let child = completedWork.child;\n    while (child !== null) {\n      newChildLanes = mergeLanes(\n        newChildLanes,\n        mergeLanes(child.lanes, child.childLanes),\n      );\n      if (shouldBubbleActualDurations) {\n        actualDuration += child.actualDuration;\n      }\n      treeBaseDuration += child.treeBaseDuration;\n      child = child.sibling;\n    }\n\n    const isTimedOutSuspense =\n      completedWork.tag === SuspenseComponent &&\n      completedWork.memoizedState !== null;\n    if (isTimedOutSuspense) {\n      // Don't count time spent in a timed out Suspense subtree as part of the base duration.\n      const primaryChildFragment = completedWork.child;\n      if (primaryChildFragment !== null) {\n        treeBaseDuration -= ((primaryChildFragment.treeBaseDuration: any): number);\n      }\n    }\n\n    completedWork.actualDuration = actualDuration;\n    completedWork.treeBaseDuration = treeBaseDuration;\n  } else {\n    let child = completedWork.child;\n    while (child !== null) {\n      newChildLanes = mergeLanes(\n        newChildLanes,\n        mergeLanes(child.lanes, child.childLanes),\n      );\n      child = child.sibling;\n    }\n  }\n\n  completedWork.childLanes = newChildLanes;\n}\n\nfunction commitRoot(root) {\n  const renderPriorityLevel = getCurrentPriorityLevel();\n  runWithPriority(\n    ImmediateSchedulerPriority,\n    commitRootImpl.bind(null, root, renderPriorityLevel),\n  );\n  return null;\n}\n\nfunction commitRootImpl(root, renderPriorityLevel) {\n  do {\n    // `flushPassiveEffects` will call `flushSyncUpdateQueue` at the end, which\n    // means `flushPassiveEffects` will sometimes result in additional\n    // passive effects. So we need to keep flushing in a loop until there are\n    // no more pending effects.\n    // TODO: Might be better if `flushPassiveEffects` did not automatically\n    // flush synchronous work at the end, to avoid factoring hazards like this.\n    flushPassiveEffects();\n  } while (rootWithPendingPassiveEffects !== null);\n  flushRenderPhaseStrictModeWarningsInDEV();\n\n  invariant(\n    (executionContext & (RenderContext | CommitContext)) === NoContext,\n    'Should not already be working.',\n  );\n\n  const finishedWork = root.finishedWork;\n  const lanes = root.finishedLanes;\n\n  if (__DEV__) {\n    if (enableDebugTracing) {\n      logCommitStarted(lanes);\n    }\n  }\n\n  if (enableSchedulingProfiler) {\n    markCommitStarted(lanes);\n  }\n\n  if (finishedWork === null) {\n    if (__DEV__) {\n      if (enableDebugTracing) {\n        logCommitStopped();\n      }\n    }\n\n    if (enableSchedulingProfiler) {\n      markCommitStopped();\n    }\n\n    return null;\n  }\n  root.finishedWork = null;\n  root.finishedLanes = NoLanes;\n\n  invariant(\n    finishedWork !== root.current,\n    'Cannot commit the same tree as before. This error is likely caused by ' +\n      'a bug in React. Please file an issue.',\n  );\n\n  // commitRoot never returns a continuation; it always finishes synchronously.\n  // So we can clear these now to allow a new callback to be scheduled.\n  root.callbackNode = null;\n\n  // Update the first and last pending times on this root. The new first\n  // pending time is whatever is left on the root fiber.\n  let remainingLanes = mergeLanes(finishedWork.lanes, finishedWork.childLanes);\n  markRootFinished(root, remainingLanes);\n\n  // Clear already finished discrete updates in case that a later call of\n  // `flushDiscreteUpdates` starts a useless render pass which may cancels\n  // a scheduled timeout.\n  if (rootsWithPendingDiscreteUpdates !== null) {\n    if (\n      !hasDiscreteLanes(remainingLanes) &&\n      rootsWithPendingDiscreteUpdates.has(root)\n    ) {\n      rootsWithPendingDiscreteUpdates.delete(root);\n    }\n  }\n\n  if (root === workInProgressRoot) {\n    // We can reset these now that they are finished.\n    workInProgressRoot = null;\n    workInProgress = null;\n    workInProgressRootRenderLanes = NoLanes;\n  } else {\n    // This indicates that the last root we worked on is not the same one that\n    // we're committing now. This most commonly happens when a suspended root\n    // times out.\n  }\n\n  // Get the list of effects.\n  let firstEffect;\n  if (finishedWork.flags > PerformedWork) {\n    // A fiber's effect list consists only of its children, not itself. So if\n    // the root has an effect, we need to add it to the end of the list. The\n    // resulting list is the set that would belong to the root's parent, if it\n    // had one; that is, all the effects in the tree including the root.\n    if (finishedWork.lastEffect !== null) {\n      finishedWork.lastEffect.nextEffect = finishedWork;\n      firstEffect = finishedWork.firstEffect;\n    } else {\n      firstEffect = finishedWork;\n    }\n  } else {\n    // There is no effect on the root.\n    firstEffect = finishedWork.firstEffect;\n  }\n\n  if (firstEffect !== null) {\n    let previousLanePriority;\n    if (decoupleUpdatePriorityFromScheduler) {\n      previousLanePriority = getCurrentUpdateLanePriority();\n      setCurrentUpdateLanePriority(SyncLanePriority);\n    }\n\n    const prevExecutionContext = executionContext;\n    executionContext |= CommitContext;\n    const prevInteractions = pushInteractions(root);\n\n    // Reset this to null before calling lifecycles\n    ReactCurrentOwner.current = null;\n\n    // The commit phase is broken into several sub-phases. We do a separate pass\n    // of the effect list for each phase: all mutation effects come before all\n    // layout effects, and so on.\n\n    // The first phase a \"before mutation\" phase. We use this phase to read the\n    // state of the host tree right before we mutate it. This is where\n    // getSnapshotBeforeUpdate is called.\n    focusedInstanceHandle = prepareForCommit(root.containerInfo);\n    shouldFireAfterActiveInstanceBlur = false;\n\n    nextEffect = firstEffect;\n    do {\n      if (__DEV__) {\n        invokeGuardedCallback(null, commitBeforeMutationEffects, null);\n        if (hasCaughtError()) {\n          invariant(nextEffect !== null, 'Should be working on an effect.');\n          const error = clearCaughtError();\n          captureCommitPhaseError(nextEffect, error);\n          nextEffect = nextEffect.nextEffect;\n        }\n      } else {\n        try {\n          commitBeforeMutationEffects();\n        } catch (error) {\n          invariant(nextEffect !== null, 'Should be working on an effect.');\n          captureCommitPhaseError(nextEffect, error);\n          nextEffect = nextEffect.nextEffect;\n        }\n      }\n    } while (nextEffect !== null);\n\n    // We no longer need to track the active instance fiber\n    focusedInstanceHandle = null;\n\n    if (enableProfilerTimer) {\n      // Mark the current commit time to be shared by all Profilers in this\n      // batch. This enables them to be grouped later.\n      recordCommitTime();\n    }\n\n    // The next phase is the mutation phase, where we mutate the host tree.\n    nextEffect = firstEffect;\n    do {\n      if (__DEV__) {\n        invokeGuardedCallback(\n          null,\n          commitMutationEffects,\n          null,\n          root,\n          renderPriorityLevel,\n        );\n        if (hasCaughtError()) {\n          invariant(nextEffect !== null, 'Should be working on an effect.');\n          const error = clearCaughtError();\n          captureCommitPhaseError(nextEffect, error);\n          nextEffect = nextEffect.nextEffect;\n        }\n      } else {\n        try {\n          commitMutationEffects(root, renderPriorityLevel);\n        } catch (error) {\n          invariant(nextEffect !== null, 'Should be working on an effect.');\n          captureCommitPhaseError(nextEffect, error);\n          nextEffect = nextEffect.nextEffect;\n        }\n      }\n    } while (nextEffect !== null);\n\n    if (shouldFireAfterActiveInstanceBlur) {\n      afterActiveInstanceBlur();\n    }\n    resetAfterCommit(root.containerInfo);\n\n    // The work-in-progress tree is now the current tree. This must come after\n    // the mutation phase, so that the previous tree is still current during\n    // componentWillUnmount, but before the layout phase, so that the finished\n    // work is current during componentDidMount/Update.\n    root.current = finishedWork;\n\n    // The next phase is the layout phase, where we call effects that read\n    // the host tree after it's been mutated. The idiomatic use case for this is\n    // layout, but class component lifecycles also fire here for legacy reasons.\n    nextEffect = firstEffect;\n    do {\n      if (__DEV__) {\n        invokeGuardedCallback(null, commitLayoutEffects, null, root, lanes);\n        if (hasCaughtError()) {\n          invariant(nextEffect !== null, 'Should be working on an effect.');\n          const error = clearCaughtError();\n          captureCommitPhaseError(nextEffect, error);\n          nextEffect = nextEffect.nextEffect;\n        }\n      } else {\n        try {\n          commitLayoutEffects(root, lanes);\n        } catch (error) {\n          invariant(nextEffect !== null, 'Should be working on an effect.');\n          captureCommitPhaseError(nextEffect, error);\n          nextEffect = nextEffect.nextEffect;\n        }\n      }\n    } while (nextEffect !== null);\n\n    nextEffect = null;\n\n    // Tell Scheduler to yield at the end of the frame, so the browser has an\n    // opportunity to paint.\n    requestPaint();\n\n    if (enableSchedulerTracing) {\n      popInteractions(((prevInteractions: any): Set<Interaction>));\n    }\n    executionContext = prevExecutionContext;\n\n    if (decoupleUpdatePriorityFromScheduler && previousLanePriority != null) {\n      // Reset the priority to the previous non-sync value.\n      setCurrentUpdateLanePriority(previousLanePriority);\n    }\n  } else {\n    // No effects.\n    root.current = finishedWork;\n    // Measure these anyway so the flamegraph explicitly shows that there were\n    // no effects.\n    // TODO: Maybe there's a better way to report this.\n    if (enableProfilerTimer) {\n      recordCommitTime();\n    }\n  }\n\n  const rootDidHavePassiveEffects = rootDoesHavePassiveEffects;\n\n  if (rootDoesHavePassiveEffects) {\n    // This commit has passive effects. Stash a reference to them. But don't\n    // schedule a callback until after flushing layout work.\n    rootDoesHavePassiveEffects = false;\n    rootWithPendingPassiveEffects = root;\n    pendingPassiveEffectsLanes = lanes;\n    pendingPassiveEffectsRenderPriority = renderPriorityLevel;\n  } else {\n    // We are done with the effect chain at this point so let's clear the\n    // nextEffect pointers to assist with GC. If we have passive effects, we'll\n    // clear this in flushPassiveEffects.\n    nextEffect = firstEffect;\n    while (nextEffect !== null) {\n      const nextNextEffect = nextEffect.nextEffect;\n      nextEffect.nextEffect = null;\n      if (nextEffect.flags & Deletion) {\n        detachFiberAfterEffects(nextEffect);\n      }\n      nextEffect = nextNextEffect;\n    }\n  }\n\n  // Read this again, since an effect might have updated it\n  remainingLanes = root.pendingLanes;\n\n  // Check if there's remaining work on this root\n  if (remainingLanes !== NoLanes) {\n    if (enableSchedulerTracing) {\n      if (spawnedWorkDuringRender !== null) {\n        const expirationTimes = spawnedWorkDuringRender;\n        spawnedWorkDuringRender = null;\n        for (let i = 0; i < expirationTimes.length; i++) {\n          scheduleInteractions(\n            root,\n            expirationTimes[i],\n            root.memoizedInteractions,\n          );\n        }\n      }\n      schedulePendingInteractions(root, remainingLanes);\n    }\n  } else {\n    // If there's no remaining work, we can clear the set of already failed\n    // error boundaries.\n    legacyErrorBoundariesThatAlreadyFailed = null;\n  }\n\n  if (enableSchedulerTracing) {\n    if (!rootDidHavePassiveEffects) {\n      // If there are no passive effects, then we can complete the pending interactions.\n      // Otherwise, we'll wait until after the passive effects are flushed.\n      // Wait to do this until after remaining work has been scheduled,\n      // so that we don't prematurely signal complete for interactions when there's e.g. hidden work.\n      finishPendingInteractions(root, lanes);\n    }\n  }\n\n  if (remainingLanes === SyncLane) {\n    // Count the number of times the root synchronously re-renders without\n    // finishing. If there are too many, it indicates an infinite update loop.\n    if (root === rootWithNestedUpdates) {\n      nestedUpdateCount++;\n    } else {\n      nestedUpdateCount = 0;\n      rootWithNestedUpdates = root;\n    }\n  } else {\n    nestedUpdateCount = 0;\n  }\n\n  onCommitRootDevTools(finishedWork.stateNode, renderPriorityLevel);\n\n  if (__DEV__) {\n    onCommitRootTestSelector();\n  }\n\n  // Always call this before exiting `commitRoot`, to ensure that any\n  // additional work on this root is scheduled.\n  ensureRootIsScheduled(root, now());\n\n  if (hasUncaughtError) {\n    hasUncaughtError = false;\n    const error = firstUncaughtError;\n    firstUncaughtError = null;\n    throw error;\n  }\n\n  if ((executionContext & LegacyUnbatchedContext) !== NoContext) {\n    if (__DEV__) {\n      if (enableDebugTracing) {\n        logCommitStopped();\n      }\n    }\n\n    if (enableSchedulingProfiler) {\n      markCommitStopped();\n    }\n\n    // This is a legacy edge case. We just committed the initial mount of\n    // a ReactDOM.render-ed root inside of batchedUpdates. The commit fired\n    // synchronously, but layout updates should be deferred until the end\n    // of the batch.\n    return null;\n  }\n\n  // If layout work was scheduled, flush it now.\n  flushSyncCallbackQueue();\n\n  if (__DEV__) {\n    if (enableDebugTracing) {\n      logCommitStopped();\n    }\n  }\n\n  if (enableSchedulingProfiler) {\n    markCommitStopped();\n  }\n\n  return null;\n}\n\nfunction commitBeforeMutationEffects() {\n  while (nextEffect !== null) {\n    const current = nextEffect.alternate;\n\n    if (!shouldFireAfterActiveInstanceBlur && focusedInstanceHandle !== null) {\n      if ((nextEffect.flags & Deletion) !== NoFlags) {\n        if (doesFiberContain(nextEffect, focusedInstanceHandle)) {\n          shouldFireAfterActiveInstanceBlur = true;\n          beforeActiveInstanceBlur();\n        }\n      } else {\n        // TODO: Move this out of the hot path using a dedicated effect tag.\n        if (\n          nextEffect.tag === SuspenseComponent &&\n          isSuspenseBoundaryBeingHidden(current, nextEffect) &&\n          doesFiberContain(nextEffect, focusedInstanceHandle)\n        ) {\n          shouldFireAfterActiveInstanceBlur = true;\n          beforeActiveInstanceBlur();\n        }\n      }\n    }\n\n    const flags = nextEffect.flags;\n    if ((flags & Snapshot) !== NoFlags) {\n      setCurrentDebugFiberInDEV(nextEffect);\n\n      commitBeforeMutationEffectOnFiber(current, nextEffect);\n\n      resetCurrentDebugFiberInDEV();\n    }\n    if ((flags & Passive) !== NoFlags) {\n      // If there are passive effects, schedule a callback to flush at\n      // the earliest opportunity.\n      if (!rootDoesHavePassiveEffects) {\n        rootDoesHavePassiveEffects = true;\n        scheduleCallback(NormalSchedulerPriority, () => {\n          flushPassiveEffects();\n          return null;\n        });\n      }\n    }\n    nextEffect = nextEffect.nextEffect;\n  }\n}\n\nfunction commitMutationEffects(\n  root: FiberRoot,\n  renderPriorityLevel: ReactPriorityLevel,\n) {\n  // TODO: Should probably move the bulk of this function to commitWork.\n  while (nextEffect !== null) {\n    setCurrentDebugFiberInDEV(nextEffect);\n\n    const flags = nextEffect.flags;\n\n    if (flags & ContentReset) {\n      commitResetTextContent(nextEffect);\n    }\n\n    if (flags & Ref) {\n      const current = nextEffect.alternate;\n      if (current !== null) {\n        commitDetachRef(current);\n      }\n      if (enableScopeAPI) {\n        // TODO: This is a temporary solution that allowed us to transition away\n        // from React Flare on www.\n        if (nextEffect.tag === ScopeComponent) {\n          commitAttachRef(nextEffect);\n        }\n      }\n    }\n\n    // The following switch statement is only concerned about placement,\n    // updates, and deletions. To avoid needing to add a case for every possible\n    // bitmap value, we remove the secondary effects from the effect tag and\n    // switch on that value.\n    const primaryFlags = flags & (Placement | Update | Deletion | Hydrating);\n    switch (primaryFlags) {\n      case Placement: {\n        commitPlacement(nextEffect);\n        // Clear the \"placement\" from effect tag so that we know that this is\n        // inserted, before any life-cycles like componentDidMount gets called.\n        // TODO: findDOMNode doesn't rely on this any more but isMounted does\n        // and isMounted is deprecated anyway so we should be able to kill this.\n        nextEffect.flags &= ~Placement;\n        break;\n      }\n      case PlacementAndUpdate: {\n        // Placement\n        commitPlacement(nextEffect);\n        // Clear the \"placement\" from effect tag so that we know that this is\n        // inserted, before any life-cycles like componentDidMount gets called.\n        nextEffect.flags &= ~Placement;\n\n        // Update\n        const current = nextEffect.alternate;\n        commitWork(current, nextEffect);\n        break;\n      }\n      case Hydrating: {\n        nextEffect.flags &= ~Hydrating;\n        break;\n      }\n      case HydratingAndUpdate: {\n        nextEffect.flags &= ~Hydrating;\n\n        // Update\n        const current = nextEffect.alternate;\n        commitWork(current, nextEffect);\n        break;\n      }\n      case Update: {\n        const current = nextEffect.alternate;\n        commitWork(current, nextEffect);\n        break;\n      }\n      case Deletion: {\n        commitDeletion(root, nextEffect, renderPriorityLevel);\n        break;\n      }\n    }\n\n    resetCurrentDebugFiberInDEV();\n    nextEffect = nextEffect.nextEffect;\n  }\n}\n\nfunction commitLayoutEffects(root: FiberRoot, committedLanes: Lanes) {\n  if (__DEV__) {\n    if (enableDebugTracing) {\n      logLayoutEffectsStarted(committedLanes);\n    }\n  }\n\n  if (enableSchedulingProfiler) {\n    markLayoutEffectsStarted(committedLanes);\n  }\n\n  // TODO: Should probably move the bulk of this function to commitWork.\n  while (nextEffect !== null) {\n    setCurrentDebugFiberInDEV(nextEffect);\n\n    const flags = nextEffect.flags;\n\n    if (flags & (Update | Callback)) {\n      const current = nextEffect.alternate;\n      commitLayoutEffectOnFiber(root, current, nextEffect, committedLanes);\n    }\n\n    if (enableScopeAPI) {\n      // TODO: This is a temporary solution that allowed us to transition away\n      // from React Flare on www.\n      if (flags & Ref && nextEffect.tag !== ScopeComponent) {\n        commitAttachRef(nextEffect);\n      }\n    } else {\n      if (flags & Ref) {\n        commitAttachRef(nextEffect);\n      }\n    }\n\n    resetCurrentDebugFiberInDEV();\n    nextEffect = nextEffect.nextEffect;\n  }\n\n  if (__DEV__) {\n    if (enableDebugTracing) {\n      logLayoutEffectsStopped();\n    }\n  }\n\n  if (enableSchedulingProfiler) {\n    markLayoutEffectsStopped();\n  }\n}\n\nexport function flushPassiveEffects(): boolean {\n  // Returns whether passive effects were flushed.\n  if (pendingPassiveEffectsRenderPriority !== NoSchedulerPriority) {\n    const priorityLevel =\n      pendingPassiveEffectsRenderPriority > NormalSchedulerPriority\n        ? NormalSchedulerPriority\n        : pendingPassiveEffectsRenderPriority;\n    pendingPassiveEffectsRenderPriority = NoSchedulerPriority;\n    if (decoupleUpdatePriorityFromScheduler) {\n      const previousLanePriority = getCurrentUpdateLanePriority();\n      try {\n        setCurrentUpdateLanePriority(\n          schedulerPriorityToLanePriority(priorityLevel),\n        );\n        return runWithPriority(priorityLevel, flushPassiveEffectsImpl);\n      } finally {\n        setCurrentUpdateLanePriority(previousLanePriority);\n      }\n    } else {\n      return runWithPriority(priorityLevel, flushPassiveEffectsImpl);\n    }\n  }\n  return false;\n}\n\nexport function enqueuePendingPassiveProfilerEffect(fiber: Fiber): void {\n  if (enableProfilerTimer && enableProfilerCommitHooks) {\n    pendingPassiveProfilerEffects.push(fiber);\n    if (!rootDoesHavePassiveEffects) {\n      rootDoesHavePassiveEffects = true;\n      scheduleCallback(NormalSchedulerPriority, () => {\n        flushPassiveEffects();\n        return null;\n      });\n    }\n  }\n}\n\nexport function enqueuePendingPassiveHookEffectMount(\n  fiber: Fiber,\n  effect: HookEffect,\n): void {\n  pendingPassiveHookEffectsMount.push(effect, fiber);\n  if (!rootDoesHavePassiveEffects) {\n    rootDoesHavePassiveEffects = true;\n    scheduleCallback(NormalSchedulerPriority, () => {\n      flushPassiveEffects();\n      return null;\n    });\n  }\n}\n\nexport function enqueuePendingPassiveHookEffectUnmount(\n  fiber: Fiber,\n  effect: HookEffect,\n): void {\n  pendingPassiveHookEffectsUnmount.push(effect, fiber);\n  if (__DEV__) {\n    fiber.flags |= PassiveUnmountPendingDev;\n    const alternate = fiber.alternate;\n    if (alternate !== null) {\n      alternate.flags |= PassiveUnmountPendingDev;\n    }\n  }\n  if (!rootDoesHavePassiveEffects) {\n    rootDoesHavePassiveEffects = true;\n    scheduleCallback(NormalSchedulerPriority, () => {\n      flushPassiveEffects();\n      return null;\n    });\n  }\n}\n\nfunction invokePassiveEffectCreate(effect: HookEffect): void {\n  const create = effect.create;\n  effect.destroy = create();\n}\n\nfunction flushPassiveEffectsImpl() {\n  if (rootWithPendingPassiveEffects === null) {\n    return false;\n  }\n\n  const root = rootWithPendingPassiveEffects;\n  const lanes = pendingPassiveEffectsLanes;\n  rootWithPendingPassiveEffects = null;\n  pendingPassiveEffectsLanes = NoLanes;\n\n  invariant(\n    (executionContext & (RenderContext | CommitContext)) === NoContext,\n    'Cannot flush passive effects while already rendering.',\n  );\n\n  if (__DEV__) {\n    if (enableDebugTracing) {\n      logPassiveEffectsStarted(lanes);\n    }\n  }\n\n  if (enableSchedulingProfiler) {\n    markPassiveEffectsStarted(lanes);\n  }\n\n  if (__DEV__) {\n    isFlushingPassiveEffects = true;\n  }\n\n  const prevExecutionContext = executionContext;\n  executionContext |= CommitContext;\n  const prevInteractions = pushInteractions(root);\n\n  // It's important that ALL pending passive effect destroy functions are called\n  // before ANY passive effect create functions are called.\n  // Otherwise effects in sibling components might interfere with each other.\n  // e.g. a destroy function in one component may unintentionally override a ref\n  // value set by a create function in another component.\n  // Layout effects have the same constraint.\n\n  // First pass: Destroy stale passive effects.\n  const unmountEffects = pendingPassiveHookEffectsUnmount;\n  pendingPassiveHookEffectsUnmount = [];\n  for (let i = 0; i < unmountEffects.length; i += 2) {\n    const effect = ((unmountEffects[i]: any): HookEffect);\n    const fiber = ((unmountEffects[i + 1]: any): Fiber);\n    const destroy = effect.destroy;\n    effect.destroy = undefined;\n\n    if (__DEV__) {\n      fiber.flags &= ~PassiveUnmountPendingDev;\n      const alternate = fiber.alternate;\n      if (alternate !== null) {\n        alternate.flags &= ~PassiveUnmountPendingDev;\n      }\n    }\n\n    if (typeof destroy === 'function') {\n      if (__DEV__) {\n        setCurrentDebugFiberInDEV(fiber);\n        if (\n          enableProfilerTimer &&\n          enableProfilerCommitHooks &&\n          fiber.mode & ProfileMode\n        ) {\n          startPassiveEffectTimer();\n          invokeGuardedCallback(null, destroy, null);\n          recordPassiveEffectDuration(fiber);\n        } else {\n          invokeGuardedCallback(null, destroy, null);\n        }\n        if (hasCaughtError()) {\n          invariant(fiber !== null, 'Should be working on an effect.');\n          const error = clearCaughtError();\n          captureCommitPhaseError(fiber, error);\n        }\n        resetCurrentDebugFiberInDEV();\n      } else {\n        try {\n          if (\n            enableProfilerTimer &&\n            enableProfilerCommitHooks &&\n            fiber.mode & ProfileMode\n          ) {\n            try {\n              startPassiveEffectTimer();\n              destroy();\n            } finally {\n              recordPassiveEffectDuration(fiber);\n            }\n          } else {\n            destroy();\n          }\n        } catch (error) {\n          invariant(fiber !== null, 'Should be working on an effect.');\n          captureCommitPhaseError(fiber, error);\n        }\n      }\n    }\n  }\n  // Second pass: Create new passive effects.\n  const mountEffects = pendingPassiveHookEffectsMount;\n  pendingPassiveHookEffectsMount = [];\n  for (let i = 0; i < mountEffects.length; i += 2) {\n    const effect = ((mountEffects[i]: any): HookEffect);\n    const fiber = ((mountEffects[i + 1]: any): Fiber);\n    if (__DEV__) {\n      setCurrentDebugFiberInDEV(fiber);\n      if (\n        enableProfilerTimer &&\n        enableProfilerCommitHooks &&\n        fiber.mode & ProfileMode\n      ) {\n        startPassiveEffectTimer();\n        invokeGuardedCallback(null, invokePassiveEffectCreate, null, effect);\n        recordPassiveEffectDuration(fiber);\n      } else {\n        invokeGuardedCallback(null, invokePassiveEffectCreate, null, effect);\n      }\n      if (hasCaughtError()) {\n        invariant(fiber !== null, 'Should be working on an effect.');\n        const error = clearCaughtError();\n        captureCommitPhaseError(fiber, error);\n      }\n      resetCurrentDebugFiberInDEV();\n    } else {\n      try {\n        const create = effect.create;\n        if (\n          enableProfilerTimer &&\n          enableProfilerCommitHooks &&\n          fiber.mode & ProfileMode\n        ) {\n          try {\n            startPassiveEffectTimer();\n            effect.destroy = create();\n          } finally {\n            recordPassiveEffectDuration(fiber);\n          }\n        } else {\n          effect.destroy = create();\n        }\n      } catch (error) {\n        invariant(fiber !== null, 'Should be working on an effect.');\n        captureCommitPhaseError(fiber, error);\n      }\n    }\n  }\n\n  // Note: This currently assumes there are no passive effects on the root fiber\n  // because the root is not part of its own effect list.\n  // This could change in the future.\n  let effect = root.current.firstEffect;\n  while (effect !== null) {\n    const nextNextEffect = effect.nextEffect;\n    // Remove nextEffect pointer to assist GC\n    effect.nextEffect = null;\n    if (effect.flags & Deletion) {\n      detachFiberAfterEffects(effect);\n    }\n    effect = nextNextEffect;\n  }\n\n  if (enableProfilerTimer && enableProfilerCommitHooks) {\n    const profilerEffects = pendingPassiveProfilerEffects;\n    pendingPassiveProfilerEffects = [];\n    for (let i = 0; i < profilerEffects.length; i++) {\n      const fiber = ((profilerEffects[i]: any): Fiber);\n      commitPassiveEffectDurations(root, fiber);\n    }\n  }\n\n  if (enableSchedulerTracing) {\n    popInteractions(((prevInteractions: any): Set<Interaction>));\n    finishPendingInteractions(root, lanes);\n  }\n\n  if (__DEV__) {\n    isFlushingPassiveEffects = false;\n  }\n\n  if (__DEV__) {\n    if (enableDebugTracing) {\n      logPassiveEffectsStopped();\n    }\n  }\n\n  if (enableSchedulingProfiler) {\n    markPassiveEffectsStopped();\n  }\n\n  executionContext = prevExecutionContext;\n\n  flushSyncCallbackQueue();\n\n  // If additional passive effects were scheduled, increment a counter. If this\n  // exceeds the limit, we'll fire a warning.\n  nestedPassiveUpdateCount =\n    rootWithPendingPassiveEffects === null ? 0 : nestedPassiveUpdateCount + 1;\n\n  return true;\n}\n\nexport function isAlreadyFailedLegacyErrorBoundary(instance: mixed): boolean {\n  return (\n    legacyErrorBoundariesThatAlreadyFailed !== null &&\n    legacyErrorBoundariesThatAlreadyFailed.has(instance)\n  );\n}\n\nexport function markLegacyErrorBoundaryAsFailed(instance: mixed) {\n  if (legacyErrorBoundariesThatAlreadyFailed === null) {\n    legacyErrorBoundariesThatAlreadyFailed = new Set([instance]);\n  } else {\n    legacyErrorBoundariesThatAlreadyFailed.add(instance);\n  }\n}\n\nfunction prepareToThrowUncaughtError(error: mixed) {\n  if (!hasUncaughtError) {\n    hasUncaughtError = true;\n    firstUncaughtError = error;\n  }\n}\nexport const onUncaughtError = prepareToThrowUncaughtError;\n\nfunction captureCommitPhaseErrorOnRoot(\n  rootFiber: Fiber,\n  sourceFiber: Fiber,\n  error: mixed,\n) {\n  const errorInfo = createCapturedValue(error, sourceFiber);\n  const update = createRootErrorUpdate(rootFiber, errorInfo, (SyncLane: Lane));\n  enqueueUpdate(rootFiber, update);\n  const eventTime = requestEventTime();\n  const root = markUpdateLaneFromFiberToRoot(rootFiber, (SyncLane: Lane));\n  if (root !== null) {\n    markRootUpdated(root, SyncLane, eventTime);\n    ensureRootIsScheduled(root, eventTime);\n    schedulePendingInteractions(root, SyncLane);\n  }\n}\n\nexport function captureCommitPhaseError(sourceFiber: Fiber, error: mixed) {\n  if (sourceFiber.tag === HostRoot) {\n    // Error was thrown at the root. There is no parent, so the root\n    // itself should capture it.\n    captureCommitPhaseErrorOnRoot(sourceFiber, sourceFiber, error);\n    return;\n  }\n\n  let fiber = sourceFiber.return;\n\n  while (fiber !== null) {\n    if (fiber.tag === HostRoot) {\n      captureCommitPhaseErrorOnRoot(fiber, sourceFiber, error);\n      return;\n    } else if (fiber.tag === ClassComponent) {\n      const ctor = fiber.type;\n      const instance = fiber.stateNode;\n      if (\n        typeof ctor.getDerivedStateFromError === 'function' ||\n        (typeof instance.componentDidCatch === 'function' &&\n          !isAlreadyFailedLegacyErrorBoundary(instance))\n      ) {\n        const errorInfo = createCapturedValue(error, sourceFiber);\n        const update = createClassErrorUpdate(\n          fiber,\n          errorInfo,\n          (SyncLane: Lane),\n        );\n        enqueueUpdate(fiber, update);\n        const eventTime = requestEventTime();\n        const root = markUpdateLaneFromFiberToRoot(fiber, (SyncLane: Lane));\n        if (root !== null) {\n          markRootUpdated(root, SyncLane, eventTime);\n          ensureRootIsScheduled(root, eventTime);\n          schedulePendingInteractions(root, SyncLane);\n        } else {\n          // This component has already been unmounted.\n          // We can't schedule any follow up work for the root because the fiber is already unmounted,\n          // but we can still call the log-only boundary so the error isn't swallowed.\n          //\n          // TODO This is only a temporary bandaid for the old reconciler fork.\n          // We can delete this special case once the new fork is merged.\n          if (\n            typeof instance.componentDidCatch === 'function' &&\n            !isAlreadyFailedLegacyErrorBoundary(instance)\n          ) {\n            try {\n              instance.componentDidCatch(error, errorInfo);\n            } catch (errorToIgnore) {\n              // TODO Ignore this error? Rethrow it?\n              // This is kind of an edge case.\n            }\n          }\n        }\n        return;\n      }\n    }\n    fiber = fiber.return;\n  }\n}\n\nexport function pingSuspendedRoot(\n  root: FiberRoot,\n  wakeable: Wakeable,\n  pingedLanes: Lanes,\n) {\n  const pingCache = root.pingCache;\n  if (pingCache !== null) {\n    // The wakeable resolved, so we no longer need to memoize, because it will\n    // never be thrown again.\n    pingCache.delete(wakeable);\n  }\n\n  const eventTime = requestEventTime();\n  markRootPinged(root, pingedLanes, eventTime);\n\n  if (\n    workInProgressRoot === root &&\n    isSubsetOfLanes(workInProgressRootRenderLanes, pingedLanes)\n  ) {\n    // Received a ping at the same priority level at which we're currently\n    // rendering. We might want to restart this render. This should mirror\n    // the logic of whether or not a root suspends once it completes.\n\n    // TODO: If we're rendering sync either due to Sync, Batched or expired,\n    // we should probably never restart.\n\n    // If we're suspended with delay, or if it's a retry, we'll always suspend\n    // so we can always restart.\n    if (\n      workInProgressRootExitStatus === RootSuspendedWithDelay ||\n      (workInProgressRootExitStatus === RootSuspended &&\n        includesOnlyRetries(workInProgressRootRenderLanes) &&\n        now() - globalMostRecentFallbackTime < FALLBACK_THROTTLE_MS)\n    ) {\n      // Restart from the root.\n      prepareFreshStack(root, NoLanes);\n    } else {\n      // Even though we can't restart right now, we might get an\n      // opportunity later. So we mark this render as having a ping.\n      workInProgressRootPingedLanes = mergeLanes(\n        workInProgressRootPingedLanes,\n        pingedLanes,\n      );\n    }\n  }\n\n  ensureRootIsScheduled(root, eventTime);\n  schedulePendingInteractions(root, pingedLanes);\n}\n\nfunction retryTimedOutBoundary(boundaryFiber: Fiber, retryLane: Lane) {\n  // The boundary fiber (a Suspense component or SuspenseList component)\n  // previously was rendered in its fallback state. One of the promises that\n  // suspended it has resolved, which means at least part of the tree was\n  // likely unblocked. Try rendering again, at a new expiration time.\n  if (retryLane === NoLane) {\n    retryLane = requestRetryLane(boundaryFiber);\n  }\n  // TODO: Special case idle priority?\n  const eventTime = requestEventTime();\n  const root = markUpdateLaneFromFiberToRoot(boundaryFiber, retryLane);\n  if (root !== null) {\n    markRootUpdated(root, retryLane, eventTime);\n    ensureRootIsScheduled(root, eventTime);\n    schedulePendingInteractions(root, retryLane);\n  }\n}\n\nexport function retryDehydratedSuspenseBoundary(boundaryFiber: Fiber) {\n  const suspenseState: null | SuspenseState = boundaryFiber.memoizedState;\n  let retryLane = NoLane;\n  if (suspenseState !== null) {\n    retryLane = suspenseState.retryLane;\n  }\n  retryTimedOutBoundary(boundaryFiber, retryLane);\n}\n\nexport function resolveRetryWakeable(boundaryFiber: Fiber, wakeable: Wakeable) {\n  let retryLane = NoLane; // Default\n  let retryCache: WeakSet<Wakeable> | Set<Wakeable> | null;\n  if (enableSuspenseServerRenderer) {\n    switch (boundaryFiber.tag) {\n      case SuspenseComponent:\n        retryCache = boundaryFiber.stateNode;\n        const suspenseState: null | SuspenseState = boundaryFiber.memoizedState;\n        if (suspenseState !== null) {\n          retryLane = suspenseState.retryLane;\n        }\n        break;\n      case SuspenseListComponent:\n        retryCache = boundaryFiber.stateNode;\n        break;\n      default:\n        invariant(\n          false,\n          'Pinged unknown suspense boundary type. ' +\n            'This is probably a bug in React.',\n        );\n    }\n  } else {\n    retryCache = boundaryFiber.stateNode;\n  }\n\n  if (retryCache !== null) {\n    // The wakeable resolved, so we no longer need to memoize, because it will\n    // never be thrown again.\n    retryCache.delete(wakeable);\n  }\n\n  retryTimedOutBoundary(boundaryFiber, retryLane);\n}\n\n// Computes the next Just Noticeable Difference (JND) boundary.\n// The theory is that a person can't tell the difference between small differences in time.\n// Therefore, if we wait a bit longer than necessary that won't translate to a noticeable\n// difference in the experience. However, waiting for longer might mean that we can avoid\n// showing an intermediate loading state. The longer we have already waited, the harder it\n// is to tell small differences in time. Therefore, the longer we've already waited,\n// the longer we can wait additionally. At some point we have to give up though.\n// We pick a train model where the next boundary commits at a consistent schedule.\n// These particular numbers are vague estimates. We expect to adjust them based on research.\nfunction jnd(timeElapsed: number) {\n  return timeElapsed < 120\n    ? 120\n    : timeElapsed < 480\n    ? 480\n    : timeElapsed < 1080\n    ? 1080\n    : timeElapsed < 1920\n    ? 1920\n    : timeElapsed < 3000\n    ? 3000\n    : timeElapsed < 4320\n    ? 4320\n    : ceil(timeElapsed / 1960) * 1960;\n}\n\nfunction checkForNestedUpdates() {\n  if (nestedUpdateCount > NESTED_UPDATE_LIMIT) {\n    nestedUpdateCount = 0;\n    rootWithNestedUpdates = null;\n    invariant(\n      false,\n      'Maximum update depth exceeded. This can happen when a component ' +\n        'repeatedly calls setState inside componentWillUpdate or ' +\n        'componentDidUpdate. React limits the number of nested updates to ' +\n        'prevent infinite loops.',\n    );\n  }\n\n  if (__DEV__) {\n    if (nestedPassiveUpdateCount > NESTED_PASSIVE_UPDATE_LIMIT) {\n      nestedPassiveUpdateCount = 0;\n      console.error(\n        'Maximum update depth exceeded. This can happen when a component ' +\n          \"calls setState inside useEffect, but useEffect either doesn't \" +\n          'have a dependency array, or one of the dependencies changes on ' +\n          'every render.',\n      );\n    }\n  }\n}\n\nfunction flushRenderPhaseStrictModeWarningsInDEV() {\n  if (__DEV__) {\n    ReactStrictModeWarnings.flushLegacyContextWarning();\n\n    if (warnAboutDeprecatedLifecycles) {\n      ReactStrictModeWarnings.flushPendingUnsafeLifecycleWarnings();\n    }\n  }\n}\n\nlet didWarnStateUpdateForNotYetMountedComponent: Set<string> | null = null;\nfunction warnAboutUpdateOnNotYetMountedFiberInDEV(fiber) {\n  if (__DEV__) {\n    if ((executionContext & RenderContext) !== NoContext) {\n      // We let the other warning about render phase updates deal with this one.\n      return;\n    }\n\n    if (!(fiber.mode & (BlockingMode | ConcurrentMode))) {\n      return;\n    }\n\n    const tag = fiber.tag;\n    if (\n      tag !== IndeterminateComponent &&\n      tag !== HostRoot &&\n      tag !== ClassComponent &&\n      tag !== FunctionComponent &&\n      tag !== ForwardRef &&\n      tag !== MemoComponent &&\n      tag !== SimpleMemoComponent &&\n      tag !== Block\n    ) {\n      // Only warn for user-defined components, not internal ones like Suspense.\n      return;\n    }\n\n    // We show the whole stack but dedupe on the top component's name because\n    // the problematic code almost always lies inside that component.\n    const componentName = getComponentName(fiber.type) || 'ReactComponent';\n    if (didWarnStateUpdateForNotYetMountedComponent !== null) {\n      if (didWarnStateUpdateForNotYetMountedComponent.has(componentName)) {\n        return;\n      }\n      didWarnStateUpdateForNotYetMountedComponent.add(componentName);\n    } else {\n      didWarnStateUpdateForNotYetMountedComponent = new Set([componentName]);\n    }\n\n    const previousFiber = ReactCurrentFiberCurrent;\n    try {\n      setCurrentDebugFiberInDEV(fiber);\n      console.error(\n        \"Can't perform a React state update on a component that hasn't mounted yet. \" +\n          'This indicates that you have a side-effect in your render function that ' +\n          'asynchronously later calls tries to update the component. Move this work to ' +\n          'useEffect instead.',\n      );\n    } finally {\n      if (previousFiber) {\n        setCurrentDebugFiberInDEV(fiber);\n      } else {\n        resetCurrentDebugFiberInDEV();\n      }\n    }\n  }\n}\n\nlet didWarnStateUpdateForUnmountedComponent: Set<string> | null = null;\nfunction warnAboutUpdateOnUnmountedFiberInDEV(fiber) {\n  if (__DEV__) {\n    const tag = fiber.tag;\n    if (\n      tag !== HostRoot &&\n      tag !== ClassComponent &&\n      tag !== FunctionComponent &&\n      tag !== ForwardRef &&\n      tag !== MemoComponent &&\n      tag !== SimpleMemoComponent &&\n      tag !== Block\n    ) {\n      // Only warn for user-defined components, not internal ones like Suspense.\n      return;\n    }\n\n    // If there are pending passive effects unmounts for this Fiber,\n    // we can assume that they would have prevented this update.\n    if ((fiber.flags & PassiveUnmountPendingDev) !== NoFlags) {\n      return;\n    }\n\n    // We show the whole stack but dedupe on the top component's name because\n    // the problematic code almost always lies inside that component.\n    const componentName = getComponentName(fiber.type) || 'ReactComponent';\n    if (didWarnStateUpdateForUnmountedComponent !== null) {\n      if (didWarnStateUpdateForUnmountedComponent.has(componentName)) {\n        return;\n      }\n      didWarnStateUpdateForUnmountedComponent.add(componentName);\n    } else {\n      didWarnStateUpdateForUnmountedComponent = new Set([componentName]);\n    }\n\n    if (isFlushingPassiveEffects) {\n      // Do not warn if we are currently flushing passive effects!\n      //\n      // React can't directly detect a memory leak, but there are some clues that warn about one.\n      // One of these clues is when an unmounted React component tries to update its state.\n      // For example, if a component forgets to remove an event listener when unmounting,\n      // that listener may be called later and try to update state,\n      // at which point React would warn about the potential leak.\n      //\n      // Warning signals are the most useful when they're strong.\n      // (So we should avoid false positive warnings.)\n      // Updating state from within an effect cleanup function is sometimes a necessary pattern, e.g.:\n      // 1. Updating an ancestor that a component had registered itself with on mount.\n      // 2. Resetting state when a component is hidden after going offscreen.\n    } else {\n      const previousFiber = ReactCurrentFiberCurrent;\n      try {\n        setCurrentDebugFiberInDEV(fiber);\n        console.error(\n          \"Can't perform a React state update on an unmounted component. This \" +\n            'is a no-op, but it indicates a memory leak in your application. To ' +\n            'fix, cancel all subscriptions and asynchronous tasks in %s.',\n          tag === ClassComponent\n            ? 'the componentWillUnmount method'\n            : 'a useEffect cleanup function',\n        );\n      } finally {\n        if (previousFiber) {\n          setCurrentDebugFiberInDEV(fiber);\n        } else {\n          resetCurrentDebugFiberInDEV();\n        }\n      }\n    }\n  }\n}\n\nlet beginWork;\nif (__DEV__ && replayFailedUnitOfWorkWithInvokeGuardedCallback) {\n  const dummyFiber = null;\n  beginWork = (current, unitOfWork, lanes) => {\n    // If a component throws an error, we replay it again in a synchronously\n    // dispatched event, so that the debugger will treat it as an uncaught\n    // error See ReactErrorUtils for more information.\n\n    // Before entering the begin phase, copy the work-in-progress onto a dummy\n    // fiber. If beginWork throws, we'll use this to reset the state.\n    const originalWorkInProgressCopy = assignFiberPropertiesInDEV(\n      dummyFiber,\n      unitOfWork,\n    );\n    try {\n      return originalBeginWork(current, unitOfWork, lanes);\n    } catch (originalError) {\n      if (\n        originalError !== null &&\n        typeof originalError === 'object' &&\n        typeof originalError.then === 'function'\n      ) {\n        // Don't replay promises. Treat everything else like an error.\n        throw originalError;\n      }\n\n      // Keep this code in sync with handleError; any changes here must have\n      // corresponding changes there.\n      resetContextDependencies();\n      resetHooksAfterThrow();\n      // Don't reset current debug fiber, since we're about to work on the\n      // same fiber again.\n\n      // Unwind the failed stack frame\n      unwindInterruptedWork(unitOfWork);\n\n      // Restore the original properties of the fiber.\n      assignFiberPropertiesInDEV(unitOfWork, originalWorkInProgressCopy);\n\n      if (enableProfilerTimer && unitOfWork.mode & ProfileMode) {\n        // Reset the profiler timer.\n        startProfilerTimer(unitOfWork);\n      }\n\n      // Run beginWork again.\n      invokeGuardedCallback(\n        null,\n        originalBeginWork,\n        null,\n        current,\n        unitOfWork,\n        lanes,\n      );\n\n      if (hasCaughtError()) {\n        const replayError = clearCaughtError();\n        // `invokeGuardedCallback` sometimes sets an expando `_suppressLogging`.\n        // Rethrow this error instead of the original one.\n        throw replayError;\n      } else {\n        // This branch is reachable if the render phase is impure.\n        throw originalError;\n      }\n    }\n  };\n} else {\n  beginWork = originalBeginWork;\n}\n\nlet didWarnAboutUpdateInRender = false;\nlet didWarnAboutUpdateInRenderForAnotherComponent;\nif (__DEV__) {\n  didWarnAboutUpdateInRenderForAnotherComponent = new Set();\n}\n\nfunction warnAboutRenderPhaseUpdatesInDEV(fiber) {\n  if (__DEV__) {\n    if (\n      ReactCurrentDebugFiberIsRenderingInDEV &&\n      (executionContext & RenderContext) !== NoContext &&\n      !getIsUpdatingOpaqueValueInRenderPhaseInDEV()\n    ) {\n      switch (fiber.tag) {\n        case FunctionComponent:\n        case ForwardRef:\n        case SimpleMemoComponent: {\n          const renderingComponentName =\n            (workInProgress && getComponentName(workInProgress.type)) ||\n            'Unknown';\n          // Dedupe by the rendering component because it's the one that needs to be fixed.\n          const dedupeKey = renderingComponentName;\n          if (!didWarnAboutUpdateInRenderForAnotherComponent.has(dedupeKey)) {\n            didWarnAboutUpdateInRenderForAnotherComponent.add(dedupeKey);\n            const setStateComponentName =\n              getComponentName(fiber.type) || 'Unknown';\n            console.error(\n              'Cannot update a component (`%s`) while rendering a ' +\n                'different component (`%s`). To locate the bad setState() call inside `%s`, ' +\n                'follow the stack trace as described in https://reactjs.org/link/setstate-in-render',\n              setStateComponentName,\n              renderingComponentName,\n              renderingComponentName,\n            );\n          }\n          break;\n        }\n        case ClassComponent: {\n          if (!didWarnAboutUpdateInRender) {\n            console.error(\n              'Cannot update during an existing state transition (such as ' +\n                'within `render`). Render methods should be a pure ' +\n                'function of props and state.',\n            );\n            didWarnAboutUpdateInRender = true;\n          }\n          break;\n        }\n      }\n    }\n  }\n}\n\n// a 'shared' variable that changes when act() opens/closes in tests.\nexport const IsThisRendererActing = {current: (false: boolean)};\n\nexport function warnIfNotScopedWithMatchingAct(fiber: Fiber): void {\n  if (__DEV__) {\n    if (\n      warnsIfNotActing === true &&\n      IsSomeRendererActing.current === true &&\n      IsThisRendererActing.current !== true\n    ) {\n      const previousFiber = ReactCurrentFiberCurrent;\n      try {\n        setCurrentDebugFiberInDEV(fiber);\n        console.error(\n          \"It looks like you're using the wrong act() around your test interactions.\\n\" +\n            'Be sure to use the matching version of act() corresponding to your renderer:\\n\\n' +\n            '// for react-dom:\\n' +\n            // Break up imports to avoid accidentally parsing them as dependencies.\n            'import {act} fr' +\n            \"om 'react-dom/test-utils';\\n\" +\n            '// ...\\n' +\n            'act(() => ...);\\n\\n' +\n            '// for react-test-renderer:\\n' +\n            // Break up imports to avoid accidentally parsing them as dependencies.\n            'import TestRenderer fr' +\n            \"om react-test-renderer';\\n\" +\n            'const {act} = TestRenderer;\\n' +\n            '// ...\\n' +\n            'act(() => ...);',\n        );\n      } finally {\n        if (previousFiber) {\n          setCurrentDebugFiberInDEV(fiber);\n        } else {\n          resetCurrentDebugFiberInDEV();\n        }\n      }\n    }\n  }\n}\n\nexport function warnIfNotCurrentlyActingEffectsInDEV(fiber: Fiber): void {\n  if (__DEV__) {\n    if (\n      warnsIfNotActing === true &&\n      (fiber.mode & StrictMode) !== NoMode &&\n      IsSomeRendererActing.current === false &&\n      IsThisRendererActing.current === false\n    ) {\n      console.error(\n        'An update to %s ran an effect, but was not wrapped in act(...).\\n\\n' +\n          'When testing, code that causes React state updates should be ' +\n          'wrapped into act(...):\\n\\n' +\n          'act(() => {\\n' +\n          '  /* fire events that update state */\\n' +\n          '});\\n' +\n          '/* assert on the output */\\n\\n' +\n          \"This ensures that you're testing the behavior the user would see \" +\n          'in the browser.' +\n          ' Learn more at https://reactjs.org/link/wrap-tests-with-act',\n        getComponentName(fiber.type),\n      );\n    }\n  }\n}\n\nfunction warnIfNotCurrentlyActingUpdatesInDEV(fiber: Fiber): void {\n  if (__DEV__) {\n    if (\n      warnsIfNotActing === true &&\n      executionContext === NoContext &&\n      IsSomeRendererActing.current === false &&\n      IsThisRendererActing.current === false\n    ) {\n      const previousFiber = ReactCurrentFiberCurrent;\n      try {\n        setCurrentDebugFiberInDEV(fiber);\n        console.error(\n          'An update to %s inside a test was not wrapped in act(...).\\n\\n' +\n            'When testing, code that causes React state updates should be ' +\n            'wrapped into act(...):\\n\\n' +\n            'act(() => {\\n' +\n            '  /* fire events that update state */\\n' +\n            '});\\n' +\n            '/* assert on the output */\\n\\n' +\n            \"This ensures that you're testing the behavior the user would see \" +\n            'in the browser.' +\n            ' Learn more at https://reactjs.org/link/wrap-tests-with-act',\n          getComponentName(fiber.type),\n        );\n      } finally {\n        if (previousFiber) {\n          setCurrentDebugFiberInDEV(fiber);\n        } else {\n          resetCurrentDebugFiberInDEV();\n        }\n      }\n    }\n  }\n}\n\nexport const warnIfNotCurrentlyActingUpdatesInDev = warnIfNotCurrentlyActingUpdatesInDEV;\n\n// In tests, we want to enforce a mocked scheduler.\nlet didWarnAboutUnmockedScheduler = false;\n// TODO Before we release concurrent mode, revisit this and decide whether a mocked\n// scheduler is the actual recommendation. The alternative could be a testing build,\n// a new lib, or whatever; we dunno just yet. This message is for early adopters\n// to get their tests right.\n\nexport function warnIfUnmockedScheduler(fiber: Fiber) {\n  if (__DEV__) {\n    if (\n      didWarnAboutUnmockedScheduler === false &&\n      Scheduler.unstable_flushAllWithoutAsserting === undefined\n    ) {\n      if (fiber.mode & BlockingMode || fiber.mode & ConcurrentMode) {\n        didWarnAboutUnmockedScheduler = true;\n        console.error(\n          'In Concurrent or Sync modes, the \"scheduler\" module needs to be mocked ' +\n            'to guarantee consistent behaviour across tests and browsers. ' +\n            'For example, with jest: \\n' +\n            // Break up requires to avoid accidentally parsing them as dependencies.\n            \"jest.mock('scheduler', () => require\" +\n            \"('scheduler/unstable_mock'));\\n\\n\" +\n            'For more info, visit https://reactjs.org/link/mock-scheduler',\n        );\n      } else if (warnAboutUnmockedScheduler === true) {\n        didWarnAboutUnmockedScheduler = true;\n        console.error(\n          'Starting from React v18, the \"scheduler\" module will need to be mocked ' +\n            'to guarantee consistent behaviour across tests and browsers. ' +\n            'For example, with jest: \\n' +\n            // Break up requires to avoid accidentally parsing them as dependencies.\n            \"jest.mock('scheduler', () => require\" +\n            \"('scheduler/unstable_mock'));\\n\\n\" +\n            'For more info, visit https://reactjs.org/link/mock-scheduler',\n        );\n      }\n    }\n  }\n}\n\nfunction computeThreadID(root: FiberRoot, lane: Lane | Lanes) {\n  // Interaction threads are unique per root and expiration time.\n  // NOTE: Intentionally unsound cast. All that matters is that it's a number\n  // and it represents a batch of work. Could make a helper function instead,\n  // but meh this is fine for now.\n  return (lane: any) * 1000 + root.interactionThreadID;\n}\n\nexport function markSpawnedWork(lane: Lane | Lanes) {\n  if (!enableSchedulerTracing) {\n    return;\n  }\n  if (spawnedWorkDuringRender === null) {\n    spawnedWorkDuringRender = [lane];\n  } else {\n    spawnedWorkDuringRender.push(lane);\n  }\n}\n\nfunction scheduleInteractions(\n  root: FiberRoot,\n  lane: Lane | Lanes,\n  interactions: Set<Interaction>,\n) {\n  if (!enableSchedulerTracing) {\n    return;\n  }\n\n  if (interactions.size > 0) {\n    const pendingInteractionMap = root.pendingInteractionMap;\n    const pendingInteractions = pendingInteractionMap.get(lane);\n    if (pendingInteractions != null) {\n      interactions.forEach(interaction => {\n        if (!pendingInteractions.has(interaction)) {\n          // Update the pending async work count for previously unscheduled interaction.\n          interaction.__count++;\n        }\n\n        pendingInteractions.add(interaction);\n      });\n    } else {\n      pendingInteractionMap.set(lane, new Set(interactions));\n\n      // Update the pending async work count for the current interactions.\n      interactions.forEach(interaction => {\n        interaction.__count++;\n      });\n    }\n\n    const subscriber = __subscriberRef.current;\n    if (subscriber !== null) {\n      const threadID = computeThreadID(root, lane);\n      subscriber.onWorkScheduled(interactions, threadID);\n    }\n  }\n}\n\nfunction schedulePendingInteractions(root: FiberRoot, lane: Lane | Lanes) {\n  // This is called when work is scheduled on a root.\n  // It associates the current interactions with the newly-scheduled expiration.\n  // They will be restored when that expiration is later committed.\n  if (!enableSchedulerTracing) {\n    return;\n  }\n\n  scheduleInteractions(root, lane, __interactionsRef.current);\n}\n\nfunction startWorkOnPendingInteractions(root: FiberRoot, lanes: Lanes) {\n  // This is called when new work is started on a root.\n  if (!enableSchedulerTracing) {\n    return;\n  }\n\n  // Determine which interactions this batch of work currently includes, So that\n  // we can accurately attribute time spent working on it, And so that cascading\n  // work triggered during the render phase will be associated with it.\n  const interactions: Set<Interaction> = new Set();\n  root.pendingInteractionMap.forEach((scheduledInteractions, scheduledLane) => {\n    if (includesSomeLane(lanes, scheduledLane)) {\n      scheduledInteractions.forEach(interaction =>\n        interactions.add(interaction),\n      );\n    }\n  });\n\n  // Store the current set of interactions on the FiberRoot for a few reasons:\n  // We can re-use it in hot functions like performConcurrentWorkOnRoot()\n  // without having to recalculate it. We will also use it in commitWork() to\n  // pass to any Profiler onRender() hooks. This also provides DevTools with a\n  // way to access it when the onCommitRoot() hook is called.\n  root.memoizedInteractions = interactions;\n\n  if (interactions.size > 0) {\n    const subscriber = __subscriberRef.current;\n    if (subscriber !== null) {\n      const threadID = computeThreadID(root, lanes);\n      try {\n        subscriber.onWorkStarted(interactions, threadID);\n      } catch (error) {\n        // If the subscriber throws, rethrow it in a separate task\n        scheduleCallback(ImmediateSchedulerPriority, () => {\n          throw error;\n        });\n      }\n    }\n  }\n}\n\nfunction finishPendingInteractions(root, committedLanes) {\n  if (!enableSchedulerTracing) {\n    return;\n  }\n\n  const remainingLanesAfterCommit = root.pendingLanes;\n\n  let subscriber;\n\n  try {\n    subscriber = __subscriberRef.current;\n    if (subscriber !== null && root.memoizedInteractions.size > 0) {\n      // FIXME: More than one lane can finish in a single commit.\n      const threadID = computeThreadID(root, committedLanes);\n      subscriber.onWorkStopped(root.memoizedInteractions, threadID);\n    }\n  } catch (error) {\n    // If the subscriber throws, rethrow it in a separate task\n    scheduleCallback(ImmediateSchedulerPriority, () => {\n      throw error;\n    });\n  } finally {\n    // Clear completed interactions from the pending Map.\n    // Unless the render was suspended or cascading work was scheduled,\n    // In which case– leave pending interactions until the subsequent render.\n    const pendingInteractionMap = root.pendingInteractionMap;\n    pendingInteractionMap.forEach((scheduledInteractions, lane) => {\n      // Only decrement the pending interaction count if we're done.\n      // If there's still work at the current priority,\n      // That indicates that we are waiting for suspense data.\n      if (!includesSomeLane(remainingLanesAfterCommit, lane)) {\n        pendingInteractionMap.delete(lane);\n\n        scheduledInteractions.forEach(interaction => {\n          interaction.__count--;\n\n          if (subscriber !== null && interaction.__count === 0) {\n            try {\n              subscriber.onInteractionScheduledWorkCompleted(interaction);\n            } catch (error) {\n              // If the subscriber throws, rethrow it in a separate task\n              scheduleCallback(ImmediateSchedulerPriority, () => {\n                throw error;\n              });\n            }\n          }\n        });\n      }\n    });\n  }\n}\n\n// `act` testing API\n//\n// TODO: This is mostly a copy-paste from the legacy `act`, which does not have\n// access to the same internals that we do here. Some trade offs in the\n// implementation no longer make sense.\n\nlet isFlushingAct = false;\nlet isInsideThisAct = false;\n\nfunction shouldForceFlushFallbacksInDEV() {\n  // Never force flush in production. This function should get stripped out.\n  return __DEV__ && actingUpdatesScopeDepth > 0;\n}\n\nconst flushMockScheduler = Scheduler.unstable_flushAllWithoutAsserting;\nconst isSchedulerMocked = typeof flushMockScheduler === 'function';\n\n// Returns whether additional work was scheduled. Caller should keep flushing\n// until there's no work left.\nfunction flushActWork(): boolean {\n  if (flushMockScheduler !== undefined) {\n    const prevIsFlushing = isFlushingAct;\n    isFlushingAct = true;\n    try {\n      return flushMockScheduler();\n    } finally {\n      isFlushingAct = prevIsFlushing;\n    }\n  } else {\n    // No mock scheduler available. However, the only type of pending work is\n    // passive effects, which we control. So we can flush that.\n    const prevIsFlushing = isFlushingAct;\n    isFlushingAct = true;\n    try {\n      let didFlushWork = false;\n      while (flushPassiveEffects()) {\n        didFlushWork = true;\n      }\n      return didFlushWork;\n    } finally {\n      isFlushingAct = prevIsFlushing;\n    }\n  }\n}\n\nfunction flushWorkAndMicroTasks(onDone: (err: ?Error) => void) {\n  try {\n    flushActWork();\n    enqueueTask(() => {\n      if (flushActWork()) {\n        flushWorkAndMicroTasks(onDone);\n      } else {\n        onDone();\n      }\n    });\n  } catch (err) {\n    onDone(err);\n  }\n}\n\n// we track the 'depth' of the act() calls with this counter,\n// so we can tell if any async act() calls try to run in parallel.\n\nlet actingUpdatesScopeDepth = 0;\nlet didWarnAboutUsingActInProd = false;\n\nexport function act(callback: () => Thenable<mixed>): Thenable<void> {\n  if (!__DEV__) {\n    if (didWarnAboutUsingActInProd === false) {\n      didWarnAboutUsingActInProd = true;\n      // eslint-disable-next-line react-internal/no-production-logging\n      console.error(\n        'act(...) is not supported in production builds of React, and might not behave as expected.',\n      );\n    }\n  }\n\n  const previousActingUpdatesScopeDepth = actingUpdatesScopeDepth;\n  actingUpdatesScopeDepth++;\n\n  const previousIsSomeRendererActing = IsSomeRendererActing.current;\n  const previousIsThisRendererActing = IsThisRendererActing.current;\n  const previousIsInsideThisAct = isInsideThisAct;\n  IsSomeRendererActing.current = true;\n  IsThisRendererActing.current = true;\n  isInsideThisAct = true;\n\n  function onDone() {\n    actingUpdatesScopeDepth--;\n    IsSomeRendererActing.current = previousIsSomeRendererActing;\n    IsThisRendererActing.current = previousIsThisRendererActing;\n    isInsideThisAct = previousIsInsideThisAct;\n    if (__DEV__) {\n      if (actingUpdatesScopeDepth > previousActingUpdatesScopeDepth) {\n        // if it's _less than_ previousActingUpdatesScopeDepth, then we can assume the 'other' one has warned\n        console.error(\n          'You seem to have overlapping act() calls, this is not supported. ' +\n            'Be sure to await previous act() calls before making a new one. ',\n        );\n      }\n    }\n  }\n\n  let result;\n  try {\n    result = batchedUpdates(callback);\n  } catch (error) {\n    // on sync errors, we still want to 'cleanup' and decrement actingUpdatesScopeDepth\n    onDone();\n    throw error;\n  }\n\n  if (\n    result !== null &&\n    typeof result === 'object' &&\n    typeof result.then === 'function'\n  ) {\n    // setup a boolean that gets set to true only\n    // once this act() call is await-ed\n    let called = false;\n    if (__DEV__) {\n      if (typeof Promise !== 'undefined') {\n        //eslint-disable-next-line no-undef\n        Promise.resolve()\n          .then(() => {})\n          .then(() => {\n            if (called === false) {\n              console.error(\n                'You called act(async () => ...) without await. ' +\n                  'This could lead to unexpected testing behaviour, interleaving multiple act ' +\n                  'calls and mixing their scopes. You should - await act(async () => ...);',\n              );\n            }\n          });\n      }\n    }\n\n    // in the async case, the returned thenable runs the callback, flushes\n    // effects and  microtasks in a loop until flushPassiveEffects() === false,\n    // and cleans up\n    return {\n      then(resolve, reject) {\n        called = true;\n        result.then(\n          () => {\n            if (\n              actingUpdatesScopeDepth > 1 ||\n              (isSchedulerMocked === true &&\n                previousIsSomeRendererActing === true)\n            ) {\n              onDone();\n              resolve();\n              return;\n            }\n            // we're about to exit the act() scope,\n            // now's the time to flush tasks/effects\n            flushWorkAndMicroTasks((err: ?Error) => {\n              onDone();\n              if (err) {\n                reject(err);\n              } else {\n                resolve();\n              }\n            });\n          },\n          err => {\n            onDone();\n            reject(err);\n          },\n        );\n      },\n    };\n  } else {\n    if (__DEV__) {\n      if (result !== undefined) {\n        console.error(\n          'The callback passed to act(...) function ' +\n            'must return undefined, or a Promise. You returned %s',\n          result,\n        );\n      }\n    }\n\n    // flush effects until none remain, and cleanup\n    try {\n      if (\n        actingUpdatesScopeDepth === 1 &&\n        (isSchedulerMocked === false || previousIsSomeRendererActing === false)\n      ) {\n        // we're about to exit the act() scope,\n        // now's the time to flush effects\n        flushActWork();\n      }\n      onDone();\n    } catch (err) {\n      onDone();\n      throw err;\n    }\n\n    // in the sync case, the returned thenable only warns *if* await-ed\n    return {\n      then(resolve) {\n        if (__DEV__) {\n          console.error(\n            'Do not await the result of calling act(...) with sync logic, it is not a Promise.',\n          );\n        }\n        resolve();\n      },\n    };\n  }\n}\n\nfunction detachFiberAfterEffects(fiber: Fiber): void {\n  fiber.sibling = null;\n  fiber.stateNode = null;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {ReactElement} from 'shared/ReactElementType';\nimport type {Fiber} from './ReactInternalTypes';\nimport type {FiberRoot} from './ReactInternalTypes';\nimport type {Instance} from './ReactFiberHostConfig';\nimport type {ReactNodeList} from 'shared/ReactTypes';\n\nimport {\n  flushSync,\n  scheduleUpdateOnFiber,\n  flushPassiveEffects,\n} from './ReactFiberWorkLoop.old';\nimport {updateContainer} from './ReactFiberReconciler.old';\nimport {emptyContextObject} from './ReactFiberContext.old';\nimport {SyncLane, NoTimestamp} from './ReactFiberLane';\nimport {\n  ClassComponent,\n  FunctionComponent,\n  ForwardRef,\n  HostComponent,\n  HostPortal,\n  HostRoot,\n  MemoComponent,\n  SimpleMemoComponent,\n} from './ReactWorkTags';\nimport {\n  REACT_FORWARD_REF_TYPE,\n  REACT_MEMO_TYPE,\n  REACT_LAZY_TYPE,\n} from 'shared/ReactSymbols';\n\nexport type Family = {|\n  current: any,\n|};\n\nexport type RefreshUpdate = {|\n  staleFamilies: Set<Family>,\n  updatedFamilies: Set<Family>,\n|};\n\n// Resolves type to a family.\ntype RefreshHandler = any => Family | void;\n\n// Used by React Refresh runtime through DevTools Global Hook.\nexport type SetRefreshHandler = (handler: RefreshHandler | null) => void;\nexport type ScheduleRefresh = (root: FiberRoot, update: RefreshUpdate) => void;\nexport type ScheduleRoot = (root: FiberRoot, element: ReactNodeList) => void;\nexport type FindHostInstancesForRefresh = (\n  root: FiberRoot,\n  families: Array<Family>,\n) => Set<Instance>;\n\nlet resolveFamily: RefreshHandler | null = null;\n// $FlowFixMe Flow gets confused by a WeakSet feature check below.\nlet failedBoundaries: WeakSet<Fiber> | null = null;\n\nexport const setRefreshHandler = (handler: RefreshHandler | null): void => {\n  if (__DEV__) {\n    resolveFamily = handler;\n  }\n};\n\nexport function resolveFunctionForHotReloading(type: any): any {\n  if (__DEV__) {\n    if (resolveFamily === null) {\n      // Hot reloading is disabled.\n      return type;\n    }\n    const family = resolveFamily(type);\n    if (family === undefined) {\n      return type;\n    }\n    // Use the latest known implementation.\n    return family.current;\n  } else {\n    return type;\n  }\n}\n\nexport function resolveClassForHotReloading(type: any): any {\n  // No implementation differences.\n  return resolveFunctionForHotReloading(type);\n}\n\nexport function resolveForwardRefForHotReloading(type: any): any {\n  if (__DEV__) {\n    if (resolveFamily === null) {\n      // Hot reloading is disabled.\n      return type;\n    }\n    const family = resolveFamily(type);\n    if (family === undefined) {\n      // Check if we're dealing with a real forwardRef. Don't want to crash early.\n      if (\n        type !== null &&\n        type !== undefined &&\n        typeof type.render === 'function'\n      ) {\n        // ForwardRef is special because its resolved .type is an object,\n        // but it's possible that we only have its inner render function in the map.\n        // If that inner render function is different, we'll build a new forwardRef type.\n        const currentRender = resolveFunctionForHotReloading(type.render);\n        if (type.render !== currentRender) {\n          const syntheticType = {\n            $$typeof: REACT_FORWARD_REF_TYPE,\n            render: currentRender,\n          };\n          if (type.displayName !== undefined) {\n            (syntheticType: any).displayName = type.displayName;\n          }\n          return syntheticType;\n        }\n      }\n      return type;\n    }\n    // Use the latest known implementation.\n    return family.current;\n  } else {\n    return type;\n  }\n}\n\nexport function isCompatibleFamilyForHotReloading(\n  fiber: Fiber,\n  element: ReactElement,\n): boolean {\n  if (__DEV__) {\n    if (resolveFamily === null) {\n      // Hot reloading is disabled.\n      return false;\n    }\n\n    const prevType = fiber.elementType;\n    const nextType = element.type;\n\n    // If we got here, we know types aren't === equal.\n    let needsCompareFamilies = false;\n\n    const $$typeofNextType =\n      typeof nextType === 'object' && nextType !== null\n        ? nextType.$$typeof\n        : null;\n\n    switch (fiber.tag) {\n      case ClassComponent: {\n        if (typeof nextType === 'function') {\n          needsCompareFamilies = true;\n        }\n        break;\n      }\n      case FunctionComponent: {\n        if (typeof nextType === 'function') {\n          needsCompareFamilies = true;\n        } else if ($$typeofNextType === REACT_LAZY_TYPE) {\n          // We don't know the inner type yet.\n          // We're going to assume that the lazy inner type is stable,\n          // and so it is sufficient to avoid reconciling it away.\n          // We're not going to unwrap or actually use the new lazy type.\n          needsCompareFamilies = true;\n        }\n        break;\n      }\n      case ForwardRef: {\n        if ($$typeofNextType === REACT_FORWARD_REF_TYPE) {\n          needsCompareFamilies = true;\n        } else if ($$typeofNextType === REACT_LAZY_TYPE) {\n          needsCompareFamilies = true;\n        }\n        break;\n      }\n      case MemoComponent:\n      case SimpleMemoComponent: {\n        if ($$typeofNextType === REACT_MEMO_TYPE) {\n          // TODO: if it was but can no longer be simple,\n          // we shouldn't set this.\n          needsCompareFamilies = true;\n        } else if ($$typeofNextType === REACT_LAZY_TYPE) {\n          needsCompareFamilies = true;\n        }\n        break;\n      }\n      default:\n        return false;\n    }\n\n    // Check if both types have a family and it's the same one.\n    if (needsCompareFamilies) {\n      // Note: memo() and forwardRef() we'll compare outer rather than inner type.\n      // This means both of them need to be registered to preserve state.\n      // If we unwrapped and compared the inner types for wrappers instead,\n      // then we would risk falsely saying two separate memo(Foo)\n      // calls are equivalent because they wrap the same Foo function.\n      const prevFamily = resolveFamily(prevType);\n      if (prevFamily !== undefined && prevFamily === resolveFamily(nextType)) {\n        return true;\n      }\n    }\n    return false;\n  } else {\n    return false;\n  }\n}\n\nexport function markFailedErrorBoundaryForHotReloading(fiber: Fiber) {\n  if (__DEV__) {\n    if (resolveFamily === null) {\n      // Hot reloading is disabled.\n      return;\n    }\n    if (typeof WeakSet !== 'function') {\n      return;\n    }\n    if (failedBoundaries === null) {\n      failedBoundaries = new WeakSet();\n    }\n    failedBoundaries.add(fiber);\n  }\n}\n\nexport const scheduleRefresh: ScheduleRefresh = (\n  root: FiberRoot,\n  update: RefreshUpdate,\n): void => {\n  if (__DEV__) {\n    if (resolveFamily === null) {\n      // Hot reloading is disabled.\n      return;\n    }\n    const {staleFamilies, updatedFamilies} = update;\n    flushPassiveEffects();\n    flushSync(() => {\n      scheduleFibersWithFamiliesRecursively(\n        root.current,\n        updatedFamilies,\n        staleFamilies,\n      );\n    });\n  }\n};\n\nexport const scheduleRoot: ScheduleRoot = (\n  root: FiberRoot,\n  element: ReactNodeList,\n): void => {\n  if (__DEV__) {\n    if (root.context !== emptyContextObject) {\n      // Super edge case: root has a legacy _renderSubtree context\n      // but we don't know the parentComponent so we can't pass it.\n      // Just ignore. We'll delete this with _renderSubtree code path later.\n      return;\n    }\n    flushPassiveEffects();\n    flushSync(() => {\n      updateContainer(element, root, null, null);\n    });\n  }\n};\n\nfunction scheduleFibersWithFamiliesRecursively(\n  fiber: Fiber,\n  updatedFamilies: Set<Family>,\n  staleFamilies: Set<Family>,\n) {\n  if (__DEV__) {\n    const {alternate, child, sibling, tag, type} = fiber;\n\n    let candidateType = null;\n    switch (tag) {\n      case FunctionComponent:\n      case SimpleMemoComponent:\n      case ClassComponent:\n        candidateType = type;\n        break;\n      case ForwardRef:\n        candidateType = type.render;\n        break;\n      default:\n        break;\n    }\n\n    if (resolveFamily === null) {\n      throw new Error('Expected resolveFamily to be set during hot reload.');\n    }\n\n    let needsRender = false;\n    let needsRemount = false;\n    if (candidateType !== null) {\n      const family = resolveFamily(candidateType);\n      if (family !== undefined) {\n        if (staleFamilies.has(family)) {\n          needsRemount = true;\n        } else if (updatedFamilies.has(family)) {\n          if (tag === ClassComponent) {\n            needsRemount = true;\n          } else {\n            needsRender = true;\n          }\n        }\n      }\n    }\n    if (failedBoundaries !== null) {\n      if (\n        failedBoundaries.has(fiber) ||\n        (alternate !== null && failedBoundaries.has(alternate))\n      ) {\n        needsRemount = true;\n      }\n    }\n\n    if (needsRemount) {\n      fiber._debugNeedsRemount = true;\n    }\n    if (needsRemount || needsRender) {\n      scheduleUpdateOnFiber(fiber, SyncLane, NoTimestamp);\n    }\n    if (child !== null && !needsRemount) {\n      scheduleFibersWithFamiliesRecursively(\n        child,\n        updatedFamilies,\n        staleFamilies,\n      );\n    }\n    if (sibling !== null) {\n      scheduleFibersWithFamiliesRecursively(\n        sibling,\n        updatedFamilies,\n        staleFamilies,\n      );\n    }\n  }\n}\n\nexport const findHostInstancesForRefresh: FindHostInstancesForRefresh = (\n  root: FiberRoot,\n  families: Array<Family>,\n): Set<Instance> => {\n  if (__DEV__) {\n    const hostInstances = new Set();\n    const types = new Set(families.map(family => family.current));\n    findHostInstancesForMatchingFibersRecursively(\n      root.current,\n      types,\n      hostInstances,\n    );\n    return hostInstances;\n  } else {\n    throw new Error(\n      'Did not expect findHostInstancesForRefresh to be called in production.',\n    );\n  }\n};\n\nfunction findHostInstancesForMatchingFibersRecursively(\n  fiber: Fiber,\n  types: Set<any>,\n  hostInstances: Set<Instance>,\n) {\n  if (__DEV__) {\n    const {child, sibling, tag, type} = fiber;\n\n    let candidateType = null;\n    switch (tag) {\n      case FunctionComponent:\n      case SimpleMemoComponent:\n      case ClassComponent:\n        candidateType = type;\n        break;\n      case ForwardRef:\n        candidateType = type.render;\n        break;\n      default:\n        break;\n    }\n\n    let didMatch = false;\n    if (candidateType !== null) {\n      if (types.has(candidateType)) {\n        didMatch = true;\n      }\n    }\n\n    if (didMatch) {\n      // We have a match. This only drills down to the closest host components.\n      // There's no need to search deeper because for the purpose of giving\n      // visual feedback, \"flashing\" outermost parent rectangles is sufficient.\n      findHostInstancesForFiberShallowly(fiber, hostInstances);\n    } else {\n      // If there's no match, maybe there will be one further down in the child tree.\n      if (child !== null) {\n        findHostInstancesForMatchingFibersRecursively(\n          child,\n          types,\n          hostInstances,\n        );\n      }\n    }\n\n    if (sibling !== null) {\n      findHostInstancesForMatchingFibersRecursively(\n        sibling,\n        types,\n        hostInstances,\n      );\n    }\n  }\n}\n\nfunction findHostInstancesForFiberShallowly(\n  fiber: Fiber,\n  hostInstances: Set<Instance>,\n): void {\n  if (__DEV__) {\n    const foundHostInstances = findChildHostInstancesForFiberShallowly(\n      fiber,\n      hostInstances,\n    );\n    if (foundHostInstances) {\n      return;\n    }\n    // If we didn't find any host children, fallback to closest host parent.\n    let node = fiber;\n    while (true) {\n      switch (node.tag) {\n        case HostComponent:\n          hostInstances.add(node.stateNode);\n          return;\n        case HostPortal:\n          hostInstances.add(node.stateNode.containerInfo);\n          return;\n        case HostRoot:\n          hostInstances.add(node.stateNode.containerInfo);\n          return;\n      }\n      if (node.return === null) {\n        throw new Error('Expected to reach root first.');\n      }\n      node = node.return;\n    }\n  }\n}\n\nfunction findChildHostInstancesForFiberShallowly(\n  fiber: Fiber,\n  hostInstances: Set<Instance>,\n): boolean {\n  if (__DEV__) {\n    let node: Fiber = fiber;\n    let foundHostInstances = false;\n    while (true) {\n      if (node.tag === HostComponent) {\n        // We got a match.\n        foundHostInstances = true;\n        hostInstances.add(node.stateNode);\n        // There may still be more, so keep searching.\n      } else if (node.child !== null) {\n        node.child.return = node;\n        node = node.child;\n        continue;\n      }\n      if (node === fiber) {\n        return foundHostInstances;\n      }\n      while (node.sibling === null) {\n        if (node.return === null || node.return === fiber) {\n          return foundHostInstances;\n        }\n        node = node.return;\n      }\n      node.sibling.return = node.return;\n      node = node.sibling;\n    }\n  }\n  return false;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {ReactElement} from 'shared/ReactElementType';\nimport type {\n  ReactFragment,\n  ReactPortal,\n  ReactFundamentalComponent,\n  ReactScope,\n} from 'shared/ReactTypes';\nimport type {Fiber} from './ReactInternalTypes';\nimport type {RootTag} from './ReactRootTags';\nimport type {WorkTag} from './ReactWorkTags';\nimport type {TypeOfMode} from './ReactTypeOfMode';\nimport type {Lanes} from './ReactFiberLane';\nimport type {SuspenseInstance} from './ReactFiberHostConfig';\nimport type {OffscreenProps} from './ReactFiberOffscreenComponent';\n\nimport invariant from 'shared/invariant';\nimport {\n  enableProfilerTimer,\n  enableFundamentalAPI,\n  enableScopeAPI,\n  enableBlocksAPI,\n} from 'shared/ReactFeatureFlags';\nimport {NoFlags, Placement} from './ReactFiberFlags';\nimport {ConcurrentRoot, BlockingRoot} from './ReactRootTags';\nimport {\n  IndeterminateComponent,\n  ClassComponent,\n  HostRoot,\n  HostComponent,\n  HostText,\n  HostPortal,\n  ForwardRef,\n  Fragment,\n  Mode,\n  ContextProvider,\n  ContextConsumer,\n  Profiler,\n  SuspenseComponent,\n  SuspenseListComponent,\n  DehydratedFragment,\n  FunctionComponent,\n  MemoComponent,\n  SimpleMemoComponent,\n  LazyComponent,\n  FundamentalComponent,\n  ScopeComponent,\n  Block,\n  OffscreenComponent,\n  LegacyHiddenComponent,\n} from './ReactWorkTags';\nimport getComponentName from 'shared/getComponentName';\n\nimport {isDevToolsPresent} from './ReactFiberDevToolsHook.old';\nimport {\n  resolveClassForHotReloading,\n  resolveFunctionForHotReloading,\n  resolveForwardRefForHotReloading,\n} from './ReactFiberHotReloading.old';\nimport {NoLanes} from './ReactFiberLane';\nimport {\n  NoMode,\n  ConcurrentMode,\n  DebugTracingMode,\n  ProfileMode,\n  StrictMode,\n  BlockingMode,\n} from './ReactTypeOfMode';\nimport {\n  REACT_FORWARD_REF_TYPE,\n  REACT_FRAGMENT_TYPE,\n  REACT_DEBUG_TRACING_MODE_TYPE,\n  REACT_STRICT_MODE_TYPE,\n  REACT_PROFILER_TYPE,\n  REACT_PROVIDER_TYPE,\n  REACT_CONTEXT_TYPE,\n  REACT_SUSPENSE_TYPE,\n  REACT_SUSPENSE_LIST_TYPE,\n  REACT_MEMO_TYPE,\n  REACT_LAZY_TYPE,\n  REACT_FUNDAMENTAL_TYPE,\n  REACT_SCOPE_TYPE,\n  REACT_BLOCK_TYPE,\n  REACT_OFFSCREEN_TYPE,\n  REACT_LEGACY_HIDDEN_TYPE,\n} from 'shared/ReactSymbols';\n\nexport type {Fiber};\n\nlet hasBadMapPolyfill;\n\nif (__DEV__) {\n  hasBadMapPolyfill = false;\n  try {\n    const nonExtensibleObject = Object.preventExtensions({});\n    /* eslint-disable no-new */\n    new Map([[nonExtensibleObject, null]]);\n    new Set([nonExtensibleObject]);\n    /* eslint-enable no-new */\n  } catch (e) {\n    // TODO: Consider warning about bad polyfills\n    hasBadMapPolyfill = true;\n  }\n}\n\nlet debugCounter = 1;\n\nfunction FiberNode(\n  tag: WorkTag,\n  pendingProps: mixed,\n  key: null | string,\n  mode: TypeOfMode,\n) {\n  // Instance\n  this.tag = tag;\n  this.key = key;\n  this.elementType = null;\n  this.type = null;\n  this.stateNode = null;\n\n  // Fiber\n  this.return = null;\n  this.child = null;\n  this.sibling = null;\n  this.index = 0;\n\n  this.ref = null;\n\n  this.pendingProps = pendingProps;\n  this.memoizedProps = null;\n  this.updateQueue = null;\n  this.memoizedState = null;\n  this.dependencies = null;\n\n  this.mode = mode;\n\n  // Effects\n  this.flags = NoFlags;\n  this.nextEffect = null;\n\n  this.firstEffect = null;\n  this.lastEffect = null;\n\n  this.lanes = NoLanes;\n  this.childLanes = NoLanes;\n\n  this.alternate = null;\n\n  if (enableProfilerTimer) {\n    // Note: The following is done to avoid a v8 performance cliff.\n    //\n    // Initializing the fields below to smis and later updating them with\n    // double values will cause Fibers to end up having separate shapes.\n    // This behavior/bug has something to do with Object.preventExtension().\n    // Fortunately this only impacts DEV builds.\n    // Unfortunately it makes React unusably slow for some applications.\n    // To work around this, initialize the fields below with doubles.\n    //\n    // Learn more about this here:\n    // https://github.com/facebook/react/issues/14365\n    // https://bugs.chromium.org/p/v8/issues/detail?id=8538\n    this.actualDuration = Number.NaN;\n    this.actualStartTime = Number.NaN;\n    this.selfBaseDuration = Number.NaN;\n    this.treeBaseDuration = Number.NaN;\n\n    // It's okay to replace the initial doubles with smis after initialization.\n    // This won't trigger the performance cliff mentioned above,\n    // and it simplifies other profiler code (including DevTools).\n    this.actualDuration = 0;\n    this.actualStartTime = -1;\n    this.selfBaseDuration = 0;\n    this.treeBaseDuration = 0;\n  }\n\n  if (__DEV__) {\n    // This isn't directly used but is handy for debugging internals:\n    this._debugID = debugCounter++;\n    this._debugSource = null;\n    this._debugOwner = null;\n    this._debugNeedsRemount = false;\n    this._debugHookTypes = null;\n    if (!hasBadMapPolyfill && typeof Object.preventExtensions === 'function') {\n      Object.preventExtensions(this);\n    }\n  }\n}\n\n// This is a constructor function, rather than a POJO constructor, still\n// please ensure we do the following:\n// 1) Nobody should add any instance methods on this. Instance methods can be\n//    more difficult to predict when they get optimized and they are almost\n//    never inlined properly in static compilers.\n// 2) Nobody should rely on `instanceof Fiber` for type testing. We should\n//    always know when it is a fiber.\n// 3) We might want to experiment with using numeric keys since they are easier\n//    to optimize in a non-JIT environment.\n// 4) We can easily go from a constructor to a createFiber object literal if that\n//    is faster.\n// 5) It should be easy to port this to a C struct and keep a C implementation\n//    compatible.\nconst createFiber = function(\n  tag: WorkTag,\n  pendingProps: mixed,\n  key: null | string,\n  mode: TypeOfMode,\n): Fiber {\n  // $FlowFixMe: the shapes are exact here but Flow doesn't like constructors\n  return new FiberNode(tag, pendingProps, key, mode);\n};\n\nfunction shouldConstruct(Component: Function) {\n  const prototype = Component.prototype;\n  return !!(prototype && prototype.isReactComponent);\n}\n\nexport function isSimpleFunctionComponent(type: any) {\n  return (\n    typeof type === 'function' &&\n    !shouldConstruct(type) &&\n    type.defaultProps === undefined\n  );\n}\n\nexport function resolveLazyComponentTag(Component: Function): WorkTag {\n  if (typeof Component === 'function') {\n    return shouldConstruct(Component) ? ClassComponent : FunctionComponent;\n  } else if (Component !== undefined && Component !== null) {\n    const $$typeof = Component.$$typeof;\n    if ($$typeof === REACT_FORWARD_REF_TYPE) {\n      return ForwardRef;\n    }\n    if ($$typeof === REACT_MEMO_TYPE) {\n      return MemoComponent;\n    }\n    if (enableBlocksAPI) {\n      if ($$typeof === REACT_BLOCK_TYPE) {\n        return Block;\n      }\n    }\n  }\n  return IndeterminateComponent;\n}\n\n// This is used to create an alternate fiber to do work on.\nexport function createWorkInProgress(current: Fiber, pendingProps: any): Fiber {\n  let workInProgress = current.alternate;\n  if (workInProgress === null) {\n    // We use a double buffering pooling technique because we know that we'll\n    // only ever need at most two versions of a tree. We pool the \"other\" unused\n    // node that we're free to reuse. This is lazily created to avoid allocating\n    // extra objects for things that are never updated. It also allow us to\n    // reclaim the extra memory if needed.\n    workInProgress = createFiber(\n      current.tag,\n      pendingProps,\n      current.key,\n      current.mode,\n    );\n    workInProgress.elementType = current.elementType;\n    workInProgress.type = current.type;\n    workInProgress.stateNode = current.stateNode;\n\n    if (__DEV__) {\n      // DEV-only fields\n      workInProgress._debugID = current._debugID;\n      workInProgress._debugSource = current._debugSource;\n      workInProgress._debugOwner = current._debugOwner;\n      workInProgress._debugHookTypes = current._debugHookTypes;\n    }\n\n    workInProgress.alternate = current;\n    current.alternate = workInProgress;\n  } else {\n    workInProgress.pendingProps = pendingProps;\n    // Needed because Blocks store data on type.\n    workInProgress.type = current.type;\n\n    // We already have an alternate.\n    // Reset the effect tag.\n    workInProgress.flags = NoFlags;\n\n    // The effect list is no longer valid.\n    workInProgress.nextEffect = null;\n    workInProgress.firstEffect = null;\n    workInProgress.lastEffect = null;\n\n    if (enableProfilerTimer) {\n      // We intentionally reset, rather than copy, actualDuration & actualStartTime.\n      // This prevents time from endlessly accumulating in new commits.\n      // This has the downside of resetting values for different priority renders,\n      // But works for yielding (the common case) and should support resuming.\n      workInProgress.actualDuration = 0;\n      workInProgress.actualStartTime = -1;\n    }\n  }\n\n  workInProgress.childLanes = current.childLanes;\n  workInProgress.lanes = current.lanes;\n\n  workInProgress.child = current.child;\n  workInProgress.memoizedProps = current.memoizedProps;\n  workInProgress.memoizedState = current.memoizedState;\n  workInProgress.updateQueue = current.updateQueue;\n\n  // Clone the dependencies object. This is mutated during the render phase, so\n  // it cannot be shared with the current fiber.\n  const currentDependencies = current.dependencies;\n  workInProgress.dependencies =\n    currentDependencies === null\n      ? null\n      : {\n          lanes: currentDependencies.lanes,\n          firstContext: currentDependencies.firstContext,\n        };\n\n  // These will be overridden during the parent's reconciliation\n  workInProgress.sibling = current.sibling;\n  workInProgress.index = current.index;\n  workInProgress.ref = current.ref;\n\n  if (enableProfilerTimer) {\n    workInProgress.selfBaseDuration = current.selfBaseDuration;\n    workInProgress.treeBaseDuration = current.treeBaseDuration;\n  }\n\n  if (__DEV__) {\n    workInProgress._debugNeedsRemount = current._debugNeedsRemount;\n    switch (workInProgress.tag) {\n      case IndeterminateComponent:\n      case FunctionComponent:\n      case SimpleMemoComponent:\n        workInProgress.type = resolveFunctionForHotReloading(current.type);\n        break;\n      case ClassComponent:\n        workInProgress.type = resolveClassForHotReloading(current.type);\n        break;\n      case ForwardRef:\n        workInProgress.type = resolveForwardRefForHotReloading(current.type);\n        break;\n      default:\n        break;\n    }\n  }\n\n  return workInProgress;\n}\n\n// Used to reuse a Fiber for a second pass.\nexport function resetWorkInProgress(workInProgress: Fiber, renderLanes: Lanes) {\n  // This resets the Fiber to what createFiber or createWorkInProgress would\n  // have set the values to before during the first pass. Ideally this wouldn't\n  // be necessary but unfortunately many code paths reads from the workInProgress\n  // when they should be reading from current and writing to workInProgress.\n\n  // We assume pendingProps, index, key, ref, return are still untouched to\n  // avoid doing another reconciliation.\n\n  // Reset the effect tag but keep any Placement tags, since that's something\n  // that child fiber is setting, not the reconciliation.\n  workInProgress.flags &= Placement;\n\n  // The effect list is no longer valid.\n  workInProgress.nextEffect = null;\n  workInProgress.firstEffect = null;\n  workInProgress.lastEffect = null;\n\n  const current = workInProgress.alternate;\n  if (current === null) {\n    // Reset to createFiber's initial values.\n    workInProgress.childLanes = NoLanes;\n    workInProgress.lanes = renderLanes;\n\n    workInProgress.child = null;\n    workInProgress.memoizedProps = null;\n    workInProgress.memoizedState = null;\n    workInProgress.updateQueue = null;\n\n    workInProgress.dependencies = null;\n\n    workInProgress.stateNode = null;\n\n    if (enableProfilerTimer) {\n      // Note: We don't reset the actualTime counts. It's useful to accumulate\n      // actual time across multiple render passes.\n      workInProgress.selfBaseDuration = 0;\n      workInProgress.treeBaseDuration = 0;\n    }\n  } else {\n    // Reset to the cloned values that createWorkInProgress would've.\n    workInProgress.childLanes = current.childLanes;\n    workInProgress.lanes = current.lanes;\n\n    workInProgress.child = current.child;\n    workInProgress.memoizedProps = current.memoizedProps;\n    workInProgress.memoizedState = current.memoizedState;\n    workInProgress.updateQueue = current.updateQueue;\n    // Needed because Blocks store data on type.\n    workInProgress.type = current.type;\n\n    // Clone the dependencies object. This is mutated during the render phase, so\n    // it cannot be shared with the current fiber.\n    const currentDependencies = current.dependencies;\n    workInProgress.dependencies =\n      currentDependencies === null\n        ? null\n        : {\n            lanes: currentDependencies.lanes,\n            firstContext: currentDependencies.firstContext,\n          };\n\n    if (enableProfilerTimer) {\n      // Note: We don't reset the actualTime counts. It's useful to accumulate\n      // actual time across multiple render passes.\n      workInProgress.selfBaseDuration = current.selfBaseDuration;\n      workInProgress.treeBaseDuration = current.treeBaseDuration;\n    }\n  }\n\n  return workInProgress;\n}\n\nexport function createHostRootFiber(tag: RootTag): Fiber {\n  let mode;\n  if (tag === ConcurrentRoot) {\n    mode = ConcurrentMode | BlockingMode | StrictMode;\n  } else if (tag === BlockingRoot) {\n    mode = BlockingMode | StrictMode;\n  } else {\n    mode = NoMode;\n  }\n\n  if (enableProfilerTimer && isDevToolsPresent) {\n    // Always collect profile timings when DevTools are present.\n    // This enables DevTools to start capturing timing at any point–\n    // Without some nodes in the tree having empty base times.\n    mode |= ProfileMode;\n  }\n\n  return createFiber(HostRoot, null, null, mode);\n}\n\nexport function createFiberFromTypeAndProps(\n  type: any, // React$ElementType\n  key: null | string,\n  pendingProps: any,\n  owner: null | Fiber,\n  mode: TypeOfMode,\n  lanes: Lanes,\n): Fiber {\n  let fiberTag = IndeterminateComponent;\n  // The resolved type is set if we know what the final type will be. I.e. it's not lazy.\n  let resolvedType = type;\n  if (typeof type === 'function') {\n    if (shouldConstruct(type)) {\n      fiberTag = ClassComponent;\n      if (__DEV__) {\n        resolvedType = resolveClassForHotReloading(resolvedType);\n      }\n    } else {\n      if (__DEV__) {\n        resolvedType = resolveFunctionForHotReloading(resolvedType);\n      }\n    }\n  } else if (typeof type === 'string') {\n    fiberTag = HostComponent;\n  } else {\n    getTag: switch (type) {\n      case REACT_FRAGMENT_TYPE:\n        return createFiberFromFragment(pendingProps.children, mode, lanes, key);\n      case REACT_DEBUG_TRACING_MODE_TYPE:\n        fiberTag = Mode;\n        mode |= DebugTracingMode;\n        break;\n      case REACT_STRICT_MODE_TYPE:\n        fiberTag = Mode;\n        mode |= StrictMode;\n        break;\n      case REACT_PROFILER_TYPE:\n        return createFiberFromProfiler(pendingProps, mode, lanes, key);\n      case REACT_SUSPENSE_TYPE:\n        return createFiberFromSuspense(pendingProps, mode, lanes, key);\n      case REACT_SUSPENSE_LIST_TYPE:\n        return createFiberFromSuspenseList(pendingProps, mode, lanes, key);\n      case REACT_OFFSCREEN_TYPE:\n        return createFiberFromOffscreen(pendingProps, mode, lanes, key);\n      case REACT_LEGACY_HIDDEN_TYPE:\n        return createFiberFromLegacyHidden(pendingProps, mode, lanes, key);\n      case REACT_SCOPE_TYPE:\n        if (enableScopeAPI) {\n          return createFiberFromScope(type, pendingProps, mode, lanes, key);\n        }\n      // eslint-disable-next-line no-fallthrough\n      default: {\n        if (typeof type === 'object' && type !== null) {\n          switch (type.$$typeof) {\n            case REACT_PROVIDER_TYPE:\n              fiberTag = ContextProvider;\n              break getTag;\n            case REACT_CONTEXT_TYPE:\n              // This is a consumer\n              fiberTag = ContextConsumer;\n              break getTag;\n            case REACT_FORWARD_REF_TYPE:\n              fiberTag = ForwardRef;\n              if (__DEV__) {\n                resolvedType = resolveForwardRefForHotReloading(resolvedType);\n              }\n              break getTag;\n            case REACT_MEMO_TYPE:\n              fiberTag = MemoComponent;\n              break getTag;\n            case REACT_LAZY_TYPE:\n              fiberTag = LazyComponent;\n              resolvedType = null;\n              break getTag;\n            case REACT_BLOCK_TYPE:\n              fiberTag = Block;\n              break getTag;\n            case REACT_FUNDAMENTAL_TYPE:\n              if (enableFundamentalAPI) {\n                return createFiberFromFundamental(\n                  type,\n                  pendingProps,\n                  mode,\n                  lanes,\n                  key,\n                );\n              }\n              break;\n          }\n        }\n        let info = '';\n        if (__DEV__) {\n          if (\n            type === undefined ||\n            (typeof type === 'object' &&\n              type !== null &&\n              Object.keys(type).length === 0)\n          ) {\n            info +=\n              ' You likely forgot to export your component from the file ' +\n              \"it's defined in, or you might have mixed up default and \" +\n              'named imports.';\n          }\n          const ownerName = owner ? getComponentName(owner.type) : null;\n          if (ownerName) {\n            info += '\\n\\nCheck the render method of `' + ownerName + '`.';\n          }\n        }\n        invariant(\n          false,\n          'Element type is invalid: expected a string (for built-in ' +\n            'components) or a class/function (for composite components) ' +\n            'but got: %s.%s',\n          type == null ? type : typeof type,\n          info,\n        );\n      }\n    }\n  }\n\n  const fiber = createFiber(fiberTag, pendingProps, key, mode);\n  fiber.elementType = type;\n  fiber.type = resolvedType;\n  fiber.lanes = lanes;\n\n  if (__DEV__) {\n    fiber._debugOwner = owner;\n  }\n\n  return fiber;\n}\n\nexport function createFiberFromElement(\n  element: ReactElement,\n  mode: TypeOfMode,\n  lanes: Lanes,\n): Fiber {\n  let owner = null;\n  if (__DEV__) {\n    owner = element._owner;\n  }\n  const type = element.type;\n  const key = element.key;\n  const pendingProps = element.props;\n  const fiber = createFiberFromTypeAndProps(\n    type,\n    key,\n    pendingProps,\n    owner,\n    mode,\n    lanes,\n  );\n  if (__DEV__) {\n    fiber._debugSource = element._source;\n    fiber._debugOwner = element._owner;\n  }\n  return fiber;\n}\n\nexport function createFiberFromFragment(\n  elements: ReactFragment,\n  mode: TypeOfMode,\n  lanes: Lanes,\n  key: null | string,\n): Fiber {\n  const fiber = createFiber(Fragment, elements, key, mode);\n  fiber.lanes = lanes;\n  return fiber;\n}\n\nexport function createFiberFromFundamental(\n  fundamentalComponent: ReactFundamentalComponent<any, any>,\n  pendingProps: any,\n  mode: TypeOfMode,\n  lanes: Lanes,\n  key: null | string,\n): Fiber {\n  const fiber = createFiber(FundamentalComponent, pendingProps, key, mode);\n  fiber.elementType = fundamentalComponent;\n  fiber.type = fundamentalComponent;\n  fiber.lanes = lanes;\n  return fiber;\n}\n\nfunction createFiberFromScope(\n  scope: ReactScope,\n  pendingProps: any,\n  mode: TypeOfMode,\n  lanes: Lanes,\n  key: null | string,\n) {\n  const fiber = createFiber(ScopeComponent, pendingProps, key, mode);\n  fiber.type = scope;\n  fiber.elementType = scope;\n  fiber.lanes = lanes;\n  return fiber;\n}\n\nfunction createFiberFromProfiler(\n  pendingProps: any,\n  mode: TypeOfMode,\n  lanes: Lanes,\n  key: null | string,\n): Fiber {\n  if (__DEV__) {\n    if (typeof pendingProps.id !== 'string') {\n      console.error('Profiler must specify an \"id\" as a prop');\n    }\n  }\n\n  const fiber = createFiber(Profiler, pendingProps, key, mode | ProfileMode);\n  // TODO: The Profiler fiber shouldn't have a type. It has a tag.\n  fiber.elementType = REACT_PROFILER_TYPE;\n  fiber.type = REACT_PROFILER_TYPE;\n  fiber.lanes = lanes;\n\n  if (enableProfilerTimer) {\n    fiber.stateNode = {\n      effectDuration: 0,\n      passiveEffectDuration: 0,\n    };\n  }\n\n  return fiber;\n}\n\nexport function createFiberFromSuspense(\n  pendingProps: any,\n  mode: TypeOfMode,\n  lanes: Lanes,\n  key: null | string,\n) {\n  const fiber = createFiber(SuspenseComponent, pendingProps, key, mode);\n\n  // TODO: The SuspenseComponent fiber shouldn't have a type. It has a tag.\n  // This needs to be fixed in getComponentName so that it relies on the tag\n  // instead.\n  fiber.type = REACT_SUSPENSE_TYPE;\n  fiber.elementType = REACT_SUSPENSE_TYPE;\n\n  fiber.lanes = lanes;\n  return fiber;\n}\n\nexport function createFiberFromSuspenseList(\n  pendingProps: any,\n  mode: TypeOfMode,\n  lanes: Lanes,\n  key: null | string,\n) {\n  const fiber = createFiber(SuspenseListComponent, pendingProps, key, mode);\n  if (__DEV__) {\n    // TODO: The SuspenseListComponent fiber shouldn't have a type. It has a tag.\n    // This needs to be fixed in getComponentName so that it relies on the tag\n    // instead.\n    fiber.type = REACT_SUSPENSE_LIST_TYPE;\n  }\n  fiber.elementType = REACT_SUSPENSE_LIST_TYPE;\n  fiber.lanes = lanes;\n  return fiber;\n}\n\nexport function createFiberFromOffscreen(\n  pendingProps: OffscreenProps,\n  mode: TypeOfMode,\n  lanes: Lanes,\n  key: null | string,\n) {\n  const fiber = createFiber(OffscreenComponent, pendingProps, key, mode);\n  // TODO: The OffscreenComponent fiber shouldn't have a type. It has a tag.\n  // This needs to be fixed in getComponentName so that it relies on the tag\n  // instead.\n  if (__DEV__) {\n    fiber.type = REACT_OFFSCREEN_TYPE;\n  }\n  fiber.elementType = REACT_OFFSCREEN_TYPE;\n  fiber.lanes = lanes;\n  return fiber;\n}\n\nexport function createFiberFromLegacyHidden(\n  pendingProps: OffscreenProps,\n  mode: TypeOfMode,\n  lanes: Lanes,\n  key: null | string,\n) {\n  const fiber = createFiber(LegacyHiddenComponent, pendingProps, key, mode);\n  // TODO: The LegacyHidden fiber shouldn't have a type. It has a tag.\n  // This needs to be fixed in getComponentName so that it relies on the tag\n  // instead.\n  if (__DEV__) {\n    fiber.type = REACT_LEGACY_HIDDEN_TYPE;\n  }\n  fiber.elementType = REACT_LEGACY_HIDDEN_TYPE;\n  fiber.lanes = lanes;\n  return fiber;\n}\n\nexport function createFiberFromText(\n  content: string,\n  mode: TypeOfMode,\n  lanes: Lanes,\n): Fiber {\n  const fiber = createFiber(HostText, content, null, mode);\n  fiber.lanes = lanes;\n  return fiber;\n}\n\nexport function createFiberFromHostInstanceForDeletion(): Fiber {\n  const fiber = createFiber(HostComponent, null, null, NoMode);\n  // TODO: These should not need a type.\n  fiber.elementType = 'DELETED';\n  fiber.type = 'DELETED';\n  return fiber;\n}\n\nexport function createFiberFromDehydratedFragment(\n  dehydratedNode: SuspenseInstance,\n): Fiber {\n  const fiber = createFiber(DehydratedFragment, null, null, NoMode);\n  fiber.stateNode = dehydratedNode;\n  return fiber;\n}\n\nexport function createFiberFromPortal(\n  portal: ReactPortal,\n  mode: TypeOfMode,\n  lanes: Lanes,\n): Fiber {\n  const pendingProps = portal.children !== null ? portal.children : [];\n  const fiber = createFiber(HostPortal, pendingProps, portal.key, mode);\n  fiber.lanes = lanes;\n  fiber.stateNode = {\n    containerInfo: portal.containerInfo,\n    pendingChildren: null, // Used by persistent updates\n    implementation: portal.implementation,\n  };\n  return fiber;\n}\n\n// Used for stashing WIP properties to replay failed work in DEV.\nexport function assignFiberPropertiesInDEV(\n  target: Fiber | null,\n  source: Fiber,\n): Fiber {\n  if (target === null) {\n    // This Fiber's initial properties will always be overwritten.\n    // We only use a Fiber to ensure the same hidden class so DEV isn't slow.\n    target = createFiber(IndeterminateComponent, null, null, NoMode);\n  }\n\n  // This is intentionally written as a list of all properties.\n  // We tried to use Object.assign() instead but this is called in\n  // the hottest path, and Object.assign() was too slow:\n  // https://github.com/facebook/react/issues/12502\n  // This code is DEV-only so size is not a concern.\n\n  target.tag = source.tag;\n  target.key = source.key;\n  target.elementType = source.elementType;\n  target.type = source.type;\n  target.stateNode = source.stateNode;\n  target.return = source.return;\n  target.child = source.child;\n  target.sibling = source.sibling;\n  target.index = source.index;\n  target.ref = source.ref;\n  target.pendingProps = source.pendingProps;\n  target.memoizedProps = source.memoizedProps;\n  target.updateQueue = source.updateQueue;\n  target.memoizedState = source.memoizedState;\n  target.dependencies = source.dependencies;\n  target.mode = source.mode;\n  target.flags = source.flags;\n  target.nextEffect = source.nextEffect;\n  target.firstEffect = source.firstEffect;\n  target.lastEffect = source.lastEffect;\n  target.lanes = source.lanes;\n  target.childLanes = source.childLanes;\n  target.alternate = source.alternate;\n  if (enableProfilerTimer) {\n    target.actualDuration = source.actualDuration;\n    target.actualStartTime = source.actualStartTime;\n    target.selfBaseDuration = source.selfBaseDuration;\n    target.treeBaseDuration = source.treeBaseDuration;\n  }\n  target._debugID = source._debugID;\n  target._debugSource = source._debugSource;\n  target._debugOwner = source._debugOwner;\n  target._debugNeedsRemount = source._debugNeedsRemount;\n  target._debugHookTypes = source._debugHookTypes;\n  return target;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {FiberRoot, SuspenseHydrationCallbacks} from './ReactInternalTypes';\nimport type {RootTag} from './ReactRootTags';\n\nimport {noTimeout, supportsHydration} from './ReactFiberHostConfig';\nimport {createHostRootFiber} from './ReactFiber.old';\nimport {\n  NoLanes,\n  NoLanePriority,\n  NoTimestamp,\n  createLaneMap,\n} from './ReactFiberLane';\nimport {\n  enableSchedulerTracing,\n  enableSuspenseCallback,\n} from 'shared/ReactFeatureFlags';\nimport {unstable_getThreadID} from 'scheduler/tracing';\nimport {initializeUpdateQueue} from './ReactUpdateQueue.old';\nimport {LegacyRoot, BlockingRoot, ConcurrentRoot} from './ReactRootTags';\n\nfunction FiberRootNode(containerInfo, tag, hydrate) {\n  this.tag = tag;\n  this.containerInfo = containerInfo;\n  this.pendingChildren = null;\n  this.current = null;\n  this.pingCache = null;\n  this.finishedWork = null;\n  this.timeoutHandle = noTimeout;\n  this.context = null;\n  this.pendingContext = null;\n  this.hydrate = hydrate;\n  this.callbackNode = null;\n  this.callbackPriority = NoLanePriority;\n  this.eventTimes = createLaneMap(NoLanes);\n  this.expirationTimes = createLaneMap(NoTimestamp);\n\n  this.pendingLanes = NoLanes;\n  this.suspendedLanes = NoLanes;\n  this.pingedLanes = NoLanes;\n  this.expiredLanes = NoLanes;\n  this.mutableReadLanes = NoLanes;\n  this.finishedLanes = NoLanes;\n\n  this.entangledLanes = NoLanes;\n  this.entanglements = createLaneMap(NoLanes);\n\n  if (supportsHydration) {\n    this.mutableSourceEagerHydrationData = null;\n  }\n\n  if (enableSchedulerTracing) {\n    this.interactionThreadID = unstable_getThreadID();\n    this.memoizedInteractions = new Set();\n    this.pendingInteractionMap = new Map();\n  }\n  if (enableSuspenseCallback) {\n    this.hydrationCallbacks = null;\n  }\n\n  if (__DEV__) {\n    switch (tag) {\n      case BlockingRoot:\n        this._debugRootType = 'createBlockingRoot()';\n        break;\n      case ConcurrentRoot:\n        this._debugRootType = 'createRoot()';\n        break;\n      case LegacyRoot:\n        this._debugRootType = 'createLegacyRoot()';\n        break;\n    }\n  }\n}\n\nexport function createFiberRoot(\n  containerInfo: any,\n  tag: RootTag,\n  hydrate: boolean,\n  hydrationCallbacks: null | SuspenseHydrationCallbacks,\n): FiberRoot {\n  const root: FiberRoot = (new FiberRootNode(containerInfo, tag, hydrate): any);\n  if (enableSuspenseCallback) {\n    root.hydrationCallbacks = hydrationCallbacks;\n  }\n\n  // Cyclic construction. This cheats the type system right now because\n  // stateNode is any.\n  const uninitializedFiber = createHostRootFiber(tag);\n  root.current = uninitializedFiber;\n  uninitializedFiber.stateNode = root;\n\n  initializeUpdateQueue(uninitializedFiber);\n\n  return root;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {MutableSource, MutableSourceVersion} from 'shared/ReactTypes';\nimport type {FiberRoot} from './ReactInternalTypes';\n\nimport {isPrimaryRenderer} from './ReactFiberHostConfig';\n\n// Work in progress version numbers only apply to a single render,\n// and should be reset before starting a new render.\n// This tracks which mutable sources need to be reset after a render.\nconst workInProgressSources: Array<MutableSource<any>> = [];\n\nlet rendererSigil;\nif (__DEV__) {\n  // Used to detect multiple renderers using the same mutable source.\n  rendererSigil = {};\n}\n\nexport function markSourceAsDirty(mutableSource: MutableSource<any>): void {\n  workInProgressSources.push(mutableSource);\n}\n\nexport function resetWorkInProgressVersions(): void {\n  for (let i = 0; i < workInProgressSources.length; i++) {\n    const mutableSource = workInProgressSources[i];\n    if (isPrimaryRenderer) {\n      mutableSource._workInProgressVersionPrimary = null;\n    } else {\n      mutableSource._workInProgressVersionSecondary = null;\n    }\n  }\n  workInProgressSources.length = 0;\n}\n\nexport function getWorkInProgressVersion(\n  mutableSource: MutableSource<any>,\n): null | MutableSourceVersion {\n  if (isPrimaryRenderer) {\n    return mutableSource._workInProgressVersionPrimary;\n  } else {\n    return mutableSource._workInProgressVersionSecondary;\n  }\n}\n\nexport function setWorkInProgressVersion(\n  mutableSource: MutableSource<any>,\n  version: MutableSourceVersion,\n): void {\n  if (isPrimaryRenderer) {\n    mutableSource._workInProgressVersionPrimary = version;\n  } else {\n    mutableSource._workInProgressVersionSecondary = version;\n  }\n  workInProgressSources.push(mutableSource);\n}\n\nexport function warnAboutMultipleRenderersDEV(\n  mutableSource: MutableSource<any>,\n): void {\n  if (__DEV__) {\n    if (isPrimaryRenderer) {\n      if (mutableSource._currentPrimaryRenderer == null) {\n        mutableSource._currentPrimaryRenderer = rendererSigil;\n      } else if (mutableSource._currentPrimaryRenderer !== rendererSigil) {\n        console.error(\n          'Detected multiple renderers concurrently rendering the ' +\n            'same mutable source. This is currently unsupported.',\n        );\n      }\n    } else {\n      if (mutableSource._currentSecondaryRenderer == null) {\n        mutableSource._currentSecondaryRenderer = rendererSigil;\n      } else if (mutableSource._currentSecondaryRenderer !== rendererSigil) {\n        console.error(\n          'Detected multiple renderers concurrently rendering the ' +\n            'same mutable source. This is currently unsupported.',\n        );\n      }\n    }\n  }\n}\n\n// Eager reads the version of a mutable source and stores it on the root.\n// This ensures that the version used for server rendering matches the one\n// that is eventually read during hydration.\n// If they don't match there's a potential tear and a full deopt render is required.\nexport function registerMutableSourceForHydration(\n  root: FiberRoot,\n  mutableSource: MutableSource<any>,\n): void {\n  const getVersion = mutableSource._getVersion;\n  const version = getVersion(mutableSource._source);\n\n  // TODO Clear this data once all pending hydration work is finished.\n  // Retaining it forever may interfere with GC.\n  if (root.mutableSourceEagerHydrationData == null) {\n    root.mutableSourceEagerHydrationData = [mutableSource, version];\n  } else {\n    root.mutableSourceEagerHydrationData.push(mutableSource, version);\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport {REACT_PORTAL_TYPE} from 'shared/ReactSymbols';\n\nimport type {ReactNodeList, ReactPortal} from 'shared/ReactTypes';\n\nexport function createPortal(\n  children: ReactNodeList,\n  containerInfo: any,\n  // TODO: figure out the API for cross-renderer implementation.\n  implementation: any,\n  key: ?string = null,\n): ReactPortal {\n  return {\n    // This tag allow us to uniquely identify this as a React Portal\n    $$typeof: REACT_PORTAL_TYPE,\n    key: key == null ? null : '' + key,\n    children,\n    containerInfo,\n    implementation,\n  };\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber, SuspenseHydrationCallbacks} from './ReactInternalTypes';\nimport type {FiberRoot} from './ReactInternalTypes';\nimport type {RootTag} from './ReactRootTags';\nimport type {\n  Instance,\n  TextInstance,\n  Container,\n  PublicInstance,\n} from './ReactFiberHostConfig';\nimport type {RendererInspectionConfig} from './ReactFiberHostConfig';\nimport {FundamentalComponent} from './ReactWorkTags';\nimport type {ReactNodeList} from 'shared/ReactTypes';\nimport type {Lane, LanePriority} from './ReactFiberLane';\nimport type {SuspenseState} from './ReactFiberSuspenseComponent.old';\n\nimport {\n  findCurrentHostFiber,\n  findCurrentHostFiberWithNoPortals,\n} from './ReactFiberTreeReflection';\nimport {get as getInstance} from 'shared/ReactInstanceMap';\nimport {\n  HostComponent,\n  ClassComponent,\n  HostRoot,\n  SuspenseComponent,\n} from './ReactWorkTags';\nimport getComponentName from 'shared/getComponentName';\nimport invariant from 'shared/invariant';\nimport {enableSchedulingProfiler} from 'shared/ReactFeatureFlags';\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\nimport {getPublicInstance} from './ReactFiberHostConfig';\nimport {\n  findCurrentUnmaskedContext,\n  processChildContext,\n  emptyContextObject,\n  isContextProvider as isLegacyContextProvider,\n} from './ReactFiberContext.old';\nimport {createFiberRoot} from './ReactFiberRoot.old';\nimport {injectInternals, onScheduleRoot} from './ReactFiberDevToolsHook.old';\nimport {\n  requestEventTime,\n  requestUpdateLane,\n  scheduleUpdateOnFiber,\n  flushRoot,\n  batchedEventUpdates,\n  batchedUpdates,\n  unbatchedUpdates,\n  flushSync,\n  flushControlled,\n  deferredUpdates,\n  discreteUpdates,\n  flushDiscreteUpdates,\n  flushPassiveEffects,\n  warnIfNotScopedWithMatchingAct,\n  warnIfUnmockedScheduler,\n  IsThisRendererActing,\n  act,\n} from './ReactFiberWorkLoop.old';\nimport {createUpdate, enqueueUpdate} from './ReactUpdateQueue.old';\nimport {\n  isRendering as ReactCurrentFiberIsRendering,\n  current as ReactCurrentFiberCurrent,\n  resetCurrentFiber as resetCurrentDebugFiberInDEV,\n  setCurrentFiber as setCurrentDebugFiberInDEV,\n} from './ReactCurrentFiber';\nimport {StrictMode} from './ReactTypeOfMode';\nimport {\n  SyncLane,\n  InputDiscreteHydrationLane,\n  SelectiveHydrationLane,\n  NoTimestamp,\n  getHighestPriorityPendingLanes,\n  higherPriorityLane,\n  getCurrentUpdateLanePriority,\n  setCurrentUpdateLanePriority,\n} from './ReactFiberLane';\nimport {\n  scheduleRefresh,\n  scheduleRoot,\n  setRefreshHandler,\n  findHostInstancesForRefresh,\n} from './ReactFiberHotReloading.old';\nimport {markRenderScheduled} from './SchedulingProfiler';\n\nexport {registerMutableSourceForHydration} from './ReactMutableSource.new';\nexport {createPortal} from './ReactPortal';\nexport {\n  createComponentSelector,\n  createHasPsuedoClassSelector,\n  createRoleSelector,\n  createTestNameSelector,\n  createTextSelector,\n  getFindAllNodesFailureDescription,\n  findAllNodes,\n  findBoundingRects,\n  focusWithin,\n  observeVisibleRects,\n} from './ReactTestSelectors';\n\ntype OpaqueRoot = FiberRoot;\n\n// 0 is PROD, 1 is DEV.\n// Might add PROFILE later.\ntype BundleType = 0 | 1;\n\ntype DevToolsConfig = {|\n  bundleType: BundleType,\n  version: string,\n  rendererPackageName: string,\n  // Note: this actually *does* depend on Fiber internal fields.\n  // Used by \"inspect clicked DOM element\" in React DevTools.\n  findFiberByHostInstance?: (instance: Instance | TextInstance) => Fiber | null,\n  rendererConfig?: RendererInspectionConfig,\n|};\n\nlet didWarnAboutNestedUpdates;\nlet didWarnAboutFindNodeInStrictMode;\n\nif (__DEV__) {\n  didWarnAboutNestedUpdates = false;\n  didWarnAboutFindNodeInStrictMode = {};\n}\n\nfunction getContextForSubtree(\n  parentComponent: ?React$Component<any, any>,\n): Object {\n  if (!parentComponent) {\n    return emptyContextObject;\n  }\n\n  const fiber = getInstance(parentComponent);\n  const parentContext = findCurrentUnmaskedContext(fiber);\n\n  if (fiber.tag === ClassComponent) {\n    const Component = fiber.type;\n    if (isLegacyContextProvider(Component)) {\n      return processChildContext(fiber, Component, parentContext);\n    }\n  }\n\n  return parentContext;\n}\n\nfunction findHostInstance(component: Object): PublicInstance | null {\n  const fiber = getInstance(component);\n  if (fiber === undefined) {\n    if (typeof component.render === 'function') {\n      invariant(false, 'Unable to find node on an unmounted component.');\n    } else {\n      invariant(\n        false,\n        'Argument appears to not be a ReactComponent. Keys: %s',\n        Object.keys(component),\n      );\n    }\n  }\n  const hostFiber = findCurrentHostFiber(fiber);\n  if (hostFiber === null) {\n    return null;\n  }\n  return hostFiber.stateNode;\n}\n\nfunction findHostInstanceWithWarning(\n  component: Object,\n  methodName: string,\n): PublicInstance | null {\n  if (__DEV__) {\n    const fiber = getInstance(component);\n    if (fiber === undefined) {\n      if (typeof component.render === 'function') {\n        invariant(false, 'Unable to find node on an unmounted component.');\n      } else {\n        invariant(\n          false,\n          'Argument appears to not be a ReactComponent. Keys: %s',\n          Object.keys(component),\n        );\n      }\n    }\n    const hostFiber = findCurrentHostFiber(fiber);\n    if (hostFiber === null) {\n      return null;\n    }\n    if (hostFiber.mode & StrictMode) {\n      const componentName = getComponentName(fiber.type) || 'Component';\n      if (!didWarnAboutFindNodeInStrictMode[componentName]) {\n        didWarnAboutFindNodeInStrictMode[componentName] = true;\n\n        const previousFiber = ReactCurrentFiberCurrent;\n        try {\n          setCurrentDebugFiberInDEV(hostFiber);\n          if (fiber.mode & StrictMode) {\n            console.error(\n              '%s is deprecated in StrictMode. ' +\n                '%s was passed an instance of %s which is inside StrictMode. ' +\n                'Instead, add a ref directly to the element you want to reference. ' +\n                'Learn more about using refs safely here: ' +\n                'https://reactjs.org/link/strict-mode-find-node',\n              methodName,\n              methodName,\n              componentName,\n            );\n          } else {\n            console.error(\n              '%s is deprecated in StrictMode. ' +\n                '%s was passed an instance of %s which renders StrictMode children. ' +\n                'Instead, add a ref directly to the element you want to reference. ' +\n                'Learn more about using refs safely here: ' +\n                'https://reactjs.org/link/strict-mode-find-node',\n              methodName,\n              methodName,\n              componentName,\n            );\n          }\n        } finally {\n          // Ideally this should reset to previous but this shouldn't be called in\n          // render and there's another warning for that anyway.\n          if (previousFiber) {\n            setCurrentDebugFiberInDEV(previousFiber);\n          } else {\n            resetCurrentDebugFiberInDEV();\n          }\n        }\n      }\n    }\n    return hostFiber.stateNode;\n  }\n  return findHostInstance(component);\n}\n\nexport function createContainer(\n  containerInfo: Container,\n  tag: RootTag,\n  hydrate: boolean,\n  hydrationCallbacks: null | SuspenseHydrationCallbacks,\n): OpaqueRoot {\n  return createFiberRoot(containerInfo, tag, hydrate, hydrationCallbacks);\n}\n\nexport function updateContainer(\n  element: ReactNodeList,\n  container: OpaqueRoot,\n  parentComponent: ?React$Component<any, any>,\n  callback: ?Function,\n): Lane {\n  if (__DEV__) {\n    onScheduleRoot(container, element);\n  }\n  const current = container.current;\n  const eventTime = requestEventTime();\n  if (__DEV__) {\n    // $FlowExpectedError - jest isn't a global, and isn't recognized outside of tests\n    if ('undefined' !== typeof jest) {\n      warnIfUnmockedScheduler(current);\n      warnIfNotScopedWithMatchingAct(current);\n    }\n  }\n  const lane = requestUpdateLane(current);\n\n  if (enableSchedulingProfiler) {\n    markRenderScheduled(lane);\n  }\n\n  const context = getContextForSubtree(parentComponent);\n  if (container.context === null) {\n    container.context = context;\n  } else {\n    container.pendingContext = context;\n  }\n\n  if (__DEV__) {\n    if (\n      ReactCurrentFiberIsRendering &&\n      ReactCurrentFiberCurrent !== null &&\n      !didWarnAboutNestedUpdates\n    ) {\n      didWarnAboutNestedUpdates = true;\n      console.error(\n        'Render methods should be a pure function of props and state; ' +\n          'triggering nested component updates from render is not allowed. ' +\n          'If necessary, trigger nested updates in componentDidUpdate.\\n\\n' +\n          'Check the render method of %s.',\n        getComponentName(ReactCurrentFiberCurrent.type) || 'Unknown',\n      );\n    }\n  }\n\n  const update = createUpdate(eventTime, lane);\n  // Caution: React DevTools currently depends on this property\n  // being called \"element\".\n  update.payload = {element};\n\n  callback = callback === undefined ? null : callback;\n  if (callback !== null) {\n    if (__DEV__) {\n      if (typeof callback !== 'function') {\n        console.error(\n          'render(...): Expected the last optional `callback` argument to be a ' +\n            'function. Instead received: %s.',\n          callback,\n        );\n      }\n    }\n    update.callback = callback;\n  }\n\n  enqueueUpdate(current, update);\n  scheduleUpdateOnFiber(current, lane, eventTime);\n\n  return lane;\n}\n\nexport {\n  batchedEventUpdates,\n  batchedUpdates,\n  unbatchedUpdates,\n  deferredUpdates,\n  discreteUpdates,\n  flushDiscreteUpdates,\n  flushControlled,\n  flushSync,\n  flushPassiveEffects,\n  IsThisRendererActing,\n  act,\n};\n\nexport function getPublicRootInstance(\n  container: OpaqueRoot,\n): React$Component<any, any> | PublicInstance | null {\n  const containerFiber = container.current;\n  if (!containerFiber.child) {\n    return null;\n  }\n  switch (containerFiber.child.tag) {\n    case HostComponent:\n      return getPublicInstance(containerFiber.child.stateNode);\n    default:\n      return containerFiber.child.stateNode;\n  }\n}\n\nexport function attemptSynchronousHydration(fiber: Fiber): void {\n  switch (fiber.tag) {\n    case HostRoot:\n      const root: FiberRoot = fiber.stateNode;\n      if (root.hydrate) {\n        // Flush the first scheduled \"update\".\n        const lanes = getHighestPriorityPendingLanes(root);\n        flushRoot(root, lanes);\n      }\n      break;\n    case SuspenseComponent:\n      const eventTime = requestEventTime();\n      flushSync(() => scheduleUpdateOnFiber(fiber, SyncLane, eventTime));\n      // If we're still blocked after this, we need to increase\n      // the priority of any promises resolving within this\n      // boundary so that they next attempt also has higher pri.\n      const retryLane = InputDiscreteHydrationLane;\n      markRetryLaneIfNotHydrated(fiber, retryLane);\n      break;\n  }\n}\n\nfunction markRetryLaneImpl(fiber: Fiber, retryLane: Lane) {\n  const suspenseState: null | SuspenseState = fiber.memoizedState;\n  if (suspenseState !== null && suspenseState.dehydrated !== null) {\n    suspenseState.retryLane = higherPriorityLane(\n      suspenseState.retryLane,\n      retryLane,\n    );\n  }\n}\n\n// Increases the priority of thennables when they resolve within this boundary.\nfunction markRetryLaneIfNotHydrated(fiber: Fiber, retryLane: Lane) {\n  markRetryLaneImpl(fiber, retryLane);\n  const alternate = fiber.alternate;\n  if (alternate) {\n    markRetryLaneImpl(alternate, retryLane);\n  }\n}\n\nexport function attemptUserBlockingHydration(fiber: Fiber): void {\n  if (fiber.tag !== SuspenseComponent) {\n    // We ignore HostRoots here because we can't increase\n    // their priority and they should not suspend on I/O,\n    // since you have to wrap anything that might suspend in\n    // Suspense.\n    return;\n  }\n  const eventTime = requestEventTime();\n  const lane = InputDiscreteHydrationLane;\n  scheduleUpdateOnFiber(fiber, lane, eventTime);\n  markRetryLaneIfNotHydrated(fiber, lane);\n}\n\nexport function attemptContinuousHydration(fiber: Fiber): void {\n  if (fiber.tag !== SuspenseComponent) {\n    // We ignore HostRoots here because we can't increase\n    // their priority and they should not suspend on I/O,\n    // since you have to wrap anything that might suspend in\n    // Suspense.\n    return;\n  }\n  const eventTime = requestEventTime();\n  const lane = SelectiveHydrationLane;\n  scheduleUpdateOnFiber(fiber, lane, eventTime);\n  markRetryLaneIfNotHydrated(fiber, lane);\n}\n\nexport function attemptHydrationAtCurrentPriority(fiber: Fiber): void {\n  if (fiber.tag !== SuspenseComponent) {\n    // We ignore HostRoots here because we can't increase\n    // their priority other than synchronously flush it.\n    return;\n  }\n  const eventTime = requestEventTime();\n  const lane = requestUpdateLane(fiber);\n  scheduleUpdateOnFiber(fiber, lane, eventTime);\n  markRetryLaneIfNotHydrated(fiber, lane);\n}\n\nexport function runWithPriority<T>(priority: LanePriority, fn: () => T) {\n  const previousPriority = getCurrentUpdateLanePriority();\n  try {\n    setCurrentUpdateLanePriority(priority);\n    return fn();\n  } finally {\n    setCurrentUpdateLanePriority(previousPriority);\n  }\n}\n\nexport {getCurrentUpdateLanePriority};\n\nexport {findHostInstance};\n\nexport {findHostInstanceWithWarning};\n\nexport function findHostInstanceWithNoPortals(\n  fiber: Fiber,\n): PublicInstance | null {\n  const hostFiber = findCurrentHostFiberWithNoPortals(fiber);\n  if (hostFiber === null) {\n    return null;\n  }\n  if (hostFiber.tag === FundamentalComponent) {\n    return hostFiber.stateNode.instance;\n  }\n  return hostFiber.stateNode;\n}\n\nlet shouldSuspendImpl = fiber => false;\n\nexport function shouldSuspend(fiber: Fiber): boolean {\n  return shouldSuspendImpl(fiber);\n}\n\nlet overrideHookState = null;\nlet overrideHookStateDeletePath = null;\nlet overrideHookStateRenamePath = null;\nlet overrideProps = null;\nlet overridePropsDeletePath = null;\nlet overridePropsRenamePath = null;\nlet scheduleUpdate = null;\nlet setSuspenseHandler = null;\n\nif (__DEV__) {\n  const copyWithDeleteImpl = (\n    obj: Object | Array<any>,\n    path: Array<string | number>,\n    index: number,\n  ) => {\n    const key = path[index];\n    const updated = Array.isArray(obj) ? obj.slice() : {...obj};\n    if (index + 1 === path.length) {\n      if (Array.isArray(updated)) {\n        updated.splice(((key: any): number), 1);\n      } else {\n        delete updated[key];\n      }\n      return updated;\n    }\n    // $FlowFixMe number or string is fine here\n    updated[key] = copyWithDeleteImpl(obj[key], path, index + 1);\n    return updated;\n  };\n\n  const copyWithDelete = (\n    obj: Object | Array<any>,\n    path: Array<string | number>,\n  ): Object | Array<any> => {\n    return copyWithDeleteImpl(obj, path, 0);\n  };\n\n  const copyWithRenameImpl = (\n    obj: Object | Array<any>,\n    oldPath: Array<string | number>,\n    newPath: Array<string | number>,\n    index: number,\n  ) => {\n    const oldKey = oldPath[index];\n    const updated = Array.isArray(obj) ? obj.slice() : {...obj};\n    if (index + 1 === oldPath.length) {\n      const newKey = newPath[index];\n      // $FlowFixMe number or string is fine here\n      updated[newKey] = updated[oldKey];\n      if (Array.isArray(updated)) {\n        updated.splice(((oldKey: any): number), 1);\n      } else {\n        delete updated[oldKey];\n      }\n    } else {\n      // $FlowFixMe number or string is fine here\n      updated[oldKey] = copyWithRenameImpl(\n        // $FlowFixMe number or string is fine here\n        obj[oldKey],\n        oldPath,\n        newPath,\n        index + 1,\n      );\n    }\n    return updated;\n  };\n\n  const copyWithRename = (\n    obj: Object | Array<any>,\n    oldPath: Array<string | number>,\n    newPath: Array<string | number>,\n  ): Object | Array<any> => {\n    if (oldPath.length !== newPath.length) {\n      console.warn('copyWithRename() expects paths of the same length');\n      return;\n    } else {\n      for (let i = 0; i < newPath.length - 1; i++) {\n        if (oldPath[i] !== newPath[i]) {\n          console.warn(\n            'copyWithRename() expects paths to be the same except for the deepest key',\n          );\n          return;\n        }\n      }\n    }\n    return copyWithRenameImpl(obj, oldPath, newPath, 0);\n  };\n\n  const copyWithSetImpl = (\n    obj: Object | Array<any>,\n    path: Array<string | number>,\n    index: number,\n    value: any,\n  ) => {\n    if (index >= path.length) {\n      return value;\n    }\n    const key = path[index];\n    const updated = Array.isArray(obj) ? obj.slice() : {...obj};\n    // $FlowFixMe number or string is fine here\n    updated[key] = copyWithSetImpl(obj[key], path, index + 1, value);\n    return updated;\n  };\n\n  const copyWithSet = (\n    obj: Object | Array<any>,\n    path: Array<string | number>,\n    value: any,\n  ): Object | Array<any> => {\n    return copyWithSetImpl(obj, path, 0, value);\n  };\n\n  const findHook = (fiber: Fiber, id: number) => {\n    // For now, the \"id\" of stateful hooks is just the stateful hook index.\n    // This may change in the future with e.g. nested hooks.\n    let currentHook = fiber.memoizedState;\n    while (currentHook !== null && id > 0) {\n      currentHook = currentHook.next;\n      id--;\n    }\n    return currentHook;\n  };\n\n  // Support DevTools editable values for useState and useReducer.\n  overrideHookState = (\n    fiber: Fiber,\n    id: number,\n    path: Array<string | number>,\n    value: any,\n  ) => {\n    const hook = findHook(fiber, id);\n    if (hook !== null) {\n      const newState = copyWithSet(hook.memoizedState, path, value);\n      hook.memoizedState = newState;\n      hook.baseState = newState;\n\n      // We aren't actually adding an update to the queue,\n      // because there is no update we can add for useReducer hooks that won't trigger an error.\n      // (There's no appropriate action type for DevTools overrides.)\n      // As a result though, React will see the scheduled update as a noop and bailout.\n      // Shallow cloning props works as a workaround for now to bypass the bailout check.\n      fiber.memoizedProps = {...fiber.memoizedProps};\n\n      scheduleUpdateOnFiber(fiber, SyncLane, NoTimestamp);\n    }\n  };\n  overrideHookStateDeletePath = (\n    fiber: Fiber,\n    id: number,\n    path: Array<string | number>,\n  ) => {\n    const hook = findHook(fiber, id);\n    if (hook !== null) {\n      const newState = copyWithDelete(hook.memoizedState, path);\n      hook.memoizedState = newState;\n      hook.baseState = newState;\n\n      // We aren't actually adding an update to the queue,\n      // because there is no update we can add for useReducer hooks that won't trigger an error.\n      // (There's no appropriate action type for DevTools overrides.)\n      // As a result though, React will see the scheduled update as a noop and bailout.\n      // Shallow cloning props works as a workaround for now to bypass the bailout check.\n      fiber.memoizedProps = {...fiber.memoizedProps};\n\n      scheduleUpdateOnFiber(fiber, SyncLane, NoTimestamp);\n    }\n  };\n  overrideHookStateRenamePath = (\n    fiber: Fiber,\n    id: number,\n    oldPath: Array<string | number>,\n    newPath: Array<string | number>,\n  ) => {\n    const hook = findHook(fiber, id);\n    if (hook !== null) {\n      const newState = copyWithRename(hook.memoizedState, oldPath, newPath);\n      hook.memoizedState = newState;\n      hook.baseState = newState;\n\n      // We aren't actually adding an update to the queue,\n      // because there is no update we can add for useReducer hooks that won't trigger an error.\n      // (There's no appropriate action type for DevTools overrides.)\n      // As a result though, React will see the scheduled update as a noop and bailout.\n      // Shallow cloning props works as a workaround for now to bypass the bailout check.\n      fiber.memoizedProps = {...fiber.memoizedProps};\n\n      scheduleUpdateOnFiber(fiber, SyncLane, NoTimestamp);\n    }\n  };\n\n  // Support DevTools props for function components, forwardRef, memo, host components, etc.\n  overrideProps = (fiber: Fiber, path: Array<string | number>, value: any) => {\n    fiber.pendingProps = copyWithSet(fiber.memoizedProps, path, value);\n    if (fiber.alternate) {\n      fiber.alternate.pendingProps = fiber.pendingProps;\n    }\n    scheduleUpdateOnFiber(fiber, SyncLane, NoTimestamp);\n  };\n  overridePropsDeletePath = (fiber: Fiber, path: Array<string | number>) => {\n    fiber.pendingProps = copyWithDelete(fiber.memoizedProps, path);\n    if (fiber.alternate) {\n      fiber.alternate.pendingProps = fiber.pendingProps;\n    }\n    scheduleUpdateOnFiber(fiber, SyncLane, NoTimestamp);\n  };\n  overridePropsRenamePath = (\n    fiber: Fiber,\n    oldPath: Array<string | number>,\n    newPath: Array<string | number>,\n  ) => {\n    fiber.pendingProps = copyWithRename(fiber.memoizedProps, oldPath, newPath);\n    if (fiber.alternate) {\n      fiber.alternate.pendingProps = fiber.pendingProps;\n    }\n    scheduleUpdateOnFiber(fiber, SyncLane, NoTimestamp);\n  };\n\n  scheduleUpdate = (fiber: Fiber) => {\n    scheduleUpdateOnFiber(fiber, SyncLane, NoTimestamp);\n  };\n\n  setSuspenseHandler = (newShouldSuspendImpl: Fiber => boolean) => {\n    shouldSuspendImpl = newShouldSuspendImpl;\n  };\n}\n\nfunction findHostInstanceByFiber(fiber: Fiber): Instance | TextInstance | null {\n  const hostFiber = findCurrentHostFiber(fiber);\n  if (hostFiber === null) {\n    return null;\n  }\n  return hostFiber.stateNode;\n}\n\nfunction emptyFindFiberByHostInstance(\n  instance: Instance | TextInstance,\n): Fiber | null {\n  return null;\n}\n\nfunction getCurrentFiberForDevTools() {\n  return ReactCurrentFiberCurrent;\n}\n\nexport function injectIntoDevTools(devToolsConfig: DevToolsConfig): boolean {\n  const {findFiberByHostInstance} = devToolsConfig;\n  const {ReactCurrentDispatcher} = ReactSharedInternals;\n\n  return injectInternals({\n    bundleType: devToolsConfig.bundleType,\n    version: devToolsConfig.version,\n    rendererPackageName: devToolsConfig.rendererPackageName,\n    rendererConfig: devToolsConfig.rendererConfig,\n    overrideHookState,\n    overrideHookStateDeletePath,\n    overrideHookStateRenamePath,\n    overrideProps,\n    overridePropsDeletePath,\n    overridePropsRenamePath,\n    setSuspenseHandler,\n    scheduleUpdate,\n    currentDispatcherRef: ReactCurrentDispatcher,\n    findHostInstanceByFiber,\n    findFiberByHostInstance:\n      findFiberByHostInstance || emptyFindFiberByHostInstance,\n    // React Refresh\n    findHostInstancesForRefresh: __DEV__ ? findHostInstancesForRefresh : null,\n    scheduleRefresh: __DEV__ ? scheduleRefresh : null,\n    scheduleRoot: __DEV__ ? scheduleRoot : null,\n    setRefreshHandler: __DEV__ ? setRefreshHandler : null,\n    // Enables DevTools to append owner stacks to error messages in DEV mode.\n    getCurrentFiber: __DEV__ ? getCurrentFiberForDevTools : null,\n  });\n}\n"],"names":["ReactSharedInternals","React","warn","format","args","printWarning","error","level","ReactDebugCurrentFrame","stack","getStackAddendum","concat","argsWithFormat","map","item","unshift","Function","prototype","apply","call","console","FunctionComponent","ClassComponent","IndeterminateComponent","HostRoot","HostPortal","HostComponent","HostText","Fragment","Mode","ContextConsumer","ContextProvider","ForwardRef","Profiler","SuspenseComponent","MemoComponent","SimpleMemoComponent","LazyComponent","IncompleteClassComponent","DehydratedFragment","SuspenseListComponent","FundamentalComponent","ScopeComponent","Block","OffscreenComponent","LegacyHiddenComponent","get","key","_reactInternals","set","value","REACT_ELEMENT_TYPE","REACT_PORTAL_TYPE","REACT_FRAGMENT_TYPE","REACT_STRICT_MODE_TYPE","REACT_PROFILER_TYPE","REACT_PROVIDER_TYPE","REACT_CONTEXT_TYPE","REACT_FORWARD_REF_TYPE","REACT_SUSPENSE_TYPE","REACT_SUSPENSE_LIST_TYPE","REACT_MEMO_TYPE","REACT_LAZY_TYPE","REACT_BLOCK_TYPE","REACT_SERVER_BLOCK_TYPE","REACT_FUNDAMENTAL_TYPE","REACT_SCOPE_TYPE","REACT_OPAQUE_ID_TYPE","REACT_DEBUG_TRACING_MODE_TYPE","REACT_OFFSCREEN_TYPE","REACT_LEGACY_HIDDEN_TYPE","Symbol","for","symbolFor","MAYBE_ITERATOR_SYMBOL","iterator","FAUX_ITERATOR_SYMBOL","getIteratorFn","maybeIterable","maybeIterator","getWrappedName","outerType","innerType","wrapperName","functionName","displayName","name","getContextName","type","getComponentName","tag","$$typeof","context","provider","_context","render","_render","lazyComponent","payload","_payload","init","_init","x","NoFlags","PerformedWork","Placement","Update","PlacementAndUpdate","Deletion","ContentReset","Callback","DidCapture","Ref","Snapshot","Passive","PassiveUnmountPendingDev","Hydrating","HydratingAndUpdate","LifecycleEffectMask","HostEffectMask","Incomplete","ShouldCapture","ForceUpdateForLegacySuspense","enableProfilerTimer","__PROFILE__","enableFundamentalAPI","enableNewReconciler","warnAboutStringRefs","ReactCurrentOwner","getNearestMountedFiber","fiber","node","nearestMounted","alternate","nextNode","flags","return","isFiberMounted","isMounted","component","owner","current","ownerFiber","instance","stateNode","_warnedAboutRefsInRender","getInstance","assertIsMounted","findCurrentFiberUsingSlowPath","a","b","parentA","parentB","nextParent","child","sibling","didFindChild","findCurrentHostFiber","parent","currentParent","findCurrentHostFiberWithNoPortals","doesFiberContain","parentFiber","childFiber","parentFiberAlternate","getPublicInstance","$$$hostConfig","getRootHostContext","getChildHostContext","prepareForCommit","resetAfterCommit","createInstance","appendInitialChild","finalizeInitialChildren","prepareUpdate","shouldSetTextContent","createTextInstance","scheduleTimeout","cancelTimeout","noTimeout","now","isPrimaryRenderer","warnsIfNotActing","supportsMutation","supportsPersistence","supportsHydration","getFundamentalComponentInstance","mountFundamentalComponent","shouldUpdateFundamentalComponent","getInstanceFromNode","isOpaqueHydratingObject","makeOpaqueHydratingObject","makeClientId","makeClientIdInDEV","beforeActiveInstanceBlur","afterActiveInstanceBlur","preparePortalMount","prepareScopeUpdate","getInstanceFromScope","supportsTestSelectors","findFiberRoot","getBoundingRect","getTextContent","isHiddenSubtree","matchAccessibilityRole","setFocusIfFocusable","setupIntersectionObserver","appendChild","appendChildToContainer","commitTextUpdate","commitMount","commitUpdate","insertBefore","insertInContainerBefore","removeChild","removeChildFromContainer","resetTextContent","hideInstance","hideTextInstance","unhideInstance","unhideTextInstance","updateFundamentalComponent","unmountFundamentalComponent","clearContainer","cloneInstance","createContainerChildSet","appendChildToContainerChildSet","finalizeContainerChildren","replaceContainerChildren","cloneHiddenInstance","cloneHiddenTextInstance","cloneFundamentalInstance","canHydrateInstance","canHydrateTextInstance","canHydrateSuspenseInstance","isSuspenseInstancePending","isSuspenseInstanceFallback","registerSuspenseInstanceRetry","getNextHydratableSibling","getFirstHydratableChild","hydrateInstance","hydrateTextInstance","hydrateSuspenseInstance","getNextHydratableInstanceAfterSuspenseInstance","commitHydratedContainer","commitHydratedSuspenseInstance","clearSuspenseBoundary","clearSuspenseBoundaryFromContainer","didNotMatchHydratedContainerTextInstance","didNotMatchHydratedTextInstance","didNotHydrateContainerInstance","didNotHydrateInstance","didNotFindHydratableContainerInstance","didNotFindHydratableContainerTextInstance","didNotFindHydratableContainerSuspenseInstance","didNotFindHydratableInstance","didNotFindHydratableTextInstance","didNotFindHydratableSuspenseInstance","disabledDepth","prevLog","prevInfo","prevWarn","prevError","prevGroup","prevGroupCollapsed","prevGroupEnd","disabledLog","__reactDisabledLog","disableLogs","log","info","group","groupCollapsed","groupEnd","props","configurable","enumerable","writable","Object","defineProperties","reenableLogs","ReactCurrentDispatcher","prefix","describeBuiltInComponentFrame","source","ownerFn","undefined","Error","match","trim","reentry","componentFrameCache","PossiblyWeakMap","WeakMap","Map","describeNativeComponentFrame","fn","construct","frame","control","previousPrepareStackTrace","prepareStackTrace","previousDispatcher","Fake","defineProperty","Reflect","sample","sampleLines","split","controlLines","s","length","c","replace","syntheticFrame","describeClassComponentFrame","ctor","describeFunctionComponentFrame","shouldConstruct","Component","isReactComponent","describeUnknownElementTypeFrameInDEV","loggedTypeFailures","setCurrentlyValidatingElement","element","_owner","_source","setExtraStackFrame","checkPropTypes","typeSpecs","values","location","componentName","has","bind","hasOwnProperty","typeSpecName","err","ex","message","valueStack","fiberStack","index","createCursor","defaultValue","pop","cursor","push","warnedAboutMissingGetChildContext","emptyContextObject","freeze","contextStackCursor","didPerformWorkStackCursor","previousContext","getUnmaskedContext","workInProgress","didPushOwnContextIfProvider","isContextProvider","cacheContext","unmaskedContext","maskedContext","__reactInternalMemoizedUnmaskedChildContext","__reactInternalMemoizedMaskedChildContext","getMaskedContext","contextTypes","hasContextChanged","childContextTypes","popContext","popTopLevelContextObject","pushTopLevelContextObject","didChange","processChildContext","parentContext","getChildContext","childContext","contextKey","pushContextProvider","memoizedMergedChildContext","__reactInternalMemoizedMergedChildContext","invalidateContextProvider","mergedContext","findCurrentUnmaskedContext","LegacyRoot","BlockingRoot","ConcurrentRoot","rendererID","injectedHook","hasLoggedError","isDevToolsPresent","__REACT_DEVTOOLS_GLOBAL_HOOK__","injectInternals","internals","hook","isDisabled","supportsFiber","inject","onScheduleRoot","root","children","onScheduleFiberRoot","__DEV__","onCommitRoot","priorityLevel","onCommitFiberRoot","didError","onCommitUnmount","onCommitFiberUnmount","Scheduler_now","Scheduler","__interactionsRef","ImmediatePriority","UserBlockingPriority","NormalPriority","LowPriority","IdlePriority","NoPriority","initialTimeMs","SyncLanePriority","SyncBatchedLanePriority","InputDiscreteHydrationLanePriority","InputDiscreteLanePriority","InputContinuousHydrationLanePriority","InputContinuousLanePriority","DefaultHydrationLanePriority","DefaultLanePriority","TransitionHydrationPriority","TransitionPriority","RetryLanePriority","SelectiveHydrationLanePriority","IdleHydrationLanePriority","IdleLanePriority","OffscreenLanePriority","NoLanePriority","TotalLanes","NoLanes","NoLane","SyncLane","SyncBatchedLane","InputDiscreteHydrationLane","InputDiscreteLanes","InputContinuousHydrationLane","InputContinuousLanes","DefaultHydrationLane","DefaultLanes","TransitionHydrationLane","TransitionLanes","RetryLanes","SomeRetryLane","SelectiveHydrationLane","NonIdleLanes","IdleHydrationLane","IdleLanes","OffscreenLane","NoTimestamp","currentUpdateLanePriority","getCurrentUpdateLanePriority","setCurrentUpdateLanePriority","newLanePriority","return_highestLanePriority","getHighestPriorityLanes","lanes","inputDiscreteLanes","inputContinuousLanes","defaultLanes","transitionLanes","retryLanes","idleLanes","schedulerPriorityToLanePriority","schedulerPriorityLevel","ImmediateSchedulerPriority","UserBlockingSchedulerPriority","NormalSchedulerPriority","LowSchedulerPriority","IdleSchedulerPriority","lanePriorityToSchedulerPriority","lanePriority","NoSchedulerPriority","getNextLanes","wipLanes","pendingLanes","nextLanes","nextLanePriority","expiredLanes","suspendedLanes","pingedLanes","nonIdlePendingLanes","nonIdleUnblockedLanes","nonIdlePingedLanes","unblockedLanes","getEqualOrHigherPriorityLanes","wipLanePriority","entangledLanes","entanglements","pickArbitraryLaneIndex","lane","getMostRecentEventTime","eventTimes","mostRecentEventTime","eventTime","computeExpirationTime","currentTime","priority","markStarvedLanesAsExpired","expirationTimes","expirationTime","getHighestPriorityPendingLanes","getLanesToRetrySynchronouslyOnError","everythingButOffscreen","returnNextLanesPriority","includesNonIdleWork","includesOnlyRetries","includesOnlyTransitions","findUpdateLane","pickArbitraryLane","findTransitionLane","findRetryLane","getHighestPriorityLane","getLowestPriorityLane","clz32","laneToIndex","includesSomeLane","isSubsetOfLanes","subset","mergeLanes","removeLanes","laneToLanes","higherPriorityLane","createLaneMap","initial","laneMap","i","markRootUpdated","updateLane","higherPriorityLanes","markRootSuspended","markRootPinged","markRootExpired","markDiscreteUpdatesExpired","hasDiscreteLanes","markRootMutableRead","mutableReadLanes","markRootFinished","remainingLanes","noLongerPendingLanes","markRootEntangled","getBumpedLaneForHydration","renderLanes","highestLanePriority","Math","clz32Fallback","LN2","Scheduler_runWithPriority","Scheduler_scheduleCallback","Scheduler_cancelCallback","Scheduler_shouldYield","Scheduler_requestPaint","Scheduler_getCurrentPriorityLevel","Scheduler_ImmediatePriority","Scheduler_UserBlockingPriority","Scheduler_NormalPriority","Scheduler_LowPriority","Scheduler_IdlePriority","fakeCallbackNode","shouldYield","requestPaint","syncQueue","immediateQueueCallbackNode","isFlushingSyncQueue","getCurrentPriorityLevel","reactPriorityToSchedulerPriority","reactPriorityLevel","runWithPriority","scheduleCallback","callback","options","scheduleSyncCallback","flushSyncCallbackQueueImpl","cancelCallback","callbackNode","flushSyncCallbackQueue","isSync","queue","slice","supportsUserTiming","performance","mark","formatLanes","laneOrLanes","toString","ReactVersion","markCommitStarted","markCommitStopped","wakeableIDs","wakeableID","getWakeableID","wakeable","markComponentSuspended","id","then","markLayoutEffectsStarted","markLayoutEffectsStopped","markPassiveEffectsStarted","markPassiveEffectsStopped","markRenderStarted","markRenderYielded","markRenderStopped","markRenderScheduled","markForceUpdateScheduled","markStateUpdateScheduled","NoMode","StrictMode","BlockingMode","ConcurrentMode","ProfileMode","DebugTracingMode","ReactCurrentBatchConfig","NoTransition","requestCurrentTransition","transition","is","y","objectIs","shallowEqual","objA","objB","keysA","keys","keysB","describeFiber","_debugOwner","_debugSource","getStackByFiberInDevAndProd","isRendering","getCurrentFiberOwnerNameInDevOrNull","getCurrentFiberStackInDev","resetCurrentFiber","getCurrentStack","setCurrentFiber","setIsRendering","rendering","getIsRendering","ReactStrictModeWarnings","recordUnsafeLifecycleWarnings","flushPendingUnsafeLifecycleWarnings","recordLegacyContextWarning","flushLegacyContextWarning","discardPendingWarnings","findStrictRoot","maybeStrictRoot","mode","setToSortedString","array","forEach","sort","join","pendingComponentWillMountWarnings","pendingUNSAFE_ComponentWillMountWarnings","pendingComponentWillReceivePropsWarnings","pendingUNSAFE_ComponentWillReceivePropsWarnings","pendingComponentWillUpdateWarnings","pendingUNSAFE_ComponentWillUpdateWarnings","didWarnAboutUnsafeLifecycles","Set","componentWillMount","__suppressDeprecationWarning","UNSAFE_componentWillMount","componentWillReceiveProps","UNSAFE_componentWillReceiveProps","componentWillUpdate","UNSAFE_componentWillUpdate","componentWillMountUniqueNames","add","UNSAFE_componentWillMountUniqueNames","componentWillReceivePropsUniqueNames","UNSAFE_componentWillReceivePropsUniqueNames","componentWillUpdateUniqueNames","UNSAFE_componentWillUpdateUniqueNames","size","sortedNames","pendingLegacyContextWarning","didWarnAboutLegacyContext","strictRoot","warningsForRoot","fiberArray","firstFiber","uniqueNames","setCurrentDebugFiberInDEV","resetCurrentDebugFiberInDEV","resolveDefaultProps","baseProps","defaultProps","propName","MAX_SIGNED_31_BIT_INT","valueCursor","rendererSigil","currentlyRenderingFiber","lastContextDependency","lastContextWithAllBitsObserved","isDisallowedContextReadInDEV","resetContextDependencies","enterDisallowedContextReadInDEV","exitDisallowedContextReadInDEV","pushProvider","providerFiber","nextValue","_currentValue","_currentRenderer","_currentValue2","_currentRenderer2","popProvider","currentValue","calculateChangedBits","newValue","oldValue","changedBits","_calculateChangedBits","scheduleWorkOnParentPath","childLanes","propagateContextChange","nextFiber","list","dependencies","dependency","firstContext","observedBits","update","createUpdate","ForceUpdate","enqueueUpdate","next","enableSuspenseServerRenderer","parentSuspense","prepareToReadContext","markWorkInProgressReceivedUpdate","readContext","resolvedObservedBits","contextItem","responders","UpdateState","ReplaceState","CaptureUpdate","hasForceUpdate","didWarnUpdateInsideUpdate","currentlyProcessingQueue","initializeUpdateQueue","baseState","memoizedState","firstBaseUpdate","lastBaseUpdate","shared","pending","effects","updateQueue","cloneUpdateQueue","currentQueue","clone","sharedQueue","enqueueCapturedUpdate","capturedUpdate","newFirst","newLast","getStateFromUpdate","prevState","nextProps","nextState","debugRenderPhaseSideEffectsForStrictMode","partialState","processUpdateQueue","pendingQueue","lastPendingUpdate","firstPendingUpdate","currentLastBaseUpdate","newState","newLanes","newBaseState","newFirstBaseUpdate","newLastBaseUpdate","updateEventTime","markSkippedUpdateLanes","callCallback","resetHasForceUpdateBeforeProcessing","checkHasForceUpdateAfterProcessing","commitUpdateQueue","finishedWork","finishedQueue","effect","fakeInternalInstance","isArray","Array","emptyRefsObject","refs","didWarnAboutStateAssignmentForComponent","didWarnAboutUninitializedState","didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate","didWarnAboutLegacyLifecyclesAndDerivedState","didWarnAboutUndefinedDerivedState","warnOnUndefinedDerivedState","warnOnInvalidCallback","didWarnAboutDirectlyAssigningPropsToState","didWarnAboutContextTypeAndContextTypes","didWarnAboutInvalidateContextType","didWarnOnInvalidCallback","callerName","applyDerivedStateFromProps","getDerivedStateFromProps","classComponentUpdater","enqueueSetState","inst","requestEventTime","requestUpdateLane","scheduleUpdateOnFiber","enqueueReplaceState","enqueueForceUpdate","checkShouldComponentUpdate","oldProps","newProps","oldState","nextContext","shouldComponentUpdate","shouldUpdate","isPureReactComponent","checkClassInstance","renderPresent","getInitialState","isReactClassApproved","state","getDefaultProps","propTypes","contextType","componentShouldUpdate","componentDidUnmount","componentDidReceiveProps","componentWillRecieveProps","UNSAFE_componentWillRecieveProps","hasMutatedProps","getSnapshotBeforeUpdate","componentDidUpdate","getDerivedStateFromError","adoptClassInstance","updater","setInstance","_reactInternalInstance","constructClassInstance","isLegacyContextConsumer","isValid","addendum","foundWillMountName","foundWillReceivePropsName","foundWillUpdateName","newApiName","callComponentWillMount","callComponentWillReceiveProps","mountClassInstance","componentDidMount","resumeMountClassInstance","memoizedProps","oldContext","nextLegacyUnmaskedContext","hasNewLifecycles","updateClassInstance","unresolvedOldProps","elementType","unresolvedNewProps","pendingProps","nextUnmaskedContext","didWarnAboutMaps","didWarnAboutGenerators","didWarnAboutStringRefs","ownerHasKeyUseWarning","ownerHasFunctionTypeWarning","warnForMissingKey","returnFiber","_store","validated","coerceRef","mixedRef","ref","_self","stringRef","_stringRef","throwOnInvalidObjectType","newChild","warnOnFunctionType","resolveLazyType","ChildReconciler","shouldTrackSideEffects","deleteChild","childToDelete","last","lastEffect","nextEffect","firstEffect","deleteRemainingChildren","currentFirstChild","mapRemainingChildren","existingChildren","existingChild","useFiber","createWorkInProgress","placeChild","newFiber","lastPlacedIndex","newIndex","oldIndex","placeSingleChild","updateTextNode","textContent","created","createFiberFromText","existing","updateElement","isCompatibleFamilyForHotReloading","enableBlocksAPI","createFiberFromElement","updatePortal","portal","containerInfo","implementation","createFiberFromPortal","updateFragment","fragment","createFiberFromFragment","createChild","updateSlot","oldFiber","updateFromMap","newIdx","matchedFiber","warnOnInvalidKey","knownKeys","reconcileChildrenArray","newChildren","resultingFirstChild","previousNewFiber","nextOldFiber","delete","reconcileChildrenIterator","newChildrenIterable","iteratorFn","toStringTag","entries","step","done","reconcileSingleTextNode","reconcileSingleElement","reconcileSinglePortal","reconcileChildFibers","isUnkeyedTopLevelFragment","isObject","_isMockFunction","mountChildFibers","cloneChildFibers","currentChild","resetChildFibers","resetWorkInProgress","NO_CONTEXT","contextFiberStackCursor","rootInstanceStackCursor","requiredContext","getRootHostContainer","rootInstance","pushHostContainer","nextRootInstance","nextRootContext","popHostContainer","getHostContext","pushHostContext","popHostContext","DefaultSuspenseContext","SubtreeSuspenseContextMask","InvisibleParentSuspenseContext","ForceSuspenseFallback","suspenseStackCursor","hasSuspenseContext","flag","setDefaultShallowSuspenseContext","setShallowSuspenseContext","shallowContext","addSubtreeSuspenseContext","subtreeContext","pushSuspenseContext","newContext","popSuspenseContext","shouldCaptureSuspense","hasInvisibleParent","dehydrated","fallback","unstable_avoidThisFallback","findFirstSuspended","row","revealOrder","didSuspend","HasEffect","Layout","hydrationParentFiber","nextHydratableInstance","isHydrating","warnIfHydrating","enterHydrationState","parentInstance","reenterHydrationStateFromDehydratedSuspenseInstance","suspenseInstance","popToNextHostParent","deleteHydratableInstance","createFiberFromHostInstanceForDeletion","insertNonHydratedInstance","parentContainer","text","parentType","parentProps","tryHydrate","nextInstance","textInstance","suspenseState","retryLane","dehydratedFragment","createFiberFromDehydratedFragment","tryToClaimNextHydratableInstance","firstAttemptedInstance","prepareToHydrateHostInstance","rootContainerInstance","hostContext","updatePayload","prepareToHydrateHostTextInstance","prepareToHydrateHostSuspenseInstance","skipPastDehydratedSuspenseInstance","popHydrationState","resetHydrationState","getIsHydrating","workInProgressSources","markSourceAsDirty","mutableSource","resetWorkInProgressVersions","_workInProgressVersionPrimary","_workInProgressVersionSecondary","getWorkInProgressVersion","setWorkInProgressVersion","version","warnAboutMultipleRenderersDEV","_currentPrimaryRenderer","_currentSecondaryRenderer","didWarnAboutMismatchedHooksForComponent","didWarnAboutUseOpaqueIdentifier","currentHook","workInProgressHook","didScheduleRenderPhaseUpdate","didScheduleRenderPhaseUpdateDuringThisPass","RE_RENDER_LIMIT","currentHookNameInDev","hookTypesDev","hookTypesUpdateIndexDev","ignorePreviousDependencies","mountHookTypesDev","hookName","updateHookTypesDev","warnOnHookMismatchInDev","checkDepsAreArrayDev","deps","currentHookName","table","secondColumnStart","oldHookName","newHookName","throwInvalidHookError","areHookInputsEqual","nextDeps","prevDeps","renderWithHooks","secondArg","nextRenderLanes","_debugHookTypes","HooksDispatcherOnUpdateInDEV","HooksDispatcherOnMountWithHookTypesInDEV","HooksDispatcherOnMountInDEV","numberOfReRenders","HooksDispatcherOnRerenderInDEV","ContextOnlyDispatcher","didRenderTooFewHooks","bailoutHooks","PassiveEffect","UpdateEffect","resetHooksAfterThrow","isUpdatingOpaqueValueInRenderPhase","mountWorkInProgressHook","baseQueue","updateWorkInProgressHook","nextCurrentHook","nextWorkInProgressHook","newHook","createFunctionComponentUpdateQueue","basicStateReducer","action","mountReducer","reducer","initialArg","initialState","dispatch","lastRenderedReducer","lastRenderedState","dispatchAction","updateReducer","baseFirst","pendingFirst","first","newBaseQueueFirst","newBaseQueueLast","eagerReducer","eagerState","rerenderReducer","lastRenderPhaseUpdate","firstRenderPhaseUpdate","readFromUnsubcribedMutableSource","getSnapshot","getVersion","_getVersion","isSafeToReadFromSource","currentRenderVersion","snapshot","useMutableSource","subscribe","getWorkInProgressRoot","dispatcher","useState","currentSnapshot","setSnapshot","stateHook","prevGetSnapshot","prevSource","prevSubscribe","useEffect","maybeNewVersion","maybeNewSnapshot","handleChange","latestGetSnapshot","latestSetSnapshot","unsubscribe","newQueue","mountMutableSource","updateMutableSource","mountState","updateState","rerenderState","pushEffect","create","destroy","componentUpdateQueue","mountRef","initialValue","seal","updateRef","mountEffectImpl","fiberFlags","hookFlags","HookHasEffect","updateEffectImpl","prevEffect","mountEffect","jest","warnIfNotCurrentlyActingEffectsInDEV","HookPassive","updateEffect","mountLayoutEffect","HookLayout","updateLayoutEffect","imperativeHandleEffect","refCallback","refObject","mountImperativeHandle","effectDeps","updateImperativeHandle","mountDebugValue","formatterFn","updateDebugValue","mountCallback","updateCallback","mountMemo","nextCreate","updateMemo","mountDeferredValue","prevValue","setValue","prevTransition","updateDeferredValue","rerenderDeferredValue","startTransition","setPending","mountTransition","isPending","start","updateTransition","startRef","rerenderTransition","getIsUpdatingOpaqueValueInRenderPhaseInDEV","warnOnOpaqueIdentifierAccessInDEV","mountOpaqueIdentifier","makeId","didUpgrade","readValue","setId","updateOpaqueIdentifier","rerenderOpaqueIdentifier","arguments","prevDispatcher","InvalidNestedHooksDispatcherOnUpdateInDEV","currentState","warnIfNotScopedWithMatchingAct","warnIfNotCurrentlyActingUpdatesInDev","useCallback","useContext","useImperativeHandle","useLayoutEffect","useMemo","useReducer","useRef","useDebugValue","useDeferredValue","useTransition","useOpaqueIdentifier","unstable_isNewReconciler","InvalidNestedHooksDispatcherOnMountInDEV","InvalidNestedHooksDispatcherOnRerenderInDEV","warnInvalidContextAccess","warnInvalidHookAccess","commitTime","profilerStartTime","getCommitTime","recordCommitTime","startProfilerTimer","actualStartTime","stopProfilerTimerIfRunning","stopProfilerTimerIfRunningAndRecordDelta","overrideBaseTime","elapsedTime","actualDuration","selfBaseDuration","transferActualDuration","didReceiveUpdate","didWarnAboutBadClass","didWarnAboutModulePatternComponent","didWarnAboutContextTypeOnFunctionComponent","didWarnAboutGetDerivedStateOnFunctionComponent","didWarnAboutFunctionRefs","didWarnAboutReassigningProps","didWarnAboutRevealOrder","didWarnAboutTailOptions","didWarnAboutDefaultPropsOnFunctionComponent","reconcileChildren","nextChildren","forceUnmountCurrentAndReconcile","updateForwardRef","innerPropTypes","bailoutOnAlreadyFinishedWork","updateMemoComponent","updateLanes","isSimpleFunctionComponent","compare","resolvedType","resolveFunctionForHotReloading","validateFunctionComponentInDev","updateSimpleMemoComponent","createFiberFromTypeAndProps","prevProps","outerMemoType","outerPropTypes","updateFunctionComponent","updateOffscreenComponent","baseLanes","pushRenderLanes","nextBaseLanes","prevBaseLanes","markSpawnedWork","subtreeRenderLanes","updateLegacyHiddenComponent","updateMode","updateProfiler","effectDuration","passiveEffectDuration","markRef","updateBlock","block","data","_data","updateClassComponent","hasContext","isLegacyContextProvider","pushLegacyContextProvider","nextUnitOfWork","finishClassComponent","didCaptureError","pushHostRootContext","pendingContext","updateHostRoot","prevChildren","hydrate","mutableSourceEagerHydrationData","updateHostComponent","isDirectTextChild","updateHostText","mountLazyComponent","_current","resolvedTag","resolveLazyComponentTag","resolvedProps","resolveClassForHotReloading","resolveForwardRefForHotReloading","hint","mountIncompleteClassComponent","mountIndeterminateComponent","ownerName","warningKey","_debugID","debugSource","fileName","lineNumber","SUSPENDED_MARKER","mountSuspenseOffscreenState","updateSuspenseOffscreenState","prevOffscreenState","shouldRemainOnFallback","suspenseContext","getRemainingWorkInPrimaryTree","updateSuspenseComponent","shouldSuspend","showFallback","mountDehydratedSuspenseComponent","nextPrimaryChildren","nextFallbackChildren","fallbackFragment","mountSuspenseFallbackChildren","primaryChildFragment","unstable_expectedLoadTime","mountSuspensePrimaryChildren","updateDehydratedSuspenseComponent","fallbackChildFragment","mountSuspenseFallbackAfterRetryWithoutHydrating","updateSuspenseFallbackChildren","updateSuspensePrimaryChildren","primaryChildren","primaryChildProps","createFiberFromOffscreen","fallbackChildren","progressedPrimaryFragment","treeBaseDuration","createWorkInProgressOffscreenFiber","offscreenProps","currentPrimaryChildFragment","currentFallbackChildFragment","progressedLastEffect","retrySuspenseComponentWithoutHydrating","getExecutionContext","RetryAfterError","NoContext","attemptHydrationAtLane","renderDidSuspendDelayIfPossible","retry","retryDehydratedSuspenseBoundary","Schedule_tracing_wrap","scheduleWorkOnFiber","propagateSuspenseContextChange","firstChild","findLastContentRow","lastContentRow","currentRow","validateRevealOrder","toLowerCase","validateTailOptions","tailMode","validateSuspenseListNestedChild","childSlot","isIterable","validateSuspenseListChildren","childrenIterator","initSuspenseListRenderState","isBackwards","tail","lastEffectBeforeRendering","renderState","renderingStartTime","updateSuspenseListComponent","shouldForceFallback","didSuspendBefore","nextRow","updatePortalComponent","hasWarnedAboutUsingNoValuePropOnContextProvider","updateContextProvider","providerType","providerPropTypes","hasLegacyContextChanged","hasWarnedAboutUsingContextAsConsumer","updateContextConsumer","Consumer","unstable_observedBits","remountFiber","oldWorkInProgress","newWorkInProgress","prevSibling","beginWork","_debugNeedsRemount","hasChildWork","primaryChildLanes","unresolvedProps","markUpdate","appendAllChildren","updateHostContainer","needsVisibilityToggle","isHidden","currentHostContext","oldText","newText","branches","newIsHidden","primaryChildParent","fallbackChildParent","appendAllChildrenToContainer","containerChildSet","portalOrRoot","childrenUnchanged","container","newChildSet","pendingChildren","currentInstance","recyclableInstance","newInstance","cutOffTailIfNeeded","hasRenderedATailFallback","tailNode","lastTailNode","completeWork","popLegacyContext","popTopLevelLegacyContextObject","resetMutableSourceWorkInProgressVersions","fiberRoot","wasHydrated","nextDidTimeout","prevDidTimeout","hasInvisibleChildContext","renderDidSuspend","didSuspendAlready","renderedTail","cannotBeSuspended","renderHasNotSuspendedYet","suspended","newThennables","getRenderTargetTime","previousSibling","popRenderLanes","prevIsHidden","nextIsHidden","unwindWork","unwindInterruptedWork","interruptedWork","createCapturedValue","showErrorDialog","boundary","errorInfo","logCapturedError","logError","componentStack","_suppressLogging","componentNameMessage","errorBoundaryMessage","errorBoundaryName","combinedMessage","e","setTimeout","createRootErrorUpdate","onUncaughtError","createClassErrorUpdate","componentDidCatch","markFailedErrorBoundaryForHotReloading","markLegacyErrorBoundaryAsFailed","attachPingListener","pingCache","threadIDs","ping","pingSuspendedRoot","throwException","sourceFiber","rootRenderLanes","currentSource","hasInvisibleParentBoundary","wakeables","currentSourceFiber","renderDidError","isAlreadyFailedLegacyErrorBoundary","invokeGuardedCallbackProd","func","d","f","funcArgs","onError","invokeGuardedCallbackImpl","window","dispatchEvent","document","createEvent","fakeNode","createElement","invokeGuardedCallbackDev","evt","didCall","windowEvent","event","windowEventDescriptor","getOwnPropertyDescriptor","restoreAfterDispatch","removeEventListener","evtType","didSetError","isCrossOriginError","handleWindowError","colno","lineno","defaultPrevented","inner","addEventListener","initEvent","hasError","caughtError","reporter","invokeGuardedCallback","hasCaughtError","clearCaughtError","didWarnAboutUndefinedSnapshotBeforeUpdate","PossiblyWeakSet","WeakSet","callComponentWillUnmountWithTimer","componentWillUnmount","safelyCallComponentWillUnmount","unmountError","captureCommitPhaseError","safelyDetachRef","refError","safelyCallDestroy","commitBeforeMutationLifeCycles","didWarnSet","__reactInternalSnapshotBeforeUpdate","commitHookEffectListUnmount","commitHookEffectListMount","schedulePassiveEffects","NoHookEffect","enqueuePendingPassiveHookEffectUnmount","enqueuePendingPassiveHookEffectMount","commitLifeCycles","finishedRoot","committedLanes","onCommit","onRender","memoizedInteractions","commitSuspenseHydrationCallbacks","hideOrUnhideAllChildren","commitAttachRef","instanceToUse","commitDetachRef","currentRef","commitUnmount","renderPriorityLevel","unmountHostComponents","emptyPortalContainer","commitNestedUnmounts","detachFiberMutation","emptyChildSet","commitContainer","getHostParentFiber","isHostParent","getHostSibling","siblings","commitPlacement","isContainer","parentStateNode","before","insertOrAppendPlacementNodeIntoContainer","insertOrAppendPlacementNode","isHost","currentParentIsValid","currentParentIsContainer","findParent","commitDeletion","commitWork","commitSuspenseComponent","attachSuspenseRetryListeners","markCommitTimeOfFallback","retryCache","resolveRetryWakeable","__reactDoNotTraceInteractions","isSuspenseBoundaryBeingHidden","commitResetTextContent","COMPONENT_TYPE","HAS_PSEUDO_CLASS_TYPE","ROLE_TYPE","TEST_NAME_TYPE","TEXT_TYPE","createComponentSelector","createHasPsuedoClassSelector","selectors","createRoleSelector","role","createTextSelector","createTestNameSelector","findFiberRootForHostRoot","hostRoot","maybeFiber","matchSelector","selector","hasMatchingPaths","indexOf","dataTestID","selectorToString","findPaths","matchingFibers","selectorIndex","findAllNodes","instanceRoots","from","getFindAllNodesFailureDescription","maxSelectorIndex","matchedNames","unmatchedNames","findBoundingRects","boundingRects","targetRect","targetLeft","targetRight","width","targetTop","targetBottom","height","j","otherRect","otherLeft","otherRight","otherTop","otherBottom","splice","focusWithin","commitHooks","commitHook","observeVisibleRects","disconnect","observe","unobserve","nextInstanceRoots","target","didWarnAboutMessageChannel","enqueueTaskImpl","enqueueTask","task","requireString","random","nodeRequire","module","setImmediate","_err","MessageChannel","channel","port1","onmessage","port2","postMessage","ceil","IsSomeRendererActing","BatchedContext","EventContext","DiscreteEventContext","LegacyUnbatchedContext","RenderContext","CommitContext","RootIncomplete","RootFatalErrored","RootErrored","RootSuspended","RootSuspendedWithDelay","RootCompleted","executionContext","workInProgressRoot","workInProgressRootRenderLanes","subtreeRenderLanesCursor","workInProgressRootExitStatus","workInProgressRootFatalError","workInProgressRootIncludedLanes","workInProgressRootSkippedLanes","workInProgressRootUpdatedLanes","workInProgressRootPingedLanes","mostRecentlyUpdatedRoot","globalMostRecentFallbackTime","FALLBACK_THROTTLE_MS","workInProgressRootRenderTargetTime","Infinity","RENDER_TIMEOUT_MS","resetRenderTimer","hasUncaughtError","firstUncaughtError","legacyErrorBoundariesThatAlreadyFailed","rootDoesHavePassiveEffects","rootWithPendingPassiveEffects","pendingPassiveEffectsRenderPriority","pendingPassiveEffectsLanes","pendingPassiveHookEffectsMount","pendingPassiveHookEffectsUnmount","rootsWithPendingDiscreteUpdates","NESTED_UPDATE_LIMIT","nestedUpdateCount","rootWithNestedUpdates","NESTED_PASSIVE_UPDATE_LIMIT","nestedPassiveUpdateCount","spawnedWorkDuringRender","currentEventTime","currentEventWipLanes","currentEventPendingLanes","isFlushingPassiveEffects","focusedInstanceHandle","shouldFireAfterActiveInstanceBlur","isTransition","schedulerPriority","schedulerLanePriority","requestRetryLane","checkForNestedUpdates","warnAboutRenderPhaseUpdatesInDEV","markUpdateLaneFromFiberToRoot","warnAboutUpdateOnUnmountedFiberInDEV","schedulePendingInteractions","performSyncWorkOnRoot","ensureRootIsScheduled","warnAboutUpdateOnNotYetMountedFiberInDEV","existingCallbackNode","newCallbackPriority","callbackPriority","existingCallbackPriority","newCallbackNode","performConcurrentWorkOnRoot","originalCallbackNode","didFlushPassiveEffects","flushPassiveEffects","exitStatus","renderRootConcurrent","prepareFreshStack","renderRootSync","fatalError","finishedLanes","finishConcurrentRender","commitRoot","shouldForceFlushFallbacksInDEV","msUntilTimeout","timeoutHandle","eventTimeMs","timeElapsedMs","jnd","markRootSuspended_dontCallThisOneDirectly","flushRoot","flushDiscreteUpdates","flushPendingDiscreteUpdates","deferredUpdates","roots","batchedUpdates","prevExecutionContext","batchedEventUpdates","discreteUpdates","unbatchedUpdates","flushSync","flushControlled","pushToStack","popFromStack","handleError","thrownValue","erroredWork","completeUnitOfWork","yetAnotherThrownValue","pushDispatcher","popDispatcher","pushInteractions","prevInteractions","popInteractions","startWorkOnPendingInteractions","workLoopSync","performUnitOfWork","workLoopConcurrent","unitOfWork","completedWork","resetChildLanes","siblingFiber","newChildLanes","shouldBubbleActualDurations","isTimedOutSuspense","commitRootImpl","flushRenderPhaseStrictModeWarningsInDEV","commitBeforeMutationEffects","commitMutationEffects","commitLayoutEffects","rootDidHavePassiveEffects","nextNextEffect","detachFiberAfterEffects","scheduleInteractions","finishPendingInteractions","onCommitRootDevTools","onCommitRootTestSelector","commitBeforeMutationEffectOnFiber","primaryFlags","commitLayoutEffectOnFiber","flushPassiveEffectsImpl","invokePassiveEffectCreate","unmountEffects","mountEffects","prepareToThrowUncaughtError","captureCommitPhaseErrorOnRoot","rootFiber","errorToIgnore","retryTimedOutBoundary","boundaryFiber","timeElapsed","didWarnStateUpdateForNotYetMountedComponent","previousFiber","ReactCurrentFiberCurrent","didWarnStateUpdateForUnmountedComponent","dummyFiber","originalWorkInProgressCopy","assignFiberPropertiesInDEV","originalBeginWork","originalError","replayError","didWarnAboutUpdateInRender","didWarnAboutUpdateInRenderForAnotherComponent","ReactCurrentDebugFiberIsRenderingInDEV","renderingComponentName","dedupeKey","setStateComponentName","IsThisRendererActing","warnIfNotCurrentlyActingUpdatesInDEV","didWarnAboutUnmockedScheduler","warnIfUnmockedScheduler","computeThreadID","interactionThreadID","interactions","pendingInteractionMap","pendingInteractions","interaction","__count","subscriber","__subscriberRef","threadID","onWorkScheduled","scheduledInteractions","scheduledLane","onWorkStarted","remainingLanesAfterCommit","onWorkStopped","onInteractionScheduledWorkCompleted","actingUpdatesScopeDepth","flushMockScheduler","isSchedulerMocked","flushActWork","isFlushingAct","didFlushWork","flushWorkAndMicroTasks","onDone","act","previousActingUpdatesScopeDepth","previousIsSomeRendererActing","previousIsThisRendererActing","isInsideThisAct","result","called","Promise","resolve","reject","resolveFamily","failedBoundaries","setRefreshHandler","handler","family","currentRender","syntheticType","prevType","nextType","needsCompareFamilies","$$typeofNextType","prevFamily","scheduleRefresh","staleFamilies","updatedFamilies","scheduleFibersWithFamiliesRecursively","scheduleRoot","updateContainer","candidateType","needsRender","needsRemount","findHostInstancesForRefresh","families","hostInstances","types","findHostInstancesForMatchingFibersRecursively","didMatch","findHostInstancesForFiberShallowly","foundHostInstances","findChildHostInstancesForFiberShallowly","hasBadMapPolyfill","nonExtensibleObject","preventExtensions","debugCounter","FiberNode","Number","NaN","createFiber","currentDependencies","createHostRootFiber","fiberTag","getTag","createFiberFromProfiler","createFiberFromSuspense","createFiberFromSuspenseList","createFiberFromLegacyHidden","elements","content","dehydratedNode","FiberRootNode","unstable_getThreadID","_debugRootType","createFiberRoot","hydrationCallbacks","uninitializedFiber","registerMutableSourceForHydration","createPortal","didWarnAboutNestedUpdates","didWarnAboutFindNodeInStrictMode","getContextForSubtree","parentComponent","findHostInstance","hostFiber","findHostInstanceWithWarning","methodName","createContainer","ReactCurrentFiberIsRendering","getPublicRootInstance","containerFiber","attemptSynchronousHydration","markRetryLaneIfNotHydrated","markRetryLaneImpl","attemptUserBlockingHydration","attemptContinuousHydration","attemptHydrationAtCurrentPriority","previousPriority","findHostInstanceWithNoPortals","shouldSuspendImpl","overrideHookState","overrideHookStateDeletePath","overrideHookStateRenamePath","overrideProps","overridePropsDeletePath","overridePropsRenamePath","scheduleUpdate","setSuspenseHandler","copyWithDeleteImpl","obj","path","updated","copyWithDelete","copyWithRenameImpl","oldPath","newPath","oldKey","newKey","copyWithRename","copyWithSetImpl","copyWithSet","findHook","newShouldSuspendImpl","findHostInstanceByFiber","emptyFindFiberByHostInstance","getCurrentFiberForDevTools","injectIntoDevTools","devToolsConfig","findFiberByHostInstance","bundleType","rendererPackageName","rendererConfig","currentDispatcherRef","getCurrentFiber"],"mappings":";;;;;;;AAWA,IAAMA,oBAAoB,GACxBC,wDADF;;ACDA;AACA;AACA;AACA;;AAEA,AAAO,SAASC,IAAT,CAAcC,MAAd,EAA+B;AACpC,EAAa;AAAA,sCADiBC,IACjB;AADiBA,MAAAA,IACjB;AAAA;;AACXC,IAAAA,YAAY,CAAC,MAAD,EAASF,MAAT,EAAiBC,IAAjB,CAAZ;AACD;AACF;AAED,AAAO,SAASE,KAAT,CAAeH,MAAf,EAAgC;AACrC,EAAa;AAAA,uCADkBC,IAClB;AADkBA,MAAAA,IAClB;AAAA;;AACXC,IAAAA,YAAY,CAAC,OAAD,EAAUF,MAAV,EAAkBC,IAAlB,CAAZ;AACD;AACF;;AAED,SAASC,YAAT,CAAsBE,KAAtB,EAA6BJ,MAA7B,EAAqCC,IAArC,EAA2C;AACzC;AACA;AACA,EAAa;AACX,QAAMI,sBAAsB,GAAGR,oBAAoB,CAACQ,sBAApD;AACA,QAAMC,KAAK,GAAGD,sBAAsB,CAACE,gBAAvB,EAAd;;AACA,QAAID,KAAK,KAAK,EAAd,EAAkB;AAChBN,MAAAA,MAAM,IAAI,IAAV;AACAC,MAAAA,IAAI,GAAGA,IAAI,CAACO,MAAL,CAAY,CAACF,KAAD,CAAZ,CAAP;AACD;;AAED,QAAMG,cAAc,GAAGR,IAAI,CAACS,GAAL,CAAS,UAAAC,IAAI;AAAA,aAAI,KAAKA,IAAT;AAAA,KAAb,CAAvB,CARW;;AAUXF,IAAAA,cAAc,CAACG,OAAf,CAAuB,cAAcZ,MAArC,EAVW;AAYX;AACA;;AACAa,IAAAA,QAAQ,CAACC,SAAT,CAAmBC,KAAnB,CAAyBC,IAAzB,CAA8BC,OAAO,CAACb,KAAD,CAArC,EAA8Ca,OAA9C,EAAuDR,cAAvD;AACD;AACF;;ACVM,IAAMS,iBAAiB,GAAG,CAA1B;AACP,AAAO,IAAMC,cAAc,GAAG,CAAvB;AACP,AAAO,IAAMC,sBAAsB,GAAG,CAA/B;;AACP,AAAO,IAAMC,QAAQ,GAAG,CAAjB;;AACP,AAAO,IAAMC,UAAU,GAAG,CAAnB;;AACP,AAAO,IAAMC,aAAa,GAAG,CAAtB;AACP,AAAO,IAAMC,QAAQ,GAAG,CAAjB;AACP,AAAO,IAAMC,QAAQ,GAAG,CAAjB;AACP,AAAO,IAAMC,IAAI,GAAG,CAAb;AACP,AAAO,IAAMC,eAAe,GAAG,CAAxB;AACP,AAAO,IAAMC,eAAe,GAAG,EAAxB;AACP,AAAO,IAAMC,UAAU,GAAG,EAAnB;AACP,AAAO,IAAMC,QAAQ,GAAG,EAAjB;AACP,AAAO,IAAMC,iBAAiB,GAAG,EAA1B;AACP,AAAO,IAAMC,aAAa,GAAG,EAAtB;AACP,AAAO,IAAMC,mBAAmB,GAAG,EAA5B;AACP,AAAO,IAAMC,aAAa,GAAG,EAAtB;AACP,AAAO,IAAMC,wBAAwB,GAAG,EAAjC;AACP,AAAO,IAAMC,kBAAkB,GAAG,EAA3B;AACP,AAAO,IAAMC,qBAAqB,GAAG,EAA9B;AACP,AAAO,IAAMC,oBAAoB,GAAG,EAA7B;AACP,AAAO,IAAMC,cAAc,GAAG,EAAvB;AACP,AAAO,IAAMC,KAAK,GAAG,EAAd;AACP,AAAO,IAAMC,kBAAkB,GAAG,EAA3B;AACP,AAAO,IAAMC,qBAAqB,GAAG,EAA9B;;ACrDP;;;;;;;;;AAmBO,SAASC,GAAT,CAAaC,GAAb,EAAkB;AACvB,SAAOA,GAAG,CAACC,eAAX;AACD;AAED,AAIO,SAASC,GAAT,CAAaF,GAAb,EAAkBG,KAAlB,EAAyB;AAC9BH,EAAAA,GAAG,CAACC,eAAJ,GAAsBE,KAAtB;AACD;;AC3BD;AACA;AACA;AAEA;AACA;AACA,AAAO,IAAIC,kBAAkB,GAAG,MAAzB;AACP,AAAO,IAAIC,iBAAiB,GAAG,MAAxB;AACP,AAAO,IAAIC,mBAAmB,GAAG,MAA1B;AACP,AAAO,IAAIC,sBAAsB,GAAG,MAA7B;AACP,AAAO,IAAIC,mBAAmB,GAAG,MAA1B;AACP,AAAO,IAAIC,mBAAmB,GAAG,MAA1B;AACP,AAAO,IAAIC,kBAAkB,GAAG,MAAzB;AACP,AAAO,IAAIC,sBAAsB,GAAG,MAA7B;AACP,AAAO,IAAIC,mBAAmB,GAAG,MAA1B;AACP,AAAO,IAAIC,wBAAwB,GAAG,MAA/B;AACP,AAAO,IAAIC,eAAe,GAAG,MAAtB;AACP,AAAO,IAAIC,eAAe,GAAG,MAAtB;AACP,AAAO,IAAIC,gBAAgB,GAAG,MAAvB;AACP,AAAO,IAAIC,uBAAuB,GAAG,MAA9B;AACP,AAAO,IAAIC,sBAAsB,GAAG,MAA7B;AACP,AAAO,IAAIC,gBAAgB,GAAG,MAAvB;AACP,AAAO,IAAIC,oBAAoB,GAAG,MAA3B;AACP,AAAO,IAAIC,6BAA6B,GAAG,MAApC;AACP,AAAO,IAAIC,oBAAoB,GAAG,MAA3B;AACP,AAAO,IAAIC,wBAAwB,GAAG,MAA/B;;AAEP,IAAI,OAAOC,MAAP,KAAkB,UAAlB,IAAgCA,MAAM,CAACC,GAA3C,EAAgD;AAC9C,MAAMC,SAAS,GAAGF,MAAM,CAACC,GAAzB;AACArB,EAAAA,kBAAkB,GAAGsB,SAAS,CAAC,eAAD,CAA9B;AACArB,EAAAA,iBAAiB,GAAGqB,SAAS,CAAC,cAAD,CAA7B;AACApB,EAAAA,mBAAmB,GAAGoB,SAAS,CAAC,gBAAD,CAA/B;AACAnB,EAAAA,sBAAsB,GAAGmB,SAAS,CAAC,mBAAD,CAAlC;AACAlB,EAAAA,mBAAmB,GAAGkB,SAAS,CAAC,gBAAD,CAA/B;AACAjB,EAAAA,mBAAmB,GAAGiB,SAAS,CAAC,gBAAD,CAA/B;AACAhB,EAAAA,kBAAkB,GAAGgB,SAAS,CAAC,eAAD,CAA9B;AACAf,EAAAA,sBAAsB,GAAGe,SAAS,CAAC,mBAAD,CAAlC;AACAd,EAAAA,mBAAmB,GAAGc,SAAS,CAAC,gBAAD,CAA/B;AACAb,EAAAA,wBAAwB,GAAGa,SAAS,CAAC,qBAAD,CAApC;AACAZ,EAAAA,eAAe,GAAGY,SAAS,CAAC,YAAD,CAA3B;AACAX,EAAAA,eAAe,GAAGW,SAAS,CAAC,YAAD,CAA3B;AACAV,EAAAA,gBAAgB,GAAGU,SAAS,CAAC,aAAD,CAA5B;AACAT,EAAAA,uBAAuB,GAAGS,SAAS,CAAC,oBAAD,CAAnC;AACAR,EAAAA,sBAAsB,GAAGQ,SAAS,CAAC,mBAAD,CAAlC;AACAP,EAAAA,gBAAgB,GAAGO,SAAS,CAAC,aAAD,CAA5B;AACAN,EAAAA,oBAAoB,GAAGM,SAAS,CAAC,iBAAD,CAAhC;AACAL,EAAAA,6BAA6B,GAAGK,SAAS,CAAC,wBAAD,CAAzC;AACAJ,EAAAA,oBAAoB,GAAGI,SAAS,CAAC,iBAAD,CAAhC;AACAH,EAAAA,wBAAwB,GAAGG,SAAS,CAAC,qBAAD,CAApC;AACD;;AAED,IAAMC,qBAAqB,GAAG,OAAOH,MAAP,KAAkB,UAAlB,IAAgCA,MAAM,CAACI,QAArE;AACA,IAAMC,oBAAoB,GAAG,YAA7B;AAEA,AAAO,SAASC,aAAT,CAAuBC,aAAvB,EAAiE;AACtE,MAAIA,aAAa,KAAK,IAAlB,IAA0B,OAAOA,aAAP,KAAyB,QAAvD,EAAiE;AAC/D,WAAO,IAAP;AACD;;AACD,MAAMC,aAAa,GAChBL,qBAAqB,IAAII,aAAa,CAACJ,qBAAD,CAAvC,IACAI,aAAa,CAACF,oBAAD,CAFf;;AAGA,MAAI,OAAOG,aAAP,KAAyB,UAA7B,EAAyC;AACvC,WAAOA,aAAP;AACD;;AACD,SAAO,IAAP;AACD;;AC/CD,SAASC,cAAT,CACEC,SADF,EAEEC,SAFF,EAGEC,WAHF,EAIU;AACR,MAAMC,YAAY,GAAGF,SAAS,CAACG,WAAV,IAAyBH,SAAS,CAACI,IAAnC,IAA2C,EAAhE;AACA,SACGL,SAAD,CAAiBI,WAAjB,KACCD,YAAY,KAAK,EAAjB,GAAyBD,WAAzB,SAAwCC,YAAxC,SAA0DD,WAD3D,CADF;AAID;;AAED,SAASI,cAAT,CAAwBC,IAAxB,EAAiD;AAC/C,SAAOA,IAAI,CAACH,WAAL,IAAoB,SAA3B;AACD;;AAED,SAASI,gBAAT,CAA0BD,IAA1B,EAAsD;AACpD,MAAIA,IAAI,IAAI,IAAZ,EAAkB;AAChB;AACA,WAAO,IAAP;AACD;;AACD,EAAa;AACX,QAAI,OAAQA,IAAD,CAAYE,GAAnB,KAA2B,QAA/B,EAAyC;AACvC,YACE,0DACE,sDAFJ;AAID;AACF;;AACD,MAAI,OAAOF,IAAP,KAAgB,UAApB,EAAgC;AAC9B,WAAQA,IAAD,CAAYH,WAAZ,IAA2BG,IAAI,CAACF,IAAhC,IAAwC,IAA/C;AACD;;AACD,MAAI,OAAOE,IAAP,KAAgB,QAApB,EAA8B;AAC5B,WAAOA,IAAP;AACD;;AACD,UAAQA,IAAR;AACE,SAAKnC,mBAAL;AACE,aAAO,UAAP;;AACF,SAAKD,iBAAL;AACE,aAAO,QAAP;;AACF,SAAKG,mBAAL;AACE,aAAO,UAAP;;AACF,SAAKD,sBAAL;AACE,aAAO,YAAP;;AACF,SAAKK,mBAAL;AACE,aAAO,UAAP;;AACF,SAAKC,wBAAL;AACE,aAAO,cAAP;AAZJ;;AAcA,MAAI,OAAO4B,IAAP,KAAgB,QAApB,EAA8B;AAC5B,YAAQA,IAAI,CAACG,QAAb;AACE,WAAKlC,kBAAL;AACE,YAAMmC,OAA0B,GAAIJ,IAApC;AACA,eAAOD,cAAc,CAACK,OAAD,CAAd,GAA0B,WAAjC;;AACF,WAAKpC,mBAAL;AACE,YAAMqC,QAAgC,GAAIL,IAA1C;AACA,eAAOD,cAAc,CAACM,QAAQ,CAACC,QAAV,CAAd,GAAoC,WAA3C;;AACF,WAAKpC,sBAAL;AACE,eAAOsB,cAAc,CAACQ,IAAD,EAAOA,IAAI,CAACO,MAAZ,EAAoB,YAApB,CAArB;;AACF,WAAKlC,eAAL;AACE,eAAO4B,gBAAgB,CAACD,IAAI,CAACA,IAAN,CAAvB;;AACF,WAAKzB,gBAAL;AACE,eAAO0B,gBAAgB,CAACD,IAAI,CAACQ,OAAN,CAAvB;;AACF,WAAKlC,eAAL;AAAsB;AACpB,cAAMmC,aAAsC,GAAIT,IAAhD;AACA,cAAMU,OAAO,GAAGD,aAAa,CAACE,QAA9B;AACA,cAAMC,IAAI,GAAGH,aAAa,CAACI,KAA3B;;AACA,cAAI;AACF,mBAAOZ,gBAAgB,CAACW,IAAI,CAACF,OAAD,CAAL,CAAvB;AACD,WAFD,CAEE,OAAOI,CAAP,EAAU;AACV,mBAAO,IAAP;AACD;AACF;AAtBH;AAwBD;;AACD,SAAO,IAAP;AACD;;AC5FD;AACA,AAAO,IAAMC,OAAO;AAAG;AAA2B,CAA3C;AACP,AAAO,IAAMC,aAAa;AAAG;AAAqB,CAA3C;;AAGP,AAAO,IAAMC,SAAS;AAAG;AAAyB,CAA3C;AACP,AAAO,IAAMC,MAAM;AAAG;AAA4B,CAA3C;AACP,AAAO,IAAMC,kBAAkB;AAAG;AAAgB,CAA3C;AACP,AAAO,IAAMC,QAAQ;AAAG;AAA0B,CAA3C;AACP,AAAO,IAAMC,YAAY;AAAG;AAAsB,EAA3C;AACP,AAAO,IAAMC,QAAQ;AAAG;AAA0B,EAA3C;AACP,AAAO,IAAMC,UAAU;AAAG;AAAwB,EAA3C;AACP,AAAO,IAAMC,GAAG;AAAG;AAA+B,GAA3C;AACP,AAAO,IAAMC,QAAQ;AAAG;AAA0B,GAA3C;AACP,AAAO,IAAMC,OAAO;AAAG;AAA2B,GAA3C;;AAEP,AAAO,IAAMC,wBAAwB;AAAG;AAAU,IAA3C;AACP,AAAO,IAAMC,SAAS;AAAG;AAAyB,IAA3C;AACP,AAAO,IAAMC,kBAAkB;AAAG;AAAgB,IAA3C;;AAGP,AAAO,IAAMC,mBAAmB;AAAG;AAAe,GAA3C;;AAGP,AAAO,IAAMC,cAAc;AAAG;AAAoB,IAA3C;;AAGP,AAAO,IAAMC,UAAU;AAAG;AAAwB,IAA3C;AACP,AAAO,IAAMC,aAAa;AAAG;AAAqB,IAA3C;AACP,AAAO,IAAMC,4BAA4B;AAAG;AAAM,KAA3C;;AC/BP;AACA;AAuBA,AAAO,IAAMC,mBAAmB,GAAGC,IAA5B;;AAuBP,AAAO,IAAMC,oBAAoB,GAAG,KAA7B;AAoCA,IAAMC,mBAAmB,GAAG,KAA5B;AAGP,AAaO,IAAMC,mBAAmB,GAAG,KAA5B;;AC9EP,IAAMC,iBAAiB,GAAGhI,oBAAoB,CAACgI,iBAA/C;AAEA,AAAO,SAASC,sBAAT,CAAgCC,KAAhC,EAA4D;AACjE,MAAIC,IAAI,GAAGD,KAAX;AACA,MAAIE,cAAc,GAAGF,KAArB;;AACA,MAAI,CAACA,KAAK,CAACG,SAAX,EAAsB;AACpB;AACA;AACA,QAAIC,QAAQ,GAAGH,IAAf;;AACA,OAAG;AACDA,MAAAA,IAAI,GAAGG,QAAP;;AACA,UAAI,CAACH,IAAI,CAACI,KAAL,IAAc9B,SAAS,GAAGW,SAA1B,CAAD,MAA2Cb,OAA/C,EAAwD;AACtD;AACA;AACA;AACA6B,QAAAA,cAAc,GAAGD,IAAI,CAACK,MAAtB;AACD;;AACDF,MAAAA,QAAQ,GAAGH,IAAI,CAACK,MAAhB;AACD,KATD,QASSF,QATT;AAUD,GAdD,MAcO;AACL,WAAOH,IAAI,CAACK,MAAZ,EAAoB;AAClBL,MAAAA,IAAI,GAAGA,IAAI,CAACK,MAAZ;AACD;AACF;;AACD,MAAIL,IAAI,CAACzC,GAAL,KAAalE,QAAjB,EAA2B;AACzB;AACA;AACA,WAAO4G,cAAP;AACD,GA1BgE;AA4BjE;;;AACA,SAAO,IAAP;AACD;AAED,AAwBO,SAASK,cAAT,CAAwBP,KAAxB,EAA+C;AACpD,SAAOD,sBAAsB,CAACC,KAAD,CAAtB,KAAkCA,KAAzC;AACD;AAED,AAAO,SAASQ,SAAT,CAAmBC,SAAnB,EAAkE;AACvE,EAAa;AACX,QAAMC,KAAK,GAAIZ,iBAAiB,CAACa,OAAjC;;AACA,QAAID,KAAK,KAAK,IAAV,IAAkBA,KAAK,CAAClD,GAAN,KAAcpE,cAApC,EAAoD;AAClD,UAAMwH,UAAiB,GAAGF,KAA1B;AACA,UAAMG,QAAQ,GAAGD,UAAU,CAACE,SAA5B;;AACA,UAAI,CAACD,QAAQ,CAACE,wBAAd,EAAwC;AACtC,cACE,6DACE,mEADF,GAEE,oEAFF,GAGE,iEAHF,GAIE,6BALJ,EAMExD,gBAAgB,CAACqD,UAAU,CAACtD,IAAZ,CAAhB,IAAqC,aANvC;AAQD;;AACDuD,MAAAA,QAAQ,CAACE,wBAAT,GAAoC,IAApC;AACD;AACF;;AAED,MAAMf,KAAa,GAAGgB,GAAW,CAACP,SAAD,CAAjC;;AACA,MAAI,CAACT,KAAL,EAAY;AACV,WAAO,KAAP;AACD;;AACD,SAAOD,sBAAsB,CAACC,KAAD,CAAtB,KAAkCA,KAAzC;AACD;;AAED,SAASiB,eAAT,CAAyBjB,KAAzB,EAAgC;AAAA,QAE5BD,sBAAsB,CAACC,KAAD,CAAtB,KAAkCA,KAFN;AAAA;AAAA;AAAA;AAAA;AAK/B;;AAED,AAAO,SAASkB,6BAAT,CAAuClB,KAAvC,EAAmE;AACxE,MAAMG,SAAS,GAAGH,KAAK,CAACG,SAAxB;;AACA,MAAI,CAACA,SAAL,EAAgB;AACd;AACA,QAAMD,cAAc,GAAGH,sBAAsB,CAACC,KAAD,CAA7C;;AAFc,UAIZE,cAAc,KAAK,IAJP;AAAA;AAAA;AAAA;AAAA;;AAOd,QAAIA,cAAc,KAAKF,KAAvB,EAA8B;AAC5B,aAAO,IAAP;AACD;;AACD,WAAOA,KAAP;AACD,GAbuE;AAexE;AACA;;;AACA,MAAImB,CAAQ,GAAGnB,KAAf;AACA,MAAIoB,CAAQ,GAAGjB,SAAf;;AACA,SAAO,IAAP,EAAa;AACX,QAAMkB,OAAO,GAAGF,CAAC,CAACb,MAAlB;;AACA,QAAIe,OAAO,KAAK,IAAhB,EAAsB;AACpB;AACA;AACD;;AACD,QAAMC,OAAO,GAAGD,OAAO,CAAClB,SAAxB;;AACA,QAAImB,OAAO,KAAK,IAAhB,EAAsB;AACpB;AACA;AACA;AACA;AACA,UAAMC,UAAU,GAAGF,OAAO,CAACf,MAA3B;;AACA,UAAIiB,UAAU,KAAK,IAAnB,EAAyB;AACvBJ,QAAAA,CAAC,GAAGC,CAAC,GAAGG,UAAR;AACA;AACD,OATmB;;;AAWpB;AACD,KAnBU;AAsBX;AACA;;;AACA,QAAIF,OAAO,CAACG,KAAR,KAAkBF,OAAO,CAACE,KAA9B,EAAqC;AACnC,UAAIA,KAAK,GAAGH,OAAO,CAACG,KAApB;;AACA,aAAOA,KAAP,EAAc;AACZ,YAAIA,KAAK,KAAKL,CAAd,EAAiB;AACf;AACAF,UAAAA,eAAe,CAACI,OAAD,CAAf;AACA,iBAAOrB,KAAP;AACD;;AACD,YAAIwB,KAAK,KAAKJ,CAAd,EAAiB;AACf;AACAH,UAAAA,eAAe,CAACI,OAAD,CAAf;AACA,iBAAOlB,SAAP;AACD;;AACDqB,QAAAA,KAAK,GAAGA,KAAK,CAACC,OAAd;AACD,OAdkC;AAgBnC;;;AAhBmC;AAAA;AAAA;AAAA;AAAA;AAkBpC;;AAED,QAAIN,CAAC,CAACb,MAAF,KAAac,CAAC,CAACd,MAAnB,EAA2B;AACzB;AACA;AACA;AACA;AACAa,MAAAA,CAAC,GAAGE,OAAJ;AACAD,MAAAA,CAAC,GAAGE,OAAJ;AACD,KAPD,MAOO;AACL;AACA;AACA;AACA;AACA;AACA,UAAII,YAAY,GAAG,KAAnB;AACA,UAAIF,MAAK,GAAGH,OAAO,CAACG,KAApB;;AACA,aAAOA,MAAP,EAAc;AACZ,YAAIA,MAAK,KAAKL,CAAd,EAAiB;AACfO,UAAAA,YAAY,GAAG,IAAf;AACAP,UAAAA,CAAC,GAAGE,OAAJ;AACAD,UAAAA,CAAC,GAAGE,OAAJ;AACA;AACD;;AACD,YAAIE,MAAK,KAAKJ,CAAd,EAAiB;AACfM,UAAAA,YAAY,GAAG,IAAf;AACAN,UAAAA,CAAC,GAAGC,OAAJ;AACAF,UAAAA,CAAC,GAAGG,OAAJ;AACA;AACD;;AACDE,QAAAA,MAAK,GAAGA,MAAK,CAACC,OAAd;AACD;;AACD,UAAI,CAACC,YAAL,EAAmB;AACjB;AACAF,QAAAA,MAAK,GAAGF,OAAO,CAACE,KAAhB;;AACA,eAAOA,MAAP,EAAc;AACZ,cAAIA,MAAK,KAAKL,CAAd,EAAiB;AACfO,YAAAA,YAAY,GAAG,IAAf;AACAP,YAAAA,CAAC,GAAGG,OAAJ;AACAF,YAAAA,CAAC,GAAGC,OAAJ;AACA;AACD;;AACD,cAAIG,MAAK,KAAKJ,CAAd,EAAiB;AACfM,YAAAA,YAAY,GAAG,IAAf;AACAN,YAAAA,CAAC,GAAGE,OAAJ;AACAH,YAAAA,CAAC,GAAGE,OAAJ;AACA;AACD;;AACDG,UAAAA,MAAK,GAAGA,MAAK,CAACC,OAAd;AACD;;AAjBgB,aAmBfC,YAnBe;AAAA;AAAA;AAAA;AAAA;AAuBlB;AACF;;AAlGU,UAqGTP,CAAC,CAAChB,SAAF,KAAgBiB,CArGP;AAAA;AAAA;AAAA;AAAA;AAyGZ,GA5HuE;AA8HxE;;;AA9HwE,QAgItED,CAAC,CAAC3D,GAAF,KAAUlE,QAhI4D;AAAA;AAAA;AAAA;AAAA;;AAmIxE,MAAI6H,CAAC,CAACL,SAAF,CAAYH,OAAZ,KAAwBQ,CAA5B,EAA+B;AAC7B;AACA,WAAOnB,KAAP;AACD,GAtIuE;;;AAwIxE,SAAOG,SAAP;AACD;AAED,AAAO,SAASwB,oBAAT,CAA8BC,MAA9B,EAA2D;AAChE,MAAMC,aAAa,GAAGX,6BAA6B,CAACU,MAAD,CAAnD;;AACA,MAAI,CAACC,aAAL,EAAoB;AAClB,WAAO,IAAP;AACD,GAJ+D;;;AAOhE,MAAI5B,IAAW,GAAG4B,aAAlB;;AACA,SAAO,IAAP,EAAa;AACX,QAAI5B,IAAI,CAACzC,GAAL,KAAahE,aAAb,IAA8ByG,IAAI,CAACzC,GAAL,KAAa/D,QAA/C,EAAyD;AACvD,aAAOwG,IAAP;AACD,KAFD,MAEO,IAAIA,IAAI,CAACuB,KAAT,EAAgB;AACrBvB,MAAAA,IAAI,CAACuB,KAAL,CAAWlB,MAAX,GAAoBL,IAApB;AACAA,MAAAA,IAAI,GAAGA,IAAI,CAACuB,KAAZ;AACA;AACD;;AACD,QAAIvB,IAAI,KAAK4B,aAAb,EAA4B;AAC1B,aAAO,IAAP;AACD;;AACD,WAAO,CAAC5B,IAAI,CAACwB,OAAb,EAAsB;AACpB,UAAI,CAACxB,IAAI,CAACK,MAAN,IAAgBL,IAAI,CAACK,MAAL,KAAgBuB,aAApC,EAAmD;AACjD,eAAO,IAAP;AACD;;AACD5B,MAAAA,IAAI,GAAGA,IAAI,CAACK,MAAZ;AACD;;AACDL,IAAAA,IAAI,CAACwB,OAAL,CAAanB,MAAb,GAAsBL,IAAI,CAACK,MAA3B;AACAL,IAAAA,IAAI,GAAGA,IAAI,CAACwB,OAAZ;AACD,GA3B+D;AA6BhE;;;AACA,SAAO,IAAP;AACD;AAED,AAAO,SAASK,iCAAT,CAA2CF,MAA3C,EAAwE;AAC7E,MAAMC,aAAa,GAAGX,6BAA6B,CAACU,MAAD,CAAnD;;AACA,MAAI,CAACC,aAAL,EAAoB;AAClB,WAAO,IAAP;AACD,GAJ4E;;;AAO7E,MAAI5B,IAAW,GAAG4B,aAAlB;;AACA,SAAO,IAAP,EAAa;AACX,QACE5B,IAAI,CAACzC,GAAL,KAAahE,aAAb,IACAyG,IAAI,CAACzC,GAAL,KAAa/D,QADb,IAECkG,oBAAoB,CAHvB,EAIE;AACA,aAAOM,IAAP;AACD,KAND,MAMO,IAAIA,IAAI,CAACuB,KAAL,IAAcvB,IAAI,CAACzC,GAAL,KAAajE,UAA/B,EAA2C;AAChD0G,MAAAA,IAAI,CAACuB,KAAL,CAAWlB,MAAX,GAAoBL,IAApB;AACAA,MAAAA,IAAI,GAAGA,IAAI,CAACuB,KAAZ;AACA;AACD;;AACD,QAAIvB,IAAI,KAAK4B,aAAb,EAA4B;AAC1B,aAAO,IAAP;AACD;;AACD,WAAO,CAAC5B,IAAI,CAACwB,OAAb,EAAsB;AACpB,UAAI,CAACxB,IAAI,CAACK,MAAN,IAAgBL,IAAI,CAACK,MAAL,KAAgBuB,aAApC,EAAmD;AACjD,eAAO,IAAP;AACD;;AACD5B,MAAAA,IAAI,GAAGA,IAAI,CAACK,MAAZ;AACD;;AACDL,IAAAA,IAAI,CAACwB,OAAL,CAAanB,MAAb,GAAsBL,IAAI,CAACK,MAA3B;AACAL,IAAAA,IAAI,GAAGA,IAAI,CAACwB,OAAZ;AACD,GA/B4E;AAiC7E;;;AACA,SAAO,IAAP;AACD;AAED,AASO,SAASM,gBAAT,CACLC,WADK,EAELC,UAFK,EAGI;AACT,MAAIhC,IAAI,GAAGgC,UAAX;AACA,MAAMC,oBAAoB,GAAGF,WAAW,CAAC7B,SAAzC;;AACA,SAAOF,IAAI,KAAK,IAAhB,EAAsB;AACpB,QAAIA,IAAI,KAAK+B,WAAT,IAAwB/B,IAAI,KAAKiC,oBAArC,EAA2D;AACzD,aAAO,IAAP;AACD;;AACDjC,IAAAA,IAAI,GAAGA,IAAI,CAACK,MAAZ;AACD;;AACD,SAAO,KAAP;AACD;;AC5VD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGiC;AACC;AACI;AACD;AACI;AACI;AACE;AACJ;AACH;AACE;AACL;AACK;AACJ;AACe;AAIrD,AAAO,IAAM6B,iBAAiB,GAAGC,aAAa,CAACD,iBAAxC;AACP,AAAO,IAAME,kBAAkB,GAAGD,aAAa,CAACC,kBAAzC;AACP,AAAO,IAAMC,mBAAmB,GAAGF,aAAa,CAACE,mBAA1C;AACP,AAAO,IAAMC,gBAAgB,GAAGH,aAAa,CAACG,gBAAvC;AACP,AAAO,IAAMC,gBAAgB,GAAGJ,aAAa,CAACI,gBAAvC;AACP,AAAO,IAAMC,cAAc,GAAGL,aAAa,CAACK,cAArC;AACP,AAAO,IAAMC,kBAAkB,GAAGN,aAAa,CAACM,kBAAzC;AACP,AAAO,IAAMC,uBAAuB,GAAGP,aAAa,CAACO,uBAA9C;AACP,AAAO,IAAMC,aAAa,GAAGR,aAAa,CAACQ,aAApC;AACP,AAAO,IAAMC,oBAAoB,GAAGT,aAAa,CAACS,oBAA3C;AACP,AAAO,IAAMC,kBAAkB,GAAGV,aAAa,CAACU,kBAAzC;AACP,AAAO,IAAMC,eAAe,GAAGX,aAAa,CAACW,eAAtC;AACP,AAAO,IAAMC,aAAa,GAAGZ,aAAa,CAACY,aAApC;AACP,AAAO,IAAMC,SAAS,GAAGb,aAAa,CAACa,SAAhC;AACP,AAAO,IAAMC,GAAG,GAAGd,aAAa,CAACc,GAA1B;AACP,AAAO,IAAMC,iBAAiB,GAAGf,aAAa,CAACe,iBAAxC;AACP,AAAO,IAAMC,gBAAgB,GAAGhB,aAAa,CAACgB,gBAAvC;AACP,AAAO,IAAMC,gBAAgB,GAAGjB,aAAa,CAACiB,gBAAvC;AACP,AAAO,IAAMC,mBAAmB,GAAGlB,aAAa,CAACkB,mBAA1C;AACP,AAAO,IAAMC,iBAAiB,GAAGnB,aAAa,CAACmB,iBAAxC;AACP,AAAO,IAAMC,+BAA+B,GAC1CpB,aAAa,CAACoB,+BADT;AAEP,AAAO,IAAMC,yBAAyB,GACpCrB,aAAa,CAACqB,yBADT;AAEP,AAAO,IAAMC,gCAAgC,GAC3CtB,aAAa,CAACsB,gCADT;AAEP,AAAO,IAAMC,mBAAmB,GAAGvB,aAAa,CAACuB,mBAA1C;AACP,AAAO,IAAMC,uBAAuB,GAAGxB,aAAa,CAACwB,uBAA9C;AACP,AAAO,IAAMC,yBAAyB,GACpCzB,aAAa,CAACyB,yBADT;AAEP,AAAO,IAAMC,YAAY,GAAG1B,aAAa,CAAC0B,YAAnC;AACP,AAAO,IAAMC,iBAAiB,GAAG3B,aAAa,CAAC2B,iBAAxC;AACP,AAAO,IAAMC,wBAAwB,GAAG5B,aAAa,CAAC4B,wBAA/C;AACP,AAAO,IAAMC,uBAAuB,GAAG7B,aAAa,CAAC6B,uBAA9C;AACP,AAAO,IAAMC,kBAAkB,GAAG9B,aAAa,CAAC8B,kBAAzC;AACP,AAAO,IAAMC,kBAAkB,GAAG/B,aAAa,CAAC8B,kBAAzC;AACP,AAAO,IAAME,oBAAoB,GAAGhC,aAAa,CAACgC,oBAA3C;AAGP;AACA;AACA;;AACA,AAAO,IAAMC,qBAAqB,GAAGjC,aAAa,CAACiC,qBAA5C;AACP,AAAO,IAAMC,aAAa,GAAGlC,aAAa,CAACkC,aAApC;AACP,AAAO,IAAMC,eAAe,GAAGnC,aAAa,CAACmC,eAAtC;AACP,AAAO,IAAMC,cAAc,GAAGpC,aAAa,CAACoC,cAArC;AACP,AAAO,IAAMC,eAAe,GAAGrC,aAAa,CAACqC,eAAtC;AACP,AAAO,IAAMC,sBAAsB,GAAGtC,aAAa,CAACsC,sBAA7C;AACP,AAAO,IAAMC,mBAAmB,GAAGvC,aAAa,CAACuC,mBAA1C;AACP,AAAO,IAAMC,yBAAyB,GACpCxC,aAAa,CAACwC,yBADT;AAIP;AACA;AACA;;AACA,AAAO,IAAMC,WAAW,GAAGzC,aAAa,CAACyC,WAAlC;AACP,AAAO,IAAMC,sBAAsB,GAAG1C,aAAa,CAAC0C,sBAA7C;AACP,AAAO,IAAMC,gBAAgB,GAAG3C,aAAa,CAAC2C,gBAAvC;AACP,AAAO,IAAMC,WAAW,GAAG5C,aAAa,CAAC4C,WAAlC;AACP,AAAO,IAAMC,YAAY,GAAG7C,aAAa,CAAC6C,YAAnC;AACP,AAAO,IAAMC,YAAY,GAAG9C,aAAa,CAAC8C,YAAnC;AACP,AAAO,IAAMC,uBAAuB,GAAG/C,aAAa,CAAC+C,uBAA9C;AACP,AAAO,IAAMC,WAAW,GAAGhD,aAAa,CAACgD,WAAlC;AACP,AAAO,IAAMC,wBAAwB,GAAGjD,aAAa,CAACiD,wBAA/C;AACP,AAAO,IAAMC,gBAAgB,GAAGlD,aAAa,CAACkD,gBAAvC;AACP,AAAO,IAAMC,YAAY,GAAGnD,aAAa,CAACmD,YAAnC;AACP,AAAO,IAAMC,gBAAgB,GAAGpD,aAAa,CAACoD,gBAAvC;AACP,AAAO,IAAMC,cAAc,GAAGrD,aAAa,CAACqD,cAArC;AACP,AAAO,IAAMC,kBAAkB,GAAGtD,aAAa,CAACsD,kBAAzC;AACP,AAAO,IAAMC,0BAA0B,GACrCvD,aAAa,CAACuD,0BADT;AAEP,AAAO,IAAMC,2BAA2B,GACtCxD,aAAa,CAACwD,2BADT;AAEP,AAAO,IAAMC,cAAc,GAAGzD,aAAa,CAACyD,cAArC;AAGP;AACA;AACA;;AACA,AAAO,IAAMC,aAAa,GAAG1D,aAAa,CAAC0D,aAApC;AACP,AAAO,IAAMC,uBAAuB,GAAG3D,aAAa,CAAC2D,uBAA9C;AACP,AAAO,IAAMC,8BAA8B,GACzC5D,aAAa,CAAC4D,8BADT;AAEP,AAAO,IAAMC,yBAAyB,GACpC7D,aAAa,CAAC6D,yBADT;AAEP,AAAO,IAAMC,wBAAwB,GAAG9D,aAAa,CAAC8D,wBAA/C;AACP,AAAO,IAAMC,mBAAmB,GAAG/D,aAAa,CAAC+D,mBAA1C;AACP,AAAO,IAAMC,uBAAuB,GAAGhE,aAAa,CAACgE,uBAA9C;AACP,AAAO,IAAMC,wBAAwB,GAAGjE,aAAa,CAAC0D,aAA/C;AAGP;AACA;AACA;;AACA,AAAO,IAAMQ,kBAAkB,GAAGlE,aAAa,CAACkE,kBAAzC;AACP,AAAO,IAAMC,sBAAsB,GAAGnE,aAAa,CAACmE,sBAA7C;AACP,AAAO,IAAMC,0BAA0B,GACrCpE,aAAa,CAACoE,0BADT;AAEP,AAAO,IAAMC,yBAAyB,GACpCrE,aAAa,CAACqE,yBADT;AAEP,AAAO,IAAMC,0BAA0B,GACrCtE,aAAa,CAACsE,0BADT;AAEP,AAAO,IAAMC,6BAA6B,GACxCvE,aAAa,CAACuE,6BADT;AAEP,AAAO,IAAMC,wBAAwB,GAAGxE,aAAa,CAACwE,wBAA/C;AACP,AAAO,IAAMC,uBAAuB,GAAGzE,aAAa,CAACyE,uBAA9C;AACP,AAAO,IAAMC,eAAe,GAAG1E,aAAa,CAAC0E,eAAtC;AACP,AAAO,IAAMC,mBAAmB,GAAG3E,aAAa,CAAC2E,mBAA1C;AACP,AAAO,IAAMC,uBAAuB,GAAG5E,aAAa,CAAC4E,uBAA9C;AACP,AAAO,IAAMC,8CAA8C,GACzD7E,aAAa,CAAC6E,8CADT;AAEP,AAAO,IAAMC,uBAAuB,GAAG9E,aAAa,CAAC8E,uBAA9C;AACP,AAAO,IAAMC,8BAA8B,GACzC/E,aAAa,CAAC+E,8BADT;AAEP,AAAO,IAAMC,qBAAqB,GAAGhF,aAAa,CAACgF,qBAA5C;AACP,AAAO,IAAMC,kCAAkC,GAC7CjF,aAAa,CAACiF,kCADT;AAEP,AAAO,IAAMC,wCAAwC,GACnDlF,aAAa,CAACkF,wCADT;AAEP,AAAO,IAAMC,+BAA+B,GAC1CnF,aAAa,CAACmF,+BADT;AAEP,AAAO,IAAMC,8BAA8B,GACzCpF,aAAa,CAACoF,8BADT;AAEP,AAAO,IAAMC,qBAAqB,GAAGrF,aAAa,CAACqF,qBAA5C;AACP,AAAO,IAAMC,qCAAqC,GAChDtF,aAAa,CAACsF,qCADT;AAEP,AAAO,IAAMC,yCAAyC,GACpDvF,aAAa,CAACuF,yCADT;AAEP,AAAO,IAAMC,6CAA6C,GACxDxF,aAAa,CAACwF,6CADT;AAEP,AAAO,IAAMC,4BAA4B,GACvCzF,aAAa,CAACyF,4BADT;AAEP,AAAO,IAAMC,gCAAgC,GAC3C1F,aAAa,CAAC0F,gCADT;AAEP,AAAO,IAAMC,oCAAoC,GAC/C3F,aAAa,CAAC2F,oCADT;;ACzKP;AACA;AACA;AACA;AAEA,IAAIC,aAAa,GAAG,CAApB;AACA,IAAIC,OAAJ;AACA,IAAIC,QAAJ;AACA,IAAIC,QAAJ;AACA,IAAIC,SAAJ;AACA,IAAIC,SAAJ;AACA,IAAIC,kBAAJ;AACA,IAAIC,YAAJ;;AAEA,SAASC,WAAT,GAAuB;;AACvBA,WAAW,CAACC,kBAAZ,GAAiC,IAAjC;AAEA,AAAO,SAASC,WAAT,GAA6B;AAClC,EAAa;AACX,QAAIV,aAAa,KAAK,CAAtB,EAAyB;AACvB;AACAC,MAAAA,OAAO,GAAG/O,OAAO,CAACyP,GAAlB;AACAT,MAAAA,QAAQ,GAAGhP,OAAO,CAAC0P,IAAnB;AACAT,MAAAA,QAAQ,GAAGjP,OAAO,CAAClB,IAAnB;AACAoQ,MAAAA,SAAS,GAAGlP,OAAO,CAACd,KAApB;AACAiQ,MAAAA,SAAS,GAAGnP,OAAO,CAAC2P,KAApB;AACAP,MAAAA,kBAAkB,GAAGpP,OAAO,CAAC4P,cAA7B;AACAP,MAAAA,YAAY,GAAGrP,OAAO,CAAC6P,QAAvB,CARuB;;AAUvB,UAAMC,KAAK,GAAG;AACZC,QAAAA,YAAY,EAAE,IADF;AAEZC,QAAAA,UAAU,EAAE,IAFA;AAGZlO,QAAAA,KAAK,EAAEwN,WAHK;AAIZW,QAAAA,QAAQ,EAAE;AAJE,OAAd,CAVuB;;AAiBvBC,MAAAA,MAAM,CAACC,gBAAP,CAAwBnQ,OAAxB,EAAiC;AAC/B0P,QAAAA,IAAI,EAAEI,KADyB;AAE/BL,QAAAA,GAAG,EAAEK,KAF0B;AAG/BhR,QAAAA,IAAI,EAAEgR,KAHyB;AAI/B5Q,QAAAA,KAAK,EAAE4Q,KAJwB;AAK/BH,QAAAA,KAAK,EAAEG,KALwB;AAM/BF,QAAAA,cAAc,EAAEE,KANe;AAO/BD,QAAAA,QAAQ,EAAEC;AAPqB,OAAjC;AASA;AACD;;AACDhB,IAAAA,aAAa;AACd;AACF;AAED,AAAO,SAASsB,YAAT,GAA8B;AACnC,EAAa;AACXtB,IAAAA,aAAa;;AACb,QAAIA,aAAa,KAAK,CAAtB,EAAyB;AACvB;AACA,UAAMgB,KAAK,GAAG;AACZC,QAAAA,YAAY,EAAE,IADF;AAEZC,QAAAA,UAAU,EAAE,IAFA;AAGZC,QAAAA,QAAQ,EAAE;AAHE,OAAd,CAFuB;;AAQvBC,MAAAA,MAAM,CAACC,gBAAP,CAAwBnQ,OAAxB,EAAiC;AAC/ByP,QAAAA,GAAG,cAAMK,KAAN;AAAahO,UAAAA,KAAK,EAAEiN;AAApB,UAD4B;AAE/BW,QAAAA,IAAI,cAAMI,KAAN;AAAahO,UAAAA,KAAK,EAAEkN;AAApB,UAF2B;AAG/BlQ,QAAAA,IAAI,cAAMgR,KAAN;AAAahO,UAAAA,KAAK,EAAEmN;AAApB,UAH2B;AAI/B/P,QAAAA,KAAK,cAAM4Q,KAAN;AAAahO,UAAAA,KAAK,EAAEoN;AAApB,UAJ0B;AAK/BS,QAAAA,KAAK,cAAMG,KAAN;AAAahO,UAAAA,KAAK,EAAEqN;AAApB,UAL0B;AAM/BS,QAAAA,cAAc,cAAME,KAAN;AAAahO,UAAAA,KAAK,EAAEsN;AAApB,UANiB;AAO/BS,QAAAA,QAAQ,cAAMC,KAAN;AAAahO,UAAAA,KAAK,EAAEuN;AAApB;AAPuB,OAAjC;AASA;AACD;;AACD,QAAIP,aAAa,GAAG,CAApB,EAAuB;AACrB,YACE,oCACE,+CAFJ;AAID;AACF;AACF;;IC9DMuB,yBAA0BzR,qBAA1ByR;AAEP,IAAIC,MAAJ;AACA,AAAO,SAASC,6BAAT,CACLrM,IADK,EAELsM,MAFK,EAGLC,OAHK,EAIG;AACR,EAAmC;AACjC,QAAIH,MAAM,KAAKI,SAAf,EAA0B;AACxB;AACA,UAAI;AACF,cAAMC,KAAK,EAAX;AACD,OAFD,CAEE,OAAOzL,CAAP,EAAU;AACV,YAAM0L,KAAK,GAAG1L,CAAC,CAAC7F,KAAF,CAAQwR,IAAR,GAAeD,KAAf,CAAqB,cAArB,CAAd;AACAN,QAAAA,MAAM,GAAIM,KAAK,IAAIA,KAAK,CAAC,CAAD,CAAf,IAAuB,EAAhC;AACD;AACF,KATgC;;;AAWjC,WAAO,OAAON,MAAP,GAAgBpM,IAAvB;AACD,GAZD;AAmBD;AAED,IAAI4M,OAAO,GAAG,KAAd;AACA,IAAIC,mBAAJ;;AACA,AAAa;AACX,MAAMC,eAAe,GAAG,OAAOC,OAAP,KAAmB,UAAnB,GAAgCA,OAAhC,GAA0CC,GAAlE;AACAH,EAAAA,mBAAmB,GAAG,IAAIC,eAAJ,EAAtB;AACD;;AAED,AAAO,SAASG,4BAAT,CACLC,EADK,EAELC,SAFK,EAGG;AACR;AACA,MAAI,CAACD,EAAD,IAAON,OAAX,EAAoB;AAClB,WAAO,EAAP;AACD;;AAED,EAAa;AACX,QAAMQ,KAAK,GAAGP,mBAAmB,CAACrP,GAApB,CAAwB0P,EAAxB,CAAd;;AACA,QAAIE,KAAK,KAAKZ,SAAd,EAAyB;AACvB,aAAOY,KAAP;AACD;AACF;;AAED,MAAIC,OAAJ;AAEAT,EAAAA,OAAO,GAAG,IAAV;AACA,MAAMU,yBAAyB,GAAGb,KAAK,CAACc,iBAAxC,CAhBQ;;AAkBRd,EAAAA,KAAK,CAACc,iBAAN,GAA0Bf,SAA1B;AACA,MAAIgB,kBAAJ;;AACA,EAAa;AACXA,IAAAA,kBAAkB,GAAGrB,sBAAsB,CAAC5I,OAA5C,CADW;AAGX;;AACA4I,IAAAA,sBAAsB,CAAC5I,OAAvB,GAAiC,IAAjC;AACA+H,IAAAA,WAAW;AACZ;;AACD,MAAI;AACF;AACA,QAAI6B,SAAJ,EAAe;AACb;AACA,UAAMM,IAAI,GAAG,YAAW;AACtB,cAAMhB,KAAK,EAAX;AACD,OAFD,CAFa;;;AAMbT,MAAAA,MAAM,CAAC0B,cAAP,CAAsBD,IAAI,CAAC9R,SAA3B,EAAsC,OAAtC,EAA+C;AAC7CgC,QAAAA,GAAG,EAAE,YAAW;AACd;AACA;AACA,gBAAM8O,KAAK,EAAX;AACD;AAL4C,OAA/C;;AAOA,UAAI,OAAOkB,OAAP,KAAmB,QAAnB,IAA+BA,OAAO,CAACR,SAA3C,EAAsD;AACpD;AACA;AACA,YAAI;AACFQ,UAAAA,OAAO,CAACR,SAAR,CAAkBM,IAAlB,EAAwB,EAAxB;AACD,SAFD,CAEE,OAAOzM,CAAP,EAAU;AACVqM,UAAAA,OAAO,GAAGrM,CAAV;AACD;;AACD2M,QAAAA,OAAO,CAACR,SAAR,CAAkBD,EAAlB,EAAsB,EAAtB,EAA0BO,IAA1B;AACD,OATD,MASO;AACL,YAAI;AACFA,UAAAA,IAAI,CAAC5R,IAAL;AACD,SAFD,CAEE,OAAOmF,CAAP,EAAU;AACVqM,UAAAA,OAAO,GAAGrM,CAAV;AACD;;AACDkM,QAAAA,EAAE,CAACrR,IAAH,CAAQ4R,IAAI,CAAC9R,SAAb;AACD;AACF,KA9BD,MA8BO;AACL,UAAI;AACF,cAAM8Q,KAAK,EAAX;AACD,OAFD,CAEE,OAAOzL,CAAP,EAAU;AACVqM,QAAAA,OAAO,GAAGrM,CAAV;AACD;;AACDkM,MAAAA,EAAE;AACH;AACF,GAxCD,CAwCE,OAAOU,MAAP,EAAe;AACf;AACA,QAAIA,MAAM,IAAIP,OAAV,IAAqB,OAAOO,MAAM,CAACzS,KAAd,KAAwB,QAAjD,EAA2D;AACzD;AACA;AACA,UAAM0S,WAAW,GAAGD,MAAM,CAACzS,KAAP,CAAa2S,KAAb,CAAmB,IAAnB,CAApB;AACA,UAAMC,YAAY,GAAGV,OAAO,CAAClS,KAAR,CAAc2S,KAAd,CAAoB,IAApB,CAArB;AACA,UAAIE,CAAC,GAAGH,WAAW,CAACI,MAAZ,GAAqB,CAA7B;AACA,UAAIC,CAAC,GAAGH,YAAY,CAACE,MAAb,GAAsB,CAA9B;;AACA,aAAOD,CAAC,IAAI,CAAL,IAAUE,CAAC,IAAI,CAAf,IAAoBL,WAAW,CAACG,CAAD,CAAX,KAAmBD,YAAY,CAACG,CAAD,CAA1D,EAA+D;AAC7D;AACA;AACA;AACA;AACA;AACA;AACAA,QAAAA,CAAC;AACF;;AACD,aAAOF,CAAC,IAAI,CAAL,IAAUE,CAAC,IAAI,CAAtB,EAAyBF,CAAC,IAAIE,CAAC,EAA/B,EAAmC;AACjC;AACA;AACA,YAAIL,WAAW,CAACG,CAAD,CAAX,KAAmBD,YAAY,CAACG,CAAD,CAAnC,EAAwC;AACtC;AACA;AACA;AACA;AACA;AACA,cAAIF,CAAC,KAAK,CAAN,IAAWE,CAAC,KAAK,CAArB,EAAwB;AACtB,eAAG;AACDF,cAAAA,CAAC;AACDE,cAAAA,CAAC,GAFA;AAID;;AACA,kBAAIA,CAAC,GAAG,CAAJ,IAASL,WAAW,CAACG,CAAD,CAAX,KAAmBD,YAAY,CAACG,CAAD,CAA5C,EAAiD;AAC/C;AACA,oBAAMd,MAAK,GAAG,OAAOS,WAAW,CAACG,CAAD,CAAX,CAAeG,OAAf,CAAuB,UAAvB,EAAmC,MAAnC,CAArB;;AACA,gBAAa;AACX,sBAAI,OAAOjB,EAAP,KAAc,UAAlB,EAA8B;AAC5BL,oBAAAA,mBAAmB,CAAClP,GAApB,CAAwBuP,EAAxB,EAA4BE,MAA5B;AACD;AACF,iBAP8C;;;AAS/C,uBAAOA,MAAP;AACD;AACF,aAhBD,QAgBSY,CAAC,IAAI,CAAL,IAAUE,CAAC,IAAI,CAhBxB;AAiBD;;AACD;AACD;AACF;AACF;AACF,GA1FD,SA0FU;AACRtB,IAAAA,OAAO,GAAG,KAAV;;AACA,IAAa;AACXT,MAAAA,sBAAsB,CAAC5I,OAAvB,GAAiCiK,kBAAjC;AACAtB,MAAAA,YAAY;AACb;;AACDO,IAAAA,KAAK,CAACc,iBAAN,GAA0BD,yBAA1B;AACD,GA5HO;;;AA8HR,MAAMtN,IAAI,GAAGkN,EAAE,GAAGA,EAAE,CAACnN,WAAH,IAAkBmN,EAAE,CAAClN,IAAxB,GAA+B,EAA9C;AACA,MAAMoO,cAAc,GAAGpO,IAAI,GAAGqM,6BAA6B,CAACrM,IAAD,CAAhC,GAAyC,EAApE;;AACA,EAAa;AACX,QAAI,OAAOkN,EAAP,KAAc,UAAlB,EAA8B;AAC5BL,MAAAA,mBAAmB,CAAClP,GAApB,CAAwBuP,EAAxB,EAA4BkB,cAA5B;AACD;AACF;;AACD,SAAOA,cAAP;AACD;AAED;AA8BA,AAAO,SAASC,2BAAT,CACLC,IADK,EAELhC,MAFK,EAGLC,OAHK,EAIG;AACR,EAAmC;AACjC,WAAOU,4BAA4B,CAACqB,IAAD,EAAO,IAAP,CAAnC;AACD,GAFD;AAKD;AAED,AAAO,SAASC,8BAAT,CACLrB,EADK,EAELZ,MAFK,EAGLC,OAHK,EAIG;AACR,EAAmC;AACjC,WAAOU,4BAA4B,CAACC,EAAD,EAAK,KAAL,CAAnC;AACD,GAFD;AAaD;;AAED,SAASsB,eAAT,CAAyBC,SAAzB,EAA8C;AAC5C,MAAM9S,SAAS,GAAG8S,SAAS,CAAC9S,SAA5B;AACA,SAAO,CAAC,EAAEA,SAAS,IAAIA,SAAS,CAAC+S,gBAAzB,CAAR;AACD;;AAED,AAAO,SAASC,oCAAT,CACLzO,IADK,EAELoM,MAFK,EAGLC,OAHK,EAIG;AACR;AAGA,MAAIrM,IAAI,IAAI,IAAZ,EAAkB;AAChB,WAAO,EAAP;AACD;;AACD,MAAI,OAAOA,IAAP,KAAgB,UAApB,EAAgC;AAC9B,IAAmC;AACjC,aAAO+M,4BAA4B,CAAC/M,IAAD,EAAOsO,eAAe,CAACtO,IAAD,CAAtB,CAAnC;AACD,KAFD;AAKD;;AACD,MAAI,OAAOA,IAAP,KAAgB,QAApB,EAA8B;AAC5B,WAAOmM,6BAA6B,CAACnM,IAAD,AAAA,CAApC;AACD;;AACD,UAAQA,IAAR;AACE,SAAK7B,mBAAL;AACE,aAAOgO,6BAA6B,CAAC,UAAD,AAAA,CAApC;;AACF,SAAK/N,wBAAL;AACE,aAAO+N,6BAA6B,CAAC,cAAD,AAAA,CAApC;AAJJ;;AAMA,MAAI,OAAOnM,IAAP,KAAgB,QAApB,EAA8B;AAC5B,YAAQA,IAAI,CAACG,QAAb;AACE,WAAKjC,sBAAL;AACE,eAAOmQ,8BAA8B,CAACrO,IAAI,CAACO,MAAN,AAAA,CAArC;;AACF,WAAKlC,eAAL;AACE;AACA,eAAOoQ,oCAAoC,CAACzO,IAAI,CAACA,IAAN,EAAYoM,MAAZ,EAAoBC,OAApB,CAA3C;;AACF,WAAK9N,gBAAL;AACE,eAAO8P,8BAA8B,CAACrO,IAAI,CAACQ,OAAN,AAAA,CAArC;;AACF,WAAKlC,eAAL;AAAsB;AACpB,cAAMmC,aAAsC,GAAIT,IAAhD;AACA,cAAMU,OAAO,GAAGD,aAAa,CAACE,QAA9B;AACA,cAAMC,IAAI,GAAGH,aAAa,CAACI,KAA3B;;AACA,cAAI;AACF;AACA,mBAAO4N,oCAAoC,CACzC7N,IAAI,CAACF,OAAD,CADqC,EAEzC0L,MAFyC,EAGzCC,OAHyC,CAA3C;AAKD,WAPD,CAOE,OAAOvL,CAAP,EAAU;AACb;AApBH;AAsBD;;AACD,SAAO,EAAP;AACD;;ACxTD,IAAM4N,kBAAkB,GAAG,EAA3B;AAEA,AAIA,IAAM1T,sBAAsB,GAAGR,oBAAoB,CAACQ,sBAApD;;AAEA,SAAS2T,6BAAT,CAAuCC,OAAvC,EAAgD;AAC9C,EAAa;AACX,QAAIA,OAAJ,EAAa;AACX,UAAMxL,KAAK,GAAGwL,OAAO,CAACC,MAAtB;AACA,UAAM5T,KAAK,GAAGwT,oCAAoC,CAChDG,OAAO,CAAC5O,IADwC,EAEhD4O,OAAO,CAACE,OAFwC,EAGhD1L,KAAK,GAAGA,KAAK,CAACpD,IAAT,GAAgB,IAH2B,CAAlD;AAKAhF,MAAAA,sBAAsB,CAAC+T,kBAAvB,CAA0C9T,KAA1C;AACD,KARD,MAQO;AACLD,MAAAA,sBAAsB,CAAC+T,kBAAvB,CAA0C,IAA1C;AACD;AACF;AACF;;AAED,AAAe,SAASC,cAAT,CACbC,SADa,EAEbC,MAFa,EAGbC,QAHa,EAIbC,aAJa,EAKbR,OALa,EAMP;AACN,EAAa;AACX;AACA,QAAMS,GAAG,GAAG7T,QAAQ,CAACG,IAAT,CAAc2T,IAAd,CAAmBxD,MAAM,CAACrQ,SAAP,CAAiB8T,cAApC,CAAZ;;AACA,SAAK,IAAMC,YAAX,IAA2BP,SAA3B,EAAsC;AACpC,UAAII,GAAG,CAACJ,SAAD,EAAYO,YAAZ,CAAP,EAAkC;AAChC,YAAI1U,OAAK,SAAT,CADgC;AAGhC;AACA;;AACA,YAAI;AACF;AACA;AACA,cAAI,OAAOmU,SAAS,CAACO,YAAD,CAAhB,KAAmC,UAAvC,EAAmD;AACjD,gBAAMC,GAAG,GAAGlD,KAAK,CACf,CAAC6C,aAAa,IAAI,aAAlB,IACE,IADF,GAEED,QAFF,GAGE,SAHF,GAIEK,YAJF,GAKE,gBALF,GAME,8EANF,GAOE,OAAOP,SAAS,CAACO,YAAD,CAPlB,GAQE,IARF,GASE,+FAVa,CAAjB;AAYAC,YAAAA,GAAG,CAAC3P,IAAJ,GAAW,qBAAX;AACA,kBAAM2P,GAAN;AACD;;AACD3U,UAAAA,OAAK,GAAGmU,SAAS,CAACO,YAAD,CAAT,CACNN,MADM,EAENM,YAFM,EAGNJ,aAHM,EAIND,QAJM,EAKN,IALM,EAMN,8CANM,CAAR;AAQD,SA3BD,CA2BE,OAAOO,EAAP,EAAW;AACX5U,UAAAA,OAAK,GAAG4U,EAAR;AACD;;AACD,YAAI5U,OAAK,IAAI,EAAEA,OAAK,YAAYyR,KAAnB,CAAb,EAAwC;AACtCoC,UAAAA,6BAA6B,CAACC,OAAD,CAA7B;;AACA,gBACE,iCACE,qCADF,GAEE,+DAFF,GAGE,iEAHF,GAIE,gEAJF,GAKE,iCANJ,EAOEQ,aAAa,IAAI,aAPnB,EAQED,QARF,EASEK,YATF,EAUE,OAAO1U,OAVT;;AAYA6T,UAAAA,6BAA6B,CAAC,IAAD,CAA7B;AACD;;AACD,YAAI7T,OAAK,YAAYyR,KAAjB,IAA0B,EAAEzR,OAAK,CAAC6U,OAAN,IAAiBjB,kBAAnB,CAA9B,EAAsE;AACpE;AACA;AACAA,UAAAA,kBAAkB,CAAC5T,OAAK,CAAC6U,OAAP,CAAlB,GAAoC,IAApC;AACAhB,UAAAA,6BAA6B,CAACC,OAAD,CAA7B;;AACA,gBAAc,oBAAd,EAAoCO,QAApC,EAA8CrU,OAAK,CAAC6U,OAApD;;AACAhB,UAAAA,6BAA6B,CAAC,IAAD,CAA7B;AACD;AACF;AACF;AACF;AACF;;AC7FD,IAAMiB,UAAsB,GAAG,EAA/B;AAEA,IAAIC,UAAJ;;AAEA,AAAa;AACXA,EAAAA,UAAU,GAAG,EAAb;AACD;;AAED,IAAIC,KAAK,GAAG,CAAC,CAAb;;AAEA,SAASC,YAAT,CAAyBC,YAAzB,EAA0D;AACxD,SAAO;AACL3M,IAAAA,OAAO,EAAE2M;AADJ,GAAP;AAGD;;AAMD,SAASC,GAAT,CAAgBC,MAAhB,EAAwCxN,KAAxC,EAA4D;AAC1D,MAAIoN,KAAK,GAAG,CAAZ,EAAe;AACb,IAAa;AACX,YAAc,iBAAd;AACD;;AACD;AACD;;AAED,EAAa;AACX,QAAIpN,KAAK,KAAKmN,UAAU,CAACC,KAAD,CAAxB,EAAiC;AAC/B,YAAc,0BAAd;AACD;AACF;;AAEDI,EAAAA,MAAM,CAAC7M,OAAP,GAAiBuM,UAAU,CAACE,KAAD,CAA3B;AAEAF,EAAAA,UAAU,CAACE,KAAD,CAAV,GAAoB,IAApB;;AAEA,EAAa;AACXD,IAAAA,UAAU,CAACC,KAAD,CAAV,GAAoB,IAApB;AACD;;AAEDA,EAAAA,KAAK;AACN;;AAED,SAASK,IAAT,CAAiBD,MAAjB,EAAyCxS,KAAzC,EAAmDgF,KAAnD,EAAuE;AACrEoN,EAAAA,KAAK;AAELF,EAAAA,UAAU,CAACE,KAAD,CAAV,GAAoBI,MAAM,CAAC7M,OAA3B;;AAEA,EAAa;AACXwM,IAAAA,UAAU,CAACC,KAAD,CAAV,GAAoBpN,KAApB;AACD;;AAEDwN,EAAAA,MAAM,CAAC7M,OAAP,GAAiB3F,KAAjB;AACD;;AC/CD,IAAI0S,iCAAJ;;AAEA,AAAa;AACXA,EAAAA,iCAAiC,GAAG,EAApC;AACD;;AAED,AAAO,IAAMC,kBAAkB,GAAG,EAA3B;;AACP,AAAa;AACXvE,EAAAA,MAAM,CAACwE,MAAP,CAAcD,kBAAd;AACD;;;AAGD,IAAME,kBAAuC,GAAGR,YAAY,CAC1DM,kBAD0D,CAA5D;;AAIA,IAAMG,yBAA+C,GAAGT,YAAY,CAAC,KAAD,CAApE;AAEA;AACA;;AACA,IAAIU,eAAuB,GAAGJ,kBAA9B;;AAEA,SAASK,kBAAT,CACEC,cADF,EAEEpC,SAFF,EAGEqC,2BAHF,EAIU;AACR,EAEO;AACL,QAAIA,2BAA2B,IAAIC,iBAAiB,CAACtC,SAAD,CAApD,EAAiE;AAC/D;AACA;AACA;AACA;AACA,aAAOkC,eAAP;AACD;;AACD,WAAOF,kBAAkB,CAAClN,OAA1B;AACD;AACF;;AAED,SAASyN,YAAT,CACEH,cADF,EAEEI,eAFF,EAGEC,aAHF,EAIQ;AACN,EAEO;AACL,QAAMzN,QAAQ,GAAGoN,cAAc,CAACnN,SAAhC;AACAD,IAAAA,QAAQ,CAAC0N,2CAAT,GAAuDF,eAAvD;AACAxN,IAAAA,QAAQ,CAAC2N,yCAAT,GAAqDF,aAArD;AACD;AACF;;AAED,SAASG,gBAAT,CACER,cADF,EAEEI,eAFF,EAGU;AACR,EAEO;AACL,QAAM/Q,IAAI,GAAG2Q,cAAc,CAAC3Q,IAA5B;AACA,QAAMoR,YAAY,GAAGpR,IAAI,CAACoR,YAA1B;;AACA,QAAI,CAACA,YAAL,EAAmB;AACjB,aAAOf,kBAAP;AACD,KALI;AAQL;AACA;;;AACA,QAAM9M,QAAQ,GAAGoN,cAAc,CAACnN,SAAhC;;AACA,QACED,QAAQ,IACRA,QAAQ,CAAC0N,2CAAT,KAAyDF,eAF3D,EAGE;AACA,aAAOxN,QAAQ,CAAC2N,yCAAhB;AACD;;AAED,QAAM9Q,OAAO,GAAG,EAAhB;;AACA,SAAK,IAAM7C,GAAX,IAAkB6T,YAAlB,EAAgC;AAC9BhR,MAAAA,OAAO,CAAC7C,GAAD,CAAP,GAAewT,eAAe,CAACxT,GAAD,CAA9B;AACD;;AAED,IAAa;AACX,UAAMuC,IAAI,GAAGG,gBAAgB,CAACD,IAAD,CAAhB,IAA0B,SAAvC;AACAgP,MAAAA,cAAc,CAACoC,YAAD,EAAehR,OAAf,EAAwB,SAAxB,EAAmCN,IAAnC,CAAd;AACD,KA1BI;AA6BL;;;AACA,QAAIyD,QAAJ,EAAc;AACZuN,MAAAA,YAAY,CAACH,cAAD,EAAiBI,eAAjB,EAAkC3Q,OAAlC,CAAZ;AACD;;AAED,WAAOA,OAAP;AACD;AACF;;AAED,SAASiR,iBAAT,GAAsC;AACpC,EAEO;AACL,WAAOb,yBAAyB,CAACnN,OAAjC;AACD;AACF;;AAED,SAASwN,iBAAT,CAA2B7Q,IAA3B,EAAoD;AAClD,EAEO;AACL,QAAMsR,iBAAiB,GAAGtR,IAAI,CAACsR,iBAA/B;AACA,WAAOA,iBAAiB,KAAK,IAAtB,IAA8BA,iBAAiB,KAAKhF,SAA3D;AACD;AACF;;AAED,SAASiF,UAAT,CAAoB7O,KAApB,EAAwC;AACtC,EAEO;AACLuN,IAAAA,GAAG,CAACO,yBAAD,EAA4B9N,KAA5B,CAAH;AACAuN,IAAAA,GAAG,CAACM,kBAAD,EAAqB7N,KAArB,CAAH;AACD;AACF;;AAED,SAAS8O,wBAAT,CAAkC9O,KAAlC,EAAsD;AACpD,EAEO;AACLuN,IAAAA,GAAG,CAACO,yBAAD,EAA4B9N,KAA5B,CAAH;AACAuN,IAAAA,GAAG,CAACM,kBAAD,EAAqB7N,KAArB,CAAH;AACD;AACF;;AAED,SAAS+O,yBAAT,CACE/O,KADF,EAEEtC,OAFF,EAGEsR,SAHF,EAIQ;AACN,EAEO;AAAA,UAEHnB,kBAAkB,CAAClN,OAAnB,KAA+BgN,kBAF5B;AAAA;AAAA;AAAA;AAAA;;AAOLF,IAAAA,IAAI,CAACI,kBAAD,EAAqBnQ,OAArB,EAA8BsC,KAA9B,CAAJ;AACAyN,IAAAA,IAAI,CAACK,yBAAD,EAA4BkB,SAA5B,EAAuChP,KAAvC,CAAJ;AACD;AACF;;AAED,SAASiP,mBAAT,CACEjP,KADF,EAEE1C,IAFF,EAGE4R,aAHF,EAIU;AACR,EAEO;AACL,QAAMrO,QAAQ,GAAGb,KAAK,CAACc,SAAvB;AACA,QAAM8N,iBAAiB,GAAGtR,IAAI,CAACsR,iBAA/B,CAFK;AAKL;;AACA,QAAI,OAAO/N,QAAQ,CAACsO,eAAhB,KAAoC,UAAxC,EAAoD;AAClD,MAAa;AACX,YAAMzC,aAAa,GAAGnP,gBAAgB,CAACD,IAAD,CAAhB,IAA0B,SAAhD;;AAEA,YAAI,CAACoQ,iCAAiC,CAAChB,aAAD,CAAtC,EAAuD;AACrDgB,UAAAA,iCAAiC,CAAChB,aAAD,CAAjC,GAAmD,IAAnD;;AACA,gBACE,gFACE,2EADF,GAEE,4BAHJ,EAIEA,aAJF,EAKEA,aALF;AAOD;AACF;;AACD,aAAOwC,aAAP;AACD;;AAED,QAAME,YAAY,GAAGvO,QAAQ,CAACsO,eAAT,EAArB;;AACA,SAAK,IAAME,UAAX,IAAyBD,YAAzB,EAAuC;AAAA,YAEnCC,UAAU,IAAIT,iBAFqB;AAAA;AAAA,wBAInCrR,gBAAgB,CAACD,IAAD,CAAhB,IAA0B,SAJS,mCAKnC+R,UALmC;AAAA;AAAA;AAOtC;;AACD,IAAa;AACX,UAAMjS,IAAI,GAAGG,gBAAgB,CAACD,IAAD,CAAhB,IAA0B,SAAvC;AACAgP,MAAAA,cAAc,CAACsC,iBAAD,EAAoBQ,YAApB,EAAkC,eAAlC,EAAmDhS,IAAnD,CAAd;AACD;;AAED,uBAAW8R,aAAX,EAA6BE,YAA7B;AACD;AACF;;AAED,SAASE,mBAAT,CAA6BrB,cAA7B,EAA6D;AAC3D,EAEO;AACL,QAAMpN,QAAQ,GAAGoN,cAAc,CAACnN,SAAhC,CADK;AAGL;AACA;;AACA,QAAMyO,0BAA0B,GAC7B1O,QAAQ,IAAIA,QAAQ,CAAC2O,yCAAtB,IACA7B,kBAFF,CALK;AAUL;;AACAI,IAAAA,eAAe,GAAGF,kBAAkB,CAAClN,OAArC;AACA8M,IAAAA,IAAI,CAACI,kBAAD,EAAqB0B,0BAArB,EAAiDtB,cAAjD,CAAJ;AACAR,IAAAA,IAAI,CACFK,yBADE,EAEFA,yBAAyB,CAACnN,OAFxB,EAGFsN,cAHE,CAAJ;AAMA,WAAO,IAAP;AACD;AACF;;AAED,SAASwB,yBAAT,CACExB,cADF,EAEE3Q,IAFF,EAGE0R,SAHF,EAIQ;AACN,EAEO;AACL,QAAMnO,QAAQ,GAAGoN,cAAc,CAACnN,SAAhC;;AADK,SAGHD,QAHG;AAAA;AAAA;AAAA;AAAA;;AAQL,QAAImO,SAAJ,EAAe;AACb;AACA;AACA;AACA,UAAMU,aAAa,GAAGT,mBAAmB,CACvChB,cADuC,EAEvC3Q,IAFuC,EAGvCyQ,eAHuC,CAAzC;AAKAlN,MAAAA,QAAQ,CAAC2O,yCAAT,GAAqDE,aAArD,CATa;AAYb;;AACAnC,MAAAA,GAAG,CAACO,yBAAD,EAA4BG,cAA5B,CAAH;AACAV,MAAAA,GAAG,CAACM,kBAAD,EAAqBI,cAArB,CAAH,CAda;;AAgBbR,MAAAA,IAAI,CAACI,kBAAD,EAAqB6B,aAArB,EAAoCzB,cAApC,CAAJ;AACAR,MAAAA,IAAI,CAACK,yBAAD,EAA4BkB,SAA5B,EAAuCf,cAAvC,CAAJ;AACD,KAlBD,MAkBO;AACLV,MAAAA,GAAG,CAACO,yBAAD,EAA4BG,cAA5B,CAAH;AACAR,MAAAA,IAAI,CAACK,yBAAD,EAA4BkB,SAA5B,EAAuCf,cAAvC,CAAJ;AACD;AACF;AACF;;AAED,SAAS0B,0BAAT,CAAoC3P,KAApC,EAA0D;AACxD,EAEO;AACL;AACA;AAFK,UAIHO,cAAc,CAACP,KAAD,CAAd,IAAyBA,KAAK,CAACxC,GAAN,KAAcpE,cAJpC;AAAA;AAAA;AAAA;AAAA;;AASL,QAAI6G,IAAI,GAAGD,KAAX;;AACA,OAAG;AACD,cAAQC,IAAI,CAACzC,GAAb;AACE,aAAKlE,QAAL;AACE,iBAAO2G,IAAI,CAACa,SAAL,CAAepD,OAAtB;;AACF,aAAKtE,cAAL;AAAqB;AACnB,gBAAMyS,SAAS,GAAG5L,IAAI,CAAC3C,IAAvB;;AACA,gBAAI6Q,iBAAiB,CAACtC,SAAD,CAArB,EAAkC;AAChC,qBAAO5L,IAAI,CAACa,SAAL,CAAe0O,yCAAtB;AACD;;AACD;AACD;AATH;;AAWAvP,MAAAA,IAAI,GAAGA,IAAI,CAACK,MAAZ;AACD,KAbD,QAaSL,IAAI,KAAK,IAblB;;AAVK;AAAA;AAAA;AAAA;AAAA;AA6BN;AACF;;ACvTM,IAAM2P,UAAU,GAAG,CAAnB;AACP,AAAO,IAAMC,YAAY,GAAG,CAArB;AACP,AAAO,IAAMC,cAAc,GAAG,CAAvB;;ACKP,IAAIC,UAAU,GAAG,IAAjB;AACA,IAAIC,YAAY,GAAG,IAAnB;AACA,IAAIC,cAAc,GAAG,KAArB;AAEA,AAAO,IAAMC,iBAAiB,GAC5B,OAAOC,8BAAP,KAA0C,WADrC;AAGP,AAAO,SAASC,eAAT,CAAyBC,SAAzB,EAAqD;AAC1D,MAAI,OAAOF,8BAAP,KAA0C,WAA9C,EAA2D;AACzD;AACA,WAAO,KAAP;AACD;;AACD,MAAMG,IAAI,GAAGH,8BAAb;;AACA,MAAIG,IAAI,CAACC,UAAT,EAAqB;AACnB;AACA;AACA;AACA,WAAO,IAAP;AACD;;AACD,MAAI,CAACD,IAAI,CAACE,aAAV,EAAyB;AACvB,IAAa;AACX,YACE,0EACE,mEADF,GAEE,yCAHJ;AAKD,KAPsB;;;AASvB,WAAO,IAAP;AACD;;AACD,MAAI;AACFT,IAAAA,UAAU,GAAGO,IAAI,CAACG,MAAL,CAAYJ,SAAZ,CAAb,CADE;;AAGFL,IAAAA,YAAY,GAAGM,IAAf;AACD,GAJD,CAIE,OAAOvD,GAAP,EAAY;AACZ;AACA,IAAa;AACX,YAAc,iDAAd,EAAiEA,GAAjE;AACD;AACF,GAhCyD;;;AAkC1D,SAAO,IAAP;AACD;AAED,AAAO,SAAS2D,cAAT,CAAwBC,IAAxB,EAAyCC,QAAzC,EAAkE;AACvE,EAAa;AACX,QACEZ,YAAY,IACZ,OAAOA,YAAY,CAACa,mBAApB,KAA4C,UAF9C,EAGE;AACA,UAAI;AACFb,QAAAA,YAAY,CAACa,mBAAb,CAAiCd,UAAjC,EAA6CY,IAA7C,EAAmDC,QAAnD;AACD,OAFD,CAEE,OAAO7D,GAAP,EAAY;AACZ,YAAI+D,CAAW,CAACb,cAAhB,EAAgC;AAC9BA,UAAAA,cAAc,GAAG,IAAjB;;AACA,gBAAc,gDAAd,EAAgElD,GAAhE;AACD;AACF;AACF;AACF;AACF;AAED,AAAO,SAASgE,YAAT,CACLJ,IADK,EAELK,aAFK,EAGL;AACA,MAAIhB,YAAY,IAAI,OAAOA,YAAY,CAACiB,iBAApB,KAA0C,UAA9D,EAA0E;AACxE,QAAI;AACF,UAAMC,QAAQ,GAAG,CAACP,IAAI,CAAChQ,OAAL,CAAaN,KAAb,GAAqBxB,UAAtB,MAAsCA,UAAvD;;AACA,UAAIY,mBAAJ,EAAyB;AACvBuQ,QAAAA,YAAY,CAACiB,iBAAb,CACElB,UADF,EAEEY,IAFF,EAGEK,aAHF,EAIEE,QAJF;AAMD,OAPD,MAOO;AACLlB,QAAAA,YAAY,CAACiB,iBAAb,CAA+BlB,UAA/B,EAA2CY,IAA3C,EAAiD/G,SAAjD,EAA4DsH,QAA5D;AACD;AACF,KAZD,CAYE,OAAOnE,GAAP,EAAY;AACZ,MAAa;AACX,YAAI,CAACkD,cAAL,EAAqB;AACnBA,UAAAA,cAAc,GAAG,IAAjB;;AACA,gBAAc,gDAAd,EAAgElD,GAAhE;AACD;AACF;AACF;AACF;AACF;AAED,AAAO,SAASoE,eAAT,CAAyBnR,KAAzB,EAAuC;AAC5C,MAAIgQ,YAAY,IAAI,OAAOA,YAAY,CAACoB,oBAApB,KAA6C,UAAjE,EAA6E;AAC3E,QAAI;AACFpB,MAAAA,YAAY,CAACoB,oBAAb,CAAkCrB,UAAlC,EAA8C/P,KAA9C;AACD,KAFD,CAEE,OAAO+M,GAAP,EAAY;AACZ,MAAa;AACX,YAAI,CAACkD,cAAL,EAAqB;AACnBA,UAAAA,cAAc,GAAG,IAAjB;;AACA,gBAAc,gDAAd,EAAgElD,GAAhE;AACD;AACF;AACF;AACF;AACF;;ICzFesE,gBAOZC;;AAEJ,AAA4B;AAC1B;AACA;AACA;AAH0B,QAKxBC,yBAAiB,IAAI,IAArB,IAA6BA,yBAAiB,CAAC5Q,OAAlB,IAA6B,IALlC;AAAA;AAAA;AAAA;AAAA;AAY3B;AASD;AACA;;AACA,AAAO,IAAM6Q,iBAAqC,GAAG,EAA9C;AACP,AAAO,IAAMC,oBAAwC,GAAG,EAAjD;AACP,AAAO,IAAMC,cAAkC,GAAG,EAA3C;AACP,AAAO,IAAMC,WAA+B,GAAG,EAAxC;AACP,AAAO,IAAMC,YAAgC,GAAG,EAAzC;;AAEP,AAAO,IAAMC,UAA8B,GAAG,EAAvC;AAEP,AAQA,IAAMC,aAAqB,GAAGT,aAAa,EAA3C;;ACnCO,IAAMU,gBAA8B,GAAG,EAAvC;AACP,AAAO,IAAMC,uBAAqC,GAAG,EAA9C;AAEP,IAAMC,kCAAgD,GAAG,EAAzD;AACA,AAAO,IAAMC,yBAAuC,GAAG,EAAhD;AAEP,IAAMC,oCAAkD,GAAG,EAA3D;AACA,AAAO,IAAMC,2BAAyC,GAAG,EAAlD;AAEP,IAAMC,4BAA0C,GAAG,CAAnD;AACA,AAAO,IAAMC,mBAAiC,GAAG,CAA1C;AAEP,IAAMC,2BAAyC,GAAG,CAAlD;AACA,AAAO,IAAMC,kBAAgC,GAAG,CAAzC;AAEP,IAAMC,iBAA+B,GAAG,CAAxC;AAEA,IAAMC,8BAA4C,GAAG,CAArD;AAEA,IAAMC,yBAAuC,GAAG,CAAhD;AACA,IAAMC,gBAA8B,GAAG,CAAvC;AAEA,IAAMC,qBAAmC,GAAG,CAA5C;AAEA,AAAO,IAAMC,cAA4B,GAAG,CAArC;AAEP,IAAMC,UAAU,GAAG,EAAnB;AAEA,AAAO,IAAMC,OAAc;AAAG;AAA6B,CAApD;AACP,AAAO,IAAMC,MAAY;AAAG;AAA+B,CAApD;AAEP,AAAO,IAAMC,QAAc;AAAG;AAA6B,CAApD;AACP,AAAO,IAAMC,eAAqB;AAAG;AAAsB,CAApD;AAEP,AAAO,IAAMC,0BAAgC;AAAG;AAAW,CAApD;AACP,IAAMC,kBAAyB;AAAG;AAAyB,EAA3D;AAEA,IAAMC,4BAAkC;AAAG;AAAgB,EAA3D;AACA,IAAMC,oBAA2B;AAAG;AAAuB,GAA3D;AAEA,AAAO,IAAMC,oBAA0B;AAAG;AAAiB,GAApD;AACP,AAAO,IAAMC,YAAmB;AAAG;AAAwB,IAApD;AAEP,IAAMC,uBAA6B;AAAG;AAAqB,IAA3D;AACA,IAAMC,eAAsB;AAAG;AAA4B,OAA3D;AAEA,IAAMC,UAAiB;AAAG;AAAiC,QAA3D;AAEA,AAAO,IAAMC,aAAoB;AAAG;AAAuB,QAApD;AAEP,AAAO,IAAMC,sBAA4B;AAAG;AAAe,QAApD;AAEP,IAAMC,YAAY;AAAG;AAAsC,SAA3D;AAEA,AAAO,IAAMC,iBAAuB;AAAG;AAAoB,SAApD;AACP,IAAMC,SAAgB;AAAG;AAAkC,SAA3D;AAEA,AAAO,IAAMC,aAAmB;AAAG;AAAwB,UAApD;AAEP,AAAO,IAAMC,WAAW,GAAG,CAAC,CAArB;AAEP,IAAIC,yBAAuC,GAAGtB,cAA9C;AAEA,AAAO,SAASuB,4BAAT,GAAsD;AAC3D,SAAOD,yBAAP;AACD;AAED,AAAO,SAASE,4BAAT,CAAsCC,eAAtC,EAAqE;AAC1EH,EAAAA,yBAAyB,GAAGG,eAA5B;AACD;AAGD;;AACA,IAAIC,0BAAwC,GAAGlC,mBAA/C;;AAEA,SAASmC,uBAAT,CAAiCC,KAAjC,EAA6D;AAC3D,MAAI,CAACxB,QAAQ,GAAGwB,KAAZ,MAAuB1B,OAA3B,EAAoC;AAClCwB,IAAAA,0BAA0B,GAAGzC,gBAA7B;AACA,WAAOmB,QAAP;AACD;;AACD,MAAI,CAACC,eAAe,GAAGuB,KAAnB,MAA8B1B,OAAlC,EAA2C;AACzCwB,IAAAA,0BAA0B,GAAGxC,uBAA7B;AACA,WAAOmB,eAAP;AACD;;AACD,MAAI,CAACC,0BAA0B,GAAGsB,KAA9B,MAAyC1B,OAA7C,EAAsD;AACpDwB,IAAAA,0BAA0B,GAAGvC,kCAA7B;AACA,WAAOmB,0BAAP;AACD;;AACD,MAAMuB,kBAAkB,GAAGtB,kBAAkB,GAAGqB,KAAhD;;AACA,MAAIC,kBAAkB,KAAK3B,OAA3B,EAAoC;AAClCwB,IAAAA,0BAA0B,GAAGtC,yBAA7B;AACA,WAAOyC,kBAAP;AACD;;AACD,MAAI,CAACD,KAAK,GAAGpB,4BAAT,MAA2CN,OAA/C,EAAwD;AACtDwB,IAAAA,0BAA0B,GAAGrC,oCAA7B;AACA,WAAOmB,4BAAP;AACD;;AACD,MAAMsB,oBAAoB,GAAGrB,oBAAoB,GAAGmB,KAApD;;AACA,MAAIE,oBAAoB,KAAK5B,OAA7B,EAAsC;AACpCwB,IAAAA,0BAA0B,GAAGpC,2BAA7B;AACA,WAAOwC,oBAAP;AACD;;AACD,MAAI,CAACF,KAAK,GAAGlB,oBAAT,MAAmCR,OAAvC,EAAgD;AAC9CwB,IAAAA,0BAA0B,GAAGnC,4BAA7B;AACA,WAAOmB,oBAAP;AACD;;AACD,MAAMqB,YAAY,GAAGpB,YAAY,GAAGiB,KAApC;;AACA,MAAIG,YAAY,KAAK7B,OAArB,EAA8B;AAC5BwB,IAAAA,0BAA0B,GAAGlC,mBAA7B;AACA,WAAOuC,YAAP;AACD;;AACD,MAAI,CAACH,KAAK,GAAGhB,uBAAT,MAAsCV,OAA1C,EAAmD;AACjDwB,IAAAA,0BAA0B,GAAGjC,2BAA7B;AACA,WAAOmB,uBAAP;AACD;;AACD,MAAMoB,eAAe,GAAGnB,eAAe,GAAGe,KAA1C;;AACA,MAAII,eAAe,KAAK9B,OAAxB,EAAiC;AAC/BwB,IAAAA,0BAA0B,GAAGhC,kBAA7B;AACA,WAAOsC,eAAP;AACD;;AACD,MAAMC,UAAU,GAAGnB,UAAU,GAAGc,KAAhC;;AACA,MAAIK,UAAU,KAAK/B,OAAnB,EAA4B;AAC1BwB,IAAAA,0BAA0B,GAAG/B,iBAA7B;AACA,WAAOsC,UAAP;AACD;;AACD,MAAIL,KAAK,GAAGZ,sBAAZ,EAAoC;AAClCU,IAAAA,0BAA0B,GAAG9B,8BAA7B;AACA,WAAOoB,sBAAP;AACD;;AACD,MAAI,CAACY,KAAK,GAAGV,iBAAT,MAAgChB,OAApC,EAA6C;AAC3CwB,IAAAA,0BAA0B,GAAG7B,yBAA7B;AACA,WAAOqB,iBAAP;AACD;;AACD,MAAMgB,SAAS,GAAGf,SAAS,GAAGS,KAA9B;;AACA,MAAIM,SAAS,KAAKhC,OAAlB,EAA2B;AACzBwB,IAAAA,0BAA0B,GAAG5B,gBAA7B;AACA,WAAOoC,SAAP;AACD;;AACD,MAAI,CAACd,aAAa,GAAGQ,KAAjB,MAA4B1B,OAAhC,EAAyC;AACvCwB,IAAAA,0BAA0B,GAAG3B,qBAA7B;AACA,WAAOqB,aAAP;AACD;;AACD,EAAa;AACX,UAAc,2DAAd;AACD,GArE0D;;;AAuE3DM,EAAAA,0BAA0B,GAAGlC,mBAA7B;AACA,SAAOoC,KAAP;AACD;;AAED,AAAO,SAASO,+BAAT,CACLC,sBADK,EAES;AACd,UAAQA,sBAAR;AACE,SAAKC,iBAAL;AACE,aAAOpD,gBAAP;;AACF,SAAKqD,oBAAL;AACE,aAAOhD,2BAAP;;AACF,SAAKiD,cAAL;AACA,SAAKC,WAAL;AACE;AACA,aAAOhD,mBAAP;;AACF,SAAKiD,YAAL;AACE,aAAO3C,gBAAP;;AACF;AACE,aAAOE,cAAP;AAZJ;AAcD;AAED,AAAO,SAAS0C,+BAAT,CACLC,YADK,EAEe;AACpB,UAAQA,YAAR;AACE,SAAK1D,gBAAL;AACA,SAAKC,uBAAL;AACE,aAAOmD,iBAAP;;AACF,SAAKlD,kCAAL;AACA,SAAKC,yBAAL;AACA,SAAKC,oCAAL;AACA,SAAKC,2BAAL;AACE,aAAOgD,oBAAP;;AACF,SAAK/C,4BAAL;AACA,SAAKC,mBAAL;AACA,SAAKC,2BAAL;AACA,SAAKC,kBAAL;AACA,SAAKE,8BAAL;AACA,SAAKD,iBAAL;AACE,aAAO4C,cAAP;;AACF,SAAK1C,yBAAL;AACA,SAAKC,gBAAL;AACA,SAAKC,qBAAL;AACE,aAAO0C,YAAP;;AACF,SAAKzC,cAAL;AACE,aAAO4C,UAAP;;AACF;AAAA;AAAA;AAAA,qDAIID,YAJJ;AAAA;AAAA;;AAtBF;AA6BD;AAED,AAAO,SAASE,YAAT,CAAsBhF,IAAtB,EAAuCiF,QAAvC,EAA+D;AACpE;AACA,MAAMC,YAAY,GAAGlF,IAAI,CAACkF,YAA1B;;AACA,MAAIA,YAAY,KAAK7C,OAArB,EAA8B;AAC5BwB,IAAAA,0BAA0B,GAAG1B,cAA7B;AACA,WAAOE,OAAP;AACD;;AAED,MAAI8C,SAAS,GAAG9C,OAAhB;AACA,MAAI+C,gBAAgB,GAAGjD,cAAvB;AAEA,MAAMkD,YAAY,GAAGrF,IAAI,CAACqF,YAA1B;AACA,MAAMC,cAAc,GAAGtF,IAAI,CAACsF,cAA5B;AACA,MAAMC,WAAW,GAAGvF,IAAI,CAACuF,WAAzB,CAboE;;AAgBpE,MAAIF,YAAY,KAAKhD,OAArB,EAA8B;AAC5B8C,IAAAA,SAAS,GAAGE,YAAZ;AACAD,IAAAA,gBAAgB,GAAGvB,0BAA0B,GAAGzC,gBAAhD;AACD,GAHD,MAGO;AACL;AACA;AACA,QAAMoE,mBAAmB,GAAGN,YAAY,GAAG9B,YAA3C;;AACA,QAAIoC,mBAAmB,KAAKnD,OAA5B,EAAqC;AACnC,UAAMoD,qBAAqB,GAAGD,mBAAmB,GAAG,CAACF,cAArD;;AACA,UAAIG,qBAAqB,KAAKpD,OAA9B,EAAuC;AACrC8C,QAAAA,SAAS,GAAGrB,uBAAuB,CAAC2B,qBAAD,CAAnC;AACAL,QAAAA,gBAAgB,GAAGvB,0BAAnB;AACD,OAHD,MAGO;AACL,YAAM6B,kBAAkB,GAAGF,mBAAmB,GAAGD,WAAjD;;AACA,YAAIG,kBAAkB,KAAKrD,OAA3B,EAAoC;AAClC8C,UAAAA,SAAS,GAAGrB,uBAAuB,CAAC4B,kBAAD,CAAnC;AACAN,UAAAA,gBAAgB,GAAGvB,0BAAnB;AACD;AACF;AACF,KAZD,MAYO;AACL;AACA,UAAM8B,cAAc,GAAGT,YAAY,GAAG,CAACI,cAAvC;;AACA,UAAIK,cAAc,KAAKtD,OAAvB,EAAgC;AAC9B8C,QAAAA,SAAS,GAAGrB,uBAAuB,CAAC6B,cAAD,CAAnC;AACAP,QAAAA,gBAAgB,GAAGvB,0BAAnB;AACD,OAHD,MAGO;AACL,YAAI0B,WAAW,KAAKlD,OAApB,EAA6B;AAC3B8C,UAAAA,SAAS,GAAGrB,uBAAuB,CAACyB,WAAD,CAAnC;AACAH,UAAAA,gBAAgB,GAAGvB,0BAAnB;AACD;AACF;AACF;AACF;;AAED,MAAIsB,SAAS,KAAK9C,OAAlB,EAA2B;AACzB;AACA;AACA,WAAOA,OAAP;AACD,GAtDmE;AAyDpE;;;AACA8C,EAAAA,SAAS,GAAGD,YAAY,GAAGU,6BAA6B,CAACT,SAAD,CAAxD,CA1DoE;AA6DpE;AACA;;AACA,MACEF,QAAQ,KAAK5C,OAAb,IACA4C,QAAQ,KAAKE,SADb;AAGA;AACA,GAACF,QAAQ,GAAGK,cAAZ,MAAgCjD,OALlC,EAME;AACAyB,IAAAA,uBAAuB,CAACmB,QAAD,CAAvB;AACA,QAAMY,eAAe,GAAGhC,0BAAxB;;AACA,QAAIuB,gBAAgB,IAAIS,eAAxB,EAAyC;AACvC,aAAOZ,QAAP;AACD,KAFD,MAEO;AACLpB,MAAAA,0BAA0B,GAAGuB,gBAA7B;AACD;AACF,GA7EmE;AAgFpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMU,cAAc,GAAG9F,IAAI,CAAC8F,cAA5B;;AACA,MAAIA,cAAc,KAAKzD,OAAvB,EAAgC;AAC9B,QAAM0D,aAAa,GAAG/F,IAAI,CAAC+F,aAA3B;AACA,QAAIhC,KAAK,GAAGoB,SAAS,GAAGW,cAAxB;;AACA,WAAO/B,KAAK,GAAG,CAAf,EAAkB;AAChB,UAAMtH,KAAK,GAAGuJ,sBAAsB,CAACjC,KAAD,CAApC;AACA,UAAMkC,IAAI,GAAG,KAAKxJ,KAAlB;AAEA0I,MAAAA,SAAS,IAAIY,aAAa,CAACtJ,KAAD,CAA1B;AAEAsH,MAAAA,KAAK,IAAI,CAACkC,IAAV;AACD;AACF;;AAED,SAAOd,SAAP;AACD;AAED,AAAO,SAASe,sBAAT,CAAgClG,IAAhC,EAAiD+D,KAAjD,EAAuE;AAC5E,MAAMoC,UAAU,GAAGnG,IAAI,CAACmG,UAAxB;AAEA,MAAIC,mBAAmB,GAAG5C,WAA1B;;AACA,SAAOO,KAAK,GAAG,CAAf,EAAkB;AAChB,QAAMtH,KAAK,GAAGuJ,sBAAsB,CAACjC,KAAD,CAApC;AACA,QAAMkC,IAAI,GAAG,KAAKxJ,KAAlB;AAEA,QAAM4J,SAAS,GAAGF,UAAU,CAAC1J,KAAD,CAA5B;;AACA,QAAI4J,SAAS,GAAGD,mBAAhB,EAAqC;AACnCA,MAAAA,mBAAmB,GAAGC,SAAtB;AACD;;AAEDtC,IAAAA,KAAK,IAAI,CAACkC,IAAV;AACD;;AAED,SAAOG,mBAAP;AACD;;AAED,SAASE,qBAAT,CAA+BL,IAA/B,EAA2CM,WAA3C,EAAgE;AAC9D;AACAzC,EAAAA,uBAAuB,CAACmC,IAAD,CAAvB;AACA,MAAMO,QAAQ,GAAG3C,0BAAjB;;AACA,MAAI2C,QAAQ,IAAI/E,2BAAhB,EAA6C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAO8E,WAAW,GAAG,GAArB;AACD,GAjBD,MAiBO,IAAIC,QAAQ,IAAI3E,kBAAhB,EAAoC;AACzC,WAAO0E,WAAW,GAAG,IAArB;AACD,GAFM,MAEA;AACL;AACA,WAAO/C,WAAP;AACD;AACF;;AAED,AAAO,SAASiD,yBAAT,CACLzG,IADK,EAELuG,WAFK,EAGC;AACN;AACA;AACA;AAEA,MAAMrB,YAAY,GAAGlF,IAAI,CAACkF,YAA1B;AACA,MAAMI,cAAc,GAAGtF,IAAI,CAACsF,cAA5B;AACA,MAAMC,WAAW,GAAGvF,IAAI,CAACuF,WAAzB;AACA,MAAMmB,eAAe,GAAG1G,IAAI,CAAC0G,eAA7B,CARM;AAWN;AACA;;AACA,MAAI3C,KAAK,GAAGmB,YAAZ;;AACA,SAAOnB,KAAK,GAAG,CAAf,EAAkB;AAChB,QAAMtH,KAAK,GAAGuJ,sBAAsB,CAACjC,KAAD,CAApC;AACA,QAAMkC,IAAI,GAAG,KAAKxJ,KAAlB;AAEA,QAAMkK,cAAc,GAAGD,eAAe,CAACjK,KAAD,CAAtC;;AACA,QAAIkK,cAAc,KAAKnD,WAAvB,EAAoC;AAClC;AACA;AACA;AACA,UACE,CAACyC,IAAI,GAAGX,cAAR,MAA4BjD,OAA5B,IACA,CAAC4D,IAAI,GAAGV,WAAR,MAAyBlD,OAF3B,EAGE;AACA;AACAqE,QAAAA,eAAe,CAACjK,KAAD,CAAf,GAAyB6J,qBAAqB,CAACL,IAAD,EAAOM,WAAP,CAA9C;AACD;AACF,KAXD,MAWO,IAAII,cAAc,IAAIJ,WAAtB,EAAmC;AACxC;AACAvG,MAAAA,IAAI,CAACqF,YAAL,IAAqBY,IAArB;AACD;;AAEDlC,IAAAA,KAAK,IAAI,CAACkC,IAAV;AACD;AACF;AAGD;;AACA,AAAO,SAASW,8BAAT,CAAwC5G,IAAxC,EAAyD;AAC9D,SAAO8D,uBAAuB,CAAC9D,IAAI,CAACkF,YAAN,CAA9B;AACD;AAED,AAAO,SAAS2B,mCAAT,CAA6C7G,IAA7C,EAAqE;AAC1E,MAAM8G,sBAAsB,GAAG9G,IAAI,CAACkF,YAAL,GAAoB,CAAC3B,aAApD;;AACA,MAAIuD,sBAAsB,KAAKzE,OAA/B,EAAwC;AACtC,WAAOyE,sBAAP;AACD;;AACD,MAAIA,sBAAsB,GAAGvD,aAA7B,EAA4C;AAC1C,WAAOA,aAAP;AACD;;AACD,SAAOlB,OAAP;AACD;AAED,AAAO,SAAS0E,uBAAT,GAAmC;AACxC,SAAOlD,0BAAP;AACD;AACD,AAAO,SAASmD,mBAAT,CAA6BjD,KAA7B,EAA2C;AAChD,SAAO,CAACA,KAAK,GAAGX,YAAT,MAA2Bf,OAAlC;AACD;AACD,AAAO,SAAS4E,mBAAT,CAA6BlD,KAA7B,EAA2C;AAChD,SAAO,CAACA,KAAK,GAAGd,UAAT,MAAyBc,KAAhC;AACD;AACD,AAAO,SAASmD,uBAAT,CAAiCnD,KAAjC,EAA+C;AACpD,SAAO,CAACA,KAAK,GAAGf,eAAT,MAA8Be,KAArC;AACD;AAGD;;AACA,AAAO,SAASoD,cAAT,CACLrC,YADK,EAELG,QAFK,EAGC;AACN,UAAQH,YAAR;AACE,SAAK3C,cAAL;AACE;;AACF,SAAKf,gBAAL;AACE,aAAOmB,QAAP;;AACF,SAAKlB,uBAAL;AACE,aAAOmB,eAAP;;AACF,SAAKjB,yBAAL;AAAgC;AAC9B,YAAM0E,KAAI,GAAGmB,iBAAiB,CAAC1E,kBAAkB,GAAG,CAACuC,QAAvB,CAA9B;;AACA,YAAIgB,KAAI,KAAK3D,MAAb,EAAqB;AACnB;AACA,iBAAO6E,cAAc,CAAC1F,2BAAD,EAA8BwD,QAA9B,CAArB;AACD;;AACD,eAAOgB,KAAP;AACD;;AACD,SAAKxE,2BAAL;AAAkC;AAChC,YAAMwE,MAAI,GAAGmB,iBAAiB,CAACxE,oBAAoB,GAAG,CAACqC,QAAzB,CAA9B;;AACA,YAAIgB,MAAI,KAAK3D,MAAb,EAAqB;AACnB;AACA,iBAAO6E,cAAc,CAACxF,mBAAD,EAAsBsD,QAAtB,CAArB;AACD;;AACD,eAAOgB,MAAP;AACD;;AACD,SAAKtE,mBAAL;AAA0B;AACxB,YAAIsE,MAAI,GAAGmB,iBAAiB,CAACtE,YAAY,GAAG,CAACmC,QAAjB,CAA5B;;AACA,YAAIgB,MAAI,KAAK3D,MAAb,EAAqB;AACnB;AACA;AACA2D,UAAAA,MAAI,GAAGmB,iBAAiB,CAACpE,eAAe,GAAG,CAACiC,QAApB,CAAxB;;AACA,cAAIgB,MAAI,KAAK3D,MAAb,EAAqB;AACnB;AACA;AACA;AACA2D,YAAAA,MAAI,GAAGmB,iBAAiB,CAACtE,YAAD,CAAxB;AACD;AACF;;AACD,eAAOmD,MAAP;AACD;;AACD,SAAKpE,kBAAL,CAtCF;;AAuCE,SAAKC,iBAAL;AAAwB;AACtB;;AACF,SAAKG,gBAAL;AACE,UAAIgE,IAAI,GAAGmB,iBAAiB,CAAC9D,SAAS,GAAG,CAAC2B,QAAd,CAA5B;;AACA,UAAIgB,IAAI,KAAK3D,MAAb,EAAqB;AACnB2D,QAAAA,IAAI,GAAGmB,iBAAiB,CAAC9D,SAAD,CAAxB;AACD;;AACD,aAAO2C,IAAP;AA9CJ;;AADM;AAAA;AAAA,iDAuDJnB,YAvDI;AAAA;AAAA;AAyDP;AAGD;;AACA,AAAO,SAASuC,kBAAT,CAA4BpC,QAA5B,EAA6CC,YAA7C,EAAwE;AAC7E;AACA;AACA,MAAIe,IAAI,GAAGmB,iBAAiB,CAACpE,eAAe,GAAG,CAACkC,YAApB,CAA5B;;AACA,MAAIe,IAAI,KAAK3D,MAAb,EAAqB;AACnB;AACA;AACA2D,IAAAA,IAAI,GAAGmB,iBAAiB,CAACpE,eAAe,GAAG,CAACiC,QAApB,CAAxB;;AACA,QAAIgB,IAAI,KAAK3D,MAAb,EAAqB;AACnB;AACA;AACA2D,MAAAA,IAAI,GAAGmB,iBAAiB,CAACpE,eAAD,CAAxB;AACD;AACF;;AACD,SAAOiD,IAAP;AACD;AAGD;;AACA,AAAO,SAASqB,aAAT,CAAuBrC,QAAvB,EAA8C;AACnD;AACA;AACA;AACA,MAAIgB,IAAI,GAAGmB,iBAAiB,CAACnE,UAAU,GAAG,CAACgC,QAAf,CAA5B;;AACA,MAAIgB,IAAI,KAAK3D,MAAb,EAAqB;AACnB2D,IAAAA,IAAI,GAAGmB,iBAAiB,CAACnE,UAAD,CAAxB;AACD;;AACD,SAAOgD,IAAP;AACD;;AAED,SAASsB,sBAAT,CAAgCxD,KAAhC,EAA8C;AAC5C,SAAOA,KAAK,GAAG,CAACA,KAAhB;AACD;;AAED,SAASyD,qBAAT,CAA+BzD,KAA/B,EAAmD;AACjD;AACA,MAAMtH,KAAK,GAAG,KAAKgL,KAAK,CAAC1D,KAAD,CAAxB;AACA,SAAOtH,KAAK,GAAG,CAAR,GAAY4F,OAAZ,GAAsB,KAAK5F,KAAlC;AACD;;AAED,SAASmJ,6BAAT,CAAuC7B,KAAvC,EAAmE;AACjE,SAAO,CAACyD,qBAAqB,CAACzD,KAAD,CAArB,IAAgC,CAAjC,IAAsC,CAA7C;AACD;;AAED,AAAO,SAASqD,iBAAT,CAA2BrD,KAA3B,EAA+C;AACpD;AACA;AACA;AACA;AACA,SAAOwD,sBAAsB,CAACxD,KAAD,CAA7B;AACD;;AAED,SAASiC,sBAAT,CAAgCjC,KAAhC,EAA8C;AAC5C,SAAO,KAAK0D,KAAK,CAAC1D,KAAD,CAAjB;AACD;;AAED,SAAS2D,WAAT,CAAqBzB,IAArB,EAAiC;AAC/B,SAAOD,sBAAsB,CAACC,IAAD,CAA7B;AACD;;AAED,AAAO,SAAS0B,gBAAT,CAA0BnX,CAA1B,EAA2CC,CAA3C,EAA4D;AACjE,SAAO,CAACD,CAAC,GAAGC,CAAL,MAAY4R,OAAnB;AACD;AAED,AAAO,SAASuF,eAAT,CAAyBxd,GAAzB,EAAqCyd,MAArC,EAA2D;AAChE,SAAO,CAACzd,GAAG,GAAGyd,MAAP,MAAmBA,MAA1B;AACD;AAED,AAAO,SAASC,UAAT,CAAoBtX,CAApB,EAAqCC,CAArC,EAA6D;AAClE,SAAOD,CAAC,GAAGC,CAAX;AACD;AAED,AAAO,SAASsX,WAAT,CAAqB3d,GAArB,EAAiCyd,MAAjC,EAA8D;AACnE,SAAOzd,GAAG,GAAG,CAACyd,MAAd;AACD;AAGD;;AACA,AAAO,SAASG,WAAT,CAAqB/B,IAArB,EAAwC;AAC7C,SAAOA,IAAP;AACD;AAED,AAAO,SAASgC,kBAAT,CAA4BzX,CAA5B,EAAqCC,CAArC,EAA8C;AACnD;AACA,SAAOD,CAAC,KAAK8R,MAAN,IAAgB9R,CAAC,GAAGC,CAApB,GAAwBD,CAAxB,GAA4BC,CAAnC;AACD;AAED,AAOO,SAASyX,aAAT,CAA0BC,OAA1B,EAAkD;AACvD;AACA;AACA,MAAMC,OAAO,GAAG,EAAhB;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGjG,UAApB,EAAgCiG,CAAC,EAAjC,EAAqC;AACnCD,IAAAA,OAAO,CAACtL,IAAR,CAAaqL,OAAb;AACD;;AACD,SAAOC,OAAP;AACD;AAED,AAAO,SAASE,eAAT,CACLtI,IADK,EAELuI,UAFK,EAGLlC,SAHK,EAIL;AACArG,EAAAA,IAAI,CAACkF,YAAL,IAAqBqD,UAArB,CADA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA,MAAMC,mBAAmB,GAAGD,UAAU,GAAG,CAAzC,CAdA;;AAgBAvI,EAAAA,IAAI,CAACsF,cAAL,IAAuBkD,mBAAvB;AACAxI,EAAAA,IAAI,CAACuF,WAAL,IAAoBiD,mBAApB;AAEA,MAAMrC,UAAU,GAAGnG,IAAI,CAACmG,UAAxB;AACA,MAAM1J,KAAK,GAAGiL,WAAW,CAACa,UAAD,CAAzB,CApBA;AAsBA;;AACApC,EAAAA,UAAU,CAAC1J,KAAD,CAAV,GAAoB4J,SAApB;AACD;AAED,AAAO,SAASoC,iBAAT,CAA2BzI,IAA3B,EAA4CsF,cAA5C,EAAmE;AACxEtF,EAAAA,IAAI,CAACsF,cAAL,IAAuBA,cAAvB;AACAtF,EAAAA,IAAI,CAACuF,WAAL,IAAoB,CAACD,cAArB,CAFwE;;AAKxE,MAAMoB,eAAe,GAAG1G,IAAI,CAAC0G,eAA7B;AACA,MAAI3C,KAAK,GAAGuB,cAAZ;;AACA,SAAOvB,KAAK,GAAG,CAAf,EAAkB;AAChB,QAAMtH,KAAK,GAAGuJ,sBAAsB,CAACjC,KAAD,CAApC;AACA,QAAMkC,IAAI,GAAG,KAAKxJ,KAAlB;AAEAiK,IAAAA,eAAe,CAACjK,KAAD,CAAf,GAAyB+G,WAAzB;AAEAO,IAAAA,KAAK,IAAI,CAACkC,IAAV;AACD;AACF;AAED,AAAO,SAASyC,cAAT,CACL1I,IADK,EAELuF,WAFK,EAGLc,SAHK,EAIL;AACArG,EAAAA,IAAI,CAACuF,WAAL,IAAoBvF,IAAI,CAACsF,cAAL,GAAsBC,WAA1C;AACD;AAED,AAAO,SAASoD,eAAT,CAAyB3I,IAAzB,EAA0CqF,YAA1C,EAA+D;AACpErF,EAAAA,IAAI,CAACqF,YAAL,IAAqBA,YAAY,GAAGrF,IAAI,CAACkF,YAAzC;AACD;AAED,AAAO,SAAS0D,0BAAT,CAAoC5I,IAApC,EAAqD;AAC1DA,EAAAA,IAAI,CAACqF,YAAL,IAAqB3C,kBAAkB,GAAG1C,IAAI,CAACkF,YAA/C;AACD;AAED,AAAO,SAAS2D,gBAAT,CAA0B9E,KAA1B,EAAwC;AAC7C,SAAO,CAACA,KAAK,GAAGrB,kBAAT,MAAiCL,OAAxC;AACD;AAED,AAAO,SAASyG,mBAAT,CAA6B9I,IAA7B,EAA8CuI,UAA9C,EAAgE;AACrEvI,EAAAA,IAAI,CAAC+I,gBAAL,IAAyBR,UAAU,GAAGvI,IAAI,CAACkF,YAA3C;AACD;AAED,AAAO,SAAS8D,gBAAT,CAA0BhJ,IAA1B,EAA2CiJ,cAA3C,EAAkE;AACvE,MAAMC,oBAAoB,GAAGlJ,IAAI,CAACkF,YAAL,GAAoB,CAAC+D,cAAlD;AAEAjJ,EAAAA,IAAI,CAACkF,YAAL,GAAoB+D,cAApB,CAHuE;;AAMvEjJ,EAAAA,IAAI,CAACsF,cAAL,GAAsB,CAAtB;AACAtF,EAAAA,IAAI,CAACuF,WAAL,GAAmB,CAAnB;AAEAvF,EAAAA,IAAI,CAACqF,YAAL,IAAqB4D,cAArB;AACAjJ,EAAAA,IAAI,CAAC+I,gBAAL,IAAyBE,cAAzB;AAEAjJ,EAAAA,IAAI,CAAC8F,cAAL,IAAuBmD,cAAvB;AAEA,MAAMlD,aAAa,GAAG/F,IAAI,CAAC+F,aAA3B;AACA,MAAMI,UAAU,GAAGnG,IAAI,CAACmG,UAAxB;AACA,MAAMO,eAAe,GAAG1G,IAAI,CAAC0G,eAA7B,CAhBuE;;AAmBvE,MAAI3C,KAAK,GAAGmF,oBAAZ;;AACA,SAAOnF,KAAK,GAAG,CAAf,EAAkB;AAChB,QAAMtH,KAAK,GAAGuJ,sBAAsB,CAACjC,KAAD,CAApC;AACA,QAAMkC,IAAI,GAAG,KAAKxJ,KAAlB;AAEAsJ,IAAAA,aAAa,CAACtJ,KAAD,CAAb,GAAuB4F,OAAvB;AACA8D,IAAAA,UAAU,CAAC1J,KAAD,CAAV,GAAoB+G,WAApB;AACAkD,IAAAA,eAAe,CAACjK,KAAD,CAAf,GAAyB+G,WAAzB;AAEAO,IAAAA,KAAK,IAAI,CAACkC,IAAV;AACD;AACF;AAED,AAAO,SAASkD,iBAAT,CAA2BnJ,IAA3B,EAA4C8F,cAA5C,EAAmE;AACxE9F,EAAAA,IAAI,CAAC8F,cAAL,IAAuBA,cAAvB;AAEA,MAAMC,aAAa,GAAG/F,IAAI,CAAC+F,aAA3B;AACA,MAAIhC,KAAK,GAAG+B,cAAZ;;AACA,SAAO/B,KAAK,GAAG,CAAf,EAAkB;AAChB,QAAMtH,KAAK,GAAGuJ,sBAAsB,CAACjC,KAAD,CAApC;AACA,QAAMkC,IAAI,GAAG,KAAKxJ,KAAlB;AAEAsJ,IAAAA,aAAa,CAACtJ,KAAD,CAAb,IAAwBqJ,cAAxB;AAEA/B,IAAAA,KAAK,IAAI,CAACkC,IAAV;AACD;AACF;AAED,AAAO,SAASmD,yBAAT,CACLpJ,IADK,EAELqJ,WAFK,EAGC;AACNvF,EAAAA,uBAAuB,CAACuF,WAAD,CAAvB;AACA,MAAMC,mBAAmB,GAAGzF,0BAA5B;AAEA,MAAIoC,IAAJ;;AACA,UAAQqD,mBAAR;AACE,SAAKlI,gBAAL;AACA,SAAKC,uBAAL;AACE4E,MAAAA,IAAI,GAAG3D,MAAP;AACA;;AACF,SAAKhB,kCAAL;AACA,SAAKC,yBAAL;AACE0E,MAAAA,IAAI,GAAGxD,0BAAP;AACA;;AACF,SAAKjB,oCAAL;AACA,SAAKC,2BAAL;AACEwE,MAAAA,IAAI,GAAGtD,4BAAP;AACA;;AACF,SAAKjB,4BAAL;AACA,SAAKC,mBAAL;AACEsE,MAAAA,IAAI,GAAGpD,oBAAP;AACA;;AACF,SAAKjB,2BAAL;AACA,SAAKC,kBAAL;AACEoE,MAAAA,IAAI,GAAGlD,uBAAP;AACA;;AACF,SAAKjB,iBAAL;AACE;AACA;AACAmE,MAAAA,IAAI,GAAGlD,uBAAP;AACA;;AACF,SAAKhB,8BAAL;AACEkE,MAAAA,IAAI,GAAG9C,sBAAP;AACA;;AACF,SAAKnB,yBAAL;AACA,SAAKC,gBAAL;AACEgE,MAAAA,IAAI,GAAG5C,iBAAP;AACA;;AACF,SAAKnB,qBAAL;AACA,SAAKC,cAAL;AACE8D,MAAAA,IAAI,GAAG3D,MAAP;AACA;;AACF;AAAA;AAAA;AAAA,0CACgE2D,IADhE;AAAA;AAAA;;AArCF,GALM;AA+CN;AACA;;;AACA,MAAI,CAACA,IAAI,IAAIjG,IAAI,CAACsF,cAAL,GAAsB+D,WAA1B,CAAL,MAAiD/G,MAArD,EAA6D;AAC3D;AACA,WAAOA,MAAP;AACD;;AAED,SAAO2D,IAAP;AACD;AAED,IAAMwB,KAAK,GAAG8B,IAAI,CAAC9B,KAAL,GAAa8B,IAAI,CAAC9B,KAAlB,GAA0B+B,aAAxC;AAGA;AACA;;AACA,IAAMxR,GAAG,GAAGuR,IAAI,CAACvR,GAAjB;AACA,IAAMyR,GAAG,GAAGF,IAAI,CAACE,GAAjB;;AACA,SAASD,aAAT,CAAuBzF,KAAvB,EAA4C;AAC1C,MAAIA,KAAK,KAAK,CAAd,EAAiB;AACf,WAAO,EAAP;AACD;;AACD,SAAQ,MAAO/L,GAAG,CAAC+L,KAAD,CAAH,GAAa0F,GAAd,GAAqB,CAA3B,CAAD,GAAkC,CAAzC;AACD;;IC9yB2BC,4BAYxB/I;IAXyBgJ,6BAWzBhJ;IAVuBiJ,2BAUvBjJ;IAToBkJ,wBASpBlJ;IARqBmJ,yBAQrBnJ;IAPYD,kBAOZC;IANgCoJ,oCAMhCpJ;IAL0BqJ,8BAK1BrJ;IAJ6BsJ,iCAI7BtJ;IAHuBuJ,2BAGvBvJ;IAFoBwJ,wBAEpBxJ;IADqByJ,yBACrBzJ;;AAEJ,AAA4B;AAC1B;AACA;AACA;AAH0B,QAKxBC,yBAAiB,IAAI,IAArB,IAA6BA,yBAAiB,CAAC5Q,OAAlB,IAA6B,IALlC;AAAA;AAAA;AAAA;AAAA;AAY3B;;AAMD,IAAMqa,gBAAgB,GAAG,EAAzB;AAGA;AACA;;AACA,AAAO,IAAMxJ,mBAAqC,GAAG,EAA9C;AACP,AAAO,IAAMC,sBAAwC,GAAG,EAAjD;AACP,AAAO,IAAMC,gBAAkC,GAAG,EAA3C;AACP,AAAO,IAAMC,aAA+B,GAAG,EAAxC;AACP,AAAO,IAAMC,cAAgC,GAAG,EAAzC;;AAEP,AAAO,IAAMC,YAA8B,GAAG,EAAvC;AAEP,AAAO,IAAMoJ,WAAW,GAAGT,qBAApB;AACP,AAAO,IAAMU,YAAY;AAEvBT,sBAAsB,KAAK7Q,SAA3B,GAAuC6Q,sBAAvC,GAAgE,YAAM,EAFjE;AAIP,IAAIU,SAA0C,GAAG,IAAjD;AACA,IAAIC,0BAAwC,GAAG,IAA/C;AACA,IAAIC,mBAA4B,GAAG,KAAnC;AACA,IAAMvJ,eAAqB,GAAGT,eAAa,EAA3C;AAGA;AACA;AACA;AACA;AACA;AACA;;AACA,AAAO,IAAMnO,KAAG,GACd4O,eAAa,GAAG,KAAhB,GAAwBT,eAAxB,GAAwC;AAAA,SAAMA,eAAa,KAAKS,eAAxB;AAAA,CADnC;AAGP,AAAO,SAASwJ,uBAAT,GAAuD;AAC5D,UAAQZ,iCAAiC,EAAzC;AACE,SAAKC,2BAAL;AACE,aAAOnJ,mBAAP;;AACF,SAAKoJ,8BAAL;AACE,aAAOnJ,sBAAP;;AACF,SAAKoJ,wBAAL;AACE,aAAOnJ,gBAAP;;AACF,SAAKoJ,qBAAL;AACE,aAAOnJ,aAAP;;AACF,SAAKoJ,sBAAL;AACE,aAAOnJ,cAAP;;AACF;AAAA;AAAA;AAAA;AAAA;AAAA;;AAXF;AAcD;;AAED,SAAS2J,gCAAT,CAA0CC,kBAA1C,EAA8D;AAC5D,UAAQA,kBAAR;AACE,SAAKhK,mBAAL;AACE,aAAOmJ,2BAAP;;AACF,SAAKlJ,sBAAL;AACE,aAAOmJ,8BAAP;;AACF,SAAKlJ,gBAAL;AACE,aAAOmJ,wBAAP;;AACF,SAAKlJ,aAAL;AACE,aAAOmJ,qBAAP;;AACF,SAAKlJ,cAAL;AACE,aAAOmJ,sBAAP;;AACF;AAAA;AAAA;AAAA;AAAA;AAAA;;AAXF;AAcD;;AAED,AAAO,SAASU,eAAT,CACLD,kBADK,EAELlR,EAFK,EAGF;AACH,MAAM0G,aAAa,GAAGuK,gCAAgC,CAACC,kBAAD,CAAtD;AACA,SAAOnB,yBAAyB,CAACrJ,aAAD,EAAgB1G,EAAhB,CAAhC;AACD;AAED,AAAO,SAASoR,gBAAT,CACLF,kBADK,EAELG,QAFK,EAGLC,OAHK,EAIL;AACA,MAAM5K,aAAa,GAAGuK,gCAAgC,CAACC,kBAAD,CAAtD;AACA,SAAOlB,0BAA0B,CAACtJ,aAAD,EAAgB2K,QAAhB,EAA0BC,OAA1B,CAAjC;AACD;AAED,AAAO,SAASC,oBAAT,CAA8BF,QAA9B,EAA2D;AAChE;AACA;AACA,MAAIR,SAAS,KAAK,IAAlB,EAAwB;AACtBA,IAAAA,SAAS,GAAG,CAACQ,QAAD,CAAZ,CADsB;;AAGtBP,IAAAA,0BAA0B,GAAGd,0BAA0B,CACrDK,2BADqD,EAErDmB,0BAFqD,CAAvD;AAID,GAPD,MAOO;AACL;AACA;AACAX,IAAAA,SAAS,CAAC1N,IAAV,CAAekO,QAAf;AACD;;AACD,SAAOX,gBAAP;AACD;AAED,AAAO,SAASe,cAAT,CAAwBC,YAAxB,EAA6C;AAClD,MAAIA,YAAY,KAAKhB,gBAArB,EAAuC;AACrCT,IAAAA,wBAAwB,CAACyB,YAAD,CAAxB;AACD;AACF;AAED,AAAO,SAASC,sBAAT,GAAkC;AACvC,MAAIb,0BAA0B,KAAK,IAAnC,EAAyC;AACvC,QAAMnb,IAAI,GAAGmb,0BAAb;AACAA,IAAAA,0BAA0B,GAAG,IAA7B;AACAb,IAAAA,wBAAwB,CAACta,IAAD,CAAxB;AACD;;AACD6b,EAAAA,0BAA0B;AAC3B;;AAED,SAASA,0BAAT,GAAsC;AACpC,MAAI,CAACT,mBAAD,IAAwBF,SAAS,KAAK,IAA1C,EAAgD;AAC9C;AACAE,IAAAA,mBAAmB,GAAG,IAAtB;AACA,QAAIrC,CAAC,GAAG,CAAR;;AACA,IA8BO;AACL,UAAI;AACF,YAAMkD,QAAM,GAAG,IAAf;AACA,YAAMC,MAAK,GAAGhB,SAAd;AACAM,QAAAA,eAAe,CAACjK,mBAAD,EAAoB,YAAM;AACvC,iBAAOwH,CAAC,GAAGmD,MAAK,CAAC9Q,MAAjB,EAAyB2N,CAAC,EAA1B,EAA8B;AAC5B,gBAAI2C,QAAQ,GAAGQ,MAAK,CAACnD,CAAD,CAApB;;AACA,eAAG;AACD2C,cAAAA,QAAQ,GAAGA,QAAQ,CAACO,QAAD,CAAnB;AACD,aAFD,QAESP,QAAQ,KAAK,IAFtB;AAGD;AACF,SAPc,CAAf;AAQAR,QAAAA,SAAS,GAAG,IAAZ;AACD,OAZD,CAYE,OAAO/iB,KAAP,EAAc;AACd;AACA,YAAI+iB,SAAS,KAAK,IAAlB,EAAwB;AACtBA,UAAAA,SAAS,GAAGA,SAAS,CAACiB,KAAV,CAAgBpD,CAAC,GAAG,CAApB,CAAZ;AACD,SAJa;;;AAMdsB,QAAAA,0BAA0B,CACxBK,2BADwB,EAExBsB,sBAFwB,CAA1B;AAIA,cAAM7jB,KAAN;AACD,OAvBD,SAuBU;AACRijB,QAAAA,mBAAmB,GAAG,KAAtB;AACD;AACF;AACF;AACF;;ACzOD;AACA,mBAAe,QAAf;;ACSA;;;;;AAIA,IAAMgB,kBAAkB,GACtB,OAAOC,WAAP,KAAuB,WAAvB,IAAsC,OAAOA,WAAW,CAACC,IAAnB,KAA4B,UADpE;;AAGA,SAASC,WAAT,CAAqBC,WAArB,EAAwD;AACtD,SAASA,WAAF,CAA6BC,QAA7B,EAAP;AACD;;;AAGD,AAA8B;AAC5B,MAAIL,kBAAJ,EAAwB;AACtBC,IAAAA,WAAW,CAACC,IAAZ,mBAAiCI,YAAjC;AACD;AACF;;AAED,AAAO,SAASC,iBAAT,CAA2BlI,KAA3B,EAA+C;AACpD,EAA8B;AAC5B,QAAI2H,kBAAJ,EAAwB;AACtBC,MAAAA,WAAW,CAACC,IAAZ,qBAAmCC,WAAW,CAAC9H,KAAD,CAA9C;AACD;AACF;AACF;AAED,AAAO,SAASmI,iBAAT,GAAmC;AACxC,EAA8B;AAC5B,QAAIR,kBAAJ,EAAwB;AACtBC,MAAAA,WAAW,CAACC,IAAZ,CAAiB,eAAjB;AACD;AACF;AACF;AAED,IAAMrS,iBAAe,GAAG,OAAOC,OAAP,KAAmB,UAAnB,GAAgCA,OAAhC,GAA0CC,GAAlE;;AAGA,IAAM0S,WAAsC,GAAG,IAAI5S,iBAAJ,EAA/C;AACA,IAAI6S,UAAkB,GAAG,CAAzB;;AACA,SAASC,aAAT,CAAuBC,QAAvB,EAAmD;AACjD,MAAI,CAACH,WAAW,CAACnQ,GAAZ,CAAgBsQ,QAAhB,CAAL,EAAgC;AAC9BH,IAAAA,WAAW,CAAC/hB,GAAZ,CAAgBkiB,QAAhB,EAA0BF,UAAU,EAApC;AACD;;AACD,SAASD,WAAW,CAACliB,GAAZ,CAAgBqiB,QAAhB,CAAT;AACD;;AAED,AAAO,SAASC,sBAAT,CAAgCld,KAAhC,EAA8Cid,QAA9C,EAAwE;AAC7E,EAA8B;AAC5B,QAAIZ,kBAAJ,EAAwB;AACtB,UAAMc,EAAE,GAAGH,aAAa,CAACC,QAAD,CAAxB;AACA,UAAMvQ,aAAa,GAAGnP,gBAAgB,CAACyC,KAAK,CAAC1C,IAAP,CAAhB,IAAgC,SAAtD,CAFsB;;AAItBgf,MAAAA,WAAW,CAACC,IAAZ,yBAAuCY,EAAvC,SAA6CzQ,aAA7C;AACAuQ,MAAAA,QAAQ,CAACG,IAAT,CACE;AAAA,eAAMd,WAAW,CAACC,IAAZ,0BAAwCY,EAAxC,SAA8CzQ,aAA9C,CAAN;AAAA,OADF,EAEE;AAAA,eAAM4P,WAAW,CAACC,IAAZ,0BAAwCY,EAAxC,SAA8CzQ,aAA9C,CAAN;AAAA,OAFF;AAID;AACF;AACF;AAED,AAAO,SAAS2Q,wBAAT,CAAkC3I,KAAlC,EAAsD;AAC3D,EAA8B;AAC5B,QAAI2H,kBAAJ,EAAwB;AACtBC,MAAAA,WAAW,CAACC,IAAZ,6BAA2CC,WAAW,CAAC9H,KAAD,CAAtD;AACD;AACF;AACF;AAED,AAAO,SAAS4I,wBAAT,GAA0C;AAC/C,EAA8B;AAC5B,QAAIjB,kBAAJ,EAAwB;AACtBC,MAAAA,WAAW,CAACC,IAAZ,CAAiB,uBAAjB;AACD;AACF;AACF;AAED,AAAO,SAASgB,yBAAT,CAAmC7I,KAAnC,EAAuD;AAC5D,EAA8B;AAC5B,QAAI2H,kBAAJ,EAAwB;AACtBC,MAAAA,WAAW,CAACC,IAAZ,8BAA4CC,WAAW,CAAC9H,KAAD,CAAvD;AACD;AACF;AACF;AAED,AAAO,SAAS8I,yBAAT,GAA2C;AAChD,EAA8B;AAC5B,QAAInB,kBAAJ,EAAwB;AACtBC,MAAAA,WAAW,CAACC,IAAZ,CAAiB,wBAAjB;AACD;AACF;AACF;AAED,AAAO,SAASkB,iBAAT,CAA2B/I,KAA3B,EAA+C;AACpD,EAA8B;AAC5B,QAAI2H,kBAAJ,EAAwB;AACtBC,MAAAA,WAAW,CAACC,IAAZ,qBAAmCC,WAAW,CAAC9H,KAAD,CAA9C;AACD;AACF;AACF;AAED,AAAO,SAASgJ,iBAAT,GAAmC;AACxC,EAA8B;AAC5B,QAAIrB,kBAAJ,EAAwB;AACtBC,MAAAA,WAAW,CAACC,IAAZ,CAAiB,gBAAjB;AACD;AACF;AACF;AAED,AAAO,SAASoB,iBAAT,GAAmC;AACxC,EAA8B;AAC5B,QAAItB,kBAAJ,EAAwB;AACtBC,MAAAA,WAAW,CAACC,IAAZ,CAAiB,eAAjB;AACD;AACF;AACF;AAED,AAAO,SAASqB,mBAAT,CAA6BhH,IAA7B,EAA+C;AACpD,EAA8B;AAC5B,QAAIyF,kBAAJ,EAAwB;AACtBC,MAAAA,WAAW,CAACC,IAAZ,wBAAsCC,WAAW,CAAC5F,IAAD,CAAjD;AACD;AACF;AACF;AAED,AAAO,SAASiH,wBAAT,CAAkC7d,KAAlC,EAAgD4W,IAAhD,EAAkE;AACvE,EAA8B;AAC5B,QAAIyF,kBAAJ,EAAwB;AACtB,UAAM3P,aAAa,GAAGnP,gBAAgB,CAACyC,KAAK,CAAC1C,IAAP,CAAhB,IAAgC,SAAtD,CADsB;;AAGtBgf,MAAAA,WAAW,CAACC,IAAZ,+BAC8BC,WAAW,CAAC5F,IAAD,CADzC,SACmDlK,aADnD;AAGD;AACF;AACF;AAED,AAAO,SAASoR,wBAAT,CAAkC9d,KAAlC,EAAgD4W,IAAhD,EAAkE;AACvE,EAA8B;AAC5B,QAAIyF,kBAAJ,EAAwB;AACtB,UAAM3P,aAAa,GAAGnP,gBAAgB,CAACyC,KAAK,CAAC1C,IAAP,CAAhB,IAAgC,SAAtD,CADsB;;AAGtBgf,MAAAA,WAAW,CAACC,IAAZ,8BAC6BC,WAAW,CAAC5F,IAAD,CADxC,SACkDlK,aADlD;AAGD;AACF;AACF;;ACzJM,IAAMqR,MAAM,GAAG,CAAf;AACP,AAAO,IAAMC,UAAU,GAAG,CAAnB;AAEP;;AACA,AAAO,IAAMC,YAAY,GAAG,CAArB;AACP,AAAO,IAAMC,cAAc,GAAG,CAAvB;AACP,AAAO,IAAMC,WAAW,GAAG,CAApB;AACP,AAAO,IAAMC,gBAAgB,GAAG,EAAzB;;ICPAC,0BAA2BvmB,qBAA3BumB;AAEP,AAAO,IAAMC,YAAY,GAAG,CAArB;AAEP,AAAO,SAASC,wBAAT,GAA4C;AACjD,SAAOF,uBAAuB,CAACG,UAA/B;AACD;;ACRD;;;;AAIA,SAASC,EAAT,CAAYrgB,CAAZ,EAAoBsgB,CAApB,EAA4B;AAC1B,SACGtgB,CAAC,KAAKsgB,CAAN,KAAYtgB,CAAC,KAAK,CAAN,IAAW,IAAIA,CAAJ,KAAU,IAAIsgB,CAArC,CAAD,IAA8CtgB,CAAC,KAAKA,CAAN,IAAWsgB,CAAC,KAAKA,CADjE;AAAA;AAGD;;AAED,IAAMC,QAAqC,GACzC,OAAOvV,MAAM,CAACqV,EAAd,KAAqB,UAArB,GAAkCrV,MAAM,CAACqV,EAAzC,GAA8CA,EADhD;;ACRA,IAAM5R,cAAc,GAAGzD,MAAM,CAACrQ,SAAP,CAAiB8T,cAAxC;AAEA;;;;;;AAKA,SAAS+R,YAAT,CAAsBC,IAAtB,EAAmCC,IAAnC,EAAyD;AACvD,MAAIL,QAAE,CAACI,IAAD,EAAOC,IAAP,CAAN,EAAoB;AAClB,WAAO,IAAP;AACD;;AAED,MACE,OAAOD,IAAP,KAAgB,QAAhB,IACAA,IAAI,KAAK,IADT,IAEA,OAAOC,IAAP,KAAgB,QAFhB,IAGAA,IAAI,KAAK,IAJX,EAKE;AACA,WAAO,KAAP;AACD;;AAED,MAAMC,KAAK,GAAG3V,MAAM,CAAC4V,IAAP,CAAYH,IAAZ,CAAd;AACA,MAAMI,KAAK,GAAG7V,MAAM,CAAC4V,IAAP,CAAYF,IAAZ,CAAd;;AAEA,MAAIC,KAAK,CAAC1T,MAAN,KAAiB4T,KAAK,CAAC5T,MAA3B,EAAmC;AACjC,WAAO,KAAP;AACD,GAnBsD;;;AAsBvD,OAAK,IAAI2N,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG+F,KAAK,CAAC1T,MAA1B,EAAkC2N,CAAC,EAAnC,EAAuC;AACrC,QACE,CAACnM,cAAc,CAAC5T,IAAf,CAAoB6lB,IAApB,EAA0BC,KAAK,CAAC/F,CAAD,CAA/B,CAAD,IACA,CAACyF,QAAE,CAACI,IAAI,CAACE,KAAK,CAAC/F,CAAD,CAAN,CAAL,EAAiB8F,IAAI,CAACC,KAAK,CAAC/F,CAAD,CAAN,CAArB,CAFL,EAGE;AACA,aAAO,KAAP;AACD;AACF;;AAED,SAAO,IAAP;AACD;;ACrBD,SAASkG,aAAT,CAAuBlf,KAAvB,EAA6C;AAC3C,MAAMU,KAAsB,GAAGoQ,CAC3B9Q,KAAK,CAACmf,WAAN,GACEnf,KAAK,CAACmf,WAAN,CAAkB7hB,IADpB,GAEE,IAHgC,CAAtC;AAKA,MAAMoM,MAAM,GAAGoH,CAAU9Q,KAAK,CAACof,YAAT,CAAtB;;AACA,UAAQpf,KAAK,CAACxC,GAAd;AACE,SAAKhE,aAAL;AACE,aAAOiQ,6BAA6B,CAACzJ,KAAK,CAAC1C,IAAP,AAAA,CAApC;;AACF,SAAKnD,aAAL;AACE,aAAOsP,6BAA6B,CAAC,MAAD,AAAA,CAApC;;AACF,SAAKzP,iBAAL;AACE,aAAOyP,6BAA6B,CAAC,UAAD,AAAA,CAApC;;AACF,SAAKnP,qBAAL;AACE,aAAOmP,6BAA6B,CAAC,cAAD,AAAA,CAApC;;AACF,SAAKtQ,iBAAL;AACA,SAAKE,sBAAL;AACA,SAAKa,mBAAL;AACE,aAAOyR,8BAA8B,CAAC3L,KAAK,CAAC1C,IAAP,AAAA,CAArC;;AACF,SAAKxD,UAAL;AACE,aAAO6R,8BAA8B,CAAC3L,KAAK,CAAC1C,IAAN,CAAWO,MAAZ,AAAA,CAArC;;AACF,SAAKpD,KAAL;AACE,aAAOkR,8BAA8B,CAAC3L,KAAK,CAAC1C,IAAN,CAAWQ,OAAZ,AAAA,CAArC;;AACF,SAAK1E,cAAL;AACE,aAAOqS,2BAA2B,CAACzL,KAAK,CAAC1C,IAAP,AAAA,CAAlC;;AACF;AACE,aAAO,EAAP;AApBJ;AAsBD;;AAED,AAAO,SAAS+hB,2BAAT,CAAqCpR,cAArC,EAAoE;AACzE,MAAI;AACF,QAAIrF,IAAI,GAAG,EAAX;AACA,QAAI3I,IAAI,GAAGgO,cAAX;;AACA,OAAG;AACDrF,MAAAA,IAAI,IAAIsW,aAAa,CAACjf,IAAD,CAArB;AACAA,MAAAA,IAAI,GAAGA,IAAI,CAACK,MAAZ;AACD,KAHD,QAGSL,IAHT;;AAIA,WAAO2I,IAAP;AACD,GARD,CAQE,OAAOxK,CAAP,EAAU;AACV,WAAO,+BAA+BA,CAAC,CAAC6O,OAAjC,GAA2C,IAA3C,GAAkD7O,CAAC,CAAC7F,KAA3D;AACD;AACF;;ACzDD,IAAMD,wBAAsB,GAAGR,oBAAoB,CAACQ,sBAApD;AAEA,AAAO,IAAIqI,OAAqB,GAAG,IAA5B;AACP,AAAO,IAAI2e,WAAoB,GAAG,KAA3B;AAEP,AAAO,SAASC,mCAAT,GAA8D;AACnE,EAAa;AACX,QAAI5e,OAAO,KAAK,IAAhB,EAAsB;AACpB,aAAO,IAAP;AACD;;AACD,QAAMD,KAAK,GAAGC,OAAO,CAACwe,WAAtB;;AACA,QAAIze,KAAK,KAAK,IAAV,IAAkB,OAAOA,KAAP,KAAiB,WAAvC,EAAoD;AAClD,aAAOnD,gBAAgB,CAACmD,KAAK,CAACpD,IAAP,CAAvB;AACD;AACF;;AACD,SAAO,IAAP;AACD;;AAED,SAASkiB,yBAAT,GAA6C;AAC3C,EAAa;AACX,QAAI7e,OAAO,KAAK,IAAhB,EAAsB;AACpB,aAAO,EAAP;AACD,KAHU;AAKX;;;AACA,WAAO0e,2BAA2B,CAAC1e,OAAD,CAAlC;AACD;AAEF;;AAED,AAAO,SAAS8e,iBAAT,GAA6B;AAClC,EAAa;AACXnnB,IAAAA,wBAAsB,CAAConB,eAAvB,GAAyC,IAAzC;AACA/e,IAAAA,OAAO,GAAG,IAAV;AACA2e,IAAAA,WAAW,GAAG,KAAd;AACD;AACF;AAED,AAAO,SAASK,eAAT,CAAyB3f,KAAzB,EAAuC;AAC5C,EAAa;AACX1H,IAAAA,wBAAsB,CAAConB,eAAvB,GAAyCF,yBAAzC;AACA7e,IAAAA,OAAO,GAAGX,KAAV;AACAsf,IAAAA,WAAW,GAAG,KAAd;AACD;AACF;AAED,AAAO,SAASM,cAAT,CAAwBC,SAAxB,EAA4C;AACjD,EAAa;AACXP,IAAAA,WAAW,GAAGO,SAAd;AACD;AACF;AAED,AAAO,SAASC,cAAT,GAA0B;AAC/B,EAAa;AACX,WAAOR,WAAP;AACD;AACF;;AClDD,IAAMS,uBAAuB,GAAG;AAC9BC,EAAAA,6BAD8B,YACAhgB,KADA,EACca,QADd,EACmC,EADnC;AAE9Bof,EAAAA,mCAF8B,cAEc,EAFd;AAG9BC,EAAAA,0BAH8B,YAGHlgB,KAHG,EAGWa,QAHX,EAGgC,EAHhC;AAI9Bsf,EAAAA,yBAJ8B,cAII,EAJJ;AAK9BC,EAAAA,sBAL8B,cAKC;AALD,CAAhC;;AAQA,AAAa;AACX,MAAMC,cAAc,GAAG,UAACrgB,KAAD,EAAgC;AACrD,QAAIsgB,eAAe,GAAG,IAAtB;AAEA,QAAIrgB,IAAI,GAAGD,KAAX;;AACA,WAAOC,IAAI,KAAK,IAAhB,EAAsB;AACpB,UAAIA,IAAI,CAACsgB,IAAL,GAAYvC,UAAhB,EAA4B;AAC1BsC,QAAAA,eAAe,GAAGrgB,IAAlB;AACD;;AACDA,MAAAA,IAAI,GAAGA,IAAI,CAACK,MAAZ;AACD;;AAED,WAAOggB,eAAP;AACD,GAZD;;AAcA,MAAME,iBAAiB,GAAG,UAAAzlB,GAAG,EAAI;AAC/B,QAAM0lB,KAAK,GAAG,EAAd;AACA1lB,IAAAA,GAAG,CAAC2lB,OAAJ,CAAY,UAAA1lB,KAAK,EAAI;AACnBylB,MAAAA,KAAK,CAAChT,IAAN,CAAWzS,KAAX;AACD,KAFD;AAGA,WAAOylB,KAAK,CAACE,IAAN,GAAaC,IAAb,CAAkB,IAAlB,CAAP;AACD,GAND;;AAQA,MAAIC,iCAA+C,GAAG,EAAtD;AACA,MAAIC,wCAAsD,GAAG,EAA7D;AACA,MAAIC,wCAAsD,GAAG,EAA7D;AACA,MAAIC,+CAA6D,GAAG,EAApE;AACA,MAAIC,kCAAgD,GAAG,EAAvD;AACA,MAAIC,yCAAuD,GAAG,EAA9D,CA5BW;;AA+BX,MAAMC,4BAA4B,GAAG,IAAIC,GAAJ,EAArC;;AAEArB,EAAAA,uBAAuB,CAACC,6BAAxB,GAAwD,UACtDhgB,KADsD,EAEtDa,QAFsD,EAGnD;AACH;AACA,QAAIsgB,4BAA4B,CAACxU,GAA7B,CAAiC3M,KAAK,CAAC1C,IAAvC,CAAJ,EAAkD;AAChD;AACD;;AAED,QACE,OAAOuD,QAAQ,CAACwgB,kBAAhB,KAAuC,UAAvC;AAEAxgB,IAAAA,QAAQ,CAACwgB,kBAAT,CAA4BC,4BAA5B,KAA6D,IAH/D,EAIE;AACAT,MAAAA,iCAAiC,CAACpT,IAAlC,CAAuCzN,KAAvC;AACD;;AAED,QACEA,KAAK,CAACugB,IAAN,GAAavC,UAAb,IACA,OAAOnd,QAAQ,CAAC0gB,yBAAhB,KAA8C,UAFhD,EAGE;AACAT,MAAAA,wCAAwC,CAACrT,IAAzC,CAA8CzN,KAA9C;AACD;;AAED,QACE,OAAOa,QAAQ,CAAC2gB,yBAAhB,KAA8C,UAA9C,IACA3gB,QAAQ,CAAC2gB,yBAAT,CAAmCF,4BAAnC,KAAoE,IAFtE,EAGE;AACAP,MAAAA,wCAAwC,CAACtT,IAAzC,CAA8CzN,KAA9C;AACD;;AAED,QACEA,KAAK,CAACugB,IAAN,GAAavC,UAAb,IACA,OAAOnd,QAAQ,CAAC4gB,gCAAhB,KAAqD,UAFvD,EAGE;AACAT,MAAAA,+CAA+C,CAACvT,IAAhD,CAAqDzN,KAArD;AACD;;AAED,QACE,OAAOa,QAAQ,CAAC6gB,mBAAhB,KAAwC,UAAxC,IACA7gB,QAAQ,CAAC6gB,mBAAT,CAA6BJ,4BAA7B,KAA8D,IAFhE,EAGE;AACAL,MAAAA,kCAAkC,CAACxT,IAAnC,CAAwCzN,KAAxC;AACD;;AAED,QACEA,KAAK,CAACugB,IAAN,GAAavC,UAAb,IACA,OAAOnd,QAAQ,CAAC8gB,0BAAhB,KAA+C,UAFjD,EAGE;AACAT,MAAAA,yCAAyC,CAACzT,IAA1C,CAA+CzN,KAA/C;AACD;AACF,GAnDD;;AAqDA+f,EAAAA,uBAAuB,CAACE,mCAAxB,GAA8D,YAAM;AAClE;AACA,QAAM2B,6BAA6B,GAAG,IAAIR,GAAJ,EAAtC;;AACA,QAAIP,iCAAiC,CAACxV,MAAlC,GAA2C,CAA/C,EAAkD;AAChDwV,MAAAA,iCAAiC,CAACH,OAAlC,CAA0C,UAAA1gB,KAAK,EAAI;AACjD4hB,QAAAA,6BAA6B,CAACC,GAA9B,CACEtkB,gBAAgB,CAACyC,KAAK,CAAC1C,IAAP,CAAhB,IAAgC,WADlC;AAGA6jB,QAAAA,4BAA4B,CAACU,GAA7B,CAAiC7hB,KAAK,CAAC1C,IAAvC;AACD,OALD;AAMAujB,MAAAA,iCAAiC,GAAG,EAApC;AACD;;AAED,QAAMiB,oCAAoC,GAAG,IAAIV,GAAJ,EAA7C;;AACA,QAAIN,wCAAwC,CAACzV,MAAzC,GAAkD,CAAtD,EAAyD;AACvDyV,MAAAA,wCAAwC,CAACJ,OAAzC,CAAiD,UAAA1gB,KAAK,EAAI;AACxD8hB,QAAAA,oCAAoC,CAACD,GAArC,CACEtkB,gBAAgB,CAACyC,KAAK,CAAC1C,IAAP,CAAhB,IAAgC,WADlC;AAGA6jB,QAAAA,4BAA4B,CAACU,GAA7B,CAAiC7hB,KAAK,CAAC1C,IAAvC;AACD,OALD;AAMAwjB,MAAAA,wCAAwC,GAAG,EAA3C;AACD;;AAED,QAAMiB,oCAAoC,GAAG,IAAIX,GAAJ,EAA7C;;AACA,QAAIL,wCAAwC,CAAC1V,MAAzC,GAAkD,CAAtD,EAAyD;AACvD0V,MAAAA,wCAAwC,CAACL,OAAzC,CAAiD,UAAA1gB,KAAK,EAAI;AACxD+hB,QAAAA,oCAAoC,CAACF,GAArC,CACEtkB,gBAAgB,CAACyC,KAAK,CAAC1C,IAAP,CAAhB,IAAgC,WADlC;AAGA6jB,QAAAA,4BAA4B,CAACU,GAA7B,CAAiC7hB,KAAK,CAAC1C,IAAvC;AACD,OALD;AAOAyjB,MAAAA,wCAAwC,GAAG,EAA3C;AACD;;AAED,QAAMiB,2CAA2C,GAAG,IAAIZ,GAAJ,EAApD;;AACA,QAAIJ,+CAA+C,CAAC3V,MAAhD,GAAyD,CAA7D,EAAgE;AAC9D2V,MAAAA,+CAA+C,CAACN,OAAhD,CAAwD,UAAA1gB,KAAK,EAAI;AAC/DgiB,QAAAA,2CAA2C,CAACH,GAA5C,CACEtkB,gBAAgB,CAACyC,KAAK,CAAC1C,IAAP,CAAhB,IAAgC,WADlC;AAGA6jB,QAAAA,4BAA4B,CAACU,GAA7B,CAAiC7hB,KAAK,CAAC1C,IAAvC;AACD,OALD;AAOA0jB,MAAAA,+CAA+C,GAAG,EAAlD;AACD;;AAED,QAAMiB,8BAA8B,GAAG,IAAIb,GAAJ,EAAvC;;AACA,QAAIH,kCAAkC,CAAC5V,MAAnC,GAA4C,CAAhD,EAAmD;AACjD4V,MAAAA,kCAAkC,CAACP,OAAnC,CAA2C,UAAA1gB,KAAK,EAAI;AAClDiiB,QAAAA,8BAA8B,CAACJ,GAA/B,CACEtkB,gBAAgB,CAACyC,KAAK,CAAC1C,IAAP,CAAhB,IAAgC,WADlC;AAGA6jB,QAAAA,4BAA4B,CAACU,GAA7B,CAAiC7hB,KAAK,CAAC1C,IAAvC;AACD,OALD;AAOA2jB,MAAAA,kCAAkC,GAAG,EAArC;AACD;;AAED,QAAMiB,qCAAqC,GAAG,IAAId,GAAJ,EAA9C;;AACA,QAAIF,yCAAyC,CAAC7V,MAA1C,GAAmD,CAAvD,EAA0D;AACxD6V,MAAAA,yCAAyC,CAACR,OAA1C,CAAkD,UAAA1gB,KAAK,EAAI;AACzDkiB,QAAAA,qCAAqC,CAACL,GAAtC,CACEtkB,gBAAgB,CAACyC,KAAK,CAAC1C,IAAP,CAAhB,IAAgC,WADlC;AAGA6jB,QAAAA,4BAA4B,CAACU,GAA7B,CAAiC7hB,KAAK,CAAC1C,IAAvC;AACD,OALD;AAOA4jB,MAAAA,yCAAyC,GAAG,EAA5C;AACD,KAtEiE;AAyElE;;;AACA,QAAIY,oCAAoC,CAACK,IAArC,GAA4C,CAAhD,EAAmD;AACjD,UAAMC,WAAW,GAAG5B,iBAAiB,CACnCsB,oCADmC,CAArC;;AAGA,YACE,2GACE,2EADF,GAEE,iGAFF,GAGE,8CAJJ,EAKEM,WALF;AAOD;;AAED,QAAIJ,2CAA2C,CAACG,IAA5C,GAAmD,CAAvD,EAA0D;AACxD,UAAMC,YAAW,GAAG5B,iBAAiB,CACnCwB,2CADmC,CAArC;;AAGA,YACE,8EACE,sCADF,GAEE,2EAFF,GAGE,oEAHF,GAIE,oDAJF,GAKE,iEALF,GAME,0FANF,GAOE,8CARJ,EASEI,YATF;AAWD;;AAED,QAAIF,qCAAqC,CAACC,IAAtC,GAA6C,CAAjD,EAAoD;AAClD,UAAMC,aAAW,GAAG5B,iBAAiB,CACnC0B,qCADmC,CAArC;;AAGA,YACE,wEACE,sCADF,GAEE,2EAFF,GAGE,oEAHF,GAIE,8CALJ,EAMEE,aANF;AAQD;;AAED,QAAIR,6BAA6B,CAACO,IAA9B,GAAqC,CAAzC,EAA4C;AAC1C,UAAMC,aAAW,GAAG5B,iBAAiB,CAACoB,6BAAD,CAArC;;AAEA,WACE,0EACE,2EADF,GAEE,iGAFF,GAGE,uEAHF,GAIE,mFAJF,GAKE,sEALF,GAME,+EANF,GAOE,8CARJ,EASEQ,aATF;AAWD;;AAED,QAAIL,oCAAoC,CAACI,IAArC,GAA4C,CAAhD,EAAmD;AACjD,UAAMC,aAAW,GAAG5B,iBAAiB,CACnCuB,oCADmC,CAArC;;AAIA,WACE,iFACE,2EADF,GAEE,oEAFF,GAGE,kEAHF,GAIE,mDAJF,GAKE,0FALF,GAME,qFANF,GAOE,mFAPF,GAQE,sEARF,GASE,+EATF,GAUE,8CAXJ,EAYEK,aAZF;AAcD;;AAED,QAAIH,8BAA8B,CAACE,IAA/B,GAAsC,CAA1C,EAA6C;AAC3C,UAAMC,aAAW,GAAG5B,iBAAiB,CAACyB,8BAAD,CAArC;;AAEA,WACE,2EACE,2EADF,GAEE,oEAFF,GAGE,yEAHF,GAIE,mFAJF,GAKE,sEALF,GAME,+EANF,GAOE,8CARJ,EASEG,aATF;AAWD;AACF,GA1KD;;AA4KA,MAAIC,2BAAsD,GAAG,IAAIjY,GAAJ,EAA7D,CAlQW;;AAqQX,MAAMkY,yBAAyB,GAAG,IAAIlB,GAAJ,EAAlC;;AAEArB,EAAAA,uBAAuB,CAACG,0BAAxB,GAAqD,UACnDlgB,KADmD,EAEnDa,QAFmD,EAGhD;AACH,QAAM0hB,UAAU,GAAGlC,cAAc,CAACrgB,KAAD,CAAjC;;AACA,QAAIuiB,UAAU,KAAK,IAAnB,EAAyB;AACvB,YACE,oEACE,sEAFJ;;AAIA;AACD,KARE;;;AAWH,QAAID,yBAAyB,CAAC3V,GAA1B,CAA8B3M,KAAK,CAAC1C,IAApC,CAAJ,EAA+C;AAC7C;AACD;;AAED,QAAIklB,eAAe,GAAGH,2BAA2B,CAACznB,GAA5B,CAAgC2nB,UAAhC,CAAtB;;AAEA,QACEviB,KAAK,CAAC1C,IAAN,CAAWoR,YAAX,IAA2B,IAA3B,IACA1O,KAAK,CAAC1C,IAAN,CAAWsR,iBAAX,IAAgC,IADhC,IAEC/N,QAAQ,KAAK,IAAb,IAAqB,OAAOA,QAAQ,CAACsO,eAAhB,KAAoC,UAH5D,EAIE;AACA,UAAIqT,eAAe,KAAK5Y,SAAxB,EAAmC;AACjC4Y,QAAAA,eAAe,GAAG,EAAlB;AACAH,QAAAA,2BAA2B,CAACtnB,GAA5B,CAAgCwnB,UAAhC,EAA4CC,eAA5C;AACD;;AACDA,MAAAA,eAAe,CAAC/U,IAAhB,CAAqBzN,KAArB;AACD;AACF,GA/BD;;AAiCA+f,EAAAA,uBAAuB,CAACI,yBAAxB,GAAoD,YAAM;AACtDkC,IAAAA,2BAAF,CAAgE3B,OAAhE,CACE,UAAC+B,UAAD,EAAyBF,UAAzB,EAAwC;AACtC,UAAIE,UAAU,CAACpX,MAAX,KAAsB,CAA1B,EAA6B;AAC3B;AACD;;AACD,UAAMqX,UAAU,GAAGD,UAAU,CAAC,CAAD,CAA7B;AAEA,UAAME,WAAW,GAAG,IAAIvB,GAAJ,EAApB;AACAqB,MAAAA,UAAU,CAAC/B,OAAX,CAAmB,UAAA1gB,KAAK,EAAI;AAC1B2iB,QAAAA,WAAW,CAACd,GAAZ,CAAgBtkB,gBAAgB,CAACyC,KAAK,CAAC1C,IAAP,CAAhB,IAAgC,WAAhD;AACAglB,QAAAA,yBAAyB,CAACT,GAA1B,CAA8B7hB,KAAK,CAAC1C,IAApC;AACD,OAHD;AAKA,UAAM8kB,WAAW,GAAG5B,iBAAiB,CAACmC,WAAD,CAArC;;AAEA,UAAI;AACFC,QAAAA,eAAyB,CAACF,UAAD,CAAzB;;AACA,cACE,oEACE,2EADF,GAEE,6CAFF,GAGE,gDAHF,GAIE,iFALJ,EAMEN,WANF;AAQD,OAVD,SAUU;AACRS,QAAAA,iBAA2B;AAC5B;AACF,KA5BH;AA8BD,GA/BD;;AAiCA9C,EAAAA,uBAAuB,CAACK,sBAAxB,GAAiD,YAAM;AACrDS,IAAAA,iCAAiC,GAAG,EAApC;AACAC,IAAAA,wCAAwC,GAAG,EAA3C;AACAC,IAAAA,wCAAwC,GAAG,EAA3C;AACAC,IAAAA,+CAA+C,GAAG,EAAlD;AACAC,IAAAA,kCAAkC,GAAG,EAArC;AACAC,IAAAA,yCAAyC,GAAG,EAA5C;AACAmB,IAAAA,2BAA2B,GAAG,IAAIjY,GAAJ,EAA9B;AACD,GARD;AASD;;ACtWM,SAAS0Y,mBAAT,CAA6BjX,SAA7B,EAA6CkX,SAA7C,EAAwE;AAC7E,MAAIlX,SAAS,IAAIA,SAAS,CAACmX,YAA3B,EAAyC;AACvC;AACA,QAAMha,KAAK,GAAG,QAAc,EAAd,EAAkB+Z,SAAlB,CAAd;;AACA,QAAMC,YAAY,GAAGnX,SAAS,CAACmX,YAA/B;;AACA,SAAK,IAAMC,QAAX,IAAuBD,YAAvB,EAAqC;AACnC,UAAIha,KAAK,CAACia,QAAD,CAAL,KAAoBrZ,SAAxB,EAAmC;AACjCZ,QAAAA,KAAK,CAACia,QAAD,CAAL,GAAkBD,YAAY,CAACC,QAAD,CAA9B;AACD;AACF;;AACD,WAAOja,KAAP;AACD;;AACD,SAAO+Z,SAAP;AACD;;ACbD;AACA;AACA;AACA,AAAO,IAAMG,qBAAqB,GAAG,UAA9B;;ACyBP,IAAMC,WAA+B,GAAG9V,YAAY,CAAC,IAAD,CAApD;AAEA,IAAI+V,aAAJ;;AACA,AAAa;AACX;AACAA,EAAAA,aAAa,GAAG,EAAhB;AACD;;AAED,IAAIC,uBAAqC,GAAG,IAA5C;AACA,IAAIC,qBAAsD,GAAG,IAA7D;AACA,IAAIC,8BAAwD,GAAG,IAA/D;AAEA,IAAIC,4BAAqC,GAAG,KAA5C;AAEA,AAAO,SAASC,wBAAT,GAA0C;AAC/C;AACA;AACAJ,EAAAA,uBAAuB,GAAG,IAA1B;AACAC,EAAAA,qBAAqB,GAAG,IAAxB;AACAC,EAAAA,8BAA8B,GAAG,IAAjC;;AACA,EAAa;AACXC,IAAAA,4BAA4B,GAAG,KAA/B;AACD;AACF;AAED,AAAO,SAASE,+BAAT,GAAiD;AACtD,EAAa;AACXF,IAAAA,4BAA4B,GAAG,IAA/B;AACD;AACF;AAED,AAAO,SAASG,8BAAT,GAAgD;AACrD,EAAa;AACXH,IAAAA,4BAA4B,GAAG,KAA/B;AACD;AACF;AAED,AAAO,SAASI,YAAT,CAAyBC,aAAzB,EAA+CC,SAA/C,EAAmE;AACxE,MAAMpmB,OAAwB,GAAGmmB,aAAa,CAACvmB,IAAd,CAAmBM,QAApD;;AAEA,MAAIuF,iBAAJ,EAAuB;AACrBsK,IAAAA,IAAI,CAAC0V,WAAD,EAAczlB,OAAO,CAACqmB,aAAtB,EAAqCF,aAArC,CAAJ;AAEAnmB,IAAAA,OAAO,CAACqmB,aAAR,GAAwBD,SAAxB;;AACA,IAAa;AACX,UACEpmB,OAAO,CAACsmB,gBAAR,KAA6Bpa,SAA7B,IACAlM,OAAO,CAACsmB,gBAAR,KAA6B,IAD7B,IAEAtmB,OAAO,CAACsmB,gBAAR,KAA6BZ,aAH/B,EAIE;AACA,cACE,4DACE,uDAFJ;AAID;;AACD1lB,MAAAA,OAAO,CAACsmB,gBAAR,GAA2BZ,aAA3B;AACD;AACF,GAjBD,MAiBO;AACL3V,IAAAA,IAAI,CAAC0V,WAAD,EAAczlB,OAAO,CAACumB,cAAtB,EAAsCJ,aAAtC,CAAJ;AAEAnmB,IAAAA,OAAO,CAACumB,cAAR,GAAyBH,SAAzB;;AACA,IAAa;AACX,UACEpmB,OAAO,CAACwmB,iBAAR,KAA8Bta,SAA9B,IACAlM,OAAO,CAACwmB,iBAAR,KAA8B,IAD9B,IAEAxmB,OAAO,CAACwmB,iBAAR,KAA8Bd,aAHhC,EAIE;AACA,cACE,4DACE,uDAFJ;AAID;;AACD1lB,MAAAA,OAAO,CAACwmB,iBAAR,GAA4Bd,aAA5B;AACD;AACF;AACF;AAED,AAAO,SAASe,WAAT,CAAqBN,aAArB,EAAiD;AACtD,MAAMO,YAAY,GAAGjB,WAAW,CAACxiB,OAAjC;AAEA4M,EAAAA,GAAG,CAAC4V,WAAD,EAAcU,aAAd,CAAH;AAEA,MAAMnmB,OAA0B,GAAGmmB,aAAa,CAACvmB,IAAd,CAAmBM,QAAtD;;AACA,MAAIuF,iBAAJ,EAAuB;AACrBzF,IAAAA,OAAO,CAACqmB,aAAR,GAAwBK,YAAxB;AACD,GAFD,MAEO;AACL1mB,IAAAA,OAAO,CAACumB,cAAR,GAAyBG,YAAzB;AACD;AACF;AAED,AAAO,SAASC,oBAAT,CACL3mB,OADK,EAEL4mB,QAFK,EAGLC,QAHK,EAIL;AACA,MAAI9F,QAAE,CAAC8F,QAAD,EAAWD,QAAX,CAAN,EAA4B;AAC1B;AACA,WAAO,CAAP;AACD,GAHD,MAGO;AACL,QAAME,WAAW,GACf,OAAO9mB,OAAO,CAAC+mB,qBAAf,KAAyC,UAAzC,GACI/mB,OAAO,CAAC+mB,qBAAR,CAA8BF,QAA9B,EAAwCD,QAAxC,CADJ,GAEIpB,qBAHN;;AAKA,IAAa;AACX,UAAI,CAACsB,WAAW,GAAGtB,qBAAf,MAA0CsB,WAA9C,EAA2D;AACzD,cACE,6DACE,sCAFJ,EAGEA,WAHF;AAKD;AACF;;AACD,WAAOA,WAAW,GAAG,CAArB;AACD;AACF;AAED,AAAO,SAASE,wBAAT,CACL9iB,MADK,EAELoY,WAFK,EAGL;AACA;AACA,MAAI/Z,IAAI,GAAG2B,MAAX;;AACA,SAAO3B,IAAI,KAAK,IAAhB,EAAsB;AACpB,QAAME,SAAS,GAAGF,IAAI,CAACE,SAAvB;;AACA,QAAI,CAACoY,eAAe,CAACtY,IAAI,CAAC0kB,UAAN,EAAkB3K,WAAlB,CAApB,EAAoD;AAClD/Z,MAAAA,IAAI,CAAC0kB,UAAL,GAAkBlM,UAAU,CAACxY,IAAI,CAAC0kB,UAAN,EAAkB3K,WAAlB,CAA5B;;AACA,UAAI7Z,SAAS,KAAK,IAAlB,EAAwB;AACtBA,QAAAA,SAAS,CAACwkB,UAAV,GAAuBlM,UAAU,CAACtY,SAAS,CAACwkB,UAAX,EAAuB3K,WAAvB,CAAjC;AACD;AACF,KALD,MAKO,IACL7Z,SAAS,KAAK,IAAd,IACA,CAACoY,eAAe,CAACpY,SAAS,CAACwkB,UAAX,EAAuB3K,WAAvB,CAFX,EAGL;AACA7Z,MAAAA,SAAS,CAACwkB,UAAV,GAAuBlM,UAAU,CAACtY,SAAS,CAACwkB,UAAX,EAAuB3K,WAAvB,CAAjC;AACD,KALM,MAKA;AACL;AACA;AACA;AACD;;AACD/Z,IAAAA,IAAI,GAAGA,IAAI,CAACK,MAAZ;AACD;AACF;AAED,AAAO,SAASskB,sBAAT,CACL3W,cADK,EAELvQ,OAFK,EAGL8mB,WAHK,EAILxK,WAJK,EAKC;AACN,MAAIha,KAAK,GAAGiO,cAAc,CAACzM,KAA3B;;AACA,MAAIxB,KAAK,KAAK,IAAd,EAAoB;AAClB;AACAA,IAAAA,KAAK,CAACM,MAAN,GAAe2N,cAAf;AACD;;AACD,SAAOjO,KAAK,KAAK,IAAjB,EAAuB;AACrB,QAAI6kB,SAAS,SAAb,CADqB;;AAIrB,QAAMC,IAAI,GAAG9kB,KAAK,CAAC+kB,YAAnB;;AACA,QAAID,IAAI,KAAK,IAAb,EAAmB;AACjBD,MAAAA,SAAS,GAAG7kB,KAAK,CAACwB,KAAlB;AAEA,UAAIwjB,UAAU,GAAGF,IAAI,CAACG,YAAtB;;AACA,aAAOD,UAAU,KAAK,IAAtB,EAA4B;AAC1B;AACA,YACEA,UAAU,CAACtnB,OAAX,KAAuBA,OAAvB,IACA,CAACsnB,UAAU,CAACE,YAAX,GAA0BV,WAA3B,MAA4C,CAF9C,EAGE;AACA;AAEA,cAAIxkB,KAAK,CAACxC,GAAN,KAAcpE,cAAlB,EAAkC;AAChC;AACA,gBAAM+rB,MAAM,GAAGC,YAAY,CACzBjR,WADyB,EAEzB4D,iBAAiB,CAACiC,WAAD,CAFQ,CAA3B;AAIAmL,YAAAA,MAAM,CAAC3nB,GAAP,GAAa6nB,WAAb,CANgC;AAQhC;AACA;AACA;;AACAC,YAAAA,aAAa,CAACtlB,KAAD,EAAQmlB,MAAR,CAAb;AACD;;AACDnlB,UAAAA,KAAK,CAAC0U,KAAN,GAAc+D,UAAU,CAACzY,KAAK,CAAC0U,KAAP,EAAcsF,WAAd,CAAxB;AACA,cAAM7Z,SAAS,GAAGH,KAAK,CAACG,SAAxB;;AACA,cAAIA,SAAS,KAAK,IAAlB,EAAwB;AACtBA,YAAAA,SAAS,CAACuU,KAAV,GAAkB+D,UAAU,CAACtY,SAAS,CAACuU,KAAX,EAAkBsF,WAAlB,CAA5B;AACD;;AACD0K,UAAAA,wBAAwB,CAAC1kB,KAAK,CAACM,MAAP,EAAe0Z,WAAf,CAAxB,CArBA;;AAwBA8K,UAAAA,IAAI,CAACpQ,KAAL,GAAa+D,UAAU,CAACqM,IAAI,CAACpQ,KAAN,EAAasF,WAAb,CAAvB,CAxBA;AA2BA;;AACA;AACD;;AACDgL,QAAAA,UAAU,GAAGA,UAAU,CAACO,IAAxB;AACD;AACF,KAzCD,MAyCO,IAAIvlB,KAAK,CAACxC,GAAN,KAAc3D,eAAlB,EAAmC;AACxC;AACAgrB,MAAAA,SAAS,GAAG7kB,KAAK,CAAC1C,IAAN,KAAe2Q,cAAc,CAAC3Q,IAA9B,GAAqC,IAArC,GAA4C0C,KAAK,CAACwB,KAA9D;AACD,KAHM,MAGA,IACLgkB,CACAxlB,KAAK,CAACxC,GAAN,KAAcnD,kBAFT,EAGL;AACA;AACA;AACA;AACA,UAAMorB,cAAc,GAAGzlB,KAAK,CAACM,MAA7B;;AAJA,YAMEmlB,cAAc,KAAK,IANrB;AAAA;AAAA;AAAA;AAAA;;AASAA,MAAAA,cAAc,CAAC/Q,KAAf,GAAuB+D,UAAU,CAACgN,cAAc,CAAC/Q,KAAhB,EAAuBsF,WAAvB,CAAjC;AACA,UAAM7Z,UAAS,GAAGslB,cAAc,CAACtlB,SAAjC;;AACA,UAAIA,UAAS,KAAK,IAAlB,EAAwB;AACtBA,QAAAA,UAAS,CAACuU,KAAV,GAAkB+D,UAAU,CAACtY,UAAS,CAACuU,KAAX,EAAkBsF,WAAlB,CAA5B;AACD,OAbD;AAeA;AACA;AACA;;;AACA0K,MAAAA,wBAAwB,CAACe,cAAD,EAAiBzL,WAAjB,CAAxB;AACA6K,MAAAA,SAAS,GAAG7kB,KAAK,CAACyB,OAAlB;AACD,KAvBM,MAuBA;AACL;AACAojB,MAAAA,SAAS,GAAG7kB,KAAK,CAACwB,KAAlB;AACD;;AAED,QAAIqjB,SAAS,KAAK,IAAlB,EAAwB;AACtB;AACAA,MAAAA,SAAS,CAACvkB,MAAV,GAAmBN,KAAnB;AACD,KAHD,MAGO;AACL;AACA6kB,MAAAA,SAAS,GAAG7kB,KAAZ;;AACA,aAAO6kB,SAAS,KAAK,IAArB,EAA2B;AACzB,YAAIA,SAAS,KAAK5W,cAAlB,EAAkC;AAChC;AACA4W,UAAAA,SAAS,GAAG,IAAZ;AACA;AACD;;AACD,YAAMpjB,OAAO,GAAGojB,SAAS,CAACpjB,OAA1B;;AACA,YAAIA,OAAO,KAAK,IAAhB,EAAsB;AACpB;AACAA,UAAAA,OAAO,CAACnB,MAAR,GAAiBukB,SAAS,CAACvkB,MAA3B;AACAukB,UAAAA,SAAS,GAAGpjB,OAAZ;AACA;AACD,SAZwB;;;AAczBojB,QAAAA,SAAS,GAAGA,SAAS,CAACvkB,MAAtB;AACD;AACF;;AACDN,IAAAA,KAAK,GAAG6kB,SAAR;AACD;AACF;AAED,AAAO,SAASa,oBAAT,CACLzX,cADK,EAEL+L,WAFK,EAGC;AACNqJ,EAAAA,uBAAuB,GAAGpV,cAA1B;AACAqV,EAAAA,qBAAqB,GAAG,IAAxB;AACAC,EAAAA,8BAA8B,GAAG,IAAjC;AAEA,MAAMwB,YAAY,GAAG9W,cAAc,CAAC8W,YAApC;;AACA,MAAIA,YAAY,KAAK,IAArB,EAA2B;AACzB,QAAME,YAAY,GAAGF,YAAY,CAACE,YAAlC;;AACA,QAAIA,YAAY,KAAK,IAArB,EAA2B;AACzB,UAAI3M,gBAAgB,CAACyM,YAAY,CAACrQ,KAAd,EAAqBsF,WAArB,CAApB,EAAuD;AACrD;AACA2L,QAAAA,gCAAgC;AACjC,OAJwB;;;AAMzBZ,MAAAA,YAAY,CAACE,YAAb,GAA4B,IAA5B;AACD;AACF;AACF;AAED,AAAO,SAASW,WAAT,CACLloB,OADK,EAELwnB,YAFK,EAGF;AACH,EAAa;AACX;AACA;AACA,QAAI1B,4BAAJ,EAAkC;AAChC,YACE,wDACE,gFADF,GAEE,iFAFF,GAGE,8CAJJ;AAMD;AACF;;AAED,MAAID,8BAA8B,KAAK7lB,OAAvC,EAAgD,CAAhD,MAEO,IAAIwnB,YAAY,KAAK,KAAjB,IAA0BA,YAAY,KAAK,CAA/C,EAAkD,CAAlD,MAEA;AACL,QAAIW,oBAAJ,CADK;;AAEL,QACE,OAAOX,YAAP,KAAwB,QAAxB,IACAA,YAAY,KAAKhC,qBAFnB,EAGE;AACA;AACAK,MAAAA,8BAA8B,GAAK7lB,OAAnC;AACAmoB,MAAAA,oBAAoB,GAAG3C,qBAAvB;AACD,KAPD,MAOO;AACL2C,MAAAA,oBAAoB,GAAGX,YAAvB;AACD;;AAED,QAAMY,WAAW,GAAG;AAClBpoB,MAAAA,OAAO,EAAIA,OADO;AAElBwnB,MAAAA,YAAY,EAAEW,oBAFI;AAGlBN,MAAAA,IAAI,EAAE;AAHY,KAApB;;AAMA,QAAIjC,qBAAqB,KAAK,IAA9B,EAAoC;AAAA,YAEhCD,uBAAuB,KAAK,IAFI;AAAA;AAAA;AAAA;AAAA;;;AAUlCC,MAAAA,qBAAqB,GAAGwC,WAAxB;AACAzC,MAAAA,uBAAuB,CAAC0B,YAAxB,GAAuC;AACrCrQ,QAAAA,KAAK,EAAE1B,OAD8B;AAErCiS,QAAAA,YAAY,EAAEa,WAFuB;AAGrCC,QAAAA,UAAU,EAAE;AAHyB,OAAvC;AAKD,KAhBD,MAgBO;AACL;AACAzC,MAAAA,qBAAqB,GAAGA,qBAAqB,CAACiC,IAAtB,GAA6BO,WAArD;AACD;AACF;;AACD,SAAO3iB,iBAAiB,GAAGzF,OAAO,CAACqmB,aAAX,GAA2BrmB,OAAO,CAACumB,cAA3D;AACD;;AC1PM,IAAM+B,WAAW,GAAG,CAApB;AACP,AAAO,IAAMC,YAAY,GAAG,CAArB;AACP,AAAO,IAAMZ,WAAW,GAAG,CAApB;AACP,AAAO,IAAMa,aAAa,GAAG,CAAtB;AAGP;AACA;;AACA,IAAIC,cAAc,GAAG,KAArB;AAEA,IAAIC,yBAAJ;AACA,IAAIC,wBAAJ;AACA;AACA,AAAa;AACXD,EAAAA,yBAAyB,GAAG,KAA5B;AACAC,EAAAA,wBAAwB,GAAG,IAA3B;AAID;;AAED,AAAO,SAASC,qBAAT,CAAsCtmB,KAAtC,EAA0D;AAC/D,MAAMmc,KAAyB,GAAG;AAChCoK,IAAAA,SAAS,EAAEvmB,KAAK,CAACwmB,aADe;AAEhCC,IAAAA,eAAe,EAAE,IAFe;AAGhCC,IAAAA,cAAc,EAAE,IAHgB;AAIhCC,IAAAA,MAAM,EAAE;AACNC,MAAAA,OAAO,EAAE;AADH,KAJwB;AAOhCC,IAAAA,OAAO,EAAE;AAPuB,GAAlC;AASA7mB,EAAAA,KAAK,CAAC8mB,WAAN,GAAoB3K,KAApB;AACD;AAED,AAAO,SAAS4K,gBAAT,CACLpmB,OADK,EAELsN,cAFK,EAGC;AACN;AACA,MAAMkO,KAAyB,GAAIlO,cAAc,CAAC6Y,WAAlD;AACA,MAAME,YAAgC,GAAIrmB,OAAO,CAACmmB,WAAlD;;AACA,MAAI3K,KAAK,KAAK6K,YAAd,EAA4B;AAC1B,QAAMC,KAAyB,GAAG;AAChCV,MAAAA,SAAS,EAAES,YAAY,CAACT,SADQ;AAEhCE,MAAAA,eAAe,EAAEO,YAAY,CAACP,eAFE;AAGhCC,MAAAA,cAAc,EAAEM,YAAY,CAACN,cAHG;AAIhCC,MAAAA,MAAM,EAAEK,YAAY,CAACL,MAJW;AAKhCE,MAAAA,OAAO,EAAEG,YAAY,CAACH;AALU,KAAlC;AAOA5Y,IAAAA,cAAc,CAAC6Y,WAAf,GAA6BG,KAA7B;AACD;AACF;AAED,AAAO,SAAS7B,YAAT,CAAsBpO,SAAtB,EAAyCJ,IAAzC,EAAgE;AACrE,MAAMuO,MAAiB,GAAG;AACxBnO,IAAAA,SAAS,EAATA,SADwB;AAExBJ,IAAAA,IAAI,EAAJA,IAFwB;AAIxBpZ,IAAAA,GAAG,EAAEwoB,WAJmB;AAKxBhoB,IAAAA,OAAO,EAAE,IALe;AAMxB2d,IAAAA,QAAQ,EAAE,IANc;AAQxB4J,IAAAA,IAAI,EAAE;AARkB,GAA1B;AAUA,SAAOJ,MAAP;AACD;AAED,AAAO,SAASG,aAAT,CAA8BtlB,KAA9B,EAA4CmlB,MAA5C,EAAmE;AACxE,MAAM2B,WAAW,GAAG9mB,KAAK,CAAC8mB,WAA1B;;AACA,MAAIA,WAAW,KAAK,IAApB,EAA0B;AACxB;AACA;AACD;;AAED,MAAMI,WAA+B,GAAIJ,WAAD,CAAmBH,MAA3D;AACA,MAAMC,OAAO,GAAGM,WAAW,CAACN,OAA5B;;AACA,MAAIA,OAAO,KAAK,IAAhB,EAAsB;AACpB;AACAzB,IAAAA,MAAM,CAACI,IAAP,GAAcJ,MAAd;AACD,GAHD,MAGO;AACLA,IAAAA,MAAM,CAACI,IAAP,GAAcqB,OAAO,CAACrB,IAAtB;AACAqB,IAAAA,OAAO,CAACrB,IAAR,GAAeJ,MAAf;AACD;;AACD+B,EAAAA,WAAW,CAACN,OAAZ,GAAsBzB,MAAtB;;AAEA,EAAa;AACX,QACEkB,wBAAwB,KAAKa,WAA7B,IACA,CAACd,yBAFH,EAGE;AACA,YACE,sEACE,mEADF,GAEE,iEAFF,GAGE,WAJJ;;AAMAA,MAAAA,yBAAyB,GAAG,IAA5B;AACD;AACF;AACF;AAED,AAAO,SAASe,qBAAT,CACLlZ,cADK,EAELmZ,cAFK,EAGL;AACA;AACA;AACA;AACA,MAAIjL,KAAyB,GAAIlO,cAAc,CAAC6Y,WAAhD,CAJA;;AAOA,MAAMnmB,OAAO,GAAGsN,cAAc,CAAC9N,SAA/B;;AACA,MAAIQ,OAAO,KAAK,IAAhB,EAAsB;AACpB,QAAMqmB,YAAgC,GAAIrmB,OAAO,CAACmmB,WAAlD;;AACA,QAAI3K,KAAK,KAAK6K,YAAd,EAA4B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,UAAIK,QAAQ,GAAG,IAAf;AACA,UAAIC,OAAO,GAAG,IAAd;AACA,UAAMb,eAAe,GAAGtK,KAAK,CAACsK,eAA9B;;AACA,UAAIA,eAAe,KAAK,IAAxB,EAA8B;AAC5B;AACA,YAAItB,MAAM,GAAGsB,eAAb;;AACA,WAAG;AACD,cAAMQ,KAAoB,GAAG;AAC3BjQ,YAAAA,SAAS,EAAEmO,MAAM,CAACnO,SADS;AAE3BJ,YAAAA,IAAI,EAAEuO,MAAM,CAACvO,IAFc;AAI3BpZ,YAAAA,GAAG,EAAE2nB,MAAM,CAAC3nB,GAJe;AAK3BQ,YAAAA,OAAO,EAAEmnB,MAAM,CAACnnB,OALW;AAM3B2d,YAAAA,QAAQ,EAAEwJ,MAAM,CAACxJ,QANU;AAQ3B4J,YAAAA,IAAI,EAAE;AARqB,WAA7B;;AAUA,cAAI+B,OAAO,KAAK,IAAhB,EAAsB;AACpBD,YAAAA,QAAQ,GAAGC,OAAO,GAAGL,KAArB;AACD,WAFD,MAEO;AACLK,YAAAA,OAAO,CAAC/B,IAAR,GAAe0B,KAAf;AACAK,YAAAA,OAAO,GAAGL,KAAV;AACD;;AACD9B,UAAAA,MAAM,GAAGA,MAAM,CAACI,IAAhB;AACD,SAlBD,QAkBSJ,MAAM,KAAK,IAlBpB,EAH4B;;;AAwB5B,YAAImC,OAAO,KAAK,IAAhB,EAAsB;AACpBD,UAAAA,QAAQ,GAAGC,OAAO,GAAGF,cAArB;AACD,SAFD,MAEO;AACLE,UAAAA,OAAO,CAAC/B,IAAR,GAAe6B,cAAf;AACAE,UAAAA,OAAO,GAAGF,cAAV;AACD;AACF,OA9BD,MA8BO;AACL;AACAC,QAAAA,QAAQ,GAAGC,OAAO,GAAGF,cAArB;AACD;;AACDjL,MAAAA,KAAK,GAAG;AACNoK,QAAAA,SAAS,EAAES,YAAY,CAACT,SADlB;AAENE,QAAAA,eAAe,EAAEY,QAFX;AAGNX,QAAAA,cAAc,EAAEY,OAHV;AAINX,QAAAA,MAAM,EAAEK,YAAY,CAACL,MAJf;AAKNE,QAAAA,OAAO,EAAEG,YAAY,CAACH;AALhB,OAAR;AAOA5Y,MAAAA,cAAc,CAAC6Y,WAAf,GAA6B3K,KAA7B;AACA;AACD;AACF,GAhED;;;AAmEA,MAAMuK,cAAc,GAAGvK,KAAK,CAACuK,cAA7B;;AACA,MAAIA,cAAc,KAAK,IAAvB,EAA6B;AAC3BvK,IAAAA,KAAK,CAACsK,eAAN,GAAwBW,cAAxB;AACD,GAFD,MAEO;AACLV,IAAAA,cAAc,CAACnB,IAAf,GAAsB6B,cAAtB;AACD;;AACDjL,EAAAA,KAAK,CAACuK,cAAN,GAAuBU,cAAvB;AACD;;AAED,SAASG,kBAAT,CACEtZ,cADF,EAEEkO,KAFF,EAGEgJ,MAHF,EAIEqC,SAJF,EAKEC,SALF,EAME5mB,QANF,EAOO;AACL,UAAQskB,MAAM,CAAC3nB,GAAf;AACE,SAAKyoB,YAAL;AAAmB;AACjB,YAAMjoB,OAAO,GAAGmnB,MAAM,CAACnnB,OAAvB;;AACA,YAAI,OAAOA,OAAP,KAAmB,UAAvB,EAAmC;AACjC;AACA,UAAa;AACX0lB,YAAAA,+BAA+B;AAChC;;AACD,cAAMgE,SAAS,GAAG1pB,OAAO,CAAC/E,IAAR,CAAa4H,QAAb,EAAuB2mB,SAAvB,EAAkCC,SAAlC,CAAlB;;AACA,UAAa;AACX,gBACEE,CACA1Z,cAAc,CAACsS,IAAf,GAAsBvC,UAFxB,EAGE;AACAtV,cAAAA,WAAW;;AACX,kBAAI;AACF1K,gBAAAA,OAAO,CAAC/E,IAAR,CAAa4H,QAAb,EAAuB2mB,SAAvB,EAAkCC,SAAlC;AACD,eAFD,SAEU;AACRne,gBAAAA,YAAY;AACb;AACF;;AACDqa,YAAAA,8BAA8B;AAC/B;;AACD,iBAAO+D,SAAP;AACD,SAvBgB;;;AAyBjB,eAAO1pB,OAAP;AACD;;AACD,SAAKkoB,aAAL;AAAoB;AAClBjY,QAAAA,cAAc,CAAC5N,KAAf,GACG4N,cAAc,CAAC5N,KAAf,GAAuB,CAACd,aAAzB,GAA0CV,UAD5C;AAED;AACD;;AACA,SAAKmnB,WAAL;AAAkB;AAChB,YAAMhoB,QAAO,GAAGmnB,MAAM,CAACnnB,OAAvB;AACA,YAAI4pB,YAAJ;;AACA,YAAI,OAAO5pB,QAAP,KAAmB,UAAvB,EAAmC;AACjC;AACA,UAAa;AACX0lB,YAAAA,+BAA+B;AAChC;;AACDkE,UAAAA,YAAY,GAAG5pB,QAAO,CAAC/E,IAAR,CAAa4H,QAAb,EAAuB2mB,SAAvB,EAAkCC,SAAlC,CAAf;;AACA,UAAa;AACX,gBACEE,CACA1Z,cAAc,CAACsS,IAAf,GAAsBvC,UAFxB,EAGE;AACAtV,cAAAA,WAAW;;AACX,kBAAI;AACF1K,gBAAAA,QAAO,CAAC/E,IAAR,CAAa4H,QAAb,EAAuB2mB,SAAvB,EAAkCC,SAAlC;AACD,eAFD,SAEU;AACRne,gBAAAA,YAAY;AACb;AACF;;AACDqa,YAAAA,8BAA8B;AAC/B;AACF,SApBD,MAoBO;AACL;AACAiE,UAAAA,YAAY,GAAG5pB,QAAf;AACD;;AACD,YAAI4pB,YAAY,KAAK,IAAjB,IAAyBA,YAAY,KAAKhe,SAA9C,EAAyD;AACvD;AACA,iBAAO4d,SAAP;AACD,SA9Be;;;AAgChB,eAAO,QAAc,EAAd,EAAkBA,SAAlB,EAA6BI,YAA7B,CAAP;AACD;;AACD,SAAKvC,WAAL;AAAkB;AAChBc,QAAAA,cAAc,GAAG,IAAjB;AACA,eAAOqB,SAAP;AACD;AAtEH;;AAwEA,SAAOA,SAAP;AACD;;AAED,AAAO,SAASK,kBAAT,CACL5Z,cADK,EAELjF,KAFK,EAGLnI,QAHK,EAILmZ,WAJK,EAKC;AACN;AACA,MAAMmC,KAAyB,GAAIlO,cAAc,CAAC6Y,WAAlD;AAEAX,EAAAA,cAAc,GAAG,KAAjB;;AAEA,EAAa;AACXE,IAAAA,wBAAwB,GAAGlK,KAAK,CAACwK,MAAjC;AACD;;AAED,MAAIF,eAAe,GAAGtK,KAAK,CAACsK,eAA5B;AACA,MAAIC,cAAc,GAAGvK,KAAK,CAACuK,cAA3B,CAXM;;AAcN,MAAIoB,YAAY,GAAG3L,KAAK,CAACwK,MAAN,CAAaC,OAAhC;;AACA,MAAIkB,YAAY,KAAK,IAArB,EAA2B;AACzB3L,IAAAA,KAAK,CAACwK,MAAN,CAAaC,OAAb,GAAuB,IAAvB,CADyB;AAIzB;;AACA,QAAMmB,iBAAiB,GAAGD,YAA1B;AACA,QAAME,kBAAkB,GAAGD,iBAAiB,CAACxC,IAA7C;AACAwC,IAAAA,iBAAiB,CAACxC,IAAlB,GAAyB,IAAzB,CAPyB;;AASzB,QAAImB,cAAc,KAAK,IAAvB,EAA6B;AAC3BD,MAAAA,eAAe,GAAGuB,kBAAlB;AACD,KAFD,MAEO;AACLtB,MAAAA,cAAc,CAACnB,IAAf,GAAsByC,kBAAtB;AACD;;AACDtB,IAAAA,cAAc,GAAGqB,iBAAjB,CAdyB;AAiBzB;AACA;AACA;AACA;;AACA,QAAMpnB,OAAO,GAAGsN,cAAc,CAAC9N,SAA/B;;AACA,QAAIQ,OAAO,KAAK,IAAhB,EAAsB;AACpB;AACA,UAAMqmB,YAAgC,GAAIrmB,OAAO,CAACmmB,WAAlD;AACA,UAAMmB,qBAAqB,GAAGjB,YAAY,CAACN,cAA3C;;AACA,UAAIuB,qBAAqB,KAAKvB,cAA9B,EAA8C;AAC5C,YAAIuB,qBAAqB,KAAK,IAA9B,EAAoC;AAClCjB,UAAAA,YAAY,CAACP,eAAb,GAA+BuB,kBAA/B;AACD,SAFD,MAEO;AACLC,UAAAA,qBAAqB,CAAC1C,IAAtB,GAA6ByC,kBAA7B;AACD;;AACDhB,QAAAA,YAAY,CAACN,cAAb,GAA8BqB,iBAA9B;AACD;AACF;AACF,GAlDK;;;AAqDN,MAAItB,eAAe,KAAK,IAAxB,EAA8B;AAC5B;AACA,QAAIyB,QAAQ,GAAG/L,KAAK,CAACoK,SAArB,CAF4B;AAI5B;;AACA,QAAI4B,QAAQ,GAAGnV,OAAf;AAEA,QAAIoV,YAAY,GAAG,IAAnB;AACA,QAAIC,kBAAkB,GAAG,IAAzB;AACA,QAAIC,iBAAiB,GAAG,IAAxB;AAEA,QAAInD,MAAM,GAAGsB,eAAb;;AACA,OAAG;AACD,UAAMvN,UAAU,GAAGiM,MAAM,CAACvO,IAA1B;AACA,UAAM2R,eAAe,GAAGpD,MAAM,CAACnO,SAA/B;;AACA,UAAI,CAACuB,eAAe,CAACyB,WAAD,EAAcd,UAAd,CAApB,EAA+C;AAC7C;AACA;AACA;AACA,YAAM+N,KAAoB,GAAG;AAC3BjQ,UAAAA,SAAS,EAAEuR,eADgB;AAE3B3R,UAAAA,IAAI,EAAEsC,UAFqB;AAI3B1b,UAAAA,GAAG,EAAE2nB,MAAM,CAAC3nB,GAJe;AAK3BQ,UAAAA,OAAO,EAAEmnB,MAAM,CAACnnB,OALW;AAM3B2d,UAAAA,QAAQ,EAAEwJ,MAAM,CAACxJ,QANU;AAQ3B4J,UAAAA,IAAI,EAAE;AARqB,SAA7B;;AAUA,YAAI+C,iBAAiB,KAAK,IAA1B,EAAgC;AAC9BD,UAAAA,kBAAkB,GAAGC,iBAAiB,GAAGrB,KAAzC;AACAmB,UAAAA,YAAY,GAAGF,QAAf;AACD,SAHD,MAGO;AACLI,UAAAA,iBAAiB,GAAGA,iBAAiB,CAAC/C,IAAlB,GAAyB0B,KAA7C;AACD,SAnB4C;;;AAqB7CkB,QAAAA,QAAQ,GAAG1P,UAAU,CAAC0P,QAAD,EAAWjP,UAAX,CAArB;AACD,OAtBD,MAsBO;AACL;AAEA,YAAIoP,iBAAiB,KAAK,IAA1B,EAAgC;AAC9B,cAAMrB,MAAoB,GAAG;AAC3BjQ,YAAAA,SAAS,EAAEuR,eADgB;AAE3B;AACA;AACA;AACA3R,YAAAA,IAAI,EAAE3D,MALqB;AAO3BzV,YAAAA,GAAG,EAAE2nB,MAAM,CAAC3nB,GAPe;AAQ3BQ,YAAAA,OAAO,EAAEmnB,MAAM,CAACnnB,OARW;AAS3B2d,YAAAA,QAAQ,EAAEwJ,MAAM,CAACxJ,QATU;AAW3B4J,YAAAA,IAAI,EAAE;AAXqB,WAA7B;AAaA+C,UAAAA,iBAAiB,GAAGA,iBAAiB,CAAC/C,IAAlB,GAAyB0B,MAA7C;AACD,SAlBI;;;AAqBLiB,QAAAA,QAAQ,GAAGX,kBAAkB,CAC3BtZ,cAD2B,EAE3BkO,KAF2B,EAG3BgJ,MAH2B,EAI3B+C,QAJ2B,EAK3Blf,KAL2B,EAM3BnI,QAN2B,CAA7B;AAQA,YAAM8a,QAAQ,GAAGwJ,MAAM,CAACxJ,QAAxB;;AACA,YAAIA,QAAQ,KAAK,IAAjB,EAAuB;AACrB1N,UAAAA,cAAc,CAAC5N,KAAf,IAAwBzB,QAAxB;AACA,cAAMioB,OAAO,GAAG1K,KAAK,CAAC0K,OAAtB;;AACA,cAAIA,OAAO,KAAK,IAAhB,EAAsB;AACpB1K,YAAAA,KAAK,CAAC0K,OAAN,GAAgB,CAAC1B,MAAD,CAAhB;AACD,WAFD,MAEO;AACL0B,YAAAA,OAAO,CAACpZ,IAAR,CAAa0X,MAAb;AACD;AACF;AACF;;AACDA,MAAAA,MAAM,GAAGA,MAAM,CAACI,IAAhB;;AACA,UAAIJ,MAAM,KAAK,IAAf,EAAqB;AACnB2C,QAAAA,YAAY,GAAG3L,KAAK,CAACwK,MAAN,CAAaC,OAA5B;;AACA,YAAIkB,YAAY,KAAK,IAArB,EAA2B;AACzB;AACD,SAFD,MAEO;AACL;AACA;AACA,cAAMC,kBAAiB,GAAGD,YAA1B,CAHK;AAKL;;AACA,cAAME,mBAAkB,GAAKD,kBAAiB,CAACxC,IAA/C;AACAwC,UAAAA,kBAAiB,CAACxC,IAAlB,GAAyB,IAAzB;AACAJ,UAAAA,MAAM,GAAG6C,mBAAT;AACA7L,UAAAA,KAAK,CAACuK,cAAN,GAAuBqB,kBAAvB;AACA5L,UAAAA,KAAK,CAACwK,MAAN,CAAaC,OAAb,GAAuB,IAAvB;AACD;AACF;AACF,KAnFD,QAmFS,IAnFT;;AAqFA,QAAI0B,iBAAiB,KAAK,IAA1B,EAAgC;AAC9BF,MAAAA,YAAY,GAAGF,QAAf;AACD;;AAED/L,IAAAA,KAAK,CAACoK,SAAN,GAAoB6B,YAApB;AACAjM,IAAAA,KAAK,CAACsK,eAAN,GAAwB4B,kBAAxB;AACAlM,IAAAA,KAAK,CAACuK,cAAN,GAAuB4B,iBAAvB,CAvG4B;AA0G5B;AACA;AACA;AACA;AACA;AACA;;AACAE,IAAAA,sBAAsB,CAACL,QAAD,CAAtB;AACAla,IAAAA,cAAc,CAACyG,KAAf,GAAuByT,QAAvB;AACAla,IAAAA,cAAc,CAACuY,aAAf,GAA+B0B,QAA/B;AACD;;AAED,EAAa;AACX7B,IAAAA,wBAAwB,GAAG,IAA3B;AACD;AACF;;AAED,SAASoC,YAAT,CAAsB9M,QAAtB,EAAgCje,OAAhC,EAAyC;AAAA,QAErC,OAAOie,QAAP,KAAoB,UAFiB;AAAA;AAAA,oGAKrCA,QALqC;AAAA;AAAA;;AAOvCA,EAAAA,QAAQ,CAAC1iB,IAAT,CAAcyE,OAAd;AACD;;AAED,AAAO,SAASgrB,mCAAT,GAA+C;AACpDvC,EAAAA,cAAc,GAAG,KAAjB;AACD;AAED,AAAO,SAASwC,kCAAT,GAAuD;AAC5D,SAAOxC,cAAP;AACD;AAED,AAAO,SAASyC,iBAAT,CACLC,YADK,EAELC,aAFK,EAGLjoB,QAHK,EAIC;AACN;AACA,MAAMgmB,OAAO,GAAGiC,aAAa,CAACjC,OAA9B;AACAiC,EAAAA,aAAa,CAACjC,OAAd,GAAwB,IAAxB;;AACA,MAAIA,OAAO,KAAK,IAAhB,EAAsB;AACpB,SAAK,IAAI7N,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG6N,OAAO,CAACxb,MAA5B,EAAoC2N,CAAC,EAArC,EAAyC;AACvC,UAAM+P,MAAM,GAAGlC,OAAO,CAAC7N,CAAD,CAAtB;AACA,UAAM2C,QAAQ,GAAGoN,MAAM,CAACpN,QAAxB;;AACA,UAAIA,QAAQ,KAAK,IAAjB,EAAuB;AACrBoN,QAAAA,MAAM,CAACpN,QAAP,GAAkB,IAAlB;AACA8M,QAAAA,YAAY,CAAC9M,QAAD,EAAW9a,QAAX,CAAZ;AACD;AACF;AACF;AACF;;AC/hBD,IAAMmoB,oBAAoB,GAAG,EAA7B;AACA,IAAMC,OAAO,GAAGC,KAAK,CAACD,OAAtB;AAGA;;AACA,AAAO,IAAME,eAAe,GAAG,IAAIpxB,eAAJ,GAAsBqxB,IAA9C;AAEP,IAAIC,uCAAJ;AACA,IAAIC,8BAAJ;AACA,IAAIC,mDAAJ;AACA,IAAIC,2CAAJ;AACA,IAAIC,iCAAJ;AACA,IAAIC,2BAAJ;AACA,IAAIC,qBAAJ;AACA,IAAIC,yCAAJ;AACA,IAAIC,sCAAJ;AACA,IAAIC,iCAAJ;;AAEA,AAAa;AACXT,EAAAA,uCAAuC,GAAG,IAAIjI,GAAJ,EAA1C;AACAkI,EAAAA,8BAA8B,GAAG,IAAIlI,GAAJ,EAAjC;AACAmI,EAAAA,mDAAmD,GAAG,IAAInI,GAAJ,EAAtD;AACAoI,EAAAA,2CAA2C,GAAG,IAAIpI,GAAJ,EAA9C;AACAwI,EAAAA,yCAAyC,GAAG,IAAIxI,GAAJ,EAA5C;AACAqI,EAAAA,iCAAiC,GAAG,IAAIrI,GAAJ,EAApC;AACAyI,EAAAA,sCAAsC,GAAG,IAAIzI,GAAJ,EAAzC;AACA0I,EAAAA,iCAAiC,GAAG,IAAI1I,GAAJ,EAApC;AAEA,MAAM2I,wBAAwB,GAAG,IAAI3I,GAAJ,EAAjC;;AAEAuI,EAAAA,qBAAqB,GAAG,UAAShO,QAAT,EAA0BqO,UAA1B,EAA8C;AACpE,QAAIrO,QAAQ,KAAK,IAAb,IAAqB,OAAOA,QAAP,KAAoB,UAA7C,EAAyD;AACvD;AACD;;AACD,QAAM9gB,GAAG,GAAGmvB,UAAU,GAAG,GAAb,GAAoBrO,QAAhC;;AACA,QAAI,CAACoO,wBAAwB,CAACpd,GAAzB,CAA6B9R,GAA7B,CAAL,EAAwC;AACtCkvB,MAAAA,wBAAwB,CAAClI,GAAzB,CAA6BhnB,GAA7B;;AACA,YACE,qEACE,iCAFJ,EAGEmvB,UAHF,EAIErO,QAJF;AAMD;AACF,GAdD;;AAgBA+N,EAAAA,2BAA2B,GAAG,UAASpsB,IAAT,EAAesqB,YAAf,EAA6B;AACzD,QAAIA,YAAY,KAAKhe,SAArB,EAAgC;AAC9B,UAAM8C,aAAa,GAAGnP,gBAAgB,CAACD,IAAD,CAAhB,IAA0B,WAAhD;;AACA,UAAI,CAACmsB,iCAAiC,CAAC9c,GAAlC,CAAsCD,aAAtC,CAAL,EAA2D;AACzD+c,QAAAA,iCAAiC,CAAC5H,GAAlC,CAAsCnV,aAAtC;;AACA,cACE,qFACE,8BAFJ,EAGEA,aAHF;AAKD;AACF;AACF,GAZD,CA5BW;AA2CX;AACA;AACA;AACA;;;AACAtD,EAAAA,MAAM,CAAC0B,cAAP,CAAsBke,oBAAtB,EAA4C,sBAA5C,EAAoE;AAClE9f,IAAAA,UAAU,EAAE,KADsD;AAElElO,IAAAA,KAAK,EAAE,YAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAUjB;AAZiE,GAApE;AAcAoO,EAAAA,MAAM,CAACwE,MAAP,CAAcob,oBAAd;AACD;;AAED,AAAO,SAASiB,0BAAT,CACLhc,cADK,EAELvC,IAFK,EAGLwe,wBAHK,EAILzC,SAJK,EAKL;AACA,MAAMD,SAAS,GAAGvZ,cAAc,CAACuY,aAAjC;;AAEA,EAAa;AACX,QACEmB,CACA1Z,cAAc,CAACsS,IAAf,GAAsBvC,UAFxB,EAGE;AACAtV,MAAAA,WAAW;;AACX,UAAI;AACF;AACAwhB,QAAAA,wBAAwB,CAACzC,SAAD,EAAYD,SAAZ,CAAxB;AACD,OAHD,SAGU;AACRle,QAAAA,YAAY;AACb;AACF;AACF;;AAED,MAAMse,YAAY,GAAGsC,wBAAwB,CAACzC,SAAD,EAAYD,SAAZ,CAA7C;;AAEA,EAAa;AACXkC,IAAAA,2BAA2B,CAAChe,IAAD,EAAOkc,YAAP,CAA3B;AACD,GAtBD;;;AAwBA,MAAMpB,aAAa,GACjBoB,YAAY,KAAK,IAAjB,IAAyBA,YAAY,KAAKhe,SAA1C,GACI4d,SADJ,GAEI,QAAc,EAAd,EAAkBA,SAAlB,EAA6BI,YAA7B,CAHN;AAIA3Z,EAAAA,cAAc,CAACuY,aAAf,GAA+BA,aAA/B,CA5BA;AA+BA;;AACA,MAAIvY,cAAc,CAACyG,KAAf,KAAyB1B,OAA7B,EAAsC;AACpC;AACA,QAAM8T,WAA6B,GAAI7Y,cAAc,CAAC6Y,WAAtD;AACAA,IAAAA,WAAW,CAACP,SAAZ,GAAwBC,aAAxB;AACD;AACF;AAED,IAAM2D,qBAAqB,GAAG;AAC5B3pB,EAAAA,SAAS,EAATA,SAD4B;AAE5B4pB,EAAAA,eAF4B,YAEZC,IAFY,EAENrsB,OAFM,EAEG2d,QAFH,EAEa;AACvC,QAAM3b,KAAK,GAAGgB,GAAW,CAACqpB,IAAD,CAAzB;AACA,QAAMrT,SAAS,GAAGsT,gBAAgB,EAAlC;AACA,QAAM1T,IAAI,GAAG2T,iBAAiB,CAACvqB,KAAD,CAA9B;AAEA,QAAMmlB,MAAM,GAAGC,YAAY,CAACpO,SAAD,EAAYJ,IAAZ,CAA3B;AACAuO,IAAAA,MAAM,CAACnnB,OAAP,GAAiBA,OAAjB;;AACA,QAAI2d,QAAQ,KAAK/R,SAAb,IAA0B+R,QAAQ,KAAK,IAA3C,EAAiD;AAC/C,MAAa;AACXgO,QAAAA,qBAAqB,CAAChO,QAAD,EAAW,UAAX,CAArB;AACD;;AACDwJ,MAAAA,MAAM,CAACxJ,QAAP,GAAkBA,QAAlB;AACD;;AAED2J,IAAAA,aAAa,CAACtlB,KAAD,EAAQmlB,MAAR,CAAb;AACAqF,IAAAA,qBAAqB,CAACxqB,KAAD,EAAQ4W,IAAR,EAAcI,SAAd,CAArB;;AAWA,IAA8B;AAC5B8G,MAAAA,wBAAwB,CAAC9d,KAAD,EAAQ4W,IAAR,CAAxB;AACD;AACF,GA/B2B;AAgC5B6T,EAAAA,mBAhC4B,YAgCRJ,IAhCQ,EAgCFrsB,OAhCE,EAgCO2d,QAhCP,EAgCiB;AAC3C,QAAM3b,KAAK,GAAGgB,GAAW,CAACqpB,IAAD,CAAzB;AACA,QAAMrT,SAAS,GAAGsT,gBAAgB,EAAlC;AACA,QAAM1T,IAAI,GAAG2T,iBAAiB,CAACvqB,KAAD,CAA9B;AAEA,QAAMmlB,MAAM,GAAGC,YAAY,CAACpO,SAAD,EAAYJ,IAAZ,CAA3B;AACAuO,IAAAA,MAAM,CAAC3nB,GAAP,GAAayoB,YAAb;AACAd,IAAAA,MAAM,CAACnnB,OAAP,GAAiBA,OAAjB;;AAEA,QAAI2d,QAAQ,KAAK/R,SAAb,IAA0B+R,QAAQ,KAAK,IAA3C,EAAiD;AAC/C,MAAa;AACXgO,QAAAA,qBAAqB,CAAChO,QAAD,EAAW,cAAX,CAArB;AACD;;AACDwJ,MAAAA,MAAM,CAACxJ,QAAP,GAAkBA,QAAlB;AACD;;AAED2J,IAAAA,aAAa,CAACtlB,KAAD,EAAQmlB,MAAR,CAAb;AACAqF,IAAAA,qBAAqB,CAACxqB,KAAD,EAAQ4W,IAAR,EAAcI,SAAd,CAArB;;AAWA,IAA8B;AAC5B8G,MAAAA,wBAAwB,CAAC9d,KAAD,EAAQ4W,IAAR,CAAxB;AACD;AACF,GA/D2B;AAgE5B8T,EAAAA,kBAhE4B,YAgETL,IAhES,EAgEH1O,QAhEG,EAgEO;AACjC,QAAM3b,KAAK,GAAGgB,GAAW,CAACqpB,IAAD,CAAzB;AACA,QAAMrT,SAAS,GAAGsT,gBAAgB,EAAlC;AACA,QAAM1T,IAAI,GAAG2T,iBAAiB,CAACvqB,KAAD,CAA9B;AAEA,QAAMmlB,MAAM,GAAGC,YAAY,CAACpO,SAAD,EAAYJ,IAAZ,CAA3B;AACAuO,IAAAA,MAAM,CAAC3nB,GAAP,GAAa6nB,WAAb;;AAEA,QAAI1J,QAAQ,KAAK/R,SAAb,IAA0B+R,QAAQ,KAAK,IAA3C,EAAiD;AAC/C,MAAa;AACXgO,QAAAA,qBAAqB,CAAChO,QAAD,EAAW,aAAX,CAArB;AACD;;AACDwJ,MAAAA,MAAM,CAACxJ,QAAP,GAAkBA,QAAlB;AACD;;AAED2J,IAAAA,aAAa,CAACtlB,KAAD,EAAQmlB,MAAR,CAAb;AACAqF,IAAAA,qBAAqB,CAACxqB,KAAD,EAAQ4W,IAAR,EAAcI,SAAd,CAArB;;AAWA,IAA8B;AAC5B6G,MAAAA,wBAAwB,CAAC7d,KAAD,EAAQ4W,IAAR,CAAxB;AACD;AACF;AA9F2B,CAA9B;;AAiGA,SAAS+T,0BAAT,CACE1c,cADF,EAEEvC,IAFF,EAGEkf,QAHF,EAIEC,QAJF,EAKEC,QALF,EAME5C,QANF,EAOE6C,WAPF,EAQE;AACA,MAAMlqB,QAAQ,GAAGoN,cAAc,CAACnN,SAAhC;;AACA,MAAI,OAAOD,QAAQ,CAACmqB,qBAAhB,KAA0C,UAA9C,EAA0D;AACxD,IAAa;AACX,UACErD,CACA1Z,cAAc,CAACsS,IAAf,GAAsBvC,UAFxB,EAGE;AACAtV,QAAAA,WAAW;;AACX,YAAI;AACF;AACA7H,UAAAA,QAAQ,CAACmqB,qBAAT,CAA+BH,QAA/B,EAAyC3C,QAAzC,EAAmD6C,WAAnD;AACD,SAHD,SAGU;AACRzhB,UAAAA,YAAY;AACb;AACF;AACF;;AACD,QAAM2hB,YAAY,GAAGpqB,QAAQ,CAACmqB,qBAAT,CACnBH,QADmB,EAEnB3C,QAFmB,EAGnB6C,WAHmB,CAArB;;AAMA,IAAa;AACX,UAAIE,YAAY,KAAKrhB,SAArB,EAAgC;AAC9B,cACE,iEACE,mDAFJ,EAGErM,gBAAgB,CAACmO,IAAD,CAAhB,IAA0B,WAH5B;AAKD;AACF;;AAED,WAAOuf,YAAP;AACD;;AAED,MAAIvf,IAAI,CAAC3S,SAAL,IAAkB2S,IAAI,CAAC3S,SAAL,CAAemyB,oBAArC,EAA2D;AACzD,WACE,CAACtM,YAAY,CAACgM,QAAD,EAAWC,QAAX,CAAb,IAAqC,CAACjM,YAAY,CAACkM,QAAD,EAAW5C,QAAX,CADpD;AAGD;;AAED,SAAO,IAAP;AACD;;AAED,SAASiD,kBAAT,CAA4Bld,cAA5B,EAAmDvC,IAAnD,EAA8Dmf,QAA9D,EAA6E;AAC3E,MAAMhqB,QAAQ,GAAGoN,cAAc,CAACnN,SAAhC;;AACA,EAAa;AACX,QAAM1D,IAAI,GAAGG,gBAAgB,CAACmO,IAAD,CAAhB,IAA0B,WAAvC;AACA,QAAM0f,aAAa,GAAGvqB,QAAQ,CAAChD,MAA/B;;AAEA,QAAI,CAACutB,aAAL,EAAoB;AAClB,UAAI1f,IAAI,CAAC3S,SAAL,IAAkB,OAAO2S,IAAI,CAAC3S,SAAL,CAAe8E,MAAtB,KAAiC,UAAvD,EAAmE;AACjE,cACE,iEACE,uEAFJ,EAGET,IAHF;AAKD,OAND,MAMO;AACL,cACE,iEACE,sDAFJ,EAGEA,IAHF;AAKD;AACF;;AAED,QACEyD,QAAQ,CAACwqB,eAAT,IACA,CAACxqB,QAAQ,CAACwqB,eAAT,CAAyBC,oBAD1B,IAEA,CAACzqB,QAAQ,CAAC0qB,KAHZ,EAIE;AACA,YACE,kEACE,sEADF,GAEE,kDAHJ,EAIEnuB,IAJF;AAMD;;AACD,QACEyD,QAAQ,CAAC2qB,eAAT,IACA,CAAC3qB,QAAQ,CAAC2qB,eAAT,CAAyBF,oBAF5B,EAGE;AACA,YACE,kEACE,sEADF,GAEE,uDAHJ,EAIEluB,IAJF;AAMD;;AACD,QAAIyD,QAAQ,CAAC4qB,SAAb,EAAwB;AACtB,YACE,uEACE,uCAFJ,EAGEruB,IAHF;AAKD;;AACD,QAAIyD,QAAQ,CAAC6qB,WAAb,EAA0B;AACxB,YACE,yEACE,yCAFJ,EAGEtuB,IAHF;AAKD;;AAED,IAeO;AACL,UAAIyD,QAAQ,CAAC6N,YAAb,EAA2B;AACzB,cACE,0EACE,0CAFJ,EAGEtR,IAHF;AAKD;;AAED,UACEsO,IAAI,CAACggB,WAAL,IACAhgB,IAAI,CAACgD,YADL,IAEA,CAACmb,sCAAsC,CAACld,GAAvC,CAA2CjB,IAA3C,CAHH,EAIE;AACAme,QAAAA,sCAAsC,CAAChI,GAAvC,CAA2CnW,IAA3C;;AACA,cACE,sEACE,mDAFJ,EAGEtO,IAHF;AAKD;AACF;;AAED,QAAI,OAAOyD,QAAQ,CAAC8qB,qBAAhB,KAA0C,UAA9C,EAA0D;AACxD,YACE,4BACE,iEADF,GAEE,4DAFF,GAGE,6BAJJ,EAKEvuB,IALF;AAOD;;AACD,QACEsO,IAAI,CAAC3S,SAAL,IACA2S,IAAI,CAAC3S,SAAL,CAAemyB,oBADf,IAEA,OAAOrqB,QAAQ,CAACmqB,qBAAhB,KAA0C,WAH5C,EAIE;AACA,YACE,qDACE,+EADF,GAEE,iEAHJ,EAIEztB,gBAAgB,CAACmO,IAAD,CAAhB,IAA0B,kBAJ5B;AAMD;;AACD,QAAI,OAAO7K,QAAQ,CAAC+qB,mBAAhB,KAAwC,UAA5C,EAAwD;AACtD,YACE,4BACE,gEADF,GAEE,sCAHJ,EAIExuB,IAJF;AAMD;;AACD,QAAI,OAAOyD,QAAQ,CAACgrB,wBAAhB,KAA6C,UAAjD,EAA6D;AAC3D,YACE,4BACE,qEADF,GAEE,kEAFF,GAGE,iEAHF,GAIE,yFALJ,EAMEzuB,IANF;AAQD;;AACD,QAAI,OAAOyD,QAAQ,CAACirB,yBAAhB,KAA8C,UAAlD,EAA8D;AAC5D,YACE,4BACE,wEAFJ,EAGE1uB,IAHF;AAKD;;AACD,QAAI,OAAOyD,QAAQ,CAACkrB,gCAAhB,KAAqD,UAAzD,EAAqE;AACnE,YACE,4BACE,sFAFJ,EAGE3uB,IAHF;AAKD;;AACD,QAAM4uB,eAAe,GAAGnrB,QAAQ,CAACmI,KAAT,KAAmB6hB,QAA3C;;AACA,QAAIhqB,QAAQ,CAACmI,KAAT,KAAmBY,SAAnB,IAAgCoiB,eAApC,EAAqD;AACnD,YACE,8DACE,iEAFJ,EAGE5uB,IAHF,EAIEA,IAJF;AAMD;;AACD,QAAIyD,QAAQ,CAACmiB,YAAb,EAA2B;AACzB,YACE,6FACE,2DAFJ,EAGE5lB,IAHF,EAIEA,IAJF;AAMD;;AAED,QACE,OAAOyD,QAAQ,CAACorB,uBAAhB,KAA4C,UAA5C,IACA,OAAOprB,QAAQ,CAACqrB,kBAAhB,KAAuC,UADvC,IAEA,CAAC3C,mDAAmD,CAAC5c,GAApD,CAAwDjB,IAAxD,CAHH,EAIE;AACA6d,MAAAA,mDAAmD,CAAC1H,GAApD,CAAwDnW,IAAxD;;AACA,YACE,6EACE,wDAFJ,EAGEnO,gBAAgB,CAACmO,IAAD,CAHlB;AAKD;;AAED,QAAI,OAAO7K,QAAQ,CAACqpB,wBAAhB,KAA6C,UAAjD,EAA6D;AAC3D,YACE,qEACE,8DAFJ,EAGE9sB,IAHF;AAKD;;AACD,QAAI,OAAOyD,QAAQ,CAACsrB,wBAAhB,KAA6C,UAAjD,EAA6D;AAC3D,YACE,qEACE,8DAFJ,EAGE/uB,IAHF;AAKD;;AACD,QAAI,OAAOsO,IAAI,CAACugB,uBAAZ,KAAwC,UAA5C,EAAwD;AACtD,YACE,iEACE,iEAFJ,EAGE7uB,IAHF;AAKD;;AACD,QAAMmuB,MAAK,GAAG1qB,QAAQ,CAAC0qB,KAAvB;;AACA,QAAIA,MAAK,KAAK,OAAOA,MAAP,KAAiB,QAAjB,IAA6BtC,OAAO,CAACsC,MAAD,CAAzC,CAAT,EAA4D;AAC1D,YAAc,4CAAd,EAA4DnuB,IAA5D;AACD;;AACD,QACE,OAAOyD,QAAQ,CAACsO,eAAhB,KAAoC,UAApC,IACA,OAAOzD,IAAI,CAACkD,iBAAZ,KAAkC,QAFpC,EAGE;AACA,YACE,yEACE,wBAFJ,EAGExR,IAHF;AAKD;AACF;AACF;;AAED,SAASgvB,kBAAT,CAA4Bne,cAA5B,EAAmDpN,QAAnD,EAAwE;AACtEA,EAAAA,QAAQ,CAACwrB,OAAT,GAAmBlC,qBAAnB;AACAlc,EAAAA,cAAc,CAACnN,SAAf,GAA2BD,QAA3B,CAFsE;;AAItEyrB,EAAAA,GAAW,CAACzrB,QAAD,EAAWoN,cAAX,CAAX;;AACA,EAAa;AACXpN,IAAAA,QAAQ,CAAC0rB,sBAAT,GAAkCvD,oBAAlC;AACD;AACF;;AAED,SAASwD,sBAAT,CACEve,cADF,EAEEvC,IAFF,EAGE1C,KAHF,EAIO;AACL,MAAIyjB,uBAAuB,GAAG,KAA9B;AACA,MAAIpe,eAAe,GAAGV,kBAAtB;AACA,MAAIjQ,OAAO,GAAGiQ,kBAAd;AACA,MAAM+d,WAAW,GAAGhgB,IAAI,CAACggB,WAAzB;;AAEA,EAAa;AACX,QAAI,iBAAiBhgB,IAArB,EAA2B;AACzB,UAAMghB,OAAO;AAEXhB,MAAAA,WAAW,KAAK,IAAhB,IACCA,WAAW,KAAK9hB,SAAhB,IACC8hB,WAAW,CAACjuB,QAAZ,KAAyBlC,kBAD1B,IAECmwB,WAAW,CAAC9tB,QAAZ,KAAyBgM,SAL7B,CADyB;;AAQzB,UAAI,CAAC8iB,OAAD,IAAY,CAAC5C,iCAAiC,CAACnd,GAAlC,CAAsCjB,IAAtC,CAAjB,EAA8D;AAC5Doe,QAAAA,iCAAiC,CAACjI,GAAlC,CAAsCnW,IAAtC;AAEA,YAAIihB,QAAQ,GAAG,EAAf;;AACA,YAAIjB,WAAW,KAAK9hB,SAApB,EAA+B;AAC7B+iB,UAAAA,QAAQ,GACN,uCACA,0EADA,GAEA,wDAFA,GAGA,yDAJF;AAKD,SAND,MAMO,IAAI,OAAOjB,WAAP,KAAuB,QAA3B,EAAqC;AAC1CiB,UAAAA,QAAQ,GAAG,8BAA8B,OAAOjB,WAArC,GAAmD,GAA9D;AACD,SAFM,MAEA,IAAIA,WAAW,CAACjuB,QAAZ,KAAyBnC,mBAA7B,EAAkD;AACvDqxB,UAAAA,QAAQ,GAAG,0DAAX;AACD,SAFM,MAEA,IAAIjB,WAAW,CAAC9tB,QAAZ,KAAyBgM,SAA7B,EAAwC;AAC7C;AACA+iB,UAAAA,QAAQ,GAAG,0DAAX;AACD,SAHM,MAGA;AACLA,UAAAA,QAAQ,GACN,iDACAvjB,MAAM,CAAC4V,IAAP,CAAY0M,WAAZ,EAAyB9K,IAAzB,CAA8B,IAA9B,CADA,GAEA,IAHF;AAID;;AACD,cACE,wCACE,qFAFJ,EAGErjB,gBAAgB,CAACmO,IAAD,CAAhB,IAA0B,WAH5B,EAIEihB,QAJF;AAMD;AACF;AACF;;AAED,MAAI,OAAOjB,WAAP,KAAuB,QAAvB,IAAmCA,WAAW,KAAK,IAAvD,EAA6D;AAC3DhuB,IAAAA,OAAO,GAAGkoB,WAAW,CAAE8F,WAAF,CAArB;AACD,GAFD,MAEO,AAA2B;AAChCrd,IAAAA,eAAe,GAAGL,kBAAkB,CAACC,cAAD,EAAiBvC,IAAjB,EAAuB,IAAvB,CAApC;AACA,QAAMgD,YAAY,GAAGhD,IAAI,CAACgD,YAA1B;AACA+d,IAAAA,uBAAuB,GACrB/d,YAAY,KAAK,IAAjB,IAAyBA,YAAY,KAAK9E,SAD5C;AAEAlM,IAAAA,OAAO,GAAG+uB,uBAAuB,GAC7Bhe,gBAAgB,CAACR,cAAD,EAAiBI,eAAjB,CADa,GAE7BV,kBAFJ;AAGD,GA1DI;;;AA6DL,EAAa;AACX,QACEga,CACA1Z,cAAc,CAACsS,IAAf,GAAsBvC,UAFxB,EAGE;AACAtV,MAAAA,WAAW;;AACX,UAAI;AACF,YAAIgD,IAAJ,CAAS1C,KAAT,EAAgBtL,OAAhB,EADE;AAEH,OAFD,SAEU;AACR4L,QAAAA,YAAY;AACb;AACF;AACF;;AAED,MAAMzI,QAAQ,GAAG,IAAI6K,IAAJ,CAAS1C,KAAT,EAAgBtL,OAAhB,CAAjB;AACA,MAAM6tB,KAAK,GAAItd,cAAc,CAACuY,aAAf,GACb3lB,QAAQ,CAAC0qB,KAAT,KAAmB,IAAnB,IAA2B1qB,QAAQ,CAAC0qB,KAAT,KAAmB3hB,SAA9C,GACI/I,QAAQ,CAAC0qB,KADb,GAEI,IAHN;AAIAa,EAAAA,kBAAkB,CAACne,cAAD,EAAiBpN,QAAjB,CAAlB;;AAEA,EAAa;AACX,QAAI,OAAO6K,IAAI,CAACwe,wBAAZ,KAAyC,UAAzC,IAAuDqB,KAAK,KAAK,IAArE,EAA2E;AACzE,UAAM7e,aAAa,GAAGnP,gBAAgB,CAACmO,IAAD,CAAhB,IAA0B,WAAhD;;AACA,UAAI,CAAC4d,8BAA8B,CAAC3c,GAA/B,CAAmCD,aAAnC,CAAL,EAAwD;AACtD4c,QAAAA,8BAA8B,CAACzH,GAA/B,CAAmCnV,aAAnC;;AACA,cACE,mEACE,oEADF,GAEE,kEAFF,GAGE,iFAJJ,EAKEA,aALF,EAME7L,QAAQ,CAAC0qB,KAAT,KAAmB,IAAnB,GAA0B,MAA1B,GAAmC,WANrC,EAOE7e,aAPF;AASD;AACF,KAfU;AAkBX;AACA;;;AACA,QACE,OAAOhB,IAAI,CAACwe,wBAAZ,KAAyC,UAAzC,IACA,OAAOrpB,QAAQ,CAACorB,uBAAhB,KAA4C,UAF9C,EAGE;AACA,UAAIW,kBAAkB,GAAG,IAAzB;AACA,UAAIC,yBAAyB,GAAG,IAAhC;AACA,UAAIC,mBAAmB,GAAG,IAA1B;;AACA,UACE,OAAOjsB,QAAQ,CAACwgB,kBAAhB,KAAuC,UAAvC,IACAxgB,QAAQ,CAACwgB,kBAAT,CAA4BC,4BAA5B,KAA6D,IAF/D,EAGE;AACAsL,QAAAA,kBAAkB,GAAG,oBAArB;AACD,OALD,MAKO,IAAI,OAAO/rB,QAAQ,CAAC0gB,yBAAhB,KAA8C,UAAlD,EAA8D;AACnEqL,QAAAA,kBAAkB,GAAG,2BAArB;AACD;;AACD,UACE,OAAO/rB,QAAQ,CAAC2gB,yBAAhB,KAA8C,UAA9C,IACA3gB,QAAQ,CAAC2gB,yBAAT,CAAmCF,4BAAnC,KAAoE,IAFtE,EAGE;AACAuL,QAAAA,yBAAyB,GAAG,2BAA5B;AACD,OALD,MAKO,IACL,OAAOhsB,QAAQ,CAAC4gB,gCAAhB,KAAqD,UADhD,EAEL;AACAoL,QAAAA,yBAAyB,GAAG,kCAA5B;AACD;;AACD,UACE,OAAOhsB,QAAQ,CAAC6gB,mBAAhB,KAAwC,UAAxC,IACA7gB,QAAQ,CAAC6gB,mBAAT,CAA6BJ,4BAA7B,KAA8D,IAFhE,EAGE;AACAwL,QAAAA,mBAAmB,GAAG,qBAAtB;AACD,OALD,MAKO,IAAI,OAAOjsB,QAAQ,CAAC8gB,0BAAhB,KAA+C,UAAnD,EAA+D;AACpEmL,QAAAA,mBAAmB,GAAG,4BAAtB;AACD;;AACD,UACEF,kBAAkB,KAAK,IAAvB,IACAC,yBAAyB,KAAK,IAD9B,IAEAC,mBAAmB,KAAK,IAH1B,EAIE;AACA,YAAMpgB,cAAa,GAAGnP,gBAAgB,CAACmO,IAAD,CAAhB,IAA0B,WAAhD;;AACA,YAAMqhB,UAAU,GACd,OAAOrhB,IAAI,CAACwe,wBAAZ,KAAyC,UAAzC,GACI,4BADJ,GAEI,2BAHN;;AAIA,YAAI,CAACV,2CAA2C,CAAC7c,GAA5C,CAAgDD,cAAhD,CAAL,EAAqE;AACnE8c,UAAAA,2CAA2C,CAAC3H,GAA5C,CAAgDnV,cAAhD;;AACA,gBACE,6FACE,yEADF,GAEE,+EAFF,GAGE,sDAJJ,EAKEA,cALF,EAMEqgB,UANF,EAOEH,kBAAkB,KAAK,IAAvB,YAAqCA,kBAArC,GAA4D,EAP9D,EAQEC,yBAAyB,KAAK,IAA9B,YACWA,yBADX,GAEI,EAVN,EAWEC,mBAAmB,KAAK,IAAxB,YAAsCA,mBAAtC,GAA8D,EAXhE;AAaD;AACF;AACF;AACF,GAnKI;AAsKL;;;AACA,MAAIL,uBAAJ,EAA6B;AAC3Bre,IAAAA,YAAY,CAACH,cAAD,EAAiBI,eAAjB,EAAkC3Q,OAAlC,CAAZ;AACD;;AAED,SAAOmD,QAAP;AACD;;AAED,SAASmsB,sBAAT,CAAgC/e,cAAhC,EAAgDpN,QAAhD,EAA0D;AACxD,MAAMiqB,QAAQ,GAAGjqB,QAAQ,CAAC0qB,KAA1B;;AAEA,MAAI,OAAO1qB,QAAQ,CAACwgB,kBAAhB,KAAuC,UAA3C,EAAuD;AACrDxgB,IAAAA,QAAQ,CAACwgB,kBAAT;AACD;;AACD,MAAI,OAAOxgB,QAAQ,CAAC0gB,yBAAhB,KAA8C,UAAlD,EAA8D;AAC5D1gB,IAAAA,QAAQ,CAAC0gB,yBAAT;AACD;;AAED,MAAIuJ,QAAQ,KAAKjqB,QAAQ,CAAC0qB,KAA1B,EAAiC;AAC/B,IAAa;AACX,YACE,kEACE,0CADF,GAEE,qCAHJ,EAIEhuB,gBAAgB,CAAC0Q,cAAc,CAAC3Q,IAAhB,CAAhB,IAAyC,WAJ3C;AAMD;;AACD6sB,IAAAA,qBAAqB,CAACM,mBAAtB,CAA0C5pB,QAA1C,EAAoDA,QAAQ,CAAC0qB,KAA7D,EAAoE,IAApE;AACD;AACF;;AAED,SAAS0B,6BAAT,CACEhf,cADF,EAEEpN,QAFF,EAGEgqB,QAHF,EAIEE,WAJF,EAKE;AACA,MAAMD,QAAQ,GAAGjqB,QAAQ,CAAC0qB,KAA1B;;AACA,MAAI,OAAO1qB,QAAQ,CAAC2gB,yBAAhB,KAA8C,UAAlD,EAA8D;AAC5D3gB,IAAAA,QAAQ,CAAC2gB,yBAAT,CAAmCqJ,QAAnC,EAA6CE,WAA7C;AACD;;AACD,MAAI,OAAOlqB,QAAQ,CAAC4gB,gCAAhB,KAAqD,UAAzD,EAAqE;AACnE5gB,IAAAA,QAAQ,CAAC4gB,gCAAT,CAA0CoJ,QAA1C,EAAoDE,WAApD;AACD;;AAED,MAAIlqB,QAAQ,CAAC0qB,KAAT,KAAmBT,QAAvB,EAAiC;AAC/B,IAAa;AACX,UAAMpe,aAAa,GACjBnP,gBAAgB,CAAC0Q,cAAc,CAAC3Q,IAAhB,CAAhB,IAAyC,WAD3C;;AAEA,UAAI,CAAC+rB,uCAAuC,CAAC1c,GAAxC,CAA4CD,aAA5C,CAAL,EAAiE;AAC/D2c,QAAAA,uCAAuC,CAACxH,GAAxC,CAA4CnV,aAA5C;;AACA,cACE,2DACE,wDADF,GAEE,qCAHJ,EAIEA,aAJF;AAMD;AACF;;AACDyd,IAAAA,qBAAqB,CAACM,mBAAtB,CAA0C5pB,QAA1C,EAAoDA,QAAQ,CAAC0qB,KAA7D,EAAoE,IAApE;AACD;AACF;;;AAGD,SAAS2B,kBAAT,CACEjf,cADF,EAEEvC,IAFF,EAGEmf,QAHF,EAIE7Q,WAJF,EAKQ;AACN,EAAa;AACXmR,IAAAA,kBAAkB,CAACld,cAAD,EAAiBvC,IAAjB,EAAuBmf,QAAvB,CAAlB;AACD;;AAED,MAAMhqB,QAAQ,GAAGoN,cAAc,CAACnN,SAAhC;AACAD,EAAAA,QAAQ,CAACmI,KAAT,GAAiB6hB,QAAjB;AACAhqB,EAAAA,QAAQ,CAAC0qB,KAAT,GAAiBtd,cAAc,CAACuY,aAAhC;AACA3lB,EAAAA,QAAQ,CAACuoB,IAAT,GAAgBD,eAAhB;AAEA7C,EAAAA,qBAAqB,CAACrY,cAAD,CAArB;AAEA,MAAMyd,WAAW,GAAGhgB,IAAI,CAACggB,WAAzB;;AACA,MAAI,OAAOA,WAAP,KAAuB,QAAvB,IAAmCA,WAAW,KAAK,IAAvD,EAA6D;AAC3D7qB,IAAAA,QAAQ,CAACnD,OAAT,GAAmBkoB,WAAW,CAAC8F,WAAD,CAA9B;AACD,GAFD,MAEO,AAEA;AACL,QAAMrd,eAAe,GAAGL,kBAAkB,CAACC,cAAD,EAAiBvC,IAAjB,EAAuB,IAAvB,CAA1C;AACA7K,IAAAA,QAAQ,CAACnD,OAAT,GAAmB+Q,gBAAgB,CAACR,cAAD,EAAiBI,eAAjB,CAAnC;AACD;;AAED,EAAa;AACX,QAAIxN,QAAQ,CAAC0qB,KAAT,KAAmBV,QAAvB,EAAiC;AAC/B,UAAMne,aAAa,GAAGnP,gBAAgB,CAACmO,IAAD,CAAhB,IAA0B,WAAhD;;AACA,UAAI,CAACke,yCAAyC,CAACjd,GAA1C,CAA8CD,aAA9C,CAAL,EAAmE;AACjEkd,QAAAA,yCAAyC,CAAC/H,GAA1C,CAA8CnV,aAA9C;;AACA,cACE,iEACE,wDADF,GAEE,oDAHJ,EAIEA,aAJF;AAMD;AACF;;AAED,QAAIuB,cAAc,CAACsS,IAAf,GAAsBvC,UAA1B,EAAsC;AACpC+B,MAAAA,uBAAuB,CAACG,0BAAxB,CACEjS,cADF,EAEEpN,QAFF;AAID;;AAED,IAAmC;AACjCkf,MAAAA,uBAAuB,CAACC,6BAAxB,CACE/R,cADF,EAEEpN,QAFF;AAID;AACF;;AAEDgnB,EAAAA,kBAAkB,CAAC5Z,cAAD,EAAiB4c,QAAjB,EAA2BhqB,QAA3B,EAAqCmZ,WAArC,CAAlB;AACAnZ,EAAAA,QAAQ,CAAC0qB,KAAT,GAAiBtd,cAAc,CAACuY,aAAhC;AAEA,MAAM0D,wBAAwB,GAAGxe,IAAI,CAACwe,wBAAtC;;AACA,MAAI,OAAOA,wBAAP,KAAoC,UAAxC,EAAoD;AAClDD,IAAAA,0BAA0B,CACxBhc,cADwB,EAExBvC,IAFwB,EAGxBwe,wBAHwB,EAIxBW,QAJwB,CAA1B;AAMAhqB,IAAAA,QAAQ,CAAC0qB,KAAT,GAAiBtd,cAAc,CAACuY,aAAhC;AACD,GA/DK;AAkEN;;;AACA,MACE,OAAO9a,IAAI,CAACwe,wBAAZ,KAAyC,UAAzC,IACA,OAAOrpB,QAAQ,CAACorB,uBAAhB,KAA4C,UAD5C,KAEC,OAAOprB,QAAQ,CAAC0gB,yBAAhB,KAA8C,UAA9C,IACC,OAAO1gB,QAAQ,CAACwgB,kBAAhB,KAAuC,UAHzC,CADF,EAKE;AACA2L,IAAAA,sBAAsB,CAAC/e,cAAD,EAAiBpN,QAAjB,CAAtB,CADA;AAGA;;AACAgnB,IAAAA,kBAAkB,CAAC5Z,cAAD,EAAiB4c,QAAjB,EAA2BhqB,QAA3B,EAAqCmZ,WAArC,CAAlB;AACAnZ,IAAAA,QAAQ,CAAC0qB,KAAT,GAAiBtd,cAAc,CAACuY,aAAhC;AACD;;AAED,MAAI,OAAO3lB,QAAQ,CAACssB,iBAAhB,KAAsC,UAA1C,EAAsD;AACpDlf,IAAAA,cAAc,CAAC5N,KAAf,IAAwB7B,MAAxB;AACD;AACF;;AAED,SAAS4uB,wBAAT,CACEnf,cADF,EAEEvC,IAFF,EAGEmf,QAHF,EAIE7Q,WAJF,EAKW;AACT,MAAMnZ,QAAQ,GAAGoN,cAAc,CAACnN,SAAhC;AAEA,MAAM8pB,QAAQ,GAAG3c,cAAc,CAACof,aAAhC;AACAxsB,EAAAA,QAAQ,CAACmI,KAAT,GAAiB4hB,QAAjB;AAEA,MAAM0C,UAAU,GAAGzsB,QAAQ,CAACnD,OAA5B;AACA,MAAMguB,WAAW,GAAGhgB,IAAI,CAACggB,WAAzB;AACA,MAAIX,WAAW,GAAGpd,kBAAlB;;AACA,MAAI,OAAO+d,WAAP,KAAuB,QAAvB,IAAmCA,WAAW,KAAK,IAAvD,EAA6D;AAC3DX,IAAAA,WAAW,GAAGnF,WAAW,CAAC8F,WAAD,CAAzB;AACD,GAFD,MAEO,AAA2B;AAChC,QAAM6B,yBAAyB,GAAGvf,kBAAkB,CAClDC,cADkD,EAElDvC,IAFkD,EAGlD,IAHkD,CAApD;AAKAqf,IAAAA,WAAW,GAAGtc,gBAAgB,CAACR,cAAD,EAAiBsf,yBAAjB,CAA9B;AACD;;AAED,MAAMrD,wBAAwB,GAAGxe,IAAI,CAACwe,wBAAtC;AACA,MAAMsD,gBAAgB,GACpB,OAAOtD,wBAAP,KAAoC,UAApC,IACA,OAAOrpB,QAAQ,CAACorB,uBAAhB,KAA4C,UAF9C,CArBS;AA0BT;AACA;AAEA;AACA;;AACA,MACE,CAACuB,gBAAD,KACC,OAAO3sB,QAAQ,CAAC4gB,gCAAhB,KAAqD,UAArD,IACC,OAAO5gB,QAAQ,CAAC2gB,yBAAhB,KAA8C,UAFhD,CADF,EAIE;AACA,QAAIoJ,QAAQ,KAAKC,QAAb,IAAyByC,UAAU,KAAKvC,WAA5C,EAAyD;AACvDkC,MAAAA,6BAA6B,CAC3Bhf,cAD2B,EAE3BpN,QAF2B,EAG3BgqB,QAH2B,EAI3BE,WAJ2B,CAA7B;AAMD;AACF;;AAEDrC,EAAAA,mCAAmC;AAEnC,MAAMoC,QAAQ,GAAG7c,cAAc,CAACuY,aAAhC;AACA,MAAI0B,QAAQ,GAAIrnB,QAAQ,CAAC0qB,KAAT,GAAiBT,QAAjC;AACAjD,EAAAA,kBAAkB,CAAC5Z,cAAD,EAAiB4c,QAAjB,EAA2BhqB,QAA3B,EAAqCmZ,WAArC,CAAlB;AACAkO,EAAAA,QAAQ,GAAGja,cAAc,CAACuY,aAA1B;;AACA,MACEoE,QAAQ,KAAKC,QAAb,IACAC,QAAQ,KAAK5C,QADb,IAEA,CAACvZ,iBAAiB,EAFlB,IAGA,CAACga,kCAAkC,EAJrC,EAKE;AACA;AACA;AACA,QAAI,OAAO9nB,QAAQ,CAACssB,iBAAhB,KAAsC,UAA1C,EAAsD;AACpDlf,MAAAA,cAAc,CAAC5N,KAAf,IAAwB7B,MAAxB;AACD;;AACD,WAAO,KAAP;AACD;;AAED,MAAI,OAAO0rB,wBAAP,KAAoC,UAAxC,EAAoD;AAClDD,IAAAA,0BAA0B,CACxBhc,cADwB,EAExBvC,IAFwB,EAGxBwe,wBAHwB,EAIxBW,QAJwB,CAA1B;AAMA3C,IAAAA,QAAQ,GAAGja,cAAc,CAACuY,aAA1B;AACD;;AAED,MAAMyE,YAAY,GAChBtC,kCAAkC,MAClCgC,0BAA0B,CACxB1c,cADwB,EAExBvC,IAFwB,EAGxBkf,QAHwB,EAIxBC,QAJwB,EAKxBC,QALwB,EAMxB5C,QANwB,EAOxB6C,WAPwB,CAF5B;;AAYA,MAAIE,YAAJ,EAAkB;AAChB;AACA;AACA,QACE,CAACuC,gBAAD,KACC,OAAO3sB,QAAQ,CAAC0gB,yBAAhB,KAA8C,UAA9C,IACC,OAAO1gB,QAAQ,CAACwgB,kBAAhB,KAAuC,UAFzC,CADF,EAIE;AACA,UAAI,OAAOxgB,QAAQ,CAACwgB,kBAAhB,KAAuC,UAA3C,EAAuD;AACrDxgB,QAAAA,QAAQ,CAACwgB,kBAAT;AACD;;AACD,UAAI,OAAOxgB,QAAQ,CAAC0gB,yBAAhB,KAA8C,UAAlD,EAA8D;AAC5D1gB,QAAAA,QAAQ,CAAC0gB,yBAAT;AACD;AACF;;AACD,QAAI,OAAO1gB,QAAQ,CAACssB,iBAAhB,KAAsC,UAA1C,EAAsD;AACpDlf,MAAAA,cAAc,CAAC5N,KAAf,IAAwB7B,MAAxB;AACD;AACF,GAlBD,MAkBO;AACL;AACA;AACA,QAAI,OAAOqC,QAAQ,CAACssB,iBAAhB,KAAsC,UAA1C,EAAsD;AACpDlf,MAAAA,cAAc,CAAC5N,KAAf,IAAwB7B,MAAxB;AACD,KALI;AAQL;;;AACAyP,IAAAA,cAAc,CAACof,aAAf,GAA+BxC,QAA/B;AACA5c,IAAAA,cAAc,CAACuY,aAAf,GAA+B0B,QAA/B;AACD,GArHQ;AAwHT;;;AACArnB,EAAAA,QAAQ,CAACmI,KAAT,GAAiB6hB,QAAjB;AACAhqB,EAAAA,QAAQ,CAAC0qB,KAAT,GAAiBrD,QAAjB;AACArnB,EAAAA,QAAQ,CAACnD,OAAT,GAAmBqtB,WAAnB;AAEA,SAAOE,YAAP;AACD;;;AAGD,SAASwC,mBAAT,CACE9sB,OADF,EAEEsN,cAFF,EAGEvC,IAHF,EAIEmf,QAJF,EAKE7Q,WALF,EAMW;AACT,MAAMnZ,QAAQ,GAAGoN,cAAc,CAACnN,SAAhC;AAEAimB,EAAAA,gBAAgB,CAACpmB,OAAD,EAAUsN,cAAV,CAAhB;AAEA,MAAMyf,kBAAkB,GAAGzf,cAAc,CAACof,aAA1C;AACA,MAAMzC,QAAQ,GACZ3c,cAAc,CAAC3Q,IAAf,KAAwB2Q,cAAc,CAAC0f,WAAvC,GACID,kBADJ,GAEI5K,mBAAmB,CAAC7U,cAAc,CAAC3Q,IAAhB,EAAsBowB,kBAAtB,CAHzB;AAIA7sB,EAAAA,QAAQ,CAACmI,KAAT,GAAiB4hB,QAAjB;AACA,MAAMgD,kBAAkB,GAAG3f,cAAc,CAAC4f,YAA1C;AAEA,MAAMP,UAAU,GAAGzsB,QAAQ,CAACnD,OAA5B;AACA,MAAMguB,WAAW,GAAGhgB,IAAI,CAACggB,WAAzB;AACA,MAAIX,WAAW,GAAGpd,kBAAlB;;AACA,MAAI,OAAO+d,WAAP,KAAuB,QAAvB,IAAmCA,WAAW,KAAK,IAAvD,EAA6D;AAC3DX,IAAAA,WAAW,GAAGnF,WAAW,CAAC8F,WAAD,CAAzB;AACD,GAFD,MAEO,AAA2B;AAChC,QAAMoC,mBAAmB,GAAG9f,kBAAkB,CAACC,cAAD,EAAiBvC,IAAjB,EAAuB,IAAvB,CAA9C;AACAqf,IAAAA,WAAW,GAAGtc,gBAAgB,CAACR,cAAD,EAAiB6f,mBAAjB,CAA9B;AACD;;AAED,MAAM5D,wBAAwB,GAAGxe,IAAI,CAACwe,wBAAtC;AACA,MAAMsD,gBAAgB,GACpB,OAAOtD,wBAAP,KAAoC,UAApC,IACA,OAAOrpB,QAAQ,CAACorB,uBAAhB,KAA4C,UAF9C,CAxBS;AA6BT;AACA;AAEA;AACA;;AACA,MACE,CAACuB,gBAAD,KACC,OAAO3sB,QAAQ,CAAC4gB,gCAAhB,KAAqD,UAArD,IACC,OAAO5gB,QAAQ,CAAC2gB,yBAAhB,KAA8C,UAFhD,CADF,EAIE;AACA,QACEkM,kBAAkB,KAAKE,kBAAvB,IACAN,UAAU,KAAKvC,WAFjB,EAGE;AACAkC,MAAAA,6BAA6B,CAC3Bhf,cAD2B,EAE3BpN,QAF2B,EAG3BgqB,QAH2B,EAI3BE,WAJ2B,CAA7B;AAMD;AACF;;AAEDrC,EAAAA,mCAAmC;AAEnC,MAAMoC,QAAQ,GAAG7c,cAAc,CAACuY,aAAhC;AACA,MAAI0B,QAAQ,GAAIrnB,QAAQ,CAAC0qB,KAAT,GAAiBT,QAAjC;AACAjD,EAAAA,kBAAkB,CAAC5Z,cAAD,EAAiB4c,QAAjB,EAA2BhqB,QAA3B,EAAqCmZ,WAArC,CAAlB;AACAkO,EAAAA,QAAQ,GAAGja,cAAc,CAACuY,aAA1B;;AAEA,MACEkH,kBAAkB,KAAKE,kBAAvB,IACA9C,QAAQ,KAAK5C,QADb,IAEA,CAACvZ,iBAAiB,EAFlB,IAGA,CAACga,kCAAkC,EAJrC,EAKE;AACA;AACA;AACA,QAAI,OAAO9nB,QAAQ,CAACqrB,kBAAhB,KAAuC,UAA3C,EAAuD;AACrD,UACEwB,kBAAkB,KAAK/sB,OAAO,CAAC0sB,aAA/B,IACAvC,QAAQ,KAAKnqB,OAAO,CAAC6lB,aAFvB,EAGE;AACAvY,QAAAA,cAAc,CAAC5N,KAAf,IAAwB7B,MAAxB;AACD;AACF;;AACD,QAAI,OAAOqC,QAAQ,CAACorB,uBAAhB,KAA4C,UAAhD,EAA4D;AAC1D,UACEyB,kBAAkB,KAAK/sB,OAAO,CAAC0sB,aAA/B,IACAvC,QAAQ,KAAKnqB,OAAO,CAAC6lB,aAFvB,EAGE;AACAvY,QAAAA,cAAc,CAAC5N,KAAf,IAAwBtB,QAAxB;AACD;AACF;;AACD,WAAO,KAAP;AACD;;AAED,MAAI,OAAOmrB,wBAAP,KAAoC,UAAxC,EAAoD;AAClDD,IAAAA,0BAA0B,CACxBhc,cADwB,EAExBvC,IAFwB,EAGxBwe,wBAHwB,EAIxBW,QAJwB,CAA1B;AAMA3C,IAAAA,QAAQ,GAAGja,cAAc,CAACuY,aAA1B;AACD;;AAED,MAAMyE,YAAY,GAChBtC,kCAAkC,MAClCgC,0BAA0B,CACxB1c,cADwB,EAExBvC,IAFwB,EAGxBkf,QAHwB,EAIxBC,QAJwB,EAKxBC,QALwB,EAMxB5C,QANwB,EAOxB6C,WAPwB,CAF5B;;AAYA,MAAIE,YAAJ,EAAkB;AAChB;AACA;AACA,QACE,CAACuC,gBAAD,KACC,OAAO3sB,QAAQ,CAAC8gB,0BAAhB,KAA+C,UAA/C,IACC,OAAO9gB,QAAQ,CAAC6gB,mBAAhB,KAAwC,UAF1C,CADF,EAIE;AACA,UAAI,OAAO7gB,QAAQ,CAAC6gB,mBAAhB,KAAwC,UAA5C,EAAwD;AACtD7gB,QAAAA,QAAQ,CAAC6gB,mBAAT,CAA6BmJ,QAA7B,EAAuC3C,QAAvC,EAAiD6C,WAAjD;AACD;;AACD,UAAI,OAAOlqB,QAAQ,CAAC8gB,0BAAhB,KAA+C,UAAnD,EAA+D;AAC7D9gB,QAAAA,QAAQ,CAAC8gB,0BAAT,CAAoCkJ,QAApC,EAA8C3C,QAA9C,EAAwD6C,WAAxD;AACD;AACF;;AACD,QAAI,OAAOlqB,QAAQ,CAACqrB,kBAAhB,KAAuC,UAA3C,EAAuD;AACrDje,MAAAA,cAAc,CAAC5N,KAAf,IAAwB7B,MAAxB;AACD;;AACD,QAAI,OAAOqC,QAAQ,CAACorB,uBAAhB,KAA4C,UAAhD,EAA4D;AAC1Dhe,MAAAA,cAAc,CAAC5N,KAAf,IAAwBtB,QAAxB;AACD;AACF,GArBD,MAqBO;AACL;AACA;AACA,QAAI,OAAO8B,QAAQ,CAACqrB,kBAAhB,KAAuC,UAA3C,EAAuD;AACrD,UACEwB,kBAAkB,KAAK/sB,OAAO,CAAC0sB,aAA/B,IACAvC,QAAQ,KAAKnqB,OAAO,CAAC6lB,aAFvB,EAGE;AACAvY,QAAAA,cAAc,CAAC5N,KAAf,IAAwB7B,MAAxB;AACD;AACF;;AACD,QAAI,OAAOqC,QAAQ,CAACorB,uBAAhB,KAA4C,UAAhD,EAA4D;AAC1D,UACEyB,kBAAkB,KAAK/sB,OAAO,CAAC0sB,aAA/B,IACAvC,QAAQ,KAAKnqB,OAAO,CAAC6lB,aAFvB,EAGE;AACAvY,QAAAA,cAAc,CAAC5N,KAAf,IAAwBtB,QAAxB;AACD;AACF,KAlBI;AAqBL;;;AACAkP,IAAAA,cAAc,CAACof,aAAf,GAA+BxC,QAA/B;AACA5c,IAAAA,cAAc,CAACuY,aAAf,GAA+B0B,QAA/B;AACD,GAzJQ;AA4JT;;;AACArnB,EAAAA,QAAQ,CAACmI,KAAT,GAAiB6hB,QAAjB;AACAhqB,EAAAA,QAAQ,CAAC0qB,KAAT,GAAiBrD,QAAjB;AACArnB,EAAAA,QAAQ,CAACnD,OAAT,GAAmBqtB,WAAnB;AAEA,SAAOE,YAAP;AACD;;ACvnCD,IAAI8C,gBAAJ;AACA,IAAIC,sBAAJ;AACA,IAAIC,sBAAJ;AACA,IAAIC,qBAAJ;AACA,IAAIC,2BAAJ;;AACA,IAAIC,iBAAiB,GAAG,UAAC5sB,KAAD,EAAe6sB,WAAf,EAAsC,EAA9D;;AAEA,AAAa;AACXN,EAAAA,gBAAgB,GAAG,KAAnB;AACAC,EAAAA,sBAAsB,GAAG,KAAzB;AACAC,EAAAA,sBAAsB,GAAG,EAAzB;AAEA;;;;;;AAKAC,EAAAA,qBAAqB,GAAG,EAAxB;AACAC,EAAAA,2BAA2B,GAAG,EAA9B;;AAEAC,EAAAA,iBAAiB,GAAG,UAAC5sB,KAAD,EAAe6sB,WAAf,EAAsC;AACxD,QAAI7sB,KAAK,KAAK,IAAV,IAAkB,OAAOA,KAAP,KAAiB,QAAvC,EAAiD;AAC/C;AACD;;AACD,QAAI,CAACA,KAAK,CAAC8sB,MAAP,IAAiB9sB,KAAK,CAAC8sB,MAAN,CAAaC,SAA9B,IAA2C/sB,KAAK,CAAC3G,GAAN,IAAa,IAA5D,EAAkE;AAChE;AACD;;AANuD,UAQtD,OAAO2G,KAAK,CAAC8sB,MAAb,KAAwB,QAR8B;AAAA;AAAA;AAAA;AAAA;;AAYxD9sB,IAAAA,KAAK,CAAC8sB,MAAN,CAAaC,SAAb,GAAyB,IAAzB;AAEA,QAAM7hB,aAAa,GAAGnP,gBAAgB,CAAC8wB,WAAW,CAAC/wB,IAAb,CAAhB,IAAsC,WAA5D;;AAEA,QAAI4wB,qBAAqB,CAACxhB,aAAD,CAAzB,EAA0C;AACxC;AACD;;AACDwhB,IAAAA,qBAAqB,CAACxhB,aAAD,CAArB,GAAuC,IAAvC;;AAEA,UACE,+CACE,4DADF,GAEE,mBAHJ;AAKD,GA1BD;AA2BD;;AAED,IAAMuc,SAAO,GAAGC,KAAK,CAACD,OAAtB;;AAEA,SAASuF,SAAT,CACEH,WADF,EAEE1tB,OAFF,EAGEuL,OAHF,EAIE;AACA,MAAMuiB,QAAQ,GAAGviB,OAAO,CAACwiB,GAAzB;;AACA,MACED,QAAQ,KAAK,IAAb,IACA,OAAOA,QAAP,KAAoB,UADpB,IAEA,OAAOA,QAAP,KAAoB,QAHtB,EAIE;AACA,IAAa;AACX;AACA;AACA,UACE,CAACJ,WAAW,CAAC9N,IAAZ,GAAmBvC,UAAnB,IAAiCne,mBAAlC;AAEA;AACA;AACA,QACEqM,OAAO,CAACC,MAAR,IACAD,OAAO,CAACyiB,KADR,IAEAziB,OAAO,CAACC,MAAR,CAAerL,SAAf,KAA6BoL,OAAO,CAACyiB,KAHvC,CALF,EAUE;AACA,YAAMjiB,aAAa,GAAGnP,gBAAgB,CAAC8wB,WAAW,CAAC/wB,IAAb,CAAhB,IAAsC,WAA5D;;AACA,YAAI,CAAC2wB,sBAAsB,CAACvhB,aAAD,CAA3B,EAA4C;AAC1C,UAUO;AACL,kBACE,mEACE,oEADF,GAEE,sDAFF,GAGE,2CAHF,GAIE,iDALJ,EAME+hB,QANF;AAQD;;AACDR,UAAAA,sBAAsB,CAACvhB,aAAD,CAAtB,GAAwC,IAAxC;AACD;AACF;AACF;;AAED,QAAIR,OAAO,CAACC,MAAZ,EAAoB;AAClB,UAAMzL,KAAa,GAAIwL,OAAO,CAACC,MAA/B;AACA,UAAIke,IAAJ;;AACA,UAAI3pB,KAAJ,EAAW;AACT,YAAME,UAAU,GAAKF,KAArB;;AADS,cAGPE,UAAU,CAACpD,GAAX,KAAmBpE,cAHZ;AAAA;AAAA;AAAA;AAAA;;AASTixB,QAAAA,IAAI,GAAGzpB,UAAU,CAACE,SAAlB;AACD;;AAbiB,WAehBupB,IAfgB;AAAA;AAAA,yDAkBhBoE,QAlBgB;AAAA;AAAA;;AAoBlB,UAAMG,SAAS,GAAG,KAAKH,QAAvB,CApBkB;;AAsBlB,UACE9tB,OAAO,KAAK,IAAZ,IACAA,OAAO,CAAC+tB,GAAR,KAAgB,IADhB,IAEA,OAAO/tB,OAAO,CAAC+tB,GAAf,KAAuB,UAFvB,IAGA/tB,OAAO,CAAC+tB,GAAR,CAAYG,UAAZ,KAA2BD,SAJ7B,EAKE;AACA,eAAOjuB,OAAO,CAAC+tB,GAAf;AACD;;AACD,UAAMA,GAAG,GAAG,UAAS1zB,KAAT,EAAgB;AAC1B,YAAIouB,IAAI,GAAGiB,IAAI,CAACjB,IAAhB;;AACA,YAAIA,IAAI,KAAKD,eAAb,EAA8B;AAC5B;AACAC,UAAAA,IAAI,GAAGiB,IAAI,CAACjB,IAAL,GAAY,EAAnB;AACD;;AACD,YAAIpuB,KAAK,KAAK,IAAd,EAAoB;AAClB,iBAAOouB,IAAI,CAACwF,SAAD,CAAX;AACD,SAFD,MAEO;AACLxF,UAAAA,IAAI,CAACwF,SAAD,CAAJ,GAAkB5zB,KAAlB;AACD;AACF,OAXD;;AAYA0zB,MAAAA,GAAG,CAACG,UAAJ,GAAiBD,SAAjB;AACA,aAAOF,GAAP;AACD,KA5CD,MA4CO;AAAA,YAEH,OAAOD,QAAP,KAAoB,QAFjB;AAAA;AAAA;AAAA;AAAA;;AAAA,WAMHviB,OAAO,CAACC,MANL;AAAA;AAAA,mEAaHsiB,QAbG;AAAA;AAAA;AAeN;AACF;;AACD,SAAOA,QAAP;AACD;;AAED,SAASK,wBAAT,CAAkCT,WAAlC,EAAsDU,QAAtD,EAAwE;AACtE,MAAIV,WAAW,CAAC/wB,IAAZ,KAAqB,UAAzB,EAAqC;AAAA;AAAA;AAAA,0EAMjC8L,MAAM,CAACrQ,SAAP,CAAiB2jB,QAAjB,CAA0BzjB,IAA1B,CAA+B81B,QAA/B,MAA6C,iBAA7C,GACI,uBAAuB3lB,MAAM,CAAC4V,IAAP,CAAY+P,QAAZ,EAAsBnO,IAAtB,CAA2B,IAA3B,CAAvB,GAA0D,GAD9D,GAEImO,QAR6B;AAAA;AAAA;AAUpC;AACF;;AAED,SAASC,kBAAT,CAA4BX,WAA5B,EAAgD;AAC9C,EAAa;AACX,QAAM3hB,aAAa,GAAGnP,gBAAgB,CAAC8wB,WAAW,CAAC/wB,IAAb,CAAhB,IAAsC,WAA5D;;AAEA,QAAI6wB,2BAA2B,CAACzhB,aAAD,CAA/B,EAAgD;AAC9C;AACD;;AACDyhB,IAAAA,2BAA2B,CAACzhB,aAAD,CAA3B,GAA6C,IAA7C;;AAEA,UACE,kEACE,+DADF,GAEE,iEAHJ;AAKD;AACF;;AAGD;;;AACA,SAASuiB,eAAT,CACElxB,aADF,EAE2B;AACzB,MAAI;AACF;AACA,QAAMC,OAAO,GAAGD,aAAa,CAACE,QAA9B;AACA,QAAMC,IAAI,GAAGH,aAAa,CAACI,KAA3B;AACA,WAAOD,IAAI,CAACF,OAAD,CAAX;AACD,GALD,CAKE,OAAOI,CAAP,EAAU;AACV;AACA,WAAOL,aAAP;AACD;AACF;AAGD;AACA;AACA;;;AACA,SAASmxB,eAAT,CAAyBC,sBAAzB,EAAiD;AAC/C,WAASC,WAAT,CAAqBf,WAArB,EAAyCgB,aAAzC,EAAqE;AACnE,QAAI,CAACF,sBAAL,EAA6B;AAC3B;AACA;AACD,KAJkE;AAMnE;AACA;AACA;AACA;;;AACA,QAAMG,IAAI,GAAGjB,WAAW,CAACkB,UAAzB;;AACA,QAAID,IAAI,KAAK,IAAb,EAAmB;AACjBA,MAAAA,IAAI,CAACE,UAAL,GAAkBH,aAAlB;AACAhB,MAAAA,WAAW,CAACkB,UAAZ,GAAyBF,aAAzB;AACD,KAHD,MAGO;AACLhB,MAAAA,WAAW,CAACoB,WAAZ,GAA0BpB,WAAW,CAACkB,UAAZ,GAAyBF,aAAnD;AACD;;AACDA,IAAAA,aAAa,CAACG,UAAd,GAA2B,IAA3B;AACAH,IAAAA,aAAa,CAAChvB,KAAd,GAAsB3B,QAAtB;AACD;;AAED,WAASgxB,uBAAT,CACErB,WADF,EAEEsB,iBAFF,EAGQ;AACN,QAAI,CAACR,sBAAL,EAA6B;AAC3B;AACA,aAAO,IAAP;AACD,KAJK;AAON;;;AACA,QAAIE,aAAa,GAAGM,iBAApB;;AACA,WAAON,aAAa,KAAK,IAAzB,EAA+B;AAC7BD,MAAAA,WAAW,CAACf,WAAD,EAAcgB,aAAd,CAAX;AACAA,MAAAA,aAAa,GAAGA,aAAa,CAAC5tB,OAA9B;AACD;;AACD,WAAO,IAAP;AACD;;AAED,WAASmuB,oBAAT,CACEvB,WADF,EAEEsB,iBAFF,EAG+B;AAC7B;AACA;AACA;AACA,QAAME,gBAA6C,GAAG,IAAIzlB,GAAJ,EAAtD;AAEA,QAAI0lB,aAAa,GAAGH,iBAApB;;AACA,WAAOG,aAAa,KAAK,IAAzB,EAA+B;AAC7B,UAAIA,aAAa,CAACj1B,GAAd,KAAsB,IAA1B,EAAgC;AAC9Bg1B,QAAAA,gBAAgB,CAAC90B,GAAjB,CAAqB+0B,aAAa,CAACj1B,GAAnC,EAAwCi1B,aAAxC;AACD,OAFD,MAEO;AACLD,QAAAA,gBAAgB,CAAC90B,GAAjB,CAAqB+0B,aAAa,CAAC1iB,KAAnC,EAA0C0iB,aAA1C;AACD;;AACDA,MAAAA,aAAa,GAAGA,aAAa,CAACruB,OAA9B;AACD;;AACD,WAAOouB,gBAAP;AACD;;AAED,WAASE,QAAT,CAAkB/vB,KAAlB,EAAgC6tB,YAAhC,EAA4D;AAC1D;AACA;AACA,QAAM5G,KAAK,GAAG+I,oBAAoB,CAAChwB,KAAD,EAAQ6tB,YAAR,CAAlC;AACA5G,IAAAA,KAAK,CAAC7Z,KAAN,GAAc,CAAd;AACA6Z,IAAAA,KAAK,CAACxlB,OAAN,GAAgB,IAAhB;AACA,WAAOwlB,KAAP;AACD;;AAED,WAASgJ,UAAT,CACEC,QADF,EAEEC,eAFF,EAGEC,QAHF,EAIU;AACRF,IAAAA,QAAQ,CAAC9iB,KAAT,GAAiBgjB,QAAjB;;AACA,QAAI,CAACjB,sBAAL,EAA6B;AAC3B;AACA,aAAOgB,eAAP;AACD;;AACD,QAAMxvB,OAAO,GAAGuvB,QAAQ,CAAC/vB,SAAzB;;AACA,QAAIQ,OAAO,KAAK,IAAhB,EAAsB;AACpB,UAAM0vB,QAAQ,GAAG1vB,OAAO,CAACyM,KAAzB;;AACA,UAAIijB,QAAQ,GAAGF,eAAf,EAAgC;AAC9B;AACAD,QAAAA,QAAQ,CAAC7vB,KAAT,GAAiB9B,SAAjB;AACA,eAAO4xB,eAAP;AACD,OAJD,MAIO;AACL;AACA,eAAOE,QAAP;AACD;AACF,KAVD,MAUO;AACL;AACAH,MAAAA,QAAQ,CAAC7vB,KAAT,GAAiB9B,SAAjB;AACA,aAAO4xB,eAAP;AACD;AACF;;AAED,WAASG,gBAAT,CAA0BJ,QAA1B,EAAkD;AAChD;AACA;AACA,QAAIf,sBAAsB,IAAIe,QAAQ,CAAC/vB,SAAT,KAAuB,IAArD,EAA2D;AACzD+vB,MAAAA,QAAQ,CAAC7vB,KAAT,GAAiB9B,SAAjB;AACD;;AACD,WAAO2xB,QAAP;AACD;;AAED,WAASK,cAAT,CACElC,WADF,EAEE1tB,OAFF,EAGE6vB,WAHF,EAIE9b,KAJF,EAKE;AACA,QAAI/T,OAAO,KAAK,IAAZ,IAAoBA,OAAO,CAACnD,GAAR,KAAgB/D,QAAxC,EAAkD;AAChD;AACA,UAAMg3B,OAAO,GAAGC,mBAAmB,CAACF,WAAD,EAAcnC,WAAW,CAAC9N,IAA1B,EAAgC7L,KAAhC,CAAnC;AACA+b,MAAAA,OAAO,CAACnwB,MAAR,GAAiB+tB,WAAjB;AACA,aAAOoC,OAAP;AACD,KALD,MAKO;AACL;AACA,UAAME,QAAQ,GAAGZ,QAAQ,CAACpvB,OAAD,EAAU6vB,WAAV,CAAzB;AACAG,MAAAA,QAAQ,CAACrwB,MAAT,GAAkB+tB,WAAlB;AACA,aAAOsC,QAAP;AACD;AACF;;AAED,WAASC,aAAT,CACEvC,WADF,EAEE1tB,OAFF,EAGEuL,OAHF,EAIEwI,KAJF,EAKS;AACP,QAAI/T,OAAO,KAAK,IAAhB,EAAsB;AACpB,UACEA,OAAO,CAACgtB,WAAR,KAAwBzhB,OAAO,CAAC5O,IAAhC;AAECwT,MAAAA,CAAU+f,iCAAiC,CAAClwB,OAAD,EAAUuL,OAAV,CAApC,CAFR,CADF,EAIE;AACA;AACA,YAAMykB,QAAQ,GAAGZ,QAAQ,CAACpvB,OAAD,EAAUuL,OAAO,CAAClD,KAAlB,CAAzB;AACA2nB,QAAAA,QAAQ,CAACjC,GAAT,GAAeF,SAAS,CAACH,WAAD,EAAc1tB,OAAd,EAAuBuL,OAAvB,CAAxB;AACAykB,QAAAA,QAAQ,CAACrwB,MAAT,GAAkB+tB,WAAlB;;AACA,QAAa;AACXsC,UAAAA,QAAQ,CAACvR,YAAT,GAAwBlT,OAAO,CAACE,OAAhC;AACAukB,UAAAA,QAAQ,CAACxR,WAAT,GAAuBjT,OAAO,CAACC,MAA/B;AACD;;AACD,eAAOwkB,QAAP;AACD,OAdD,MAcO,IAAIG,CAAmBnwB,OAAO,CAACnD,GAAR,KAAgB/C,KAAvC,EAA8C;AACnD;AACA;AACA,YAAI6C,IAAI,GAAG4O,OAAO,CAAC5O,IAAnB;;AACA,YAAIA,IAAI,CAACG,QAAL,KAAkB7B,eAAtB,EAAuC;AACrC0B,UAAAA,IAAI,GAAG2xB,eAAe,CAAC3xB,IAAD,CAAtB;AACD;;AACD,YACEA,IAAI,CAACG,QAAL,KAAkB5B,gBAAlB,IACEyB,IAAF,CAAwCQ,OAAxC,KACG6C,OAAO,CAACrD,IAAT,CAAyCQ,OAH7C,EAIE;AACA;AACA,cAAM6yB,SAAQ,GAAGZ,QAAQ,CAACpvB,OAAD,EAAUuL,OAAO,CAAClD,KAAlB,CAAzB;;AACA2nB,UAAAA,SAAQ,CAACrwB,MAAT,GAAkB+tB,WAAlB;AACAsC,UAAAA,SAAQ,CAACrzB,IAAT,GAAgBA,IAAhB;;AACA,UAAa;AACXqzB,YAAAA,SAAQ,CAACvR,YAAT,GAAwBlT,OAAO,CAACE,OAAhC;AACAukB,YAAAA,SAAQ,CAACxR,WAAT,GAAuBjT,OAAO,CAACC,MAA/B;AACD;;AACD,iBAAOwkB,SAAP;AACD;AACF;AACF,KAvCM;;;AAyCP,QAAMF,OAAO,GAAGM,sBAAsB,CAAC7kB,OAAD,EAAUmiB,WAAW,CAAC9N,IAAtB,EAA4B7L,KAA5B,CAAtC;AACA+b,IAAAA,OAAO,CAAC/B,GAAR,GAAcF,SAAS,CAACH,WAAD,EAAc1tB,OAAd,EAAuBuL,OAAvB,CAAvB;AACAukB,IAAAA,OAAO,CAACnwB,MAAR,GAAiB+tB,WAAjB;AACA,WAAOoC,OAAP;AACD;;AAED,WAASO,YAAT,CACE3C,WADF,EAEE1tB,OAFF,EAGEswB,MAHF,EAIEvc,KAJF,EAKS;AACP,QACE/T,OAAO,KAAK,IAAZ,IACAA,OAAO,CAACnD,GAAR,KAAgBjE,UADhB,IAEAoH,OAAO,CAACG,SAAR,CAAkBowB,aAAlB,KAAoCD,MAAM,CAACC,aAF3C,IAGAvwB,OAAO,CAACG,SAAR,CAAkBqwB,cAAlB,KAAqCF,MAAM,CAACE,cAJ9C,EAKE;AACA;AACA,UAAMV,OAAO,GAAGW,qBAAqB,CAACH,MAAD,EAAS5C,WAAW,CAAC9N,IAArB,EAA2B7L,KAA3B,CAArC;AACA+b,MAAAA,OAAO,CAACnwB,MAAR,GAAiB+tB,WAAjB;AACA,aAAOoC,OAAP;AACD,KAVD,MAUO;AACL;AACA,UAAME,QAAQ,GAAGZ,QAAQ,CAACpvB,OAAD,EAAUswB,MAAM,CAACrgB,QAAP,IAAmB,EAA7B,CAAzB;AACA+f,MAAAA,QAAQ,CAACrwB,MAAT,GAAkB+tB,WAAlB;AACA,aAAOsC,QAAP;AACD;AACF;;AAED,WAASU,cAAT,CACEhD,WADF,EAEE1tB,OAFF,EAGE2wB,QAHF,EAIE5c,KAJF,EAKE7Z,GALF,EAMS;AACP,QAAI8F,OAAO,KAAK,IAAZ,IAAoBA,OAAO,CAACnD,GAAR,KAAgB9D,QAAxC,EAAkD;AAChD;AACA,UAAM+2B,OAAO,GAAGc,uBAAuB,CACrCD,QADqC,EAErCjD,WAAW,CAAC9N,IAFyB,EAGrC7L,KAHqC,EAIrC7Z,GAJqC,CAAvC;AAMA41B,MAAAA,OAAO,CAACnwB,MAAR,GAAiB+tB,WAAjB;AACA,aAAOoC,OAAP;AACD,KAVD,MAUO;AACL;AACA,UAAME,QAAQ,GAAGZ,QAAQ,CAACpvB,OAAD,EAAU2wB,QAAV,CAAzB;AACAX,MAAAA,QAAQ,CAACrwB,MAAT,GAAkB+tB,WAAlB;AACA,aAAOsC,QAAP;AACD;AACF;;AAED,WAASa,WAAT,CACEnD,WADF,EAEEU,QAFF,EAGEra,KAHF,EAIgB;AACd,QAAI,OAAOqa,QAAP,KAAoB,QAApB,IAAgC,OAAOA,QAAP,KAAoB,QAAxD,EAAkE;AAChE;AACA;AACA;AACA,UAAM0B,OAAO,GAAGC,mBAAmB,CACjC,KAAK3B,QAD4B,EAEjCV,WAAW,CAAC9N,IAFqB,EAGjC7L,KAHiC,CAAnC;AAKA+b,MAAAA,OAAO,CAACnwB,MAAR,GAAiB+tB,WAAjB;AACA,aAAOoC,OAAP;AACD;;AAED,QAAI,OAAO1B,QAAP,KAAoB,QAApB,IAAgCA,QAAQ,KAAK,IAAjD,EAAuD;AACrD,cAAQA,QAAQ,CAACtxB,QAAjB;AACE,aAAKxC,kBAAL;AAAyB;AACvB,gBAAMw1B,QAAO,GAAGM,sBAAsB,CACpChC,QADoC,EAEpCV,WAAW,CAAC9N,IAFwB,EAGpC7L,KAHoC,CAAtC;;AAKA+b,YAAAA,QAAO,CAAC/B,GAAR,GAAcF,SAAS,CAACH,WAAD,EAAc,IAAd,EAAoBU,QAApB,CAAvB;AACA0B,YAAAA,QAAO,CAACnwB,MAAR,GAAiB+tB,WAAjB;AACA,mBAAOoC,QAAP;AACD;;AACD,aAAKv1B,iBAAL;AAAwB;AACtB,gBAAMu1B,SAAO,GAAGW,qBAAqB,CACnCrC,QADmC,EAEnCV,WAAW,CAAC9N,IAFuB,EAGnC7L,KAHmC,CAArC;;AAKA+b,YAAAA,SAAO,CAACnwB,MAAR,GAAiB+tB,WAAjB;AACA,mBAAOoC,SAAP;AACD;;AACD,aAAK70B,eAAL;AAAsB;AACpB,YAAwB;AACtB,kBAAMoC,OAAO,GAAG+wB,QAAQ,CAAC9wB,QAAzB;AACA,kBAAMC,IAAI,GAAG6wB,QAAQ,CAAC5wB,KAAtB;AACA,qBAAOqzB,WAAW,CAACnD,WAAD,EAAcnwB,IAAI,CAACF,OAAD,CAAlB,EAA6B0W,KAA7B,CAAlB;AACD;AACF;AA1BH;;AA6BA,UAAIuU,SAAO,CAAC8F,QAAD,CAAP,IAAqBpyB,aAAa,CAACoyB,QAAD,CAAtC,EAAkD;AAChD,YAAM0B,SAAO,GAAGc,uBAAuB,CACrCxC,QADqC,EAErCV,WAAW,CAAC9N,IAFyB,EAGrC7L,KAHqC,EAIrC,IAJqC,CAAvC;;AAMA+b,QAAAA,SAAO,CAACnwB,MAAR,GAAiB+tB,WAAjB;AACA,eAAOoC,SAAP;AACD;;AAED3B,MAAAA,wBAAwB,CAACT,WAAD,EAAcU,QAAd,CAAxB;AACD;;AAED,IAAa;AACX,UAAI,OAAOA,QAAP,KAAoB,UAAxB,EAAoC;AAClCC,QAAAA,kBAAkB,CAACX,WAAD,CAAlB;AACD;AACF;;AAED,WAAO,IAAP;AACD;;AAED,WAASoD,UAAT,CACEpD,WADF,EAEEqD,QAFF,EAGE3C,QAHF,EAIEra,KAJF,EAKgB;AACd;AAEA,QAAM7Z,GAAG,GAAG62B,QAAQ,KAAK,IAAb,GAAoBA,QAAQ,CAAC72B,GAA7B,GAAmC,IAA/C;;AAEA,QAAI,OAAOk0B,QAAP,KAAoB,QAApB,IAAgC,OAAOA,QAAP,KAAoB,QAAxD,EAAkE;AAChE;AACA;AACA;AACA,UAAIl0B,GAAG,KAAK,IAAZ,EAAkB;AAChB,eAAO,IAAP;AACD;;AACD,aAAO01B,cAAc,CAAClC,WAAD,EAAcqD,QAAd,EAAwB,KAAK3C,QAA7B,EAAuCra,KAAvC,CAArB;AACD;;AAED,QAAI,OAAOqa,QAAP,KAAoB,QAApB,IAAgCA,QAAQ,KAAK,IAAjD,EAAuD;AACrD,cAAQA,QAAQ,CAACtxB,QAAjB;AACE,aAAKxC,kBAAL;AAAyB;AACvB,gBAAI8zB,QAAQ,CAACl0B,GAAT,KAAiBA,GAArB,EAA0B;AACxB,kBAAIk0B,QAAQ,CAACzxB,IAAT,KAAkBnC,mBAAtB,EAA2C;AACzC,uBAAOk2B,cAAc,CACnBhD,WADmB,EAEnBqD,QAFmB,EAGnB3C,QAAQ,CAAC/lB,KAAT,CAAe4H,QAHI,EAInB8D,KAJmB,EAKnB7Z,GALmB,CAArB;AAOD;;AACD,qBAAO+1B,aAAa,CAACvC,WAAD,EAAcqD,QAAd,EAAwB3C,QAAxB,EAAkCra,KAAlC,CAApB;AACD,aAXD,MAWO;AACL,qBAAO,IAAP;AACD;AACF;;AACD,aAAKxZ,iBAAL;AAAwB;AACtB,gBAAI6zB,QAAQ,CAACl0B,GAAT,KAAiBA,GAArB,EAA0B;AACxB,qBAAOm2B,YAAY,CAAC3C,WAAD,EAAcqD,QAAd,EAAwB3C,QAAxB,EAAkCra,KAAlC,CAAnB;AACD,aAFD,MAEO;AACL,qBAAO,IAAP;AACD;AACF;;AACD,aAAK9Y,eAAL;AAAsB;AACpB,YAAwB;AACtB,kBAAMoC,OAAO,GAAG+wB,QAAQ,CAAC9wB,QAAzB;AACA,kBAAMC,IAAI,GAAG6wB,QAAQ,CAAC5wB,KAAtB;AACA,qBAAOszB,UAAU,CAACpD,WAAD,EAAcqD,QAAd,EAAwBxzB,IAAI,CAACF,OAAD,CAA5B,EAAuC0W,KAAvC,CAAjB;AACD;AACF;AA9BH;;AAiCA,UAAIuU,SAAO,CAAC8F,QAAD,CAAP,IAAqBpyB,aAAa,CAACoyB,QAAD,CAAtC,EAAkD;AAChD,YAAIl0B,GAAG,KAAK,IAAZ,EAAkB;AAChB,iBAAO,IAAP;AACD;;AAED,eAAOw2B,cAAc,CAAChD,WAAD,EAAcqD,QAAd,EAAwB3C,QAAxB,EAAkCra,KAAlC,EAAyC,IAAzC,CAArB;AACD;;AAEDoa,MAAAA,wBAAwB,CAACT,WAAD,EAAcU,QAAd,CAAxB;AACD;;AAED,IAAa;AACX,UAAI,OAAOA,QAAP,KAAoB,UAAxB,EAAoC;AAClCC,QAAAA,kBAAkB,CAACX,WAAD,CAAlB;AACD;AACF;;AAED,WAAO,IAAP;AACD;;AAED,WAASsD,aAAT,CACE9B,gBADF,EAEExB,WAFF,EAGEuD,MAHF,EAIE7C,QAJF,EAKEra,KALF,EAMgB;AACd,QAAI,OAAOqa,QAAP,KAAoB,QAApB,IAAgC,OAAOA,QAAP,KAAoB,QAAxD,EAAkE;AAChE;AACA;AACA,UAAM8C,YAAY,GAAGhC,gBAAgB,CAACj1B,GAAjB,CAAqBg3B,MAArB,KAAgC,IAArD;AACA,aAAOrB,cAAc,CAAClC,WAAD,EAAcwD,YAAd,EAA4B,KAAK9C,QAAjC,EAA2Cra,KAA3C,CAArB;AACD;;AAED,QAAI,OAAOqa,QAAP,KAAoB,QAApB,IAAgCA,QAAQ,KAAK,IAAjD,EAAuD;AACrD,cAAQA,QAAQ,CAACtxB,QAAjB;AACE,aAAKxC,kBAAL;AAAyB;AACvB,gBAAM42B,aAAY,GAChBhC,gBAAgB,CAACj1B,GAAjB,CACEm0B,QAAQ,CAACl0B,GAAT,KAAiB,IAAjB,GAAwB+2B,MAAxB,GAAiC7C,QAAQ,CAACl0B,GAD5C,KAEK,IAHP;;AAIA,gBAAIk0B,QAAQ,CAACzxB,IAAT,KAAkBnC,mBAAtB,EAA2C;AACzC,qBAAOk2B,cAAc,CACnBhD,WADmB,EAEnBwD,aAFmB,EAGnB9C,QAAQ,CAAC/lB,KAAT,CAAe4H,QAHI,EAInB8D,KAJmB,EAKnBqa,QAAQ,CAACl0B,GALU,CAArB;AAOD;;AACD,mBAAO+1B,aAAa,CAACvC,WAAD,EAAcwD,aAAd,EAA4B9C,QAA5B,EAAsCra,KAAtC,CAApB;AACD;;AACD,aAAKxZ,iBAAL;AAAwB;AACtB,gBAAM22B,cAAY,GAChBhC,gBAAgB,CAACj1B,GAAjB,CACEm0B,QAAQ,CAACl0B,GAAT,KAAiB,IAAjB,GAAwB+2B,MAAxB,GAAiC7C,QAAQ,CAACl0B,GAD5C,KAEK,IAHP;;AAIA,mBAAOm2B,YAAY,CAAC3C,WAAD,EAAcwD,cAAd,EAA4B9C,QAA5B,EAAsCra,KAAtC,CAAnB;AACD;;AACD,aAAK9Y,eAAL;AACE,UAAwB;AACtB,gBAAMoC,OAAO,GAAG+wB,QAAQ,CAAC9wB,QAAzB;AACA,gBAAMC,IAAI,GAAG6wB,QAAQ,CAAC5wB,KAAtB;AACA,mBAAOwzB,aAAa,CAClB9B,gBADkB,EAElBxB,WAFkB,EAGlBuD,MAHkB,EAIlB1zB,IAAI,CAACF,OAAD,CAJc,EAKlB0W,KALkB,CAApB;AAOD;;AAnCL;;AAsCA,UAAIuU,SAAO,CAAC8F,QAAD,CAAP,IAAqBpyB,aAAa,CAACoyB,QAAD,CAAtC,EAAkD;AAChD,YAAM8C,cAAY,GAAGhC,gBAAgB,CAACj1B,GAAjB,CAAqBg3B,MAArB,KAAgC,IAArD;;AACA,eAAOP,cAAc,CAAChD,WAAD,EAAcwD,cAAd,EAA4B9C,QAA5B,EAAsCra,KAAtC,EAA6C,IAA7C,CAArB;AACD;;AAEDoa,MAAAA,wBAAwB,CAACT,WAAD,EAAcU,QAAd,CAAxB;AACD;;AAED,IAAa;AACX,UAAI,OAAOA,QAAP,KAAoB,UAAxB,EAAoC;AAClCC,QAAAA,kBAAkB,CAACX,WAAD,CAAlB;AACD;AACF;;AAED,WAAO,IAAP;AACD;AAED;;;;;AAGA,WAASyD,gBAAT,CACEtwB,KADF,EAEEuwB,SAFF,EAGE1D,WAHF,EAIsB;AACpB,IAAa;AACX,UAAI,OAAO7sB,KAAP,KAAiB,QAAjB,IAA6BA,KAAK,KAAK,IAA3C,EAAiD;AAC/C,eAAOuwB,SAAP;AACD;;AACD,cAAQvwB,KAAK,CAAC/D,QAAd;AACE,aAAKxC,kBAAL;AACA,aAAKC,iBAAL;AACEkzB,UAAAA,iBAAiB,CAAC5sB,KAAD,EAAQ6sB,WAAR,CAAjB;AACA,cAAMxzB,GAAG,GAAG2G,KAAK,CAAC3G,GAAlB;;AACA,cAAI,OAAOA,GAAP,KAAe,QAAnB,EAA6B;AAC3B;AACD;;AACD,cAAIk3B,SAAS,KAAK,IAAlB,EAAwB;AACtBA,YAAAA,SAAS,GAAG,IAAI3Q,GAAJ,EAAZ;AACA2Q,YAAAA,SAAS,CAAClQ,GAAV,CAAchnB,GAAd;AACA;AACD;;AACD,cAAI,CAACk3B,SAAS,CAACplB,GAAV,CAAc9R,GAAd,CAAL,EAAyB;AACvBk3B,YAAAA,SAAS,CAAClQ,GAAV,CAAchnB,GAAd;AACA;AACD;;AACD,gBACE,uDACE,mEADF,GAEE,2DAFF,GAGE,8DAHF,GAIE,mCALJ,EAMEA,GANF;;AAQA;;AACF,aAAKe,eAAL;AACE,UAAwB;AACtB,gBAAMoC,OAAO,GAAGwD,KAAK,CAACvD,QAAtB;AACA,gBAAMC,IAAI,GAAIsD,KAAK,CAACrD,KAApB;AACA2zB,YAAAA,gBAAgB,CAAC5zB,IAAI,CAACF,OAAD,CAAL,EAAgB+zB,SAAhB,EAA2B1D,WAA3B,CAAhB;AACA;AACD;AAhCL;AAsCD;;AACD,WAAO0D,SAAP;AACD;;AAED,WAASC,sBAAT,CACE3D,WADF,EAEEsB,iBAFF,EAGEsC,WAHF,EAIEvd,KAJF,EAKgB;AACd;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA,IAAa;AACX;AACA,UAAIqd,SAAS,GAAG,IAAhB;;AACA,WAAK,IAAI/Y,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGiZ,WAAW,CAAC5mB,MAAhC,EAAwC2N,CAAC,EAAzC,EAA6C;AAC3C,YAAMxX,KAAK,GAAGywB,WAAW,CAACjZ,CAAD,CAAzB;AACA+Y,QAAAA,SAAS,GAAGD,gBAAgB,CAACtwB,KAAD,EAAQuwB,SAAR,EAAmB1D,WAAnB,CAA5B;AACD;AACF;;AAED,QAAI6D,mBAAiC,GAAG,IAAxC;AACA,QAAIC,gBAA8B,GAAG,IAArC;AAEA,QAAIT,QAAQ,GAAG/B,iBAAf;AACA,QAAIQ,eAAe,GAAG,CAAtB;AACA,QAAIyB,MAAM,GAAG,CAAb;AACA,QAAIQ,YAAY,GAAG,IAAnB;;AACA,WAAOV,QAAQ,KAAK,IAAb,IAAqBE,MAAM,GAAGK,WAAW,CAAC5mB,MAAjD,EAAyDumB,MAAM,EAA/D,EAAmE;AACjE,UAAIF,QAAQ,CAACtkB,KAAT,GAAiBwkB,MAArB,EAA6B;AAC3BQ,QAAAA,YAAY,GAAGV,QAAf;AACAA,QAAAA,QAAQ,GAAG,IAAX;AACD,OAHD,MAGO;AACLU,QAAAA,YAAY,GAAGV,QAAQ,CAACjwB,OAAxB;AACD;;AACD,UAAMyuB,QAAQ,GAAGuB,UAAU,CACzBpD,WADyB,EAEzBqD,QAFyB,EAGzBO,WAAW,CAACL,MAAD,CAHc,EAIzBld,KAJyB,CAA3B;;AAMA,UAAIwb,QAAQ,KAAK,IAAjB,EAAuB;AACrB;AACA;AACA;AACA;AACA,YAAIwB,QAAQ,KAAK,IAAjB,EAAuB;AACrBA,UAAAA,QAAQ,GAAGU,YAAX;AACD;;AACD;AACD;;AACD,UAAIjD,sBAAJ,EAA4B;AAC1B,YAAIuC,QAAQ,IAAIxB,QAAQ,CAAC/vB,SAAT,KAAuB,IAAvC,EAA6C;AAC3C;AACA;AACAivB,UAAAA,WAAW,CAACf,WAAD,EAAcqD,QAAd,CAAX;AACD;AACF;;AACDvB,MAAAA,eAAe,GAAGF,UAAU,CAACC,QAAD,EAAWC,eAAX,EAA4ByB,MAA5B,CAA5B;;AACA,UAAIO,gBAAgB,KAAK,IAAzB,EAA+B;AAC7B;AACAD,QAAAA,mBAAmB,GAAGhC,QAAtB;AACD,OAHD,MAGO;AACL;AACA;AACA;AACA;AACAiC,QAAAA,gBAAgB,CAAC1wB,OAAjB,GAA2ByuB,QAA3B;AACD;;AACDiC,MAAAA,gBAAgB,GAAGjC,QAAnB;AACAwB,MAAAA,QAAQ,GAAGU,YAAX;AACD;;AAED,QAAIR,MAAM,KAAKK,WAAW,CAAC5mB,MAA3B,EAAmC;AACjC;AACAqkB,MAAAA,uBAAuB,CAACrB,WAAD,EAAcqD,QAAd,CAAvB;AACA,aAAOQ,mBAAP;AACD;;AAED,QAAIR,QAAQ,KAAK,IAAjB,EAAuB;AACrB;AACA;AACA,aAAOE,MAAM,GAAGK,WAAW,CAAC5mB,MAA5B,EAAoCumB,MAAM,EAA1C,EAA8C;AAC5C,YAAM1B,SAAQ,GAAGsB,WAAW,CAACnD,WAAD,EAAc4D,WAAW,CAACL,MAAD,CAAzB,EAAmCld,KAAnC,CAA5B;;AACA,YAAIwb,SAAQ,KAAK,IAAjB,EAAuB;AACrB;AACD;;AACDC,QAAAA,eAAe,GAAGF,UAAU,CAACC,SAAD,EAAWC,eAAX,EAA4ByB,MAA5B,CAA5B;;AACA,YAAIO,gBAAgB,KAAK,IAAzB,EAA+B;AAC7B;AACAD,UAAAA,mBAAmB,GAAGhC,SAAtB;AACD,SAHD,MAGO;AACLiC,UAAAA,gBAAgB,CAAC1wB,OAAjB,GAA2ByuB,SAA3B;AACD;;AACDiC,QAAAA,gBAAgB,GAAGjC,SAAnB;AACD;;AACD,aAAOgC,mBAAP;AACD,KAzGa;;;AA4Gd,QAAMrC,gBAAgB,GAAGD,oBAAoB,CAACvB,WAAD,EAAcqD,QAAd,CAA7C,CA5Gc;;AA+Gd,WAAOE,MAAM,GAAGK,WAAW,CAAC5mB,MAA5B,EAAoCumB,MAAM,EAA1C,EAA8C;AAC5C,UAAM1B,UAAQ,GAAGyB,aAAa,CAC5B9B,gBAD4B,EAE5BxB,WAF4B,EAG5BuD,MAH4B,EAI5BK,WAAW,CAACL,MAAD,CAJiB,EAK5Bld,KAL4B,CAA9B;;AAOA,UAAIwb,UAAQ,KAAK,IAAjB,EAAuB;AACrB,YAAIf,sBAAJ,EAA4B;AAC1B,cAAIe,UAAQ,CAAC/vB,SAAT,KAAuB,IAA3B,EAAiC;AAC/B;AACA;AACA;AACA;AACA0vB,YAAAA,gBAAgB,CAACwC,MAAjB,CACEnC,UAAQ,CAACr1B,GAAT,KAAiB,IAAjB,GAAwB+2B,MAAxB,GAAiC1B,UAAQ,CAACr1B,GAD5C;AAGD;AACF;;AACDs1B,QAAAA,eAAe,GAAGF,UAAU,CAACC,UAAD,EAAWC,eAAX,EAA4ByB,MAA5B,CAA5B;;AACA,YAAIO,gBAAgB,KAAK,IAAzB,EAA+B;AAC7BD,UAAAA,mBAAmB,GAAGhC,UAAtB;AACD,SAFD,MAEO;AACLiC,UAAAA,gBAAgB,CAAC1wB,OAAjB,GAA2ByuB,UAA3B;AACD;;AACDiC,QAAAA,gBAAgB,GAAGjC,UAAnB;AACD;AACF;;AAED,QAAIf,sBAAJ,EAA4B;AAC1B;AACA;AACAU,MAAAA,gBAAgB,CAACnP,OAAjB,CAAyB,UAAAlf,KAAK;AAAA,eAAI4tB,WAAW,CAACf,WAAD,EAAc7sB,KAAd,CAAf;AAAA,OAA9B;AACD;;AAED,WAAO0wB,mBAAP;AACD;;AAED,WAASI,yBAAT,CACEjE,WADF,EAEEsB,iBAFF,EAGE4C,mBAHF,EAIE7d,KAJF,EAKgB;AACd;AACA;AAEA,QAAM8d,UAAU,GAAG71B,aAAa,CAAC41B,mBAAD,CAAhC;;AAJc,UAMZ,OAAOC,UAAP,KAAsB,UANV;AAAA;AAAA;AAAA;AAAA;;AAWd,IAAa;AACX;AACA;AACA,UACE,OAAOn2B,MAAP,KAAkB,UAAlB;AAEAk2B,MAAAA,mBAAmB,CAACl2B,MAAM,CAACo2B,WAAR,CAAnB,KAA4C,WAH9C,EAIE;AACA,YAAI,CAACzE,sBAAL,EAA6B;AAC3B,gBACE,uEACE,iEADF,GAEE,4DAFF,GAGE,wDAHF,GAIE,+DALJ;AAOD;;AACDA,QAAAA,sBAAsB,GAAG,IAAzB;AACD,OAlBU;;;AAqBX,UAAKuE,mBAAD,CAA2BG,OAA3B,KAAuCF,UAA3C,EAAuD;AACrD,YAAI,CAACzE,gBAAL,EAAuB;AACrB,gBACE,8CACE,8CAFJ;AAID;;AACDA,QAAAA,gBAAgB,GAAG,IAAnB;AACD,OA7BU;AAgCX;;;AACA,UAAMkE,YAAW,GAAGO,UAAU,CAACv5B,IAAX,CAAgBs5B,mBAAhB,CAApB;;AACA,UAAIN,YAAJ,EAAiB;AACf,YAAIF,SAAS,GAAG,IAAhB;;AACA,YAAIY,KAAI,GAAGV,YAAW,CAAC1M,IAAZ,EAAX;;AACA,eAAO,CAACoN,KAAI,CAACC,IAAb,EAAmBD,KAAI,GAAGV,YAAW,CAAC1M,IAAZ,EAA1B,EAA8C;AAC5C,cAAM/jB,KAAK,GAAGmxB,KAAI,CAAC33B,KAAnB;AACA+2B,UAAAA,SAAS,GAAGD,gBAAgB,CAACtwB,KAAD,EAAQuwB,SAAR,EAAmB1D,WAAnB,CAA5B;AACD;AACF;AACF;;AAED,QAAM4D,WAAW,GAAGO,UAAU,CAACv5B,IAAX,CAAgBs5B,mBAAhB,CAApB;;AAvDc,UAwDJN,WAAW,IAAI,IAxDX;AAAA;AAAA;AAAA;AAAA;;AA0Dd,QAAIC,mBAAiC,GAAG,IAAxC;AACA,QAAIC,gBAA8B,GAAG,IAArC;AAEA,QAAIT,QAAQ,GAAG/B,iBAAf;AACA,QAAIQ,eAAe,GAAG,CAAtB;AACA,QAAIyB,MAAM,GAAG,CAAb;AACA,QAAIQ,YAAY,GAAG,IAAnB;AAEA,QAAIO,IAAI,GAAGV,WAAW,CAAC1M,IAAZ,EAAX;;AACA,WAEEmM,QAAQ,KAAK,IAAb,IAAqB,CAACiB,IAAI,CAACC,IAF7B,EAGEhB,MAAM,IAAIe,IAAI,GAAGV,WAAW,CAAC1M,IAAZ,EAHnB,EAIE;AACA,UAAImM,QAAQ,CAACtkB,KAAT,GAAiBwkB,MAArB,EAA6B;AAC3BQ,QAAAA,YAAY,GAAGV,QAAf;AACAA,QAAAA,QAAQ,GAAG,IAAX;AACD,OAHD,MAGO;AACLU,QAAAA,YAAY,GAAGV,QAAQ,CAACjwB,OAAxB;AACD;;AACD,UAAMyuB,QAAQ,GAAGuB,UAAU,CAACpD,WAAD,EAAcqD,QAAd,EAAwBiB,IAAI,CAAC33B,KAA7B,EAAoC0Z,KAApC,CAA3B;;AACA,UAAIwb,QAAQ,KAAK,IAAjB,EAAuB;AACrB;AACA;AACA;AACA;AACA,YAAIwB,QAAQ,KAAK,IAAjB,EAAuB;AACrBA,UAAAA,QAAQ,GAAGU,YAAX;AACD;;AACD;AACD;;AACD,UAAIjD,sBAAJ,EAA4B;AAC1B,YAAIuC,QAAQ,IAAIxB,QAAQ,CAAC/vB,SAAT,KAAuB,IAAvC,EAA6C;AAC3C;AACA;AACAivB,UAAAA,WAAW,CAACf,WAAD,EAAcqD,QAAd,CAAX;AACD;AACF;;AACDvB,MAAAA,eAAe,GAAGF,UAAU,CAACC,QAAD,EAAWC,eAAX,EAA4ByB,MAA5B,CAA5B;;AACA,UAAIO,gBAAgB,KAAK,IAAzB,EAA+B;AAC7B;AACAD,QAAAA,mBAAmB,GAAGhC,QAAtB;AACD,OAHD,MAGO;AACL;AACA;AACA;AACA;AACAiC,QAAAA,gBAAgB,CAAC1wB,OAAjB,GAA2ByuB,QAA3B;AACD;;AACDiC,MAAAA,gBAAgB,GAAGjC,QAAnB;AACAwB,MAAAA,QAAQ,GAAGU,YAAX;AACD;;AAED,QAAIO,IAAI,CAACC,IAAT,EAAe;AACb;AACAlD,MAAAA,uBAAuB,CAACrB,WAAD,EAAcqD,QAAd,CAAvB;AACA,aAAOQ,mBAAP;AACD;;AAED,QAAIR,QAAQ,KAAK,IAAjB,EAAuB;AACrB;AACA;AACA,aAAO,CAACiB,IAAI,CAACC,IAAb,EAAmBhB,MAAM,IAAIe,IAAI,GAAGV,WAAW,CAAC1M,IAAZ,EAApC,EAAwD;AACtD,YAAM2K,UAAQ,GAAGsB,WAAW,CAACnD,WAAD,EAAcsE,IAAI,CAAC33B,KAAnB,EAA0B0Z,KAA1B,CAA5B;;AACA,YAAIwb,UAAQ,KAAK,IAAjB,EAAuB;AACrB;AACD;;AACDC,QAAAA,eAAe,GAAGF,UAAU,CAACC,UAAD,EAAWC,eAAX,EAA4ByB,MAA5B,CAA5B;;AACA,YAAIO,gBAAgB,KAAK,IAAzB,EAA+B;AAC7B;AACAD,UAAAA,mBAAmB,GAAGhC,UAAtB;AACD,SAHD,MAGO;AACLiC,UAAAA,gBAAgB,CAAC1wB,OAAjB,GAA2ByuB,UAA3B;AACD;;AACDiC,QAAAA,gBAAgB,GAAGjC,UAAnB;AACD;;AACD,aAAOgC,mBAAP;AACD,KAvIa;;;AA0Id,QAAMrC,gBAAgB,GAAGD,oBAAoB,CAACvB,WAAD,EAAcqD,QAAd,CAA7C,CA1Ic;;AA6Id,WAAO,CAACiB,IAAI,CAACC,IAAb,EAAmBhB,MAAM,IAAIe,IAAI,GAAGV,WAAW,CAAC1M,IAAZ,EAApC,EAAwD;AACtD,UAAM2K,UAAQ,GAAGyB,aAAa,CAC5B9B,gBAD4B,EAE5BxB,WAF4B,EAG5BuD,MAH4B,EAI5Be,IAAI,CAAC33B,KAJuB,EAK5B0Z,KAL4B,CAA9B;;AAOA,UAAIwb,UAAQ,KAAK,IAAjB,EAAuB;AACrB,YAAIf,sBAAJ,EAA4B;AAC1B,cAAIe,UAAQ,CAAC/vB,SAAT,KAAuB,IAA3B,EAAiC;AAC/B;AACA;AACA;AACA;AACA0vB,YAAAA,gBAAgB,CAACwC,MAAjB,CACEnC,UAAQ,CAACr1B,GAAT,KAAiB,IAAjB,GAAwB+2B,MAAxB,GAAiC1B,UAAQ,CAACr1B,GAD5C;AAGD;AACF;;AACDs1B,QAAAA,eAAe,GAAGF,UAAU,CAACC,UAAD,EAAWC,eAAX,EAA4ByB,MAA5B,CAA5B;;AACA,YAAIO,gBAAgB,KAAK,IAAzB,EAA+B;AAC7BD,UAAAA,mBAAmB,GAAGhC,UAAtB;AACD,SAFD,MAEO;AACLiC,UAAAA,gBAAgB,CAAC1wB,OAAjB,GAA2ByuB,UAA3B;AACD;;AACDiC,QAAAA,gBAAgB,GAAGjC,UAAnB;AACD;AACF;;AAED,QAAIf,sBAAJ,EAA4B;AAC1B;AACA;AACAU,MAAAA,gBAAgB,CAACnP,OAAjB,CAAyB,UAAAlf,KAAK;AAAA,eAAI4tB,WAAW,CAACf,WAAD,EAAc7sB,KAAd,CAAf;AAAA,OAA9B;AACD;;AAED,WAAO0wB,mBAAP;AACD;;AAED,WAASW,uBAAT,CACExE,WADF,EAEEsB,iBAFF,EAGEa,WAHF,EAIE9b,KAJF,EAKS;AACP;AACA;AACA,QAAIib,iBAAiB,KAAK,IAAtB,IAA8BA,iBAAiB,CAACnyB,GAAlB,KAA0B/D,QAA5D,EAAsE;AACpE;AACA;AACAi2B,MAAAA,uBAAuB,CAACrB,WAAD,EAAcsB,iBAAiB,CAACluB,OAAhC,CAAvB;AACA,UAAMkvB,QAAQ,GAAGZ,QAAQ,CAACJ,iBAAD,EAAoBa,WAApB,CAAzB;AACAG,MAAAA,QAAQ,CAACrwB,MAAT,GAAkB+tB,WAAlB;AACA,aAAOsC,QAAP;AACD,KAVM;AAYP;;;AACAjB,IAAAA,uBAAuB,CAACrB,WAAD,EAAcsB,iBAAd,CAAvB;AACA,QAAMc,OAAO,GAAGC,mBAAmB,CAACF,WAAD,EAAcnC,WAAW,CAAC9N,IAA1B,EAAgC7L,KAAhC,CAAnC;AACA+b,IAAAA,OAAO,CAACnwB,MAAR,GAAiB+tB,WAAjB;AACA,WAAOoC,OAAP;AACD;;AAED,WAASqC,sBAAT,CACEzE,WADF,EAEEsB,iBAFF,EAGEzjB,OAHF,EAIEwI,KAJF,EAKS;AACP,QAAM7Z,GAAG,GAAGqR,OAAO,CAACrR,GAApB;AACA,QAAI2G,KAAK,GAAGmuB,iBAAZ;;AACA,WAAOnuB,KAAK,KAAK,IAAjB,EAAuB;AACrB;AACA;AACA,UAAIA,KAAK,CAAC3G,GAAN,KAAcA,GAAlB,EAAuB;AACrB,gBAAQ2G,KAAK,CAAChE,GAAd;AACE,eAAK9D,QAAL;AAAe;AACb,kBAAIwS,OAAO,CAAC5O,IAAR,KAAiBnC,mBAArB,EAA0C;AACxCu0B,gBAAAA,uBAAuB,CAACrB,WAAD,EAAc7sB,KAAK,CAACC,OAApB,CAAvB;AACA,oBAAMkvB,QAAQ,GAAGZ,QAAQ,CAACvuB,KAAD,EAAQ0K,OAAO,CAAClD,KAAR,CAAc4H,QAAtB,CAAzB;AACA+f,gBAAAA,QAAQ,CAACrwB,MAAT,GAAkB+tB,WAAlB;;AACA,gBAAa;AACXsC,kBAAAA,QAAQ,CAACvR,YAAT,GAAwBlT,OAAO,CAACE,OAAhC;AACAukB,kBAAAA,QAAQ,CAACxR,WAAT,GAAuBjT,OAAO,CAACC,MAA/B;AACD;;AACD,uBAAOwkB,QAAP;AACD;;AACD;AACD;;AACD,eAAKl2B,KAAL;AACE,YAAqB;AACnB,kBAAI6C,IAAI,GAAG4O,OAAO,CAAC5O,IAAnB;;AACA,kBAAIA,IAAI,CAACG,QAAL,KAAkB7B,eAAtB,EAAuC;AACrC0B,gBAAAA,IAAI,GAAG2xB,eAAe,CAAC3xB,IAAD,CAAtB;AACD;;AACD,kBAAIA,IAAI,CAACG,QAAL,KAAkB5B,gBAAtB,EAAwC;AACtC;AACA;AACA,oBACIyB,IAAF,CAAwCQ,OAAxC,KACC0D,KAAK,CAAClE,IAAP,CAAuCQ,OAFzC,EAGE;AACA4xB,kBAAAA,uBAAuB,CAACrB,WAAD,EAAc7sB,KAAK,CAACC,OAApB,CAAvB;;AACA,sBAAMkvB,UAAQ,GAAGZ,QAAQ,CAACvuB,KAAD,EAAQ0K,OAAO,CAAClD,KAAhB,CAAzB;;AACA2nB,kBAAAA,UAAQ,CAACrzB,IAAT,GAAgBA,IAAhB;AACAqzB,kBAAAA,UAAQ,CAACrwB,MAAT,GAAkB+tB,WAAlB;;AACA,kBAAa;AACXsC,oBAAAA,UAAQ,CAACvR,YAAT,GAAwBlT,OAAO,CAACE,OAAhC;AACAukB,oBAAAA,UAAQ,CAACxR,WAAT,GAAuBjT,OAAO,CAACC,MAA/B;AACD;;AACD,yBAAOwkB,UAAP;AACD;AACF;AACF;;AACH;AACA;;AACA;AAAS;AACP,kBACEnvB,KAAK,CAACmsB,WAAN,KAAsBzhB,OAAO,CAAC5O,IAA9B;AAECwT,cAAAA,CACG+f,iCAAiC,CAACrvB,KAAD,EAAQ0K,OAAR,CAD7B,CAFR,CADF,EAME;AACAwjB,gBAAAA,uBAAuB,CAACrB,WAAD,EAAc7sB,KAAK,CAACC,OAApB,CAAvB;;AACA,oBAAMkvB,UAAQ,GAAGZ,QAAQ,CAACvuB,KAAD,EAAQ0K,OAAO,CAAClD,KAAhB,CAAzB;;AACA2nB,gBAAAA,UAAQ,CAACjC,GAAT,GAAeF,SAAS,CAACH,WAAD,EAAc7sB,KAAd,EAAqB0K,OAArB,CAAxB;AACAykB,gBAAAA,UAAQ,CAACrwB,MAAT,GAAkB+tB,WAAlB;;AACA,gBAAa;AACXsC,kBAAAA,UAAQ,CAACvR,YAAT,GAAwBlT,OAAO,CAACE,OAAhC;AACAukB,kBAAAA,UAAQ,CAACxR,WAAT,GAAuBjT,OAAO,CAACC,MAA/B;AACD;;AACD,uBAAOwkB,UAAP;AACD;;AACD;AACD;AA5DH,SADqB;;;AAgErBjB,QAAAA,uBAAuB,CAACrB,WAAD,EAAc7sB,KAAd,CAAvB;AACA;AACD,OAlED,MAkEO;AACL4tB,QAAAA,WAAW,CAACf,WAAD,EAAc7sB,KAAd,CAAX;AACD;;AACDA,MAAAA,KAAK,GAAGA,KAAK,CAACC,OAAd;AACD;;AAED,QAAIyK,OAAO,CAAC5O,IAAR,KAAiBnC,mBAArB,EAA0C;AACxC,UAAMs1B,OAAO,GAAGc,uBAAuB,CACrCrlB,OAAO,CAAClD,KAAR,CAAc4H,QADuB,EAErCyd,WAAW,CAAC9N,IAFyB,EAGrC7L,KAHqC,EAIrCxI,OAAO,CAACrR,GAJ6B,CAAvC;AAMA41B,MAAAA,OAAO,CAACnwB,MAAR,GAAiB+tB,WAAjB;AACA,aAAOoC,OAAP;AACD,KATD,MASO;AACL,UAAMA,SAAO,GAAGM,sBAAsB,CAAC7kB,OAAD,EAAUmiB,WAAW,CAAC9N,IAAtB,EAA4B7L,KAA5B,CAAtC;;AACA+b,MAAAA,SAAO,CAAC/B,GAAR,GAAcF,SAAS,CAACH,WAAD,EAAcsB,iBAAd,EAAiCzjB,OAAjC,CAAvB;AACAukB,MAAAA,SAAO,CAACnwB,MAAR,GAAiB+tB,WAAjB;AACA,aAAOoC,SAAP;AACD;AACF;;AAED,WAASsC,qBAAT,CACE1E,WADF,EAEEsB,iBAFF,EAGEsB,MAHF,EAIEvc,KAJF,EAKS;AACP,QAAM7Z,GAAG,GAAGo2B,MAAM,CAACp2B,GAAnB;AACA,QAAI2G,KAAK,GAAGmuB,iBAAZ;;AACA,WAAOnuB,KAAK,KAAK,IAAjB,EAAuB;AACrB;AACA;AACA,UAAIA,KAAK,CAAC3G,GAAN,KAAcA,GAAlB,EAAuB;AACrB,YACE2G,KAAK,CAAChE,GAAN,KAAcjE,UAAd,IACAiI,KAAK,CAACV,SAAN,CAAgBowB,aAAhB,KAAkCD,MAAM,CAACC,aADzC,IAEA1vB,KAAK,CAACV,SAAN,CAAgBqwB,cAAhB,KAAmCF,MAAM,CAACE,cAH5C,EAIE;AACAzB,UAAAA,uBAAuB,CAACrB,WAAD,EAAc7sB,KAAK,CAACC,OAApB,CAAvB;AACA,cAAMkvB,QAAQ,GAAGZ,QAAQ,CAACvuB,KAAD,EAAQyvB,MAAM,CAACrgB,QAAP,IAAmB,EAA3B,CAAzB;AACA+f,UAAAA,QAAQ,CAACrwB,MAAT,GAAkB+tB,WAAlB;AACA,iBAAOsC,QAAP;AACD,SATD,MASO;AACLjB,UAAAA,uBAAuB,CAACrB,WAAD,EAAc7sB,KAAd,CAAvB;AACA;AACD;AACF,OAdD,MAcO;AACL4tB,QAAAA,WAAW,CAACf,WAAD,EAAc7sB,KAAd,CAAX;AACD;;AACDA,MAAAA,KAAK,GAAGA,KAAK,CAACC,OAAd;AACD;;AAED,QAAMgvB,OAAO,GAAGW,qBAAqB,CAACH,MAAD,EAAS5C,WAAW,CAAC9N,IAArB,EAA2B7L,KAA3B,CAArC;AACA+b,IAAAA,OAAO,CAACnwB,MAAR,GAAiB+tB,WAAjB;AACA,WAAOoC,OAAP;AACD,GAn+B8C;AAs+B/C;AACA;;;AACA,WAASuC,oBAAT,CACE3E,WADF,EAEEsB,iBAFF,EAGEZ,QAHF,EAIEra,KAJF,EAKgB;AACd;AACA;AACA;AACA;AAEA;AACA;AACA;AACA,QAAMue,yBAAyB,GAC7B,OAAOlE,QAAP,KAAoB,QAApB,IACAA,QAAQ,KAAK,IADb,IAEAA,QAAQ,CAACzxB,IAAT,KAAkBnC,mBAFlB,IAGA4zB,QAAQ,CAACl0B,GAAT,KAAiB,IAJnB;;AAKA,QAAIo4B,yBAAJ,EAA+B;AAC7BlE,MAAAA,QAAQ,GAAGA,QAAQ,CAAC/lB,KAAT,CAAe4H,QAA1B;AACD,KAhBa;;;AAmBd,QAAMsiB,QAAQ,GAAG,OAAOnE,QAAP,KAAoB,QAApB,IAAgCA,QAAQ,KAAK,IAA9D;;AAEA,QAAImE,QAAJ,EAAc;AACZ,cAAQnE,QAAQ,CAACtxB,QAAjB;AACE,aAAKxC,kBAAL;AACE,iBAAOq1B,gBAAgB,CACrBwC,sBAAsB,CACpBzE,WADoB,EAEpBsB,iBAFoB,EAGpBZ,QAHoB,EAIpBra,KAJoB,CADD,CAAvB;;AAQF,aAAKxZ,iBAAL;AACE,iBAAOo1B,gBAAgB,CACrByC,qBAAqB,CACnB1E,WADmB,EAEnBsB,iBAFmB,EAGnBZ,QAHmB,EAInBra,KAJmB,CADA,CAAvB;;AAQF,aAAK9Y,eAAL;AACE,UAAwB;AACtB,gBAAMoC,OAAO,GAAG+wB,QAAQ,CAAC9wB,QAAzB;AACA,gBAAMC,IAAI,GAAG6wB,QAAQ,CAAC5wB,KAAtB,CAFsB;;AAItB,mBAAO60B,oBAAoB,CACzB3E,WADyB,EAEzBsB,iBAFyB,EAGzBzxB,IAAI,CAACF,OAAD,CAHqB,EAIzB0W,KAJyB,CAA3B;AAMD;;AA9BL;AAgCD;;AAED,QAAI,OAAOqa,QAAP,KAAoB,QAApB,IAAgC,OAAOA,QAAP,KAAoB,QAAxD,EAAkE;AAChE,aAAOuB,gBAAgB,CACrBuC,uBAAuB,CACrBxE,WADqB,EAErBsB,iBAFqB,EAGrB,KAAKZ,QAHgB,EAIrBra,KAJqB,CADF,CAAvB;AAQD;;AAED,QAAIuU,SAAO,CAAC8F,QAAD,CAAX,EAAuB;AACrB,aAAOiD,sBAAsB,CAC3B3D,WAD2B,EAE3BsB,iBAF2B,EAG3BZ,QAH2B,EAI3Bra,KAJ2B,CAA7B;AAMD;;AAED,QAAI/X,aAAa,CAACoyB,QAAD,CAAjB,EAA6B;AAC3B,aAAOuD,yBAAyB,CAC9BjE,WAD8B,EAE9BsB,iBAF8B,EAG9BZ,QAH8B,EAI9Bra,KAJ8B,CAAhC;AAMD;;AAED,QAAIwe,QAAJ,EAAc;AACZpE,MAAAA,wBAAwB,CAACT,WAAD,EAAcU,QAAd,CAAxB;AACD;;AAED,IAAa;AACX,UAAI,OAAOA,QAAP,KAAoB,UAAxB,EAAoC;AAClCC,QAAAA,kBAAkB,CAACX,WAAD,CAAlB;AACD;AACF;;AACD,QAAI,OAAOU,QAAP,KAAoB,WAApB,IAAmC,CAACkE,yBAAxC,EAAmE;AACjE;AACA;AACA;AACA,cAAQ5E,WAAW,CAAC7wB,GAApB;AACE,aAAKpE,cAAL;AAAqB;AACnB,YAAa;AACX,kBAAMyH,QAAQ,GAAGwtB,WAAW,CAACvtB,SAA7B;;AACA,kBAAID,QAAQ,CAAChD,MAAT,CAAgBs1B,eAApB,EAAqC;AACnC;AACA;AACD;AACF;AACF;AACD;AACA;AACA;;AACA,aAAK14B,KAAL;AACA,aAAKtB,iBAAL;AACA,aAAKW,UAAL;AACA,aAAKI,mBAAL;AAA0B;AAAA;AAAA;AAAA,8BAMtBqD,gBAAgB,CAAC8wB,WAAW,CAAC/wB,IAAb,CAAhB,IAAsC,WANhB;AAAA;AAAA;AAQzB;AAxBH;AA0BD,KA5Ha;;;AA+Hd,WAAOoyB,uBAAuB,CAACrB,WAAD,EAAcsB,iBAAd,CAA9B;AACD;;AAED,SAAOqD,oBAAP;AACD;;AAED,AAAO,IAAMA,oBAAoB,GAAG9D,eAAe,CAAC,IAAD,CAA5C;AACP,AAAO,IAAMkE,gBAAgB,GAAGlE,eAAe,CAAC,KAAD,CAAxC;AAEP,AAAO,SAASmE,gBAAT,CACL1yB,OADK,EAELsN,cAFK,EAGC;AAAA,QAEJtN,OAAO,KAAK,IAAZ,IAAoBsN,cAAc,CAACzM,KAAf,KAAyBb,OAAO,CAACa,KAFjD;AAAA;AAAA;AAAA;AAAA;;AAMN,MAAIyM,cAAc,CAACzM,KAAf,KAAyB,IAA7B,EAAmC;AACjC;AACD;;AAED,MAAI8xB,YAAY,GAAGrlB,cAAc,CAACzM,KAAlC;AACA,MAAIutB,QAAQ,GAAGiB,oBAAoB,CAACsD,YAAD,EAAeA,YAAY,CAACzF,YAA5B,CAAnC;AACA5f,EAAAA,cAAc,CAACzM,KAAf,GAAuButB,QAAvB;AAEAA,EAAAA,QAAQ,CAACzuB,MAAT,GAAkB2N,cAAlB;;AACA,SAAOqlB,YAAY,CAAC7xB,OAAb,KAAyB,IAAhC,EAAsC;AACpC6xB,IAAAA,YAAY,GAAGA,YAAY,CAAC7xB,OAA5B;AACAstB,IAAAA,QAAQ,GAAGA,QAAQ,CAACttB,OAAT,GAAmBuuB,oBAAoB,CAChDsD,YADgD,EAEhDA,YAAY,CAACzF,YAFmC,CAAlD;AAIAkB,IAAAA,QAAQ,CAACzuB,MAAT,GAAkB2N,cAAlB;AACD;;AACD8gB,EAAAA,QAAQ,CAACttB,OAAT,GAAmB,IAAnB;AACD;;AAGD,AAAO,SAAS8xB,gBAAT,CAA0BtlB,cAA1B,EAAiDyG,KAAjD,EAAqE;AAC1E,MAAIlT,KAAK,GAAGyM,cAAc,CAACzM,KAA3B;;AACA,SAAOA,KAAK,KAAK,IAAjB,EAAuB;AACrBgyB,IAAAA,mBAAmB,CAAChyB,KAAD,EAAQkT,KAAR,CAAnB;AACAlT,IAAAA,KAAK,GAAGA,KAAK,CAACC,OAAd;AACD;AACF;;ACv5CD,IAAMgyB,UAAsB,GAAI,EAAhC;AAEA,IAAM5lB,oBAAyD,GAAGR,YAAY,CAC5EomB,UAD4E,CAA9E;AAGA,IAAMC,uBAAwD,GAAGrmB,YAAY,CAC3EomB,UAD2E,CAA7E;AAGA,IAAME,uBAEL,GAAGtmB,YAAY,CAAComB,UAAD,CAFhB;;AAIA,SAASG,eAAT,CAAgCtoB,CAAhC,EAA8D;AAAA,QAE1DA,CAAC,KAAKmoB,UAFoD;AAAA;AAAA;AAAA;AAAA;;AAM5D,SAAQnoB,CAAR;AACD;;AAED,SAASuoB,oBAAT,GAA2C;AACzC,MAAMC,YAAY,GAAGF,eAAe,CAACD,uBAAuB,CAAChzB,OAAzB,CAApC;AACA,SAAOmzB,YAAP;AACD;;AAED,SAASC,iBAAT,CAA2B/zB,KAA3B,EAAyCg0B,gBAAzC,EAAsE;AACpE;AACA;AACAvmB,EAAAA,IAAI,CAACkmB,uBAAD,EAA0BK,gBAA1B,EAA4Ch0B,KAA5C,CAAJ,CAHoE;AAKpE;;AACAyN,EAAAA,IAAI,CAACimB,uBAAD,EAA0B1zB,KAA1B,EAAiCA,KAAjC,CAAJ,CANoE;AASpE;AACA;AACA;AACA;;AACAyN,EAAAA,IAAI,CAACI,oBAAD,EAAqB4lB,UAArB,EAAiCzzB,KAAjC,CAAJ;AACA,MAAMi0B,eAAe,GAAG5xB,kBAAkB,CAAC2xB,gBAAD,CAA1C,CAdoE;;AAgBpEzmB,EAAAA,GAAG,CAACM,oBAAD,EAAqB7N,KAArB,CAAH;AACAyN,EAAAA,IAAI,CAACI,oBAAD,EAAqBomB,eAArB,EAAsCj0B,KAAtC,CAAJ;AACD;;AAED,SAASk0B,gBAAT,CAA0Bl0B,KAA1B,EAAwC;AACtCuN,EAAAA,GAAG,CAACM,oBAAD,EAAqB7N,KAArB,CAAH;AACAuN,EAAAA,GAAG,CAACmmB,uBAAD,EAA0B1zB,KAA1B,CAAH;AACAuN,EAAAA,GAAG,CAAComB,uBAAD,EAA0B3zB,KAA1B,CAAH;AACD;;AAED,SAASm0B,cAAT,GAAuC;AACrC,MAAMz2B,OAAO,GAAGk2B,eAAe,CAAC/lB,oBAAkB,CAAClN,OAApB,CAA/B;AACA,SAAOjD,OAAP;AACD;;AAED,SAAS02B,eAAT,CAAyBp0B,KAAzB,EAA6C;AAC3C,MAAM8zB,YAAuB,GAAGF,eAAe,CAC7CD,uBAAuB,CAAChzB,OADqB,CAA/C;AAGA,MAAMjD,OAAoB,GAAGk2B,eAAe,CAAC/lB,oBAAkB,CAAClN,OAApB,CAA5C;AACA,MAAMoqB,WAAW,GAAGzoB,mBAAmB,CAAC5E,OAAD,EAAUsC,KAAK,CAAC1C,IAAhB,EAAsBw2B,YAAtB,CAAvC,CAL2C;;AAQ3C,MAAIp2B,OAAO,KAAKqtB,WAAhB,EAA6B;AAC3B;AACD,GAV0C;AAa3C;;;AACAtd,EAAAA,IAAI,CAACimB,uBAAD,EAA0B1zB,KAA1B,EAAiCA,KAAjC,CAAJ;AACAyN,EAAAA,IAAI,CAACI,oBAAD,EAAqBkd,WAArB,EAAkC/qB,KAAlC,CAAJ;AACD;;AAED,SAASq0B,cAAT,CAAwBr0B,KAAxB,EAA4C;AAC1C;AACA;AACA,MAAI0zB,uBAAuB,CAAC/yB,OAAxB,KAAoCX,KAAxC,EAA+C;AAC7C;AACD;;AAEDuN,EAAAA,GAAG,CAACM,oBAAD,EAAqB7N,KAArB,CAAH;AACAuN,EAAAA,GAAG,CAACmmB,uBAAD,EAA0B1zB,KAA1B,CAAH;AACD;;ACrFD,IAAMs0B,sBAAuC,GAAG,CAAhD;AAGA;AACA;AACA;;AACA,IAAMC,0BAA2C,GAAG,CAApD;AAIA;AACA;AACA;AACA;AACA;AACA;;AACA,AAAO,IAAMC,8BAAsD,GAAG,CAA/D;AAIP;AACA;;AACA,AAAO,IAAMC,qBAA6C,GAAG,CAAtD;AAEP,AAAO,IAAMC,mBAAiD,GAAGrnB,YAAY,CAC3EinB,sBAD2E,CAAtE;AAIP,AAAO,SAASK,kBAAT,CACLzlB,aADK,EAEL0lB,IAFK,EAGI;AACT,SAAO,CAAC1lB,aAAa,GAAG0lB,IAAjB,MAA2B,CAAlC;AACD;AAED,AAAO,SAASC,gCAAT,CACL3lB,aADK,EAEY;AACjB,SAAOA,aAAa,GAAGqlB,0BAAvB;AACD;AAED,AAAO,SAASO,yBAAT,CACL5lB,aADK,EAEL6lB,cAFK,EAGY;AACjB,SAAQ7lB,aAAa,GAAGqlB,0BAAjB,GAA+CQ,cAAtD;AACD;AAED,AAAO,SAASC,yBAAT,CACL9lB,aADK,EAEL+lB,cAFK,EAGY;AACjB,SAAO/lB,aAAa,GAAG+lB,cAAvB;AACD;AAED,AAAO,SAASC,mBAAT,CACLl1B,KADK,EAELm1B,UAFK,EAGC;AACN1nB,EAAAA,IAAI,CAACinB,mBAAD,EAAsBS,UAAtB,EAAkCn1B,KAAlC,CAAJ;AACD;AAED,AAAO,SAASo1B,kBAAT,CAA4Bp1B,KAA5B,EAAgD;AACrDuN,EAAAA,GAAG,CAACmnB,mBAAD,EAAsB10B,KAAtB,CAAH;AACD;;ACfM,SAASq1B,qBAAT,CACLpnB,cADK,EAELqnB,kBAFK,EAGI;AACT;AACA;AACA,MAAM5N,SAA+B,GAAGzZ,cAAc,CAACuY,aAAvD;;AACA,MAAIkB,SAAS,KAAK,IAAlB,EAAwB;AACtB,QAAIA,SAAS,CAAC6N,UAAV,KAAyB,IAA7B,EAAmC;AACjC;AACA,aAAO,IAAP;AACD;;AACD,WAAO,KAAP;AACD;;AACD,MAAMvsB,KAAK,GAAGiF,cAAc,CAACof,aAA7B,CAXS;;AAaT,MAAIrkB,KAAK,CAACwsB,QAAN,KAAmB5rB,SAAvB,EAAkC;AAChC,WAAO,KAAP;AACD,GAfQ;;;AAiBT,MAAIZ,KAAK,CAACysB,0BAAN,KAAqC,IAAzC,EAA+C;AAC7C,WAAO,IAAP;AACD,GAnBQ;AAqBT;;;AACA,MAAIH,kBAAJ,EAAwB;AACtB,WAAO,KAAP;AACD,GAxBQ;;;AA0BT,SAAO,IAAP;AACD;AAED,AAAO,SAASI,kBAAT,CAA4BC,GAA5B,EAAsD;AAC3D,MAAI11B,IAAI,GAAG01B,GAAX;;AACA,SAAO11B,IAAI,KAAK,IAAhB,EAAsB;AACpB,QAAIA,IAAI,CAACzC,GAAL,KAAaxD,iBAAjB,EAAoC;AAClC,UAAMuxB,KAA2B,GAAGtrB,IAAI,CAACumB,aAAzC;;AACA,UAAI+E,KAAK,KAAK,IAAd,EAAoB;AAClB,YAAMgK,UAAmC,GAAGhK,KAAK,CAACgK,UAAlD;;AACA,YACEA,UAAU,KAAK,IAAf,IACA9uB,yBAAyB,CAAC8uB,UAAD,CADzB,IAEA7uB,0BAA0B,CAAC6uB,UAAD,CAH5B,EAIE;AACA,iBAAOt1B,IAAP;AACD;AACF;AACF,KAZD,MAYO,IACLA,IAAI,CAACzC,GAAL,KAAalD,qBAAb;AAEA;AACA2F,IAAAA,IAAI,CAACotB,aAAL,CAAmBuI,WAAnB,KAAmChsB,SAJ9B,EAKL;AACA,UAAMisB,UAAU,GAAG,CAAC51B,IAAI,CAACI,KAAL,GAAaxB,UAAd,MAA8BR,OAAjD;;AACA,UAAIw3B,UAAJ,EAAgB;AACd,eAAO51B,IAAP;AACD;AACF,KAVM,MAUA,IAAIA,IAAI,CAACuB,KAAL,KAAe,IAAnB,EAAyB;AAC9BvB,MAAAA,IAAI,CAACuB,KAAL,CAAWlB,MAAX,GAAoBL,IAApB;AACAA,MAAAA,IAAI,GAAGA,IAAI,CAACuB,KAAZ;AACA;AACD;;AACD,QAAIvB,IAAI,KAAK01B,GAAb,EAAkB;AAChB,aAAO,IAAP;AACD;;AACD,WAAO11B,IAAI,CAACwB,OAAL,KAAiB,IAAxB,EAA8B;AAC5B,UAAIxB,IAAI,CAACK,MAAL,KAAgB,IAAhB,IAAwBL,IAAI,CAACK,MAAL,KAAgBq1B,GAA5C,EAAiD;AAC/C,eAAO,IAAP;AACD;;AACD11B,MAAAA,IAAI,GAAGA,IAAI,CAACK,MAAZ;AACD;;AACDL,IAAAA,IAAI,CAACwB,OAAL,CAAanB,MAAb,GAAsBL,IAAI,CAACK,MAA3B;AACAL,IAAAA,IAAI,GAAGA,IAAI,CAACwB,OAAZ;AACD;;AACD,SAAO,IAAP;AACD;;ACnIM,IAAMpD,SAAO;AAAG;AAAO,CAAvB;;AAGP,AAAO,IAAMy3B,SAAS;AAAG;AAAM,CAAxB;;AAGP,AAAO,IAAMC,MAAM;AAAG;AAAS,CAAxB;AACP,AAAO,IAAM/2B,SAAO;AAAG;AAAQ,CAAxB;;AC0CP;;AACA,IAAIg3B,oBAAkC,GAAG,IAAzC;AACA,IAAIC,sBAAiD,GAAG,IAAxD;AACA,IAAIC,WAAoB,GAAG,KAA3B;;AAEA,SAASC,eAAT,GAA2B;AACzB,EAAa;AACX,QAAID,WAAJ,EAAiB;AACf,YACE,6EADF;AAGD;AACF;AACF;;AAED,SAASE,mBAAT,CAA6Bp2B,KAA7B,EAAoD;AAClD,MAAI,CAACuD,iBAAL,EAAwB;AACtB,WAAO,KAAP;AACD;;AAED,MAAM8yB,cAAc,GAAGr2B,KAAK,CAACc,SAAN,CAAgBowB,aAAvC;AACA+E,EAAAA,sBAAsB,GAAGpvB,uBAAuB,CAACwvB,cAAD,CAAhD;AACAL,EAAAA,oBAAoB,GAAGh2B,KAAvB;AACAk2B,EAAAA,WAAW,GAAG,IAAd;AACA,SAAO,IAAP;AACD;;AAED,SAASI,mDAAT,CACEt2B,KADF,EAEEu2B,gBAFF,EAGW;AACT,MAAI,CAAChzB,iBAAL,EAAwB;AACtB,WAAO,KAAP;AACD;;AACD0yB,EAAAA,sBAAsB,GAAGrvB,wBAAwB,CAAC2vB,gBAAD,CAAjD;AACAC,EAAAA,mBAAmB,CAACx2B,KAAD,CAAnB;AACAk2B,EAAAA,WAAW,GAAG,IAAd;AACA,SAAO,IAAP;AACD;;AAED,SAASO,wBAAT,CACEpI,WADF,EAEExtB,QAFF,EAGE;AACA,EAAa;AACX,YAAQwtB,WAAW,CAAC7wB,GAApB;AACE,WAAKlE,QAAL;AACEkO,QAAAA,8BAA8B,CAC5B6mB,WAAW,CAACvtB,SAAZ,CAAsBowB,aADM,EAE5BrwB,QAF4B,CAA9B;AAIA;;AACF,WAAKrH,aAAL;AACEiO,QAAAA,qBAAqB,CACnB4mB,WAAW,CAAC/wB,IADO,EAEnB+wB,WAAW,CAAChB,aAFO,EAGnBgB,WAAW,CAACvtB,SAHO,EAInBD,QAJmB,CAArB;AAMA;AAdJ;AAgBD;;AAED,MAAMwuB,aAAa,GAAGqH,sCAAsC,EAA5D;AACArH,EAAAA,aAAa,CAACvuB,SAAd,GAA0BD,QAA1B;AACAwuB,EAAAA,aAAa,CAAC/uB,MAAd,GAAuB+tB,WAAvB;AACAgB,EAAAA,aAAa,CAAChvB,KAAd,GAAsB3B,QAAtB,CAvBA;AA0BA;AACA;AACA;AACA;;AACA,MAAI2vB,WAAW,CAACkB,UAAZ,KAA2B,IAA/B,EAAqC;AACnClB,IAAAA,WAAW,CAACkB,UAAZ,CAAuBC,UAAvB,GAAoCH,aAApC;AACAhB,IAAAA,WAAW,CAACkB,UAAZ,GAAyBF,aAAzB;AACD,GAHD,MAGO;AACLhB,IAAAA,WAAW,CAACoB,WAAZ,GAA0BpB,WAAW,CAACkB,UAAZ,GAAyBF,aAAnD;AACD;AACF;;AAED,SAASsH,yBAAT,CAAmCtI,WAAnC,EAAuDruB,KAAvD,EAAqE;AACnEA,EAAAA,KAAK,CAACK,KAAN,GAAeL,KAAK,CAACK,KAAN,GAAc,CAACnB,SAAhB,GAA6BX,SAA3C;;AACA,EAAa;AACX,YAAQ8vB,WAAW,CAAC7wB,GAApB;AACE,WAAKlE,QAAL;AAAe;AACb,cAAMs9B,eAAe,GAAGvI,WAAW,CAACvtB,SAAZ,CAAsBowB,aAA9C;;AACA,kBAAQlxB,KAAK,CAACxC,GAAd;AACE,iBAAKhE,aAAL;AACE,kBAAM8D,IAAI,GAAG0C,KAAK,CAAC1C,IAAnB;AACA,kBAAM0L,KAAK,GAAGhJ,KAAK,CAAC6tB,YAApB;AACAnmB,cAAAA,qCAAqC,CAACkvB,eAAD,EAAkBt5B,IAAlB,EAAwB0L,KAAxB,CAArC;AACA;;AACF,iBAAKvP,QAAL;AACE,kBAAMo9B,IAAI,GAAG72B,KAAK,CAAC6tB,YAAnB;AACAlmB,cAAAA,yCAAyC,CAACivB,eAAD,EAAkBC,IAAlB,CAAzC;AACA;;AACF,iBAAK78B,iBAAL;AACE4N,cAAAA,6CAA6C,CAACgvB,eAAD,CAA7C;AACA;AAZJ;;AAcA;AACD;;AACD,WAAKp9B,aAAL;AAAoB;AAClB,cAAMs9B,UAAU,GAAGzI,WAAW,CAAC/wB,IAA/B;AACA,cAAMy5B,WAAW,GAAG1I,WAAW,CAAChB,aAAhC;AACA,cAAMgJ,cAAc,GAAGhI,WAAW,CAACvtB,SAAnC;;AACA,kBAAQd,KAAK,CAACxC,GAAd;AACE,iBAAKhE,aAAL;AACE,kBAAM8D,KAAI,GAAG0C,KAAK,CAAC1C,IAAnB;AACA,kBAAM0L,MAAK,GAAGhJ,KAAK,CAAC6tB,YAApB;AACAhmB,cAAAA,4BAA4B,CAC1BivB,UAD0B,EAE1BC,WAF0B,EAG1BV,cAH0B,EAI1B/4B,KAJ0B,EAK1B0L,MAL0B,CAA5B;AAOA;;AACF,iBAAKvP,QAAL;AACE,kBAAMo9B,KAAI,GAAG72B,KAAK,CAAC6tB,YAAnB;AACA/lB,cAAAA,gCAAgC,CAC9BgvB,UAD8B,EAE9BC,WAF8B,EAG9BV,cAH8B,EAI9BQ,KAJ8B,CAAhC;AAMA;;AACF,iBAAK78B,iBAAL;AACE+N,cAAAA,oCAAoC,CAClC+uB,UADkC,EAElCC,WAFkC,EAGlCV,cAHkC,CAApC;AAKA;AA3BJ;;AA6BA;AACD;;AACD;AACE;AAvDJ;AAyDD;AACF;;AAED,SAASW,UAAT,CAAoBh3B,KAApB,EAA2Bi3B,YAA3B,EAAyC;AACvC,UAAQj3B,KAAK,CAACxC,GAAd;AACE,SAAKhE,aAAL;AAAoB;AAClB,YAAM8D,IAAI,GAAG0C,KAAK,CAAC1C,IAAnB;AACA,YAAM0L,KAAK,GAAGhJ,KAAK,CAAC6tB,YAApB;AACA,YAAMhtB,QAAQ,GAAGyF,kBAAkB,CAAC2wB,YAAD,EAAe35B,IAAf,EAAqB0L,KAArB,CAAnC;;AACA,YAAInI,QAAQ,KAAK,IAAjB,EAAuB;AACrBb,UAAAA,KAAK,CAACc,SAAN,GAAmBD,QAAnB;AACA,iBAAO,IAAP;AACD;;AACD,eAAO,KAAP;AACD;;AACD,SAAKpH,QAAL;AAAe;AACb,YAAMo9B,IAAI,GAAG72B,KAAK,CAAC6tB,YAAnB;AACA,YAAMqJ,YAAY,GAAG3wB,sBAAsB,CAAC0wB,YAAD,EAAeJ,IAAf,CAA3C;;AACA,YAAIK,YAAY,KAAK,IAArB,EAA2B;AACzBl3B,UAAAA,KAAK,CAACc,SAAN,GAAmBo2B,YAAnB;AACA,iBAAO,IAAP;AACD;;AACD,eAAO,KAAP;AACD;;AACD,SAAKl9B,iBAAL;AAAwB;AACtB,QAAkC;AAChC,cAAMu8B,gBAAyC,GAAG/vB,0BAA0B,CAC1EywB,YAD0E,CAA5E;;AAGA,cAAIV,gBAAgB,KAAK,IAAzB,EAA+B;AAC7B,gBAAMY,aAA4B,GAAG;AACnC5B,cAAAA,UAAU,EAAEgB,gBADuB;AAEnCa,cAAAA,SAAS,EAAEljB;AAFwB,aAArC;AAIAlU,YAAAA,KAAK,CAACwmB,aAAN,GAAsB2Q,aAAtB,CAL6B;AAO7B;AACA;AACA;;AACA,gBAAME,kBAAkB,GAAGC,iCAAiC,CAC1Df,gBAD0D,CAA5D;AAGAc,YAAAA,kBAAkB,CAAC/2B,MAAnB,GAA4BN,KAA5B;AACAA,YAAAA,KAAK,CAACwB,KAAN,GAAc61B,kBAAd;AACA,mBAAO,IAAP;AACD;AACF;;AACD,eAAO,KAAP;AACD;;AACD;AACE,aAAO,KAAP;AA9CJ;AAgDD;;AAED,SAASE,gCAAT,CAA0Cv3B,KAA1C,EAA8D;AAC5D,MAAI,CAACk2B,WAAL,EAAkB;AAChB;AACD;;AACD,MAAIe,YAAY,GAAGhB,sBAAnB;;AACA,MAAI,CAACgB,YAAL,EAAmB;AACjB;AACAN,IAAAA,yBAAyB,CAAEX,oBAAF,EAA8Bh2B,KAA9B,CAAzB;AACAk2B,IAAAA,WAAW,GAAG,KAAd;AACAF,IAAAA,oBAAoB,GAAGh2B,KAAvB;AACA;AACD;;AACD,MAAMw3B,sBAAsB,GAAGP,YAA/B;;AACA,MAAI,CAACD,UAAU,CAACh3B,KAAD,EAAQi3B,YAAR,CAAf,EAAsC;AACpC;AACA;AACA;AACAA,IAAAA,YAAY,GAAGrwB,wBAAwB,CAAC4wB,sBAAD,CAAvC;;AACA,QAAI,CAACP,YAAD,IAAiB,CAACD,UAAU,CAACh3B,KAAD,EAAQi3B,YAAR,CAAhC,EAAuD;AACrD;AACAN,MAAAA,yBAAyB,CAAEX,oBAAF,EAA8Bh2B,KAA9B,CAAzB;AACAk2B,MAAAA,WAAW,GAAG,KAAd;AACAF,MAAAA,oBAAoB,GAAGh2B,KAAvB;AACA;AACD,KAXmC;AAapC;AACA;AACA;;;AACAy2B,IAAAA,wBAAwB,CACrBT,oBADqB,EAEtBwB,sBAFsB,CAAxB;AAID;;AACDxB,EAAAA,oBAAoB,GAAGh2B,KAAvB;AACAi2B,EAAAA,sBAAsB,GAAGpvB,uBAAuB,CAAEowB,YAAF,CAAhD;AACD;;AAED,SAASQ,4BAAT,CACEz3B,KADF,EAEE03B,qBAFF,EAGEC,WAHF,EAIW;AACT,MAAI,CAACp0B,iBAAL,EAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAMvB;;AAED,MAAM1C,QAAkB,GAAGb,KAAK,CAACc,SAAjC;AACA,MAAM82B,aAAa,GAAG9wB,eAAe,CACnCjG,QADmC,EAEnCb,KAAK,CAAC1C,IAF6B,EAGnC0C,KAAK,CAACqtB,aAH6B,EAInCqK,qBAJmC,EAKnCC,WALmC,EAMnC33B,KANmC,CAArC,CAVS;;AAmBTA,EAAAA,KAAK,CAAC8mB,WAAN,GAAqB8Q,aAArB,CAnBS;AAqBT;;AACA,MAAIA,aAAa,KAAK,IAAtB,EAA4B;AAC1B,WAAO,IAAP;AACD;;AACD,SAAO,KAAP;AACD;;AAED,SAASC,gCAAT,CAA0C73B,KAA1C,EAAiE;AAC/D,MAAI,CAACuD,iBAAL,EAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAMvB;;AAED,MAAM2zB,YAA0B,GAAGl3B,KAAK,CAACc,SAAzC;AACA,MAAM0vB,WAAmB,GAAGxwB,KAAK,CAACqtB,aAAlC;AACA,MAAMpC,YAAY,GAAGlkB,mBAAmB,CAACmwB,YAAD,EAAe1G,WAAf,EAA4BxwB,KAA5B,CAAxC;;AACA,EAAa;AACX,QAAIirB,YAAJ,EAAkB;AAChB;AACA;AACA,UAAMoD,WAAW,GAAG2H,oBAApB;;AACA,UAAI3H,WAAW,KAAK,IAApB,EAA0B;AACxB,gBAAQA,WAAW,CAAC7wB,GAApB;AACE,eAAKlE,QAAL;AAAe;AACb,kBAAMs9B,eAAe,GAAGvI,WAAW,CAACvtB,SAAZ,CAAsBowB,aAA9C;AACA5pB,cAAAA,wCAAwC,CACtCsvB,eADsC,EAEtCM,YAFsC,EAGtC1G,WAHsC,CAAxC;AAKA;AACD;;AACD,eAAKh3B,aAAL;AAAoB;AAClB,kBAAMs9B,UAAU,GAAGzI,WAAW,CAAC/wB,IAA/B;AACA,kBAAMy5B,WAAW,GAAG1I,WAAW,CAAChB,aAAhC;AACA,kBAAMgJ,cAAc,GAAGhI,WAAW,CAACvtB,SAAnC;AACAyG,cAAAA,+BAA+B,CAC7BuvB,UAD6B,EAE7BC,WAF6B,EAG7BV,cAH6B,EAI7Ba,YAJ6B,EAK7B1G,WAL6B,CAA/B;AAOA;AACD;AAtBH;AAwBD;AACF;AACF;;AACD,SAAOvF,YAAP;AACD;;AAED,SAAS6M,oCAAT,CAA8C93B,KAA9C,EAAkE;AAChE,MAAI,CAACuD,iBAAL,EAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAMvB;;AAED,MAAM4zB,aAAmC,GAAGn3B,KAAK,CAACwmB,aAAlD;AACA,MAAM+P,gBAAyC,GAC7CY,aAAa,KAAK,IAAlB,GAAyBA,aAAa,CAAC5B,UAAvC,GAAoD,IADtD;;AAVgE,OAa9DgB,gBAb8D;AAAA;AAAA;AAAA;AAAA;;AAiBhEvvB,EAAAA,uBAAuB,CAACuvB,gBAAD,EAAmBv2B,KAAnB,CAAvB;AACD;;AAED,SAAS+3B,kCAAT,CACE/3B,KADF,EAE6B;AAC3B,MAAI,CAACuD,iBAAL,EAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAMvB;;AACD,MAAM4zB,aAAmC,GAAGn3B,KAAK,CAACwmB,aAAlD;AACA,MAAM+P,gBAAyC,GAC7CY,aAAa,KAAK,IAAlB,GAAyBA,aAAa,CAAC5B,UAAvC,GAAoD,IADtD;;AAT2B,OAYzBgB,gBAZyB;AAAA;AAAA;AAAA;AAAA;;AAgB3B,SAAOtvB,8CAA8C,CAACsvB,gBAAD,CAArD;AACD;;AAED,SAASC,mBAAT,CAA6Bx2B,KAA7B,EAAiD;AAC/C,MAAI4B,MAAM,GAAG5B,KAAK,CAACM,MAAnB;;AACA,SACEsB,MAAM,KAAK,IAAX,IACAA,MAAM,CAACpE,GAAP,KAAehE,aADf,IAEAoI,MAAM,CAACpE,GAAP,KAAelE,QAFf,IAGAsI,MAAM,CAACpE,GAAP,KAAexD,iBAJjB,EAKE;AACA4H,IAAAA,MAAM,GAAGA,MAAM,CAACtB,MAAhB;AACD;;AACD01B,EAAAA,oBAAoB,GAAGp0B,MAAvB;AACD;;AAED,SAASo2B,iBAAT,CAA2Bh4B,KAA3B,EAAkD;AAChD,MAAI,CAACuD,iBAAL,EAAwB;AACtB,WAAO,KAAP;AACD;;AACD,MAAIvD,KAAK,KAAKg2B,oBAAd,EAAoC;AAClC;AACA;AACA,WAAO,KAAP;AACD;;AACD,MAAI,CAACE,WAAL,EAAkB;AAChB;AACA;AACA;AACAM,IAAAA,mBAAmB,CAACx2B,KAAD,CAAnB;AACAk2B,IAAAA,WAAW,GAAG,IAAd;AACA,WAAO,KAAP;AACD;;AAED,MAAM54B,IAAI,GAAG0C,KAAK,CAAC1C,IAAnB,CAlBgD;AAqBhD;AACA;AACA;AACA;;AACA,MACE0C,KAAK,CAACxC,GAAN,KAAchE,aAAd,IACC8D,IAAI,KAAK,MAAT,IACCA,IAAI,KAAK,MADV,IAEC,CAACuF,oBAAoB,CAACvF,IAAD,EAAO0C,KAAK,CAACqtB,aAAb,CAJzB,EAKE;AACA,QAAI4J,YAAY,GAAGhB,sBAAnB;;AACA,WAAOgB,YAAP,EAAqB;AACnBR,MAAAA,wBAAwB,CAACz2B,KAAD,EAAQi3B,YAAR,CAAxB;AACAA,MAAAA,YAAY,GAAGrwB,wBAAwB,CAACqwB,YAAD,CAAvC;AACD;AACF;;AAEDT,EAAAA,mBAAmB,CAACx2B,KAAD,CAAnB;;AACA,MAAIA,KAAK,CAACxC,GAAN,KAAcxD,iBAAlB,EAAqC;AACnCi8B,IAAAA,sBAAsB,GAAG8B,kCAAkC,CAAC/3B,KAAD,CAA3D;AACD,GAFD,MAEO;AACLi2B,IAAAA,sBAAsB,GAAGD,oBAAoB,GACzCpvB,wBAAwB,CAAC5G,KAAK,CAACc,SAAP,CADiB,GAEzC,IAFJ;AAGD;;AACD,SAAO,IAAP;AACD;;AAED,SAASm3B,mBAAT,GAAqC;AACnC,MAAI,CAAC10B,iBAAL,EAAwB;AACtB;AACD;;AAEDyyB,EAAAA,oBAAoB,GAAG,IAAvB;AACAC,EAAAA,sBAAsB,GAAG,IAAzB;AACAC,EAAAA,WAAW,GAAG,KAAd;AACD;;AAED,SAASgC,cAAT,GAAmC;AACjC,SAAOhC,WAAP;AACD;;ACzdD;AACA;;AACA,IAAMiC,qBAAgD,GAAG,EAAzD;AAEA,IAAI/U,eAAJ;;AACA,AAAa;AACX;AACAA,EAAAA,eAAa,GAAG,EAAhB;AACD;;AAED,AAAO,SAASgV,iBAAT,CAA2BC,aAA3B,EAAoE;AACzEF,EAAAA,qBAAqB,CAAC1qB,IAAtB,CAA2B4qB,aAA3B;AACD;AAED,AAAO,SAASC,2BAAT,GAA6C;AAClD,OAAK,IAAItf,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGmf,qBAAqB,CAAC9sB,MAA1C,EAAkD2N,CAAC,EAAnD,EAAuD;AACrD,QAAMqf,aAAa,GAAGF,qBAAqB,CAACnf,CAAD,CAA3C;;AACA,QAAI7V,iBAAJ,EAAuB;AACrBk1B,MAAAA,aAAa,CAACE,6BAAd,GAA8C,IAA9C;AACD,KAFD,MAEO;AACLF,MAAAA,aAAa,CAACG,+BAAd,GAAgD,IAAhD;AACD;AACF;;AACDL,EAAAA,qBAAqB,CAAC9sB,MAAtB,GAA+B,CAA/B;AACD;AAED,AAAO,SAASotB,wBAAT,CACLJ,aADK,EAEwB;AAC7B,MAAIl1B,iBAAJ,EAAuB;AACrB,WAAOk1B,aAAa,CAACE,6BAArB;AACD,GAFD,MAEO;AACL,WAAOF,aAAa,CAACG,+BAArB;AACD;AACF;AAED,AAAO,SAASE,wBAAT,CACLL,aADK,EAELM,OAFK,EAGC;AACN,MAAIx1B,iBAAJ,EAAuB;AACrBk1B,IAAAA,aAAa,CAACE,6BAAd,GAA8CI,OAA9C;AACD,GAFD,MAEO;AACLN,IAAAA,aAAa,CAACG,+BAAd,GAAgDG,OAAhD;AACD;;AACDR,EAAAA,qBAAqB,CAAC1qB,IAAtB,CAA2B4qB,aAA3B;AACD;AAED,AAAO,SAASO,6BAAT,CACLP,aADK,EAEC;AACN,EAAa;AACX,QAAIl1B,iBAAJ,EAAuB;AACrB,UAAIk1B,aAAa,CAACQ,uBAAd,IAAyC,IAA7C,EAAmD;AACjDR,QAAAA,aAAa,CAACQ,uBAAd,GAAwCzV,eAAxC;AACD,OAFD,MAEO,IAAIiV,aAAa,CAACQ,uBAAd,KAA0CzV,eAA9C,EAA6D;AAClE,cACE,4DACE,qDAFJ;AAID;AACF,KATD,MASO;AACL,UAAIiV,aAAa,CAACS,yBAAd,IAA2C,IAA/C,EAAqD;AACnDT,QAAAA,aAAa,CAACS,yBAAd,GAA0C1V,eAA1C;AACD,OAFD,MAEO,IAAIiV,aAAa,CAACS,yBAAd,KAA4C1V,eAAhD,EAA+D;AACpE,cACE,4DACE,qDAFJ;AAID;AACF;AACF;AACF;;ICKM7Z,2BAAmDzR,qBAAnDyR;IAAwB8U,4BAA2BvmB,qBAA3BumB;AAkC/B,IAAI0a,uCAAJ;AACA,IAAIC,+BAAJ;;AACA,AAAa;AACXA,EAAAA,+BAA+B,GAAG,EAAlC;AACAD,EAAAA,uCAAuC,GAAG,IAAI3X,GAAJ,EAA1C;AACD;;AAwBD;AACA,IAAIpH,WAAkB,GAAGhH,OAAzB;AAEA;;AACA,IAAIqQ,yBAA8B,GAAI,IAAtC;AAGA;AACA;AACA;;AACA,IAAI4V,WAAwB,GAAG,IAA/B;AACA,IAAIC,kBAA+B,GAAG,IAAtC;AAGA;AACA;AACA;;AACA,IAAIC,4BAAqC,GAAG,KAA5C;AAEA;AACA;AACA;;AACA,IAAIC,0CAAmD,GAAG,KAA1D;AAEA,IAAMC,eAAe,GAAG,EAAxB;;AAGA,IAAIC,oBAA+B,GAAG,IAAtC;AAGA;AACA;;AACA,IAAIC,YAAoC,GAAG,IAA3C;AACA,IAAIC,uBAA+B,GAAG,CAAC,CAAvC;AAGA;AACA;;AACA,IAAIC,0BAAmC,GAAG,KAA1C;;AAEA,SAASC,iBAAT,GAA6B;AAC3B,EAAa;AACX,QAAMC,QAAQ,GAAKL,oBAAnB;;AAEA,QAAIC,YAAY,KAAK,IAArB,EAA2B;AACzBA,MAAAA,YAAY,GAAG,CAACI,QAAD,CAAf;AACD,KAFD,MAEO;AACLJ,MAAAA,YAAY,CAAC9rB,IAAb,CAAkBksB,QAAlB;AACD;AACF;AACF;;AAED,SAASC,kBAAT,GAA8B;AAC5B,EAAa;AACX,QAAMD,QAAQ,GAAKL,oBAAnB;;AAEA,QAAIC,YAAY,KAAK,IAArB,EAA2B;AACzBC,MAAAA,uBAAuB;;AACvB,UAAID,YAAY,CAACC,uBAAD,CAAZ,KAA0CG,QAA9C,EAAwD;AACtDE,QAAAA,uBAAuB,CAACF,QAAD,CAAvB;AACD;AACF;AACF;AACF;;AAED,SAASG,oBAAT,CAA8BC,IAA9B,EAA2C;AACzC,EAAa;AACX,QAAIA,IAAI,KAAKnwB,SAAT,IAAsBmwB,IAAI,KAAK,IAA/B,IAAuC,CAAC7Q,KAAK,CAACD,OAAN,CAAc8Q,IAAd,CAA5C,EAAiE;AAC/D;AACA;AACA,YACE,sFACE,iDAFJ,EAGET,oBAHF,EAIE,OAAOS,IAJT;AAMD;AACF;AACF;;AAED,SAASF,uBAAT,CAAiCG,eAAjC,EAA4D;AAC1D,EAAa;AACX,QAAMttB,aAAa,GAAGnP,gBAAgB,CAAC8lB,yBAAuB,CAAC/lB,IAAzB,CAAtC;;AACA,QAAI,CAACy7B,uCAAuC,CAACpsB,GAAxC,CAA4CD,aAA5C,CAAL,EAAiE;AAC/DqsB,MAAAA,uCAAuC,CAAClX,GAAxC,CAA4CnV,aAA5C;;AAEA,UAAI6sB,YAAY,KAAK,IAArB,EAA2B;AACzB,YAAIU,KAAK,GAAG,EAAZ;AAEA,YAAMC,iBAAiB,GAAG,EAA1B;;AAEA,aAAK,IAAIlhB,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAMwgB,uBAAvB,EAA+DxgB,CAAC,EAAhE,EAAoE;AAClE,cAAMmhB,WAAW,GAAGZ,YAAY,CAACvgB,CAAD,CAAhC;AACA,cAAMohB,WAAW,GACfphB,CAAC,KAAOwgB,uBAAR,GACIQ,eADJ,GAEIG,WAHN;AAKA,cAAIxE,GAAG,GAAM3c,CAAC,GAAG,CAAV,UAAgBmhB,WAAvB,CAPkE;AAUlE;;AACA,iBAAOxE,GAAG,CAACtqB,MAAJ,GAAa6uB,iBAApB,EAAuC;AACrCvE,YAAAA,GAAG,IAAI,GAAP;AACD;;AAEDA,UAAAA,GAAG,IAAIyE,WAAW,GAAG,IAArB;AAEAH,UAAAA,KAAK,IAAItE,GAAT;AACD;;AAED,cACE,qEACE,kDADF,GAEE,4FAFF,GAGE,6CAHF,GAIE,6DAJF,GAKE,IALF,GAME,6DAPJ,EAQEjpB,aARF,EASEutB,KATF;AAWD;AACF;AACF;AACF;;AAED,SAASI,qBAAT,GAAiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAUhC;;AAED,SAASC,kBAAT,CACEC,QADF,EAEEC,QAFF,EAGE;AACA,EAAa;AACX,QAAIf,0BAAJ,EAAgC;AAC9B;AACA,aAAO,KAAP;AACD;AACF;;AAED,MAAIe,QAAQ,KAAK,IAAjB,EAAuB;AACrB,IAAa;AACX,YACE,qEACE,mEADF,GAEE,yCAHJ,EAIElB,oBAJF;AAMD;;AACD,WAAO,KAAP;AACD;;AAED,EAAa;AACX;AACA;AACA,QAAIiB,QAAQ,CAAClvB,MAAT,KAAoBmvB,QAAQ,CAACnvB,MAAjC,EAAyC;AACvC,YACE,uEACE,wDADF,GAEE,gBAFF,GAGE,cAJJ,EAKEiuB,oBALF,QAMMkB,QAAQ,CAAC5Z,IAAT,CAAc,IAAd,CANN,cAOM2Z,QAAQ,CAAC3Z,IAAT,CAAc,IAAd,CAPN;AASD;AACF;;AACD,OAAK,IAAI5H,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGwhB,QAAQ,CAACnvB,MAAb,IAAuB2N,CAAC,GAAGuhB,QAAQ,CAAClvB,MAApD,EAA4D2N,CAAC,EAA7D,EAAiE;AAC/D,QAAIyF,QAAE,CAAC8b,QAAQ,CAACvhB,CAAD,CAAT,EAAcwhB,QAAQ,CAACxhB,CAAD,CAAtB,CAAN,EAAkC;AAChC;AACD;;AACD,WAAO,KAAP;AACD;;AACD,SAAO,IAAP;AACD;;AAED,AAAO,SAASyhB,eAAT,CACL95B,OADK,EAELsN,cAFK,EAGLpC,SAHK,EAIL7C,KAJK,EAKL0xB,SALK,EAMLC,eANK,EAOA;AACL3gB,EAAAA,WAAW,GAAG2gB,eAAd;AACAtX,EAAAA,yBAAuB,GAAGpV,cAA1B;;AAEA,EAAa;AACXsrB,IAAAA,YAAY,GACV54B,OAAO,KAAK,IAAZ,GACMA,OAAO,CAACi6B,eADd,GAEI,IAHN;AAIApB,IAAAA,uBAAuB,GAAG,CAAC,CAA3B,CALW;;AAOXC,IAAAA,0BAA0B,GACxB94B,OAAO,KAAK,IAAZ,IAAoBA,OAAO,CAACrD,IAAR,KAAiB2Q,cAAc,CAAC3Q,IADtD;AAED;;AAED2Q,EAAAA,cAAc,CAACuY,aAAf,GAA+B,IAA/B;AACAvY,EAAAA,cAAc,CAAC6Y,WAAf,GAA6B,IAA7B;AACA7Y,EAAAA,cAAc,CAACyG,KAAf,GAAuB1B,OAAvB,CAjBK;AAoBL;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;;AACA,EAAa;AACX,QAAIrS,OAAO,KAAK,IAAZ,IAAoBA,OAAO,CAAC6lB,aAAR,KAA0B,IAAlD,EAAwD;AACtDjd,MAAAA,wBAAsB,CAAC5I,OAAvB,GAAiCk6B,4BAAjC;AACD,KAFD,MAEO,IAAItB,YAAY,KAAK,IAArB,EAA2B;AAChC;AACA;AACA;AACA;AACA;AACAhwB,MAAAA,wBAAsB,CAAC5I,OAAvB,GAAiCm6B,wCAAjC;AACD,KAPM,MAOA;AACLvxB,MAAAA,wBAAsB,CAAC5I,OAAvB,GAAiCo6B,2BAAjC;AACD;AACF,GAbD;;AAoBA,MAAInqB,QAAQ,GAAG/E,SAAS,CAAC7C,KAAD,EAAQ0xB,SAAR,CAAxB,CApDK;;AAuDL,MAAItB,0CAAJ,EAAgD;AAC9C;AACA;AACA,QAAI4B,iBAAyB,GAAG,CAAhC;;AACA,OAAG;AACD5B,MAAAA,0CAA0C,GAAG,KAA7C;;AADC,YAGC4B,iBAAiB,GAAG3B,eAHrB;AAAA;AAAA;AAAA;AAAA;;AAQD2B,MAAAA,iBAAiB,IAAI,CAArB;;AACA,MAAa;AACX;AACA;AACAvB,QAAAA,0BAA0B,GAAG,KAA7B;AACD,OAbA;;;AAgBDR,MAAAA,WAAW,GAAG,IAAd;AACAC,MAAAA,kBAAkB,GAAG,IAArB;AAEAjrB,MAAAA,cAAc,CAAC6Y,WAAf,GAA6B,IAA7B;;AAEA,MAAa;AACX;AACA0S,QAAAA,uBAAuB,GAAG,CAAC,CAA3B;AACD;;AAEDjwB,MAAAA,wBAAsB,CAAC5I,OAAvB,GAAiCmQ,CAC7BmqB,8BADoC,CAAxC;AAIArqB,MAAAA,QAAQ,GAAG/E,SAAS,CAAC7C,KAAD,EAAQ0xB,SAAR,CAApB;AACD,KA/BD,QA+BStB,0CA/BT;AAgCD,GA3FI;AA8FL;;;AACA7vB,EAAAA,wBAAsB,CAAC5I,OAAvB,GAAiCu6B,qBAAjC;;AAEA,EAAa;AACXjtB,IAAAA,cAAc,CAAC2sB,eAAf,GAAiCrB,YAAjC;AACD,GAnGI;AAsGL;;;AACA,MAAM4B,oBAAoB,GACxBlC,WAAW,KAAK,IAAhB,IAAwBA,WAAW,CAAC1T,IAAZ,KAAqB,IAD/C;AAGAvL,EAAAA,WAAW,GAAGhH,OAAd;AACAqQ,EAAAA,yBAAuB,GAAI,IAA3B;AAEA4V,EAAAA,WAAW,GAAG,IAAd;AACAC,EAAAA,kBAAkB,GAAG,IAArB;;AAEA,EAAa;AACXI,IAAAA,oBAAoB,GAAG,IAAvB;AACAC,IAAAA,YAAY,GAAG,IAAf;AACAC,IAAAA,uBAAuB,GAAG,CAAC,CAA3B;AACD;;AAEDL,EAAAA,4BAA4B,GAAG,KAA/B;;AAtHK,OAyHH,CAACgC,oBAzHE;AAAA;AAAA;AAAA;AAAA;;AA8HL,SAAOvqB,QAAP;AACD;AAED,AAAO,SAASwqB,YAAT,CACLz6B,OADK,EAELsN,cAFK,EAGLyG,KAHK,EAIL;AACAzG,EAAAA,cAAc,CAAC6Y,WAAf,GAA6BnmB,OAAO,CAACmmB,WAArC;AACA7Y,EAAAA,cAAc,CAAC5N,KAAf,IAAwB,EAAEg7B,OAAa,GAAGC,MAAlB,CAAxB;AACA36B,EAAAA,OAAO,CAAC+T,KAAR,GAAgBgE,WAAW,CAAC/X,OAAO,CAAC+T,KAAT,EAAgBA,KAAhB,CAA3B;AACD;AAED,AAAO,SAAS6mB,oBAAT,GAAsC;AAC3C;AACA;AACAhyB,EAAAA,wBAAsB,CAAC5I,OAAvB,GAAiCu6B,qBAAjC;;AAEA,MAAI/B,4BAAJ,EAAkC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAI7oB,IAAiB,GAAG+S,yBAAuB,CAACmD,aAAhD;;AACA,WAAOlW,IAAI,KAAK,IAAhB,EAAsB;AACpB,UAAM6L,KAAK,GAAG7L,IAAI,CAAC6L,KAAnB;;AACA,UAAIA,KAAK,KAAK,IAAd,EAAoB;AAClBA,QAAAA,KAAK,CAACyK,OAAN,GAAgB,IAAhB;AACD;;AACDtW,MAAAA,IAAI,GAAGA,IAAI,CAACiV,IAAZ;AACD;;AACD4T,IAAAA,4BAA4B,GAAG,KAA/B;AACD;;AAEDnf,EAAAA,WAAW,GAAGhH,OAAd;AACAqQ,EAAAA,yBAAuB,GAAI,IAA3B;AAEA4V,EAAAA,WAAW,GAAG,IAAd;AACAC,EAAAA,kBAAkB,GAAG,IAArB;;AAEA,EAAa;AACXK,IAAAA,YAAY,GAAG,IAAf;AACAC,IAAAA,uBAAuB,GAAG,CAAC,CAA3B;AAEAF,IAAAA,oBAAoB,GAAG,IAAvB;AAEAkC,IAAAA,kCAAkC,GAAG,KAArC;AACD;;AAEDpC,EAAAA,0CAA0C,GAAG,KAA7C;AACD;;AAED,SAASqC,uBAAT,GAAyC;AACvC,MAAMnrB,IAAU,GAAG;AACjBkW,IAAAA,aAAa,EAAE,IADE;AAGjBD,IAAAA,SAAS,EAAE,IAHM;AAIjBmV,IAAAA,SAAS,EAAE,IAJM;AAKjBvf,IAAAA,KAAK,EAAE,IALU;AAOjBoJ,IAAAA,IAAI,EAAE;AAPW,GAAnB;;AAUA,MAAI2T,kBAAkB,KAAK,IAA3B,EAAiC;AAC/B;AACA7V,IAAAA,yBAAuB,CAACmD,aAAxB,GAAwC0S,kBAAkB,GAAG5oB,IAA7D;AACD,GAHD,MAGO;AACL;AACA4oB,IAAAA,kBAAkB,GAAGA,kBAAkB,CAAC3T,IAAnB,GAA0BjV,IAA/C;AACD;;AACD,SAAO4oB,kBAAP;AACD;;AAED,SAASyC,wBAAT,GAA0C;AACxC;AACA;AACA;AACA;AACA;AACA,MAAIC,eAAJ;;AACA,MAAI3C,WAAW,KAAK,IAApB,EAA0B;AACxB,QAAMt4B,OAAO,GAAG0iB,yBAAuB,CAACljB,SAAxC;;AACA,QAAIQ,OAAO,KAAK,IAAhB,EAAsB;AACpBi7B,MAAAA,eAAe,GAAGj7B,OAAO,CAAC6lB,aAA1B;AACD,KAFD,MAEO;AACLoV,MAAAA,eAAe,GAAG,IAAlB;AACD;AACF,GAPD,MAOO;AACLA,IAAAA,eAAe,GAAG3C,WAAW,CAAC1T,IAA9B;AACD;;AAED,MAAIsW,sBAAJ;;AACA,MAAI3C,kBAAkB,KAAK,IAA3B,EAAiC;AAC/B2C,IAAAA,sBAAsB,GAAGxY,yBAAuB,CAACmD,aAAjD;AACD,GAFD,MAEO;AACLqV,IAAAA,sBAAsB,GAAG3C,kBAAkB,CAAC3T,IAA5C;AACD;;AAED,MAAIsW,sBAAsB,KAAK,IAA/B,EAAqC;AACnC;AACA3C,IAAAA,kBAAkB,GAAG2C,sBAArB;AACAA,IAAAA,sBAAsB,GAAG3C,kBAAkB,CAAC3T,IAA5C;AAEA0T,IAAAA,WAAW,GAAG2C,eAAd;AACD,GAND,MAMO;AACL;AADK,UAIHA,eAAe,KAAK,IAJjB;AAAA;AAAA;AAAA;AAAA;;AAOL3C,IAAAA,WAAW,GAAG2C,eAAd;AAEA,QAAME,OAAa,GAAG;AACpBtV,MAAAA,aAAa,EAAEyS,WAAW,CAACzS,aADP;AAGpBD,MAAAA,SAAS,EAAE0S,WAAW,CAAC1S,SAHH;AAIpBmV,MAAAA,SAAS,EAAEzC,WAAW,CAACyC,SAJH;AAKpBvf,MAAAA,KAAK,EAAE8c,WAAW,CAAC9c,KALC;AAOpBoJ,MAAAA,IAAI,EAAE;AAPc,KAAtB;;AAUA,QAAI2T,kBAAkB,KAAK,IAA3B,EAAiC;AAC/B;AACA7V,MAAAA,yBAAuB,CAACmD,aAAxB,GAAwC0S,kBAAkB,GAAG4C,OAA7D;AACD,KAHD,MAGO;AACL;AACA5C,MAAAA,kBAAkB,GAAGA,kBAAkB,CAAC3T,IAAnB,GAA0BuW,OAA/C;AACD;AACF;;AACD,SAAO5C,kBAAP;AACD;;AAED,SAAS6C,kCAAT,GAA4E;AAC1E,SAAO;AACLxM,IAAAA,UAAU,EAAE;AADP,GAAP;AAGD;;AAED,SAASyM,iBAAT,CAA8BzQ,KAA9B,EAAwC0Q,MAAxC,EAAwE;AACtE;AACA,SAAO,OAAOA,MAAP,KAAkB,UAAlB,GAA+BA,MAAM,CAAC1Q,KAAD,CAArC,GAA+C0Q,MAAtD;AACD;;AAED,SAASC,YAAT,CACEC,OADF,EAEEC,UAFF,EAGEl+B,IAHF,EAIoB;AAClB,MAAMoS,IAAI,GAAGmrB,uBAAuB,EAApC;AACA,MAAIY,YAAJ;;AACA,MAAIn+B,IAAI,KAAK0L,SAAb,EAAwB;AACtByyB,IAAAA,YAAY,GAAGn+B,IAAI,CAACk+B,UAAD,CAAnB;AACD,GAFD,MAEO;AACLC,IAAAA,YAAY,GAAKD,UAAjB;AACD;;AACD9rB,EAAAA,IAAI,CAACkW,aAAL,GAAqBlW,IAAI,CAACiW,SAAL,GAAiB8V,YAAtC;AACA,MAAMlgB,KAAK,GAAI7L,IAAI,CAAC6L,KAAL,GAAa;AAC1ByK,IAAAA,OAAO,EAAE,IADiB;AAE1B0V,IAAAA,QAAQ,EAAE,IAFgB;AAG1BC,IAAAA,mBAAmB,EAAEJ,OAHK;AAI1BK,IAAAA,iBAAiB,EAAGH;AAJM,GAA5B;AAMA,MAAMC,QAAqB,GAAIngB,KAAK,CAACmgB,QAAN,GAAkBG,cAAc,CAAC7vB,IAAf,CAC/C,IAD+C,EAE/CyW,yBAF+C,EAG/ClH,KAH+C,CAAjD;AAKA,SAAO,CAAC7L,IAAI,CAACkW,aAAN,EAAqB8V,QAArB,CAAP;AACD;;AAED,SAASI,aAAT,CACEP,OADF,EAEEC,UAFF,EAGEl+B,IAHF,EAIoB;AAClB,MAAMoS,IAAI,GAAGqrB,wBAAwB,EAArC;AACA,MAAMxf,KAAK,GAAG7L,IAAI,CAAC6L,KAAnB;;AAFkB,QAIhBA,KAAK,KAAK,IAJM;AAAA;AAAA;AAAA;AAAA;;AAQlBA,EAAAA,KAAK,CAACogB,mBAAN,GAA4BJ,OAA5B;AAEA,MAAMx7B,OAAa,GAAIs4B,WAAvB,CAVkB;;AAalB,MAAIyC,SAAS,GAAG/6B,OAAO,CAAC+6B,SAAxB,CAbkB;;AAgBlB,MAAM5T,YAAY,GAAG3L,KAAK,CAACyK,OAA3B;;AACA,MAAIkB,YAAY,KAAK,IAArB,EAA2B;AACzB;AACA;AACA,QAAI4T,SAAS,KAAK,IAAlB,EAAwB;AACtB;AACA,UAAMiB,SAAS,GAAGjB,SAAS,CAACnW,IAA5B;AACA,UAAMqX,YAAY,GAAG9U,YAAY,CAACvC,IAAlC;AACAmW,MAAAA,SAAS,CAACnW,IAAV,GAAiBqX,YAAjB;AACA9U,MAAAA,YAAY,CAACvC,IAAb,GAAoBoX,SAApB;AACD;;AACD,IAAa;AACX,UAAIh8B,OAAO,CAAC+6B,SAAR,KAAsBA,SAA1B,EAAqC;AACnC;AACA;AACA,cACE,oEACE,yBAFJ;AAID;AACF;;AACD/6B,IAAAA,OAAO,CAAC+6B,SAAR,GAAoBA,SAAS,GAAG5T,YAAhC;AACA3L,IAAAA,KAAK,CAACyK,OAAN,GAAgB,IAAhB;AACD;;AAED,MAAI8U,SAAS,KAAK,IAAlB,EAAwB;AACtB;AACA,QAAMmB,KAAK,GAAGnB,SAAS,CAACnW,IAAxB;AACA,QAAI2C,QAAQ,GAAGvnB,OAAO,CAAC4lB,SAAvB;AAEA,QAAI6B,YAAY,GAAG,IAAnB;AACA,QAAI0U,iBAAiB,GAAG,IAAxB;AACA,QAAIC,gBAAgB,GAAG,IAAvB;AACA,QAAI5X,MAAM,GAAG0X,KAAb;;AACA,OAAG;AACD,UAAM3jB,UAAU,GAAGiM,MAAM,CAACvO,IAA1B;;AACA,UAAI,CAAC2B,eAAe,CAACyB,WAAD,EAAcd,UAAd,CAApB,EAA+C;AAC7C;AACA;AACA;AACA,YAAM+N,KAAmB,GAAG;AAC1BrQ,UAAAA,IAAI,EAAEsC,UADoB;AAE1B+iB,UAAAA,MAAM,EAAE9W,MAAM,CAAC8W,MAFW;AAG1Be,UAAAA,YAAY,EAAE7X,MAAM,CAAC6X,YAHK;AAI1BC,UAAAA,UAAU,EAAE9X,MAAM,CAAC8X,UAJO;AAK1B1X,UAAAA,IAAI,EAAG;AALmB,SAA5B;;AAOA,YAAIwX,gBAAgB,KAAK,IAAzB,EAA+B;AAC7BD,UAAAA,iBAAiB,GAAGC,gBAAgB,GAAG9V,KAAvC;AACAmB,UAAAA,YAAY,GAAGF,QAAf;AACD,SAHD,MAGO;AACL6U,UAAAA,gBAAgB,GAAGA,gBAAgB,CAACxX,IAAjB,GAAwB0B,KAA3C;AACD,SAhB4C;AAkB7C;AACA;;;AACA5D,QAAAA,yBAAuB,CAAC3O,KAAxB,GAAgC+D,UAAU,CACxC4K,yBAAuB,CAAC3O,KADgB,EAExCwE,UAFwC,CAA1C;AAIAsP,QAAAA,sBAAsB,CAACtP,UAAD,CAAtB;AACD,OAzBD,MAyBO;AACL;AAEA,YAAI6jB,gBAAgB,KAAK,IAAzB,EAA+B;AAC7B,cAAM9V,MAAmB,GAAG;AAC1B;AACA;AACA;AACArQ,YAAAA,IAAI,EAAE3D,MAJoB;AAK1BgpB,YAAAA,MAAM,EAAE9W,MAAM,CAAC8W,MALW;AAM1Be,YAAAA,YAAY,EAAE7X,MAAM,CAAC6X,YANK;AAO1BC,YAAAA,UAAU,EAAE9X,MAAM,CAAC8X,UAPO;AAQ1B1X,YAAAA,IAAI,EAAG;AARmB,WAA5B;AAUAwX,UAAAA,gBAAgB,GAAGA,gBAAgB,CAACxX,IAAjB,GAAwB0B,MAA3C;AACD,SAfI;;;AAkBL,YAAI9B,MAAM,CAAC6X,YAAP,KAAwBb,OAA5B,EAAqC;AACnC;AACA;AACAjU,UAAAA,QAAQ,GAAK/C,MAAM,CAAC8X,UAApB;AACD,SAJD,MAIO;AACL,cAAMhB,MAAM,GAAG9W,MAAM,CAAC8W,MAAtB;AACA/T,UAAAA,QAAQ,GAAGiU,OAAO,CAACjU,QAAD,EAAW+T,MAAX,CAAlB;AACD;AACF;;AACD9W,MAAAA,MAAM,GAAGA,MAAM,CAACI,IAAhB;AACD,KAvDD,QAuDSJ,MAAM,KAAK,IAAX,IAAmBA,MAAM,KAAK0X,KAvDvC;;AAyDA,QAAIE,gBAAgB,KAAK,IAAzB,EAA+B;AAC7B3U,MAAAA,YAAY,GAAGF,QAAf;AACD,KAFD,MAEO;AACL6U,MAAAA,gBAAgB,CAACxX,IAAjB,GAAyBuX,iBAAzB;AACD,KAtEqB;AAyEtB;;;AACA,QAAI,CAACre,QAAE,CAACyJ,QAAD,EAAW5X,IAAI,CAACkW,aAAhB,CAAP,EAAuC;AACrCb,MAAAA,gCAAgC;AACjC;;AAEDrV,IAAAA,IAAI,CAACkW,aAAL,GAAqB0B,QAArB;AACA5X,IAAAA,IAAI,CAACiW,SAAL,GAAiB6B,YAAjB;AACA9X,IAAAA,IAAI,CAACorB,SAAL,GAAiBqB,gBAAjB;AAEA5gB,IAAAA,KAAK,CAACqgB,iBAAN,GAA0BtU,QAA1B;AACD;;AAED,MAAMoU,QAAqB,GAAIngB,KAAK,CAACmgB,QAArC;AACA,SAAO,CAAChsB,IAAI,CAACkW,aAAN,EAAqB8V,QAArB,CAAP;AACD;;AAED,SAASY,eAAT,CACEf,OADF,EAEEC,UAFF,EAGEl+B,IAHF,EAIoB;AAClB,MAAMoS,IAAI,GAAGqrB,wBAAwB,EAArC;AACA,MAAMxf,KAAK,GAAG7L,IAAI,CAAC6L,KAAnB;;AAFkB,QAIhBA,KAAK,KAAK,IAJM;AAAA;AAAA;AAAA;AAAA;;AAQlBA,EAAAA,KAAK,CAACogB,mBAAN,GAA4BJ,OAA5B,CARkB;AAWlB;;AACA,MAAMG,QAAqB,GAAIngB,KAAK,CAACmgB,QAArC;AACA,MAAMa,qBAAqB,GAAGhhB,KAAK,CAACyK,OAApC;AACA,MAAIsB,QAAQ,GAAG5X,IAAI,CAACkW,aAApB;;AACA,MAAI2W,qBAAqB,KAAK,IAA9B,EAAoC;AAClC;AACAhhB,IAAAA,KAAK,CAACyK,OAAN,GAAgB,IAAhB;AAEA,QAAMwW,sBAAsB,GAAGD,qBAAqB,CAAC5X,IAArD;AACA,QAAIJ,MAAM,GAAGiY,sBAAb;;AACA,OAAG;AACD;AACA;AACA;AACA,UAAMnB,MAAM,GAAG9W,MAAM,CAAC8W,MAAtB;AACA/T,MAAAA,QAAQ,GAAGiU,OAAO,CAACjU,QAAD,EAAW+T,MAAX,CAAlB;AACA9W,MAAAA,MAAM,GAAGA,MAAM,CAACI,IAAhB;AACD,KAPD,QAOSJ,MAAM,KAAKiY,sBAPpB,EANkC;AAgBlC;;;AACA,QAAI,CAAC3e,QAAE,CAACyJ,QAAD,EAAW5X,IAAI,CAACkW,aAAhB,CAAP,EAAuC;AACrCb,MAAAA,gCAAgC;AACjC;;AAEDrV,IAAAA,IAAI,CAACkW,aAAL,GAAqB0B,QAArB,CArBkC;AAuBlC;AACA;AACA;;AACA,QAAI5X,IAAI,CAACorB,SAAL,KAAmB,IAAvB,EAA6B;AAC3BprB,MAAAA,IAAI,CAACiW,SAAL,GAAiB2B,QAAjB;AACD;;AAED/L,IAAAA,KAAK,CAACqgB,iBAAN,GAA0BtU,QAA1B;AACD;;AACD,SAAO,CAACA,QAAD,EAAWoU,QAAX,CAAP;AACD;;AAWD,SAASe,gCAAT,CACE1sB,IADF,EAEEjH,MAFF,EAGE4zB,WAHF,EAIY;AACV,EAAa;AACX1E,IAAAA,6BAA6B,CAAClvB,MAAD,CAA7B;AACD;;AAED,MAAM6zB,UAAU,GAAG7zB,MAAM,CAAC8zB,WAA1B;AACA,MAAM7E,OAAO,GAAG4E,UAAU,CAAC7zB,MAAM,CAAC0C,OAAR,CAA1B,CANU;;AASV,MAAIqxB,sBAAsB,GAAG,KAA7B,CATU;AAYV;AACA;;AACA,MAAMC,oBAAoB,GAAGjF,wBAAwB,CAAC/uB,MAAD,CAArD;;AACA,MAAIg0B,oBAAoB,KAAK,IAA7B,EAAmC;AACjC;AACA;AACAD,IAAAA,sBAAsB,GAAGC,oBAAoB,KAAK/E,OAAlD;AACD,GAJD,MAIO;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA8E,IAAAA,sBAAsB,GAAGllB,eAAe,CACtCyB,WADsC,EAEtCrJ,IAAI,CAAC+I,gBAFiC,CAAxC;;AAKA,QAAI+jB,sBAAJ,EAA4B;AAC1B;AACA;AACA;AACA/E,MAAAA,wBAAwB,CAAChvB,MAAD,EAASivB,OAAT,CAAxB;AACD;AACF;;AAED,MAAI8E,sBAAJ,EAA4B;AAC1B,QAAME,QAAQ,GAAGL,WAAW,CAAC5zB,MAAM,CAAC0C,OAAR,CAA5B;;AACA,IAAa;AACX,UAAI,OAAOuxB,QAAP,KAAoB,UAAxB,EAAoC;AAClC,cACE,wEACE,4DAFJ;AAID;AACF;;AACD,WAAOA,QAAP;AACD,GAXD,MAWO;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAvF,IAAAA,iBAAiB,CAAC1uB,MAAD,CAAjB;;AAVK;AAAA;AAAA;AAAA;AAAA;AAgBN;AACF;;AAED,SAASk0B,gBAAT,CACEttB,IADF,EAEE5G,MAFF,EAGE4zB,WAHF,EAIEO,SAJF,EAKY;AACV,MAAMltB,IAAI,GAAKmtB,qBAAqB,EAApC;;AADU,QAGRntB,IAAI,KAAK,IAHD;AAAA;AAAA;AAAA;AAAA;;AAOV,MAAM4sB,UAAU,GAAG7zB,MAAM,CAAC8zB,WAA1B;AACA,MAAM7E,OAAO,GAAG4E,UAAU,CAAC7zB,MAAM,CAAC0C,OAAR,CAA1B;AAEA,MAAM2xB,UAAU,GAAGx0B,wBAAsB,CAAC5I,OAA1C,CAVU;;AAAA,6BAa2Bo9B,UAAU,CAACC,QAAX,CAAoB;AAAA,WACvDX,gCAAgC,CAAC1sB,IAAD,EAAOjH,MAAP,EAAe4zB,WAAf,CADuB;AAAA,GAApB,CAb3B;AAAA,MAaLW,eAbK;AAAA,MAaYC,WAbZ;;AAgBV,MAAIP,QAAQ,GAAGM,eAAf,CAhBU;AAmBV;;AACA,MAAME,SAAS,GAAKjF,kBAApB;AAEA,MAAM1S,aAAa,GAAKlW,IAAI,CAACkW,aAA7B;AAIA,MAAM4C,IAAI,GAAG5C,aAAa,CAAC4C,IAA3B;AACA,MAAMgV,eAAe,GAAGhV,IAAI,CAACkU,WAA7B;AACA,MAAMe,UAAU,GAAG7X,aAAa,CAAC9c,MAAjC;AACA,MAAM40B,aAAa,GAAG9X,aAAa,CAACqX,SAApC;AAEA,MAAM79B,KAAK,GAAGqjB,yBAAd;AAEA/S,EAAAA,IAAI,CAACkW,aAAL,GAAsB;AACpB4C,IAAAA,IAAI,EAAJA,IADoB;AAEpB1f,IAAAA,MAAM,EAANA,MAFoB;AAGpBm0B,IAAAA,SAAS,EAATA;AAHoB,GAAtB,CAjCU;;AAwCVE,EAAAA,UAAU,CAACQ,SAAX,CAAqB,YAAM;AACzBnV,IAAAA,IAAI,CAACkU,WAAL,GAAmBA,WAAnB,CADyB;AAIzB;AACA;AACA;;AACAlU,IAAAA,IAAI,CAAC8U,WAAL,GAAmBA,WAAnB,CAPyB;;AAUzB,QAAMM,eAAe,GAAGjB,UAAU,CAAC7zB,MAAM,CAAC0C,OAAR,CAAlC;;AACA,QAAI,CAACqS,QAAE,CAACka,OAAD,EAAU6F,eAAV,CAAP,EAAmC;AACjC,UAAMC,gBAAgB,GAAGnB,WAAW,CAAC5zB,MAAM,CAAC0C,OAAR,CAApC;;AACA,MAAa;AACX,YAAI,OAAOqyB,gBAAP,KAA4B,UAAhC,EAA4C;AAC1C,gBACE,wEACE,4DAFJ;AAID;AACF;;AAED,UAAI,CAAChgB,QAAE,CAACkf,QAAD,EAAWc,gBAAX,CAAP,EAAqC;AACnCP,QAAAA,WAAW,CAACO,gBAAD,CAAX;AAEA,YAAM7nB,IAAI,GAAG2T,iBAAiB,CAACvqB,KAAD,CAA9B;AACAyZ,QAAAA,mBAAmB,CAAC9I,IAAD,EAAOiG,IAAP,CAAnB;AACD,OAhBgC;AAkBjC;AACA;;;AACAkD,MAAAA,iBAAiB,CAACnJ,IAAD,EAAOA,IAAI,CAAC+I,gBAAZ,CAAjB;AACD;AACF,GAjCD,EAiCG,CAAC4jB,WAAD,EAAc5zB,MAAd,EAAsBm0B,SAAtB,CAjCH,EAxCU;;AA4EVE,EAAAA,UAAU,CAACQ,SAAX,CAAqB,YAAM;AACzB,QAAMG,YAAY,GAAG,YAAM;AACzB,UAAMC,iBAAiB,GAAGvV,IAAI,CAACkU,WAA/B;AACA,UAAMsB,iBAAiB,GAAGxV,IAAI,CAAC8U,WAA/B;;AAEA,UAAI;AACFU,QAAAA,iBAAiB,CAACD,iBAAiB,CAACj1B,MAAM,CAAC0C,OAAR,CAAlB,CAAjB,CADE;;AAIF,YAAMwK,IAAI,GAAG2T,iBAAiB,CAACvqB,KAAD,CAA9B;AAEAyZ,QAAAA,mBAAmB,CAAC9I,IAAD,EAAOiG,IAAP,CAAnB;AACD,OAPD,CAOE,OAAOxe,KAAP,EAAc;AACd;AACA;AACA;AACA;AACAwmC,QAAAA,iBAAiB,CACd,YAAM;AACL,gBAAMxmC,KAAN;AACD,SAHc,CAAjB;AAKD;AACF,KAtBD;;AAwBA,QAAMymC,WAAW,GAAGhB,SAAS,CAACn0B,MAAM,CAAC0C,OAAR,EAAiBsyB,YAAjB,CAA7B;;AACA,IAAa;AACX,UAAI,OAAOG,WAAP,KAAuB,UAA3B,EAAuC;AACrC,cACE,wEADF;AAGD;AACF;;AAED,WAAOA,WAAP;AACD,GAnCD,EAmCG,CAACn1B,MAAD,EAASm0B,SAAT,CAnCH,EA5EU;AAkHV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MACE,CAACpf,QAAE,CAAC2f,eAAD,EAAkBd,WAAlB,CAAH,IACA,CAAC7e,QAAE,CAAC4f,UAAD,EAAa30B,MAAb,CADH,IAEA,CAAC+U,QAAE,CAAC6f,aAAD,EAAgBT,SAAhB,CAHL,EAIE;AACA;AACA;AACA;AACA;AACA,QAAMiB,QAAQ,GAAG;AACflY,MAAAA,OAAO,EAAE,IADM;AAEf0V,MAAAA,QAAQ,EAAE,IAFK;AAGfC,MAAAA,mBAAmB,EAAEP,iBAHN;AAIfQ,MAAAA,iBAAiB,EAAEmB;AAJJ,KAAjB;AAMAmB,IAAAA,QAAQ,CAACxC,QAAT,GAAoB4B,WAAW,GAAIzB,cAAc,CAAC7vB,IAAf,CACjC,IADiC,EAEjCyW,yBAFiC,EAGjCyb,QAHiC,CAAnC;AAKAX,IAAAA,SAAS,CAAChiB,KAAV,GAAkB2iB,QAAlB;AACAX,IAAAA,SAAS,CAACzC,SAAV,GAAsB,IAAtB;AACAiC,IAAAA,QAAQ,GAAGN,gCAAgC,CAAC1sB,IAAD,EAAOjH,MAAP,EAAe4zB,WAAf,CAA3C;AACAa,IAAAA,SAAS,CAAC3X,aAAV,GAA0B2X,SAAS,CAAC5X,SAAV,GAAsBoX,QAAhD;AACD;;AAED,SAAOA,QAAP;AACD;;AAED,SAASoB,kBAAT,CACEr1B,MADF,EAEE4zB,WAFF,EAGEO,SAHF,EAIY;AACV,MAAMvtB,IAAI,GAAGmrB,uBAAuB,EAApC;AACAnrB,EAAAA,IAAI,CAACkW,aAAL,GAAsB;AACpB4C,IAAAA,IAAI,EAAE;AACJkU,MAAAA,WAAW,EAAXA,WADI;AAEJY,MAAAA,WAAW,EAAG;AAFV,KADc;AAKpBx0B,IAAAA,MAAM,EAANA,MALoB;AAMpBm0B,IAAAA,SAAS,EAATA;AANoB,GAAtB;AAQA,SAAOD,gBAAgB,CAACttB,IAAD,EAAO5G,MAAP,EAAe4zB,WAAf,EAA4BO,SAA5B,CAAvB;AACD;;AAED,SAASmB,mBAAT,CACEt1B,MADF,EAEE4zB,WAFF,EAGEO,SAHF,EAIY;AACV,MAAMvtB,IAAI,GAAGqrB,wBAAwB,EAArC;AACA,SAAOiC,gBAAgB,CAACttB,IAAD,EAAO5G,MAAP,EAAe4zB,WAAf,EAA4BO,SAA5B,CAAvB;AACD;;AAED,SAASoB,UAAT,CACE5C,YADF,EAEsC;AACpC,MAAM/rB,IAAI,GAAGmrB,uBAAuB,EAApC;;AACA,MAAI,OAAOY,YAAP,KAAwB,UAA5B,EAAwC;AACtC;AACAA,IAAAA,YAAY,GAAGA,YAAY,EAA3B;AACD;;AACD/rB,EAAAA,IAAI,CAACkW,aAAL,GAAqBlW,IAAI,CAACiW,SAAL,GAAiB8V,YAAtC;AACA,MAAMlgB,KAAK,GAAI7L,IAAI,CAAC6L,KAAL,GAAa;AAC1ByK,IAAAA,OAAO,EAAE,IADiB;AAE1B0V,IAAAA,QAAQ,EAAE,IAFgB;AAG1BC,IAAAA,mBAAmB,EAAEP,iBAHK;AAI1BQ,IAAAA,iBAAiB,EAAGH;AAJM,GAA5B;AAMA,MAAMC,QAEL,GAAIngB,KAAK,CAACmgB,QAAN,GAAkBG,cAAc,CAAC7vB,IAAf,CACrB,IADqB,EAErByW,yBAFqB,EAGrBlH,KAHqB,CAFvB;AAOA,SAAO,CAAC7L,IAAI,CAACkW,aAAN,EAAqB8V,QAArB,CAAP;AACD;;AAED,SAAS4C,WAAT,CACE7C,YADF,EAEsC;AACpC,SAAOK,aAAa,CAACV,iBAAD,AAAA,CAApB;AACD;;AAED,SAASmD,aAAT,CACE9C,YADF,EAEsC;AACpC,SAAOa,eAAe,CAAClB,iBAAD,AAAA,CAAtB;AACD;;AAED,SAASoD,UAAT,CAAoB5hC,GAApB,EAAyB6hC,MAAzB,EAAiCC,OAAjC,EAA0CvF,IAA1C,EAAgD;AAC9C,MAAMhR,MAAc,GAAG;AACrBvrB,IAAAA,GAAG,EAAHA,GADqB;AAErB6hC,IAAAA,MAAM,EAANA,MAFqB;AAGrBC,IAAAA,OAAO,EAAPA,OAHqB;AAIrBvF,IAAAA,IAAI,EAAJA,IAJqB;AAKrB;AACAxU,IAAAA,IAAI,EAAG;AANc,GAAvB;AAQA,MAAIga,oBAAyD,GAAIlc,yBAAuB,CAACyD,WAAzF;;AACA,MAAIyY,oBAAoB,KAAK,IAA7B,EAAmC;AACjCA,IAAAA,oBAAoB,GAAGxD,kCAAkC,EAAzD;AACA1Y,IAAAA,yBAAuB,CAACyD,WAAxB,GAAuCyY,oBAAvC;AACAA,IAAAA,oBAAoB,CAAChQ,UAArB,GAAkCxG,MAAM,CAACxD,IAAP,GAAcwD,MAAhD;AACD,GAJD,MAIO;AACL,QAAMwG,UAAU,GAAGgQ,oBAAoB,CAAChQ,UAAxC;;AACA,QAAIA,UAAU,KAAK,IAAnB,EAAyB;AACvBgQ,MAAAA,oBAAoB,CAAChQ,UAArB,GAAkCxG,MAAM,CAACxD,IAAP,GAAcwD,MAAhD;AACD,KAFD,MAEO;AACL,UAAM0G,WAAW,GAAGF,UAAU,CAAChK,IAA/B;AACAgK,MAAAA,UAAU,CAAChK,IAAX,GAAkBwD,MAAlB;AACAA,MAAAA,MAAM,CAACxD,IAAP,GAAckK,WAAd;AACA8P,MAAAA,oBAAoB,CAAChQ,UAArB,GAAkCxG,MAAlC;AACD;AACF;;AACD,SAAOA,MAAP;AACD;;AAED,SAASyW,QAAT,CAAqBC,YAArB,EAAsD;AACpD,MAAMnvB,IAAI,GAAGmrB,uBAAuB,EAApC;AACA,MAAM/M,GAAG,GAAG;AAAC/tB,IAAAA,OAAO,EAAE8+B;AAAV,GAAZ;;AACA,EAAa;AACXr2B,IAAAA,MAAM,CAACs2B,IAAP,CAAYhR,GAAZ;AACD;;AACDpe,EAAAA,IAAI,CAACkW,aAAL,GAAqBkI,GAArB;AACA,SAAOA,GAAP;AACD;;AAED,SAASiR,SAAT,CAAsBF,YAAtB,EAAuD;AACrD,MAAMnvB,IAAI,GAAGqrB,wBAAwB,EAArC;AACA,SAAOrrB,IAAI,CAACkW,aAAZ;AACD;;AAED,SAASoZ,eAAT,CAAyBC,UAAzB,EAAqCC,SAArC,EAAgDT,MAAhD,EAAwDtF,IAAxD,EAAoE;AAClE,MAAMzpB,IAAI,GAAGmrB,uBAAuB,EAApC;AACA,MAAMlB,QAAQ,GAAGR,IAAI,KAAKnwB,SAAT,GAAqB,IAArB,GAA4BmwB,IAA7C;AACA1W,EAAAA,yBAAuB,CAAChjB,KAAxB,IAAiCw/B,UAAjC;AACAvvB,EAAAA,IAAI,CAACkW,aAAL,GAAqB4Y,UAAU,CAC7BW,SAAa,GAAGD,SADa,EAE7BT,MAF6B,EAG7Bz1B,SAH6B,EAI7B2wB,QAJ6B,CAA/B;AAMD;;AAED,SAASyF,gBAAT,CAA0BH,UAA1B,EAAsCC,SAAtC,EAAiDT,MAAjD,EAAyDtF,IAAzD,EAAqE;AACnE,MAAMzpB,IAAI,GAAGqrB,wBAAwB,EAArC;AACA,MAAMpB,QAAQ,GAAGR,IAAI,KAAKnwB,SAAT,GAAqB,IAArB,GAA4BmwB,IAA7C;AACA,MAAIuF,OAAO,GAAG11B,SAAd;;AAEA,MAAIqvB,WAAW,KAAK,IAApB,EAA0B;AACxB,QAAMgH,UAAU,GAAGhH,WAAW,CAACzS,aAA/B;AACA8Y,IAAAA,OAAO,GAAGW,UAAU,CAACX,OAArB;;AACA,QAAI/E,QAAQ,KAAK,IAAjB,EAAuB;AACrB,UAAMC,QAAQ,GAAGyF,UAAU,CAAClG,IAA5B;;AACA,UAAIO,kBAAkB,CAACC,QAAD,EAAWC,QAAX,CAAtB,EAA4C;AAC1C4E,QAAAA,UAAU,CAACU,SAAD,EAAYT,MAAZ,EAAoBC,OAApB,EAA6B/E,QAA7B,CAAV;AACA;AACD;AACF;AACF;;AAEDlX,EAAAA,yBAAuB,CAAChjB,KAAxB,IAAiCw/B,UAAjC;AAEAvvB,EAAAA,IAAI,CAACkW,aAAL,GAAqB4Y,UAAU,CAC7BW,SAAa,GAAGD,SADa,EAE7BT,MAF6B,EAG7BC,OAH6B,EAI7B/E,QAJ6B,CAA/B;AAMD;;AAED,SAAS2F,WAAT,CACEb,MADF,EAEEtF,IAFF,EAGQ;AACN,EAAa;AACX;AACA,QAAI,gBAAgB,OAAOoG,IAA3B,EAAiC;AAC/BC,MAAAA,oCAAoC,CAAC/c,yBAAD,CAApC;AACD;AACF;;AACD,SAAOuc,eAAe,CACpBtE,MAAY,GAAGD,OADK,EAEpBgF,SAFoB,EAGpBhB,MAHoB,EAIpBtF,IAJoB,CAAtB;AAMD;;AAED,SAASuG,YAAT,CACEjB,MADF,EAEEtF,IAFF,EAGQ;AACN,EAAa;AACX;AACA,QAAI,gBAAgB,OAAOoG,IAA3B,EAAiC;AAC/BC,MAAAA,oCAAoC,CAAC/c,yBAAD,CAApC;AACD;AACF;;AACD,SAAO2c,gBAAgB,CACrB1E,MAAY,GAAGD,OADM,EAErBgF,SAFqB,EAGrBhB,MAHqB,EAIrBtF,IAJqB,CAAvB;AAMD;;AAED,SAASwG,iBAAT,CACElB,MADF,EAEEtF,IAFF,EAGQ;AACN,SAAO6F,eAAe,CAACtE,MAAD,EAAekF,MAAf,EAA2BnB,MAA3B,EAAmCtF,IAAnC,CAAtB;AACD;;AAED,SAAS0G,kBAAT,CACEpB,MADF,EAEEtF,IAFF,EAGQ;AACN,SAAOiG,gBAAgB,CAAC1E,MAAD,EAAekF,MAAf,EAA2BnB,MAA3B,EAAmCtF,IAAnC,CAAvB;AACD;;AAED,SAAS2G,sBAAT,CACErB,MADF,EAEE3Q,GAFF,EAGE;AACA,MAAI,OAAOA,GAAP,KAAe,UAAnB,EAA+B;AAC7B,QAAMiS,WAAW,GAAGjS,GAApB;;AACA,QAAMrE,KAAI,GAAGgV,MAAM,EAAnB;;AACAsB,IAAAA,WAAW,CAACtW,KAAD,CAAX;AACA,WAAO,YAAM;AACXsW,MAAAA,WAAW,CAAC,IAAD,CAAX;AACD,KAFD;AAGD,GAPD,MAOO,IAAIjS,GAAG,KAAK,IAAR,IAAgBA,GAAG,KAAK9kB,SAA5B,EAAuC;AAC5C,QAAMg3B,SAAS,GAAGlS,GAAlB;;AACA,IAAa;AACX,UAAI,CAACkS,SAAS,CAAC/zB,cAAV,CAAyB,SAAzB,CAAL,EAA0C;AACxC,cACE,kEACE,iEAFJ,EAGE,0BAA0BzD,MAAM,CAAC4V,IAAP,CAAY4hB,SAAZ,EAAuBhgB,IAAvB,CAA4B,IAA5B,CAA1B,GAA8D,GAHhE;AAKD;AACF;;AACD,QAAMyJ,MAAI,GAAGgV,MAAM,EAAnB;;AACAuB,IAAAA,SAAS,CAACjgC,OAAV,GAAoB0pB,MAApB;AACA,WAAO,YAAM;AACXuW,MAAAA,SAAS,CAACjgC,OAAV,GAAoB,IAApB;AACD,KAFD;AAGD;AACF;;AAED,SAASkgC,qBAAT,CACEnS,GADF,EAEE2Q,MAFF,EAGEtF,IAHF,EAIQ;AACN,EAAa;AACX,QAAI,OAAOsF,MAAP,KAAkB,UAAtB,EAAkC;AAChC,YACE,qEACE,8CAFJ,EAGEA,MAAM,KAAK,IAAX,GAAkB,OAAOA,MAAzB,GAAkC,MAHpC;AAKD;AACF,GATK;;;AAYN,MAAMyB,UAAU,GACd/G,IAAI,KAAK,IAAT,IAAiBA,IAAI,KAAKnwB,SAA1B,GAAsCmwB,IAAI,CAACthC,MAAL,CAAY,CAACi2B,GAAD,CAAZ,CAAtC,GAA2D,IAD7D;AAGA,SAAOkR,eAAe,CACpBtE,MADoB,EAEpBkF,MAFoB,EAGpBE,sBAAsB,CAAC9zB,IAAvB,CAA4B,IAA5B,EAAkCyyB,MAAlC,EAA0C3Q,GAA1C,CAHoB,EAIpBoS,UAJoB,CAAtB;AAMD;;AAED,SAASC,sBAAT,CACErS,GADF,EAEE2Q,MAFF,EAGEtF,IAHF,EAIQ;AACN,EAAa;AACX,QAAI,OAAOsF,MAAP,KAAkB,UAAtB,EAAkC;AAChC,YACE,qEACE,8CAFJ,EAGEA,MAAM,KAAK,IAAX,GAAkB,OAAOA,MAAzB,GAAkC,MAHpC;AAKD;AACF,GATK;;;AAYN,MAAMyB,UAAU,GACd/G,IAAI,KAAK,IAAT,IAAiBA,IAAI,KAAKnwB,SAA1B,GAAsCmwB,IAAI,CAACthC,MAAL,CAAY,CAACi2B,GAAD,CAAZ,CAAtC,GAA2D,IAD7D;AAGA,SAAOsR,gBAAgB,CACrB1E,MADqB,EAErBkF,MAFqB,EAGrBE,sBAAsB,CAAC9zB,IAAvB,CAA4B,IAA5B,EAAkCyyB,MAAlC,EAA0C3Q,GAA1C,CAHqB,EAIrBoS,UAJqB,CAAvB;AAMD;;AAED,SAASE,eAAT,CAA4BhmC,KAA5B,EAAsCimC,WAAtC,EAA+E;AAE7E;AACA;AACD;;AAED,IAAMC,gBAAgB,GAAGF,eAAzB;;AAEA,SAASG,aAAT,CAA0BxlB,QAA1B,EAAuCoe,IAAvC,EAA4E;AAC1E,MAAMzpB,IAAI,GAAGmrB,uBAAuB,EAApC;AACA,MAAMlB,QAAQ,GAAGR,IAAI,KAAKnwB,SAAT,GAAqB,IAArB,GAA4BmwB,IAA7C;AACAzpB,EAAAA,IAAI,CAACkW,aAAL,GAAqB,CAAC7K,QAAD,EAAW4e,QAAX,CAArB;AACA,SAAO5e,QAAP;AACD;;AAED,SAASylB,cAAT,CAA2BzlB,QAA3B,EAAwCoe,IAAxC,EAA6E;AAC3E,MAAMzpB,IAAI,GAAGqrB,wBAAwB,EAArC;AACA,MAAMpB,QAAQ,GAAGR,IAAI,KAAKnwB,SAAT,GAAqB,IAArB,GAA4BmwB,IAA7C;AACA,MAAMvS,SAAS,GAAGlX,IAAI,CAACkW,aAAvB;;AACA,MAAIgB,SAAS,KAAK,IAAlB,EAAwB;AACtB,QAAI+S,QAAQ,KAAK,IAAjB,EAAuB;AACrB,UAAMC,QAA6B,GAAGhT,SAAS,CAAC,CAAD,CAA/C;;AACA,UAAI8S,kBAAkB,CAACC,QAAD,EAAWC,QAAX,CAAtB,EAA4C;AAC1C,eAAOhT,SAAS,CAAC,CAAD,CAAhB;AACD;AACF;AACF;;AACDlX,EAAAA,IAAI,CAACkW,aAAL,GAAqB,CAAC7K,QAAD,EAAW4e,QAAX,CAArB;AACA,SAAO5e,QAAP;AACD;;AAED,SAAS0lB,SAAT,CACEC,UADF,EAEEvH,IAFF,EAGK;AACH,MAAMzpB,IAAI,GAAGmrB,uBAAuB,EAApC;AACA,MAAMlB,QAAQ,GAAGR,IAAI,KAAKnwB,SAAT,GAAqB,IAArB,GAA4BmwB,IAA7C;AACA,MAAMjW,SAAS,GAAGwd,UAAU,EAA5B;AACAhxB,EAAAA,IAAI,CAACkW,aAAL,GAAqB,CAAC1C,SAAD,EAAYyW,QAAZ,CAArB;AACA,SAAOzW,SAAP;AACD;;AAED,SAASyd,UAAT,CACED,UADF,EAEEvH,IAFF,EAGK;AACH,MAAMzpB,IAAI,GAAGqrB,wBAAwB,EAArC;AACA,MAAMpB,QAAQ,GAAGR,IAAI,KAAKnwB,SAAT,GAAqB,IAArB,GAA4BmwB,IAA7C;AACA,MAAMvS,SAAS,GAAGlX,IAAI,CAACkW,aAAvB;;AACA,MAAIgB,SAAS,KAAK,IAAlB,EAAwB;AACtB;AACA,QAAI+S,QAAQ,KAAK,IAAjB,EAAuB;AACrB,UAAMC,QAA6B,GAAGhT,SAAS,CAAC,CAAD,CAA/C;;AACA,UAAI8S,kBAAkB,CAACC,QAAD,EAAWC,QAAX,CAAtB,EAA4C;AAC1C,eAAOhT,SAAS,CAAC,CAAD,CAAhB;AACD;AACF;AACF;;AACD,MAAM1D,SAAS,GAAGwd,UAAU,EAA5B;AACAhxB,EAAAA,IAAI,CAACkW,aAAL,GAAqB,CAAC1C,SAAD,EAAYyW,QAAZ,CAArB;AACA,SAAOzW,SAAP;AACD;;AAED,SAAS0d,kBAAT,CAA+BxmC,KAA/B,EAA4C;AAAA,oBACZikC,UAAU,CAACjkC,KAAD,CADE;AAAA,MACnCymC,SADmC;AAAA,MACxBC,QADwB;;AAE1CxB,EAAAA,WAAW,CAAC,YAAM;AAChB,QAAMyB,cAAc,GAAGtjB,yBAAuB,CAACG,UAA/C;AACAH,IAAAA,yBAAuB,CAACG,UAAxB,GAAqC,CAArC;;AACA,QAAI;AACFkjB,MAAAA,QAAQ,CAAC1mC,KAAD,CAAR;AACD,KAFD,SAEU;AACRqjB,MAAAA,yBAAuB,CAACG,UAAxB,GAAqCmjB,cAArC;AACD;AACF,GARU,EAQR,CAAC3mC,KAAD,CARQ,CAAX;AASA,SAAOymC,SAAP;AACD;;AAED,SAASG,mBAAT,CAAgC5mC,KAAhC,EAA6C;AAAA,qBACbkkC,WAAW,CAAClkC,AAAD,CADE;AAAA,MACpCymC,SADoC;AAAA,MACzBC,QADyB;;AAE3CpB,EAAAA,YAAY,CAAC,YAAM;AACjB,QAAMqB,cAAc,GAAGtjB,yBAAuB,CAACG,UAA/C;AACAH,IAAAA,yBAAuB,CAACG,UAAxB,GAAqC,CAArC;;AACA,QAAI;AACFkjB,MAAAA,QAAQ,CAAC1mC,KAAD,CAAR;AACD,KAFD,SAEU;AACRqjB,MAAAA,yBAAuB,CAACG,UAAxB,GAAqCmjB,cAArC;AACD;AACF,GARW,EAQT,CAAC3mC,KAAD,CARS,CAAZ;AASA,SAAOymC,SAAP;AACD;;AAED,SAASI,qBAAT,CAAkC7mC,KAAlC,EAA+C;AAAA,uBACfmkC,aAAa,CAACnkC,AAAD,CADE;AAAA,MACtCymC,SADsC;AAAA,MAC3BC,QAD2B;;AAE7CpB,EAAAA,YAAY,CAAC,YAAM;AACjB,QAAMqB,cAAc,GAAGtjB,yBAAuB,CAACG,UAA/C;AACAH,IAAAA,yBAAuB,CAACG,UAAxB,GAAqC,CAArC;;AACA,QAAI;AACFkjB,MAAAA,QAAQ,CAAC1mC,KAAD,CAAR;AACD,KAFD,SAEU;AACRqjB,MAAAA,yBAAuB,CAACG,UAAxB,GAAqCmjB,cAArC;AACD;AACF,GARW,EAQT,CAAC3mC,KAAD,CARS,CAAZ;AASA,SAAOymC,SAAP;AACD;;AAED,SAASK,eAAT,CAAyBC,UAAzB,EAAqCpmB,QAArC,EAA+C;AAC7C,MAAM3K,aAAa,GAAGsK,uBAAuB,EAA7C;;AACA,EAoCO;AACLG,IAAAA,eAAe,CACbzK,aAAa,GAAGS,sBAAhB,GACIA,sBADJ,GAEIT,aAHS,EAIb,YAAM;AACJ+wB,MAAAA,UAAU,CAAC,IAAD,CAAV;AACD,KANY,CAAf;AASAtmB,IAAAA,eAAe,CACbzK,aAAa,GAAGU,gBAAhB,GAAiCA,gBAAjC,GAAkDV,aADrC,EAEb,YAAM;AACJ,UAAM2wB,cAAc,GAAGtjB,yBAAuB,CAACG,UAA/C;AACAH,MAAAA,yBAAuB,CAACG,UAAxB,GAAqC,CAArC;;AACA,UAAI;AACFujB,QAAAA,UAAU,CAAC,KAAD,CAAV;AACApmB,QAAAA,QAAQ;AACT,OAHD,SAGU;AACR0C,QAAAA,yBAAuB,CAACG,UAAxB,GAAqCmjB,cAArC;AACD;AACF,KAXY,CAAf;AAaD;AACF;;AAED,SAASK,eAAT,GAA4D;AAAA,qBAC1B/C,UAAU,CAAC,KAAD,CADgB;AAAA,MACnDgD,SADmD;AAAA,MACxCF,UADwC;AAG1D;;;AACA,MAAMG,KAAK,GAAGJ,eAAe,CAACl1B,IAAhB,CAAqB,IAArB,EAA2Bm1B,UAA3B,CAAd;AACAvC,EAAAA,QAAQ,CAAC0C,KAAD,CAAR;AACA,SAAO,CAACA,KAAD,EAAQD,SAAR,CAAP;AACD;;AAED,SAASE,gBAAT,GAA6D;AAAA,sBACvCjD,WAAW,CAAC,AAAD,CAD4B;AAAA,MACpD+C,SADoD;;AAE3D,MAAMG,QAAQ,GAAGzC,SAAS,EAA1B;AACA,MAAMuC,KAA2B,GAAIE,QAAQ,CAACzhC,OAA9C;AACA,SAAO,CAACuhC,KAAD,EAAQD,SAAR,CAAP;AACD;;AAED,SAASI,kBAAT,GAA+D;AAAA,wBACzClD,aAAa,CAAC,AAAD,CAD4B;AAAA,MACtD8C,SADsD;;AAE7D,MAAMG,QAAQ,GAAGzC,SAAS,EAA1B;AACA,MAAMuC,KAA2B,GAAIE,QAAQ,CAACzhC,OAA9C;AACA,SAAO,CAACuhC,KAAD,EAAQD,SAAR,CAAP;AACD;;AAED,IAAIzG,kCAAkC,GAAG,KAAzC;AACA,AAAO,SAAS8G,0CAAT,GAAsE;AAC3E,EAAa;AACX,WAAO9G,kCAAP;AACD;AACF;;AAED,SAAS+G,iCAAT,CAA2CviC,KAA3C,EAAkD;AAChD,EAAa;AACX;AACA,QAAM5C,IAAI,GAAGG,gBAAgB,CAACyC,KAAK,CAAC1C,IAAP,CAAhB,IAAgC,SAA7C;;AACA,QAAIwiB,cAAc,MAAM,CAACkZ,+BAA+B,CAAC57B,IAAD,CAAxD,EAAgE;AAC9D,YACE,oEACE,qDADF,GAEE,iBAHJ;;AAKA47B,MAAAA,+BAA+B,CAAC57B,IAAD,CAA/B,GAAwC,IAAxC;AACD;AACF;AACF;;AAED,SAASolC,qBAAT,GAAsD;AACpD,MAAMC,MAAM,GAAG3xB,CACX/M,iBAAiB,CAAC6I,IAAlB,CACE,IADF,EAEE21B,iCAAiC,CAAC31B,IAAlC,CAAuC,IAAvC,EAA6CyW,yBAA7C,CAFF,CADkB,CAAtB;;AAOA,MAAI6U,cAAc,EAAlB,EAAsB;AACpB,QAAIwK,UAAU,GAAG,KAAjB;AACA,QAAM1iC,KAAK,GAAGqjB,yBAAd;;AACA,QAAMsf,SAAS,GAAG,YAAM;AACtB,UAAI,CAACD,UAAL,EAAiB;AACf;AACA;AACA;AACAA,QAAAA,UAAU,GAAG,IAAb;;AACA,QAAa;AACXlH,UAAAA,kCAAkC,GAAG,IAArC;AACAoH,UAAAA,KAAK,CAACH,MAAM,EAAP,CAAL;AACAjH,UAAAA,kCAAkC,GAAG,KAArC;AACA+G,UAAAA,iCAAiC,CAACviC,KAAD,CAAjC;AACD,SALD;AAQD;;AAdqB;AAAA;AAAA;AAAA;AAAA;AAoBvB,KApBD;;AAqBA,QAAMmd,EAAE,GAAGtZ,yBAAyB,CAAC8+B,SAAD,CAApC;AAEA,QAAMC,KAAK,GAAG3D,UAAU,CAAC9hB,EAAD,CAAV,CAAe,CAAf,CAAd;;AAEA,QAAI,CAACkG,yBAAuB,CAAC9C,IAAxB,GAA+BtC,YAAhC,MAAkDF,MAAtD,EAA8D;AAC5DsF,MAAAA,yBAAuB,CAAChjB,KAAxB,IAAiCi7B,MAAY,GAAGD,OAAhD;AACA+D,MAAAA,UAAU,CACRW,SAAa,GAAGM,SADR,EAER,YAAM;AACJuC,QAAAA,KAAK,CAACH,MAAM,EAAP,CAAL;AACD,OAJO,EAKR74B,SALQ,EAMR,IANQ,CAAV;AAQD;;AACD,WAAOuT,EAAP;AACD,GAxCD,MAwCO;AACL,QAAMA,GAAE,GAAGslB,MAAM,EAAjB;;AACAxD,IAAAA,UAAU,CAAC9hB,GAAD,CAAV;AACA,WAAOA,GAAP;AACD;AACF;;AAED,SAAS0lB,sBAAT,GAAuD;AACrD,MAAM1lB,EAAE,GAAG+hB,WAAW,CAACt1B,AAAD,CAAX,CAAuB,CAAvB,CAAX;AACA,SAAOuT,EAAP;AACD;;AAED,SAAS2lB,wBAAT,GAAyD;AACvD,MAAM3lB,EAAE,GAAGgiB,aAAa,CAACv1B,AAAD,CAAb,CAAyB,CAAzB,CAAX;AACA,SAAOuT,EAAP;AACD;;AAED,SAASsf,cAAT,CACEz8B,KADF,EAEEmc,KAFF,EAGE8f,MAHF,EAIE;AACA,EAAa;AACX,QAAI,OAAO8G,SAAS,CAAC,CAAD,CAAhB,KAAwB,UAA5B,EAAwC;AACtC,YACE,gFACE,2DADF,GAEE,+DAHJ;AAKD;AACF;;AAED,MAAM/rB,SAAS,GAAGsT,gBAAgB,EAAlC;AACA,MAAM1T,IAAI,GAAG2T,iBAAiB,CAACvqB,KAAD,CAA9B;AAEA,MAAMmlB,MAAoB,GAAG;AAC3BvO,IAAAA,IAAI,EAAJA,IAD2B;AAE3BqlB,IAAAA,MAAM,EAANA,MAF2B;AAG3Be,IAAAA,YAAY,EAAE,IAHa;AAI3BC,IAAAA,UAAU,EAAE,IAJe;AAK3B1X,IAAAA,IAAI,EAAG;AALoB,GAA7B,CAdA;;AAuBA,MAAMqB,OAAO,GAAGzK,KAAK,CAACyK,OAAtB;;AACA,MAAIA,OAAO,KAAK,IAAhB,EAAsB;AACpB;AACAzB,IAAAA,MAAM,CAACI,IAAP,GAAcJ,MAAd;AACD,GAHD,MAGO;AACLA,IAAAA,MAAM,CAACI,IAAP,GAAcqB,OAAO,CAACrB,IAAtB;AACAqB,IAAAA,OAAO,CAACrB,IAAR,GAAeJ,MAAf;AACD;;AACDhJ,EAAAA,KAAK,CAACyK,OAAN,GAAgBzB,MAAhB;AAEA,MAAMhlB,SAAS,GAAGH,KAAK,CAACG,SAAxB;;AACA,MACEH,KAAK,KAAKqjB,yBAAV,IACCljB,SAAS,KAAK,IAAd,IAAsBA,SAAS,KAAKkjB,yBAFvC,EAGE;AACA;AACA;AACA;AACA+V,IAAAA,0CAA0C,GAAGD,4BAA4B,GAAG,IAA5E;AACD,GARD,MAQO;AACL,QACEn5B,KAAK,CAAC0U,KAAN,KAAgB1B,OAAhB,KACC7S,SAAS,KAAK,IAAd,IAAsBA,SAAS,CAACuU,KAAV,KAAoB1B,OAD3C,CADF,EAGE;AACA;AACA;AACA;AACA,UAAMupB,mBAAmB,GAAGpgB,KAAK,CAACogB,mBAAlC;;AACA,UAAIA,mBAAmB,KAAK,IAA5B,EAAkC;AAChC,YAAIyG,cAAJ;;AACA,QAAa;AACXA,UAAAA,cAAc,GAAGz5B,wBAAsB,CAAC5I,OAAxC;AACA4I,UAAAA,wBAAsB,CAAC5I,OAAvB,GAAiCsiC,yCAAjC;AACD;;AACD,YAAI;AACF,cAAMC,YAAe,GAAI/mB,KAAK,CAACqgB,iBAA/B;AACA,cAAMS,UAAU,GAAGV,mBAAmB,CAAC2G,YAAD,EAAejH,MAAf,CAAtC,CAFE;AAIF;AACA;AACA;;AACA9W,UAAAA,MAAM,CAAC6X,YAAP,GAAsBT,mBAAtB;AACApX,UAAAA,MAAM,CAAC8X,UAAP,GAAoBA,UAApB;;AACA,cAAIxe,QAAE,CAACwe,UAAD,EAAaiG,YAAb,CAAN,EAAkC;AAChC;AACA;AACA;AACA;AACA;AACD;AACF,SAhBD,CAgBE,OAAO9qC,KAAP,EAAc;AAEf,SAlBD,SAkBU;AACR,UAAa;AACXmR,YAAAA,wBAAsB,CAAC5I,OAAvB,GAAiCqiC,cAAjC;AACD;AACF;AACF;AACF;;AACD,IAAa;AACX;AACA,UAAI,gBAAgB,OAAO7C,IAA3B,EAAiC;AAC/BgD,QAAAA,8BAA8B,CAACnjC,KAAD,CAA9B;AACAojC,QAAAA,oCAAoC,CAACpjC,KAAD,CAApC;AACD;AACF;;AACDwqB,IAAAA,qBAAqB,CAACxqB,KAAD,EAAQ4W,IAAR,EAAcI,SAAd,CAArB;AACD;;AAWD,EAA8B;AAC5B8G,IAAAA,wBAAwB,CAAC9d,KAAD,EAAQ4W,IAAR,CAAxB;AACD;AACF;;AAED,AAAO,IAAMskB,qBAAiC,GAAG;AAC/CtV,EAAAA,WAAW,EAAXA,WAD+C;AAG/Cyd,EAAAA,WAAW,EAAEhJ,qBAHkC;AAI/CiJ,EAAAA,UAAU,EAAEjJ,qBAJmC;AAK/CkE,EAAAA,SAAS,EAAElE,qBALoC;AAM/CkJ,EAAAA,mBAAmB,EAAElJ,qBAN0B;AAO/CmJ,EAAAA,eAAe,EAAEnJ,qBAP8B;AAQ/CoJ,EAAAA,OAAO,EAAEpJ,qBARsC;AAS/CqJ,EAAAA,UAAU,EAAErJ,qBATmC;AAU/CsJ,EAAAA,MAAM,EAAEtJ,qBAVuC;AAW/C2D,EAAAA,QAAQ,EAAE3D,qBAXqC;AAY/CuJ,EAAAA,aAAa,EAAEvJ,qBAZgC;AAa/CwJ,EAAAA,gBAAgB,EAAExJ,qBAb6B;AAc/CyJ,EAAAA,aAAa,EAAEzJ,qBAdgC;AAe/CuD,EAAAA,gBAAgB,EAAEvD,qBAf6B;AAgB/C0J,EAAAA,mBAAmB,EAAE1J,qBAhB0B;AAkB/C2J,EAAAA,wBAAwB,EAAEpkC;AAlBqB,CAA1C;AAqBP,AA+DA,IAAIm7B,2BAA8C,GAAG,IAArD;AACA,IAAID,wCAA2D,GAAG,IAAlE;AACA,IAAID,4BAA+C,GAAG,IAAtD;AACA,IAAII,8BAAiD,GAAG,IAAxD;AACA,IAAIgJ,wCAA2D,GAAG,IAAlE;AACA,IAAIhB,yCAA4D,GAAG,IAAnE;AACA,IAAIiB,2CAA8D,GAAG,IAArE;;AAEA,AAAa;AACX,MAAMC,wBAAwB,GAAG,YAAM;AACrC,UACE,wDACE,gFADF,GAEE,iFAFF,GAGE,8CAJJ;AAMD,GAPD;;AASA,MAAMC,qBAAqB,GAAG,YAAM;AAClC,UACE,qFACE,mEADF,GAEE,4BAFF,GAGE,yCAJJ;AAMD,GAPD;;AASArJ,EAAAA,2BAA2B,GAAG;AAC5BnV,IAAAA,WAD4B,YAE1BloB,OAF0B,EAG1BwnB,YAH0B,EAIvB;AACH,aAAOU,WAAW,CAACloB,OAAD,EAAUwnB,YAAV,CAAlB;AACD,KAN2B;AAO5Bme,IAAAA,WAP4B,YAOb1nB,QAPa,EAOAoe,IAPA,EAOqC;AAC/DT,MAAAA,oBAAoB,GAAG,aAAvB;AACAI,MAAAA,iBAAiB;AACjBI,MAAAA,oBAAoB,CAACC,IAAD,CAApB;AACA,aAAOoH,aAAa,CAACxlB,QAAD,EAAWoe,IAAX,CAApB;AACD,KAZ2B;AAa5BuJ,IAAAA,UAb4B,YAc1B5lC,OAd0B,EAe1BwnB,YAf0B,EAgBvB;AACHoU,MAAAA,oBAAoB,GAAG,YAAvB;AACAI,MAAAA,iBAAiB;AACjB,aAAO9T,WAAW,CAACloB,OAAD,EAAUwnB,YAAV,CAAlB;AACD,KApB2B;AAqB5BqZ,IAAAA,SArB4B,YAsB1Bc,MAtB0B,EAuB1BtF,IAvB0B,EAwBpB;AACNT,MAAAA,oBAAoB,GAAG,WAAvB;AACAI,MAAAA,iBAAiB;AACjBI,MAAAA,oBAAoB,CAACC,IAAD,CAApB;AACA,aAAOmG,WAAW,CAACb,MAAD,EAAStF,IAAT,CAAlB;AACD,KA7B2B;AA8B5BwJ,IAAAA,mBA9B4B,YA+B1B7U,GA/B0B,EAgC1B2Q,MAhC0B,EAiC1BtF,IAjC0B,EAkCpB;AACNT,MAAAA,oBAAoB,GAAG,qBAAvB;AACAI,MAAAA,iBAAiB;AACjBI,MAAAA,oBAAoB,CAACC,IAAD,CAApB;AACA,aAAO8G,qBAAqB,CAACnS,GAAD,EAAM2Q,MAAN,EAActF,IAAd,CAA5B;AACD,KAvC2B;AAwC5ByJ,IAAAA,eAxC4B,YAyC1BnE,MAzC0B,EA0C1BtF,IA1C0B,EA2CpB;AACNT,MAAAA,oBAAoB,GAAG,iBAAvB;AACAI,MAAAA,iBAAiB;AACjBI,MAAAA,oBAAoB,CAACC,IAAD,CAApB;AACA,aAAOwG,iBAAiB,CAAClB,MAAD,EAAStF,IAAT,CAAxB;AACD,KAhD2B;AAiD5B0J,IAAAA,OAjD4B,YAiDjBpE,MAjDiB,EAiDAtF,IAjDA,EAiDqC;AAC/DT,MAAAA,oBAAoB,GAAG,SAAvB;AACAI,MAAAA,iBAAiB;AACjBI,MAAAA,oBAAoB,CAACC,IAAD,CAApB;AACA,UAAMiJ,cAAc,GAAGz5B,wBAAsB,CAAC5I,OAA9C;AACA4I,MAAAA,wBAAsB,CAAC5I,OAAvB,GAAiCsjC,wCAAjC;;AACA,UAAI;AACF,eAAO5C,SAAS,CAAChC,MAAD,EAAStF,IAAT,CAAhB;AACD,OAFD,SAEU;AACRxwB,QAAAA,wBAAsB,CAAC5I,OAAvB,GAAiCqiC,cAAjC;AACD;AACF,KA5D2B;AA6D5BU,IAAAA,UA7D4B,YA8D1BvH,OA9D0B,EA+D1BC,UA/D0B,EAgE1Bl+B,IAhE0B,EAiER;AAClBo7B,MAAAA,oBAAoB,GAAG,YAAvB;AACAI,MAAAA,iBAAiB;AACjB,UAAMsJ,cAAc,GAAGz5B,wBAAsB,CAAC5I,OAA9C;AACA4I,MAAAA,wBAAsB,CAAC5I,OAAvB,GAAiCsjC,wCAAjC;;AACA,UAAI;AACF,eAAO/H,YAAY,CAACC,OAAD,EAAUC,UAAV,EAAsBl+B,IAAtB,CAAnB;AACD,OAFD,SAEU;AACRqL,QAAAA,wBAAsB,CAAC5I,OAAvB,GAAiCqiC,cAAjC;AACD;AACF,KA3E2B;AA4E5BW,IAAAA,MA5E4B,YA4ElBlE,YA5EkB,EA4Ee;AACzCnG,MAAAA,oBAAoB,GAAG,QAAvB;AACAI,MAAAA,iBAAiB;AACjB,aAAO8F,QAAQ,CAACC,YAAD,CAAf;AACD,KAhF2B;AAiF5BzB,IAAAA,QAjF4B,YAkF1B3B,YAlF0B,EAmFU;AACpC/C,MAAAA,oBAAoB,GAAG,UAAvB;AACAI,MAAAA,iBAAiB;AACjB,UAAMsJ,cAAc,GAAGz5B,wBAAsB,CAAC5I,OAA9C;AACA4I,MAAAA,wBAAsB,CAAC5I,OAAvB,GAAiCsjC,wCAAjC;;AACA,UAAI;AACF,eAAOhF,UAAU,CAAC5C,YAAD,CAAjB;AACD,OAFD,SAEU;AACR9yB,QAAAA,wBAAsB,CAAC5I,OAAvB,GAAiCqiC,cAAjC;AACD;AACF,KA7F2B;AA8F5BY,IAAAA,aA9F4B,YA8FX5oC,KA9FW,EA8FDimC,WA9FC,EA8FwC;AAClE3H,MAAAA,oBAAoB,GAAG,eAAvB;AACAI,MAAAA,iBAAiB;AACjB,aAAOsH,eAAe,CAAChmC,AAAD,CAAtB;AACD,KAlG2B;AAmG5B6oC,IAAAA,gBAnG4B,YAmGR7oC,KAnGQ,EAmGK;AAC/Bs+B,MAAAA,oBAAoB,GAAG,kBAAvB;AACAI,MAAAA,iBAAiB;AACjB,aAAO8H,kBAAkB,CAACxmC,KAAD,CAAzB;AACD,KAvG2B;AAwG5B8oC,IAAAA,aAxG4B,cAwGqB;AAC/CxK,MAAAA,oBAAoB,GAAG,eAAvB;AACAI,MAAAA,iBAAiB;AACjB,aAAOsI,eAAe,EAAtB;AACD,KA5G2B;AA6G5BpE,IAAAA,gBA7G4B,YA8G1Bl0B,MA9G0B,EA+G1B4zB,WA/G0B,EAgH1BO,SAhH0B,EAiHhB;AACVvE,MAAAA,oBAAoB,GAAG,kBAAvB;AACAI,MAAAA,iBAAiB;AACjB,aAAOqF,kBAAkB,CAACr1B,MAAD,EAAS4zB,WAAT,EAAsBO,SAAtB,CAAzB;AACD,KArH2B;AAsH5BkG,IAAAA,mBAtH4B,cAsHe;AACzCzK,MAAAA,oBAAoB,GAAG,qBAAvB;AACAI,MAAAA,iBAAiB;AACjB,aAAO8I,qBAAqB,EAA5B;AACD,KA1H2B;AA4H5BwB,IAAAA,wBAAwB,EAAEpkC;AA5HE,GAA9B;AA+HAk7B,EAAAA,wCAAwC,GAAG;AACzClV,IAAAA,WADyC,YAEvCloB,OAFuC,EAGvCwnB,YAHuC,EAIpC;AACH,aAAOU,WAAW,CAACloB,OAAD,EAAUwnB,YAAV,CAAlB;AACD,KANwC;AAOzCme,IAAAA,WAPyC,YAO1B1nB,QAP0B,EAOboe,IAPa,EAOwB;AAC/DT,MAAAA,oBAAoB,GAAG,aAAvB;AACAM,MAAAA,kBAAkB;AAClB,aAAOuH,aAAa,CAACxlB,QAAD,EAAWoe,IAAX,CAApB;AACD,KAXwC;AAYzCuJ,IAAAA,UAZyC,YAavC5lC,OAbuC,EAcvCwnB,YAduC,EAepC;AACHoU,MAAAA,oBAAoB,GAAG,YAAvB;AACAM,MAAAA,kBAAkB;AAClB,aAAOhU,WAAW,CAACloB,OAAD,EAAUwnB,YAAV,CAAlB;AACD,KAnBwC;AAoBzCqZ,IAAAA,SApByC,YAqBvCc,MArBuC,EAsBvCtF,IAtBuC,EAuBjC;AACNT,MAAAA,oBAAoB,GAAG,WAAvB;AACAM,MAAAA,kBAAkB;AAClB,aAAOsG,WAAW,CAACb,MAAD,EAAStF,IAAT,CAAlB;AACD,KA3BwC;AA4BzCwJ,IAAAA,mBA5ByC,YA6BvC7U,GA7BuC,EA8BvC2Q,MA9BuC,EA+BvCtF,IA/BuC,EAgCjC;AACNT,MAAAA,oBAAoB,GAAG,qBAAvB;AACAM,MAAAA,kBAAkB;AAClB,aAAOiH,qBAAqB,CAACnS,GAAD,EAAM2Q,MAAN,EAActF,IAAd,CAA5B;AACD,KApCwC;AAqCzCyJ,IAAAA,eArCyC,YAsCvCnE,MAtCuC,EAuCvCtF,IAvCuC,EAwCjC;AACNT,MAAAA,oBAAoB,GAAG,iBAAvB;AACAM,MAAAA,kBAAkB;AAClB,aAAO2G,iBAAiB,CAAClB,MAAD,EAAStF,IAAT,CAAxB;AACD,KA5CwC;AA6CzC0J,IAAAA,OA7CyC,YA6C9BpE,MA7C8B,EA6CbtF,IA7Ca,EA6CwB;AAC/DT,MAAAA,oBAAoB,GAAG,SAAvB;AACAM,MAAAA,kBAAkB;AAClB,UAAMoJ,cAAc,GAAGz5B,wBAAsB,CAAC5I,OAA9C;AACA4I,MAAAA,wBAAsB,CAAC5I,OAAvB,GAAiCsjC,wCAAjC;;AACA,UAAI;AACF,eAAO5C,SAAS,CAAChC,MAAD,EAAStF,IAAT,CAAhB;AACD,OAFD,SAEU;AACRxwB,QAAAA,wBAAsB,CAAC5I,OAAvB,GAAiCqiC,cAAjC;AACD;AACF,KAvDwC;AAwDzCU,IAAAA,UAxDyC,YAyDvCvH,OAzDuC,EA0DvCC,UA1DuC,EA2DvCl+B,IA3DuC,EA4DrB;AAClBo7B,MAAAA,oBAAoB,GAAG,YAAvB;AACAM,MAAAA,kBAAkB;AAClB,UAAMoJ,cAAc,GAAGz5B,wBAAsB,CAAC5I,OAA9C;AACA4I,MAAAA,wBAAsB,CAAC5I,OAAvB,GAAiCsjC,wCAAjC;;AACA,UAAI;AACF,eAAO/H,YAAY,CAACC,OAAD,EAAUC,UAAV,EAAsBl+B,IAAtB,CAAnB;AACD,OAFD,SAEU;AACRqL,QAAAA,wBAAsB,CAAC5I,OAAvB,GAAiCqiC,cAAjC;AACD;AACF,KAtEwC;AAuEzCW,IAAAA,MAvEyC,YAuE/BlE,YAvE+B,EAuEE;AACzCnG,MAAAA,oBAAoB,GAAG,QAAvB;AACAM,MAAAA,kBAAkB;AAClB,aAAO4F,QAAQ,CAACC,YAAD,CAAf;AACD,KA3EwC;AA4EzCzB,IAAAA,QA5EyC,YA6EvC3B,YA7EuC,EA8EH;AACpC/C,MAAAA,oBAAoB,GAAG,UAAvB;AACAM,MAAAA,kBAAkB;AAClB,UAAMoJ,cAAc,GAAGz5B,wBAAsB,CAAC5I,OAA9C;AACA4I,MAAAA,wBAAsB,CAAC5I,OAAvB,GAAiCsjC,wCAAjC;;AACA,UAAI;AACF,eAAOhF,UAAU,CAAC5C,YAAD,CAAjB;AACD,OAFD,SAEU;AACR9yB,QAAAA,wBAAsB,CAAC5I,OAAvB,GAAiCqiC,cAAjC;AACD;AACF,KAxFwC;AAyFzCY,IAAAA,aAzFyC,YAyFxB5oC,KAzFwB,EAyFdimC,WAzFc,EAyF2B;AAClE3H,MAAAA,oBAAoB,GAAG,eAAvB;AACAM,MAAAA,kBAAkB;AAClB,aAAOoH,eAAe,CAAChmC,AAAD,CAAtB;AACD,KA7FwC;AA8FzC6oC,IAAAA,gBA9FyC,YA8FrB7oC,KA9FqB,EA8FR;AAC/Bs+B,MAAAA,oBAAoB,GAAG,kBAAvB;AACAM,MAAAA,kBAAkB;AAClB,aAAO4H,kBAAkB,CAACxmC,KAAD,CAAzB;AACD,KAlGwC;AAmGzC8oC,IAAAA,aAnGyC,cAmGQ;AAC/CxK,MAAAA,oBAAoB,GAAG,eAAvB;AACAM,MAAAA,kBAAkB;AAClB,aAAOoI,eAAe,EAAtB;AACD,KAvGwC;AAwGzCpE,IAAAA,gBAxGyC,YAyGvCl0B,MAzGuC,EA0GvC4zB,WA1GuC,EA2GvCO,SA3GuC,EA4G7B;AACVvE,MAAAA,oBAAoB,GAAG,kBAAvB;AACAM,MAAAA,kBAAkB;AAClB,aAAOmF,kBAAkB,CAACr1B,MAAD,EAAS4zB,WAAT,EAAsBO,SAAtB,CAAzB;AACD,KAhHwC;AAiHzCkG,IAAAA,mBAjHyC,cAiHE;AACzCzK,MAAAA,oBAAoB,GAAG,qBAAvB;AACAM,MAAAA,kBAAkB;AAClB,aAAO4I,qBAAqB,EAA5B;AACD,KArHwC;AAuHzCwB,IAAAA,wBAAwB,EAAEpkC;AAvHe,GAA3C;AA0HAi7B,EAAAA,4BAA4B,GAAG;AAC7BjV,IAAAA,WAD6B,YAE3BloB,OAF2B,EAG3BwnB,YAH2B,EAIxB;AACH,aAAOU,WAAW,CAACloB,OAAD,EAAUwnB,YAAV,CAAlB;AACD,KAN4B;AAO7Bme,IAAAA,WAP6B,YAOd1nB,QAPc,EAODoe,IAPC,EAOoC;AAC/DT,MAAAA,oBAAoB,GAAG,aAAvB;AACAM,MAAAA,kBAAkB;AAClB,aAAOwH,cAAc,CAACzlB,QAAD,EAAWoe,IAAX,CAArB;AACD,KAX4B;AAY7BuJ,IAAAA,UAZ6B,YAa3B5lC,OAb2B,EAc3BwnB,YAd2B,EAexB;AACHoU,MAAAA,oBAAoB,GAAG,YAAvB;AACAM,MAAAA,kBAAkB;AAClB,aAAOhU,WAAW,CAACloB,OAAD,EAAUwnB,YAAV,CAAlB;AACD,KAnB4B;AAoB7BqZ,IAAAA,SApB6B,YAqB3Bc,MArB2B,EAsB3BtF,IAtB2B,EAuBrB;AACNT,MAAAA,oBAAoB,GAAG,WAAvB;AACAM,MAAAA,kBAAkB;AAClB,aAAO0G,YAAY,CAACjB,MAAD,EAAStF,IAAT,CAAnB;AACD,KA3B4B;AA4B7BwJ,IAAAA,mBA5B6B,YA6B3B7U,GA7B2B,EA8B3B2Q,MA9B2B,EA+B3BtF,IA/B2B,EAgCrB;AACNT,MAAAA,oBAAoB,GAAG,qBAAvB;AACAM,MAAAA,kBAAkB;AAClB,aAAOmH,sBAAsB,CAACrS,GAAD,EAAM2Q,MAAN,EAActF,IAAd,CAA7B;AACD,KApC4B;AAqC7ByJ,IAAAA,eArC6B,YAsC3BnE,MAtC2B,EAuC3BtF,IAvC2B,EAwCrB;AACNT,MAAAA,oBAAoB,GAAG,iBAAvB;AACAM,MAAAA,kBAAkB;AAClB,aAAO6G,kBAAkB,CAACpB,MAAD,EAAStF,IAAT,CAAzB;AACD,KA5C4B;AA6C7B0J,IAAAA,OA7C6B,YA6ClBpE,MA7CkB,EA6CDtF,IA7CC,EA6CoC;AAC/DT,MAAAA,oBAAoB,GAAG,SAAvB;AACAM,MAAAA,kBAAkB;AAClB,UAAMoJ,cAAc,GAAGz5B,wBAAsB,CAAC5I,OAA9C;AACA4I,MAAAA,wBAAsB,CAAC5I,OAAvB,GAAiCsiC,yCAAjC;;AACA,UAAI;AACF,eAAO1B,UAAU,CAAClC,MAAD,EAAStF,IAAT,CAAjB;AACD,OAFD,SAEU;AACRxwB,QAAAA,wBAAsB,CAAC5I,OAAvB,GAAiCqiC,cAAjC;AACD;AACF,KAvD4B;AAwD7BU,IAAAA,UAxD6B,YAyD3BvH,OAzD2B,EA0D3BC,UA1D2B,EA2D3Bl+B,IA3D2B,EA4DT;AAClBo7B,MAAAA,oBAAoB,GAAG,YAAvB;AACAM,MAAAA,kBAAkB;AAClB,UAAMoJ,cAAc,GAAGz5B,wBAAsB,CAAC5I,OAA9C;AACA4I,MAAAA,wBAAsB,CAAC5I,OAAvB,GAAiCsiC,yCAAjC;;AACA,UAAI;AACF,eAAOvG,aAAa,CAACP,OAAD,EAAUC,UAAV,EAAsBl+B,IAAtB,CAApB;AACD,OAFD,SAEU;AACRqL,QAAAA,wBAAsB,CAAC5I,OAAvB,GAAiCqiC,cAAjC;AACD;AACF,KAtE4B;AAuE7BW,IAAAA,MAvE6B,YAuEnBlE,YAvEmB,EAuEc;AACzCnG,MAAAA,oBAAoB,GAAG,QAAvB;AACAM,MAAAA,kBAAkB;AAClB,aAAO+F,SAAS,CAACF,AAAD,CAAhB;AACD,KA3E4B;AA4E7BzB,IAAAA,QA5E6B,YA6E3B3B,YA7E2B,EA8ES;AACpC/C,MAAAA,oBAAoB,GAAG,UAAvB;AACAM,MAAAA,kBAAkB;AAClB,UAAMoJ,cAAc,GAAGz5B,wBAAsB,CAAC5I,OAA9C;AACA4I,MAAAA,wBAAsB,CAAC5I,OAAvB,GAAiCsiC,yCAAjC;;AACA,UAAI;AACF,eAAO/D,WAAW,CAAC7C,YAAD,CAAlB;AACD,OAFD,SAEU;AACR9yB,QAAAA,wBAAsB,CAAC5I,OAAvB,GAAiCqiC,cAAjC;AACD;AACF,KAxF4B;AAyF7BY,IAAAA,aAzF6B,YAyFZ5oC,KAzFY,EAyFFimC,WAzFE,EAyFuC;AAClE3H,MAAAA,oBAAoB,GAAG,eAAvB;AACAM,MAAAA,kBAAkB;AAClB,aAAOsH,gBAAgB,CAAClmC,AAAD,CAAvB;AACD,KA7F4B;AA8F7B6oC,IAAAA,gBA9F6B,YA8FT7oC,KA9FS,EA8FI;AAC/Bs+B,MAAAA,oBAAoB,GAAG,kBAAvB;AACAM,MAAAA,kBAAkB;AAClB,aAAOgI,mBAAmB,CAAC5mC,KAAD,CAA1B;AACD,KAlG4B;AAmG7B8oC,IAAAA,aAnG6B,cAmGoB;AAC/CxK,MAAAA,oBAAoB,GAAG,eAAvB;AACAM,MAAAA,kBAAkB;AAClB,aAAOuI,gBAAgB,EAAvB;AACD,KAvG4B;AAwG7BvE,IAAAA,gBAxG6B,YAyG3Bl0B,MAzG2B,EA0G3B4zB,WA1G2B,EA2G3BO,SA3G2B,EA4GjB;AACVvE,MAAAA,oBAAoB,GAAG,kBAAvB;AACAM,MAAAA,kBAAkB;AAClB,aAAOoF,mBAAmB,CAACt1B,MAAD,EAAS4zB,WAAT,EAAsBO,SAAtB,CAA1B;AACD,KAhH4B;AAiH7BkG,IAAAA,mBAjH6B,cAiHc;AACzCzK,MAAAA,oBAAoB,GAAG,qBAAvB;AACAM,MAAAA,kBAAkB;AAClB,aAAOiJ,sBAAsB,EAA7B;AACD,KArH4B;AAuH7BmB,IAAAA,wBAAwB,EAAEpkC;AAvHG,GAA/B;AA0HAq7B,EAAAA,8BAA8B,GAAG;AAC/BrV,IAAAA,WAD+B,YAE7BloB,OAF6B,EAG7BwnB,YAH6B,EAI1B;AACH,aAAOU,WAAW,CAACloB,OAAD,EAAUwnB,YAAV,CAAlB;AACD,KAN8B;AAQ/Bme,IAAAA,WAR+B,YAQhB1nB,QARgB,EAQHoe,IARG,EAQkC;AAC/DT,MAAAA,oBAAoB,GAAG,aAAvB;AACAM,MAAAA,kBAAkB;AAClB,aAAOwH,cAAc,CAACzlB,QAAD,EAAWoe,IAAX,CAArB;AACD,KAZ8B;AAa/BuJ,IAAAA,UAb+B,YAc7B5lC,OAd6B,EAe7BwnB,YAf6B,EAgB1B;AACHoU,MAAAA,oBAAoB,GAAG,YAAvB;AACAM,MAAAA,kBAAkB;AAClB,aAAOhU,WAAW,CAACloB,OAAD,EAAUwnB,YAAV,CAAlB;AACD,KApB8B;AAqB/BqZ,IAAAA,SArB+B,YAsB7Bc,MAtB6B,EAuB7BtF,IAvB6B,EAwBvB;AACNT,MAAAA,oBAAoB,GAAG,WAAvB;AACAM,MAAAA,kBAAkB;AAClB,aAAO0G,YAAY,CAACjB,MAAD,EAAStF,IAAT,CAAnB;AACD,KA5B8B;AA6B/BwJ,IAAAA,mBA7B+B,YA8B7B7U,GA9B6B,EA+B7B2Q,MA/B6B,EAgC7BtF,IAhC6B,EAiCvB;AACNT,MAAAA,oBAAoB,GAAG,qBAAvB;AACAM,MAAAA,kBAAkB;AAClB,aAAOmH,sBAAsB,CAACrS,GAAD,EAAM2Q,MAAN,EAActF,IAAd,CAA7B;AACD,KArC8B;AAsC/ByJ,IAAAA,eAtC+B,YAuC7BnE,MAvC6B,EAwC7BtF,IAxC6B,EAyCvB;AACNT,MAAAA,oBAAoB,GAAG,iBAAvB;AACAM,MAAAA,kBAAkB;AAClB,aAAO6G,kBAAkB,CAACpB,MAAD,EAAStF,IAAT,CAAzB;AACD,KA7C8B;AA8C/B0J,IAAAA,OA9C+B,YA8CpBpE,MA9CoB,EA8CHtF,IA9CG,EA8CkC;AAC/DT,MAAAA,oBAAoB,GAAG,SAAvB;AACAM,MAAAA,kBAAkB;AAClB,UAAMoJ,cAAc,GAAGz5B,wBAAsB,CAAC5I,OAA9C;AACA4I,MAAAA,wBAAsB,CAAC5I,OAAvB,GAAiCujC,2CAAjC;;AACA,UAAI;AACF,eAAO3C,UAAU,CAAClC,MAAD,EAAStF,IAAT,CAAjB;AACD,OAFD,SAEU;AACRxwB,QAAAA,wBAAsB,CAAC5I,OAAvB,GAAiCqiC,cAAjC;AACD;AACF,KAxD8B;AAyD/BU,IAAAA,UAzD+B,YA0D7BvH,OA1D6B,EA2D7BC,UA3D6B,EA4D7Bl+B,IA5D6B,EA6DX;AAClBo7B,MAAAA,oBAAoB,GAAG,YAAvB;AACAM,MAAAA,kBAAkB;AAClB,UAAMoJ,cAAc,GAAGz5B,wBAAsB,CAAC5I,OAA9C;AACA4I,MAAAA,wBAAsB,CAAC5I,OAAvB,GAAiCujC,2CAAjC;;AACA,UAAI;AACF,eAAOhH,eAAe,CAACf,OAAD,EAAUC,UAAV,EAAsBl+B,IAAtB,CAAtB;AACD,OAFD,SAEU;AACRqL,QAAAA,wBAAsB,CAAC5I,OAAvB,GAAiCqiC,cAAjC;AACD;AACF,KAvE8B;AAwE/BW,IAAAA,MAxE+B,YAwErBlE,YAxEqB,EAwEY;AACzCnG,MAAAA,oBAAoB,GAAG,QAAvB;AACAM,MAAAA,kBAAkB;AAClB,aAAO+F,SAAS,CAACF,AAAD,CAAhB;AACD,KA5E8B;AA6E/BzB,IAAAA,QA7E+B,YA8E7B3B,YA9E6B,EA+EO;AACpC/C,MAAAA,oBAAoB,GAAG,UAAvB;AACAM,MAAAA,kBAAkB;AAClB,UAAMoJ,cAAc,GAAGz5B,wBAAsB,CAAC5I,OAA9C;AACA4I,MAAAA,wBAAsB,CAAC5I,OAAvB,GAAiCujC,2CAAjC;;AACA,UAAI;AACF,eAAO/E,aAAa,CAAC9C,YAAD,CAApB;AACD,OAFD,SAEU;AACR9yB,QAAAA,wBAAsB,CAAC5I,OAAvB,GAAiCqiC,cAAjC;AACD;AACF,KAzF8B;AA0F/BY,IAAAA,aA1F+B,YA0Fd5oC,KA1Fc,EA0FJimC,WA1FI,EA0FqC;AAClE3H,MAAAA,oBAAoB,GAAG,eAAvB;AACAM,MAAAA,kBAAkB;AAClB,aAAOsH,gBAAgB,CAAClmC,AAAD,CAAvB;AACD,KA9F8B;AA+F/B6oC,IAAAA,gBA/F+B,YA+FX7oC,KA/FW,EA+FE;AAC/Bs+B,MAAAA,oBAAoB,GAAG,kBAAvB;AACAM,MAAAA,kBAAkB;AAClB,aAAOiI,qBAAqB,CAAC7mC,KAAD,CAA5B;AACD,KAnG8B;AAoG/B8oC,IAAAA,aApG+B,cAoGkB;AAC/CxK,MAAAA,oBAAoB,GAAG,eAAvB;AACAM,MAAAA,kBAAkB;AAClB,aAAOyI,kBAAkB,EAAzB;AACD,KAxG8B;AAyG/BzE,IAAAA,gBAzG+B,YA0G7Bl0B,MA1G6B,EA2G7B4zB,WA3G6B,EA4G7BO,SA5G6B,EA6GnB;AACVvE,MAAAA,oBAAoB,GAAG,kBAAvB;AACAM,MAAAA,kBAAkB;AAClB,aAAOoF,mBAAmB,CAACt1B,MAAD,EAAS4zB,WAAT,EAAsBO,SAAtB,CAA1B;AACD,KAjH8B;AAkH/BkG,IAAAA,mBAlH+B,cAkHY;AACzCzK,MAAAA,oBAAoB,GAAG,qBAAvB;AACAM,MAAAA,kBAAkB;AAClB,aAAOkJ,wBAAwB,EAA/B;AACD,KAtH8B;AAwH/BkB,IAAAA,wBAAwB,EAAEpkC;AAxHK,GAAjC;AA2HAqkC,EAAAA,wCAAwC,GAAG;AACzCre,IAAAA,WADyC,YAEvCloB,OAFuC,EAGvCwnB,YAHuC,EAIpC;AACHif,MAAAA,wBAAwB;AACxB,aAAOve,WAAW,CAACloB,OAAD,EAAUwnB,YAAV,CAAlB;AACD,KAPwC;AAQzCme,IAAAA,WARyC,YAQ1B1nB,QAR0B,EAQboe,IARa,EAQwB;AAC/DT,MAAAA,oBAAoB,GAAG,aAAvB;AACA8K,MAAAA,qBAAqB;AACrB1K,MAAAA,iBAAiB;AACjB,aAAOyH,aAAa,CAACxlB,QAAD,EAAWoe,IAAX,CAApB;AACD,KAbwC;AAczCuJ,IAAAA,UAdyC,YAevC5lC,OAfuC,EAgBvCwnB,YAhBuC,EAiBpC;AACHoU,MAAAA,oBAAoB,GAAG,YAAvB;AACA8K,MAAAA,qBAAqB;AACrB1K,MAAAA,iBAAiB;AACjB,aAAO9T,WAAW,CAACloB,OAAD,EAAUwnB,YAAV,CAAlB;AACD,KAtBwC;AAuBzCqZ,IAAAA,SAvByC,YAwBvCc,MAxBuC,EAyBvCtF,IAzBuC,EA0BjC;AACNT,MAAAA,oBAAoB,GAAG,WAAvB;AACA8K,MAAAA,qBAAqB;AACrB1K,MAAAA,iBAAiB;AACjB,aAAOwG,WAAW,CAACb,MAAD,EAAStF,IAAT,CAAlB;AACD,KA/BwC;AAgCzCwJ,IAAAA,mBAhCyC,YAiCvC7U,GAjCuC,EAkCvC2Q,MAlCuC,EAmCvCtF,IAnCuC,EAoCjC;AACNT,MAAAA,oBAAoB,GAAG,qBAAvB;AACA8K,MAAAA,qBAAqB;AACrB1K,MAAAA,iBAAiB;AACjB,aAAOmH,qBAAqB,CAACnS,GAAD,EAAM2Q,MAAN,EAActF,IAAd,CAA5B;AACD,KAzCwC;AA0CzCyJ,IAAAA,eA1CyC,YA2CvCnE,MA3CuC,EA4CvCtF,IA5CuC,EA6CjC;AACNT,MAAAA,oBAAoB,GAAG,iBAAvB;AACA8K,MAAAA,qBAAqB;AACrB1K,MAAAA,iBAAiB;AACjB,aAAO6G,iBAAiB,CAAClB,MAAD,EAAStF,IAAT,CAAxB;AACD,KAlDwC;AAmDzC0J,IAAAA,OAnDyC,YAmD9BpE,MAnD8B,EAmDbtF,IAnDa,EAmDwB;AAC/DT,MAAAA,oBAAoB,GAAG,SAAvB;AACA8K,MAAAA,qBAAqB;AACrB1K,MAAAA,iBAAiB;AACjB,UAAMsJ,cAAc,GAAGz5B,wBAAsB,CAAC5I,OAA9C;AACA4I,MAAAA,wBAAsB,CAAC5I,OAAvB,GAAiCsjC,wCAAjC;;AACA,UAAI;AACF,eAAO5C,SAAS,CAAChC,MAAD,EAAStF,IAAT,CAAhB;AACD,OAFD,SAEU;AACRxwB,QAAAA,wBAAsB,CAAC5I,OAAvB,GAAiCqiC,cAAjC;AACD;AACF,KA9DwC;AA+DzCU,IAAAA,UA/DyC,YAgEvCvH,OAhEuC,EAiEvCC,UAjEuC,EAkEvCl+B,IAlEuC,EAmErB;AAClBo7B,MAAAA,oBAAoB,GAAG,YAAvB;AACA8K,MAAAA,qBAAqB;AACrB1K,MAAAA,iBAAiB;AACjB,UAAMsJ,cAAc,GAAGz5B,wBAAsB,CAAC5I,OAA9C;AACA4I,MAAAA,wBAAsB,CAAC5I,OAAvB,GAAiCsjC,wCAAjC;;AACA,UAAI;AACF,eAAO/H,YAAY,CAACC,OAAD,EAAUC,UAAV,EAAsBl+B,IAAtB,CAAnB;AACD,OAFD,SAEU;AACRqL,QAAAA,wBAAsB,CAAC5I,OAAvB,GAAiCqiC,cAAjC;AACD;AACF,KA9EwC;AA+EzCW,IAAAA,MA/EyC,YA+E/BlE,YA/E+B,EA+EE;AACzCnG,MAAAA,oBAAoB,GAAG,QAAvB;AACA8K,MAAAA,qBAAqB;AACrB1K,MAAAA,iBAAiB;AACjB,aAAO8F,QAAQ,CAACC,YAAD,CAAf;AACD,KApFwC;AAqFzCzB,IAAAA,QArFyC,YAsFvC3B,YAtFuC,EAuFH;AACpC/C,MAAAA,oBAAoB,GAAG,UAAvB;AACA8K,MAAAA,qBAAqB;AACrB1K,MAAAA,iBAAiB;AACjB,UAAMsJ,cAAc,GAAGz5B,wBAAsB,CAAC5I,OAA9C;AACA4I,MAAAA,wBAAsB,CAAC5I,OAAvB,GAAiCsjC,wCAAjC;;AACA,UAAI;AACF,eAAOhF,UAAU,CAAC5C,YAAD,CAAjB;AACD,OAFD,SAEU;AACR9yB,QAAAA,wBAAsB,CAAC5I,OAAvB,GAAiCqiC,cAAjC;AACD;AACF,KAlGwC;AAmGzCY,IAAAA,aAnGyC,YAmGxB5oC,KAnGwB,EAmGdimC,WAnGc,EAmG2B;AAClE3H,MAAAA,oBAAoB,GAAG,eAAvB;AACA8K,MAAAA,qBAAqB;AACrB1K,MAAAA,iBAAiB;AACjB,aAAOsH,eAAe,CAAChmC,AAAD,CAAtB;AACD,KAxGwC;AAyGzC6oC,IAAAA,gBAzGyC,YAyGrB7oC,KAzGqB,EAyGR;AAC/Bs+B,MAAAA,oBAAoB,GAAG,kBAAvB;AACA8K,MAAAA,qBAAqB;AACrB1K,MAAAA,iBAAiB;AACjB,aAAO8H,kBAAkB,CAACxmC,KAAD,CAAzB;AACD,KA9GwC;AA+GzC8oC,IAAAA,aA/GyC,cA+GQ;AAC/CxK,MAAAA,oBAAoB,GAAG,eAAvB;AACA8K,MAAAA,qBAAqB;AACrB1K,MAAAA,iBAAiB;AACjB,aAAOsI,eAAe,EAAtB;AACD,KApHwC;AAqHzCpE,IAAAA,gBArHyC,YAsHvCl0B,MAtHuC,EAuHvC4zB,WAvHuC,EAwHvCO,SAxHuC,EAyH7B;AACVvE,MAAAA,oBAAoB,GAAG,kBAAvB;AACA8K,MAAAA,qBAAqB;AACrB1K,MAAAA,iBAAiB;AACjB,aAAOqF,kBAAkB,CAACr1B,MAAD,EAAS4zB,WAAT,EAAsBO,SAAtB,CAAzB;AACD,KA9HwC;AA+HzCkG,IAAAA,mBA/HyC,cA+HE;AACzCzK,MAAAA,oBAAoB,GAAG,qBAAvB;AACA8K,MAAAA,qBAAqB;AACrB1K,MAAAA,iBAAiB;AACjB,aAAO8I,qBAAqB,EAA5B;AACD,KApIwC;AAsIzCwB,IAAAA,wBAAwB,EAAEpkC;AAtIe,GAA3C;AAyIAqjC,EAAAA,yCAAyC,GAAG;AAC1Crd,IAAAA,WAD0C,YAExCloB,OAFwC,EAGxCwnB,YAHwC,EAIrC;AACHif,MAAAA,wBAAwB;AACxB,aAAOve,WAAW,CAACloB,OAAD,EAAUwnB,YAAV,CAAlB;AACD,KAPyC;AAQ1Cme,IAAAA,WAR0C,YAQ3B1nB,QAR2B,EAQdoe,IARc,EAQuB;AAC/DT,MAAAA,oBAAoB,GAAG,aAAvB;AACA8K,MAAAA,qBAAqB;AACrBxK,MAAAA,kBAAkB;AAClB,aAAOwH,cAAc,CAACzlB,QAAD,EAAWoe,IAAX,CAArB;AACD,KAbyC;AAc1CuJ,IAAAA,UAd0C,YAexC5lC,OAfwC,EAgBxCwnB,YAhBwC,EAiBrC;AACHoU,MAAAA,oBAAoB,GAAG,YAAvB;AACA8K,MAAAA,qBAAqB;AACrBxK,MAAAA,kBAAkB;AAClB,aAAOhU,WAAW,CAACloB,OAAD,EAAUwnB,YAAV,CAAlB;AACD,KAtByC;AAuB1CqZ,IAAAA,SAvB0C,YAwBxCc,MAxBwC,EAyBxCtF,IAzBwC,EA0BlC;AACNT,MAAAA,oBAAoB,GAAG,WAAvB;AACA8K,MAAAA,qBAAqB;AACrBxK,MAAAA,kBAAkB;AAClB,aAAO0G,YAAY,CAACjB,MAAD,EAAStF,IAAT,CAAnB;AACD,KA/ByC;AAgC1CwJ,IAAAA,mBAhC0C,YAiCxC7U,GAjCwC,EAkCxC2Q,MAlCwC,EAmCxCtF,IAnCwC,EAoClC;AACNT,MAAAA,oBAAoB,GAAG,qBAAvB;AACA8K,MAAAA,qBAAqB;AACrBxK,MAAAA,kBAAkB;AAClB,aAAOmH,sBAAsB,CAACrS,GAAD,EAAM2Q,MAAN,EAActF,IAAd,CAA7B;AACD,KAzCyC;AA0C1CyJ,IAAAA,eA1C0C,YA2CxCnE,MA3CwC,EA4CxCtF,IA5CwC,EA6ClC;AACNT,MAAAA,oBAAoB,GAAG,iBAAvB;AACA8K,MAAAA,qBAAqB;AACrBxK,MAAAA,kBAAkB;AAClB,aAAO6G,kBAAkB,CAACpB,MAAD,EAAStF,IAAT,CAAzB;AACD,KAlDyC;AAmD1C0J,IAAAA,OAnD0C,YAmD/BpE,MAnD+B,EAmDdtF,IAnDc,EAmDuB;AAC/DT,MAAAA,oBAAoB,GAAG,SAAvB;AACA8K,MAAAA,qBAAqB;AACrBxK,MAAAA,kBAAkB;AAClB,UAAMoJ,cAAc,GAAGz5B,wBAAsB,CAAC5I,OAA9C;AACA4I,MAAAA,wBAAsB,CAAC5I,OAAvB,GAAiCsiC,yCAAjC;;AACA,UAAI;AACF,eAAO1B,UAAU,CAAClC,MAAD,EAAStF,IAAT,CAAjB;AACD,OAFD,SAEU;AACRxwB,QAAAA,wBAAsB,CAAC5I,OAAvB,GAAiCqiC,cAAjC;AACD;AACF,KA9DyC;AA+D1CU,IAAAA,UA/D0C,YAgExCvH,OAhEwC,EAiExCC,UAjEwC,EAkExCl+B,IAlEwC,EAmEtB;AAClBo7B,MAAAA,oBAAoB,GAAG,YAAvB;AACA8K,MAAAA,qBAAqB;AACrBxK,MAAAA,kBAAkB;AAClB,UAAMoJ,cAAc,GAAGz5B,wBAAsB,CAAC5I,OAA9C;AACA4I,MAAAA,wBAAsB,CAAC5I,OAAvB,GAAiCsiC,yCAAjC;;AACA,UAAI;AACF,eAAOvG,aAAa,CAACP,OAAD,EAAUC,UAAV,EAAsBl+B,IAAtB,CAApB;AACD,OAFD,SAEU;AACRqL,QAAAA,wBAAsB,CAAC5I,OAAvB,GAAiCqiC,cAAjC;AACD;AACF,KA9EyC;AA+E1CW,IAAAA,MA/E0C,YA+EhClE,YA/EgC,EA+EC;AACzCnG,MAAAA,oBAAoB,GAAG,QAAvB;AACA8K,MAAAA,qBAAqB;AACrBxK,MAAAA,kBAAkB;AAClB,aAAO+F,SAAS,CAACF,AAAD,CAAhB;AACD,KApFyC;AAqF1CzB,IAAAA,QArF0C,YAsFxC3B,YAtFwC,EAuFJ;AACpC/C,MAAAA,oBAAoB,GAAG,UAAvB;AACA8K,MAAAA,qBAAqB;AACrBxK,MAAAA,kBAAkB;AAClB,UAAMoJ,cAAc,GAAGz5B,wBAAsB,CAAC5I,OAA9C;AACA4I,MAAAA,wBAAsB,CAAC5I,OAAvB,GAAiCsiC,yCAAjC;;AACA,UAAI;AACF,eAAO/D,WAAW,CAAC7C,YAAD,CAAlB;AACD,OAFD,SAEU;AACR9yB,QAAAA,wBAAsB,CAAC5I,OAAvB,GAAiCqiC,cAAjC;AACD;AACF,KAlGyC;AAmG1CY,IAAAA,aAnG0C,YAmGzB5oC,KAnGyB,EAmGfimC,WAnGe,EAmG0B;AAClE3H,MAAAA,oBAAoB,GAAG,eAAvB;AACA8K,MAAAA,qBAAqB;AACrBxK,MAAAA,kBAAkB;AAClB,aAAOsH,gBAAgB,CAAClmC,AAAD,CAAvB;AACD,KAxGyC;AAyG1C6oC,IAAAA,gBAzG0C,YAyGtB7oC,KAzGsB,EAyGT;AAC/Bs+B,MAAAA,oBAAoB,GAAG,kBAAvB;AACA8K,MAAAA,qBAAqB;AACrBxK,MAAAA,kBAAkB;AAClB,aAAOgI,mBAAmB,CAAC5mC,KAAD,CAA1B;AACD,KA9GyC;AA+G1C8oC,IAAAA,aA/G0C,cA+GO;AAC/CxK,MAAAA,oBAAoB,GAAG,eAAvB;AACA8K,MAAAA,qBAAqB;AACrBxK,MAAAA,kBAAkB;AAClB,aAAOuI,gBAAgB,EAAvB;AACD,KApHyC;AAqH1CvE,IAAAA,gBArH0C,YAsHxCl0B,MAtHwC,EAuHxC4zB,WAvHwC,EAwHxCO,SAxHwC,EAyH9B;AACVvE,MAAAA,oBAAoB,GAAG,kBAAvB;AACA8K,MAAAA,qBAAqB;AACrBxK,MAAAA,kBAAkB;AAClB,aAAOoF,mBAAmB,CAACt1B,MAAD,EAAS4zB,WAAT,EAAsBO,SAAtB,CAA1B;AACD,KA9HyC;AA+H1CkG,IAAAA,mBA/H0C,cA+HC;AACzCzK,MAAAA,oBAAoB,GAAG,qBAAvB;AACA8K,MAAAA,qBAAqB;AACrBxK,MAAAA,kBAAkB;AAClB,aAAOiJ,sBAAsB,EAA7B;AACD,KApIyC;AAsI1CmB,IAAAA,wBAAwB,EAAEpkC;AAtIgB,GAA5C;AAyIAskC,EAAAA,2CAA2C,GAAG;AAC5Cte,IAAAA,WAD4C,YAE1CloB,OAF0C,EAG1CwnB,YAH0C,EAIvC;AACHif,MAAAA,wBAAwB;AACxB,aAAOve,WAAW,CAACloB,OAAD,EAAUwnB,YAAV,CAAlB;AACD,KAP2C;AAS5Cme,IAAAA,WAT4C,YAS7B1nB,QAT6B,EAShBoe,IATgB,EASqB;AAC/DT,MAAAA,oBAAoB,GAAG,aAAvB;AACA8K,MAAAA,qBAAqB;AACrBxK,MAAAA,kBAAkB;AAClB,aAAOwH,cAAc,CAACzlB,QAAD,EAAWoe,IAAX,CAArB;AACD,KAd2C;AAe5CuJ,IAAAA,UAf4C,YAgB1C5lC,OAhB0C,EAiB1CwnB,YAjB0C,EAkBvC;AACHoU,MAAAA,oBAAoB,GAAG,YAAvB;AACA8K,MAAAA,qBAAqB;AACrBxK,MAAAA,kBAAkB;AAClB,aAAOhU,WAAW,CAACloB,OAAD,EAAUwnB,YAAV,CAAlB;AACD,KAvB2C;AAwB5CqZ,IAAAA,SAxB4C,YAyB1Cc,MAzB0C,EA0B1CtF,IA1B0C,EA2BpC;AACNT,MAAAA,oBAAoB,GAAG,WAAvB;AACA8K,MAAAA,qBAAqB;AACrBxK,MAAAA,kBAAkB;AAClB,aAAO0G,YAAY,CAACjB,MAAD,EAAStF,IAAT,CAAnB;AACD,KAhC2C;AAiC5CwJ,IAAAA,mBAjC4C,YAkC1C7U,GAlC0C,EAmC1C2Q,MAnC0C,EAoC1CtF,IApC0C,EAqCpC;AACNT,MAAAA,oBAAoB,GAAG,qBAAvB;AACA8K,MAAAA,qBAAqB;AACrBxK,MAAAA,kBAAkB;AAClB,aAAOmH,sBAAsB,CAACrS,GAAD,EAAM2Q,MAAN,EAActF,IAAd,CAA7B;AACD,KA1C2C;AA2C5CyJ,IAAAA,eA3C4C,YA4C1CnE,MA5C0C,EA6C1CtF,IA7C0C,EA8CpC;AACNT,MAAAA,oBAAoB,GAAG,iBAAvB;AACA8K,MAAAA,qBAAqB;AACrBxK,MAAAA,kBAAkB;AAClB,aAAO6G,kBAAkB,CAACpB,MAAD,EAAStF,IAAT,CAAzB;AACD,KAnD2C;AAoD5C0J,IAAAA,OApD4C,YAoDjCpE,MApDiC,EAoDhBtF,IApDgB,EAoDqB;AAC/DT,MAAAA,oBAAoB,GAAG,SAAvB;AACA8K,MAAAA,qBAAqB;AACrBxK,MAAAA,kBAAkB;AAClB,UAAMoJ,cAAc,GAAGz5B,wBAAsB,CAAC5I,OAA9C;AACA4I,MAAAA,wBAAsB,CAAC5I,OAAvB,GAAiCsiC,yCAAjC;;AACA,UAAI;AACF,eAAO1B,UAAU,CAAClC,MAAD,EAAStF,IAAT,CAAjB;AACD,OAFD,SAEU;AACRxwB,QAAAA,wBAAsB,CAAC5I,OAAvB,GAAiCqiC,cAAjC;AACD;AACF,KA/D2C;AAgE5CU,IAAAA,UAhE4C,YAiE1CvH,OAjE0C,EAkE1CC,UAlE0C,EAmE1Cl+B,IAnE0C,EAoExB;AAClBo7B,MAAAA,oBAAoB,GAAG,YAAvB;AACA8K,MAAAA,qBAAqB;AACrBxK,MAAAA,kBAAkB;AAClB,UAAMoJ,cAAc,GAAGz5B,wBAAsB,CAAC5I,OAA9C;AACA4I,MAAAA,wBAAsB,CAAC5I,OAAvB,GAAiCsiC,yCAAjC;;AACA,UAAI;AACF,eAAO/F,eAAe,CAACf,OAAD,EAAUC,UAAV,EAAsBl+B,IAAtB,CAAtB;AACD,OAFD,SAEU;AACRqL,QAAAA,wBAAsB,CAAC5I,OAAvB,GAAiCqiC,cAAjC;AACD;AACF,KA/E2C;AAgF5CW,IAAAA,MAhF4C,YAgFlClE,YAhFkC,EAgFD;AACzCnG,MAAAA,oBAAoB,GAAG,QAAvB;AACA8K,MAAAA,qBAAqB;AACrBxK,MAAAA,kBAAkB;AAClB,aAAO+F,SAAS,CAACF,AAAD,CAAhB;AACD,KArF2C;AAsF5CzB,IAAAA,QAtF4C,YAuF1C3B,YAvF0C,EAwFN;AACpC/C,MAAAA,oBAAoB,GAAG,UAAvB;AACA8K,MAAAA,qBAAqB;AACrBxK,MAAAA,kBAAkB;AAClB,UAAMoJ,cAAc,GAAGz5B,wBAAsB,CAAC5I,OAA9C;AACA4I,MAAAA,wBAAsB,CAAC5I,OAAvB,GAAiCsiC,yCAAjC;;AACA,UAAI;AACF,eAAO9D,aAAa,CAAC9C,YAAD,CAApB;AACD,OAFD,SAEU;AACR9yB,QAAAA,wBAAsB,CAAC5I,OAAvB,GAAiCqiC,cAAjC;AACD;AACF,KAnG2C;AAoG5CY,IAAAA,aApG4C,YAoG3B5oC,KApG2B,EAoGjBimC,WApGiB,EAoGwB;AAClE3H,MAAAA,oBAAoB,GAAG,eAAvB;AACA8K,MAAAA,qBAAqB;AACrBxK,MAAAA,kBAAkB;AAClB,aAAOsH,gBAAgB,CAAClmC,AAAD,CAAvB;AACD,KAzG2C;AA0G5C6oC,IAAAA,gBA1G4C,YA0GxB7oC,KA1GwB,EA0GX;AAC/Bs+B,MAAAA,oBAAoB,GAAG,kBAAvB;AACA8K,MAAAA,qBAAqB;AACrBxK,MAAAA,kBAAkB;AAClB,aAAOiI,qBAAqB,CAAC7mC,KAAD,CAA5B;AACD,KA/G2C;AAgH5C8oC,IAAAA,aAhH4C,cAgHK;AAC/CxK,MAAAA,oBAAoB,GAAG,eAAvB;AACA8K,MAAAA,qBAAqB;AACrBxK,MAAAA,kBAAkB;AAClB,aAAOyI,kBAAkB,EAAzB;AACD,KArH2C;AAsH5CzE,IAAAA,gBAtH4C,YAuH1Cl0B,MAvH0C,EAwH1C4zB,WAxH0C,EAyH1CO,SAzH0C,EA0HhC;AACVvE,MAAAA,oBAAoB,GAAG,kBAAvB;AACA8K,MAAAA,qBAAqB;AACrBxK,MAAAA,kBAAkB;AAClB,aAAOoF,mBAAmB,CAACt1B,MAAD,EAAS4zB,WAAT,EAAsBO,SAAtB,CAA1B;AACD,KA/H2C;AAgI5CkG,IAAAA,mBAhI4C,cAgID;AACzCzK,MAAAA,oBAAoB,GAAG,qBAAvB;AACA8K,MAAAA,qBAAqB;AACrBxK,MAAAA,kBAAkB;AAClB,aAAOkJ,wBAAwB,EAA/B;AACD,KArI2C;AAuI5CkB,IAAAA,wBAAwB,EAAEpkC;AAvIkB,GAA9C;AAyID;;IC7rFoBsD,QAAOoO;AAW5B,IAAI+yB,UAAkB,GAAG,CAAzB;AACA,AACA,IAAIC,iBAAyB,GAAG,CAAC,CAAjC;AACA;AAEA,SAASC,aAAT,GAAiC;AAC/B,SAAOF,UAAP;AACD;;AAED,SAASG,gBAAT,GAAkC;AAChC;AAGAH,EAAAA,UAAU,GAAGnhC,KAAG,EAAhB;AACD;;AAED,SAASuhC,kBAAT,CAA4BzkC,KAA5B,EAAgD;AAC9C;AAIAskC,EAAAA,iBAAiB,GAAGphC,KAAG,EAAvB;;AAEA,MAAMlD,KAAK,CAAC0kC,eAAR,GAAyC,CAA7C,EAAgD;AAC9C1kC,IAAAA,KAAK,CAAC0kC,eAAN,GAAwBxhC,KAAG,EAA3B;AACD;AACF;;AAED,SAASyhC,0BAAT,CAAoC3kC,KAApC,EAAwD;AACtD;AAGAskC,EAAAA,iBAAiB,GAAG,CAAC,CAArB;AACD;;AAED,SAASM,wCAAT,CACE5kC,KADF,EAEE6kC,gBAFF,EAGQ;AACN;AAIA,MAAIP,iBAAiB,IAAI,CAAzB,EAA4B;AAC1B,QAAMQ,WAAW,GAAG5hC,KAAG,KAAKohC,iBAA5B;AACAtkC,IAAAA,KAAK,CAAC+kC,cAAN,IAAwBD,WAAxB;;AACA,QAAID,gBAAJ,EAAsB;AACpB7kC,MAAAA,KAAK,CAACglC,gBAAN,GAAyBF,WAAzB;AACD;;AACDR,IAAAA,iBAAiB,GAAG,CAAC,CAArB;AACD;AACF;;AAmED,SAASW,sBAAT,CAAgCjlC,KAAhC,EAAoD;AAClD;AACA;AACA;AACA,MAAIwB,KAAK,GAAGxB,KAAK,CAACwB,KAAlB;;AACA,SAAOA,KAAP,EAAc;AACZxB,IAAAA,KAAK,CAAC+kC,cAAN,IAAwBvjC,KAAK,CAACujC,cAA9B;AACAvjC,IAAAA,KAAK,GAAGA,KAAK,CAACC,OAAd;AACD;AACF;;ACgDD,IAAM3B,mBAAiB,GAAGhI,oBAAoB,CAACgI,iBAA/C;AAEA,IAAIolC,gBAAyB,GAAG,KAAhC;AAEA,IAAIC,oBAAJ;AACA,IAAIC,kCAAJ;AACA,IAAIC,0CAAJ;AACA,IAAIC,8CAAJ;AACA,IAAIC,wBAAJ;AACA,AAAO,IAAIC,4BAAJ;AACP,IAAIC,uBAAJ;AACA,IAAIC,uBAAJ;AACA;AAEA,AAAa;AACXP,EAAAA,oBAAoB,GAAG,EAAvB;AACAC,EAAAA,kCAAkC,GAAG,EAArC;AACAC,EAAAA,0CAA0C,GAAG,EAA7C;AACAC,EAAAA,8CAA8C,GAAG,EAAjD;AACAC,EAAAA,wBAAwB,GAAG,EAA3B;AACAC,EAAAA,4BAA4B,GAAG,KAA/B;AACAC,EAAAA,uBAAuB,GAAG,EAA1B;AACAC,EAAAA,uBAAuB,GAAG,EAA1B;AACAC,AACD;;AAED,AAAO,SAASC,iBAAT,CACLjlC,OADK,EAELsN,cAFK,EAGL43B,YAHK,EAIL7rB,WAJK,EAKL;AACA,MAAIrZ,OAAO,KAAK,IAAhB,EAAsB;AACpB;AACA;AACA;AACA;AACAsN,IAAAA,cAAc,CAACzM,KAAf,GAAuB4xB,gBAAgB,CACrCnlB,cADqC,EAErC,IAFqC,EAGrC43B,YAHqC,EAIrC7rB,WAJqC,CAAvC;AAMD,GAXD,MAWO;AACL;AACA;AACA;AAEA;AACA;AACA/L,IAAAA,cAAc,CAACzM,KAAf,GAAuBwxB,oBAAoB,CACzC/kB,cADyC,EAEzCtN,OAAO,CAACa,KAFiC,EAGzCqkC,YAHyC,EAIzC7rB,WAJyC,CAA3C;AAMD;AACF;;AAED,SAAS8rB,+BAAT,CACEnlC,OADF,EAEEsN,cAFF,EAGE43B,YAHF,EAIE7rB,WAJF,EAKE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA/L,EAAAA,cAAc,CAACzM,KAAf,GAAuBwxB,oBAAoB,CACzC/kB,cADyC,EAEzCtN,OAAO,CAACa,KAFiC,EAGzC,IAHyC,EAIzCwY,WAJyC,CAA3C,CATA;AAgBA;AACA;AACA;;AACA/L,EAAAA,cAAc,CAACzM,KAAf,GAAuBwxB,oBAAoB,CACzC/kB,cADyC,EAEzC,IAFyC,EAGzC43B,YAHyC,EAIzC7rB,WAJyC,CAA3C;AAMD;;AAED,SAAS+rB,gBAAT,CACEplC,OADF,EAEEsN,cAFF,EAGEpC,SAHF,EAIE4b,SAJF,EAKEzN,WALF,EAME;AACA;AACA;AACA;AAEA,EAAa;AACX,QAAI/L,cAAc,CAAC3Q,IAAf,KAAwB2Q,cAAc,CAAC0f,WAA3C,EAAwD;AACtD;AACA;AACA,UAAMqY,cAAc,GAAGn6B,SAAS,CAAC4f,SAAjC;;AACA,UAAIua,cAAJ,EAAoB;AAClB15B,QAAAA,cAAc,CACZ05B,cADY,EAEZve,SAFY;AAGZ,cAHY,EAIZlqB,gBAAgB,CAACsO,SAAD,CAJJ,CAAd;AAMD;AACF;AACF;;AAED,MAAMhO,MAAM,GAAGgO,SAAS,CAAChO,MAAzB;AACA,MAAM6wB,GAAG,GAAGzgB,cAAc,CAACygB,GAA3B,CAtBA;;AAyBA,MAAImX,YAAJ;AACAngB,EAAAA,oBAAoB,CAACzX,cAAD,EAAiB+L,WAAjB,CAApB;;AACA,EAAa;AACXla,IAAAA,mBAAiB,CAACa,OAAlB,GAA4BsN,cAA5B;AACA2R,IAAAA,cAAc,CAAC,IAAD,CAAd;AACAimB,IAAAA,YAAY,GAAGpL,eAAe,CAC5B95B,OAD4B,EAE5BsN,cAF4B,EAG5BpQ,MAH4B,EAI5B4pB,SAJ4B,EAK5BiH,GAL4B,EAM5B1U,WAN4B,CAA9B;;AAQA,QACE2N,CACA1Z,cAAc,CAACsS,IAAf,GAAsBvC,UAFxB,EAGE;AACAtV,MAAAA,WAAW;;AACX,UAAI;AACFm9B,QAAAA,YAAY,GAAGpL,eAAe,CAC5B95B,OAD4B,EAE5BsN,cAF4B,EAG5BpQ,MAH4B,EAI5B4pB,SAJ4B,EAK5BiH,GAL4B,EAM5B1U,WAN4B,CAA9B;AAQD,OATD,SASU;AACR1Q,QAAAA,YAAY;AACb;AACF;;AACDsW,IAAAA,cAAc,CAAC,KAAD,CAAd;AACD,GA9BD;;AAyCA,MAAIjf,OAAO,KAAK,IAAZ,IAAoB,CAACukC,gBAAzB,EAA2C;AACzC9J,IAAAA,YAAY,CAACz6B,OAAD,EAAUsN,cAAV,EAA0B+L,WAA1B,CAAZ;AACA,WAAOisB,4BAA4B,CAACtlC,OAAD,EAAUsN,cAAV,EAA0B+L,WAA1B,CAAnC;AACD,GAvED;;;AA0EA/L,EAAAA,cAAc,CAAC5N,KAAf,IAAwB/B,aAAxB;AACAsnC,EAAAA,iBAAiB,CAACjlC,OAAD,EAAUsN,cAAV,EAA0B43B,YAA1B,EAAwC7rB,WAAxC,CAAjB;AACA,SAAO/L,cAAc,CAACzM,KAAtB;AACD;;AAED,SAAS0kC,mBAAT,CACEvlC,OADF,EAEEsN,cAFF,EAGEpC,SAHF,EAIE4b,SAJF,EAKE0e,WALF,EAMEnsB,WANF,EAOgB;AACd,MAAIrZ,OAAO,KAAK,IAAhB,EAAsB;AACpB,QAAMrD,IAAI,GAAGuO,SAAS,CAACvO,IAAvB;;AACA,QACE8oC,yBAAyB,CAAC9oC,IAAD,CAAzB,IACAuO,SAAS,CAACw6B,OAAV,KAAsB,IADtB;AAGAx6B,IAAAA,SAAS,CAACmX,YAAV,KAA2BpZ,SAJ7B,EAKE;AACA,UAAI08B,YAAY,GAAGhpC,IAAnB;;AACA,MAAa;AACXgpC,QAAAA,YAAY,GAAGC,8BAA8B,CAACjpC,IAAD,CAA7C;AACD,OAJD;AAMA;AACA;;;AACA2Q,MAAAA,cAAc,CAACzQ,GAAf,GAAqBtD,mBAArB;AACA+T,MAAAA,cAAc,CAAC3Q,IAAf,GAAsBgpC,YAAtB;;AACA,MAAa;AACXE,QAAAA,8BAA8B,CAACv4B,cAAD,EAAiB3Q,IAAjB,CAA9B;AACD;;AACD,aAAOmpC,yBAAyB,CAC9B9lC,OAD8B,EAE9BsN,cAF8B,EAG9Bq4B,YAH8B,EAI9B7e,SAJ8B,EAK9B0e,WAL8B,EAM9BnsB,WAN8B,CAAhC;AAQD;;AACD,IAAa;AACX,UAAMgsB,cAAc,GAAG1oC,IAAI,CAACmuB,SAA5B;;AACA,UAAIua,cAAJ,EAAoB;AAClB;AACA;AACA15B,QAAAA,cAAc,CACZ05B,cADY,EAEZve,SAFY;AAGZ,cAHY,EAIZlqB,gBAAgB,CAACD,IAAD,CAJJ,CAAd;AAMD;AACF;;AACD,QAAMkE,KAAK,GAAGklC,2BAA2B,CACvC76B,SAAS,CAACvO,IAD6B,EAEvC,IAFuC,EAGvCmqB,SAHuC,EAIvCxZ,cAJuC,EAKvCA,cAAc,CAACsS,IALwB,EAMvCvG,WANuC,CAAzC;AAQAxY,IAAAA,KAAK,CAACktB,GAAN,GAAYzgB,cAAc,CAACygB,GAA3B;AACAltB,IAAAA,KAAK,CAAClB,MAAN,GAAe2N,cAAf;AACAA,IAAAA,cAAc,CAACzM,KAAf,GAAuBA,KAAvB;AACA,WAAOA,KAAP;AACD;;AACD,EAAa;AACX,QAAMlE,KAAI,GAAGuO,SAAS,CAACvO,IAAvB;AACA,QAAM0oC,eAAc,GAAG1oC,KAAI,CAACmuB,SAA5B;;AACA,QAAIua,eAAJ,EAAoB;AAClB;AACA;AACA15B,MAAAA,cAAc,CACZ05B,eADY,EAEZve,SAFY;AAGZ,YAHY,EAIZlqB,gBAAgB,CAACD,KAAD,CAJJ,CAAd;AAMD;AACF;;AACD,MAAMg2B,YAAY,GAAK3yB,OAAO,CAACa,KAA/B,CAtEc;;AAuEd,MAAI,CAAC8W,gBAAgB,CAAC6tB,WAAD,EAAcnsB,WAAd,CAArB,EAAiD;AAC/C;AACA;AACA,QAAM2sB,SAAS,GAAGrT,YAAY,CAACjG,aAA/B,CAH+C;;AAK/C,QAAIgZ,OAAO,GAAGx6B,SAAS,CAACw6B,OAAxB;AACAA,IAAAA,OAAO,GAAGA,OAAO,KAAK,IAAZ,GAAmBA,OAAnB,GAA6BznB,YAAvC;;AACA,QAAIynB,OAAO,CAACM,SAAD,EAAYlf,SAAZ,CAAP,IAAiC9mB,OAAO,CAAC+tB,GAAR,KAAgBzgB,cAAc,CAACygB,GAApE,EAAyE;AACvE,aAAOuX,4BAA4B,CAACtlC,OAAD,EAAUsN,cAAV,EAA0B+L,WAA1B,CAAnC;AACD;AACF,GAjFa;;;AAmFd/L,EAAAA,cAAc,CAAC5N,KAAf,IAAwB/B,aAAxB;AACA,MAAMywB,QAAQ,GAAGiB,oBAAoB,CAACsD,YAAD,EAAe7L,SAAf,CAArC;AACAsH,EAAAA,QAAQ,CAACL,GAAT,GAAezgB,cAAc,CAACygB,GAA9B;AACAK,EAAAA,QAAQ,CAACzuB,MAAT,GAAkB2N,cAAlB;AACAA,EAAAA,cAAc,CAACzM,KAAf,GAAuButB,QAAvB;AACA,SAAOA,QAAP;AACD;;AAED,SAAS0X,yBAAT,CACE9lC,OADF,EAEEsN,cAFF,EAGEpC,SAHF,EAIE4b,SAJF,EAKE0e,WALF,EAMEnsB,WANF,EAOgB;AACd;AACA;AACA;AAEA,EAAa;AACX,QAAI/L,cAAc,CAAC3Q,IAAf,KAAwB2Q,cAAc,CAAC0f,WAA3C,EAAwD;AACtD;AACA;AACA,UAAIiZ,aAAa,GAAG34B,cAAc,CAAC0f,WAAnC;;AACA,UAAIiZ,aAAa,CAACnpC,QAAd,KAA2B7B,eAA/B,EAAgD;AAC9C;AACA;AACA;AACA,YAAMmC,aAA0C,GAAG6oC,aAAnD;AACA,YAAM5oC,OAAO,GAAGD,aAAa,CAACE,QAA9B;AACA,YAAMC,IAAI,GAAGH,aAAa,CAACI,KAA3B;;AACA,YAAI;AACFyoC,UAAAA,aAAa,GAAG1oC,IAAI,CAACF,OAAD,CAApB;AACD,SAFD,CAEE,OAAOI,CAAP,EAAU;AACVwoC,UAAAA,aAAa,GAAG,IAAhB;AACD,SAX6C;;;AAa9C,YAAMC,cAAc,GAAGD,aAAa,IAAKA,aAAD,CAAqBnb,SAA7D;;AACA,YAAIob,cAAJ,EAAoB;AAClBv6B,UAAAA,cAAc,CACZu6B,cADY,EAEZpf,SAFY;AAGZ,gBAHY,EAIZlqB,gBAAgB,CAACqpC,aAAD,CAJJ,CAAd;AAMD;AACF;AACF;AACF;;AACD,MAAIjmC,OAAO,KAAK,IAAhB,EAAsB;AACpB,QAAMgmC,SAAS,GAAGhmC,OAAO,CAAC0sB,aAA1B;;AACA,QACEzO,YAAY,CAAC+nB,SAAD,EAAYlf,SAAZ,CAAZ,IACA9mB,OAAO,CAAC+tB,GAAR,KAAgBzgB,cAAc,CAACygB,GAD/B;AAGC5d,IAAAA,CAAU7C,cAAc,CAAC3Q,IAAf,KAAwBqD,OAAO,CAACrD,IAAnC,CAHR,CADF,EAKE;AACA4nC,MAAAA,gBAAgB,GAAG,KAAnB;;AACA,UAAI,CAAC5sB,gBAAgB,CAAC0B,WAAD,EAAcmsB,WAAd,CAArB,EAAiD;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAl4B,QAAAA,cAAc,CAACyG,KAAf,GAAuB/T,OAAO,CAAC+T,KAA/B;AACA,eAAOuxB,4BAA4B,CACjCtlC,OADiC,EAEjCsN,cAFiC,EAGjC+L,WAHiC,CAAnC;AAKD,OApBD,MAoBO,IAAI,CAACrZ,OAAO,CAACN,KAAR,GAAgBb,4BAAjB,MAAmDnB,OAAvD,EAAgE;AACrE;AACA;AACA6mC,QAAAA,gBAAgB,GAAG,IAAnB;AACD;AACF;AACF;;AACD,SAAO4B,uBAAuB,CAC5BnmC,OAD4B,EAE5BsN,cAF4B,EAG5BpC,SAH4B,EAI5B4b,SAJ4B,EAK5BzN,WAL4B,CAA9B;AAOD;;AAED,SAAS+sB,wBAAT,CACEpmC,OADF,EAEEsN,cAFF,EAGE+L,WAHF,EAIE;AACA,MAAMyN,SAAyB,GAAGxZ,cAAc,CAAC4f,YAAjD;AACA,MAAMgY,YAAY,GAAGpe,SAAS,CAAC7W,QAA/B;AAEA,MAAM4W,SAAgC,GACpC7mB,OAAO,KAAK,IAAZ,GAAmBA,OAAO,CAAC6lB,aAA3B,GAA2C,IAD7C;;AAGA,MACEiB,SAAS,CAAClH,IAAV,KAAmB,QAAnB,IACAkH,SAAS,CAAClH,IAAV,KAAmB,+BAFrB,EAGE;AACA,QAAI,CAACtS,cAAc,CAACsS,IAAf,GAAsBrC,cAAvB,MAA2CH,MAA/C,EAAuD;AACrD;AACA;AACA,UAAM2J,SAAyB,GAAG;AAChCsf,QAAAA,SAAS,EAAEh0B;AADqB,OAAlC;AAGA/E,MAAAA,cAAc,CAACuY,aAAf,GAA+BkB,SAA/B;AACAuf,MAAAA,eAAe,CAACh5B,cAAD,EAAiB+L,WAAjB,CAAf;AACD,KARD,MAQO,IAAI,CAAC1B,gBAAgB,CAAC0B,WAAD,EAAe9F,aAAf,CAArB,EAA2D;AAChE,UAAIgzB,aAAJ;;AACA,UAAI1f,SAAS,KAAK,IAAlB,EAAwB;AACtB,YAAM2f,aAAa,GAAG3f,SAAS,CAACwf,SAAhC;AACAE,QAAAA,aAAa,GAAGzuB,UAAU,CAAC0uB,aAAD,EAAgBntB,WAAhB,CAA1B;AACD,OAHD,MAGO;AACLktB,QAAAA,aAAa,GAAGltB,WAAhB;AACD,OAP+D;;;AAUhE,MAA4B;AAC1BotB,QAAAA,eAAe,CAAElzB,aAAF,CAAf;AACD;;AACDjG,MAAAA,cAAc,CAACyG,KAAf,GAAuBzG,cAAc,CAAC0W,UAAf,GAA4BhM,WAAW,CAC5DzE,aAD4D,CAA9D;AAGA,UAAMwT,UAAyB,GAAG;AAChCsf,QAAAA,SAAS,EAAEE;AADqB,OAAlC;AAGAj5B,MAAAA,cAAc,CAACuY,aAAf,GAA+BkB,UAA/B,CAnBgE;AAqBhE;;AACAuf,MAAAA,eAAe,CAACh5B,cAAD,EAAiBi5B,aAAjB,CAAf;AACA,aAAO,IAAP;AACD,KAxBM,MAwBA;AACL;AACA,UAAMxf,WAAyB,GAAG;AAChCsf,QAAAA,SAAS,EAAEh0B;AADqB,OAAlC;AAGA/E,MAAAA,cAAc,CAACuY,aAAf,GAA+BkB,WAA/B,CALK;;AAOL,UAAM2f,kBAAkB,GACtB7f,SAAS,KAAK,IAAd,GAAqBA,SAAS,CAACwf,SAA/B,GAA2ChtB,WAD7C;AAEAitB,MAAAA,eAAe,CAACh5B,cAAD,EAAiBo5B,kBAAjB,CAAf;AACD;AACF,GA/CD,MA+CO;AACL,QAAIA,mBAAJ;;AACA,QAAI7f,SAAS,KAAK,IAAlB,EAAwB;AACtB6f,MAAAA,mBAAkB,GAAG5uB,UAAU,CAAC+O,SAAS,CAACwf,SAAX,EAAsBhtB,WAAtB,CAA/B,CADsB;;AAGtB/L,MAAAA,cAAc,CAACuY,aAAf,GAA+B,IAA/B;AACD,KAJD,MAIO;AACL;AACA;AACA;AACA6gB,MAAAA,mBAAkB,GAAGrtB,WAArB;AACD;;AACDitB,IAAAA,eAAe,CAACh5B,cAAD,EAAiBo5B,mBAAjB,CAAf;AACD;;AAEDzB,EAAAA,iBAAiB,CAACjlC,OAAD,EAAUsN,cAAV,EAA0B43B,YAA1B,EAAwC7rB,WAAxC,CAAjB;AACA,SAAO/L,cAAc,CAACzM,KAAtB;AACD;AAGD;AACA;;;AACA,IAAM8lC,2BAA2B,GAAGP,wBAApC;;AAEA,SAAS1V,cAAT,CACE1wB,OADF,EAEEsN,cAFF,EAGE+L,WAHF,EAIE;AACA,MAAM6rB,YAAY,GAAG53B,cAAc,CAAC4f,YAApC;AACA+X,EAAAA,iBAAiB,CAACjlC,OAAD,EAAUsN,cAAV,EAA0B43B,YAA1B,EAAwC7rB,WAAxC,CAAjB;AACA,SAAO/L,cAAc,CAACzM,KAAtB;AACD;;AAED,SAAS+lC,UAAT,CACE5mC,OADF,EAEEsN,cAFF,EAGE+L,WAHF,EAIE;AACA,MAAM6rB,YAAY,GAAG53B,cAAc,CAAC4f,YAAf,CAA4Bjd,QAAjD;AACAg1B,EAAAA,iBAAiB,CAACjlC,OAAD,EAAUsN,cAAV,EAA0B43B,YAA1B,EAAwC7rB,WAAxC,CAAjB;AACA,SAAO/L,cAAc,CAACzM,KAAtB;AACD;;AAED,SAASgmC,cAAT,CACE7mC,OADF,EAEEsN,cAFF,EAGE+L,WAHF,EAIE;AACA,EAAyB;AACvB/L,IAAAA,cAAc,CAAC5N,KAAf,IAAwB7B,MAAxB,CADuB;AAIvB;;AACA,QAAMsC,SAAS,GAAGmN,cAAc,CAACnN,SAAjC;AACAA,IAAAA,SAAS,CAAC2mC,cAAV,GAA2B,CAA3B;AACA3mC,IAAAA,SAAS,CAAC4mC,qBAAV,GAAkC,CAAlC;AACD;;AACD,MAAMjgB,SAAS,GAAGxZ,cAAc,CAAC4f,YAAjC;AACA,MAAMgY,YAAY,GAAGpe,SAAS,CAAC7W,QAA/B;AACAg1B,EAAAA,iBAAiB,CAACjlC,OAAD,EAAUsN,cAAV,EAA0B43B,YAA1B,EAAwC7rB,WAAxC,CAAjB;AACA,SAAO/L,cAAc,CAACzM,KAAtB;AACD;;AAED,SAASmmC,OAAT,CAAiBhnC,OAAjB,EAAwCsN,cAAxC,EAA+D;AAC7D,MAAMygB,GAAG,GAAGzgB,cAAc,CAACygB,GAA3B;;AACA,MACG/tB,OAAO,KAAK,IAAZ,IAAoB+tB,GAAG,KAAK,IAA7B,IACC/tB,OAAO,KAAK,IAAZ,IAAoBA,OAAO,CAAC+tB,GAAR,KAAgBA,GAFvC,EAGE;AACA;AACAzgB,IAAAA,cAAc,CAAC5N,KAAf,IAAwBvB,GAAxB;AACD;AACF;;AAED,SAASgoC,uBAAT,CACEnmC,OADF,EAEEsN,cAFF,EAGEpC,SAHF,EAIE4b,SAJF,EAKEzN,WALF,EAME;AACA,EAAa;AACX,QAAI/L,cAAc,CAAC3Q,IAAf,KAAwB2Q,cAAc,CAAC0f,WAA3C,EAAwD;AACtD;AACA;AACA,UAAMqY,cAAc,GAAGn6B,SAAS,CAAC4f,SAAjC;;AACA,UAAIua,cAAJ,EAAoB;AAClB15B,QAAAA,cAAc,CACZ05B,cADY,EAEZve,SAFY;AAGZ,cAHY,EAIZlqB,gBAAgB,CAACsO,SAAD,CAJJ,CAAd;AAMD;AACF;AACF;;AAED,MAAInO,OAAJ;;AACA,EAA2B;AACzB,QAAM2Q,eAAe,GAAGL,kBAAkB,CAACC,cAAD,EAAiBpC,SAAjB,EAA4B,IAA5B,CAA1C;AACAnO,IAAAA,OAAO,GAAG+Q,gBAAgB,CAACR,cAAD,EAAiBI,eAAjB,CAA1B;AACD;;AAED,MAAIw3B,YAAJ;AACAngB,EAAAA,oBAAoB,CAACzX,cAAD,EAAiB+L,WAAjB,CAApB;;AACA,EAAa;AACXla,IAAAA,mBAAiB,CAACa,OAAlB,GAA4BsN,cAA5B;AACA2R,IAAAA,cAAc,CAAC,IAAD,CAAd;AACAimB,IAAAA,YAAY,GAAGpL,eAAe,CAC5B95B,OAD4B,EAE5BsN,cAF4B,EAG5BpC,SAH4B,EAI5B4b,SAJ4B,EAK5B/pB,OAL4B,EAM5Bsc,WAN4B,CAA9B;;AAQA,QACE2N,CACA1Z,cAAc,CAACsS,IAAf,GAAsBvC,UAFxB,EAGE;AACAtV,MAAAA,WAAW;;AACX,UAAI;AACFm9B,QAAAA,YAAY,GAAGpL,eAAe,CAC5B95B,OAD4B,EAE5BsN,cAF4B,EAG5BpC,SAH4B,EAI5B4b,SAJ4B,EAK5B/pB,OAL4B,EAM5Bsc,WAN4B,CAA9B;AAQD,OATD,SASU;AACR1Q,QAAAA,YAAY;AACb;AACF;;AACDsW,IAAAA,cAAc,CAAC,KAAD,CAAd;AACD,GA9BD;;AAyCA,MAAIjf,OAAO,KAAK,IAAZ,IAAoB,CAACukC,gBAAzB,EAA2C;AACzC9J,IAAAA,YAAY,CAACz6B,OAAD,EAAUsN,cAAV,EAA0B+L,WAA1B,CAAZ;AACA,WAAOisB,4BAA4B,CAACtlC,OAAD,EAAUsN,cAAV,EAA0B+L,WAA1B,CAAnC;AACD,GArED;;;AAwEA/L,EAAAA,cAAc,CAAC5N,KAAf,IAAwB/B,aAAxB;AACAsnC,EAAAA,iBAAiB,CAACjlC,OAAD,EAAUsN,cAAV,EAA0B43B,YAA1B,EAAwC7rB,WAAxC,CAAjB;AACA,SAAO/L,cAAc,CAACzM,KAAtB;AACD;;AAED,SAASomC,WAAT,CACEjnC,OADF,EAEEsN,cAFF,EAGE45B,KAHF,EAIEpgB,SAJF,EAKEzN,WALF,EAME;AACA;AACA;AACA;AAEA,MAAMnc,MAAM,GAAGgqC,KAAK,CAAC/pC,OAArB;AACA,MAAMgqC,IAAI,GAAGD,KAAK,CAACE,KAAnB,CANA;;AASA,MAAIlC,YAAJ;AACAngB,EAAAA,oBAAoB,CAACzX,cAAD,EAAiB+L,WAAjB,CAApB;;AACA,EAAa;AACXla,IAAAA,mBAAiB,CAACa,OAAlB,GAA4BsN,cAA5B;AACA2R,IAAAA,cAAc,CAAC,IAAD,CAAd;AACAimB,IAAAA,YAAY,GAAGpL,eAAe,CAC5B95B,OAD4B,EAE5BsN,cAF4B,EAG5BpQ,MAH4B,EAI5B4pB,SAJ4B,EAK5BqgB,IAL4B,EAM5B9tB,WAN4B,CAA9B;;AAQA,QACE2N,CACA1Z,cAAc,CAACsS,IAAf,GAAsBvC,UAFxB,EAGE;AACAtV,MAAAA,WAAW;;AACX,UAAI;AACFm9B,QAAAA,YAAY,GAAGpL,eAAe,CAC5B95B,OAD4B,EAE5BsN,cAF4B,EAG5BpQ,MAH4B,EAI5B4pB,SAJ4B,EAK5BqgB,IAL4B,EAM5B9tB,WAN4B,CAA9B;AAQD,OATD,SASU;AACR1Q,QAAAA,YAAY;AACb;AACF;;AACDsW,IAAAA,cAAc,CAAC,KAAD,CAAd;AACD,GA9BD;;AAyCA,MAAIjf,OAAO,KAAK,IAAZ,IAAoB,CAACukC,gBAAzB,EAA2C;AACzC9J,IAAAA,YAAY,CAACz6B,OAAD,EAAUsN,cAAV,EAA0B+L,WAA1B,CAAZ;AACA,WAAOisB,4BAA4B,CAACtlC,OAAD,EAAUsN,cAAV,EAA0B+L,WAA1B,CAAnC;AACD,GAvDD;;;AA0DA/L,EAAAA,cAAc,CAAC5N,KAAf,IAAwB/B,aAAxB;AACAsnC,EAAAA,iBAAiB,CAACjlC,OAAD,EAAUsN,cAAV,EAA0B43B,YAA1B,EAAwC7rB,WAAxC,CAAjB;AACA,SAAO/L,cAAc,CAACzM,KAAtB;AACD;;AAED,SAASwmC,oBAAT,CACErnC,OADF,EAEEsN,cAFF,EAGEpC,SAHF,EAIE4b,SAJF,EAKEzN,WALF,EAME;AACA,EAAa;AACX,QAAI/L,cAAc,CAAC3Q,IAAf,KAAwB2Q,cAAc,CAAC0f,WAA3C,EAAwD;AACtD;AACA;AACA,UAAMqY,cAAc,GAAGn6B,SAAS,CAAC4f,SAAjC;;AACA,UAAIua,cAAJ,EAAoB;AAClB15B,QAAAA,cAAc,CACZ05B,cADY,EAEZve,SAFY;AAGZ,cAHY,EAIZlqB,gBAAgB,CAACsO,SAAD,CAJJ,CAAd;AAMD;AACF;AACF,GAfD;AAkBA;AACA;;;AACA,MAAIo8B,UAAJ;;AACA,MAAIC,iBAAuB,CAACr8B,SAAD,CAA3B,EAAwC;AACtCo8B,IAAAA,UAAU,GAAG,IAAb;AACAE,IAAAA,mBAAyB,CAACl6B,cAAD,CAAzB;AACD,GAHD,MAGO;AACLg6B,IAAAA,UAAU,GAAG,KAAb;AACD;;AACDviB,EAAAA,oBAAoB,CAACzX,cAAD,EAAiB+L,WAAjB,CAApB;AAEA,MAAMnZ,QAAQ,GAAGoN,cAAc,CAACnN,SAAhC;AACA,MAAImqB,YAAJ;;AACA,MAAIpqB,QAAQ,KAAK,IAAjB,EAAuB;AACrB,QAAIF,OAAO,KAAK,IAAhB,EAAsB;AACpB;AACA;AACA;AACA;AACAA,MAAAA,OAAO,CAACR,SAAR,GAAoB,IAApB;AACA8N,MAAAA,cAAc,CAAC9N,SAAf,GAA2B,IAA3B,CANoB;;AAQpB8N,MAAAA,cAAc,CAAC5N,KAAf,IAAwB9B,SAAxB;AACD,KAVoB;;;AAYrBiuB,IAAAA,sBAAsB,CAACve,cAAD,EAAiBpC,SAAjB,EAA4B4b,SAA5B,CAAtB;AACAyF,IAAAA,kBAAkB,CAACjf,cAAD,EAAiBpC,SAAjB,EAA4B4b,SAA5B,EAAuCzN,WAAvC,CAAlB;AACAiR,IAAAA,YAAY,GAAG,IAAf;AACD,GAfD,MAeO,IAAItqB,OAAO,KAAK,IAAhB,EAAsB;AAC3B;AACAsqB,IAAAA,YAAY,GAAGmC,wBAAwB,CACrCnf,cADqC,EAErCpC,SAFqC,EAGrC4b,SAHqC,EAIrCzN,WAJqC,CAAvC;AAMD,GARM,MAQA;AACLiR,IAAAA,YAAY,GAAGwC,mBAAmB,CAChC9sB,OADgC,EAEhCsN,cAFgC,EAGhCpC,SAHgC,EAIhC4b,SAJgC,EAKhCzN,WALgC,CAAlC;AAOD;;AACD,MAAMouB,cAAc,GAAGC,oBAAoB,CACzC1nC,OADyC,EAEzCsN,cAFyC,EAGzCpC,SAHyC,EAIzCof,YAJyC,EAKzCgd,UALyC,EAMzCjuB,WANyC,CAA3C;;AAQA,EAAa;AACX,QAAMqQ,IAAI,GAAGpc,cAAc,CAACnN,SAA5B;;AACA,QAAImqB,YAAY,IAAIZ,IAAI,CAACrhB,KAAL,KAAeye,SAAnC,EAA8C;AAC5C,UAAI,CAAC+d,4BAAL,EAAmC;AACjC,cACE,2EACE,uDAFJ,EAGEjoC,gBAAgB,CAAC0Q,cAAc,CAAC3Q,IAAhB,CAAhB,IAAyC,aAH3C;AAKD;;AACDkoC,MAAAA,4BAA4B,GAAG,IAA/B;AACD;AACF;;AACD,SAAO4C,cAAP;AACD;;AAED,SAASC,oBAAT,CACE1nC,OADF,EAEEsN,cAFF,EAGEpC,SAHF,EAIEof,YAJF,EAKEgd,UALF,EAMEjuB,WANF,EAOE;AACA;AACA2tB,EAAAA,OAAO,CAAChnC,OAAD,EAAUsN,cAAV,CAAP;AAEA,MAAMq6B,eAAe,GAAG,CAACr6B,cAAc,CAAC5N,KAAf,GAAuBxB,UAAxB,MAAwCR,OAAhE;;AAEA,MAAI,CAAC4sB,YAAD,IAAiB,CAACqd,eAAtB,EAAuC;AACrC;AACA,QAAIL,UAAJ,EAAgB;AACdx4B,MAAAA,yBAAyB,CAACxB,cAAD,EAAiBpC,SAAjB,EAA4B,KAA5B,CAAzB;AACD;;AAED,WAAOo6B,4BAA4B,CAACtlC,OAAD,EAAUsN,cAAV,EAA0B+L,WAA1B,CAAnC;AACD;;AAED,MAAMnZ,QAAQ,GAAGoN,cAAc,CAACnN,SAAhC,CAfA;;AAkBAhB,EAAAA,mBAAiB,CAACa,OAAlB,GAA4BsN,cAA5B;AACA,MAAI43B,YAAJ;;AACA,MACEyC,eAAe,IACf,OAAOz8B,SAAS,CAACsgB,wBAAjB,KAA8C,UAFhD,EAGE;AACA;AACA;AACA;AACA;AACA;AACA0Z,IAAAA,YAAY,GAAG,IAAf;;AAEA,IAAyB;AACvBlB,MAAAA,0BAA0B,CAAC12B,AAAD,CAA1B;AACD;AACF,GAdD,MAcO;AACL,IAAa;AACX2R,MAAAA,cAAc,CAAC,IAAD,CAAd;AACAimB,MAAAA,YAAY,GAAGhlC,QAAQ,CAAChD,MAAT,EAAf;;AACA,UACE8pB,CACA1Z,cAAc,CAACsS,IAAf,GAAsBvC,UAFxB,EAGE;AACAtV,QAAAA,WAAW;;AACX,YAAI;AACF7H,UAAAA,QAAQ,CAAChD,MAAT;AACD,SAFD,SAEU;AACRyL,UAAAA,YAAY;AACb;AACF;;AACDsW,MAAAA,cAAc,CAAC,KAAD,CAAd;AACD,KAfD;AAkBD,GArDD;;;AAwDA3R,EAAAA,cAAc,CAAC5N,KAAf,IAAwB/B,aAAxB;;AACA,MAAIqC,OAAO,KAAK,IAAZ,IAAoB2nC,eAAxB,EAAyC;AACvC;AACA;AACA;AACA;AACAxC,IAAAA,+BAA+B,CAC7BnlC,OAD6B,EAE7BsN,cAF6B,EAG7B43B,YAH6B,EAI7B7rB,WAJ6B,CAA/B;AAMD,GAXD,MAWO;AACL4rB,IAAAA,iBAAiB,CAACjlC,OAAD,EAAUsN,cAAV,EAA0B43B,YAA1B,EAAwC7rB,WAAxC,CAAjB;AACD,GAtED;AAyEA;;;AACA/L,EAAAA,cAAc,CAACuY,aAAf,GAA+B3lB,QAAQ,CAAC0qB,KAAxC,CA1EA;;AA6EA,MAAI0c,UAAJ,EAAgB;AACdx4B,IAAAA,yBAAyB,CAACxB,cAAD,EAAiBpC,SAAjB,EAA4B,IAA5B,CAAzB;AACD;;AAED,SAAOoC,cAAc,CAACzM,KAAtB;AACD;;AAED,SAAS+mC,mBAAT,CAA6Bt6B,cAA7B,EAA6C;AAC3C,MAAM0C,IAAI,GAAI1C,cAAc,CAACnN,SAA7B;;AACA,MAAI6P,IAAI,CAAC63B,cAAT,EAAyB;AACvBz5B,IAAAA,yBAAyB,CACvBd,cADuB,EAEvB0C,IAAI,CAAC63B,cAFkB,EAGvB73B,IAAI,CAAC63B,cAAL,KAAwB73B,IAAI,CAACjT,OAHN,CAAzB;AAKD,GAND,MAMO,IAAIiT,IAAI,CAACjT,OAAT,EAAkB;AACvB;AACAqR,IAAAA,yBAAyB,CAACd,cAAD,EAAiB0C,IAAI,CAACjT,OAAtB,EAA+B,KAA/B,CAAzB;AACD;;AACDq2B,EAAAA,iBAAiB,CAAC9lB,cAAD,EAAiB0C,IAAI,CAACugB,aAAtB,CAAjB;AACD;;AAED,SAASuX,cAAT,CAAwB9nC,OAAxB,EAAiCsN,cAAjC,EAAiD+L,WAAjD,EAA8D;AAC5DuuB,EAAAA,mBAAmB,CAACt6B,cAAD,CAAnB;AACA,MAAM6Y,WAAW,GAAG7Y,cAAc,CAAC6Y,WAAnC;;AAF4D,QAI1DnmB,OAAO,KAAK,IAAZ,IAAoBmmB,WAAW,KAAK,IAJsB;AAAA;AAAA;AAAA;AAAA;;AAS5D,MAAMW,SAAS,GAAGxZ,cAAc,CAAC4f,YAAjC;AACA,MAAMrG,SAAS,GAAGvZ,cAAc,CAACuY,aAAjC;AACA,MAAMkiB,YAAY,GAAGlhB,SAAS,KAAK,IAAd,GAAqBA,SAAS,CAACtb,OAA/B,GAAyC,IAA9D;AACA6a,EAAAA,gBAAgB,CAACpmB,OAAD,EAAUsN,cAAV,CAAhB;AACA4Z,EAAAA,kBAAkB,CAAC5Z,cAAD,EAAiBwZ,SAAjB,EAA4B,IAA5B,EAAkCzN,WAAlC,CAAlB;AACA,MAAM0N,SAAS,GAAGzZ,cAAc,CAACuY,aAAjC,CAd4D;AAgB5D;;AACA,MAAMqf,YAAY,GAAGne,SAAS,CAACxb,OAA/B;;AACA,MAAI25B,YAAY,KAAK6C,YAArB,EAAmC;AACjCzQ,IAAAA,mBAAmB;AACnB,WAAOgO,4BAA4B,CAACtlC,OAAD,EAAUsN,cAAV,EAA0B+L,WAA1B,CAAnC;AACD;;AACD,MAAMrJ,IAAe,GAAG1C,cAAc,CAACnN,SAAvC;;AACA,MAAI6P,IAAI,CAACg4B,OAAL,IAAgBvS,mBAAmB,CAACnoB,cAAD,CAAvC,EAAyD;AACvD;AACA;AACA;AACA;AAEA,QAAI1K,iBAAJ,EAAuB;AACrB,UAAMqlC,+BAA+B,GACnCj4B,IAAI,CAACi4B,+BADP;;AAEA,UAAIA,+BAA+B,IAAI,IAAvC,EAA6C;AAC3C,aAAK,IAAI5vB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG4vB,+BAA+B,CAACv9B,MAApD,EAA4D2N,CAAC,IAAI,CAAjE,EAAoE;AAClE,cAAMqf,aAAa,GAAKuQ,+BAA+B,CACrD5vB,CADqD,CAAvD;AAGA,cAAM2f,OAAO,GAAGiQ,+BAA+B,CAAC5vB,CAAC,GAAG,CAAL,CAA/C;AACA0f,UAAAA,wBAAwB,CAACL,aAAD,EAAgBM,OAAhB,CAAxB;AACD;AACF;AACF;;AAED,QAAMn3B,KAAK,GAAG4xB,gBAAgB,CAC5BnlB,cAD4B,EAE5B,IAF4B,EAG5B43B,YAH4B,EAI5B7rB,WAJ4B,CAA9B;AAMA/L,IAAAA,cAAc,CAACzM,KAAf,GAAuBA,KAAvB;AAEA,QAAIvB,IAAI,GAAGuB,KAAX;;AACA,WAAOvB,IAAP,EAAa;AACX;AACA;AACA;AACA;AACA;AACA;AACAA,MAAAA,IAAI,CAACI,KAAL,GAAcJ,IAAI,CAACI,KAAL,GAAa,CAAC9B,SAAf,GAA4BW,SAAzC;AACAe,MAAAA,IAAI,GAAGA,IAAI,CAACwB,OAAZ;AACD;AACF,GAvCD,MAuCO;AACL;AACA;AACAmkC,IAAAA,iBAAiB,CAACjlC,OAAD,EAAUsN,cAAV,EAA0B43B,YAA1B,EAAwC7rB,WAAxC,CAAjB;AACAie,IAAAA,mBAAmB;AACpB;;AACD,SAAOhqB,cAAc,CAACzM,KAAtB;AACD;;AAED,SAASqnC,mBAAT,CACEloC,OADF,EAEEsN,cAFF,EAGE+L,WAHF,EAIE;AACAoa,EAAAA,eAAe,CAACnmB,cAAD,CAAf;;AAEA,MAAItN,OAAO,KAAK,IAAhB,EAAsB;AACpB42B,IAAAA,gCAAgC,CAACtpB,cAAD,CAAhC;AACD;;AAED,MAAM3Q,IAAI,GAAG2Q,cAAc,CAAC3Q,IAA5B;AACA,MAAMmqB,SAAS,GAAGxZ,cAAc,CAAC4f,YAAjC;AACA,MAAM8Y,SAAS,GAAGhmC,OAAO,KAAK,IAAZ,GAAmBA,OAAO,CAAC0sB,aAA3B,GAA2C,IAA7D;AAEA,MAAIwY,YAAY,GAAGpe,SAAS,CAAC7W,QAA7B;AACA,MAAMk4B,iBAAiB,GAAGjmC,oBAAoB,CAACvF,IAAD,EAAOmqB,SAAP,CAA9C;;AAEA,MAAIqhB,iBAAJ,EAAuB;AACrB;AACA;AACA;AACA;AACAjD,IAAAA,YAAY,GAAG,IAAf;AACD,GAND,MAMO,IAAIc,SAAS,KAAK,IAAd,IAAsB9jC,oBAAoB,CAACvF,IAAD,EAAOqpC,SAAP,CAA9C,EAAiE;AACtE;AACA;AACA14B,IAAAA,cAAc,CAAC5N,KAAf,IAAwB1B,YAAxB;AACD;;AAEDgpC,EAAAA,OAAO,CAAChnC,OAAD,EAAUsN,cAAV,CAAP;AACA23B,EAAAA,iBAAiB,CAACjlC,OAAD,EAAUsN,cAAV,EAA0B43B,YAA1B,EAAwC7rB,WAAxC,CAAjB;AACA,SAAO/L,cAAc,CAACzM,KAAtB;AACD;;AAED,SAASunC,cAAT,CAAwBpoC,OAAxB,EAAiCsN,cAAjC,EAAiD;AAC/C,MAAItN,OAAO,KAAK,IAAhB,EAAsB;AACpB42B,IAAAA,gCAAgC,CAACtpB,cAAD,CAAhC;AACD,GAH8C;AAK/C;;;AACA,SAAO,IAAP;AACD;;AAED,SAAS+6B,kBAAT,CACEC,QADF,EAEEh7B,cAFF,EAGE0f,WAHF,EAIEwY,WAJF,EAKEnsB,WALF,EAME;AACA,MAAIivB,QAAQ,KAAK,IAAjB,EAAuB;AACrB;AACA;AACA;AACA;AACAA,IAAAA,QAAQ,CAAC9oC,SAAT,GAAqB,IAArB;AACA8N,IAAAA,cAAc,CAAC9N,SAAf,GAA2B,IAA3B,CANqB;;AAQrB8N,IAAAA,cAAc,CAAC5N,KAAf,IAAwB9B,SAAxB;AACD;;AAED,MAAMyK,KAAK,GAAGiF,cAAc,CAAC4f,YAA7B;AACA,MAAM9vB,aAA0C,GAAG4vB,WAAnD;AACA,MAAM3vB,OAAO,GAAGD,aAAa,CAACE,QAA9B;AACA,MAAMC,IAAI,GAAGH,aAAa,CAACI,KAA3B;AACA,MAAI0N,SAAS,GAAG3N,IAAI,CAACF,OAAD,CAApB,CAhBA;;AAkBAiQ,EAAAA,cAAc,CAAC3Q,IAAf,GAAsBuO,SAAtB;AACA,MAAMq9B,WAAW,GAAIj7B,cAAc,CAACzQ,GAAf,GAAqB2rC,uBAAuB,CAACt9B,SAAD,CAAjE;AACA,MAAMu9B,aAAa,GAAGtmB,mBAAmB,CAACjX,SAAD,EAAY7C,KAAZ,CAAzC;AACA,MAAIxH,KAAJ;;AACA,UAAQ0nC,WAAR;AACE,SAAK/vC,iBAAL;AAAwB;AACtB,QAAa;AACXqtC,UAAAA,8BAA8B,CAACv4B,cAAD,EAAiBpC,SAAjB,CAA9B;AACAoC,UAAAA,cAAc,CAAC3Q,IAAf,GAAsBuO,SAAS,GAAG06B,8BAA8B,CAC9D16B,SAD8D,CAAhE;AAGD;;AACDrK,QAAAA,KAAK,GAAGslC,uBAAuB,CAC7B,IAD6B,EAE7B74B,cAF6B,EAG7BpC,SAH6B,EAI7Bu9B,aAJ6B,EAK7BpvB,WAL6B,CAA/B;AAOA,eAAOxY,KAAP;AACD;;AACD,SAAKpI,cAAL;AAAqB;AACnB,QAAa;AACX6U,UAAAA,cAAc,CAAC3Q,IAAf,GAAsBuO,SAAS,GAAGw9B,2BAA2B,CAC3Dx9B,SAD2D,CAA7D;AAGD;;AACDrK,QAAAA,KAAK,GAAGwmC,oBAAoB,CAC1B,IAD0B,EAE1B/5B,cAF0B,EAG1BpC,SAH0B,EAI1Bu9B,aAJ0B,EAK1BpvB,WAL0B,CAA5B;AAOA,eAAOxY,KAAP;AACD;;AACD,SAAK1H,UAAL;AAAiB;AACf,QAAa;AACXmU,UAAAA,cAAc,CAAC3Q,IAAf,GAAsBuO,SAAS,GAAGy9B,gCAAgC,CAChEz9B,SADgE,CAAlE;AAGD;;AACDrK,QAAAA,KAAK,GAAGukC,gBAAgB,CACtB,IADsB,EAEtB93B,cAFsB,EAGtBpC,SAHsB,EAItBu9B,aAJsB,EAKtBpvB,WALsB,CAAxB;AAOA,eAAOxY,KAAP;AACD;;AACD,SAAKvH,aAAL;AAAoB;AAClB,QAAa;AACX,cAAIgU,cAAc,CAAC3Q,IAAf,KAAwB2Q,cAAc,CAAC0f,WAA3C,EAAwD;AACtD,gBAAMkZ,cAAc,GAAGh7B,SAAS,CAAC4f,SAAjC;;AACA,gBAAIob,cAAJ,EAAoB;AAClBv6B,cAAAA,cAAc,CACZu6B,cADY,EAEZuC,aAFY;AAGZ,oBAHY,EAIZ7rC,gBAAgB,CAACsO,SAAD,CAJJ,CAAd;AAMD;AACF;AACF;;AACDrK,QAAAA,KAAK,GAAG0kC,mBAAmB,CACzB,IADyB,EAEzBj4B,cAFyB,EAGzBpC,SAHyB,EAIzBiX,mBAAmB,CAACjX,SAAS,CAACvO,IAAX,EAAiB8rC,aAAjB,CAJM;AAKzBjD,QAAAA,WALyB,EAMzBnsB,WANyB,CAA3B;AAQA,eAAOxY,KAAP;AACD;;AACD,SAAK/G,KAAL;AAAY;AACV,QAAqB;AACnB;AACA+G,UAAAA,KAAK,GAAGomC,WAAW,CACjB,IADiB,EAEjB35B,cAFiB,EAGjBpC,SAHiB,EAIjB7C,KAJiB,EAKjBgR,WALiB,CAAnB;AAOA,iBAAOxY,KAAP;AACD;AAEF;AApFH;;AAsFA,MAAI+nC,IAAI,GAAG,EAAX;;AACA,EAAa;AACX,QACE19B,SAAS,KAAK,IAAd,IACA,OAAOA,SAAP,KAAqB,QADrB,IAEAA,SAAS,CAACpO,QAAV,KAAuB7B,eAHzB,EAIE;AACA2tC,MAAAA,IAAI,GAAG,2DAAP;AACD;AACF,GArHD;AAuHA;AACA;;;AAxHA;AAAA;AAAA,sFA6HE19B,SA7HF,gEA8HE09B,IA9HF;AAAA;AAAA;AAgID;;AAED,SAASC,6BAAT,CACEP,QADF,EAEEh7B,cAFF,EAGEpC,SAHF,EAIE4b,SAJF,EAKEzN,WALF,EAME;AACA,MAAIivB,QAAQ,KAAK,IAAjB,EAAuB;AACrB;AACA;AACA;AACA;AACAA,IAAAA,QAAQ,CAAC9oC,SAAT,GAAqB,IAArB;AACA8N,IAAAA,cAAc,CAAC9N,SAAf,GAA2B,IAA3B,CANqB;;AAQrB8N,IAAAA,cAAc,CAAC5N,KAAf,IAAwB9B,SAAxB;AACD,GAVD;;;AAaA0P,EAAAA,cAAc,CAACzQ,GAAf,GAAqBpE,cAArB,CAbA;AAiBA;AACA;AACA;;AACA,MAAI6uC,UAAJ;;AACA,MAAIC,iBAAuB,CAACr8B,SAAD,CAA3B,EAAwC;AACtCo8B,IAAAA,UAAU,GAAG,IAAb;AACAE,IAAAA,mBAAyB,CAACl6B,cAAD,CAAzB;AACD,GAHD,MAGO;AACLg6B,IAAAA,UAAU,GAAG,KAAb;AACD;;AACDviB,EAAAA,oBAAoB,CAACzX,cAAD,EAAiB+L,WAAjB,CAApB;AAEAwS,EAAAA,sBAAsB,CAACve,cAAD,EAAiBpC,SAAjB,EAA4B4b,SAA5B,CAAtB;AACAyF,EAAAA,kBAAkB,CAACjf,cAAD,EAAiBpC,SAAjB,EAA4B4b,SAA5B,EAAuCzN,WAAvC,CAAlB;AAEA,SAAOquB,oBAAoB,CACzB,IADyB,EAEzBp6B,cAFyB,EAGzBpC,SAHyB,EAIzB,IAJyB,EAKzBo8B,UALyB,EAMzBjuB,WANyB,CAA3B;AAQD;;AAED,SAASyvB,2BAAT,CACER,QADF,EAEEh7B,cAFF,EAGEpC,SAHF,EAIEmO,WAJF,EAKE;AACA,MAAIivB,QAAQ,KAAK,IAAjB,EAAuB;AACrB;AACA;AACA;AACA;AACAA,IAAAA,QAAQ,CAAC9oC,SAAT,GAAqB,IAArB;AACA8N,IAAAA,cAAc,CAAC9N,SAAf,GAA2B,IAA3B,CANqB;;AAQrB8N,IAAAA,cAAc,CAAC5N,KAAf,IAAwB9B,SAAxB;AACD;;AAED,MAAMyK,KAAK,GAAGiF,cAAc,CAAC4f,YAA7B;AACA,MAAInwB,OAAJ;;AACA,EAA2B;AACzB,QAAM2Q,eAAe,GAAGL,kBAAkB,CACxCC,cADwC,EAExCpC,SAFwC,EAGxC,KAHwC,CAA1C;AAKAnO,IAAAA,OAAO,GAAG+Q,gBAAgB,CAACR,cAAD,EAAiBI,eAAjB,CAA1B;AACD;;AAEDqX,EAAAA,oBAAoB,CAACzX,cAAD,EAAiB+L,WAAjB,CAApB;AACA,MAAIhf,KAAJ;;AAEA,EAAa;AACX,QACE6Q,SAAS,CAAC9S,SAAV,IACA,OAAO8S,SAAS,CAAC9S,SAAV,CAAoB8E,MAA3B,KAAsC,UAFxC,EAGE;AACA,UAAM6O,aAAa,GAAGnP,gBAAgB,CAACsO,SAAD,CAAhB,IAA+B,SAArD;;AAEA,UAAI,CAACs5B,oBAAoB,CAACz4B,aAAD,CAAzB,EAA0C;AACxC,cACE,+FACE,8EAFJ,EAGEA,aAHF,EAIEA,aAJF;;AAMAy4B,QAAAA,oBAAoB,CAACz4B,aAAD,CAApB,GAAsC,IAAtC;AACD;AACF;;AAED,QAAIuB,cAAc,CAACsS,IAAf,GAAsBvC,UAA1B,EAAsC;AACpC+B,MAAAA,uBAAuB,CAACG,0BAAxB,CAAmDjS,cAAnD,EAAmE,IAAnE;AACD;;AAED2R,IAAAA,cAAc,CAAC,IAAD,CAAd;AACA9f,IAAAA,mBAAiB,CAACa,OAAlB,GAA4BsN,cAA5B;AACAjT,IAAAA,KAAK,GAAGy/B,eAAe,CACrB,IADqB,EAErBxsB,cAFqB,EAGrBpC,SAHqB,EAIrB7C,KAJqB,EAKrBtL,OALqB,EAMrBsc,WANqB,CAAvB;AAQA4F,IAAAA,cAAc,CAAC,KAAD,CAAd;AACD,GAjCD,AA1BA;;;AAsEA3R,EAAAA,cAAc,CAAC5N,KAAf,IAAwB/B,aAAxB;;AAEA,EAAa;AACX;AACA;AACA,QACE,OAAOtD,KAAP,KAAiB,QAAjB,IACAA,KAAK,KAAK,IADV,IAEA,OAAOA,KAAK,CAAC6C,MAAb,KAAwB,UAFxB,IAGA7C,KAAK,CAACyC,QAAN,KAAmBmM,SAJrB,EAKE;AACA,UAAM8C,cAAa,GAAGnP,gBAAgB,CAACsO,SAAD,CAAhB,IAA+B,SAArD;;AACA,UAAI,CAACu5B,kCAAkC,CAAC14B,cAAD,CAAvC,EAAwD;AACtD,cACE,4FACE,6DADF,GAEE,wFAFF,GAGE,mFAHF,GAIE,uCALJ,EAMEA,cANF,EAOEA,cAPF,EAQEA,cARF;;AAUA04B,QAAAA,kCAAkC,CAAC14B,cAAD,CAAlC,GAAoD,IAApD;AACD;AACF;AACF;;AAED;AAEE;AACA,GACA,OAAO1R,KAAP,KAAiB,QADjB,IAEAA,KAAK,KAAK,IAFV,IAGA,OAAOA,KAAK,CAAC6C,MAAb,KAAwB,UAHxB,IAIA7C,KAAK,CAACyC,QAAN,KAAmBmM,SAPrB,EAQE;AACA,IAAa;AACX,UAAM8C,eAAa,GAAGnP,gBAAgB,CAACsO,SAAD,CAAhB,IAA+B,SAArD;;AACA,UAAI,CAACu5B,kCAAkC,CAAC14B,eAAD,CAAvC,EAAwD;AACtD,cACE,4FACE,6DADF,GAEE,wFAFF,GAGE,mFAHF,GAIE,uCALJ,EAMEA,eANF,EAOEA,eAPF,EAQEA,eARF;;AAUA04B,QAAAA,kCAAkC,CAAC14B,eAAD,CAAlC,GAAoD,IAApD;AACD;AACF,KAhBD;;;AAmBAuB,IAAAA,cAAc,CAACzQ,GAAf,GAAqBpE,cAArB,CAnBA;;AAsBA6U,IAAAA,cAAc,CAACuY,aAAf,GAA+B,IAA/B;AACAvY,IAAAA,cAAc,CAAC6Y,WAAf,GAA6B,IAA7B,CAvBA;AA0BA;AACA;;AACA,QAAImhB,UAAU,GAAG,KAAjB;;AACA,QAAIC,iBAAuB,CAACr8B,SAAD,CAA3B,EAAwC;AACtCo8B,MAAAA,UAAU,GAAG,IAAb;AACAE,MAAAA,mBAAyB,CAACl6B,cAAD,CAAzB;AACD,KAHD,MAGO;AACLg6B,MAAAA,UAAU,GAAG,KAAb;AACD;;AAEDh6B,IAAAA,cAAc,CAACuY,aAAf,GACExrB,KAAK,CAACuwB,KAAN,KAAgB,IAAhB,IAAwBvwB,KAAK,CAACuwB,KAAN,KAAgB3hB,SAAxC,GAAoD5O,KAAK,CAACuwB,KAA1D,GAAkE,IADpE;AAGAjF,IAAAA,qBAAqB,CAACrY,cAAD,CAArB;AAEA,QAAMic,wBAAwB,GAAGre,SAAS,CAACqe,wBAA3C;;AACA,QAAI,OAAOA,wBAAP,KAAoC,UAAxC,EAAoD;AAClDD,MAAAA,0BAA0B,CACxBhc,cADwB,EAExBpC,SAFwB,EAGxBqe,wBAHwB,EAIxBlhB,KAJwB,CAA1B;AAMD;;AAEDojB,IAAAA,kBAAkB,CAACne,cAAD,EAAiBjT,KAAjB,CAAlB;AACAkyB,IAAAA,kBAAkB,CAACjf,cAAD,EAAiBpC,SAAjB,EAA4B7C,KAA5B,EAAmCgR,WAAnC,CAAlB;AACA,WAAOquB,oBAAoB,CACzB,IADyB,EAEzBp6B,cAFyB,EAGzBpC,SAHyB,EAIzB,IAJyB,EAKzBo8B,UALyB,EAMzBjuB,WANyB,CAA3B;AAQD,GArED,MAqEO;AACL;AACA/L,IAAAA,cAAc,CAACzQ,GAAf,GAAqBrE,iBAArB;;AACA,IAAa;AACX;AAQA,UACEwuB,CACA1Z,cAAc,CAACsS,IAAf,GAAsBvC,UAFxB,EAGE;AACAtV,QAAAA,WAAW;;AACX,YAAI;AACF1N,UAAAA,KAAK,GAAGy/B,eAAe,CACrB,IADqB,EAErBxsB,cAFqB,EAGrBpC,SAHqB,EAIrB7C,KAJqB,EAKrBtL,OALqB,EAMrBsc,WANqB,CAAvB;AAQD,SATD,SASU;AACR1Q,UAAAA,YAAY;AACb;AACF;AACF;;AACDs8B,IAAAA,iBAAiB,CAAC,IAAD,EAAO33B,cAAP,EAAuBjT,KAAvB,EAA8Bgf,WAA9B,CAAjB;;AACA,IAAa;AACXwsB,MAAAA,8BAA8B,CAACv4B,cAAD,EAAiBpC,SAAjB,CAA9B;AACD;;AACD,WAAOoC,cAAc,CAACzM,KAAtB;AACD;AACF;;AAED,SAASglC,8BAAT,CAAwCv4B,cAAxC,EAA+DpC,SAA/D,EAA+E;AAC7E,EAAa;AACX,QAAIA,SAAJ,EAAe;AACb,UAAIA,SAAS,CAAC+C,iBAAd,EAAiC;AAC/B,cACE,uEADF,EAEE/C,SAAS,CAAC1O,WAAV,IAAyB0O,SAAS,CAACzO,IAAnC,IAA2C,WAF7C;AAID;AACF;;AACD,QAAI6Q,cAAc,CAACygB,GAAf,KAAuB,IAA3B,EAAiC;AAC/B,UAAI9lB,IAAI,GAAG,EAAX;AACA,UAAM8gC,SAAS,GAAGnqB,mCAAmC,EAArD;;AACA,UAAImqB,SAAJ,EAAe;AACb9gC,QAAAA,IAAI,IAAI,qCAAqC8gC,SAArC,GAAiD,IAAzD;AACD;;AAED,UAAIC,UAAU,GAAGD,SAAS,IAAIz7B,cAAc,CAAC27B,QAA5B,IAAwC,EAAzD;AACA,UAAMC,WAAW,GAAG57B,cAAc,CAACmR,YAAnC;;AACA,UAAIyqB,WAAJ,EAAiB;AACfF,QAAAA,UAAU,GAAGE,WAAW,CAACC,QAAZ,GAAuB,GAAvB,GAA6BD,WAAW,CAACE,UAAtD;AACD;;AACD,UAAI,CAACxE,wBAAwB,CAACoE,UAAD,CAA7B,EAA2C;AACzCpE,QAAAA,wBAAwB,CAACoE,UAAD,CAAxB,GAAuC,IAAvC;;AACA,cACE,+CACE,yCADF,GAEE,2CAHJ,EAIE/gC,IAJF;AAMD;AACF;;AAkBD,QAAI,OAAOiD,SAAS,CAACqe,wBAAjB,KAA8C,UAAlD,EAA8D;AAC5D,UAAMxd,eAAa,GAAGnP,gBAAgB,CAACsO,SAAD,CAAhB,IAA+B,SAArD;;AAEA,UAAI,CAACy5B,8CAA8C,CAAC54B,eAAD,CAAnD,EAAoE;AAClE,cACE,kEADF,EAEEA,eAFF;;AAIA44B,QAAAA,8CAA8C,CAAC54B,eAAD,CAA9C,GAAgE,IAAhE;AACD;AACF;;AAED,QACE,OAAOb,SAAS,CAAC6f,WAAjB,KAAiC,QAAjC,IACA7f,SAAS,CAAC6f,WAAV,KAA0B,IAF5B,EAGE;AACA,UAAMhf,eAAa,GAAGnP,gBAAgB,CAACsO,SAAD,CAAhB,IAA+B,SAArD;;AAEA,UAAI,CAACw5B,0CAA0C,CAAC34B,eAAD,CAA/C,EAAgE;AAC9D,cACE,qDADF,EAEEA,eAFF;;AAIA24B,QAAAA,0CAA0C,CAAC34B,eAAD,CAA1C,GAA4D,IAA5D;AACD;AACF;AACF;AACF;;AAED,IAAMs9B,gBAA+B,GAAG;AACtCzU,EAAAA,UAAU,EAAE,IAD0B;AAEtC6B,EAAAA,SAAS,EAAEnkB;AAF2B,CAAxC;;AAKA,SAASg3B,2BAAT,CAAqCjwB,WAArC,EAAyE;AACvE,SAAO;AACLgtB,IAAAA,SAAS,EAAEhtB;AADN,GAAP;AAGD;;AAED,SAASkwB,4BAAT,CACEC,kBADF,EAEEnwB,WAFF,EAGkB;AAChB,SAAO;AACLgtB,IAAAA,SAAS,EAAEvuB,UAAU,CAAC0xB,kBAAkB,CAACnD,SAApB,EAA+BhtB,WAA/B;AADhB,GAAP;AAGD;;;AAGD,SAASowB,sBAAT,CACEC,eADF,EAEE1pC,OAFF,EAGEsN,cAHF,EAIE+L,WAJF,EAKE;AACA;AACA;AACA;AACA,MAAIrZ,OAAO,KAAK,IAAhB,EAAsB;AACpB,QAAMw2B,aAA4B,GAAGx2B,OAAO,CAAC6lB,aAA7C;;AACA,QAAI2Q,aAAa,KAAK,IAAtB,EAA4B;AAC1B;AACA;AACA;AACA;AACA,aAAO,KAAP;AACD;AACF,GAbD;;;AAgBA,SAAOxC,kBAAkB,CACvB0V,eADuB,EAEtB5V,qBAFsB,CAAzB;AAID;;AAED,SAAS6V,6BAAT,CAAuC3pC,OAAvC,EAAuDqZ,WAAvD,EAAoE;AAClE;AACA,SAAOtB,WAAW,CAAC/X,OAAO,CAACgkB,UAAT,EAAqB3K,WAArB,CAAlB;AACD;;AAED,SAASuwB,uBAAT,CAAiC5pC,OAAjC,EAA0CsN,cAA1C,EAA0D+L,WAA1D,EAAuE;AACrE,MAAMyN,SAAS,GAAGxZ,cAAc,CAAC4f,YAAjC,CADqE;;AAIrE,EAAa;AACX,QAAI2c,aAAa,CAACv8B,cAAD,CAAjB,EAAmC;AACjCA,MAAAA,cAAc,CAAC5N,KAAf,IAAwBxB,UAAxB;AACD;AACF;;AAED,MAAIwrC,eAAgC,GAAG3V,mBAAmB,CAAC/zB,OAA3D;AAEA,MAAI8pC,YAAY,GAAG,KAAnB;AACA,MAAM5U,UAAU,GAAG,CAAC5nB,cAAc,CAAC5N,KAAf,GAAuBxB,UAAxB,MAAwCR,OAA3D;;AAEA,MACEw3B,UAAU,IACVuU,sBAAsB,CACpBC,eADoB,EAEpB1pC,OAFoB,AAAA,CAFxB,EAQE;AACA;AACA;AACA8pC,IAAAA,YAAY,GAAG,IAAf;AACAx8B,IAAAA,cAAc,CAAC5N,KAAf,IAAwB,CAACxB,UAAzB;AACD,GAbD,MAaO;AACL;AACA,QACE8B,OAAO,KAAK,IAAZ,IACCA,OAAO,CAAC6lB,aAAT,KAAkD,IAFpD,EAGE;AACA;AACA;AACA;AACA;AACA;AACA,UACEiB,SAAS,CAAC+N,QAAV,KAAuB5rB,SAAvB,IACA6d,SAAS,CAACgO,0BAAV,KAAyC,IAF3C,EAGE;AACA4U,QAAAA,eAAe,GAAGrV,yBAAyB,CACzCqV,eADyC,EAEzC7V,8BAFyC,CAA3C;AAID;AACF;AACF;;AAED6V,EAAAA,eAAe,GAAGxV,gCAAgC,CAACwV,eAAD,CAAlD;AAEAnV,EAAAA,mBAAmB,CAACjnB,cAAD,EAAiBo8B,eAAjB,CAAnB,CArDqE;AAwDrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAI1pC,OAAO,KAAK,IAAhB,EAAsB;AACpB;AACA;AACA;AACA,QAAI8mB,SAAS,CAAC+N,QAAV,KAAuB5rB,SAA3B,EAAsC;AACpC2tB,MAAAA,gCAAgC,CAACtpB,cAAD,CAAhC,CADoC;;AAGpC,MAAkC;AAChC,YAAMkpB,aAAmC,GACvClpB,cAAc,CAACuY,aADjB;;AAEA,YAAI2Q,aAAa,KAAK,IAAtB,EAA4B;AAC1B,cAAM5B,UAAU,GAAG4B,aAAa,CAAC5B,UAAjC;;AACA,cAAIA,UAAU,KAAK,IAAnB,EAAyB;AACvB,mBAAOmV,gCAAgC,CACrCz8B,cADqC,EAErCsnB,UAFqC,AAAA,CAAvC;AAKD;AACF;AACF;AACF;;AAED,QAAMoV,mBAAmB,GAAGljB,SAAS,CAAC7W,QAAtC;AACA,QAAMg6B,oBAAoB,GAAGnjB,SAAS,CAAC+N,QAAvC;;AACA,QAAIiV,YAAJ,EAAkB;AAChB,UAAMI,gBAAgB,GAAGC,6BAA6B,CACpD78B,cADoD,EAEpD08B,mBAFoD,EAGpDC,oBAHoD,EAIpD5wB,WAJoD,CAAtD;AAMA,UAAM+wB,oBAA2B,GAAI98B,cAAc,CAACzM,KAApD;AACAupC,MAAAA,oBAAoB,CAACvkB,aAArB,GAAqCyjB,2BAA2B,CAC9DjwB,WAD8D,CAAhE;AAGA/L,MAAAA,cAAc,CAACuY,aAAf,GAA+BwjB,gBAA/B;AACA,aAAOa,gBAAP;AACD,KAbD,MAaO,IAAI,OAAOpjB,SAAS,CAACujB,yBAAjB,KAA+C,QAAnD,EAA6D;AAClE;AACA;AACA;AACA,UAAMH,iBAAgB,GAAGC,6BAA6B,CACpD78B,cADoD,EAEpD08B,mBAFoD,EAGpDC,oBAHoD,EAIpD5wB,WAJoD,CAAtD;;AAMA,UAAM+wB,qBAA2B,GAAI98B,cAAc,CAACzM,KAApD;AACAupC,MAAAA,qBAAoB,CAACvkB,aAArB,GAAqCyjB,2BAA2B,CAC9DjwB,WAD8D,CAAhE;AAGA/L,MAAAA,cAAc,CAACuY,aAAf,GAA+BwjB,gBAA/B,CAdkE;AAiBlE;AACA;AACA;AACA;AACA;AACA;AACA;;AACA/7B,MAAAA,cAAc,CAACyG,KAAf,GAAuBb,aAAvB;;AACA,MAA4B;AAC1BuzB,QAAAA,eAAe,CAACvzB,aAAD,CAAf;AACD;;AACD,aAAOg3B,iBAAP;AACD,KA7BM,MA6BA;AACL,aAAOI,4BAA4B,CACjCh9B,cADiC,EAEjC08B,mBAFiC,EAGjC3wB,WAHiC,CAAnC;AAKD;AACF,GA1ED,MA0EO;AACL;AAEA;AACA;AACA,QAAMwN,SAA+B,GAAG7mB,OAAO,CAAC6lB,aAAhD;;AACA,QAAIgB,SAAS,KAAK,IAAlB,EAAwB;AACtB;AAEA;AACA,MAAkC;AAChC,YAAM+N,WAAU,GAAG/N,SAAS,CAAC+N,UAA7B;;AACA,YAAIA,WAAU,KAAK,IAAnB,EAAyB;AACvB,cAAI,CAACM,UAAL,EAAiB;AACf,mBAAOqV,iCAAiC,CACtCvqC,OADsC,EAEtCsN,cAFsC,EAGtCsnB,WAHsC,EAItC/N,SAJsC,EAKtCxN,WALsC,CAAxC;AAOD,WARD,MAQO,IACJ/L,cAAc,CAACuY,aAAhB,KAAyD,IADpD,EAEL;AACA;AACA;AACAvY,YAAAA,cAAc,CAACzM,KAAf,GAAuBb,OAAO,CAACa,KAA/B,CAHA;AAKA;;AACAyM,YAAAA,cAAc,CAAC5N,KAAf,IAAwBxB,UAAxB;AACA,mBAAO,IAAP;AACD,WAVM,MAUA;AACL;AACA;AACA,gBAAM8rC,oBAAmB,GAAGljB,SAAS,CAAC7W,QAAtC;AACA,gBAAMg6B,qBAAoB,GAAGnjB,SAAS,CAAC+N,QAAvC;AACA,gBAAM2V,qBAAqB,GAAGC,+CAA+C,CAC3EzqC,OAD2E,EAE3EsN,cAF2E,EAG3E08B,oBAH2E,EAI3EC,qBAJ2E,EAK3E5wB,WAL2E,CAA7E;AAOA,gBAAM+wB,sBAA2B,GAAI98B,cAAc,CAACzM,KAApD;AACAupC,YAAAA,sBAAoB,CAACvkB,aAArB,GAAqCyjB,2BAA2B,CAC9DjwB,WAD8D,CAAhE;AAGA/L,YAAAA,cAAc,CAACuY,aAAf,GAA+BwjB,gBAA/B;AACA,mBAAOmB,qBAAP;AACD;AACF;AACF;;AAED,UAAIV,YAAJ,EAAkB;AAChB,YAAMG,sBAAoB,GAAGnjB,SAAS,CAAC+N,QAAvC;AACA,YAAMmV,qBAAmB,GAAGljB,SAAS,CAAC7W,QAAtC;;AACA,YAAMu6B,sBAAqB,GAAGE,8BAA8B,CAC1D1qC,OAD0D,EAE1DsN,cAF0D,EAG1D08B,qBAH0D,EAI1DC,sBAJ0D,EAK1D5wB,WAL0D,CAA5D;;AAOA,YAAM+wB,sBAA2B,GAAI98B,cAAc,CAACzM,KAApD;AACA,YAAM2oC,kBAAyC,GAAIxpC,OAAO,CAACa,KAAT,CAC/CglB,aADH;AAEAukB,QAAAA,sBAAoB,CAACvkB,aAArB,GACE2jB,kBAAkB,KAAK,IAAvB,GACIF,2BAA2B,CAACjwB,WAAD,CAD/B,GAEIkwB,4BAA4B,CAACC,kBAAD,EAAqBnwB,WAArB,CAHlC;AAIA+wB,QAAAA,sBAAoB,CAACpmB,UAArB,GAAkC2lB,6BAA6B,CAC7D3pC,OAD6D,EAE7DqZ,WAF6D,CAA/D;AAIA/L,QAAAA,cAAc,CAACuY,aAAf,GAA+BwjB,gBAA/B;AACA,eAAOmB,sBAAP;AACD,OAvBD,MAuBO;AACL,YAAMR,qBAAmB,GAAGljB,SAAS,CAAC7W,QAAtC;;AACA,YAAMm6B,sBAAoB,GAAGO,6BAA6B,CACxD3qC,OADwD,EAExDsN,cAFwD,EAGxD08B,qBAHwD,EAIxD3wB,WAJwD,CAA1D;;AAMA/L,QAAAA,cAAc,CAACuY,aAAf,GAA+B,IAA/B;AACA,eAAOukB,sBAAP;AACD;AACF,KAjFD,MAiFO;AACL;AACA,UAAIN,YAAJ,EAAkB;AAChB;AACA,YAAMG,sBAAoB,GAAGnjB,SAAS,CAAC+N,QAAvC;AACA,YAAMmV,qBAAmB,GAAGljB,SAAS,CAAC7W,QAAtC;;AACA,YAAMu6B,uBAAqB,GAAGE,8BAA8B,CAC1D1qC,OAD0D,EAE1DsN,cAF0D,EAG1D08B,qBAH0D,EAI1DC,sBAJ0D,EAK1D5wB,WAL0D,CAA5D;;AAOA,YAAM+wB,sBAA2B,GAAI98B,cAAc,CAACzM,KAApD;AACA,YAAM2oC,mBAAyC,GAAIxpC,OAAO,CAACa,KAAT,CAC/CglB,aADH;AAEAukB,QAAAA,sBAAoB,CAACvkB,aAArB,GACE2jB,mBAAkB,KAAK,IAAvB,GACIF,2BAA2B,CAACjwB,WAAD,CAD/B,GAEIkwB,4BAA4B,CAACC,mBAAD,EAAqBnwB,WAArB,CAHlC;AAIA+wB,QAAAA,sBAAoB,CAACpmB,UAArB,GAAkC2lB,6BAA6B,CAC7D3pC,OAD6D,EAE7DqZ,WAF6D,CAA/D,CAlBgB;AAuBhB;;AACA/L,QAAAA,cAAc,CAACuY,aAAf,GAA+BwjB,gBAA/B;AACA,eAAOmB,uBAAP;AACD,OA1BD,MA0BO;AACL;AACA;AACA,YAAMR,qBAAmB,GAAGljB,SAAS,CAAC7W,QAAtC;;AACA,YAAMm6B,sBAAoB,GAAGO,6BAA6B,CACxD3qC,OADwD,EAExDsN,cAFwD,EAGxD08B,qBAHwD,EAIxD3wB,WAJwD,CAA1D;;AAMA/L,QAAAA,cAAc,CAACuY,aAAf,GAA+B,IAA/B;AACA,eAAOukB,sBAAP;AACD;AACF;AACF;AACF;;AAED,SAASE,4BAAT,CACEh9B,cADF,EAEEs9B,eAFF,EAGEvxB,WAHF,EAIE;AACA,MAAMuG,IAAI,GAAGtS,cAAc,CAACsS,IAA5B;AACA,MAAMirB,iBAAiC,GAAG;AACxCjrB,IAAAA,IAAI,EAAE,SADkC;AAExC3P,IAAAA,QAAQ,EAAE26B;AAF8B,GAA1C;AAIA,MAAMR,oBAAoB,GAAGU,wBAAwB,CACnDD,iBADmD,EAEnDjrB,IAFmD,EAGnDvG,WAHmD,EAInD,IAJmD,CAArD;AAMA+wB,EAAAA,oBAAoB,CAACzqC,MAArB,GAA8B2N,cAA9B;AACAA,EAAAA,cAAc,CAACzM,KAAf,GAAuBupC,oBAAvB;AACA,SAAOA,oBAAP;AACD;;AAED,SAASD,6BAAT,CACE78B,cADF,EAEEs9B,eAFF,EAGEG,gBAHF,EAIE1xB,WAJF,EAKE;AACA,MAAMuG,IAAI,GAAGtS,cAAc,CAACsS,IAA5B;AACA,MAAMorB,yBAAuC,GAAG19B,cAAc,CAACzM,KAA/D;AAEA,MAAMgqC,iBAAiC,GAAG;AACxCjrB,IAAAA,IAAI,EAAE,QADkC;AAExC3P,IAAAA,QAAQ,EAAE26B;AAF8B,GAA1C;AAKA,MAAIR,oBAAJ;AACA,MAAII,qBAAJ;;AACA,MAAI,CAAC5qB,IAAI,GAAGtC,YAAR,MAA0BF,MAA1B,IAAoC4tB,yBAAyB,KAAK,IAAtE,EAA4E;AAC1E;AACA;AACAZ,IAAAA,oBAAoB,GAAGY,yBAAvB;AACAZ,IAAAA,oBAAoB,CAACpmB,UAArB,GAAkC3R,OAAlC;AACA+3B,IAAAA,oBAAoB,CAACld,YAArB,GAAoC2d,iBAApC;;AAEA,QAAI/rC,CAAuBwO,cAAc,CAACsS,IAAf,GAAsBpC,WAAjD,EAA8D;AAC5D;AACA;AACA;AACA;AACA4sB,MAAAA,oBAAoB,CAAChG,cAArB,GAAsC,CAAtC;AACAgG,MAAAA,oBAAoB,CAACrG,eAArB,GAAuC,CAAC,CAAxC;AACAqG,MAAAA,oBAAoB,CAAC/F,gBAArB,GAAwC,CAAxC;AACA+F,MAAAA,oBAAoB,CAACa,gBAArB,GAAwC,CAAxC;AACD;;AAEDT,IAAAA,qBAAqB,GAAG5Z,uBAAuB,CAC7Cma,gBAD6C,EAE7CnrB,IAF6C,EAG7CvG,WAH6C,EAI7C,IAJ6C,CAA/C;AAMD,GAxBD,MAwBO;AACL+wB,IAAAA,oBAAoB,GAAGU,wBAAwB,CAC7CD,iBAD6C,EAE7CjrB,IAF6C,EAG7CvN,OAH6C,EAI7C,IAJ6C,CAA/C;AAMAm4B,IAAAA,qBAAqB,GAAG5Z,uBAAuB,CAC7Cma,gBAD6C,EAE7CnrB,IAF6C,EAG7CvG,WAH6C,EAI7C,IAJ6C,CAA/C;AAMD;;AAED+wB,EAAAA,oBAAoB,CAACzqC,MAArB,GAA8B2N,cAA9B;AACAk9B,EAAAA,qBAAqB,CAAC7qC,MAAtB,GAA+B2N,cAA/B;AACA88B,EAAAA,oBAAoB,CAACtpC,OAArB,GAA+B0pC,qBAA/B;AACAl9B,EAAAA,cAAc,CAACzM,KAAf,GAAuBupC,oBAAvB;AACA,SAAOI,qBAAP;AACD;;AAED,SAASU,kCAAT,CACElrC,OADF,EAEEmrC,cAFF,EAGE;AACA;AACA;AACA,SAAO9b,oBAAoB,CAACrvB,OAAD,EAAUmrC,cAAV,CAA3B;AACD;;AAED,SAASR,6BAAT,CACE3qC,OADF,EAEEsN,cAFF,EAGEs9B,eAHF,EAIEvxB,WAJF,EAKE;AACA,MAAM+xB,2BAAkC,GAAIprC,OAAO,CAACa,KAApD;AACA,MAAMwqC,4BAA0C,GAC9CD,2BAA2B,CAACtqC,OAD9B;AAGA,MAAMspC,oBAAoB,GAAGc,kCAAkC,CAC7DE,2BAD6D,EAE7D;AACExrB,IAAAA,IAAI,EAAE,SADR;AAEE3P,IAAAA,QAAQ,EAAE26B;AAFZ,GAF6D,CAA/D;;AAOA,MAAI,CAACt9B,cAAc,CAACsS,IAAf,GAAsBtC,YAAvB,MAAyCF,MAA7C,EAAqD;AACnDgtB,IAAAA,oBAAoB,CAACr2B,KAArB,GAA6BsF,WAA7B;AACD;;AACD+wB,EAAAA,oBAAoB,CAACzqC,MAArB,GAA8B2N,cAA9B;AACA88B,EAAAA,oBAAoB,CAACtpC,OAArB,GAA+B,IAA/B;;AACA,MAAIuqC,4BAA4B,KAAK,IAArC,EAA2C;AACzC;AACAA,IAAAA,4BAA4B,CAACxc,UAA7B,GAA0C,IAA1C;AACAwc,IAAAA,4BAA4B,CAAC3rC,KAA7B,GAAqC3B,QAArC;AACAuP,IAAAA,cAAc,CAACwhB,WAAf,GAA6BxhB,cAAc,CAACshB,UAAf,GAA4Byc,4BAAzD;AACD;;AAED/9B,EAAAA,cAAc,CAACzM,KAAf,GAAuBupC,oBAAvB;AACA,SAAOA,oBAAP;AACD;;AAED,SAASM,8BAAT,CACE1qC,OADF,EAEEsN,cAFF,EAGEs9B,eAHF,EAIEG,gBAJF,EAKE1xB,WALF,EAME;AACA,MAAMuG,IAAI,GAAGtS,cAAc,CAACsS,IAA5B;AACA,MAAMwrB,2BAAkC,GAAIprC,OAAO,CAACa,KAApD;AACA,MAAMwqC,4BAA0C,GAC9CD,2BAA2B,CAACtqC,OAD9B;AAGA,MAAM+pC,iBAAiC,GAAG;AACxCjrB,IAAAA,IAAI,EAAE,QADkC;AAExC3P,IAAAA,QAAQ,EAAE26B;AAF8B,GAA1C;AAKA,MAAIR,oBAAJ;;AACA;AAEE;AACA,GAACxqB,IAAI,GAAGtC,YAAR,MAA0BF,MAA1B;AAEA;AACA;AACA;AACA;AACA;AACA9P,EAAAA,cAAc,CAACzM,KAAf,KAAyBuqC,2BAV3B,EAWE;AACA,QAAMJ,yBAAgC,GAAI19B,cAAc,CAACzM,KAAzD;AACAupC,IAAAA,oBAAoB,GAAGY,yBAAvB;AACAZ,IAAAA,oBAAoB,CAACpmB,UAArB,GAAkC3R,OAAlC;AACA+3B,IAAAA,oBAAoB,CAACld,YAArB,GAAoC2d,iBAApC;;AAEA,QAAI/rC,CAAuBwO,cAAc,CAACsS,IAAf,GAAsBpC,WAAjD,EAA8D;AAC5D;AACA;AACA;AACA;AACA4sB,MAAAA,oBAAoB,CAAChG,cAArB,GAAsC,CAAtC;AACAgG,MAAAA,oBAAoB,CAACrG,eAArB,GAAuC,CAAC,CAAxC;AACAqG,MAAAA,oBAAoB,CAAC/F,gBAArB,GACE+G,2BAA2B,CAAC/G,gBAD9B;AAEA+F,MAAAA,oBAAoB,CAACa,gBAArB,GACEG,2BAA2B,CAACH,gBAD9B;AAED,KAjBD;AAoBA;AACA;AACA;AACA;AACA;;;AACA,QAAMK,oBAAoB,GAAGlB,oBAAoB,CAACxb,UAAlD;;AACA,QAAI0c,oBAAoB,KAAK,IAA7B,EAAmC;AACjCh+B,MAAAA,cAAc,CAACwhB,WAAf,GAA6Bsb,oBAAoB,CAACtb,WAAlD;AACAxhB,MAAAA,cAAc,CAACshB,UAAf,GAA4B0c,oBAA5B;AACAA,MAAAA,oBAAoB,CAACzc,UAArB,GAAkC,IAAlC;AACD,KAJD,MAIO;AACL;AACAvhB,MAAAA,cAAc,CAACwhB,WAAf,GAA6BxhB,cAAc,CAACshB,UAAf,GAA4B,IAAzD;AACD;AACF,GA7CD,MA6CO;AACLwb,IAAAA,oBAAoB,GAAGc,kCAAkC,CACvDE,2BADuD,EAEvDP,iBAFuD,CAAzD;AAID;;AACD,MAAIL,qBAAJ;;AACA,MAAIa,4BAA4B,KAAK,IAArC,EAA2C;AACzCb,IAAAA,qBAAqB,GAAGnb,oBAAoB,CAC1Cgc,4BAD0C,EAE1CN,gBAF0C,CAA5C;AAID,GALD,MAKO;AACLP,IAAAA,qBAAqB,GAAG5Z,uBAAuB,CAC7Cma,gBAD6C,EAE7CnrB,IAF6C,EAG7CvG,WAH6C,EAI7C,IAJ6C,CAA/C,CADK;AAQL;;AACAmxB,IAAAA,qBAAqB,CAAC9qC,KAAtB,IAA+B9B,SAA/B;AACD;;AAED4sC,EAAAA,qBAAqB,CAAC7qC,MAAtB,GAA+B2N,cAA/B;AACA88B,EAAAA,oBAAoB,CAACzqC,MAArB,GAA8B2N,cAA9B;AACA88B,EAAAA,oBAAoB,CAACtpC,OAArB,GAA+B0pC,qBAA/B;AACAl9B,EAAAA,cAAc,CAACzM,KAAf,GAAuBupC,oBAAvB;AAEA,SAAOI,qBAAP;AACD;;AAED,SAASe,sCAAT,CACEvrC,OADF,EAEEsN,cAFF,EAGE+L,WAHF,EAIE;AACA;AACAgZ,EAAAA,oBAAoB,CAAC/kB,cAAD,EAAiBtN,OAAO,CAACa,KAAzB,EAAgC,IAAhC,EAAsCwY,WAAtC,CAApB,CAFA;;AAKA,MAAMyN,SAAS,GAAGxZ,cAAc,CAAC4f,YAAjC;AACA,MAAM0d,eAAe,GAAG9jB,SAAS,CAAC7W,QAAlC;AACA,MAAMm6B,oBAAoB,GAAGE,4BAA4B,CACvDh9B,cADuD,EAEvDs9B,eAFuD,EAGvDvxB,WAHuD,CAAzD,CAPA;AAaA;;AACA+wB,EAAAA,oBAAoB,CAAC1qC,KAArB,IAA8B9B,SAA9B;AACA0P,EAAAA,cAAc,CAACuY,aAAf,GAA+B,IAA/B;AAEA,SAAOukB,oBAAP;AACD;;AAED,SAASK,+CAAT,CACEzqC,OADF,EAEEsN,cAFF,EAGEs9B,eAHF,EAIEG,gBAJF,EAKE1xB,WALF,EAME;AACA,MAAMuG,IAAI,GAAGtS,cAAc,CAACsS,IAA5B;AACA,MAAMwqB,oBAAoB,GAAGU,wBAAwB,CACnDF,eADmD,EAEnDhrB,IAFmD,EAGnDvN,OAHmD,EAInD,IAJmD,CAArD;AAMA,MAAMm4B,qBAAqB,GAAG5Z,uBAAuB,CACnDma,gBADmD,EAEnDnrB,IAFmD,EAGnDvG,WAHmD,EAInD,IAJmD,CAArD,CARA;AAeA;;AACAmxB,EAAAA,qBAAqB,CAAC9qC,KAAtB,IAA+B9B,SAA/B;AAEAwsC,EAAAA,oBAAoB,CAACzqC,MAArB,GAA8B2N,cAA9B;AACAk9B,EAAAA,qBAAqB,CAAC7qC,MAAtB,GAA+B2N,cAA/B;AACA88B,EAAAA,oBAAoB,CAACtpC,OAArB,GAA+B0pC,qBAA/B;AACAl9B,EAAAA,cAAc,CAACzM,KAAf,GAAuBupC,oBAAvB;;AAEA,MAAI,CAAC98B,cAAc,CAACsS,IAAf,GAAsBtC,YAAvB,MAAyCF,MAA7C,EAAqD;AACnD;AACA;AACAiV,IAAAA,oBAAoB,CAAC/kB,cAAD,EAAiBtN,OAAO,CAACa,KAAzB,EAAgC,IAAhC,EAAsCwY,WAAtC,CAApB;AACD;;AAED,SAAOmxB,qBAAP;AACD;;AAED,SAAST,gCAAT,CACEz8B,cADF,EAEEsoB,gBAFF,EAGEvc,WAHF,EAIgB;AACd;AACA;AACA,MAAI,CAAC/L,cAAc,CAACsS,IAAf,GAAsBtC,YAAvB,MAAyCF,MAA7C,EAAqD;AACnD,IAAa;AACX,YACE,yDACE,0CADF,GAEE,2DAFF,GAGE,0DAHF,GAIE,iCALJ;AAOD;;AACD9P,IAAAA,cAAc,CAACyG,KAAf,GAAuBiE,WAAW,CAACzF,QAAD,CAAlC;AACD,GAXD,MAWO,IAAIxM,0BAA0B,CAAC6vB,gBAAD,CAA9B,EAAkD;AACvD;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAA4B;AAC1B6Q,MAAAA,eAAe,CAAC5zB,oBAAD,CAAf;AACD;;AACDvF,IAAAA,cAAc,CAACyG,KAAf,GAAuBiE,WAAW,CAACnF,oBAAD,CAAlC;AACD,GAjBM,MAiBA;AACL;AACA;AACAvF,IAAAA,cAAc,CAACyG,KAAf,GAAuBiE,WAAW,CAACzE,aAAD,CAAlC;;AACA,IAA4B;AAC1BkzB,MAAAA,eAAe,CAAClzB,aAAD,CAAf;AACD;AACF;;AACD,SAAO,IAAP;AACD;;AAED,SAASg3B,iCAAT,CACEvqC,OADF,EAEEsN,cAFF,EAGEsoB,gBAHF,EAIEY,aAJF,EAKEnd,WALF,EAMgB;AACd;AACA;AACAmc,EAAAA,eAAe;;AAEf,MAAI,CAACgW,mBAAmB,KAAKC,eAAzB,MAA8CC,SAAlD,EAA6D;AAC3D,WAAOH,sCAAsC,CAC3CvrC,OAD2C,EAE3CsN,cAF2C,EAG3C+L,WAH2C,CAA7C;AAKD;;AAED,MAAI,CAAC/L,cAAc,CAACsS,IAAf,GAAsBtC,YAAvB,MAAyCF,MAA7C,EAAqD;AACnD,WAAOmuB,sCAAsC,CAC3CvrC,OAD2C,EAE3CsN,cAF2C,EAG3C+L,WAH2C,CAA7C;AAKD;;AAED,MAAItT,0BAA0B,CAAC6vB,gBAAD,CAA9B,EAAkD;AAChD;AACA;AACA;AACA,WAAO2V,sCAAsC,CAC3CvrC,OAD2C,EAE3CsN,cAF2C,EAG3C+L,WAH2C,CAA7C;AAKD,GA9Ba;AAgCd;;;AACA,MAAMrL,iBAAiB,GAAG2J,gBAAgB,CAAC0B,WAAD,EAAcrZ,OAAO,CAACgkB,UAAtB,CAA1C;;AACA,MAAIugB,gBAAgB,IAAIv2B,iBAAxB,EAA2C;AACzC;AACA;AACA,QAAMgC,IAAI,GAAGmtB,qBAAqB,EAAlC;;AACA,QAAIntB,IAAI,KAAK,IAAb,EAAmB;AACjB,UAAM27B,sBAAsB,GAAGvyB,yBAAyB,CACtDpJ,IADsD,EAEtDqJ,WAFsD,CAAxD;;AAIA,UACEsyB,sBAAsB,KAAKr5B,MAA3B,IACAq5B,sBAAsB,KAAKnV,aAAa,CAACC,SAF3C,EAGE;AACA;AACA;AACA;AACAD,QAAAA,aAAa,CAACC,SAAd,GAA0BkV,sBAA1B,CAJA;;AAMA,YAAMt1B,SAAS,GAAG7C,WAAlB;AACAqW,QAAAA,qBAAqB,CAAC7pB,OAAD,EAAU2rC,sBAAV,EAAkCt1B,SAAlC,CAArB;AACD,OAXD;AAmBD,KA5BwC;AA+BzC;AACA;AACA;AACA;;;AACAu1B,IAAAA,+BAA+B;AAC/B,WAAOL,sCAAsC,CAC3CvrC,OAD2C,EAE3CsN,cAF2C,EAG3C+L,WAH2C,CAA7C;AAKD,GAzCD,MAyCO,IAAIvT,yBAAyB,CAAC8vB,gBAAD,CAA7B,EAAiD;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAtoB,IAAAA,cAAc,CAAC5N,KAAf,IAAwBxB,UAAxB,CAVsD;;AAYtDoP,IAAAA,cAAc,CAACzM,KAAf,GAAuBb,OAAO,CAACa,KAA/B,CAZsD;;AActD,QAAIgrC,KAAK,GAAGC,+BAA+B,CAAC7/B,IAAhC,CAAqC,IAArC,EAA2CjM,OAA3C,CAAZ;;AACA,IAA4B;AAC1B6rC,MAAAA,KAAK,GAAGE,qBAAqB,CAACF,KAAD,CAA7B;AACD;;AACD7lC,IAAAA,6BAA6B,CAAC4vB,gBAAD,EAAmBiW,KAAnB,CAA7B;AACA,WAAO,IAAP;AACD,GApBM,MAoBA;AACL;AACAlW,IAAAA,mDAAmD,CACjDroB,cADiD,EAEjDsoB,gBAFiD,CAAnD;AAIA,QAAM9O,SAAS,GAAGxZ,cAAc,CAAC4f,YAAjC;AACA,QAAM0d,eAAe,GAAG9jB,SAAS,CAAC7W,QAAlC;AACA,QAAMm6B,oBAAoB,GAAGE,4BAA4B,CACvDh9B,cADuD,EAEvDs9B,eAFuD,EAGvDvxB,WAHuD,CAAzD,CARK;AAcL;AACA;AACA;AACA;AACA;;AACA+wB,IAAAA,oBAAoB,CAAC1qC,KAArB,IAA8BnB,SAA9B;AACA,WAAO6rC,oBAAP;AACD;AACF;;AAED,SAAS4B,mBAAT,CAA6B3sC,KAA7B,EAA2Cga,WAA3C,EAA+D;AAC7Dha,EAAAA,KAAK,CAAC0U,KAAN,GAAc+D,UAAU,CAACzY,KAAK,CAAC0U,KAAP,EAAcsF,WAAd,CAAxB;AACA,MAAM7Z,SAAS,GAAGH,KAAK,CAACG,SAAxB;;AACA,MAAIA,SAAS,KAAK,IAAlB,EAAwB;AACtBA,IAAAA,SAAS,CAACuU,KAAV,GAAkB+D,UAAU,CAACtY,SAAS,CAACuU,KAAX,EAAkBsF,WAAlB,CAA5B;AACD;;AACD0K,EAAAA,wBAAwB,CAAC1kB,KAAK,CAACM,MAAP,EAAe0Z,WAAf,CAAxB;AACD;;AAED,SAAS4yB,8BAAT,CACE3+B,cADF,EAEE4+B,UAFF,EAGE7yB,WAHF,EAIQ;AACN;AACA;AACA;AACA,MAAI/Z,IAAI,GAAG4sC,UAAX;;AACA,SAAO5sC,IAAI,KAAK,IAAhB,EAAsB;AACpB,QAAIA,IAAI,CAACzC,GAAL,KAAaxD,iBAAjB,EAAoC;AAClC,UAAMuxB,KAA2B,GAAGtrB,IAAI,CAACumB,aAAzC;;AACA,UAAI+E,KAAK,KAAK,IAAd,EAAoB;AAClBohB,QAAAA,mBAAmB,CAAC1sC,IAAD,EAAO+Z,WAAP,CAAnB;AACD;AACF,KALD,MAKO,IAAI/Z,IAAI,CAACzC,GAAL,KAAalD,qBAAjB,EAAwC;AAC7C;AACA;AACA;AACA;AACA;AACAqyC,MAAAA,mBAAmB,CAAC1sC,IAAD,EAAO+Z,WAAP,CAAnB;AACD,KAPM,MAOA,IAAI/Z,IAAI,CAACuB,KAAL,KAAe,IAAnB,EAAyB;AAC9BvB,MAAAA,IAAI,CAACuB,KAAL,CAAWlB,MAAX,GAAoBL,IAApB;AACAA,MAAAA,IAAI,GAAGA,IAAI,CAACuB,KAAZ;AACA;AACD;;AACD,QAAIvB,IAAI,KAAKgO,cAAb,EAA6B;AAC3B;AACD;;AACD,WAAOhO,IAAI,CAACwB,OAAL,KAAiB,IAAxB,EAA8B;AAC5B,UAAIxB,IAAI,CAACK,MAAL,KAAgB,IAAhB,IAAwBL,IAAI,CAACK,MAAL,KAAgB2N,cAA5C,EAA4D;AAC1D;AACD;;AACDhO,MAAAA,IAAI,GAAGA,IAAI,CAACK,MAAZ;AACD;;AACDL,IAAAA,IAAI,CAACwB,OAAL,CAAanB,MAAb,GAAsBL,IAAI,CAACK,MAA3B;AACAL,IAAAA,IAAI,GAAGA,IAAI,CAACwB,OAAZ;AACD;AACF;;AAED,SAASqrC,kBAAT,CAA4BD,UAA5B,EAAoE;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAIlX,GAAG,GAAGkX,UAAV;AACA,MAAIE,cAA4B,GAAG,IAAnC;;AACA,SAAOpX,GAAG,KAAK,IAAf,EAAqB;AACnB,QAAMqX,UAAU,GAAGrX,GAAG,CAACx1B,SAAvB,CADmB;;AAGnB,QAAI6sC,UAAU,KAAK,IAAf,IAAuBtX,kBAAkB,CAACsX,UAAD,CAAlB,KAAmC,IAA9D,EAAoE;AAClED,MAAAA,cAAc,GAAGpX,GAAjB;AACD;;AACDA,IAAAA,GAAG,GAAGA,GAAG,CAACl0B,OAAV;AACD;;AACD,SAAOsrC,cAAP;AACD;;AAID,SAASE,mBAAT,CAA6BrX,WAA7B,EAAmE;AACjE,EAAa;AACX,QACEA,WAAW,KAAKhsB,SAAhB,IACAgsB,WAAW,KAAK,UADhB,IAEAA,WAAW,KAAK,WAFhB,IAGAA,WAAW,KAAK,UAHhB,IAIA,CAAC6P,uBAAuB,CAAC7P,WAAD,CAL1B,EAME;AACA6P,MAAAA,uBAAuB,CAAC7P,WAAD,CAAvB,GAAuC,IAAvC;;AACA,UAAI,OAAOA,WAAP,KAAuB,QAA3B,EAAqC;AACnC,gBAAQA,WAAW,CAACsX,WAAZ,EAAR;AACE,eAAK,UAAL;AACA,eAAK,UAAL;AACA,eAAK,WAAL;AAAkB;AAChB,oBACE,oEACE,6BAFJ,EAGEtX,WAHF,EAIEA,WAAW,CAACsX,WAAZ,EAJF;;AAMA;AACD;;AACD,eAAK,SAAL;AACA,eAAK,UAAL;AAAiB;AACf,oBACE,oEACE,8DAFJ,EAGEtX,WAHF,EAIEA,WAAW,CAACsX,WAAZ,EAJF;;AAMA;AACD;;AACD;AACE,kBACE,8DACE,qDAFJ,EAGEtX,WAHF;;AAKA;AA5BJ;AA8BD,OA/BD,MA+BO;AACL,cACE,sEACE,qDAFJ,EAGEA,WAHF;AAKD;AACF;AACF;AACF;;AAED,SAASuX,mBAAT,CACEC,QADF,EAEExX,WAFF,EAGE;AACA,EAAa;AACX,QAAIwX,QAAQ,KAAKxjC,SAAb,IAA0B,CAAC87B,uBAAuB,CAAC0H,QAAD,CAAtD,EAAkE;AAChE,UAAIA,QAAQ,KAAK,WAAb,IAA4BA,QAAQ,KAAK,QAA7C,EAAuD;AACrD1H,QAAAA,uBAAuB,CAAC0H,QAAD,CAAvB,GAAoC,IAApC;;AACA,cACE,iEACE,uCAFJ,EAGEA,QAHF;AAKD,OAPD,MAOO,IAAIxX,WAAW,KAAK,UAAhB,IAA8BA,WAAW,KAAK,WAAlD,EAA+D;AACpE8P,QAAAA,uBAAuB,CAAC0H,QAAD,CAAvB,GAAoC,IAApC;;AACA,cACE,gEACE,6BADF,GAEE,iDAHJ,EAIEA,QAJF;AAMD;AACF;AACF;AACF;;AAED,SAASC,+BAAT,CAAyCC,SAAzC,EAA2DlgC,KAA3D,EAA0E;AACxE,EAAa;AACX,QAAM6b,OAAO,GAAGC,KAAK,CAACD,OAAN,CAAcqkB,SAAd,CAAhB;AACA,QAAMC,UAAU,GACd,CAACtkB,OAAD,IAAY,OAAOtsB,aAAa,CAAC2wC,SAAD,CAApB,KAAoC,UADlD;;AAEA,QAAIrkB,OAAO,IAAIskB,UAAf,EAA2B;AACzB,UAAMjwC,IAAI,GAAG2rB,OAAO,GAAG,OAAH,GAAa,UAAjC;;AACA,YACE,uEACE,2DADF,GAEE,qCAFF,GAGE,wDAHF,GAIE,iBALJ,EAME3rB,IANF,EAOE8P,KAPF,EAQE9P,IARF;;AAUA,aAAO,KAAP;AACD;AACF;;AACD,SAAO,IAAP;AACD;;AAED,SAASkwC,4BAAT,CACE58B,QADF,EAEEglB,WAFF,EAGE;AACA,EAAa;AACX,QACE,CAACA,WAAW,KAAK,UAAhB,IAA8BA,WAAW,KAAK,WAA/C,KACAhlB,QAAQ,KAAKhH,SADb,IAEAgH,QAAQ,KAAK,IAFb,IAGAA,QAAQ,KAAK,KAJf,EAKE;AACA,UAAIsY,KAAK,CAACD,OAAN,CAAcrY,QAAd,CAAJ,EAA6B;AAC3B,aAAK,IAAIoI,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGpI,QAAQ,CAACvF,MAA7B,EAAqC2N,CAAC,EAAtC,EAA0C;AACxC,cAAI,CAACq0B,+BAA+B,CAACz8B,QAAQ,CAACoI,CAAD,CAAT,EAAcA,CAAd,CAApC,EAAsD;AACpD;AACD;AACF;AACF,OAND,MAMO;AACL,YAAMwZ,UAAU,GAAG71B,aAAa,CAACiU,QAAD,CAAhC;;AACA,YAAI,OAAO4hB,UAAP,KAAsB,UAA1B,EAAsC;AACpC,cAAMib,gBAAgB,GAAGjb,UAAU,CAACv5B,IAAX,CAAgB2X,QAAhB,CAAzB;;AACA,cAAI68B,gBAAJ,EAAsB;AACpB,gBAAI9a,IAAI,GAAG8a,gBAAgB,CAACloB,IAAjB,EAAX;AACA,gBAAIvM,EAAC,GAAG,CAAR;;AACA,mBAAO,CAAC2Z,IAAI,CAACC,IAAb,EAAmBD,IAAI,GAAG8a,gBAAgB,CAACloB,IAAjB,EAA1B,EAAmD;AACjD,kBAAI,CAAC8nB,+BAA+B,CAAC1a,IAAI,CAAC33B,KAAN,EAAage,EAAb,CAApC,EAAqD;AACnD;AACD;;AACDA,cAAAA,EAAC;AACF;AACF;AACF,SAZD,MAYO;AACL,gBACE,qEACE,mDADF,GAEE,qDAHJ,EAIE4c,WAJF;AAMD;AACF;AACF;AACF;AACF;;AAED,SAAS8X,2BAAT,CACEz/B,cADF,EAEE0/B,WAFF,EAGEC,IAHF,EAIEb,cAJF,EAKEK,QALF,EAMES,yBANF,EAOQ;AACN,MAAMC,WAA2C,GAC/C7/B,cAAc,CAACuY,aADjB;;AAEA,MAAIsnB,WAAW,KAAK,IAApB,EAA0B;AACxB7/B,IAAAA,cAAc,CAACuY,aAAf,GAAgC;AAC9BmnB,MAAAA,WAAW,EAAEA,WADiB;AAE9B9tB,MAAAA,SAAS,EAAE,IAFmB;AAG9BkuB,MAAAA,kBAAkB,EAAE,CAHU;AAI9Bze,MAAAA,IAAI,EAAEyd,cAJwB;AAK9Ba,MAAAA,IAAI,EAAEA,IALwB;AAM9BR,MAAAA,QAAQ,EAAEA,QANoB;AAO9B7d,MAAAA,UAAU,EAAEse;AAPkB,KAAhC;AASD,GAVD,MAUO;AACL;AACAC,IAAAA,WAAW,CAACH,WAAZ,GAA0BA,WAA1B;AACAG,IAAAA,WAAW,CAACjuB,SAAZ,GAAwB,IAAxB;AACAiuB,IAAAA,WAAW,CAACC,kBAAZ,GAAiC,CAAjC;AACAD,IAAAA,WAAW,CAACxe,IAAZ,GAAmByd,cAAnB;AACAe,IAAAA,WAAW,CAACF,IAAZ,GAAmBA,IAAnB;AACAE,IAAAA,WAAW,CAACV,QAAZ,GAAuBA,QAAvB;AACAU,IAAAA,WAAW,CAACve,UAAZ,GAAyBse,yBAAzB;AACD;AACF;AAGD;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASG,2BAAT,CACErtC,OADF,EAEEsN,cAFF,EAGE+L,WAHF,EAIE;AACA,MAAMyN,SAAS,GAAGxZ,cAAc,CAAC4f,YAAjC;AACA,MAAM+H,WAAoC,GAAGnO,SAAS,CAACmO,WAAvD;AACA,MAAMwX,QAA8B,GAAG3lB,SAAS,CAACmmB,IAAjD;AACA,MAAM3b,WAAW,GAAGxK,SAAS,CAAC7W,QAA9B;AAEAq8B,EAAAA,mBAAmB,CAACrX,WAAD,CAAnB;AACAuX,EAAAA,mBAAmB,CAACC,QAAD,EAAWxX,WAAX,CAAnB;AACA4X,EAAAA,4BAA4B,CAACvb,WAAD,EAAc2D,WAAd,CAA5B;AAEAgQ,EAAAA,iBAAiB,CAACjlC,OAAD,EAAUsN,cAAV,EAA0BgkB,WAA1B,EAAuCjY,WAAvC,CAAjB;AAEA,MAAIqwB,eAAgC,GAAG3V,mBAAmB,CAAC/zB,OAA3D;AAEA,MAAMstC,mBAAmB,GAAGtZ,kBAAkB,CAC5C0V,eAD4C,EAE3C5V,qBAF2C,CAA9C;;AAIA,MAAIwZ,mBAAJ,EAAyB;AACvB5D,IAAAA,eAAe,GAAGvV,yBAAyB,CACzCuV,eADyC,EAEzC5V,qBAFyC,CAA3C;AAIAxmB,IAAAA,cAAc,CAAC5N,KAAf,IAAwBxB,UAAxB;AACD,GAND,MAMO;AACL,QAAMqvC,gBAAgB,GACpBvtC,OAAO,KAAK,IAAZ,IAAoB,CAACA,OAAO,CAACN,KAAR,GAAgBxB,UAAjB,MAAiCR,OADvD;;AAEA,QAAI6vC,gBAAJ,EAAsB;AACpB;AACA;AACA;AACAtB,MAAAA,8BAA8B,CAC5B3+B,cAD4B,EAE5BA,cAAc,CAACzM,KAFa,EAG5BwY,WAH4B,CAA9B;AAKD;;AACDqwB,IAAAA,eAAe,GAAGxV,gCAAgC,CAACwV,eAAD,CAAlD;AACD;;AACDnV,EAAAA,mBAAmB,CAACjnB,cAAD,EAAiBo8B,eAAjB,CAAnB;;AAEA,MAAI,CAACp8B,cAAc,CAACsS,IAAf,GAAsBtC,YAAvB,MAAyCF,MAA7C,EAAqD;AACnD;AACA;AACA9P,IAAAA,cAAc,CAACuY,aAAf,GAA+B,IAA/B;AACD,GAJD,MAIO;AACL,YAAQoP,WAAR;AACE,WAAK,UAAL;AAAiB;AACf,cAAMmX,cAAc,GAAGD,kBAAkB,CAAC7+B,cAAc,CAACzM,KAAhB,CAAzC;AACA,cAAIosC,IAAJ;;AACA,cAAIb,cAAc,KAAK,IAAvB,EAA6B;AAC3B;AACA;AACAa,YAAAA,IAAI,GAAG3/B,cAAc,CAACzM,KAAtB;AACAyM,YAAAA,cAAc,CAACzM,KAAf,GAAuB,IAAvB;AACD,WALD,MAKO;AACL;AACA;AACAosC,YAAAA,IAAI,GAAGb,cAAc,CAACtrC,OAAtB;AACAsrC,YAAAA,cAAc,CAACtrC,OAAf,GAAyB,IAAzB;AACD;;AACDisC,UAAAA,2BAA2B,CACzBz/B,cADyB,EAEzB,KAFyB;AAGzB2/B,UAAAA,IAHyB,EAIzBb,cAJyB,EAKzBK,QALyB,EAMzBn/B,cAAc,CAACshB,UANU,CAA3B;AAQA;AACD;;AACD,WAAK,WAAL;AAAkB;AAChB;AACA;AACA;AACA;AACA,cAAIqe,KAAI,GAAG,IAAX;AACA,cAAIjY,GAAG,GAAG1nB,cAAc,CAACzM,KAAzB;AACAyM,UAAAA,cAAc,CAACzM,KAAf,GAAuB,IAAvB;;AACA,iBAAOm0B,GAAG,KAAK,IAAf,EAAqB;AACnB,gBAAMqX,UAAU,GAAGrX,GAAG,CAACx1B,SAAvB,CADmB;;AAGnB,gBAAI6sC,UAAU,KAAK,IAAf,IAAuBtX,kBAAkB,CAACsX,UAAD,CAAlB,KAAmC,IAA9D,EAAoE;AAClE;AACA/+B,cAAAA,cAAc,CAACzM,KAAf,GAAuBm0B,GAAvB;AACA;AACD;;AACD,gBAAMwY,OAAO,GAAGxY,GAAG,CAACl0B,OAApB;AACAk0B,YAAAA,GAAG,CAACl0B,OAAJ,GAAcmsC,KAAd;AACAA,YAAAA,KAAI,GAAGjY,GAAP;AACAA,YAAAA,GAAG,GAAGwY,OAAN;AACD,WApBe;;;AAsBhBT,UAAAA,2BAA2B,CACzBz/B,cADyB,EAEzB,IAFyB;AAGzB2/B,UAAAA,KAHyB,EAIzB,IAJyB;AAKzBR,UAAAA,QALyB,EAMzBn/B,cAAc,CAACshB,UANU,CAA3B;AAQA;AACD;;AACD,WAAK,UAAL;AAAiB;AACfme,UAAAA,2BAA2B,CACzBz/B,cADyB,EAEzB,KAFyB;AAGzB,cAHyB;AAIzB,cAJyB;AAKzBrE,UAAAA,SALyB,EAMzBqE,cAAc,CAACshB,UANU,CAA3B;AAQA;AACD;;AACD;AAAS;AACP;AACA;AACAthB,UAAAA,cAAc,CAACuY,aAAf,GAA+B,IAA/B;AACD;AAxEH;AA0ED;;AACD,SAAOvY,cAAc,CAACzM,KAAtB;AACD;;AAED,SAAS4sC,qBAAT,CACEztC,OADF,EAEEsN,cAFF,EAGE+L,WAHF,EAIE;AACA+Z,EAAAA,iBAAiB,CAAC9lB,cAAD,EAAiBA,cAAc,CAACnN,SAAf,CAAyBowB,aAA1C,CAAjB;AACA,MAAM2U,YAAY,GAAG53B,cAAc,CAAC4f,YAApC;;AACA,MAAIltB,OAAO,KAAK,IAAhB,EAAsB;AACpB;AACA;AACA;AACA;AACA;AACAsN,IAAAA,cAAc,CAACzM,KAAf,GAAuBwxB,oBAAoB,CACzC/kB,cADyC,EAEzC,IAFyC,EAGzC43B,YAHyC,EAIzC7rB,WAJyC,CAA3C;AAMD,GAZD,MAYO;AACL4rB,IAAAA,iBAAiB,CAACjlC,OAAD,EAAUsN,cAAV,EAA0B43B,YAA1B,EAAwC7rB,WAAxC,CAAjB;AACD;;AACD,SAAO/L,cAAc,CAACzM,KAAtB;AACD;;AAED,IAAI6sC,+CAA+C,GAAG,KAAtD;;AAEA,SAASC,qBAAT,CACE3tC,OADF,EAEEsN,cAFF,EAGE+L,WAHF,EAIE;AACA,MAAMu0B,YAAoC,GAAGtgC,cAAc,CAAC3Q,IAA5D;AACA,MAAMI,OAA0B,GAAG6wC,YAAY,CAAC3wC,QAAhD;AAEA,MAAMitB,QAAQ,GAAG5c,cAAc,CAAC4f,YAAhC;AACA,MAAMjD,QAAQ,GAAG3c,cAAc,CAACof,aAAhC;AAEA,MAAM/I,QAAQ,GAAGuG,QAAQ,CAAC7vB,KAA1B;;AAEA,EAAa;AACX,QAAI,EAAE,WAAW6vB,QAAb,CAAJ,EAA4B;AAC1B,UAAI,CAACwjB,+CAAL,EAAsD;AACpDA,QAAAA,+CAA+C,GAAG,IAAlD;;AACA,cACE,sGADF;AAGD;AACF;;AACD,QAAMG,iBAAiB,GAAGvgC,cAAc,CAAC3Q,IAAf,CAAoBmuB,SAA9C;;AAEA,QAAI+iB,iBAAJ,EAAuB;AACrBliC,MAAAA,cAAc,CAACkiC,iBAAD,EAAoB3jB,QAApB,EAA8B,MAA9B,EAAsC,kBAAtC,CAAd;AACD;AACF;;AAEDjH,EAAAA,YAAY,CAAC3V,cAAD,EAAiBqW,QAAjB,CAAZ;;AAEA,MAAIsG,QAAQ,KAAK,IAAjB,EAAuB;AACrB,QAAMrG,QAAQ,GAAGqG,QAAQ,CAAC5vB,KAA1B;AACA,QAAMwpB,WAAW,GAAGH,oBAAoB,CAAC3mB,OAAD,EAAU4mB,QAAV,EAAoBC,QAApB,CAAxC;;AACA,QAAIC,WAAW,KAAK,CAApB,EAAuB;AACrB;AACA,UACEoG,QAAQ,CAACha,QAAT,KAAsBia,QAAQ,CAACja,QAA/B,IACA,CAAC69B,iBAAuB,EAF1B,EAGE;AACA,eAAOxI,4BAA4B,CACjCtlC,OADiC,EAEjCsN,cAFiC,EAGjC+L,WAHiC,CAAnC;AAKD;AACF,KAZD,MAYO;AACL;AACA;AACA4K,MAAAA,sBAAsB,CAAC3W,cAAD,EAAiBvQ,OAAjB,EAA0B8mB,WAA1B,EAAuCxK,WAAvC,CAAtB;AACD;AACF;;AAED,MAAMiY,WAAW,GAAGpH,QAAQ,CAACja,QAA7B;AACAg1B,EAAAA,iBAAiB,CAACjlC,OAAD,EAAUsN,cAAV,EAA0BgkB,WAA1B,EAAuCjY,WAAvC,CAAjB;AACA,SAAO/L,cAAc,CAACzM,KAAtB;AACD;;AAED,IAAIktC,oCAAoC,GAAG,KAA3C;;AAEA,SAASC,qBAAT,CACEhuC,OADF,EAEEsN,cAFF,EAGE+L,WAHF,EAIE;AACA,MAAItc,OAA0B,GAAGuQ,cAAc,CAAC3Q,IAAhD,CADA;AAGA;AACA;AACA;AACA;AACA;AACA;;AACA,EAAa;AACX,QAAKI,OAAD,CAAeE,QAAf,KAA4BgM,SAAhC,EAA2C;AACzC;AACA;AACA;AACA,UAAIlM,OAAO,KAAKA,OAAO,CAACkxC,QAAxB,EAAkC;AAChC,YAAI,CAACF,oCAAL,EAA2C;AACzCA,UAAAA,oCAAoC,GAAG,IAAvC;;AACA,gBACE,0EACE,4EAFJ;AAID;AACF;AACF,KAbD,MAaO;AACLhxC,MAAAA,OAAO,GAAIA,OAAD,CAAeE,QAAzB;AACD;AACF;;AACD,MAAMitB,QAAQ,GAAG5c,cAAc,CAAC4f,YAAhC;AACA,MAAMhwB,MAAM,GAAGgtB,QAAQ,CAACja,QAAxB;;AAEA,EAAa;AACX,QAAI,OAAO/S,MAAP,KAAkB,UAAtB,EAAkC;AAChC,YACE,wEACE,mEADF,GAEE,kEAFF,GAGE,iDAJJ;AAMD;AACF;;AAED6nB,EAAAA,oBAAoB,CAACzX,cAAD,EAAiB+L,WAAjB,CAApB;AACA,MAAMsK,QAAQ,GAAGsB,WAAW,CAACloB,OAAD,EAAUmtB,QAAQ,CAACgkB,qBAAnB,CAA5B;AACA,MAAI5c,WAAJ;;AACA,EAAa;AACXnyB,IAAAA,mBAAiB,CAACa,OAAlB,GAA4BsN,cAA5B;AACA2R,IAAAA,cAAc,CAAC,IAAD,CAAd;AACAqS,IAAAA,WAAW,GAAGp0B,MAAM,CAACymB,QAAD,CAApB;AACA1E,IAAAA,cAAc,CAAC,KAAD,CAAd;AACD,GALD,AA5CA;;;AAsDA3R,EAAAA,cAAc,CAAC5N,KAAf,IAAwB/B,aAAxB;AACAsnC,EAAAA,iBAAiB,CAACjlC,OAAD,EAAUsN,cAAV,EAA0BgkB,WAA1B,EAAuCjY,WAAvC,CAAjB;AACA,SAAO/L,cAAc,CAACzM,KAAtB;AACD;;AAsBD,AAAO,SAASmkB,gCAAT,GAA4C;AACjDuf,EAAAA,gBAAgB,GAAG,IAAnB;AACD;;AAED,SAASe,4BAAT,CACEtlC,OADF,EAEEsN,cAFF,EAGE+L,WAHF,EAIgB;AACd,MAAIrZ,OAAO,KAAK,IAAhB,EAAsB;AACpB;AACAsN,IAAAA,cAAc,CAAC8W,YAAf,GAA8BpkB,OAAO,CAACokB,YAAtC;AACD;;AAED,EAAyB;AACvB;AACA4f,IAAAA,0BAA0B,CAAC12B,AAAD,CAA1B;AACD;;AAEDua,EAAAA,sBAAsB,CAACva,cAAc,CAACyG,KAAhB,CAAtB,CAXc;;AAcd,MAAI,CAAC4D,gBAAgB,CAAC0B,WAAD,EAAc/L,cAAc,CAAC0W,UAA7B,CAArB,EAA+D;AAC7D;AACA;AACA;AACA,WAAO,IAAP;AACD,GALD,MAKO;AACL;AACA;AACA0O,IAAAA,gBAAgB,CAAC1yB,OAAD,EAAUsN,cAAV,CAAhB;AACA,WAAOA,cAAc,CAACzM,KAAtB;AACD;AACF;;AAED,SAASstC,YAAT,CACEnuC,OADF,EAEEouC,iBAFF,EAGEC,iBAHF,EAIgB;AACd,EAAa;AACX,QAAM3gB,WAAW,GAAG0gB,iBAAiB,CAACzuC,MAAtC;;AACA,QAAI+tB,WAAW,KAAK,IAApB,EAA0B;AACxB,YAAM,IAAIxkB,KAAJ,CAAU,6BAAV,CAAN;AACD,KAJU;AAOX;;;AACAlJ,IAAAA,OAAO,CAACR,SAAR,GAAoB,IAApB;AACA4uC,IAAAA,iBAAiB,CAAC5uC,SAAlB,GAA8B,IAA9B,CATW;;AAYX6uC,IAAAA,iBAAiB,CAAC5hC,KAAlB,GAA0B2hC,iBAAiB,CAAC3hC,KAA5C;AACA4hC,IAAAA,iBAAiB,CAACvtC,OAAlB,GAA4BstC,iBAAiB,CAACttC,OAA9C;AACAutC,IAAAA,iBAAiB,CAAC1uC,MAAlB,GAA2ByuC,iBAAiB,CAACzuC,MAA7C;AACA0uC,IAAAA,iBAAiB,CAACtgB,GAAlB,GAAwBqgB,iBAAiB,CAACrgB,GAA1C,CAfW;;AAkBX,QAAIqgB,iBAAiB,KAAK1gB,WAAW,CAAC7sB,KAAtC,EAA6C;AAC3C6sB,MAAAA,WAAW,CAAC7sB,KAAZ,GAAoBwtC,iBAApB;AACD,KAFD,MAEO;AACL,UAAIC,WAAW,GAAG5gB,WAAW,CAAC7sB,KAA9B;;AACA,UAAIytC,WAAW,KAAK,IAApB,EAA0B;AACxB,cAAM,IAAIplC,KAAJ,CAAU,kCAAV,CAAN;AACD;;AACD,aAAOolC,WAAW,CAACxtC,OAAZ,KAAwBstC,iBAA/B,EAAkD;AAChDE,QAAAA,WAAW,GAAGA,WAAW,CAACxtC,OAA1B;;AACA,YAAIwtC,WAAW,KAAK,IAApB,EAA0B;AACxB,gBAAM,IAAIplC,KAAJ,CAAU,wCAAV,CAAN;AACD;AACF;;AACDolC,MAAAA,WAAW,CAACxtC,OAAZ,GAAsButC,iBAAtB;AACD,KAhCU;AAmCX;;;AACA,QAAM1f,IAAI,GAAGjB,WAAW,CAACkB,UAAzB;;AACA,QAAID,IAAI,KAAK,IAAb,EAAmB;AACjBA,MAAAA,IAAI,CAACE,UAAL,GAAkB7uB,OAAlB;AACA0tB,MAAAA,WAAW,CAACkB,UAAZ,GAAyB5uB,OAAzB;AACD,KAHD,MAGO;AACL0tB,MAAAA,WAAW,CAACoB,WAAZ,GAA0BpB,WAAW,CAACkB,UAAZ,GAAyB5uB,OAAnD;AACD;;AACDA,IAAAA,OAAO,CAAC6uB,UAAR,GAAqB,IAArB;AACA7uB,IAAAA,OAAO,CAACN,KAAR,GAAgB3B,QAAhB;AAEAswC,IAAAA,iBAAiB,CAAC3uC,KAAlB,IAA2B9B,SAA3B,CA9CW;;AAiDX,WAAOywC,iBAAP;AACD,GAlDD;AAwDD;;AAED,SAASE,SAAT,CACEvuC,OADF,EAEEsN,cAFF,EAGE+L,WAHF,EAIgB;AACd,MAAMmsB,WAAW,GAAGl4B,cAAc,CAACyG,KAAnC;;AAEA,EAAa;AACX,QAAIzG,cAAc,CAACkhC,kBAAf,IAAqCxuC,OAAO,KAAK,IAArD,EAA2D;AACzD;AACA,aAAOmuC,YAAY,CACjBnuC,OADiB,EAEjBsN,cAFiB,EAGjBy4B,2BAA2B,CACzBz4B,cAAc,CAAC3Q,IADU,EAEzB2Q,cAAc,CAACpT,GAFU,EAGzBoT,cAAc,CAAC4f,YAHU,EAIzB5f,cAAc,CAACkR,WAAf,IAA8B,IAJL,EAKzBlR,cAAc,CAACsS,IALU,EAMzBtS,cAAc,CAACyG,KANU,CAHV,CAAnB;AAYD;AACF;;AAED,MAAI/T,OAAO,KAAK,IAAhB,EAAsB;AACpB,QAAMiqB,QAAQ,GAAGjqB,OAAO,CAAC0sB,aAAzB;AACA,QAAMxC,QAAQ,GAAG5c,cAAc,CAAC4f,YAAhC;;AAEA,QACEjD,QAAQ,KAAKC,QAAb,IACA4jB,iBAAuB,EADvB;AAGC39B,IAAAA,CAAU7C,cAAc,CAAC3Q,IAAf,KAAwBqD,OAAO,CAACrD,IAAnC,CAHR,CADF,EAKE;AACA;AACA;AACA4nC,MAAAA,gBAAgB,GAAG,IAAnB;AACD,KATD,MASO,IAAI,CAAC5sB,gBAAgB,CAAC0B,WAAD,EAAcmsB,WAAd,CAArB,EAAiD;AACtDjB,MAAAA,gBAAgB,GAAG,KAAnB,CADsD;AAGtD;AACA;;AACA,cAAQj3B,cAAc,CAACzQ,GAAvB;AACE,aAAKlE,QAAL;AACEivC,UAAAA,mBAAmB,CAACt6B,cAAD,CAAnB;AACAgqB,UAAAA,mBAAmB;AACnB;;AACF,aAAKz+B,aAAL;AACE46B,UAAAA,eAAe,CAACnmB,cAAD,CAAf;AACA;;AACF,aAAK7U,cAAL;AAAqB;AACnB,gBAAMyS,SAAS,GAAGoC,cAAc,CAAC3Q,IAAjC;;AACA,gBAAI4qC,iBAAuB,CAACr8B,SAAD,CAA3B,EAAwC;AACtCs8B,cAAAA,mBAAyB,CAACl6B,cAAD,CAAzB;AACD;;AACD;AACD;;AACD,aAAK1U,UAAL;AACEw6B,UAAAA,iBAAiB,CACf9lB,cADe,EAEfA,cAAc,CAACnN,SAAf,CAAyBowB,aAFV,CAAjB;AAIA;;AACF,aAAKr3B,eAAL;AAAsB;AACpB,gBAAMyqB,QAAQ,GAAGrW,cAAc,CAACof,aAAf,CAA6BryB,KAA9C;AACA4oB,YAAAA,YAAY,CAAC3V,cAAD,EAAiBqW,QAAjB,CAAZ;AACA;AACD;;AACD,aAAKvqB,QAAL;AACE,UAAyB;AACvB;AACA,gBAAMq1C,YAAY,GAAG92B,gBAAgB,CACnC0B,WADmC,EAEnC/L,cAAc,CAAC0W,UAFoB,CAArC;;AAIA,gBAAIyqB,YAAJ,EAAkB;AAChBnhC,cAAAA,cAAc,CAAC5N,KAAf,IAAwB7B,MAAxB;AACD,aARsB;AAWvB;;;AACA,gBAAMsC,SAAS,GAAGmN,cAAc,CAACnN,SAAjC;AACAA,YAAAA,SAAS,CAAC2mC,cAAV,GAA2B,CAA3B;AACA3mC,YAAAA,SAAS,CAAC4mC,qBAAV,GAAkC,CAAlC;AACD;;AACD;;AACF,aAAK1tC,iBAAL;AAAwB;AACtB,gBAAMuxB,KAA2B,GAAGtd,cAAc,CAACuY,aAAnD;;AACA,gBAAI+E,KAAK,KAAK,IAAd,EAAoB;AAClB,cAAkC;AAChC,oBAAIA,KAAK,CAACgK,UAAN,KAAqB,IAAzB,EAA+B;AAC7BL,kBAAAA,mBAAmB,CACjBjnB,cADiB,EAEjB4mB,gCAAgC,CAACH,mBAAmB,CAAC/zB,OAArB,CAFf,CAAnB,CAD6B;AAM7B;AACA;;AACAsN,kBAAAA,cAAc,CAAC5N,KAAf,IAAwBxB,UAAxB,CAR6B;AAU7B;;AACA,yBAAO,IAAP;AACD;AACF,eAfiB;AAkBlB;AACA;AACA;;;AACA,kBAAMksC,oBAA2B,GAAI98B,cAAc,CAACzM,KAApD;AACA,kBAAM6tC,iBAAiB,GAAGtE,oBAAoB,CAACpmB,UAA/C;;AACA,kBAAIrM,gBAAgB,CAAC0B,WAAD,EAAcq1B,iBAAd,CAApB,EAAsD;AACpD;AACA;AACA,uBAAO9E,uBAAuB,CAC5B5pC,OAD4B,EAE5BsN,cAF4B,EAG5B+L,WAH4B,CAA9B;AAKD,eARD,MAQO;AACL;AACA;AACAkb,gBAAAA,mBAAmB,CACjBjnB,cADiB,EAEjB4mB,gCAAgC,CAACH,mBAAmB,CAAC/zB,OAArB,CAFf,CAAnB,CAHK;AAQL;;AACA,oBAAMa,KAAK,GAAGykC,4BAA4B,CACxCtlC,OADwC,EAExCsN,cAFwC,EAGxC+L,WAHwC,CAA1C;;AAKA,oBAAIxY,KAAK,KAAK,IAAd,EAAoB;AAClB;AACA;AACA,yBAAOA,KAAK,CAACC,OAAb;AACD,iBAJD,MAIO;AACL,yBAAO,IAAP;AACD;AACF;AACF,aArDD,MAqDO;AACLyzB,cAAAA,mBAAmB,CACjBjnB,cADiB,EAEjB4mB,gCAAgC,CAACH,mBAAmB,CAAC/zB,OAArB,CAFf,CAAnB;AAID;;AACD;AACD;;AACD,aAAKrG,qBAAL;AAA4B;AAC1B,gBAAM4zC,gBAAgB,GAAG,CAACvtC,OAAO,CAACN,KAAR,GAAgBxB,UAAjB,MAAiCR,OAA1D;;AAEA,gBAAM+wC,aAAY,GAAG92B,gBAAgB,CACnC0B,WADmC,EAEnC/L,cAAc,CAAC0W,UAFoB,CAArC;;AAKA,gBAAIupB,gBAAJ,EAAsB;AACpB,kBAAIkB,aAAJ,EAAkB;AAChB;AACA;AACA;AACA;AACA;AACA,uBAAOpB,2BAA2B,CAChCrtC,OADgC,EAEhCsN,cAFgC,EAGhC+L,WAHgC,CAAlC;AAKD,eAZmB;AAcpB;AACA;;;AACA/L,cAAAA,cAAc,CAAC5N,KAAf,IAAwBxB,UAAxB;AACD,aAzByB;AA4B1B;AACA;;;AACA,gBAAMivC,WAAW,GAAG7/B,cAAc,CAACuY,aAAnC;;AACA,gBAAIsnB,WAAW,KAAK,IAApB,EAA0B;AACxB;AACA;AACAA,cAAAA,WAAW,CAACjuB,SAAZ,GAAwB,IAAxB;AACAiuB,cAAAA,WAAW,CAACF,IAAZ,GAAmB,IAAnB;AACAE,cAAAA,WAAW,CAACve,UAAZ,GAAyB,IAAzB;AACD;;AACD2F,YAAAA,mBAAmB,CAACjnB,cAAD,EAAiBymB,mBAAmB,CAAC/zB,OAArC,CAAnB;;AAEA,gBAAIyuC,aAAJ,EAAkB;AAChB;AACD,aAFD,MAEO;AACL;AACA;AACA;AACA,qBAAO,IAAP;AACD;AACF;;AACD,aAAK10C,kBAAL;AACA,aAAKC,qBAAL;AAA4B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAsT,YAAAA,cAAc,CAACyG,KAAf,GAAuB1B,OAAvB;AACA,mBAAO+zB,wBAAwB,CAACpmC,OAAD,EAAUsN,cAAV,EAA0B+L,WAA1B,CAA/B;AACD;AAxKH;;AA0KA,aAAOisB,4BAA4B,CAACtlC,OAAD,EAAUsN,cAAV,EAA0B+L,WAA1B,CAAnC;AACD,KAhLM,MAgLA;AACL,UAAI,CAACrZ,OAAO,CAACN,KAAR,GAAgBb,4BAAjB,MAAmDnB,OAAvD,EAAgE;AAC9D;AACA;AACA6mC,QAAAA,gBAAgB,GAAG,IAAnB;AACD,OAJD,MAIO;AACL;AACA;AACA;AACA;AACAA,QAAAA,gBAAgB,GAAG,KAAnB;AACD;AACF;AACF,GA1MD,MA0MO;AACLA,IAAAA,gBAAgB,GAAG,KAAnB;AACD,GAjOa;AAoOd;AACA;AACA;AACA;;;AACAj3B,EAAAA,cAAc,CAACyG,KAAf,GAAuB1B,OAAvB;;AAEA,UAAQ/E,cAAc,CAACzQ,GAAvB;AACE,SAAKnE,sBAAL;AAA6B;AAC3B,eAAOowC,2BAA2B,CAChC9oC,OADgC,EAEhCsN,cAFgC,EAGhCA,cAAc,CAAC3Q,IAHiB,EAIhC0c,WAJgC,CAAlC;AAMD;;AACD,SAAK7f,aAAL;AAAoB;AAClB,YAAMwzB,WAAW,GAAG1f,cAAc,CAAC0f,WAAnC;AACA,eAAOqb,kBAAkB,CACvBroC,OADuB,EAEvBsN,cAFuB,EAGvB0f,WAHuB,EAIvBwY,WAJuB,EAKvBnsB,WALuB,CAAzB;AAOD;;AACD,SAAK7gB,iBAAL;AAAwB;AACtB,YAAM0S,UAAS,GAAGoC,cAAc,CAAC3Q,IAAjC;AACA,YAAMgyC,eAAe,GAAGrhC,cAAc,CAAC4f,YAAvC;AACA,YAAMub,aAAa,GACjBn7B,cAAc,CAAC0f,WAAf,KAA+B9hB,UAA/B,GACIyjC,eADJ,GAEIxsB,mBAAmB,CAACjX,UAAD,EAAYyjC,eAAZ,CAHzB;AAIA,eAAOxI,uBAAuB,CAC5BnmC,OAD4B,EAE5BsN,cAF4B,EAG5BpC,UAH4B,EAI5Bu9B,aAJ4B,EAK5BpvB,WAL4B,CAA9B;AAOD;;AACD,SAAK5gB,cAAL;AAAqB;AACnB,YAAMyS,WAAS,GAAGoC,cAAc,CAAC3Q,IAAjC;AACA,YAAMgyC,gBAAe,GAAGrhC,cAAc,CAAC4f,YAAvC;;AACA,YAAMub,cAAa,GACjBn7B,cAAc,CAAC0f,WAAf,KAA+B9hB,WAA/B,GACIyjC,gBADJ,GAEIxsB,mBAAmB,CAACjX,WAAD,EAAYyjC,gBAAZ,CAHzB;;AAIA,eAAOtH,oBAAoB,CACzBrnC,OADyB,EAEzBsN,cAFyB,EAGzBpC,WAHyB,EAIzBu9B,cAJyB,EAKzBpvB,WALyB,CAA3B;AAOD;;AACD,SAAK1gB,QAAL;AACE,aAAOmvC,cAAc,CAAC9nC,OAAD,EAAUsN,cAAV,EAA0B+L,WAA1B,CAArB;;AACF,SAAKxgB,aAAL;AACE,aAAOqvC,mBAAmB,CAACloC,OAAD,EAAUsN,cAAV,EAA0B+L,WAA1B,CAA1B;;AACF,SAAKvgB,QAAL;AACE,aAAOsvC,cAAc,CAACpoC,OAAD,EAAUsN,cAAV,CAArB;;AACF,SAAKjU,iBAAL;AACE,aAAOuwC,uBAAuB,CAAC5pC,OAAD,EAAUsN,cAAV,EAA0B+L,WAA1B,CAA9B;;AACF,SAAKzgB,UAAL;AACE,aAAO60C,qBAAqB,CAACztC,OAAD,EAAUsN,cAAV,EAA0B+L,WAA1B,CAA5B;;AACF,SAAKlgB,UAAL;AAAiB;AACf,YAAMwD,IAAI,GAAG2Q,cAAc,CAAC3Q,IAA5B;AACA,YAAMgyC,iBAAe,GAAGrhC,cAAc,CAAC4f,YAAvC;;AACA,YAAMub,eAAa,GACjBn7B,cAAc,CAAC0f,WAAf,KAA+BrwB,IAA/B,GACIgyC,iBADJ,GAEIxsB,mBAAmB,CAACxlB,IAAD,EAAOgyC,iBAAP,CAHzB;;AAIA,eAAOvJ,gBAAgB,CACrBplC,OADqB,EAErBsN,cAFqB,EAGrB3Q,IAHqB,EAIrB8rC,eAJqB,EAKrBpvB,WALqB,CAAvB;AAOD;;AACD,SAAKtgB,QAAL;AACE,aAAO23B,cAAc,CAAC1wB,OAAD,EAAUsN,cAAV,EAA0B+L,WAA1B,CAArB;;AACF,SAAKrgB,IAAL;AACE,aAAO4tC,UAAU,CAAC5mC,OAAD,EAAUsN,cAAV,EAA0B+L,WAA1B,CAAjB;;AACF,SAAKjgB,QAAL;AACE,aAAOytC,cAAc,CAAC7mC,OAAD,EAAUsN,cAAV,EAA0B+L,WAA1B,CAArB;;AACF,SAAKngB,eAAL;AACE,aAAOy0C,qBAAqB,CAAC3tC,OAAD,EAAUsN,cAAV,EAA0B+L,WAA1B,CAA5B;;AACF,SAAKpgB,eAAL;AACE,aAAO+0C,qBAAqB,CAAChuC,OAAD,EAAUsN,cAAV,EAA0B+L,WAA1B,CAA5B;;AACF,SAAK/f,aAAL;AAAoB;AAClB,YAAMqD,MAAI,GAAG2Q,cAAc,CAAC3Q,IAA5B;AACA,YAAMgyC,iBAAe,GAAGrhC,cAAc,CAAC4f,YAAvC,CAFkB;;AAIlB,YAAIub,eAAa,GAAGtmB,mBAAmB,CAACxlB,MAAD,EAAOgyC,iBAAP,CAAvC;;AACA,QAAa;AACX,cAAIrhC,cAAc,CAAC3Q,IAAf,KAAwB2Q,cAAc,CAAC0f,WAA3C,EAAwD;AACtD,gBAAMkZ,cAAc,GAAGvpC,MAAI,CAACmuB,SAA5B;;AACA,gBAAIob,cAAJ,EAAoB;AAClBv6B,cAAAA,cAAc,CACZu6B,cADY,EAEZuC,eAFY;AAGZ,oBAHY,EAIZ7rC,gBAAgB,CAACD,MAAD,CAJJ,CAAd;AAMD;AACF;AACF;;AACD8rC,QAAAA,eAAa,GAAGtmB,mBAAmB,CAACxlB,MAAI,CAACA,IAAN,EAAY8rC,eAAZ,CAAnC;AACA,eAAOlD,mBAAmB,CACxBvlC,OADwB,EAExBsN,cAFwB,EAGxB3Q,MAHwB,EAIxB8rC,eAJwB,EAKxBjD,WALwB,EAMxBnsB,WANwB,CAA1B;AAQD;;AACD,SAAK9f,mBAAL;AAA0B;AACxB,eAAOusC,yBAAyB,CAC9B9lC,OAD8B,EAE9BsN,cAF8B,EAG9BA,cAAc,CAAC3Q,IAHe,EAI9B2Q,cAAc,CAAC4f,YAJe,EAK9BsY,WAL8B,EAM9BnsB,WAN8B,CAAhC;AAQD;;AACD,SAAK5f,wBAAL;AAA+B;AAC7B,YAAMyR,WAAS,GAAGoC,cAAc,CAAC3Q,IAAjC;AACA,YAAMgyC,iBAAe,GAAGrhC,cAAc,CAAC4f,YAAvC;;AACA,YAAMub,eAAa,GACjBn7B,cAAc,CAAC0f,WAAf,KAA+B9hB,WAA/B,GACIyjC,iBADJ,GAEIxsB,mBAAmB,CAACjX,WAAD,EAAYyjC,iBAAZ,CAHzB;;AAIA,eAAO9F,6BAA6B,CAClC7oC,OADkC,EAElCsN,cAFkC,EAGlCpC,WAHkC,EAIlCu9B,eAJkC,EAKlCpvB,WALkC,CAApC;AAOD;;AACD,SAAK1f,qBAAL;AAA4B;AAC1B,eAAO0zC,2BAA2B,CAACrtC,OAAD,EAAUsN,cAAV,EAA0B+L,WAA1B,CAAlC;AACD;;AACD,SAAKzf,oBAAL;AAA2B;AACzB;AAGA;AACD;;AACD,SAAKC,cAAL;AAAqB;AACnB;AAGA;AACD;;AACD,SAAKC,KAAL;AAAY;AACV,QAAqB;AACnB,cAAMotC,KAAK,GAAG55B,cAAc,CAAC3Q,IAA7B;AACA,cAAM0L,KAAK,GAAGiF,cAAc,CAAC4f,YAA7B;AACA,iBAAO+Z,WAAW,CAACjnC,OAAD,EAAUsN,cAAV,EAA0B45B,KAA1B,EAAiC7+B,KAAjC,EAAwCgR,WAAxC,CAAlB;AACD;AAEF;;AACD,SAAKtf,kBAAL;AAAyB;AACvB,eAAOqsC,wBAAwB,CAACpmC,OAAD,EAAUsN,cAAV,EAA0B+L,WAA1B,CAA/B;AACD;;AACD,SAAKrf,qBAAL;AAA4B;AAC1B,eAAO2sC,2BAA2B,CAAC3mC,OAAD,EAAUsN,cAAV,EAA0B+L,WAA1B,CAAlC;AACD;AArKH;;AA1Oc;AAAA;AAAA,kDAqZZ/L,cAAc,CAACzQ,GArZH;AAAA;AAAA;AAuZf;;AC1xGD,SAAS+xC,UAAT,CAAoBthC,cAApB,EAA2C;AACzC;AACA;AACAA,EAAAA,cAAc,CAAC5N,KAAf,IAAwB7B,MAAxB;AACD;;AAED,SAASmpC,SAAT,CAAiB15B,cAAjB,EAAwC;AACtCA,EAAAA,cAAc,CAAC5N,KAAf,IAAwBvB,GAAxB;AACD;;AAED,IAAI0wC,iBAAJ;AACA,IAAIC,mBAAJ;AACA,IAAI5G,qBAAJ;AACA,IAAIE,gBAAJ;;AACA,IAAI1lC,gBAAJ,EAAsB;AACpB;AAEAmsC,EAAAA,iBAAiB,GAAG,UAClB5tC,MADkB,EAElBqM,cAFkB,EAGlByhC,qBAHkB,EAIlBC,QAJkB,EAKlB;AACA;AACA;AACA,QAAI1vC,IAAI,GAAGgO,cAAc,CAACzM,KAA1B;;AACA,WAAOvB,IAAI,KAAK,IAAhB,EAAsB;AACpB,UAAIA,IAAI,CAACzC,GAAL,KAAahE,aAAb,IAA8ByG,IAAI,CAACzC,GAAL,KAAa/D,QAA/C,EAAyD;AACvDiJ,QAAAA,kBAAkB,CAACd,MAAD,EAAS3B,IAAI,CAACa,SAAd,CAAlB;AACD,OAFD,MAEO,AAEA,IAAIb,IAAI,CAACzC,GAAL,KAAajE,UAAjB,EAA6B,CAA7B,MAIA,IAAI0G,IAAI,CAACuB,KAAL,KAAe,IAAnB,EAAyB;AAC9BvB,QAAAA,IAAI,CAACuB,KAAL,CAAWlB,MAAX,GAAoBL,IAApB;AACAA,QAAAA,IAAI,GAAGA,IAAI,CAACuB,KAAZ;AACA;AACD;;AACD,UAAIvB,IAAI,KAAKgO,cAAb,EAA6B;AAC3B;AACD;;AACD,aAAOhO,IAAI,CAACwB,OAAL,KAAiB,IAAxB,EAA8B;AAC5B,YAAIxB,IAAI,CAACK,MAAL,KAAgB,IAAhB,IAAwBL,IAAI,CAACK,MAAL,KAAgB2N,cAA5C,EAA4D;AAC1D;AACD;;AACDhO,QAAAA,IAAI,GAAGA,IAAI,CAACK,MAAZ;AACD;;AACDL,MAAAA,IAAI,CAACwB,OAAL,CAAanB,MAAb,GAAsBL,IAAI,CAACK,MAA3B;AACAL,MAAAA,IAAI,GAAGA,IAAI,CAACwB,OAAZ;AACD;AACF,GAnCD;;AAqCAguC,EAAAA,mBAAmB,GAAG,UAASxhC,cAAT,EAAgC;AAErD,GAFD;;AAGA46B,EAAAA,qBAAmB,GAAG,UACpBloC,OADoB,EAEpBsN,cAFoB,EAGpB3Q,IAHoB,EAIpButB,QAJoB,EAKpB6M,qBALoB,EAMpB;AACA;AACA;AACA,QAAM9M,QAAQ,GAAGjqB,OAAO,CAAC0sB,aAAzB;;AACA,QAAIzC,QAAQ,KAAKC,QAAjB,EAA2B;AACzB;AACA;AACA;AACD,KARD;AAWA;AACA;AACA;;;AACA,QAAMhqB,QAAkB,GAAGoN,cAAc,CAACnN,SAA1C;AACA,QAAM8uC,kBAAkB,GAAGzb,cAAc,EAAzC,CAfA;AAiBA;AACA;;AACA,QAAMyD,aAAa,GAAGh1B,aAAa,CACjC/B,QADiC,EAEjCvD,IAFiC,EAGjCstB,QAHiC,EAIjCC,QAJiC,EAKjC6M,qBALiC,EAMjCkY,kBANiC,CAAnC,CAnBA;;AA4BA3hC,IAAAA,cAAc,CAAC6Y,WAAf,GAA8B8Q,aAA9B,CA5BA;AA8BA;;AACA,QAAIA,aAAJ,EAAmB;AACjB2X,MAAAA,UAAU,CAACthC,cAAD,CAAV;AACD;AACF,GAxCD;;AAyCA86B,EAAAA,gBAAc,GAAG,UACfpoC,OADe,EAEfsN,cAFe,EAGf4hC,OAHe,EAIfC,OAJe,EAKf;AACA;AACA,QAAID,OAAO,KAAKC,OAAhB,EAAyB;AACvBP,MAAAA,UAAU,CAACthC,cAAD,CAAV;AACD;AACF,GAVD;AAWD,CA/FD,MA+FO,IAAI3K,mBAAJ,EAAyB;AAC9B;AAEAksC,EAAAA,iBAAiB,GAAG,UAClB5tC,MADkB,EAElBqM,cAFkB,EAGlByhC,qBAHkB,EAIlBC,QAJkB,EAKlB;AACA;AACA;AACA,QAAI1vC,IAAI,GAAGgO,cAAc,CAACzM,KAA1B;;AACA,WAAOvB,IAAI,KAAK,IAAhB,EAAsB;AACpB;AACA8vC,MAAAA,CAAU,IAAI9vC,IAAI,CAACzC,GAAL,KAAahE,aAAjB,EAAgC;AACxC,YAAIqH,QAAQ,GAAGZ,IAAI,CAACa,SAApB;;AACA,YAAI4uC,qBAAqB,IAAIC,QAA7B,EAAuC;AACrC;AACA,cAAM3mC,KAAK,GAAG/I,IAAI,CAACotB,aAAnB;AACA,cAAM/vB,IAAI,GAAG2C,IAAI,CAAC3C,IAAlB;AACAuD,UAAAA,QAAQ,GAAGsF,mBAAmB,CAACtF,QAAD,EAAWvD,IAAX,EAAiB0L,KAAjB,EAAwB/I,IAAxB,CAA9B;AACD;;AACDyC,QAAAA,kBAAkB,CAACd,MAAD,EAASf,QAAT,CAAlB;AACD,OATS,MASH,IAAIZ,IAAI,CAACzC,GAAL,KAAa/D,QAAjB,EAA2B;AAChC,YAAIoH,SAAQ,GAAGZ,IAAI,CAACa,SAApB;;AACA,YAAI4uC,qBAAqB,IAAIC,QAA7B,EAAuC;AACrC;AACA,cAAM9Y,IAAI,GAAG52B,IAAI,CAACotB,aAAlB;AACAxsB,UAAAA,SAAQ,GAAGuF,uBAAuB,CAACvF,SAAD,EAAWg2B,IAAX,EAAiB52B,IAAjB,CAAlC;AACD;;AACDyC,QAAAA,kBAAkB,CAACd,MAAD,EAASf,SAAT,CAAlB;AACD,OARM,MAQA,AASA,IAAIZ,IAAI,CAACzC,GAAL,KAAajE,UAAjB,EAA6B,CAA7B,MAIA,IAAI0G,IAAI,CAACzC,GAAL,KAAaxD,iBAAjB,EAAoC;AACzC,YAAI,CAACiG,IAAI,CAACI,KAAL,GAAa7B,MAAd,MAA0BH,OAA9B,EAAuC;AACrC;AACA,cAAM2xC,WAAW,GAAG/vC,IAAI,CAACumB,aAAL,KAAuB,IAA3C;;AACA,cAAIwpB,WAAJ,EAAiB;AACf,gBAAMC,kBAAkB,GAAGhwC,IAAI,CAACuB,KAAhC;;AACA,gBAAIyuC,kBAAkB,KAAK,IAA3B,EAAiC;AAC/B,kBAAIA,kBAAkB,CAACzuC,KAAnB,KAA6B,IAAjC,EAAuC;AACrCyuC,gBAAAA,kBAAkB,CAACzuC,KAAnB,CAAyBlB,MAAzB,GAAkC2vC,kBAAlC;AACAT,gBAAAA,iBAAiB,CACf5tC,MADe,EAEfquC,kBAFe,EAGf,IAHe,EAIfD,WAJe,CAAjB;AAMD;;AACD,kBAAME,mBAAmB,GAAGD,kBAAkB,CAACxuC,OAA/C;;AACA,kBAAIyuC,mBAAmB,KAAK,IAA5B,EAAkC;AAChCA,gBAAAA,mBAAmB,CAAC5vC,MAApB,GAA6BL,IAA7B;AACAA,gBAAAA,IAAI,GAAGiwC,mBAAP;AACA;AACD;AACF;AACF;AACF;;AACD,YAAIjwC,IAAI,CAACuB,KAAL,KAAe,IAAnB,EAAyB;AACvB;AACAvB,UAAAA,IAAI,CAACuB,KAAL,CAAWlB,MAAX,GAAoBL,IAApB;AACAA,UAAAA,IAAI,GAAGA,IAAI,CAACuB,KAAZ;AACA;AACD;AACF,OA/BM,MA+BA,IAAIvB,IAAI,CAACuB,KAAL,KAAe,IAAnB,EAAyB;AAC9BvB,QAAAA,IAAI,CAACuB,KAAL,CAAWlB,MAAX,GAAoBL,IAApB;AACAA,QAAAA,IAAI,GAAGA,IAAI,CAACuB,KAAZ;AACA;AACD,OAnEmB;;;AAqEpBvB,MAAAA,IAAI,GAAIA,IAAR;;AACA,UAAIA,IAAI,KAAKgO,cAAb,EAA6B;AAC3B;AACD;;AACD,aAAOhO,IAAI,CAACwB,OAAL,KAAiB,IAAxB,EAA8B;AAC5B,YAAIxB,IAAI,CAACK,MAAL,KAAgB,IAAhB,IAAwBL,IAAI,CAACK,MAAL,KAAgB2N,cAA5C,EAA4D;AAC1D;AACD;;AACDhO,QAAAA,IAAI,GAAGA,IAAI,CAACK,MAAZ;AACD;;AACDL,MAAAA,IAAI,CAACwB,OAAL,CAAanB,MAAb,GAAsBL,IAAI,CAACK,MAA3B;AACAL,MAAAA,IAAI,GAAGA,IAAI,CAACwB,OAAZ;AACD;AACF,GA3FD,CAH8B;;;AAiG9B,MAAM0uC,4BAA4B,GAAG,UACnCC,iBADmC,EAEnCniC,cAFmC,EAGnCyhC,qBAHmC,EAInCC,QAJmC,EAKnC;AACA;AACA;AACA,QAAI1vC,IAAI,GAAGgO,cAAc,CAACzM,KAA1B;;AACA,WAAOvB,IAAI,KAAK,IAAhB,EAAsB;AACpB;AACA8vC,MAAAA,CAAU,IAAI9vC,IAAI,CAACzC,GAAL,KAAahE,aAAjB,EAAgC;AACxC,YAAIqH,QAAQ,GAAGZ,IAAI,CAACa,SAApB;;AACA,YAAI4uC,qBAAqB,IAAIC,QAA7B,EAAuC;AACrC;AACA,cAAM3mC,KAAK,GAAG/I,IAAI,CAACotB,aAAnB;AACA,cAAM/vB,IAAI,GAAG2C,IAAI,CAAC3C,IAAlB;AACAuD,UAAAA,QAAQ,GAAGsF,mBAAmB,CAACtF,QAAD,EAAWvD,IAAX,EAAiB0L,KAAjB,EAAwB/I,IAAxB,CAA9B;AACD;;AACD+F,QAAAA,8BAA8B,CAACoqC,iBAAD,EAAoBvvC,QAApB,CAA9B;AACD,OATS,MASH,IAAIZ,IAAI,CAACzC,GAAL,KAAa/D,QAAjB,EAA2B;AAChC,YAAIoH,UAAQ,GAAGZ,IAAI,CAACa,SAApB;;AACA,YAAI4uC,qBAAqB,IAAIC,QAA7B,EAAuC;AACrC;AACA,cAAM9Y,IAAI,GAAG52B,IAAI,CAACotB,aAAlB;AACAxsB,UAAAA,UAAQ,GAAGuF,uBAAuB,CAACvF,UAAD,EAAWg2B,IAAX,EAAiB52B,IAAjB,CAAlC;AACD;;AACD+F,QAAAA,8BAA8B,CAACoqC,iBAAD,EAAoBvvC,UAApB,CAA9B;AACD,OARM,MAQA,AASA,IAAIZ,IAAI,CAACzC,GAAL,KAAajE,UAAjB,EAA6B,CAA7B,MAIA,IAAI0G,IAAI,CAACzC,GAAL,KAAaxD,iBAAjB,EAAoC;AACzC,YAAI,CAACiG,IAAI,CAACI,KAAL,GAAa7B,MAAd,MAA0BH,OAA9B,EAAuC;AACrC;AACA,cAAM2xC,WAAW,GAAG/vC,IAAI,CAACumB,aAAL,KAAuB,IAA3C;;AACA,cAAIwpB,WAAJ,EAAiB;AACf,gBAAMC,kBAAkB,GAAGhwC,IAAI,CAACuB,KAAhC;;AACA,gBAAIyuC,kBAAkB,KAAK,IAA3B,EAAiC;AAC/B,kBAAIA,kBAAkB,CAACzuC,KAAnB,KAA6B,IAAjC,EAAuC;AACrCyuC,gBAAAA,kBAAkB,CAACzuC,KAAnB,CAAyBlB,MAAzB,GAAkC2vC,kBAAlC;AACAE,gBAAAA,4BAA4B,CAC1BC,iBAD0B,EAE1BH,kBAF0B,EAG1B,IAH0B,EAI1BD,WAJ0B,CAA5B;AAMD;;AACD,kBAAME,mBAAmB,GAAGD,kBAAkB,CAACxuC,OAA/C;;AACA,kBAAIyuC,mBAAmB,KAAK,IAA5B,EAAkC;AAChCA,gBAAAA,mBAAmB,CAAC5vC,MAApB,GAA6BL,IAA7B;AACAA,gBAAAA,IAAI,GAAGiwC,mBAAP;AACA;AACD;AACF;AACF;AACF;;AACD,YAAIjwC,IAAI,CAACuB,KAAL,KAAe,IAAnB,EAAyB;AACvB;AACAvB,UAAAA,IAAI,CAACuB,KAAL,CAAWlB,MAAX,GAAoBL,IAApB;AACAA,UAAAA,IAAI,GAAGA,IAAI,CAACuB,KAAZ;AACA;AACD;AACF,OA/BM,MA+BA,IAAIvB,IAAI,CAACuB,KAAL,KAAe,IAAnB,EAAyB;AAC9BvB,QAAAA,IAAI,CAACuB,KAAL,CAAWlB,MAAX,GAAoBL,IAApB;AACAA,QAAAA,IAAI,GAAGA,IAAI,CAACuB,KAAZ;AACA;AACD,OAnEmB;;;AAqEpBvB,MAAAA,IAAI,GAAIA,IAAR;;AACA,UAAIA,IAAI,KAAKgO,cAAb,EAA6B;AAC3B;AACD;;AACD,aAAOhO,IAAI,CAACwB,OAAL,KAAiB,IAAxB,EAA8B;AAC5B,YAAIxB,IAAI,CAACK,MAAL,KAAgB,IAAhB,IAAwBL,IAAI,CAACK,MAAL,KAAgB2N,cAA5C,EAA4D;AAC1D;AACD;;AACDhO,QAAAA,IAAI,GAAGA,IAAI,CAACK,MAAZ;AACD;;AACDL,MAAAA,IAAI,CAACwB,OAAL,CAAanB,MAAb,GAAsBL,IAAI,CAACK,MAA3B;AACAL,MAAAA,IAAI,GAAGA,IAAI,CAACwB,OAAZ;AACD;AACF,GA3FD;;AA4FAguC,EAAAA,mBAAmB,GAAG,UAASxhC,cAAT,EAAgC;AACpD,QAAMoiC,YAIL,GAAGpiC,cAAc,CAACnN,SAJnB;AAKA,QAAMwvC,iBAAiB,GAAGriC,cAAc,CAACwhB,WAAf,KAA+B,IAAzD;;AACA,QAAI6gB,iBAAJ,EAAuB,CAAvB,MAEO;AACL,UAAMC,SAAS,GAAGF,YAAY,CAACnf,aAA/B;AACA,UAAMsf,WAAW,GAAGzqC,uBAAuB,CAACwqC,SAAD,CAA3C,CAFK;;AAILJ,MAAAA,4BAA4B,CAACK,WAAD,EAAcviC,cAAd,EAA8B,KAA9B,EAAqC,KAArC,CAA5B;AACAoiC,MAAAA,YAAY,CAACI,eAAb,GAA+BD,WAA/B,CALK;;AAOLjB,MAAAA,UAAU,CAACthC,cAAD,CAAV;AACAhI,MAAAA,yBAAyB,CAACsqC,SAAD,EAAYC,WAAZ,CAAzB;AACD;AACF,GAnBD;;AAoBA3H,EAAAA,qBAAmB,GAAG,UACpBloC,OADoB,EAEpBsN,cAFoB,EAGpB3Q,IAHoB,EAIpButB,QAJoB,EAKpB6M,qBALoB,EAMpB;AACA,QAAMgZ,eAAe,GAAG/vC,OAAO,CAACG,SAAhC;AACA,QAAM8pB,QAAQ,GAAGjqB,OAAO,CAAC0sB,aAAzB,CAFA;AAIA;;AACA,QAAMijB,iBAAiB,GAAGriC,cAAc,CAACwhB,WAAf,KAA+B,IAAzD;;AACA,QAAI6gB,iBAAiB,IAAI1lB,QAAQ,KAAKC,QAAtC,EAAgD;AAC9C;AACA;AACA5c,MAAAA,cAAc,CAACnN,SAAf,GAA2B4vC,eAA3B;AACA;AACD;;AACD,QAAMC,kBAA4B,GAAG1iC,cAAc,CAACnN,SAApD;AACA,QAAM8uC,kBAAkB,GAAGzb,cAAc,EAAzC;AACA,QAAIyD,aAAa,GAAG,IAApB;;AACA,QAAIhN,QAAQ,KAAKC,QAAjB,EAA2B;AACzB+M,MAAAA,aAAa,GAAGh1B,aAAa,CAC3B+tC,kBAD2B,EAE3BrzC,IAF2B,EAG3BstB,QAH2B,EAI3BC,QAJ2B,EAK3B6M,qBAL2B,EAM3BkY,kBAN2B,CAA7B;AAQD;;AACD,QAAIU,iBAAiB,IAAI1Y,aAAa,KAAK,IAA3C,EAAiD;AAC/C;AACA;AACA3pB,MAAAA,cAAc,CAACnN,SAAf,GAA2B4vC,eAA3B;AACA;AACD;;AACD,QAAME,WAAW,GAAG9qC,aAAa,CAC/B4qC,eAD+B,EAE/B9Y,aAF+B,EAG/Bt6B,IAH+B,EAI/BstB,QAJ+B,EAK/BC,QAL+B,EAM/B5c,cAN+B,EAO/BqiC,iBAP+B,EAQ/BK,kBAR+B,CAAjC;;AAUA,QACEhuC,uBAAuB,CACrBiuC,WADqB,EAErBtzC,IAFqB,EAGrButB,QAHqB,EAIrB6M,qBAJqB,EAKrBkY,kBALqB,CADzB,EAQE;AACAL,MAAAA,UAAU,CAACthC,cAAD,CAAV;AACD;;AACDA,IAAAA,cAAc,CAACnN,SAAf,GAA2B8vC,WAA3B;;AACA,QAAIN,iBAAJ,EAAuB;AACrB;AACA;AACA;AACAf,MAAAA,UAAU,CAACthC,cAAD,CAAV;AACD,KALD,MAKO;AACL;AACAuhC,MAAAA,iBAAiB,CAACoB,WAAD,EAAc3iC,cAAd,EAA8B,KAA9B,EAAqC,KAArC,CAAjB;AACD;AACF,GApED;;AAqEA86B,EAAAA,gBAAc,GAAG,UACfpoC,OADe,EAEfsN,cAFe,EAGf4hC,OAHe,EAIfC,OAJe,EAKf;AACA,QAAID,OAAO,KAAKC,OAAhB,EAAyB;AACvB;AACA,UAAMpY,qBAAqB,GAAG7D,oBAAoB,EAAlD;AACA,UAAM+b,kBAAkB,GAAGzb,cAAc,EAAzC;AACAlmB,MAAAA,cAAc,CAACnN,SAAf,GAA2BgC,kBAAkB,CAC3CgtC,OAD2C,EAE3CpY,qBAF2C,EAG3CkY,kBAH2C,EAI3C3hC,cAJ2C,CAA7C,CAJuB;AAWvB;;AACAshC,MAAAA,UAAU,CAACthC,cAAD,CAAV;AACD,KAbD,MAaO;AACLA,MAAAA,cAAc,CAACnN,SAAf,GAA2BH,OAAO,CAACG,SAAnC;AACD;AACF,GAtBD;AAuBD,CA7SM,MA6SA;AACL;AACA2uC,EAAAA,mBAAmB,GAAG,UAASxhC,cAAT,EAAgC;AAErD,GAFD;;AAGA46B,EAAAA,qBAAmB,GAAG,UACpBloC,OADoB,EAEpBsN,cAFoB,EAGpB3Q,IAHoB,EAIpButB,QAJoB,EAKpB6M,qBALoB,EAMpB;AAED,GARD;;AASAqR,EAAAA,gBAAc,GAAG,UACfpoC,OADe,EAEfsN,cAFe,EAGf4hC,OAHe,EAIfC,OAJe,EAKf;AAED,GAPD;AAQD;;AAED,SAASe,kBAAT,CACE/C,WADF,EAEEgD,wBAFF,EAGE;AACA,MAAI5Y,cAAc,EAAlB,EAAsB;AACpB;AACA;AACA;AACD;;AACD,UAAQ4V,WAAW,CAACV,QAApB;AACE,SAAK,QAAL;AAAe;AACb;AACA;AACA;AACA;AACA;AACA,YAAI2D,QAAQ,GAAGjD,WAAW,CAACF,IAA3B;AACA,YAAIoD,YAAY,GAAG,IAAnB;;AACA,eAAOD,QAAQ,KAAK,IAApB,EAA0B;AACxB,cAAIA,QAAQ,CAAC5wC,SAAT,KAAuB,IAA3B,EAAiC;AAC/B6wC,YAAAA,YAAY,GAAGD,QAAf;AACD;;AACDA,UAAAA,QAAQ,GAAGA,QAAQ,CAACtvC,OAApB;AACD,SAbY;AAeb;;;AACA,YAAIuvC,YAAY,KAAK,IAArB,EAA2B;AACzB;AACAlD,UAAAA,WAAW,CAACF,IAAZ,GAAmB,IAAnB;AACD,SAHD,MAGO;AACL;AACA;AACAoD,UAAAA,YAAY,CAACvvC,OAAb,GAAuB,IAAvB;AACD;;AACD;AACD;;AACD,SAAK,WAAL;AAAkB;AAChB;AACA;AACA;AACA;AACA;AACA,YAAIsvC,SAAQ,GAAGjD,WAAW,CAACF,IAA3B;AACA,YAAIoD,aAAY,GAAG,IAAnB;;AACA,eAAOD,SAAQ,KAAK,IAApB,EAA0B;AACxB,cAAIA,SAAQ,CAAC5wC,SAAT,KAAuB,IAA3B,EAAiC;AAC/B6wC,YAAAA,aAAY,GAAGD,SAAf;AACD;;AACDA,UAAAA,SAAQ,GAAGA,SAAQ,CAACtvC,OAApB;AACD,SAbe;AAehB;;;AACA,YAAIuvC,aAAY,KAAK,IAArB,EAA2B;AACzB;AACA,cAAI,CAACF,wBAAD,IAA6BhD,WAAW,CAACF,IAAZ,KAAqB,IAAtD,EAA4D;AAC1D;AACA;AACAE,YAAAA,WAAW,CAACF,IAAZ,CAAiBnsC,OAAjB,GAA2B,IAA3B;AACD,WAJD,MAIO;AACLqsC,YAAAA,WAAW,CAACF,IAAZ,GAAmB,IAAnB;AACD;AACF,SATD,MASO;AACL;AACA;AACAoD,UAAAA,aAAY,CAACvvC,OAAb,GAAuB,IAAvB;AACD;;AACD;AACD;AA1DH;AA4DD;;AAED,SAASwvC,YAAT,CACEtwC,OADF,EAEEsN,cAFF,EAGE+L,WAHF,EAIgB;AACd,MAAM6Q,QAAQ,GAAG5c,cAAc,CAAC4f,YAAhC;;AAEA,UAAQ5f,cAAc,CAACzQ,GAAvB;AACE,SAAKnE,sBAAL;AACA,SAAKc,aAAL;AACA,SAAKD,mBAAL;AACA,SAAKf,iBAAL;AACA,SAAKW,UAAL;AACA,SAAKJ,QAAL;AACA,SAAKC,IAAL;AACA,SAAKI,QAAL;AACA,SAAKH,eAAL;AACA,SAAKK,aAAL;AACE,aAAO,IAAP;;AACF,SAAKb,cAAL;AAAqB;AACnB,YAAMyS,SAAS,GAAGoC,cAAc,CAAC3Q,IAAjC;;AACA,YAAI4qC,iBAAuB,CAACr8B,SAAD,CAA3B,EAAwC;AACtCqlC,UAAAA,UAAgB,CAACjjC,cAAD,CAAhB;AACD;;AACD,eAAO,IAAP;AACD;;AACD,SAAK3U,QAAL;AAAe;AACb46B,QAAAA,gBAAgB,CAACjmB,cAAD,CAAhB;AACAkjC,QAAAA,wBAA8B,CAACljC,cAAD,CAA9B;AACAmjC,QAAAA,2BAAwC;AACxC,YAAMC,SAAS,GAAIpjC,cAAc,CAACnN,SAAlC;;AACA,YAAIuwC,SAAS,CAAC7I,cAAd,EAA8B;AAC5B6I,UAAAA,SAAS,CAAC3zC,OAAV,GAAoB2zC,SAAS,CAAC7I,cAA9B;AACA6I,UAAAA,SAAS,CAAC7I,cAAV,GAA2B,IAA3B;AACD;;AACD,YAAI7nC,OAAO,KAAK,IAAZ,IAAoBA,OAAO,CAACa,KAAR,KAAkB,IAA1C,EAAgD;AAC9C;AACA;AACA,cAAM8vC,WAAW,GAAGtZ,iBAAiB,CAAC/pB,cAAD,CAArC;;AACA,cAAIqjC,WAAJ,EAAiB;AACf;AACA;AACA/B,YAAAA,UAAU,CAACthC,cAAD,CAAV;AACD,WAJD,MAIO,IAAI,CAACojC,SAAS,CAAC1I,OAAf,EAAwB;AAC7B;AACA;AACA;AACA;AACA16B,YAAAA,cAAc,CAAC5N,KAAf,IAAwBtB,QAAxB;AACD;AACF;;AACD0wC,QAAAA,mBAAmB,CAACxhC,cAAD,CAAnB;AACA,eAAO,IAAP;AACD;;AACD,SAAKzU,aAAL;AAAoB;AAClB66B,QAAAA,cAAc,CAACpmB,cAAD,CAAd;AACA,YAAMypB,qBAAqB,GAAG7D,oBAAoB,EAAlD;AACA,YAAMv2B,IAAI,GAAG2Q,cAAc,CAAC3Q,IAA5B;;AACA,YAAIqD,OAAO,KAAK,IAAZ,IAAoBsN,cAAc,CAACnN,SAAf,IAA4B,IAApD,EAA0D;AACxD+nC,UAAAA,qBAAmB,CACjBloC,OADiB,EAEjBsN,cAFiB,EAGjB3Q,IAHiB,EAIjButB,QAJiB,EAKjB6M,qBALiB,CAAnB;;AAQA,cAAI/2B,OAAO,CAAC+tB,GAAR,KAAgBzgB,cAAc,CAACygB,GAAnC,EAAwC;AACtCiZ,YAAAA,SAAO,CAAC15B,cAAD,CAAP;AACD;AACF,SAZD,MAYO;AACL,cAAI,CAAC4c,QAAL,EAAe;AAAA,kBAEX5c,cAAc,CAACnN,SAAf,KAA6B,IAFlB;AAAA;AAAA;AAAA;AAAA;;;AAOb,mBAAO,IAAP;AACD;;AAED,cAAM8uC,kBAAkB,GAAGzb,cAAc,EAAzC,CAXK;AAaL;AACA;AACA;;AACA,cAAMmd,YAAW,GAAGtZ,iBAAiB,CAAC/pB,cAAD,CAArC;;AACA,cAAIqjC,YAAJ,EAAiB;AACf;AACA;AACA,gBACE7Z,4BAA4B,CAC1BxpB,cAD0B,EAE1BypB,qBAF0B,EAG1BkY,kBAH0B,CAD9B,EAME;AACA;AACA;AACAL,cAAAA,UAAU,CAACthC,cAAD,CAAV;AACD;AACF,WAdD,MAcO;AACL,gBAAMpN,QAAQ,GAAG4B,cAAc,CAC7BnF,IAD6B,EAE7ButB,QAF6B,EAG7B6M,qBAH6B,EAI7BkY,kBAJ6B,EAK7B3hC,cAL6B,CAA/B;AAQAuhC,YAAAA,iBAAiB,CAAC3uC,QAAD,EAAWoN,cAAX,EAA2B,KAA3B,EAAkC,KAAlC,CAAjB;AAEAA,YAAAA,cAAc,CAACnN,SAAf,GAA2BD,QAA3B,CAXK;AAcL;AACA;;AACA,gBACE8B,uBAAuB,CACrB9B,QADqB,EAErBvD,IAFqB,EAGrButB,QAHqB,EAIrB6M,qBAJqB,EAKrBkY,kBALqB,CADzB,EAQE;AACAL,cAAAA,UAAU,CAACthC,cAAD,CAAV;AACD;AACF;;AAED,cAAIA,cAAc,CAACygB,GAAf,KAAuB,IAA3B,EAAiC;AAC/B;AACAiZ,YAAAA,SAAO,CAAC15B,cAAD,CAAP;AACD;AACF;;AACD,eAAO,IAAP;AACD;;AACD,SAAKxU,QAAL;AAAe;AACb,YAAMq2C,OAAO,GAAGjlB,QAAhB;;AACA,YAAIlqB,OAAO,IAAIsN,cAAc,CAACnN,SAAf,IAA4B,IAA3C,EAAiD;AAC/C,cAAM+uC,OAAO,GAAGlvC,OAAO,CAAC0sB,aAAxB,CAD+C;AAG/C;;AACA0b,UAAAA,gBAAc,CAACpoC,OAAD,EAAUsN,cAAV,EAA0B4hC,OAA1B,EAAmCC,OAAnC,CAAd;AACD,SALD,MAKO;AACL,cAAI,OAAOA,OAAP,KAAmB,QAAvB,EAAiC;AAAA,kBAE7B7hC,cAAc,CAACnN,SAAf,KAA6B,IAFA;AAAA;AAAA;AAAA;AAAA;;AAOhC;;AACD,cAAM42B,sBAAqB,GAAG7D,oBAAoB,EAAlD;;AACA,cAAM+b,mBAAkB,GAAGzb,cAAc,EAAzC;;AACA,cAAMmd,aAAW,GAAGtZ,iBAAiB,CAAC/pB,cAAD,CAArC;;AACA,cAAIqjC,aAAJ,EAAiB;AACf,gBAAIzZ,gCAAgC,CAAC5pB,cAAD,CAApC,EAAsD;AACpDshC,cAAAA,UAAU,CAACthC,cAAD,CAAV;AACD;AACF,WAJD,MAIO;AACLA,YAAAA,cAAc,CAACnN,SAAf,GAA2BgC,kBAAkB,CAC3CgtC,OAD2C,EAE3CpY,sBAF2C,EAG3CkY,mBAH2C,EAI3C3hC,cAJ2C,CAA7C;AAMD;AACF;;AACD,eAAO,IAAP;AACD;;AACD,SAAKjU,iBAAL;AAAwB;AACtBo7B,QAAAA,kBAAkB,CAACnnB,cAAD,CAAlB;AACA,YAAMyZ,SAA+B,GAAGzZ,cAAc,CAACuY,aAAvD;;AAEA,QAAkC;AAChC,cAAIkB,SAAS,KAAK,IAAd,IAAsBA,SAAS,CAAC6N,UAAV,KAAyB,IAAnD,EAAyD;AACvD,gBAAI50B,OAAO,KAAK,IAAhB,EAAsB;AACpB,kBAAM2wC,aAAW,GAAGtZ,iBAAiB,CAAC/pB,cAAD,CAArC;;AADoB,mBAGlBqjC,aAHkB;AAAA;AAAA;AAAA;AAAA;;AAOpBxZ,cAAAA,oCAAoC,CAAC7pB,cAAD,CAApC;;AACA,cAA4B;AAC1Bm5B,gBAAAA,eAAe,CAAClzB,aAAD,CAAf;AACD;;AACD,qBAAO,IAAP;AACD,aAZD,MAYO;AACL;AACA;AACA;AACA+jB,cAAAA,mBAAmB;;AACnB,kBAAI,CAAChqB,cAAc,CAAC5N,KAAf,GAAuBxB,UAAxB,MAAwCR,OAA5C,EAAqD;AACnD;AACA4P,gBAAAA,cAAc,CAACuY,aAAf,GAA+B,IAA/B;AACD,eARI;AAUL;AACA;AACA;AACA;;;AACAvY,cAAAA,cAAc,CAAC5N,KAAf,IAAwB7B,MAAxB;AACA,qBAAO,IAAP;AACD;AACF;AACF;;AAED,YAAI,CAACyP,cAAc,CAAC5N,KAAf,GAAuBxB,UAAxB,MAAwCR,OAA5C,EAAqD;AACnD;AACA4P,UAAAA,cAAc,CAACyG,KAAf,GAAuBsF,WAAvB,CAFmD;;AAInD,cACEva,CACA,CAACwO,cAAc,CAACsS,IAAf,GAAsBpC,WAAvB,MAAwCJ,MAF1C,EAGE;AACAknB,YAAAA,sBAAsB,CAACh3B,cAAD,CAAtB;AACD;;AACD,iBAAOA,cAAP;AACD;;AAED,YAAMsjC,cAAc,GAAG7pB,SAAS,KAAK,IAArC;AACA,YAAI8pB,cAAc,GAAG,KAArB;;AACA,YAAI7wC,OAAO,KAAK,IAAhB,EAAsB;AACpB,cAAIsN,cAAc,CAACof,aAAf,CAA6BmI,QAA7B,KAA0C5rB,SAA9C,EAAyD;AACvDouB,YAAAA,iBAAiB,CAAC/pB,cAAD,CAAjB;AACD;AACF,SAJD,MAIO;AACL,cAAMuZ,SAA+B,GAAG7mB,OAAO,CAAC6lB,aAAhD;AACAgrB,UAAAA,cAAc,GAAGhqB,SAAS,KAAK,IAA/B;AACD;;AAED,YAAI+pB,cAAc,IAAI,CAACC,cAAvB,EAAuC;AACrC;AACA;AACA;AACA;AACA;AACA,cAAI,CAACvjC,cAAc,CAACsS,IAAf,GAAsBtC,YAAvB,MAAyCF,MAA7C,EAAqD;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAM0zB,wBAAwB,GAC5B9wC,OAAO,KAAK,IAAZ,IACAsN,cAAc,CAACof,aAAf,CAA6BoI,0BAA7B,KAA4D,IAF9D;;AAGA,gBACEgc,wBAAwB,IACxB9c,kBAAkB,CAChBD,mBAAmB,CAAC/zB,OADJ,EAEf6zB,8BAFe,CAFpB,EAME;AACA;AACA;AACAkd,cAAAA,gBAAgB;AACjB,aAVD,MAUO;AACL;AACA;AACAnF,cAAAA,+BAA+B;AAChC;AACF;AACF;;AAED,YAAIjpC,mBAAJ,EAAyB;AACvB;AACA,cAAIiuC,cAAJ,EAAoB;AAClB;AACA;AACA;AACAtjC,YAAAA,cAAc,CAAC5N,KAAf,IAAwB7B,MAAxB;AACD;AACF;;AACD,YAAI6E,gBAAJ,EAAsB;AACpB;AACA,cAAIkuC,cAAc,IAAIC,cAAtB,EAAsC;AACpC;AACA;AACA;AACA;AACA;AACAvjC,YAAAA,cAAc,CAAC5N,KAAf,IAAwB7B,MAAxB;AACD;AACF;;AASD,eAAO,IAAP;AACD;;AACD,SAAKjF,UAAL;AACE26B,MAAAA,gBAAgB,CAACjmB,cAAD,CAAhB;AACAwhC,MAAAA,mBAAmB,CAACxhC,cAAD,CAAnB;;AACA,UAAItN,OAAO,KAAK,IAAhB,EAAsB;AACpBuD,QAAAA,kBAAkB,CAAC+J,cAAc,CAACnN,SAAf,CAAyBowB,aAA1B,CAAlB;AACD;;AACD,aAAO,IAAP;;AACF,SAAKr3B,eAAL;AACE;AACAsqB,MAAAA,WAAW,CAAClW,cAAD,CAAX;AACA,aAAO,IAAP;;AACF,SAAK7T,wBAAL;AAA+B;AAC7B;AACA;AACA,YAAMyR,UAAS,GAAGoC,cAAc,CAAC3Q,IAAjC;;AACA,YAAI4qC,iBAAuB,CAACr8B,UAAD,CAA3B,EAAwC;AACtCqlC,UAAAA,UAAgB,CAACjjC,cAAD,CAAhB;AACD;;AACD,eAAO,IAAP;AACD;;AACD,SAAK3T,qBAAL;AAA4B;AAC1B86B,QAAAA,kBAAkB,CAACnnB,cAAD,CAAlB;AAEA,YAAM6/B,WAA2C,GAC/C7/B,cAAc,CAACuY,aADjB;;AAGA,YAAIsnB,WAAW,KAAK,IAApB,EAA0B;AACxB;AACA;AACA,iBAAO,IAAP;AACD;;AAED,YAAI6D,iBAAiB,GAAG,CAAC1jC,cAAc,CAAC5N,KAAf,GAAuBxB,UAAxB,MAAwCR,OAAhE;AAEA,YAAMuzC,YAAY,GAAG9D,WAAW,CAACjuB,SAAjC;;AACA,YAAI+xB,YAAY,KAAK,IAArB,EAA2B;AACzB;AACA,cAAI,CAACD,iBAAL,EAAwB;AACtB;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA,gBAAME,iBAAiB,GACrBC,wBAAwB,OACvBnxC,OAAO,KAAK,IAAZ,IAAoB,CAACA,OAAO,CAACN,KAAR,GAAgBxB,UAAjB,MAAiCR,OAD9B,CAD1B;;AAGA,gBAAI,CAACwzC,iBAAL,EAAwB;AACtB,kBAAIlc,GAAG,GAAG1nB,cAAc,CAACzM,KAAzB;;AACA,qBAAOm0B,GAAG,KAAK,IAAf,EAAqB;AACnB,oBAAMoc,SAAS,GAAGrc,kBAAkB,CAACC,GAAD,CAApC;;AACA,oBAAIoc,SAAS,KAAK,IAAlB,EAAwB;AACtBJ,kBAAAA,iBAAiB,GAAG,IAApB;AACA1jC,kBAAAA,cAAc,CAAC5N,KAAf,IAAwBxB,UAAxB;AACAgyC,kBAAAA,kBAAkB,CAAC/C,WAAD,EAAc,KAAd,CAAlB,CAHsB;AAMtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,sBAAMkE,aAAa,GAAGD,SAAS,CAACjrB,WAAhC;;AACA,sBAAIkrB,aAAa,KAAK,IAAtB,EAA4B;AAC1B/jC,oBAAAA,cAAc,CAAC6Y,WAAf,GAA6BkrB,aAA7B;AACA/jC,oBAAAA,cAAc,CAAC5N,KAAf,IAAwB7B,MAAxB;AACD,mBArBqB;AAwBtB;AACA;;;AACA,sBAAIsvC,WAAW,CAACve,UAAZ,KAA2B,IAA/B,EAAqC;AACnCthB,oBAAAA,cAAc,CAACwhB,WAAf,GAA6B,IAA7B;AACD;;AACDxhB,kBAAAA,cAAc,CAACshB,UAAf,GAA4Bue,WAAW,CAACve,UAAxC,CA7BsB;;AA+BtBgE,kBAAAA,gBAAgB,CAACtlB,cAAD,EAAiB+L,WAAjB,CAAhB,CA/BsB;AAkCtB;;AACAkb,kBAAAA,mBAAmB,CACjBjnB,cADiB,EAEjB6mB,yBAAyB,CACvBJ,mBAAmB,CAAC/zB,OADG,EAEvB8zB,qBAFuB,CAFR,CAAnB;AAOA,yBAAOxmB,cAAc,CAACzM,KAAtB;AACD;;AACDm0B,gBAAAA,GAAG,GAAGA,GAAG,CAACl0B,OAAV;AACD;AACF;;AAED,gBAAIqsC,WAAW,CAACF,IAAZ,KAAqB,IAArB,IAA6B1qC,KAAG,KAAK+uC,mBAAmB,EAA5D,EAAgE;AAC9D;AACA;AACA;AACAhkC,cAAAA,cAAc,CAAC5N,KAAf,IAAwBxB,UAAxB;AACA8yC,cAAAA,iBAAiB,GAAG,IAApB;AAEAd,cAAAA,kBAAkB,CAAC/C,WAAD,EAAc,KAAd,CAAlB,CAP8D;AAU9D;AACA;AACA;AACA;AACA;AACA;AACA;;AACA7/B,cAAAA,cAAc,CAACyG,KAAf,GAAuBb,aAAvB;;AACA,cAA4B;AAC1BuzB,gBAAAA,eAAe,CAACvzB,aAAD,CAAf;AACD;AACF;AACF,WAzFD,MAyFO;AACLg9B,YAAAA,kBAAkB,CAAC/C,WAAD,EAAc,KAAd,CAAlB;AACD,WA7FwB;;AA+F1B,SA/FD,MA+FO;AACL;AACA,cAAI,CAAC6D,iBAAL,EAAwB;AACtB,gBAAMI,UAAS,GAAGrc,kBAAkB,CAACkc,YAAD,CAApC;;AACA,gBAAIG,UAAS,KAAK,IAAlB,EAAwB;AACtB9jC,cAAAA,cAAc,CAAC5N,KAAf,IAAwBxB,UAAxB;AACA8yC,cAAAA,iBAAiB,GAAG,IAApB,CAFsB;AAKtB;;AACA,kBAAMK,cAAa,GAAGD,UAAS,CAACjrB,WAAhC;;AACA,kBAAIkrB,cAAa,KAAK,IAAtB,EAA4B;AAC1B/jC,gBAAAA,cAAc,CAAC6Y,WAAf,GAA6BkrB,cAA7B;AACA/jC,gBAAAA,cAAc,CAAC5N,KAAf,IAAwB7B,MAAxB;AACD;;AAEDqyC,cAAAA,kBAAkB,CAAC/C,WAAD,EAAc,IAAd,CAAlB,CAZsB;;AActB,kBACEA,WAAW,CAACF,IAAZ,KAAqB,IAArB,IACAE,WAAW,CAACV,QAAZ,KAAyB,QADzB,IAEA,CAACwE,YAAY,CAACzxC,SAFd,IAGA,CAAC+3B,cAAc,EAJjB;AAAA,gBAKE;AACA;AACA;AACA;AACA,sBAAM3I,UAAU,GAAIthB,cAAc,CAACshB,UAAf,GAClBue,WAAW,CAACve,UADd,CAJA;;AAOA,sBAAIA,UAAU,KAAK,IAAnB,EAAyB;AACvBA,oBAAAA,UAAU,CAACC,UAAX,GAAwB,IAAxB;AACD,mBATD;;;AAWA,yBAAO,IAAP;AACD;AACF,aAhCD,MAgCO;AAEL;AACA;AACAtsB,YAAAA,KAAG,KAAK,CAAR,GAAY4qC,WAAW,CAACC,kBAAxB,GACEkE,mBAAmB,EADrB,IAEAj4B,WAAW,KAAK9F,aANX,EAOL;AACA;AACA;AACA;AACAjG,cAAAA,cAAc,CAAC5N,KAAf,IAAwBxB,UAAxB;AACA8yC,cAAAA,iBAAiB,GAAG,IAApB;AAEAd,cAAAA,kBAAkB,CAAC/C,WAAD,EAAc,KAAd,CAAlB,CAPA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA7/B,cAAAA,cAAc,CAACyG,KAAf,GAAuBb,aAAvB;;AACA,cAA4B;AAC1BuzB,gBAAAA,eAAe,CAACvzB,aAAD,CAAf;AACD;AACF;AACF;;AACD,cAAIi6B,WAAW,CAACH,WAAhB,EAA6B;AAC3B;AACA;AACA;AACA;AACA;AACAiE,YAAAA,YAAY,CAACnwC,OAAb,GAAuBwM,cAAc,CAACzM,KAAtC;AACAyM,YAAAA,cAAc,CAACzM,KAAf,GAAuBowC,YAAvB;AACD,WARD,MAQO;AACL,gBAAMM,eAAe,GAAGpE,WAAW,CAACxe,IAApC;;AACA,gBAAI4iB,eAAe,KAAK,IAAxB,EAA8B;AAC5BA,cAAAA,eAAe,CAACzwC,OAAhB,GAA0BmwC,YAA1B;AACD,aAFD,MAEO;AACL3jC,cAAAA,cAAc,CAACzM,KAAf,GAAuBowC,YAAvB;AACD;;AACD9D,YAAAA,WAAW,CAACxe,IAAZ,GAAmBsiB,YAAnB;AACD;AACF;;AAED,YAAI9D,WAAW,CAACF,IAAZ,KAAqB,IAAzB,EAA+B;AAC7B;AACA;AACA,cAAMroB,IAAI,GAAGuoB,WAAW,CAACF,IAAzB;AACAE,UAAAA,WAAW,CAACjuB,SAAZ,GAAwB0F,IAAxB;AACAuoB,UAAAA,WAAW,CAACF,IAAZ,GAAmBroB,IAAI,CAAC9jB,OAAxB;AACAqsC,UAAAA,WAAW,CAACve,UAAZ,GAAyBthB,cAAc,CAACshB,UAAxC;AACAue,UAAAA,WAAW,CAACC,kBAAZ,GAAiC7qC,KAAG,EAApC;AACAqiB,UAAAA,IAAI,CAAC9jB,OAAL,GAAe,IAAf,CAR6B;AAW7B;AACA;;AACA,cAAI4oC,eAAe,GAAG3V,mBAAmB,CAAC/zB,OAA1C;;AACA,cAAIgxC,iBAAJ,EAAuB;AACrBtH,YAAAA,eAAe,GAAGvV,yBAAyB,CACzCuV,eADyC,EAEzC5V,qBAFyC,CAA3C;AAID,WALD,MAKO;AACL4V,YAAAA,eAAe,GAAGxV,gCAAgC,CAACwV,eAAD,CAAlD;AACD;;AACDnV,UAAAA,mBAAmB,CAACjnB,cAAD,EAAiBo8B,eAAjB,CAAnB,CAtB6B;;AAwB7B,iBAAO9kB,IAAP;AACD;;AACD,eAAO,IAAP;AACD;;AACD,SAAKhrB,oBAAL;AAA2B;AACzB;AAgDA;AACD;;AACD,SAAKC,cAAL;AAAqB;AACnB;AAmBA;AACD;;AACD,SAAKC,KAAL;AACE,MAAqB;AACnB,eAAO,IAAP;AACD;;AAEH,SAAKC,kBAAL;AACA,SAAKC,qBAAL;AAA4B;AAC1Bw3C,QAAAA,cAAc,CAAClkC,cAAD,CAAd;;AACA,YAAItN,OAAO,KAAK,IAAhB,EAAsB;AACpB,cAAM+mB,UAAgC,GAAGzZ,cAAc,CAACuY,aAAxD;AACA,cAAMgB,UAAgC,GAAG7mB,OAAO,CAAC6lB,aAAjD;AAEA,cAAM4rB,YAAY,GAAG5qB,UAAS,KAAK,IAAnC;AACA,cAAM6qB,YAAY,GAAG3qB,UAAS,KAAK,IAAnC;;AACA,cACE0qB,YAAY,KAAKC,YAAjB,IACAxnB,QAAQ,CAACtK,IAAT,KAAkB,+BAFpB,EAGE;AACAtS,YAAAA,cAAc,CAAC5N,KAAf,IAAwB7B,MAAxB;AACD;AACF;;AACD,eAAO,IAAP;AACD;AArnBH;;AAHc;AAAA;AAAA,kDA8nBZyP,cAAc,CAACzQ,GA9nBH;AAAA;AAAA;AAgoBf;;AC1tCD,SAAS80C,UAAT,CAAoBrkC,cAApB,EAA2C+L,WAA3C,EAA+D;AAC7D,UAAQ/L,cAAc,CAACzQ,GAAvB;AACE,SAAKpE,cAAL;AAAqB;AACnB,YAAMyS,SAAS,GAAGoC,cAAc,CAAC3Q,IAAjC;;AACA,YAAI4qC,iBAAuB,CAACr8B,SAAD,CAA3B,EAAwC;AACtCqlC,UAAAA,UAAgB,CAACjjC,cAAD,CAAhB;AACD;;AACD,YAAM5N,KAAK,GAAG4N,cAAc,CAAC5N,KAA7B;;AACA,YAAIA,KAAK,GAAGd,aAAZ,EAA2B;AACzB0O,UAAAA,cAAc,CAAC5N,KAAf,GAAwBA,KAAK,GAAG,CAACd,aAAV,GAA2BV,UAAlD;;AACA,cACEY,CACA,CAACwO,cAAc,CAACsS,IAAf,GAAsBpC,WAAvB,MAAwCJ,MAF1C,EAGE;AACAknB,YAAAA,sBAAsB,CAACh3B,cAAD,CAAtB;AACD;;AACD,iBAAOA,cAAP;AACD;;AACD,eAAO,IAAP;AACD;;AACD,SAAK3U,QAAL;AAAe;AACb46B,QAAAA,gBAAgB,CAACjmB,cAAD,CAAhB;AACAkjC,QAAAA,wBAA8B,CAACljC,cAAD,CAA9B;AACAmjC,QAAAA,2BAAwC;AACxC,YAAM/wC,MAAK,GAAG4N,cAAc,CAAC5N,KAA7B;;AAJa,cAMX,CAACA,MAAK,GAAGxB,UAAT,MAAyBR,OANd;AAAA;AAAA;AAAA;AAAA;;AAUb4P,QAAAA,cAAc,CAAC5N,KAAf,GAAwBA,MAAK,GAAG,CAACd,aAAV,GAA2BV,UAAlD;AACA,eAAOoP,cAAP;AACD;;AACD,SAAKzU,aAAL;AAAoB;AAClB;AACA66B,QAAAA,cAAc,CAACpmB,cAAD,CAAd;AACA,eAAO,IAAP;AACD;;AACD,SAAKjU,iBAAL;AAAwB;AACtBo7B,QAAAA,kBAAkB,CAACnnB,cAAD,CAAlB;;AACA,QAAkC;AAChC,cAAMkpB,aAAmC,GACvClpB,cAAc,CAACuY,aADjB;;AAEA,cAAI2Q,aAAa,KAAK,IAAlB,IAA0BA,aAAa,CAAC5B,UAAd,KAA6B,IAA3D,EAAiE;AAAA,kBAE7DtnB,cAAc,CAAC9N,SAAf,KAA6B,IAFgC;AAAA;AAAA;AAAA;AAAA;;AAM/D83B,YAAAA,mBAAmB;AACpB;AACF;;AACD,YAAM53B,OAAK,GAAG4N,cAAc,CAAC5N,KAA7B;;AACA,YAAIA,OAAK,GAAGd,aAAZ,EAA2B;AACzB0O,UAAAA,cAAc,CAAC5N,KAAf,GAAwBA,OAAK,GAAG,CAACd,aAAV,GAA2BV,UAAlD,CADyB;;AAGzB,cACEY,CACA,CAACwO,cAAc,CAACsS,IAAf,GAAsBpC,WAAvB,MAAwCJ,MAF1C,EAGE;AACAknB,YAAAA,sBAAsB,CAACh3B,cAAD,CAAtB;AACD;;AACD,iBAAOA,cAAP;AACD;;AACD,eAAO,IAAP;AACD;;AACD,SAAK3T,qBAAL;AAA4B;AAC1B86B,QAAAA,kBAAkB,CAACnnB,cAAD,CAAlB,CAD0B;AAG1B;;AACA,eAAO,IAAP;AACD;;AACD,SAAK1U,UAAL;AACE26B,MAAAA,gBAAgB,CAACjmB,cAAD,CAAhB;AACA,aAAO,IAAP;;AACF,SAAKpU,eAAL;AACEsqB,MAAAA,WAAW,CAAClW,cAAD,CAAX;AACA,aAAO,IAAP;;AACF,SAAKvT,kBAAL;AACA,SAAKC,qBAAL;AACEw3C,MAAAA,cAAc,CAAClkC,cAAD,CAAd;AACA,aAAO,IAAP;;AACF;AACE,aAAO,IAAP;AAlFJ;AAoFD;;AAED,SAASskC,qBAAT,CAA+BC,eAA/B,EAAuD;AACrD,UAAQA,eAAe,CAACh1C,GAAxB;AACE,SAAKpE,cAAL;AAAqB;AACnB,YAAMwV,iBAAiB,GAAG4jC,eAAe,CAACl1C,IAAhB,CAAqBsR,iBAA/C;;AACA,YAAIA,iBAAiB,KAAK,IAAtB,IAA8BA,iBAAiB,KAAKhF,SAAxD,EAAmE;AACjEsnC,UAAAA,UAAgB,CAACsB,eAAD,CAAhB;AACD;;AACD;AACD;;AACD,SAAKl5C,QAAL;AAAe;AACb46B,QAAAA,gBAAgB,CAACse,eAAD,CAAhB;AACArB,QAAAA,wBAA8B,CAACqB,eAAD,CAA9B;AACApB,QAAAA,2BAAwC;AACxC;AACD;;AACD,SAAK53C,aAAL;AAAoB;AAClB66B,QAAAA,cAAc,CAACme,eAAD,CAAd;AACA;AACD;;AACD,SAAKj5C,UAAL;AACE26B,MAAAA,gBAAgB,CAACse,eAAD,CAAhB;AACA;;AACF,SAAKx4C,iBAAL;AACEo7B,MAAAA,kBAAkB,CAACod,eAAD,CAAlB;AACA;;AACF,SAAKl4C,qBAAL;AACE86B,MAAAA,kBAAkB,CAACod,eAAD,CAAlB;AACA;;AACF,SAAK34C,eAAL;AACEsqB,MAAAA,WAAW,CAACquB,eAAD,CAAX;AACA;;AACF,SAAK93C,kBAAL;AACA,SAAKC,qBAAL;AACEw3C,MAAAA,cAAc,CAACK,eAAD,CAAd;AACA;AAjCJ;AAqCD;;ACxJM,SAASC,mBAAT,CACLz3C,KADK,EAEL0O,MAFK,EAGa;AAClB;AACA;AACA,SAAO;AACL1O,IAAAA,KAAK,EAALA,KADK;AAEL0O,IAAAA,MAAM,EAANA,MAFK;AAGLnR,IAAAA,KAAK,EAAE8mB,2BAA2B,CAAC3V,MAAD;AAH7B,GAAP;AAKD;;AClBD;AACA;AACA;AAEA,AAAO,SAASgpC,eAAT,CACLC,QADK,EAELC,SAFK,EAGI;AACT,SAAO,IAAP;AACD;;ACLM,SAASC,gBAAT,CACLF,QADK,EAELC,SAFK,EAGC;AACN,MAAI;AACF,QAAME,QAAQ,GAAGJ,eAAe,CAACC,QAAD,EAAWC,SAAX,CAAhC,CADE;AAIF;;AACA,QAAIE,QAAQ,KAAK,KAAjB,EAAwB;AACtB;AACD;;AAED,QAAM16C,KAAK,GAAIw6C,SAAS,CAAC53C,KAAzB;;AACA,QAAI8V,IAAJ,EAAa;AACX,UAAMpH,MAAM,GAAGkpC,SAAS,CAAClpC,MAAzB;AACA,UAAMnR,KAAK,GAAGq6C,SAAS,CAACr6C,KAAxB;AACA,UAAMw6C,cAAc,GAAGx6C,KAAK,KAAK,IAAV,GAAiBA,KAAjB,GAAyB,EAAhD,CAHW;AAKX;AACA;;AACA,UAAIH,KAAK,IAAI,IAAT,IAAiBA,KAAK,CAAC46C,gBAA3B,EAA6C;AAC3C,YAAIL,QAAQ,CAACn1C,GAAT,KAAiBpE,cAArB,EAAqC;AACnC;AACA;AACA;AACA;AACD,SAN0C;AAQ3C;AACA;AACA;;;AACAF,QAAAA,OAAO,CAAC,OAAD,CAAP,CAAiBd,KAAjB,EAX2C;AAY3C;AACA;AACD;;AAED,UAAMsU,aAAa,GAAGhD,MAAM,GAAGnM,gBAAgB,CAACmM,MAAM,CAACpM,IAAR,CAAnB,GAAmC,IAA/D;AACA,UAAM21C,oBAAoB,GAAGvmC,aAAa,yCACFA,aADE,oBAEtC,2DAFJ;AAIA,UAAIwmC,oBAAJ;AACA,UAAMC,iBAAiB,GAAG51C,gBAAgB,CAACo1C,QAAQ,CAACr1C,IAAV,CAA1C;;AACA,UAAI61C,iBAAJ,EAAuB;AACrBD,QAAAA,oBAAoB,GAClB,8GAC0CC,iBAD1C,OADF;AAGD,OAJD,MAIO;AACLD,QAAAA,oBAAoB,GAClB,2FACA,uFAFF;AAGD;;AACD,UAAME,eAAe,GAChBH,oBAAH,UAA4BF,cAA5B,kBACGG,oBADH,CADF,CAvCW;AA4CX;AACA;AACA;;AACAh6C,MAAAA,OAAO,CAAC,OAAD,CAAP,CAAiBk6C,eAAjB,EA/CW;AAgDZ,KAhDD,MAgDO;AACL;AACA;AACA;AACAl6C,MAAAA,OAAO,CAAC,OAAD,CAAP,CAAiBd,KAAjB,EAJK;AAKN;AACF,GAhED,CAgEE,OAAOi7C,CAAP,EAAU;AACV;AACA;AACA;AACA;AACAC,IAAAA,UAAU,CAAC,YAAM;AACf,YAAMD,CAAN;AACD,KAFS,CAAV;AAGD;AACF;;ACtBD,IAAMnpC,iBAAe,GAAG,OAAOC,OAAP,KAAmB,UAAnB,GAAgCA,OAAhC,GAA0CC,GAAlE;;AAEA,SAASmpC,qBAAT,CACEvzC,KADF,EAEE4yC,SAFF,EAGEh8B,IAHF,EAIiB;AACf,MAAMuO,MAAM,GAAGC,YAAY,CAACjR,WAAD,EAAcyC,IAAd,CAA3B,CADe;;AAGfuO,EAAAA,MAAM,CAAC3nB,GAAP,GAAa0oB,aAAb,CAHe;AAKf;;AACAf,EAAAA,MAAM,CAACnnB,OAAP,GAAiB;AAACkO,IAAAA,OAAO,EAAE;AAAV,GAAjB;AACA,MAAM9T,KAAK,GAAGw6C,SAAS,CAAC53C,KAAxB;;AACAmqB,EAAAA,MAAM,CAACxJ,QAAP,GAAkB,YAAM;AACtB63B,IAAAA,eAAe,CAACp7C,KAAD,CAAf;AACAy6C,IAAAA,gBAAgB,CAAC7yC,KAAD,EAAQ4yC,SAAR,CAAhB;AACD,GAHD;;AAIA,SAAOztB,MAAP;AACD;;AAED,SAASsuB,sBAAT,CACEzzC,KADF,EAEE4yC,SAFF,EAGEh8B,IAHF,EAIiB;AACf,MAAMuO,MAAM,GAAGC,YAAY,CAACjR,WAAD,EAAcyC,IAAd,CAA3B;AACAuO,EAAAA,MAAM,CAAC3nB,GAAP,GAAa0oB,aAAb;AACA,MAAMiG,wBAAwB,GAAGnsB,KAAK,CAAC1C,IAAN,CAAW6uB,wBAA5C;;AACA,MAAI,OAAOA,wBAAP,KAAoC,UAAxC,EAAoD;AAClD,QAAM/zB,OAAK,GAAGw6C,SAAS,CAAC53C,KAAxB;;AACAmqB,IAAAA,MAAM,CAACnnB,OAAP,GAAiB,YAAM;AACrB60C,MAAAA,gBAAgB,CAAC7yC,KAAD,EAAQ4yC,SAAR,CAAhB;AACA,aAAOzmB,wBAAwB,CAAC/zB,OAAD,CAA/B;AACD,KAHD;AAID;;AAED,MAAMiyB,IAAI,GAAGrqB,KAAK,CAACc,SAAnB;;AACA,MAAIupB,IAAI,KAAK,IAAT,IAAiB,OAAOA,IAAI,CAACqpB,iBAAZ,KAAkC,UAAvD,EAAmE;AACjEvuB,IAAAA,MAAM,CAACxJ,QAAP,GAAkB,SAASA,QAAT,GAAoB;AACpC,MAAa;AACXg4B,QAAAA,sCAAsC,CAAC3zC,KAAD,CAAtC;AACD;;AACD,UAAI,OAAOmsB,wBAAP,KAAoC,UAAxC,EAAoD;AAClD;AACA;AACA;AACA;AACA;AACAynB,QAAAA,+BAA+B,CAAC,IAAD,CAA/B,CANkD;;AASlDf,QAAAA,gBAAgB,CAAC7yC,KAAD,EAAQ4yC,SAAR,CAAhB;AACD;;AACD,UAAMx6C,OAAK,GAAGw6C,SAAS,CAAC53C,KAAxB;AACA,UAAMzC,KAAK,GAAGq6C,SAAS,CAACr6C,KAAxB;AACA,WAAKm7C,iBAAL,CAAuBt7C,OAAvB,EAA8B;AAC5B26C,QAAAA,cAAc,EAAEx6C,KAAK,KAAK,IAAV,GAAiBA,KAAjB,GAAyB;AADb,OAA9B;;AAGA,MAAa;AACX,YAAI,OAAO4zB,wBAAP,KAAoC,UAAxC,EAAoD;AAClD;AACA;AACA;AACA,cAAI,CAAC7T,gBAAgB,CAACtY,KAAK,CAAC0U,KAAP,EAAexB,QAAf,CAArB,EAAsD;AACpD,kBACE,uEACE,mFAFJ,EAGE3V,gBAAgB,CAACyC,KAAK,CAAC1C,IAAP,CAAhB,IAAgC,SAHlC;AAKD;AACF;AACF;AACF,KAlCD;AAmCD,GApCD,MAoCO,AAAa;AAClB6nB,IAAAA,MAAM,CAACxJ,QAAP,GAAkB,YAAM;AACtBg4B,MAAAA,sCAAsC,CAAC3zC,KAAD,CAAtC;AACD,KAFD;AAGD;;AACD,SAAOmlB,MAAP;AACD;;AAED,SAAS0uB,kBAAT,CAA4BljC,IAA5B,EAA6CsM,QAA7C,EAAiEvI,KAAjE,EAA+E;AAC7E;AACA;AACA;AACA,MAAIo/B,SAAS,GAAGnjC,IAAI,CAACmjC,SAArB;AACA,MAAIC,SAAJ;;AACA,MAAID,SAAS,KAAK,IAAlB,EAAwB;AACtBA,IAAAA,SAAS,GAAGnjC,IAAI,CAACmjC,SAAL,GAAiB,IAAI5pC,iBAAJ,EAA7B;AACA6pC,IAAAA,SAAS,GAAG,IAAI3yB,GAAJ,EAAZ;AACA0yB,IAAAA,SAAS,CAAC/4C,GAAV,CAAckiB,QAAd,EAAwB82B,SAAxB;AACD,GAJD,MAIO;AACLA,IAAAA,SAAS,GAAGD,SAAS,CAACl5C,GAAV,CAAcqiB,QAAd,CAAZ;;AACA,QAAI82B,SAAS,KAAKnqC,SAAlB,EAA6B;AAC3BmqC,MAAAA,SAAS,GAAG,IAAI3yB,GAAJ,EAAZ;AACA0yB,MAAAA,SAAS,CAAC/4C,GAAV,CAAckiB,QAAd,EAAwB82B,SAAxB;AACD;AACF;;AACD,MAAI,CAACA,SAAS,CAACpnC,GAAV,CAAc+H,KAAd,CAAL,EAA2B;AACzB;AACAq/B,IAAAA,SAAS,CAAClyB,GAAV,CAAcnN,KAAd;AACA,QAAMs/B,IAAI,GAAGC,iBAAiB,CAACrnC,IAAlB,CAAuB,IAAvB,EAA6B+D,IAA7B,EAAmCsM,QAAnC,EAA6CvI,KAA7C,CAAb;AACAuI,IAAAA,QAAQ,CAACG,IAAT,CAAc42B,IAAd,EAAoBA,IAApB;AACD;AACF;;AAED,SAASE,cAAT,CACEvjC,IADF,EAEE0d,WAFF,EAGE8lB,WAHF,EAIEn5C,KAJF,EAKEo5C,eALF,EAME;AACA;AACAD,EAAAA,WAAW,CAAC9zC,KAAZ,IAAqBf,UAArB,CAFA;;AAIA60C,EAAAA,WAAW,CAAC1kB,WAAZ,GAA0B0kB,WAAW,CAAC5kB,UAAZ,GAAyB,IAAnD;;AAEA,MACEv0B,KAAK,KAAK,IAAV,IACA,OAAOA,KAAP,KAAiB,QADjB,IAEA,OAAOA,KAAK,CAACoiB,IAAb,KAAsB,UAHxB,EAIE;AACA;AACA,QAAMH,QAAkB,GAAIjiB,KAA5B;;AAWA,IAA8B;AAC5BkiB,MAAAA,sBAAsB,CAACi3B,WAAD,EAAcl3B,QAAd,CAAtB;AACD;;AAED,QAAI,CAACk3B,WAAW,CAAC5zB,IAAZ,GAAmBtC,YAApB,MAAsCF,MAA1C,EAAkD;AAChD;AACA;AACA,UAAMs2B,aAAa,GAAGF,WAAW,CAACh0C,SAAlC;;AACA,UAAIk0C,aAAJ,EAAmB;AACjBF,QAAAA,WAAW,CAACrtB,WAAZ,GAA0ButB,aAAa,CAACvtB,WAAxC;AACAqtB,QAAAA,WAAW,CAAC3tB,aAAZ,GAA4B6tB,aAAa,CAAC7tB,aAA1C;AACA2tB,QAAAA,WAAW,CAACz/B,KAAZ,GAAoB2/B,aAAa,CAAC3/B,KAAlC;AACD,OAJD,MAIO;AACLy/B,QAAAA,WAAW,CAACrtB,WAAZ,GAA0B,IAA1B;AACAqtB,QAAAA,WAAW,CAAC3tB,aAAZ,GAA4B,IAA5B;AACD;AACF;;AAED,QAAM8tB,0BAA0B,GAAG3f,kBAAkB,CACnDD,mBAAmB,CAAC/zB,OAD+B,EAElD6zB,8BAFkD,CAArD,CA/BA;;AAqCA,QAAIvmB,eAAc,GAAGogB,WAArB;;AACA,OAAG;AACD,UACEpgB,eAAc,CAACzQ,GAAf,KAAuBxD,iBAAvB,IACAq7B,qBAAqB,CAACpnB,eAAD,EAAiBqmC,0BAAjB,CAFvB,EAGE;AACA;AAEA;AACA;AACA,YAAMC,SAAwB,GAAItmC,eAAc,CAAC6Y,WAAjD;;AACA,YAAIytB,SAAS,KAAK,IAAlB,EAAwB;AACtB,cAAMztB,WAAW,GAAI,IAAI1F,GAAJ,EAArB;AACA0F,UAAAA,WAAW,CAACjF,GAAZ,CAAgB5E,QAAhB;AACAhP,UAAAA,eAAc,CAAC6Y,WAAf,GAA6BA,WAA7B;AACD,SAJD,MAIO;AACLytB,UAAAA,SAAS,CAAC1yB,GAAV,CAAc5E,QAAd;AACD,SAZD;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,YAAI,CAAChP,eAAc,CAACsS,IAAf,GAAsBtC,YAAvB,MAAyCF,MAA7C,EAAqD;AACnD9P,UAAAA,eAAc,CAAC5N,KAAf,IAAwBxB,UAAxB;AACAs1C,UAAAA,WAAW,CAAC9zC,KAAZ,IAAqBb,4BAArB,CAFmD;AAKnD;AACA;;AACA20C,UAAAA,WAAW,CAAC9zC,KAAZ,IAAqB,EAAEjB,mBAAmB,GAAGE,UAAxB,CAArB;;AAEA,cAAI60C,WAAW,CAAC32C,GAAZ,KAAoBpE,cAAxB,EAAwC;AACtC,gBAAMo7C,kBAAkB,GAAGL,WAAW,CAACh0C,SAAvC;;AACA,gBAAIq0C,kBAAkB,KAAK,IAA3B,EAAiC;AAC/B;AACA;AACA;AACAL,cAAAA,WAAW,CAAC32C,GAAZ,GAAkBpD,wBAAlB;AACD,aALD,MAKO;AACL;AACA;AACA;AACA,kBAAM+qB,MAAM,GAAGC,YAAY,CAACjR,WAAD,EAAcjB,QAAd,CAA3B;AACAiS,cAAAA,MAAM,CAAC3nB,GAAP,GAAa6nB,WAAb;AACAC,cAAAA,aAAa,CAAC6uB,WAAD,EAAchvB,MAAd,CAAb;AACD;AACF,WAxBkD;AA2BnD;;;AACAgvB,UAAAA,WAAW,CAACz/B,KAAZ,GAAoB+D,UAAU,CAAC07B,WAAW,CAACz/B,KAAb,EAAoBxB,QAApB,CAA9B,CA5BmD;;AA+BnD;AACD,SAtDD;AAyDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA2gC,QAAAA,kBAAkB,CAACljC,IAAD,EAAOsM,QAAP,EAAiBm3B,eAAjB,CAAlB;AAEAnmC,QAAAA,eAAc,CAAC5N,KAAf,IAAwBd,aAAxB;AACA0O,QAAAA,eAAc,CAACyG,KAAf,GAAuB0/B,eAAvB;AAEA;AACD,OA5GA;AA8GD;;;AACAnmC,MAAAA,eAAc,GAAGA,eAAc,CAAC3N,MAAhC;AACD,KAhHD,QAgHS2N,eAAc,KAAK,IAhH5B,EAtCA;AAwJA;;;AACAjT,IAAAA,KAAK,GAAG,IAAI6O,KAAJ,CACN,CAACtM,gBAAgB,CAAC42C,WAAW,CAAC72C,IAAb,CAAhB,IAAsC,mBAAvC,IACE,iEADF,GAEE,IAFF,GAGE,gEAHF,GAIE,wDALI,CAAR;AAOD,GA1KD;AA6KA;AACA;;;AACAm3C,EAAAA,cAAc;AAEdz5C,EAAAA,KAAK,GAAGy3C,mBAAmB,CAACz3C,KAAD,EAAQm5C,WAAR,CAA3B;AACA,MAAIlmC,cAAc,GAAGogB,WAArB;;AACA,KAAG;AACD,YAAQpgB,cAAc,CAACzQ,GAAvB;AACE,WAAKlE,QAAL;AAAe;AACb,cAAMs5C,UAAS,GAAG53C,KAAlB;AACAiT,UAAAA,cAAc,CAAC5N,KAAf,IAAwBd,aAAxB;AACA,cAAMqX,IAAI,GAAGmB,iBAAiB,CAACq8B,eAAD,CAA9B;AACAnmC,UAAAA,cAAc,CAACyG,KAAf,GAAuB+D,UAAU,CAACxK,cAAc,CAACyG,KAAhB,EAAuBkC,IAAvB,CAAjC;;AACA,cAAMuO,OAAM,GAAGouB,qBAAqB,CAACtlC,cAAD,EAAiB2kC,UAAjB,EAA4Bh8B,IAA5B,CAApC;;AACAuQ,UAAAA,qBAAqB,CAAClZ,cAAD,EAAiBkX,OAAjB,CAArB;AACA;AACD;;AACD,WAAK/rB,cAAL;AACE;AACA,YAAMw5C,SAAS,GAAG53C,KAAlB;AACA,YAAM0Q,IAAI,GAAGuC,cAAc,CAAC3Q,IAA5B;AACA,YAAMuD,QAAQ,GAAGoN,cAAc,CAACnN,SAAhC;;AACA,YACE,CAACmN,cAAc,CAAC5N,KAAf,GAAuBxB,UAAxB,MAAwCR,OAAxC,KACC,OAAOqN,IAAI,CAACygB,wBAAZ,KAAyC,UAAzC,IACEtrB,QAAQ,KAAK,IAAb,IACC,OAAOA,QAAQ,CAAC6yC,iBAAhB,KAAsC,UADvC,IAEC,CAACgB,kCAAkC,CAAC7zC,QAAD,CAJvC,CADF,EAME;AACAoN,UAAAA,cAAc,CAAC5N,KAAf,IAAwBd,aAAxB;;AACA,cAAMqX,KAAI,GAAGmB,iBAAiB,CAACq8B,eAAD,CAA9B;;AACAnmC,UAAAA,cAAc,CAACyG,KAAf,GAAuB+D,UAAU,CAACxK,cAAc,CAACyG,KAAhB,EAAuBkC,KAAvB,CAAjC,CAHA;;AAKA,cAAMuO,QAAM,GAAGsuB,sBAAsB,CACnCxlC,cADmC,EAEnC2kC,SAFmC,EAGnCh8B,KAHmC,CAArC;;AAKAuQ,UAAAA,qBAAqB,CAAClZ,cAAD,EAAiBkX,QAAjB,CAArB;AACA;AACD;;AACD;AAlCJ;;AAsCAlX,IAAAA,cAAc,GAAGA,cAAc,CAAC3N,MAAhC;AACD,GAxCD,QAwCS2N,cAAc,KAAK,IAxC5B;AAyCD;;ACzYD,SAAS0mC,yBAAT,CACEv3C,IADF,EAEEw3C,IAFF,EAGEl3C,OAHF,EAIEyD,CAJF,EAKEC,CALF,EAMEkK,CANF,EAOEupC,CAPF,EAQExB,CARF,EASEyB,CATF,EAUE;AACA,MAAMC,QAAQ,GAAG7rB,KAAK,CAACnwB,SAAN,CAAgBqjB,KAAhB,CAAsBnjB,IAAtB,CAA2B8pC,SAA3B,EAAsC,CAAtC,CAAjB;;AACA,MAAI;AACF6R,IAAAA,IAAI,CAAC57C,KAAL,CAAW0E,OAAX,EAAoBq3C,QAApB;AACD,GAFD,CAEE,OAAO38C,KAAP,EAAc;AACd,SAAK48C,OAAL,CAAa58C,KAAb;AACD;AACF;;AAED,IAAI68C,yBAAyB,GAAGN,yBAAhC;;AAEA,AAAa;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA,MACE,OAAOO,MAAP,KAAkB,WAAlB,IACA,OAAOA,MAAM,CAACC,aAAd,KAAgC,UADhC,IAEA,OAAOC,QAAP,KAAoB,WAFpB,IAGA,OAAOA,QAAQ,CAACC,WAAhB,KAAgC,UAJlC,EAKE;AACA,QAAMC,QAAQ,GAAGF,QAAQ,CAACG,aAAT,CAAuB,OAAvB,CAAjB;;AAEAN,IAAAA,yBAAyB,GAAG,SAASO,wBAAT,CAS1Bp4C,IAT0B,EAU1Bw3C,IAV0B,EAW1Bl3C,OAX0B,EAY1ByD,CAZ0B,EAa1BC,CAb0B,EAc1BkK,CAd0B,EAe1BupC,CAf0B,EAgB1BxB,CAhB0B,EAiB1ByB,CAjB0B,EAkB1B;AACA;AACA;AACA;AACA;AAJA,YAME,OAAOM,QAAP,KAAoB,WANtB;AAAA;AAAA;AAAA;AAAA;;AAeA,UAAMK,GAAG,GAAGL,QAAQ,CAACC,WAAT,CAAqB,OAArB,CAAZ;AAEA,UAAIK,OAAO,GAAG,KAAd,CAjBA;AAmBA;AACA;AACA;AACA;AACA;;AACA,UAAIxkC,QAAQ,GAAG,IAAf,CAxBA;AA2BA;AACA;;AACA,UAAMykC,WAAW,GAAGT,MAAM,CAACU,KAA3B,CA7BA;AAgCA;;AACA,UAAMC,qBAAqB,GAAGzsC,MAAM,CAAC0sC,wBAAP,CAC5BZ,MAD4B,EAE5B,OAF4B,CAA9B;;AAKA,eAASa,oBAAT,GAAgC;AAC9B;AACA;AACA;AACA;AACAT,QAAAA,QAAQ,CAACU,mBAAT,CAA6BC,OAA7B,EAAsCxtB,YAAtC,EAAoD,KAApD,EAL8B;AAQ9B;AACA;AACA;;AACA,YACE,OAAOysB,MAAM,CAACU,KAAd,KAAwB,WAAxB,IACAV,MAAM,CAACroC,cAAP,CAAsB,OAAtB,CAFF,EAGE;AACAqoC,UAAAA,MAAM,CAACU,KAAP,GAAeD,WAAf;AACD;AACF,OAvDD;AA0DA;AACA;;;AACA,UAAMZ,QAAQ,GAAG7rB,KAAK,CAACnwB,SAAN,CAAgBqjB,KAAhB,CAAsBnjB,IAAtB,CAA2B8pC,SAA3B,EAAsC,CAAtC,CAAjB;;AACA,eAASta,YAAT,GAAwB;AACtBitB,QAAAA,OAAO,GAAG,IAAV;AACAK,QAAAA,oBAAoB;AACpBnB,QAAAA,IAAI,CAAC57C,KAAL,CAAW0E,OAAX,EAAoBq3C,QAApB;AACA7jC,QAAAA,QAAQ,GAAG,KAAX;AACD,OAlED;AAqEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,UAAI9Y,KAAJ,CA/EA;;AAiFA,UAAI89C,WAAW,GAAG,KAAlB;AACA,UAAIC,kBAAkB,GAAG,KAAzB;;AAEA,eAASC,iBAAT,CAA2BR,KAA3B,EAAkC;AAChCx9C,QAAAA,KAAK,GAAGw9C,KAAK,CAACx9C,KAAd;AACA89C,QAAAA,WAAW,GAAG,IAAd;;AACA,YAAI99C,KAAK,KAAK,IAAV,IAAkBw9C,KAAK,CAACS,KAAN,KAAgB,CAAlC,IAAuCT,KAAK,CAACU,MAAN,KAAiB,CAA5D,EAA+D;AAC7DH,UAAAA,kBAAkB,GAAG,IAArB;AACD;;AACD,YAAIP,KAAK,CAACW,gBAAV,EAA4B;AAC1B;AACA;AACA;AACA,cAAIn+C,KAAK,IAAI,IAAT,IAAiB,OAAOA,KAAP,KAAiB,QAAtC,EAAgD;AAC9C,gBAAI;AACFA,cAAAA,KAAK,CAAC46C,gBAAN,GAAyB,IAAzB;AACD,aAFD,CAEE,OAAOwD,KAAP,EAAc;AAEf;AACF;AACF;AACF,OAtGD;;;AAyGA,UAAMP,OAAO,eAAY74C,IAAI,GAAGA,IAAH,GAAU,uBAA1B,CAAb,CAzGA;;AA4GA83C,MAAAA,MAAM,CAACuB,gBAAP,CAAwB,OAAxB,EAAiCL,iBAAjC;AACAd,MAAAA,QAAQ,CAACmB,gBAAT,CAA0BR,OAA1B,EAAmCxtB,YAAnC,EAAiD,KAAjD,EA7GA;AAgHA;;AACAgtB,MAAAA,GAAG,CAACiB,SAAJ,CAAcT,OAAd,EAAuB,KAAvB,EAA8B,KAA9B;AACAX,MAAAA,QAAQ,CAACH,aAAT,CAAuBM,GAAvB;;AAEA,UAAII,qBAAJ,EAA2B;AACzBzsC,QAAAA,MAAM,CAAC0B,cAAP,CAAsBoqC,MAAtB,EAA8B,OAA9B,EAAuCW,qBAAvC;AACD;;AAED,UAAIH,OAAO,IAAIxkC,QAAf,EAAyB;AACvB,YAAI,CAACglC,WAAL,EAAkB;AAChB;AACA99C,UAAAA,KAAK,GAAG,IAAIyR,KAAJ,CACN,kEACE,0DADF,GAEE,2DAFF,GAGE,4DAHF,GAIE,+DAJF,GAKE,6DALF,GAME,gEANF,GAOE,qDARI,CAAR;AAUD,SAZD,MAYO,IAAIssC,kBAAJ,EAAwB;AAC7B/9C,UAAAA,KAAK,GAAG,IAAIyR,KAAJ,CACN,mEACE,0CADF,GAEE,sEAHI,CAAR;AAKD;;AACD,aAAKmrC,OAAL,CAAa58C,KAAb;AACD,OA7ID;;;AAgJA88C,MAAAA,MAAM,CAACc,mBAAP,CAA2B,OAA3B,EAAoCI,iBAApC;;AAEA,UAAI,CAACV,OAAL,EAAc;AACZ;AACA;AACA;AACA;AACAK,QAAAA,oBAAoB;AACpB,eAAOpB,yBAAyB,CAAC37C,KAA1B,CAAgC,IAAhC,EAAsC+pC,SAAtC,CAAP;AACD;AACF,KA5KD;AA6KD;AACF;;AAED,kCAAekS,yBAAf;;ACjOA,IAAI0B,QAAiB,GAAG,KAAxB;AACA,IAAIC,WAAkB,GAAG,IAAzB;AAMA,IAAMC,QAAQ,GAAG;AACf7B,EAAAA,OADe,YACP58C,KADO,EACO;AACpBu+C,IAAAA,QAAQ,GAAG,IAAX;AACAC,IAAAA,WAAW,GAAGx+C,KAAd;AACD;AAJc,CAAjB;AAOA;;;;;;;;;;;;;;AAaA,AAAO,SAAS0+C,qBAAT,CACL15C,IADK,EAELw3C,IAFK,EAGLl3C,OAHK,EAILyD,CAJK,EAKLC,CALK,EAMLkK,CANK,EAOLupC,CAPK,EAQLxB,CARK,EASLyB,CATK,EAUC;AACN6B,EAAAA,QAAQ,GAAG,KAAX;AACAC,EAAAA,WAAW,GAAG,IAAd;AACA3B,EAAAA,2BAAyB,CAACj8C,KAA1B,CAAgC69C,QAAhC,EAA0C9T,SAA1C;AACD;AAED,AAoDO,SAASgU,cAAT,GAA0B;AAC/B,SAAOJ,QAAP;AACD;AAED,AAAO,SAASK,gBAAT,GAA4B;AACjC,MAAIL,QAAJ,EAAc;AACZ,QAAMv+C,KAAK,GAAGw+C,WAAd;AACAD,IAAAA,QAAQ,GAAG,KAAX;AACAC,IAAAA,WAAW,GAAG,IAAd;AACA,WAAOx+C,KAAP;AACD,GALD,MAKO;AAAA;AAAA;AAAA;AAAA;AAAA;AAMN;AACF;;ACGD,IAAI6+C,yCAA4D,GAAG,IAAnE;;AACA,AAAa;AACXA,EAAAA,yCAAyC,GAAG,IAAI71B,GAAJ,EAA5C;AACD;;AAED,IAAM81B,eAAe,GAAG,OAAOC,OAAP,KAAmB,UAAnB,GAAgCA,OAAhC,GAA0C/1B,GAAlE;;AAEA,IAAMg2B,iCAAiC,GAAG,UAASz2C,OAAT,EAAkBE,QAAlB,EAA4B;AACpEA,EAAAA,QAAQ,CAACmI,KAAT,GAAiBrI,OAAO,CAAC0sB,aAAzB;AACAxsB,EAAAA,QAAQ,CAAC0qB,KAAT,GAAiB5qB,OAAO,CAAC6lB,aAAzB;;AACA,EAWO;AACL3lB,IAAAA,QAAQ,CAACw2C,oBAAT;AACD;AACF,CAjBD;;;AAoBA,SAASC,8BAAT,CAAwC32C,OAAxC,EAAwDE,QAAxD,EAAuE;AACrE,EAAa;AACXi2C,IAAAA,qBAAqB,CACnB,IADmB,EAEnBM,iCAFmB,EAGnB,IAHmB,EAInBz2C,OAJmB,EAKnBE,QALmB,CAArB;;AAOA,QAAIk2C,cAAc,EAAlB,EAAsB;AACpB,UAAMQ,YAAY,GAAGP,gBAAgB,EAArC;AACAQ,MAAAA,uBAAuB,CAAC72C,OAAD,EAAU42C,YAAV,CAAvB;AACD;AACF,GAZD;AAmBD;;AAED,SAASE,eAAT,CAAyB92C,OAAzB,EAAyC;AACvC,MAAM+tB,GAAG,GAAG/tB,OAAO,CAAC+tB,GAApB;;AACA,MAAIA,GAAG,KAAK,IAAZ,EAAkB;AAChB,QAAI,OAAOA,GAAP,KAAe,UAAnB,EAA+B;AAC7B,MAAa;AACXooB,QAAAA,qBAAqB,CAAC,IAAD,EAAOpoB,GAAP,EAAY,IAAZ,EAAkB,IAAlB,CAArB;;AACA,YAAIqoB,cAAc,EAAlB,EAAsB;AACpB,cAAMW,QAAQ,GAAGV,gBAAgB,EAAjC;AACAQ,UAAAA,uBAAuB,CAAC72C,OAAD,EAAU+2C,QAAV,CAAvB;AACD;AACF,OAND;AAaD,KAdD,MAcO;AACLhpB,MAAAA,GAAG,CAAC/tB,OAAJ,GAAc,IAAd;AACD;AACF;AACF;;AAED,SAASg3C,iBAAT,CAA2Bh3C,OAA3B,EAA2C2+B,OAA3C,EAAgE;AAC9D,EAAa;AACXwX,IAAAA,qBAAqB,CAAC,IAAD,EAAOxX,OAAP,EAAgB,IAAhB,CAArB;;AACA,QAAIyX,cAAc,EAAlB,EAAsB;AACpB,UAAM3+C,KAAK,GAAG4+C,gBAAgB,EAA9B;AACAQ,MAAAA,uBAAuB,CAAC72C,OAAD,EAAUvI,KAAV,CAAvB;AACD;AACF,GAND;AAaD;;AAED,SAASw/C,8BAAT,CACEj3C,OADF,EAEEkoB,YAFF,EAGQ;AACN,UAAQA,YAAY,CAACrrB,GAArB;AACE,SAAKrE,iBAAL;AACA,SAAKW,UAAL;AACA,SAAKI,mBAAL;AACA,SAAKO,KAAL;AAAY;AACV;AACD;;AACD,SAAKrB,cAAL;AAAqB;AACnB,YAAIyvB,YAAY,CAACxoB,KAAb,GAAqBtB,QAAzB,EAAmC;AACjC,cAAI4B,OAAO,KAAK,IAAhB,EAAsB;AACpB,gBAAMgmC,SAAS,GAAGhmC,OAAO,CAAC0sB,aAA1B;AACA,gBAAM7F,SAAS,GAAG7mB,OAAO,CAAC6lB,aAA1B;AACA,gBAAM3lB,QAAQ,GAAGgoB,YAAY,CAAC/nB,SAA9B,CAHoB;AAKpB;AACA;;AACA,YAAa;AACX,kBACE+nB,YAAY,CAACvrB,IAAb,KAAsBurB,YAAY,CAAC8E,WAAnC,IACA,CAAC6X,4BAFH,EAGE;AACA,oBAAI3kC,QAAQ,CAACmI,KAAT,KAAmB6f,YAAY,CAACwE,aAApC,EAAmD;AACjD,wBACE,sDACE,2BADF,GAEE,6DAFF,GAGE,8CAHF,GAIE,uBALJ,EAME9vB,gBAAgB,CAACsrB,YAAY,CAACvrB,IAAd,CAAhB,IAAuC,UANzC;AAQD;;AACD,oBAAIuD,QAAQ,CAAC0qB,KAAT,KAAmB1C,YAAY,CAACrC,aAApC,EAAmD;AACjD,wBACE,sDACE,2BADF,GAEE,6DAFF,GAGE,8CAHF,GAIE,uBALJ,EAMEjpB,gBAAgB,CAACsrB,YAAY,CAACvrB,IAAd,CAAhB,IAAuC,UANzC;AAQD;AACF;AACF;;AACD,gBAAMqgC,QAAQ,GAAG98B,QAAQ,CAACorB,uBAAT,CACfpD,YAAY,CAAC8E,WAAb,KAA6B9E,YAAY,CAACvrB,IAA1C,GACIqpC,SADJ,GAEI7jB,mBAAmB,CAAC+F,YAAY,CAACvrB,IAAd,EAAoBqpC,SAApB,CAHR,EAIfnf,SAJe,CAAjB;;AAMA,YAAa;AACX,kBAAMqwB,UAAU,GAAKZ,yCAArB;;AACA,kBAAItZ,QAAQ,KAAK/zB,SAAb,IAA0B,CAACiuC,UAAU,CAAClrC,GAAX,CAAekc,YAAY,CAACvrB,IAA5B,CAA/B,EAAkE;AAChEu6C,gBAAAA,UAAU,CAACh2B,GAAX,CAAegH,YAAY,CAACvrB,IAA5B;;AACA,sBACE,8DACE,gDAFJ,EAGEC,gBAAgB,CAACsrB,YAAY,CAACvrB,IAAd,CAHlB;AAKD;AACF;;AACDuD,YAAAA,QAAQ,CAACi3C,mCAAT,GAA+Cna,QAA/C;AACD;AACF;;AACD;AACD;;AACD,SAAKrkC,QAAL;AAAe;AACb,YAAI+J,gBAAJ,EAAsB;AACpB,cAAIwlB,YAAY,CAACxoB,KAAb,GAAqBtB,QAAzB,EAAmC;AACjC,gBAAM4R,IAAI,GAAGkY,YAAY,CAAC/nB,SAA1B;AACA+E,YAAAA,cAAc,CAAC8K,IAAI,CAACugB,aAAN,CAAd;AACD;AACF;;AACD;AACD;;AACD,SAAK13B,aAAL;AACA,SAAKC,QAAL;AACA,SAAKF,UAAL;AACA,SAAKa,wBAAL;AACE;AACA;AA/EJ;;AADM;AAAA;AAAA;AAAA;AAAA;AAuFP;;AAED,SAAS29C,2BAAT,CAAqCv6C,GAArC,EAAkDqrB,YAAlD,EAAuE;AACrE,MAAM/B,WAAgD,GAAI+B,YAAY,CAAC/B,WAAvE;AACA,MAAMyI,UAAU,GAAGzI,WAAW,KAAK,IAAhB,GAAuBA,WAAW,CAACyI,UAAnC,GAAgD,IAAnE;;AACA,MAAIA,UAAU,KAAK,IAAnB,EAAyB;AACvB,QAAME,WAAW,GAAGF,UAAU,CAAChK,IAA/B;AACA,QAAIwD,MAAM,GAAG0G,WAAb;;AACA,OAAG;AACD,UAAI,CAAC1G,MAAM,CAACvrB,GAAP,GAAaA,GAAd,MAAuBA,GAA3B,EAAgC;AAC9B;AACA,YAAM8hC,OAAO,GAAGvW,MAAM,CAACuW,OAAvB;AACAvW,QAAAA,MAAM,CAACuW,OAAP,GAAiB11B,SAAjB;;AACA,YAAI01B,OAAO,KAAK11B,SAAhB,EAA2B;AACzB01B,UAAAA,OAAO;AACR;AACF;;AACDvW,MAAAA,MAAM,GAAGA,MAAM,CAACxD,IAAhB;AACD,KAVD,QAUSwD,MAAM,KAAK0G,WAVpB;AAWD;AACF;;AAED,SAASuoB,yBAAT,CAAmCx6C,GAAnC,EAAgDqrB,YAAhD,EAAqE;AACnE,MAAM/B,WAAgD,GAAI+B,YAAY,CAAC/B,WAAvE;AACA,MAAMyI,UAAU,GAAGzI,WAAW,KAAK,IAAhB,GAAuBA,WAAW,CAACyI,UAAnC,GAAgD,IAAnE;;AACA,MAAIA,UAAU,KAAK,IAAnB,EAAyB;AACvB,QAAME,WAAW,GAAGF,UAAU,CAAChK,IAA/B;AACA,QAAIwD,MAAM,GAAG0G,WAAb;;AACA,OAAG;AACD,UAAI,CAAC1G,MAAM,CAACvrB,GAAP,GAAaA,GAAd,MAAuBA,GAA3B,EAAgC;AAC9B;AACA,YAAM6hC,MAAM,GAAGtW,MAAM,CAACsW,MAAtB;AACAtW,QAAAA,MAAM,CAACuW,OAAP,GAAiBD,MAAM,EAAvB;;AAEA,QAAa;AACX,cAAMC,OAAO,GAAGvW,MAAM,CAACuW,OAAvB;;AACA,cAAIA,OAAO,KAAK11B,SAAZ,IAAyB,OAAO01B,OAAP,KAAmB,UAAhD,EAA4D;AAC1D,gBAAI3S,QAAQ,SAAZ;;AACA,gBAAI2S,OAAO,KAAK,IAAhB,EAAsB;AACpB3S,cAAAA,QAAQ,GACN,+DACA,oCAFF;AAGD,aAJD,MAIO,IAAI,OAAO2S,OAAO,CAACliB,IAAf,KAAwB,UAA5B,EAAwC;AAC7CuP,cAAAA,QAAQ,GACN,mFACA,uDADA,GAEA,8BAFA,GAGA,qBAHA,GAIA,kCAJA,GAKA,6BALA,GAMA,qDANA,GAOA,cAPA,GAQA,OARA,GASA,kBATA,wEAWA,yFAZF;AAaD,aAdM,MAcA;AACLA,cAAAA,QAAQ,GAAG,oBAAoB2S,OAA/B;AACD;;AACD,kBACE,qEACE,+BAFJ,EAGE3S,QAHF;AAKD;AACF;AACF;;AACD5D,MAAAA,MAAM,GAAGA,MAAM,CAACxD,IAAhB;AACD,KAxCD,QAwCSwD,MAAM,KAAK0G,WAxCpB;AAyCD;AACF;;AAED,SAASwoB,sBAAT,CAAgCpvB,YAAhC,EAAqD;AACnD,MAAM/B,WAAgD,GAAI+B,YAAY,CAAC/B,WAAvE;AACA,MAAMyI,UAAU,GAAGzI,WAAW,KAAK,IAAhB,GAAuBA,WAAW,CAACyI,UAAnC,GAAgD,IAAnE;;AACA,MAAIA,UAAU,KAAK,IAAnB,EAAyB;AACvB,QAAME,WAAW,GAAGF,UAAU,CAAChK,IAA/B;AACA,QAAIwD,MAAM,GAAG0G,WAAb;;AACA,OAAG;AAAA,oBACmB1G,MADnB;AAAA,UACMxD,IADN,WACMA,IADN;AAAA,UACY/nB,GADZ,WACYA,GADZ;;AAED,UACE,CAACA,GAAG,GAAG6iC,SAAP,MAAwB6X,SAAxB,IACA,CAAC16C,GAAG,GAAGuiC,SAAP,MAA0BmY,SAF5B,EAGE;AACAC,QAAAA,sCAAsC,CAACtvB,YAAD,EAAeE,MAAf,CAAtC;AACAqvB,QAAAA,oCAAoC,CAACvvB,YAAD,EAAeE,MAAf,CAApC;AACD;;AACDA,MAAAA,MAAM,GAAGxD,IAAT;AACD,KAVD,QAUSwD,MAAM,KAAK0G,WAVpB;AAWD;AACF;;AAyDD,SAAS4oB,gBAAT,CACEC,YADF,EAEE33C,OAFF,EAGEkoB,YAHF,EAIE0vB,cAJF,EAKQ;AACN,UAAQ1vB,YAAY,CAACrrB,GAArB;AACE,SAAKrE,iBAAL;AACA,SAAKW,UAAL;AACA,SAAKI,mBAAL;AACA,SAAKO,KAAL;AAAY;AACV;AACA;AACA;AACA;AACA,QAWO;AACLu9C,UAAAA,yBAAyB,CAACxX,MAAU,GAAGT,SAAd,EAA6BlX,YAA7B,CAAzB;AACD;;AAEDovB,QAAAA,sBAAsB,CAACpvB,YAAD,CAAtB;AACA;AACD;;AACD,SAAKzvB,cAAL;AAAqB;AACnB,YAAMyH,QAAQ,GAAGgoB,YAAY,CAAC/nB,SAA9B;;AACA,YAAI+nB,YAAY,CAACxoB,KAAb,GAAqB7B,MAAzB,EAAiC;AAC/B,cAAImC,OAAO,KAAK,IAAhB,EAAsB;AACpB;AACA;AACA;AACA,YAAa;AACX,kBACEkoB,YAAY,CAACvrB,IAAb,KAAsBurB,YAAY,CAAC8E,WAAnC,IACA,CAAC6X,4BAFH,EAGE;AACA,oBAAI3kC,QAAQ,CAACmI,KAAT,KAAmB6f,YAAY,CAACwE,aAApC,EAAmD;AACjD,wBACE,sDACE,qBADF,GAEE,6DAFF,GAGE,8CAHF,GAIE,uBALJ,EAME9vB,gBAAgB,CAACsrB,YAAY,CAACvrB,IAAd,CAAhB,IAAuC,UANzC;AAQD;;AACD,oBAAIuD,QAAQ,CAAC0qB,KAAT,KAAmB1C,YAAY,CAACrC,aAApC,EAAmD;AACjD,wBACE,sDACE,qBADF,GAEE,6DAFF,GAGE,8CAHF,GAIE,uBALJ,EAMEjpB,gBAAgB,CAACsrB,YAAY,CAACvrB,IAAd,CAAhB,IAAuC,UANzC;AAQD;AACF;AACF;;AACD,YAWO;AACLuD,cAAAA,QAAQ,CAACssB,iBAAT;AACD;AACF,WA7CD,MA6CO;AACL,gBAAMwZ,SAAS,GACb9d,YAAY,CAAC8E,WAAb,KAA6B9E,YAAY,CAACvrB,IAA1C,GACIqD,OAAO,CAAC0sB,aADZ,GAEIvK,mBAAmB,CAAC+F,YAAY,CAACvrB,IAAd,EAAoBqD,OAAO,CAAC0sB,aAA5B,CAHzB;AAIA,gBAAM7F,SAAS,GAAG7mB,OAAO,CAAC6lB,aAA1B,CALK;AAOL;AACA;;AACA,YAAa;AACX,kBACEqC,YAAY,CAACvrB,IAAb,KAAsBurB,YAAY,CAAC8E,WAAnC,IACA,CAAC6X,4BAFH,EAGE;AACA,oBAAI3kC,QAAQ,CAACmI,KAAT,KAAmB6f,YAAY,CAACwE,aAApC,EAAmD;AACjD,wBACE,sDACE,sBADF,GAEE,6DAFF,GAGE,8CAHF,GAIE,uBALJ,EAME9vB,gBAAgB,CAACsrB,YAAY,CAACvrB,IAAd,CAAhB,IAAuC,UANzC;AAQD;;AACD,oBAAIuD,QAAQ,CAAC0qB,KAAT,KAAmB1C,YAAY,CAACrC,aAApC,EAAmD;AACjD,wBACE,sDACE,sBADF,GAEE,6DAFF,GAGE,8CAHF,GAIE,uBALJ,EAMEjpB,gBAAgB,CAACsrB,YAAY,CAACvrB,IAAd,CAAhB,IAAuC,UANzC;AAQD;AACF;AACF;;AACD,YAeO;AACLuD,cAAAA,QAAQ,CAACqrB,kBAAT,CACEya,SADF,EAEEnf,SAFF,EAGE3mB,QAAQ,CAACi3C,mCAHX;AAKD;AACF;AACF,SA3GkB;AA8GnB;;;AACA,YAAMhxB,WAEE,GAAI+B,YAAY,CAAC/B,WAFzB;;AAGA,YAAIA,WAAW,KAAK,IAApB,EAA0B;AACxB,UAAa;AACX,gBACE+B,YAAY,CAACvrB,IAAb,KAAsBurB,YAAY,CAAC8E,WAAnC,IACA,CAAC6X,4BAFH,EAGE;AACA,kBAAI3kC,QAAQ,CAACmI,KAAT,KAAmB6f,YAAY,CAACwE,aAApC,EAAmD;AACjD,sBACE,sDACE,+BADF,GAEE,6DAFF,GAGE,8CAHF,GAIE,uBALJ,EAME9vB,gBAAgB,CAACsrB,YAAY,CAACvrB,IAAd,CAAhB,IAAuC,UANzC;AAQD;;AACD,kBAAIuD,QAAQ,CAAC0qB,KAAT,KAAmB1C,YAAY,CAACrC,aAApC,EAAmD;AACjD,sBACE,sDACE,+BADF,GAEE,6DAFF,GAGE,8CAHF,GAIE,uBALJ,EAMEjpB,gBAAgB,CAACsrB,YAAY,CAACvrB,IAAd,CAAhB,IAAuC,UANzC;AAQD;AACF;AACF,WA3BuB;AA6BxB;AACA;;;AACAsrB,UAAAA,iBAAiB,CAACC,YAAD,EAAe/B,WAAf,EAA4BjmB,QAA5B,CAAjB;AACD;;AACD;AACD;;AACD,SAAKvH,QAAL;AAAe;AACb;AACA;AACA,YAAMwtB,YAEE,GAAI+B,YAAY,CAAC/B,WAFzB;;AAGA,YAAIA,YAAW,KAAK,IAApB,EAA0B;AACxB,cAAIjmB,SAAQ,GAAG,IAAf;;AACA,cAAIgoB,YAAY,CAACrnB,KAAb,KAAuB,IAA3B,EAAiC;AAC/B,oBAAQqnB,YAAY,CAACrnB,KAAb,CAAmBhE,GAA3B;AACE,mBAAKhE,aAAL;AACEqH,gBAAAA,SAAQ,GAAGsB,iBAAiB,CAAC0mB,YAAY,CAACrnB,KAAb,CAAmBV,SAApB,CAA5B;AACA;;AACF,mBAAK1H,cAAL;AACEyH,gBAAAA,SAAQ,GAAGgoB,YAAY,CAACrnB,KAAb,CAAmBV,SAA9B;AACA;AANJ;AAQD;;AACD8nB,UAAAA,iBAAiB,CAACC,YAAD,EAAe/B,YAAf,EAA4BjmB,SAA5B,CAAjB;AACD;;AACD;AACD;;AACD,SAAKrH,aAAL;AAAoB;AAClB,YAAMqH,UAAkB,GAAGgoB,YAAY,CAAC/nB,SAAxC,CADkB;AAIlB;AACA;AACA;;AACA,YAAIH,OAAO,KAAK,IAAZ,IAAoBkoB,YAAY,CAACxoB,KAAb,GAAqB7B,MAA7C,EAAqD;AACnD,cAAMlB,IAAI,GAAGurB,YAAY,CAACvrB,IAA1B;AACA,cAAM0L,KAAK,GAAG6f,YAAY,CAACwE,aAA3B;AACAroB,UAAAA,WAAW,CAACnE,UAAD,EAAWvD,IAAX,EAAiB0L,KAAjB,EAAwB6f,YAAxB,CAAX;AACD;;AAED;AACD;;AACD,SAAKpvB,QAAL;AAAe;AACb;AACA;AACD;;AACD,SAAKF,UAAL;AAAiB;AACf;AACA;AACD;;AACD,SAAKQ,QAAL;AAAe;AACb,QAAyB;AAAA,uCACM8uB,YAAY,CAACwE,aADnB;AAAA,cAChBmrB,QADgB,0BAChBA,QADgB;AAAA,cACNC,QADM,0BACNA,QADM;AAAA,cAEhBhR,cAFgB,GAEE5e,YAAY,CAAC/nB,SAFf,CAEhB2mC,cAFgB;AAIvB,cAAMpD,UAAU,GAAGE,aAAa,EAAhC;;AAEA,cAAI,OAAOkU,QAAP,KAAoB,UAAxB,EAAoC;AAClC,YAA4B;AAC1BA,cAAAA,QAAQ,CACN5vB,YAAY,CAACwE,aAAb,CAA2BlQ,EADrB,EAENxc,OAAO,KAAK,IAAZ,GAAmB,OAAnB,GAA6B,QAFvB,EAGNkoB,YAAY,CAACkc,cAHP,EAINlc,YAAY,CAAC+iB,gBAJP,EAKN/iB,YAAY,CAAC6b,eALP,EAMNL,UANM,EAONiU,YAAY,CAACI,oBAPP,CAAR;AASD,aAVD;AAoBD;AAuCF;;AACD;AACD;;AACD,SAAK1+C,iBAAL;AAAwB;AACtB2+C,QAAAA,gCAAgC,CAACL,YAAD,EAAezvB,YAAf,CAAhC;AACA;AACD;;AACD,SAAKvuB,qBAAL;AACA,SAAKF,wBAAL;AACA,SAAKG,oBAAL;AACA,SAAKC,cAAL;AACA,SAAKE,kBAAL;AACA,SAAKC,qBAAL;AACE;AA7SJ;;AADM;AAAA;AAAA;AAAA;AAAA;AAqTP;;AAED,SAASi+C,uBAAT,CAAiC/vB,YAAjC,EAA+C8mB,QAA/C,EAAyD;AACvD,MAAItsC,gBAAJ,EAAsB;AACpB;AACA;AACA,QAAIpD,IAAW,GAAG4oB,YAAlB;;AACA,WAAO,IAAP,EAAa;AACX,UAAI5oB,IAAI,CAACzC,GAAL,KAAahE,aAAjB,EAAgC;AAC9B,YAAMqH,QAAQ,GAAGZ,IAAI,CAACa,SAAtB;;AACA,YAAI6uC,QAAJ,EAAc;AACZpqC,UAAAA,YAAY,CAAC1E,QAAD,CAAZ;AACD,SAFD,MAEO;AACL4E,UAAAA,cAAc,CAACxF,IAAI,CAACa,SAAN,EAAiBb,IAAI,CAACotB,aAAtB,CAAd;AACD;AACF,OAPD,MAOO,IAAIptB,IAAI,CAACzC,GAAL,KAAa/D,QAAjB,EAA2B;AAChC,YAAMoH,UAAQ,GAAGZ,IAAI,CAACa,SAAtB;;AACA,YAAI6uC,QAAJ,EAAc;AACZnqC,UAAAA,gBAAgB,CAAC3E,UAAD,CAAhB;AACD,SAFD,MAEO;AACL6E,UAAAA,kBAAkB,CAAC7E,UAAD,EAAWZ,IAAI,CAACotB,aAAhB,CAAlB;AACD;AACF,OAPM,MAOA,IACL,CAACptB,IAAI,CAACzC,GAAL,KAAa9C,kBAAb,IACCuF,IAAI,CAACzC,GAAL,KAAa7C,qBADf,KAECsF,IAAI,CAACumB,aAAN,KAAyC,IAFzC,IAGAvmB,IAAI,KAAK4oB,YAJJ,EAKL,CALK,MAQA,IAAI5oB,IAAI,CAACuB,KAAL,KAAe,IAAnB,EAAyB;AAC9BvB,QAAAA,IAAI,CAACuB,KAAL,CAAWlB,MAAX,GAAoBL,IAApB;AACAA,QAAAA,IAAI,GAAGA,IAAI,CAACuB,KAAZ;AACA;AACD;;AACD,UAAIvB,IAAI,KAAK4oB,YAAb,EAA2B;AACzB;AACD;;AACD,aAAO5oB,IAAI,CAACwB,OAAL,KAAiB,IAAxB,EAA8B;AAC5B,YAAIxB,IAAI,CAACK,MAAL,KAAgB,IAAhB,IAAwBL,IAAI,CAACK,MAAL,KAAgBuoB,YAA5C,EAA0D;AACxD;AACD;;AACD5oB,QAAAA,IAAI,GAAGA,IAAI,CAACK,MAAZ;AACD;;AACDL,MAAAA,IAAI,CAACwB,OAAL,CAAanB,MAAb,GAAsBL,IAAI,CAACK,MAA3B;AACAL,MAAAA,IAAI,GAAGA,IAAI,CAACwB,OAAZ;AACD;AACF;AACF;;AAED,SAASo3C,eAAT,CAAyBhwB,YAAzB,EAA8C;AAC5C,MAAM6F,GAAG,GAAG7F,YAAY,CAAC6F,GAAzB;;AACA,MAAIA,GAAG,KAAK,IAAZ,EAAkB;AAChB,QAAM7tB,QAAQ,GAAGgoB,YAAY,CAAC/nB,SAA9B;AACA,QAAIg4C,aAAJ;;AACA,YAAQjwB,YAAY,CAACrrB,GAArB;AACE,WAAKhE,aAAL;AACEs/C,QAAAA,aAAa,GAAG32C,iBAAiB,CAACtB,QAAD,CAAjC;AACA;;AACF;AACEi4C,QAAAA,aAAa,GAAGj4C,QAAhB;AALJ,KAHgB;;AAchB,QAAI,OAAO6tB,GAAP,KAAe,UAAnB,EAA+B;AAC7BA,MAAAA,GAAG,CAACoqB,aAAD,CAAH;AACD,KAFD,MAEO;AACL,MAAa;AACX,YAAI,CAACpqB,GAAG,CAAC7hB,cAAJ,CAAmB,SAAnB,CAAL,EAAoC;AAClC,gBACE,4CACE,wDAFJ,EAGEtP,gBAAgB,CAACsrB,YAAY,CAACvrB,IAAd,CAHlB;AAKD;AACF;;AAEDoxB,MAAAA,GAAG,CAAC/tB,OAAJ,GAAcm4C,aAAd;AACD;AACF;AACF;;AAED,SAASC,eAAT,CAAyBp4C,OAAzB,EAAyC;AACvC,MAAMq4C,UAAU,GAAGr4C,OAAO,CAAC+tB,GAA3B;;AACA,MAAIsqB,UAAU,KAAK,IAAnB,EAAyB;AACvB,QAAI,OAAOA,UAAP,KAAsB,UAA1B,EAAsC;AACpCA,MAAAA,UAAU,CAAC,IAAD,CAAV;AACD,KAFD,MAEO;AACLA,MAAAA,UAAU,CAACr4C,OAAX,GAAqB,IAArB;AACD;AACF;AACF;AAGD;AACA;;;AACA,SAASs4C,aAAT,CACEX,YADF,EAEE33C,OAFF,EAGEu4C,mBAHF,EAIQ;AACN/nC,EAAAA,eAAe,CAACxQ,OAAD,CAAf;;AAEA,UAAQA,OAAO,CAACnD,GAAhB;AACE,SAAKrE,iBAAL;AACA,SAAKW,UAAL;AACA,SAAKG,aAAL;AACA,SAAKC,mBAAL;AACA,SAAKO,KAAL;AAAY;AACV,YAAMqsB,WAAgD,GAAInmB,OAAO,CAACmmB,WAAlE;;AACA,YAAIA,WAAW,KAAK,IAApB,EAA0B;AACxB,cAAMyI,UAAU,GAAGzI,WAAW,CAACyI,UAA/B;;AACA,cAAIA,UAAU,KAAK,IAAnB,EAAyB;AACvB,gBAAME,WAAW,GAAGF,UAAU,CAAChK,IAA/B;AAEA,gBAAIwD,MAAM,GAAG0G,WAAb;;AACA,eAAG;AAAA,6BACsB1G,MADtB;AAAA,kBACMuW,OADN,YACMA,OADN;AAAA,kBACe9hC,GADf,YACeA,GADf;;AAED,kBAAI8hC,OAAO,KAAK11B,SAAhB,EAA2B;AACzB,oBAAI,CAACpM,GAAG,GAAG6iC,SAAP,MAAwB6X,SAA5B,EAA0C;AACxCC,kBAAAA,sCAAsC,CAACx3C,OAAD,EAAUooB,MAAV,CAAtC;AACD,iBAFD,MAEO;AACL,kBAQO;AACL4uB,oBAAAA,iBAAiB,CAACh3C,OAAD,EAAU2+B,OAAV,CAAjB;AACD;AACF;AACF;;AACDvW,cAAAA,MAAM,GAAGA,MAAM,CAACxD,IAAhB;AACD,aApBD,QAoBSwD,MAAM,KAAK0G,WApBpB;AAqBD;AACF;;AACD;AACD;;AACD,SAAKr2B,cAAL;AAAqB;AACnBq+C,QAAAA,eAAe,CAAC92C,OAAD,CAAf;AACA,YAAME,QAAQ,GAAGF,OAAO,CAACG,SAAzB;;AACA,YAAI,OAAOD,QAAQ,CAACw2C,oBAAhB,KAAyC,UAA7C,EAAyD;AACvDC,UAAAA,8BAA8B,CAAC32C,OAAD,EAAUE,QAAV,CAA9B;AACD;;AACD;AACD;;AACD,SAAKrH,aAAL;AAAoB;AAClBi+C,QAAAA,eAAe,CAAC92C,OAAD,CAAf;AACA;AACD;;AACD,SAAKpH,UAAL;AAAiB;AACf;AACA;AACA;AACA,YAAI8J,gBAAJ,EAAsB;AACpB81C,UAAAA,qBAAqB,CAACb,YAAD,EAAe33C,OAAf,AAAA,CAArB;AACD,SAFD,MAEO,IAAI2C,mBAAJ,EAAyB;AAC9B81C,UAAAA,oBAAoB,CAACz4C,OAAD,CAApB;AACD;;AACD;AACD;;AACD,SAAKpG,oBAAL;AAA2B;AACzB;AAOA;AACD;;AACD,SAAKF,kBAAL;AAAyB;AACvB;AASA;AACD;;AACD,SAAKG,cAAL;AAAqB;AACnB;AAGA;AACD;AAxFH;AA0FD;;AAED,SAAS6+C,oBAAT,CACEf,YADF,EAEE3nC,IAFF,EAGEuoC,mBAHF,EAIQ;AACN;AACA;AACA;AACA;AACA;AACA,MAAIj5C,IAAW,GAAG0Q,IAAlB;;AACA,SAAO,IAAP,EAAa;AACXsoC,IAAAA,aAAa,CAACX,YAAD,EAAer4C,IAAf,AAAA,CAAb,CADW;AAGX;;AACA,QACEA,IAAI,CAACuB,KAAL,KAAe,IAAf;AAEA;AACC,KAAC6B,gBAAD,IAAqBpD,IAAI,CAACzC,GAAL,KAAajE,UAHnC,CADF,EAKE;AACA0G,MAAAA,IAAI,CAACuB,KAAL,CAAWlB,MAAX,GAAoBL,IAApB;AACAA,MAAAA,IAAI,GAAGA,IAAI,CAACuB,KAAZ;AACA;AACD;;AACD,QAAIvB,IAAI,KAAK0Q,IAAb,EAAmB;AACjB;AACD;;AACD,WAAO1Q,IAAI,CAACwB,OAAL,KAAiB,IAAxB,EAA8B;AAC5B,UAAIxB,IAAI,CAACK,MAAL,KAAgB,IAAhB,IAAwBL,IAAI,CAACK,MAAL,KAAgBqQ,IAA5C,EAAkD;AAChD;AACD;;AACD1Q,MAAAA,IAAI,GAAGA,IAAI,CAACK,MAAZ;AACD;;AACDL,IAAAA,IAAI,CAACwB,OAAL,CAAanB,MAAb,GAAsBL,IAAI,CAACK,MAA3B;AACAL,IAAAA,IAAI,GAAGA,IAAI,CAACwB,OAAZ;AACD;AACF;;AAED,SAAS63C,mBAAT,CAA6Bt5C,KAA7B,EAA2C;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,EAAAA,KAAK,CAACG,SAAN,GAAkB,IAAlB;AACAH,EAAAA,KAAK,CAACwB,KAAN,GAAc,IAAd;AACAxB,EAAAA,KAAK,CAAC+kB,YAAN,GAAqB,IAArB;AACA/kB,EAAAA,KAAK,CAACyvB,WAAN,GAAoB,IAApB;AACAzvB,EAAAA,KAAK,CAACuvB,UAAN,GAAmB,IAAnB;AACAvvB,EAAAA,KAAK,CAACqtB,aAAN,GAAsB,IAAtB;AACArtB,EAAAA,KAAK,CAACwmB,aAAN,GAAsB,IAAtB;AACAxmB,EAAAA,KAAK,CAAC6tB,YAAN,GAAqB,IAArB;AACA7tB,EAAAA,KAAK,CAACM,MAAN,GAAe,IAAf;AACAN,EAAAA,KAAK,CAAC8mB,WAAN,GAAoB,IAApB;;AACA,EAAa;AACX9mB,IAAAA,KAAK,CAACmf,WAAN,GAAoB,IAApB;AACD;AACF;;AAED,SAASi6B,oBAAT,CAA8Bz4C,OAA9B,EAA8C;AAC5C,MAAI,CAAC2C,mBAAL,EAA0B;AACxB;AACD;;AAED,MAAM2tB,MAIL,GAAGtwB,OAAO,CAACG,SAJZ;AAL4C,MAUrCowB,aAVqC,GAUpBD,MAVoB,CAUrCC,aAVqC;AAW5C,MAAMqoB,aAAa,GAAGxzC,uBAAuB,CAACmrB,aAAD,CAA7C;AACAhrB,EAAAA,wBAAwB,CAACgrB,aAAD,EAAgBqoB,aAAhB,CAAxB;AACD;;AAED,SAASC,eAAT,CAAyB3wB,YAAzB,EAA8C;AAC5C,MAAI,CAACvlB,mBAAL,EAA0B;AACxB;AACD;;AAED,UAAQulB,YAAY,CAACrrB,GAArB;AACE,SAAKpE,cAAL;AACA,SAAKI,aAAL;AACA,SAAKC,QAAL;AACA,SAAKc,oBAAL;AAA2B;AACzB;AACD;;AACD,SAAKjB,QAAL;AACA,SAAKC,UAAL;AAAiB;AACf,YAAM82C,YAIL,GAAGxnB,YAAY,CAAC/nB,SAJjB;AADe,YAMRowB,aANQ,GAM0Bmf,YAN1B,CAMRnf,aANQ;AAAA,YAMOuf,eANP,GAM0BJ,YAN1B,CAMOI,eANP;AAOfvqC,QAAAA,wBAAwB,CAACgrB,aAAD,EAAgBuf,eAAhB,CAAxB;AACA;AACD;AAjBH;;AAL4C;AAAA;AAAA;AAAA;AAAA;AA6B7C;;AAED,SAASgJ,kBAAT,CAA4Bz5C,KAA5B,EAAiD;AAC/C,MAAI4B,MAAM,GAAG5B,KAAK,CAACM,MAAnB;;AACA,SAAOsB,MAAM,KAAK,IAAlB,EAAwB;AACtB,QAAI83C,YAAY,CAAC93C,MAAD,CAAhB,EAA0B;AACxB,aAAOA,MAAP;AACD;;AACDA,IAAAA,MAAM,GAAGA,MAAM,CAACtB,MAAhB;AACD;;AAP8C;AAAA;AAAA;AAAA;AAAA;AAahD;;AAED,SAASo5C,YAAT,CAAsB15C,KAAtB,EAA6C;AAC3C,SACEA,KAAK,CAACxC,GAAN,KAAchE,aAAd,IACAwG,KAAK,CAACxC,GAAN,KAAclE,QADd,IAEA0G,KAAK,CAACxC,GAAN,KAAcjE,UAHhB;AAKD;;AAED,SAASogD,cAAT,CAAwB35C,KAAxB,EAAiD;AAC/C;AACA;AACA;AACA;AACA,MAAIC,IAAW,GAAGD,KAAlB;;AACA45C,EAAAA,QAAQ,EAAE,OAAO,IAAP,EAAa;AACrB;AACA,WAAO35C,IAAI,CAACwB,OAAL,KAAiB,IAAxB,EAA8B;AAC5B,UAAIxB,IAAI,CAACK,MAAL,KAAgB,IAAhB,IAAwBo5C,YAAY,CAACz5C,IAAI,CAACK,MAAN,CAAxC,EAAuD;AACrD;AACA;AACA,eAAO,IAAP;AACD;;AACDL,MAAAA,IAAI,GAAGA,IAAI,CAACK,MAAZ;AACD;;AACDL,IAAAA,IAAI,CAACwB,OAAL,CAAanB,MAAb,GAAsBL,IAAI,CAACK,MAA3B;AACAL,IAAAA,IAAI,GAAGA,IAAI,CAACwB,OAAZ;;AACA,WACExB,IAAI,CAACzC,GAAL,KAAahE,aAAb,IACAyG,IAAI,CAACzC,GAAL,KAAa/D,QADb,IAEAwG,IAAI,CAACzC,GAAL,KAAanD,kBAHf,EAIE;AACA;AACA;AACA,UAAI4F,IAAI,CAACI,KAAL,GAAa9B,SAAjB,EAA4B;AAC1B;AACA,iBAASq7C,QAAT;AACD,OAND;AAQA;;;AACA,UAAI35C,IAAI,CAACuB,KAAL,KAAe,IAAf,IAAuBvB,IAAI,CAACzC,GAAL,KAAajE,UAAxC,EAAoD;AAClD,iBAASqgD,QAAT;AACD,OAFD,MAEO;AACL35C,QAAAA,IAAI,CAACuB,KAAL,CAAWlB,MAAX,GAAoBL,IAApB;AACAA,QAAAA,IAAI,GAAGA,IAAI,CAACuB,KAAZ;AACD;AACF,KA/BoB;;;AAiCrB,QAAI,EAAEvB,IAAI,CAACI,KAAL,GAAa9B,SAAf,CAAJ,EAA+B;AAC7B;AACA,aAAO0B,IAAI,CAACa,SAAZ;AACD;AACF;AACF;;AAED,SAAS+4C,eAAT,CAAyBhxB,YAAzB,EAAoD;AAClD,MAAI,CAACxlB,gBAAL,EAAuB;AACrB;AACD,GAHiD;;;AAMlD,MAAMrB,WAAW,GAAGy3C,kBAAkB,CAAC5wB,YAAD,CAAtC,CANkD;;AASlD,MAAIjnB,MAAJ;AACA,MAAIk4C,WAAJ;AACA,MAAMC,eAAe,GAAG/3C,WAAW,CAAClB,SAApC;;AACA,UAAQkB,WAAW,CAACxE,GAApB;AACE,SAAKhE,aAAL;AACEoI,MAAAA,MAAM,GAAGm4C,eAAT;AACAD,MAAAA,WAAW,GAAG,KAAd;AACA;;AACF,SAAKxgD,QAAL;AACEsI,MAAAA,MAAM,GAAGm4C,eAAe,CAAC7oB,aAAzB;AACA4oB,MAAAA,WAAW,GAAG,IAAd;AACA;;AACF,SAAKvgD,UAAL;AACEqI,MAAAA,MAAM,GAAGm4C,eAAe,CAAC7oB,aAAzB;AACA4oB,MAAAA,WAAW,GAAG,IAAd;AACA;;AACF,SAAKv/C,oBAAL;AACE;AAIF;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAnBF;;AA0BA,MAAIyH,WAAW,CAAC3B,KAAZ,GAAoB1B,YAAxB,EAAsC;AACpC;AACA2G,IAAAA,gBAAgB,CAAC1D,MAAD,CAAhB,CAFoC;;AAIpCI,IAAAA,WAAW,CAAC3B,KAAZ,IAAqB,CAAC1B,YAAtB;AACD;;AAED,MAAMq7C,MAAM,GAAGL,cAAc,CAAC9wB,YAAD,CAA7B,CA7CkD;AA+ClD;;AACA,MAAIixB,WAAJ,EAAiB;AACfG,IAAAA,wCAAwC,CAACpxB,YAAD,EAAemxB,MAAf,EAAuBp4C,MAAvB,CAAxC;AACD,GAFD,MAEO;AACLs4C,IAAAA,2BAA2B,CAACrxB,YAAD,EAAemxB,MAAf,EAAuBp4C,MAAvB,CAA3B;AACD;AACF;;AAED,SAASq4C,wCAAT,CACEh6C,IADF,EAEE+5C,MAFF,EAGEp4C,MAHF,EAIQ;AAAA,MACCpE,GADD,GACQyC,IADR,CACCzC,GADD;AAEN,MAAM28C,MAAM,GAAG38C,GAAG,KAAKhE,aAAR,IAAyBgE,GAAG,KAAK/D,QAAhD;;AACA,MAAI0gD,MAAM,IAAKx6C,oBAAoB,CAAnC,EAAsE;AACpE,QAAMmB,SAAS,GAAGq5C,MAAM,GAAGl6C,IAAI,CAACa,SAAR,GAAoBb,IAAI,CAACa,SAAL,CAAeD,QAA3D;;AACA,QAAIm5C,MAAJ,EAAY;AACV70C,MAAAA,uBAAuB,CAACvD,MAAD,EAASd,SAAT,EAAoBk5C,MAApB,CAAvB;AACD,KAFD,MAEO;AACLl1C,MAAAA,sBAAsB,CAAClD,MAAD,EAASd,SAAT,CAAtB;AACD;AACF,GAPD,MAOO,IAAItD,GAAG,KAAKjE,UAAZ,EAAwB,CAAxB,MAIA;AACL,QAAMiI,KAAK,GAAGvB,IAAI,CAACuB,KAAnB;;AACA,QAAIA,KAAK,KAAK,IAAd,EAAoB;AAClBy4C,MAAAA,wCAAwC,CAACz4C,KAAD,EAAQw4C,MAAR,EAAgBp4C,MAAhB,CAAxC;AACA,UAAIH,OAAO,GAAGD,KAAK,CAACC,OAApB;;AACA,aAAOA,OAAO,KAAK,IAAnB,EAAyB;AACvBw4C,QAAAA,wCAAwC,CAACx4C,OAAD,EAAUu4C,MAAV,EAAkBp4C,MAAlB,CAAxC;AACAH,QAAAA,OAAO,GAAGA,OAAO,CAACA,OAAlB;AACD;AACF;AACF;AACF;;AAED,SAASy4C,2BAAT,CACEj6C,IADF,EAEE+5C,MAFF,EAGEp4C,MAHF,EAIQ;AAAA,MACCpE,GADD,GACQyC,IADR,CACCzC,GADD;AAEN,MAAM28C,MAAM,GAAG38C,GAAG,KAAKhE,aAAR,IAAyBgE,GAAG,KAAK/D,QAAhD;;AACA,MAAI0gD,MAAM,IAAKx6C,oBAAoB,CAAnC,EAAsE;AACpE,QAAMmB,SAAS,GAAGq5C,MAAM,GAAGl6C,IAAI,CAACa,SAAR,GAAoBb,IAAI,CAACa,SAAL,CAAeD,QAA3D;;AACA,QAAIm5C,MAAJ,EAAY;AACV90C,MAAAA,YAAY,CAACtD,MAAD,EAASd,SAAT,EAAoBk5C,MAApB,CAAZ;AACD,KAFD,MAEO;AACLn1C,MAAAA,WAAW,CAACjD,MAAD,EAASd,SAAT,CAAX;AACD;AACF,GAPD,MAOO,IAAItD,GAAG,KAAKjE,UAAZ,EAAwB,CAAxB,MAIA;AACL,QAAMiI,KAAK,GAAGvB,IAAI,CAACuB,KAAnB;;AACA,QAAIA,KAAK,KAAK,IAAd,EAAoB;AAClB04C,MAAAA,2BAA2B,CAAC14C,KAAD,EAAQw4C,MAAR,EAAgBp4C,MAAhB,CAA3B;AACA,UAAIH,OAAO,GAAGD,KAAK,CAACC,OAApB;;AACA,aAAOA,OAAO,KAAK,IAAnB,EAAyB;AACvBy4C,QAAAA,2BAA2B,CAACz4C,OAAD,EAAUu4C,MAAV,EAAkBp4C,MAAlB,CAA3B;AACAH,QAAAA,OAAO,GAAGA,OAAO,CAACA,OAAlB;AACD;AACF;AACF;AACF;;AAED,SAAS03C,qBAAT,CACEb,YADF,EAEE33C,OAFF,EAGEu4C,mBAHF,EAIQ;AACN;AACA;AACA,MAAIj5C,IAAW,GAAGU,OAAlB,CAHM;AAMN;;AACA,MAAIy5C,oBAAoB,GAAG,KAA3B,CAPM;;AAUN,MAAIv4C,aAAJ;AACA,MAAIw4C,wBAAJ;;AAEA,SAAO,IAAP,EAAa;AACX,QAAI,CAACD,oBAAL,EAA2B;AACzB,UAAIx4C,MAAM,GAAG3B,IAAI,CAACK,MAAlB;;AACAg6C,MAAAA,UAAU,EAAE,OAAO,IAAP,EAAa;AAAA,cAErB14C,MAAM,KAAK,IAFU;AAAA;AAAA;AAAA;AAAA;;AAMvB,YAAMm4C,eAAe,GAAGn4C,MAAM,CAACd,SAA/B;;AACA,gBAAQc,MAAM,CAACpE,GAAf;AACE,eAAKhE,aAAL;AACEqI,YAAAA,aAAa,GAAGk4C,eAAhB;AACAM,YAAAA,wBAAwB,GAAG,KAA3B;AACA,kBAAMC,UAAN;;AACF,eAAKhhD,QAAL;AACEuI,YAAAA,aAAa,GAAGk4C,eAAe,CAAC7oB,aAAhC;AACAmpB,YAAAA,wBAAwB,GAAG,IAA3B;AACA,kBAAMC,UAAN;;AACF,eAAK/gD,UAAL;AACEsI,YAAAA,aAAa,GAAGk4C,eAAe,CAAC7oB,aAAhC;AACAmpB,YAAAA,wBAAwB,GAAG,IAA3B;AACA,kBAAMC,UAAN;;AAZJ;;AAmBA14C,QAAAA,MAAM,GAAGA,MAAM,CAACtB,MAAhB;AACD;;AACD85C,MAAAA,oBAAoB,GAAG,IAAvB;AACD;;AAED,QAAIn6C,IAAI,CAACzC,GAAL,KAAahE,aAAb,IAA8ByG,IAAI,CAACzC,GAAL,KAAa/D,QAA/C,EAAyD;AACvD4/C,MAAAA,oBAAoB,CAACf,YAAD,EAAer4C,IAAf,AAAA,CAApB,CADuD;AAGvD;;AACA,UAAIo6C,wBAAJ,EAA8B;AAC5Bh1C,QAAAA,wBAAwB,CACpBxD,aADoB,EAErB5B,IAAI,CAACa,SAFgB,CAAxB;AAID,OALD,MAKO;AACLsE,QAAAA,WAAW,CACPvD,aADO,EAER5B,IAAI,CAACa,SAFG,CAAX;AAID,OAdsD;;AAgBxD,KAhBD,MAgBO,AAgBA,IACL0kB,CACAvlB,IAAI,CAACzC,GAAL,KAAanD,kBAFR,EAGL;AACA;;AAWA,UAAIggD,wBAAJ,EAA8B;AAC5BhzC,QAAAA,kCAAkC,CAC9BxF,aAD8B,EAE/B5B,IAAI,CAACa,SAF0B,CAAlC;AAID,OALD,MAKO;AACLsG,QAAAA,qBAAqB,CACjBvF,aADiB,EAElB5B,IAAI,CAACa,SAFa,CAArB;AAID;AACF,KA1BM,MA0BA,IAAIb,IAAI,CAACzC,GAAL,KAAajE,UAAjB,EAA6B;AAClC,UAAI0G,IAAI,CAACuB,KAAL,KAAe,IAAnB,EAAyB;AACvB;AACA;AACAK,QAAAA,aAAa,GAAG5B,IAAI,CAACa,SAAL,CAAeowB,aAA/B;AACAmpB,QAAAA,wBAAwB,GAAG,IAA3B,CAJuB;;AAMvBp6C,QAAAA,IAAI,CAACuB,KAAL,CAAWlB,MAAX,GAAoBL,IAApB;AACAA,QAAAA,IAAI,GAAGA,IAAI,CAACuB,KAAZ;AACA;AACD;AACF,KAXM,MAWA;AACLy3C,MAAAA,aAAa,CAACX,YAAD,EAAer4C,IAAf,AAAA,CAAb,CADK;;AAGL,UAAIA,IAAI,CAACuB,KAAL,KAAe,IAAnB,EAAyB;AACvBvB,QAAAA,IAAI,CAACuB,KAAL,CAAWlB,MAAX,GAAoBL,IAApB;AACAA,QAAAA,IAAI,GAAGA,IAAI,CAACuB,KAAZ;AACA;AACD;AACF;;AACD,QAAIvB,IAAI,KAAKU,OAAb,EAAsB;AACpB;AACD;;AACD,WAAOV,IAAI,CAACwB,OAAL,KAAiB,IAAxB,EAA8B;AAC5B,UAAIxB,IAAI,CAACK,MAAL,KAAgB,IAAhB,IAAwBL,IAAI,CAACK,MAAL,KAAgBK,OAA5C,EAAqD;AACnD;AACD;;AACDV,MAAAA,IAAI,GAAGA,IAAI,CAACK,MAAZ;;AACA,UAAIL,IAAI,CAACzC,GAAL,KAAajE,UAAjB,EAA6B;AAC3B;AACA;AACA6gD,QAAAA,oBAAoB,GAAG,KAAvB;AACD;AACF;;AACDn6C,IAAAA,IAAI,CAACwB,OAAL,CAAanB,MAAb,GAAsBL,IAAI,CAACK,MAA3B;AACAL,IAAAA,IAAI,GAAGA,IAAI,CAACwB,OAAZ;AACD;AACF;;AAED,SAAS84C,cAAT,CACEjC,YADF,EAEE33C,OAFF,EAGEu4C,mBAHF,EAIQ;AACN,MAAI71C,gBAAJ,EAAsB;AACpB;AACA;AACA81C,IAAAA,qBAAqB,CAACb,YAAD,EAAe33C,OAAf,AAAA,CAArB;AACD,GAJD,MAIO;AACL;AACA04C,IAAAA,oBAAoB,CAACf,YAAD,EAAe33C,OAAf,AAAA,CAApB;AACD;;AACD,MAAMR,SAAS,GAAGQ,OAAO,CAACR,SAA1B;AACAm5C,EAAAA,mBAAmB,CAAC34C,OAAD,CAAnB;;AACA,MAAIR,SAAS,KAAK,IAAlB,EAAwB;AACtBm5C,IAAAA,mBAAmB,CAACn5C,SAAD,CAAnB;AACD;AACF;;AAED,SAASq6C,UAAT,CAAoB75C,OAApB,EAA2CkoB,YAA3C,EAAsE;AACpE,MAAI,CAACxlB,gBAAL,EAAuB;AACrB,YAAQwlB,YAAY,CAACrrB,GAArB;AACE,WAAKrE,iBAAL;AACA,WAAKW,UAAL;AACA,WAAKG,aAAL;AACA,WAAKC,mBAAL;AACA,WAAKO,KAAL;AAAY;AACV;AACA;AACA;AACA;AACA;AACA,UAcO;AACLs9C,YAAAA,2BAA2B,CAACvX,MAAU,GAAGT,SAAd,EAA6BlX,YAA7B,CAA3B;AACD;;AACD;AACD;;AACD,WAAK9uB,QAAL;AAAe;AACb;AACD;;AACD,WAAKC,iBAAL;AAAwB;AACtBygD,UAAAA,uBAAuB,CAAC5xB,YAAD,CAAvB;AACA6xB,UAAAA,4BAA4B,CAAC7xB,YAAD,CAA5B;AACA;AACD;;AACD,WAAKvuB,qBAAL;AAA4B;AAC1BogD,UAAAA,4BAA4B,CAAC7xB,YAAD,CAA5B;AACA;AACD;;AACD,WAAKvvB,QAAL;AAAe;AACb,cAAIiK,iBAAJ,EAAuB;AACrB,gBAAMoN,IAAe,GAAGkY,YAAY,CAAC/nB,SAArC;;AACA,gBAAI6P,IAAI,CAACg4B,OAAT,EAAkB;AAChB;AACAh4B,cAAAA,IAAI,CAACg4B,OAAL,GAAe,KAAf;AACAzhC,cAAAA,uBAAuB,CAACyJ,IAAI,CAACugB,aAAN,CAAvB;AACD;AACF;;AACD;AACD;;AACD,WAAKx2B,kBAAL;AACA,WAAKC,qBAAL;AAA4B;AAC1B;AACD;AAxDH;;AA2DA6+C,IAAAA,eAAe,CAAC3wB,YAAD,CAAf;AACA;AACD;;AAED,UAAQA,YAAY,CAACrrB,GAArB;AACE,SAAKrE,iBAAL;AACA,SAAKW,UAAL;AACA,SAAKG,aAAL;AACA,SAAKC,mBAAL;AACA,SAAKO,KAAL;AAAY;AACV;AACA;AACA;AACA;AACA;AACA,QAWO;AACLs9C,UAAAA,2BAA2B,CAACvX,MAAU,GAAGT,SAAd,EAA6BlX,YAA7B,CAA3B;AACD;;AACD;AACD;;AACD,SAAKzvB,cAAL;AAAqB;AACnB;AACD;;AACD,SAAKI,aAAL;AAAoB;AAClB,YAAMqH,QAAkB,GAAGgoB,YAAY,CAAC/nB,SAAxC;;AACA,YAAID,QAAQ,IAAI,IAAhB,EAAsB;AACpB;AACA,cAAMgqB,QAAQ,GAAGhC,YAAY,CAACwE,aAA9B,CAFoB;AAIpB;AACA;;AACA,cAAMzC,QAAQ,GAAGjqB,OAAO,KAAK,IAAZ,GAAmBA,OAAO,CAAC0sB,aAA3B,GAA2CxC,QAA5D;AACA,cAAMvtB,IAAI,GAAGurB,YAAY,CAACvrB,IAA1B,CAPoB;;AASpB,cAAMs6B,aAAmC,GAAI/O,YAAY,CAAC/B,WAA1D;AACA+B,UAAAA,YAAY,CAAC/B,WAAb,GAA2B,IAA3B;;AACA,cAAI8Q,aAAa,KAAK,IAAtB,EAA4B;AAC1B3yB,YAAAA,YAAY,CACVpE,QADU,EAEV+2B,aAFU,EAGVt6B,IAHU,EAIVstB,QAJU,EAKVC,QALU,EAMVhC,YANU,CAAZ;AAQD;AACF;;AACD;AACD;;AACD,SAAKpvB,QAAL;AAAe;AAAA,cAEXovB,YAAY,CAAC/nB,SAAb,KAA2B,IAFhB;AAAA;AAAA;AAAA;AAAA;;AAMb,YAAMo2B,YAA0B,GAAGrO,YAAY,CAAC/nB,SAAhD;AACA,YAAMgvC,OAAe,GAAGjnB,YAAY,CAACwE,aAArC,CAPa;AASb;AACA;;AACA,YAAMwiB,OAAe,GACnBlvC,OAAO,KAAK,IAAZ,GAAmBA,OAAO,CAAC0sB,aAA3B,GAA2CyiB,OAD7C;AAEA/qC,QAAAA,gBAAgB,CAACmyB,YAAD,EAAe2Y,OAAf,EAAwBC,OAAxB,CAAhB;AACA;AACD;;AACD,SAAKx2C,QAAL;AAAe;AACb,YAAIiK,iBAAJ,EAAuB;AACrB,cAAMoN,KAAe,GAAGkY,YAAY,CAAC/nB,SAArC;;AACA,cAAI6P,KAAI,CAACg4B,OAAT,EAAkB;AAChB;AACAh4B,YAAAA,KAAI,CAACg4B,OAAL,GAAe,KAAf;AACAzhC,YAAAA,uBAAuB,CAACyJ,KAAI,CAACugB,aAAN,CAAvB;AACD;AACF;;AACD;AACD;;AACD,SAAKn3B,QAAL;AAAe;AACb;AACD;;AACD,SAAKC,iBAAL;AAAwB;AACtBygD,QAAAA,uBAAuB,CAAC5xB,YAAD,CAAvB;AACA6xB,QAAAA,4BAA4B,CAAC7xB,YAAD,CAA5B;AACA;AACD;;AACD,SAAKvuB,qBAAL;AAA4B;AAC1BogD,QAAAA,4BAA4B,CAAC7xB,YAAD,CAA5B;AACA;AACD;;AACD,SAAKzuB,wBAAL;AAA+B;AAC7B;AACD;;AACD,SAAKG,oBAAL;AAA2B;AACzB;AAKA;AACD;;AACD,SAAKC,cAAL;AAAqB;AACnB;AAKA;AACD;;AACD,SAAKE,kBAAL;AACA,SAAKC,qBAAL;AAA4B;AAC1B,YAAMutB,QAA+B,GAAGW,YAAY,CAACrC,aAArD;AACA,YAAMmpB,QAAQ,GAAGznB,QAAQ,KAAK,IAA9B;AACA0wB,QAAAA,uBAAuB,CAAC/vB,YAAD,EAAe8mB,QAAf,CAAvB;AACA;AACD;AAxHH;;AAjEoE;AAAA;AAAA;AAAA;AAAA;AAgMrE;;AAED,SAAS8K,uBAAT,CAAiC5xB,YAAjC,EAAsD;AACpD,MAAMX,QAA8B,GAAGW,YAAY,CAACrC,aAApD;;AAEA,MAAI0B,QAAQ,KAAK,IAAjB,EAAuB;AACrByyB,IAAAA,wBAAwB;;AAExB,QAAIt3C,gBAAJ,EAAsB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAM4sC,kBAAyB,GAAIpnB,YAAY,CAACrnB,KAAhD;AACAo3C,MAAAA,uBAAuB,CAAC3I,kBAAD,EAAqB,IAArB,CAAvB;AACD;AACF;AAeF;;AAED,SAAS0I,gCAAT,CACEL,YADF,EAEEzvB,YAFF,EAGE;AACA,MAAI,CAACtlB,iBAAL,EAAwB;AACtB;AACD;;AACD,MAAM2kB,QAA8B,GAAGW,YAAY,CAACrC,aAApD;;AACA,MAAI0B,QAAQ,KAAK,IAAjB,EAAuB;AACrB,QAAMvnB,OAAO,GAAGkoB,YAAY,CAAC1oB,SAA7B;;AACA,QAAIQ,OAAO,KAAK,IAAhB,EAAsB;AACpB,UAAM6mB,SAA+B,GAAG7mB,OAAO,CAAC6lB,aAAhD;;AACA,UAAIgB,SAAS,KAAK,IAAlB,EAAwB;AACtB,YAAM+O,gBAAgB,GAAG/O,SAAS,CAAC+N,UAAnC;;AACA,YAAIgB,gBAAgB,KAAK,IAAzB,EAA+B;AAC7BpvB,UAAAA,8BAA8B,CAACovB,gBAAD,CAA9B;AAUD;AACF;AACF;AACF;AACF;;AAED,SAASmkB,4BAAT,CAAsC7xB,YAAtC,EAA2D;AACzD;AACA;AACA;AACA,MAAM0rB,SAA+B,GAAI1rB,YAAY,CAAC/B,WAAtD;;AACA,MAAIytB,SAAS,KAAK,IAAlB,EAAwB;AACtB1rB,IAAAA,YAAY,CAAC/B,WAAb,GAA2B,IAA3B;AACA,QAAI8zB,UAAU,GAAG/xB,YAAY,CAAC/nB,SAA9B;;AACA,QAAI85C,UAAU,KAAK,IAAnB,EAAyB;AACvBA,MAAAA,UAAU,GAAG/xB,YAAY,CAAC/nB,SAAb,GAAyB,IAAIo2C,eAAJ,EAAtC;AACD;;AACD3C,IAAAA,SAAS,CAAC7zB,OAAV,CAAkB,UAAAzD,QAAQ,EAAI;AAC5B;AACA,UAAIuvB,KAAK,GAAGqO,oBAAoB,CAACjuC,IAArB,CAA0B,IAA1B,EAAgCic,YAAhC,EAA8C5L,QAA9C,CAAZ;;AACA,UAAI,CAAC29B,UAAU,CAACjuC,GAAX,CAAesQ,QAAf,CAAL,EAA+B;AAC7B,QAA4B;AAC1B,cAAIA,QAAQ,CAAC69B,6BAAT,KAA2C,IAA/C,EAAqD;AACnDtO,YAAAA,KAAK,GAAGE,qBAAqB,CAACF,KAAD,CAA7B;AACD;AACF;;AACDoO,QAAAA,UAAU,CAAC/4B,GAAX,CAAe5E,QAAf;AACAA,QAAAA,QAAQ,CAACG,IAAT,CAAcovB,KAAd,EAAqBA,KAArB;AACD;AACF,KAZD;AAaD;AACF;AAGD;AACA;;;AACA,AAAO,SAASuO,6BAAT,CACLp6C,OADK,EAELkoB,YAFK,EAGI;AACT,MAAIloB,OAAO,KAAK,IAAhB,EAAsB;AACpB,QAAMmqB,QAA8B,GAAGnqB,OAAO,CAAC6lB,aAA/C;;AACA,QAAIsE,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,CAACyK,UAAT,KAAwB,IAAjD,EAAuD;AACrD,UAAMrN,QAA8B,GAAGW,YAAY,CAACrC,aAApD;AACA,aAAO0B,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,CAACqN,UAAT,KAAwB,IAApD;AACD;AACF;;AACD,SAAO,KAAP;AACD;;AAED,SAASylB,sBAAT,CAAgCr6C,OAAhC,EAAgD;AAC9C,MAAI,CAAC0C,gBAAL,EAAuB;AACrB;AACD;;AACDiC,EAAAA,gBAAgB,CAAC3E,OAAO,CAACG,SAAT,CAAhB;AACD;;ACnrDD,IAAIm6C,cAAc,GAAG,CAArB;AACA,IAAIC,qBAAqB,GAAG,CAA5B;AACA,IAAIC,SAAS,GAAG,CAAhB;AACA,IAAIC,cAAc,GAAG,CAArB;AACA,IAAIC,SAAS,GAAG,CAAhB;;AAEA,IAAI,OAAOh/C,MAAP,KAAkB,UAAlB,IAAgCA,MAAM,CAACC,GAA3C,EAAgD;AAC9C,MAAMC,WAAS,GAAGF,MAAM,CAACC,GAAzB;AACA2+C,EAAAA,cAAc,GAAG1+C,WAAS,CAAC,oBAAD,CAA1B;AACA2+C,EAAAA,qBAAqB,GAAG3+C,WAAS,CAAC,2BAAD,CAAjC;AACA4+C,EAAAA,SAAS,GAAG5+C,WAAS,CAAC,eAAD,CAArB;AACA6+C,EAAAA,cAAc,GAAG7+C,WAAS,CAAC,kBAAD,CAA1B;AACA8+C,EAAAA,SAAS,GAAG9+C,WAAS,CAAC,eAAD,CAArB;AACD;;AAoCD,AAAO,SAAS++C,uBAAT,CACL76C,SADK,EAEc;AACnB,SAAO;AACLhD,IAAAA,QAAQ,EAAEw9C,cADL;AAELjgD,IAAAA,KAAK,EAAEyF;AAFF,GAAP;AAID;AAED,AAAO,SAAS86C,4BAAT,CACLC,SADK,EAEmB;AACxB,SAAO;AACL/9C,IAAAA,QAAQ,EAAEy9C,qBADL;AAELlgD,IAAAA,KAAK,EAAEwgD;AAFF,GAAP;AAID;AAED,AAAO,SAASC,kBAAT,CAA4BC,IAA5B,EAAwD;AAC7D,SAAO;AACLj+C,IAAAA,QAAQ,EAAE09C,SADL;AAELngD,IAAAA,KAAK,EAAE0gD;AAFF,GAAP;AAID;AAED,AAAO,SAASC,kBAAT,CAA4B9kB,IAA5B,EAAwD;AAC7D,SAAO;AACLp5B,IAAAA,QAAQ,EAAE49C,SADL;AAELrgD,IAAAA,KAAK,EAAE67B;AAFF,GAAP;AAID;AAED,AAAO,SAAS+kB,sBAAT,CAAgCz+B,EAAhC,EAA8D;AACnE,SAAO;AACL1f,IAAAA,QAAQ,EAAE29C,cADL;AAELpgD,IAAAA,KAAK,EAAEmiB;AAFF,GAAP;AAID;;AAED,SAAS0+B,wBAAT,CAAkCC,QAAlC,EAA6D;AAC3D,MAAMC,UAAU,GAAGp4C,mBAAmB,CAAEm4C,QAAF,CAAtC;;AACA,MAAIC,UAAU,IAAI,IAAlB,EAAwB;AAAA,UAEpB,OAAOA,UAAU,CAAC1uB,aAAX,CAAyB,eAAzB,CAAP,KAAqD,QAFjC;AAAA;AAAA;AAAA;AAAA;;AAKtB,WAAS0uB,UAAT;AACD,GAND,MAMO;AACL,QAAM1K,SAAS,GAAG/sC,aAAa,CAACw3C,QAAD,CAA/B;;AADK,UAGHzK,SAAS,KAAK,IAHX;AAAA;AAAA;AAAA;AAAA;AAOL;;;AACA,WAASA,SAAD,CAAiBvwC,SAAjB,CAA2BH,OAAnC;AACD;AACF;;AAED,SAASq7C,aAAT,CAAuBh8C,KAAvB,EAAqCi8C,QAArC,EAAkE;AAChE,UAAQA,QAAQ,CAACx+C,QAAjB;AACE,SAAKw9C,cAAL;AACE,UAAIj7C,KAAK,CAAC1C,IAAN,KAAe2+C,QAAQ,CAACjhD,KAA5B,EAAmC;AACjC,eAAO,IAAP;AACD;;AACD;;AACF,SAAKkgD,qBAAL;AACE,aAAOgB,gBAAgB,CACrBl8C,KADqB,EAEnBi8C,QAAF,CAA0CjhD,KAFrB,CAAvB;;AAIF,SAAKmgD,SAAL;AACE,UAAIn7C,KAAK,CAACxC,GAAN,KAAchE,aAAlB,EAAiC;AAC/B,YAAMyG,IAAI,GAAGD,KAAK,CAACc,SAAnB;;AACA,YACE4D,sBAAsB,CAACzE,IAAD,EAASg8C,QAAF,CAAgCjhD,KAAvC,CADxB,EAEE;AACA,iBAAO,IAAP;AACD;AACF;;AACD;;AACF,SAAKqgD,SAAL;AACE,UAAIr7C,KAAK,CAACxC,GAAN,KAAchE,aAAd,IAA+BwG,KAAK,CAACxC,GAAN,KAAc/D,QAAjD,EAA2D;AACzD,YAAM+2B,WAAW,GAAGhsB,cAAc,CAACxE,KAAD,CAAlC;;AACA,YACEwwB,WAAW,KAAK,IAAhB,IACAA,WAAW,CAAC2rB,OAAZ,CAAsBF,QAAF,CAAgCjhD,KAApD,KAA8D,CAFhE,EAGE;AACA,iBAAO,IAAP;AACD;AACF;;AACD;;AACF,SAAKogD,cAAL;AACE,UAAIp7C,KAAK,CAACxC,GAAN,KAAchE,aAAlB,EAAiC;AAC/B,YAAM4iD,UAAU,GAAGp8C,KAAK,CAACqtB,aAAN,CAAoB,eAApB,CAAnB;;AACA,YACE,OAAO+uB,UAAP,KAAsB,QAAtB,IACAA,UAAU,CAAClP,WAAX,OACI+O,QAAF,CAAoCjhD,KAApC,CAA0CkyC,WAA1C,EAHJ,EAIE;AACA,iBAAO,IAAP;AACD;AACF;;AACD;;AACF;AAAA;AAAA;AAAA,kDACyD+O,QADzD;AAAA;AAAA;AA5CF;;AAiDA,SAAO,KAAP;AACD;;AAED,SAASI,gBAAT,CAA0BJ,QAA1B,EAA6D;AAC3D,UAAQA,QAAQ,CAACx+C,QAAjB;AACE,SAAKw9C,cAAL;AACE,UAAM99C,WAAW,GAAGI,gBAAgB,CAAC0+C,QAAQ,CAACjhD,KAAV,CAAhB,IAAoC,SAAxD;AACA,mBAAWmC,WAAX;;AACF,SAAK+9C,qBAAL;AACE,wBAAemB,gBAAgB,CAACJ,QAAD,CAAhB,IAA8B,EAA7C;;AACF,SAAKd,SAAL;AACE,0BAAmBc,QAAF,CAAgCjhD,KAAjD;;AACF,SAAKqgD,SAAL;AACE,oBAAaY,QAAF,CAAgCjhD,KAA3C;;AACF,SAAKogD,cAAL;AACE,mCAA4Ba,QAAF,CAAoCjhD,KAA9D;;AACF;AAAA;AAAA;AAAA,kDACyDihD,QADzD;AAAA;AAAA;AAZF;AAkBD;;AAED,SAASK,SAAT,CAAmB3rC,IAAnB,EAAgC6qC,SAAhC,EAA0E;AACxE,MAAMe,cAA4B,GAAG,EAArC;AAEA,MAAMhkD,KAAK,GAAG,CAACoY,IAAD,EAAO,CAAP,CAAd;AACA,MAAIvD,KAAK,GAAG,CAAZ;;AACA,SAAOA,KAAK,GAAG7U,KAAK,CAAC8S,MAArB,EAA6B;AAC3B,QAAMrL,KAAK,GAAKzH,KAAK,CAAC6U,KAAK,EAAN,CAArB;AACA,QAAIovC,aAAa,GAAKjkD,KAAK,CAAC6U,KAAK,EAAN,CAA3B;AACA,QAAI6uC,QAAQ,GAAGT,SAAS,CAACgB,aAAD,CAAxB;;AAEA,QAAIx8C,KAAK,CAACxC,GAAN,KAAchE,aAAd,IAA+BiL,eAAe,CAACzE,KAAD,CAAlD,EAA2D;AACzD;AACD,KAFD,MAEO;AACL,aAAOi8C,QAAQ,IAAI,IAAZ,IAAoBD,aAAa,CAACh8C,KAAD,EAAQi8C,QAAR,CAAxC,EAA2D;AACzDO,QAAAA,aAAa;AACbP,QAAAA,QAAQ,GAAGT,SAAS,CAACgB,aAAD,CAApB;AACD;AACF;;AAED,QAAIA,aAAa,KAAKhB,SAAS,CAACnwC,MAAhC,EAAwC;AACtCkxC,MAAAA,cAAc,CAAC9uC,IAAf,CAAoBzN,KAApB;AACD,KAFD,MAEO;AACL,UAAIwB,KAAK,GAAGxB,KAAK,CAACwB,KAAlB;;AACA,aAAOA,KAAK,KAAK,IAAjB,EAAuB;AACrBjJ,QAAAA,KAAK,CAACkV,IAAN,CAAWjM,KAAX,EAAkBg7C,aAAlB;AACAh7C,QAAAA,KAAK,GAAGA,KAAK,CAACC,OAAd;AACD;AACF;AACF;;AAED,SAAO86C,cAAP;AACD;;;AAGD,SAASL,gBAAT,CAA0BvrC,IAA1B,EAAuC6qC,SAAvC,EAA4E;AAC1E,MAAMjjD,KAAK,GAAG,CAACoY,IAAD,EAAO,CAAP,CAAd;AACA,MAAIvD,KAAK,GAAG,CAAZ;;AACA,SAAOA,KAAK,GAAG7U,KAAK,CAAC8S,MAArB,EAA6B;AAC3B,QAAMrL,KAAK,GAAKzH,KAAK,CAAC6U,KAAK,EAAN,CAArB;AACA,QAAIovC,aAAa,GAAKjkD,KAAK,CAAC6U,KAAK,EAAN,CAA3B;AACA,QAAI6uC,QAAQ,GAAGT,SAAS,CAACgB,aAAD,CAAxB;;AAEA,QAAIx8C,KAAK,CAACxC,GAAN,KAAchE,aAAd,IAA+BiL,eAAe,CAACzE,KAAD,CAAlD,EAA2D;AACzD;AACD,KAFD,MAEO;AACL,aAAOi8C,QAAQ,IAAI,IAAZ,IAAoBD,aAAa,CAACh8C,KAAD,EAAQi8C,QAAR,CAAxC,EAA2D;AACzDO,QAAAA,aAAa;AACbP,QAAAA,QAAQ,GAAGT,SAAS,CAACgB,aAAD,CAApB;AACD;AACF;;AAED,QAAIA,aAAa,KAAKhB,SAAS,CAACnwC,MAAhC,EAAwC;AACtC,aAAO,IAAP;AACD,KAFD,MAEO;AACL,UAAI7J,KAAK,GAAGxB,KAAK,CAACwB,KAAlB;;AACA,aAAOA,KAAK,KAAK,IAAjB,EAAuB;AACrBjJ,QAAAA,KAAK,CAACkV,IAAN,CAAWjM,KAAX,EAAkBg7C,aAAlB;AACAh7C,QAAAA,KAAK,GAAGA,KAAK,CAACC,OAAd;AACD;AACF;AACF;;AAED,SAAO,KAAP;AACD;;AAED,AAAO,SAASg7C,YAAT,CACLX,QADK,EAELN,SAFK,EAGY;AACjB,MAAI,CAACn3C,qBAAL,EAA4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAE3B;;AAED,MAAMsM,IAAI,GAAGkrC,wBAAwB,CAACC,QAAD,CAArC;AACA,MAAMS,cAAc,GAAGD,SAAS,CAAC3rC,IAAD,EAAO6qC,SAAP,CAAhC;AAEA,MAAMkB,aAA8B,GAAG,EAAvC;AAEA,MAAMnkD,KAAK,GAAG2wB,KAAK,CAACyzB,IAAN,CAAWJ,cAAX,CAAd;AACA,MAAInvC,KAAK,GAAG,CAAZ;;AACA,SAAOA,KAAK,GAAG7U,KAAK,CAAC8S,MAArB,EAA6B;AAC3B,QAAMpL,IAAI,GAAK1H,KAAK,CAAC6U,KAAK,EAAN,CAApB;;AACA,QAAInN,IAAI,CAACzC,GAAL,KAAahE,aAAjB,EAAgC;AAC9B,UAAIiL,eAAe,CAACxE,IAAD,CAAnB,EAA2B;AACzB;AACD;;AACDy8C,MAAAA,aAAa,CAACjvC,IAAd,CAAmBxN,IAAI,CAACa,SAAxB;AACD,KALD,MAKO;AACL,UAAIU,KAAK,GAAGvB,IAAI,CAACuB,KAAjB;;AACA,aAAOA,KAAK,KAAK,IAAjB,EAAuB;AACrBjJ,QAAAA,KAAK,CAACkV,IAAN,CAAWjM,KAAX;AACAA,QAAAA,KAAK,GAAGA,KAAK,CAACC,OAAd;AACD;AACF;AACF;;AAED,SAAOi7C,aAAP;AACD;AAED,AAAO,SAASE,iCAAT,CACLd,QADK,EAELN,SAFK,EAGU;AACf,MAAI,CAACn3C,qBAAL,EAA4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAE3B;;AAED,MAAMsM,IAAI,GAAGkrC,wBAAwB,CAACC,QAAD,CAArC;AAEA,MAAIe,gBAAwB,GAAG,CAA/B;AACA,MAAMC,YAAY,GAAG,EAArB,CARe;;AAWf,MAAMvkD,KAAK,GAAG,CAACoY,IAAD,EAAO,CAAP,CAAd;AACA,MAAIvD,KAAK,GAAG,CAAZ;;AACA,SAAOA,KAAK,GAAG7U,KAAK,CAAC8S,MAArB,EAA6B;AAC3B,QAAMrL,KAAK,GAAKzH,KAAK,CAAC6U,KAAK,EAAN,CAArB;AACA,QAAIovC,aAAa,GAAKjkD,KAAK,CAAC6U,KAAK,EAAN,CAA3B;AACA,QAAM6uC,QAAQ,GAAGT,SAAS,CAACgB,aAAD,CAA1B;;AAEA,QAAIx8C,KAAK,CAACxC,GAAN,KAAchE,aAAd,IAA+BiL,eAAe,CAACzE,KAAD,CAAlD,EAA2D;AACzD;AACD,KAFD,MAEO,IAAIg8C,aAAa,CAACh8C,KAAD,EAAQi8C,QAAR,CAAjB,EAAoC;AACzCa,MAAAA,YAAY,CAACrvC,IAAb,CAAkB4uC,gBAAgB,CAACJ,QAAD,CAAlC;AACAO,MAAAA,aAAa;;AAEb,UAAIA,aAAa,GAAGK,gBAApB,EAAsC;AACpCA,QAAAA,gBAAgB,GAAGL,aAAnB;AACD;AACF;;AAED,QAAIA,aAAa,GAAGhB,SAAS,CAACnwC,MAA9B,EAAsC;AACpC,UAAI7J,KAAK,GAAGxB,KAAK,CAACwB,KAAlB;;AACA,aAAOA,KAAK,KAAK,IAAjB,EAAuB;AACrBjJ,QAAAA,KAAK,CAACkV,IAAN,CAAWjM,KAAX,EAAkBg7C,aAAlB;AACAh7C,QAAAA,KAAK,GAAGA,KAAK,CAACC,OAAd;AACD;AACF;AACF;;AAED,MAAIo7C,gBAAgB,GAAGrB,SAAS,CAACnwC,MAAjC,EAAyC;AACvC,QAAM0xC,cAAc,GAAG,EAAvB;;AACA,SAAK,IAAI/jC,CAAC,GAAG6jC,gBAAb,EAA+B7jC,CAAC,GAAGwiC,SAAS,CAACnwC,MAA7C,EAAqD2N,CAAC,EAAtD,EAA0D;AACxD+jC,MAAAA,cAAc,CAACtvC,IAAf,CAAoB4uC,gBAAgB,CAACb,SAAS,CAACxiC,CAAD,CAAV,CAApC;AACD;;AAED,WACE,mEACK8jC,YAAY,CAACl8B,IAAb,CAAkB,KAAlB,CADL,aAEA,wCAFA,WAGKm8B,cAAc,CAACn8B,IAAf,CAAoB,KAApB,CAHL,CADF;AAMD;;AAED,SAAO,IAAP;AACD;AASD,AAAO,SAASo8B,iBAAT,CACLlB,QADK,EAELN,SAFK,EAGgB;AACrB,MAAI,CAACn3C,qBAAL,EAA4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAE3B;;AAED,MAAMq4C,aAAa,GAAGD,YAAY,CAACX,QAAD,EAAWN,SAAX,CAAlC;AAEA,MAAMyB,aAAkC,GAAG,EAA3C;;AACA,OAAK,IAAIjkC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG0jC,aAAa,CAACrxC,MAAlC,EAA0C2N,CAAC,EAA3C,EAA+C;AAC7CikC,IAAAA,aAAa,CAACxvC,IAAd,CAAmBlJ,eAAe,CAACm4C,aAAa,CAAC1jC,CAAD,CAAd,CAAlC;AACD;;AAED,OAAK,IAAIA,EAAC,GAAGikC,aAAa,CAAC5xC,MAAd,GAAuB,CAApC,EAAuC2N,EAAC,GAAG,CAA3C,EAA8CA,EAAC,EAA/C,EAAmD;AACjD,QAAMkkC,UAAU,GAAGD,aAAa,CAACjkC,EAAD,CAAhC;AACA,QAAMmkC,UAAU,GAAGD,UAAU,CAAC9+C,CAA9B;AACA,QAAMg/C,WAAW,GAAGD,UAAU,GAAGD,UAAU,CAACG,KAA5C;AACA,QAAMC,SAAS,GAAGJ,UAAU,CAACx+B,CAA7B;AACA,QAAM6+B,YAAY,GAAGD,SAAS,GAAGJ,UAAU,CAACM,MAA5C;;AAEA,SAAK,IAAIC,CAAC,GAAGzkC,EAAC,GAAG,CAAjB,EAAoBykC,CAAC,IAAI,CAAzB,EAA4BA,CAAC,EAA7B,EAAiC;AAC/B,UAAIzkC,EAAC,KAAKykC,CAAV,EAAa;AACX,YAAMC,SAAS,GAAGT,aAAa,CAACQ,CAAD,CAA/B;AACA,YAAME,SAAS,GAAGD,SAAS,CAACt/C,CAA5B;AACA,YAAMw/C,UAAU,GAAGD,SAAS,GAAGD,SAAS,CAACL,KAAzC;AACA,YAAMQ,QAAQ,GAAGH,SAAS,CAACh/B,CAA3B;AACA,YAAMo/B,WAAW,GAAGD,QAAQ,GAAGH,SAAS,CAACF,MAAzC,CALW;AAQX;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YACEL,UAAU,IAAIQ,SAAd,IACAL,SAAS,IAAIO,QADb,IAEAT,WAAW,IAAIQ,UAFf,IAGAL,YAAY,IAAIO,WAJlB,EAKE;AACA;AACAb,UAAAA,aAAa,CAACc,MAAd,CAAqB/kC,EAArB,EAAwB,CAAxB;AACA;AACD,SATD,MASO,IACLmkC,UAAU,KAAKQ,SAAf,IACAT,UAAU,CAACG,KAAX,KAAqBK,SAAS,CAACL,KAD/B,IAEA,EAAES,WAAW,GAAGR,SAAhB,CAFA,IAGA,EAAEO,QAAQ,GAAGN,YAAb,CAJK,EAKL;AACA;AACA,cAAIM,QAAQ,GAAGP,SAAf,EAA0B;AACxBI,YAAAA,SAAS,CAACF,MAAV,IAAoBK,QAAQ,GAAGP,SAA/B;AACAI,YAAAA,SAAS,CAACh/B,CAAV,GAAc4+B,SAAd;AACD;;AACD,cAAIQ,WAAW,GAAGP,YAAlB,EAAgC;AAC9BG,YAAAA,SAAS,CAACF,MAAV,GAAmBD,YAAY,GAAGM,QAAlC;AACD;;AAEDZ,UAAAA,aAAa,CAACc,MAAd,CAAqB/kC,EAArB,EAAwB,CAAxB;AACA;AACD,SAjBM,MAiBA,IACLskC,SAAS,KAAKO,QAAd,IACAX,UAAU,CAACM,MAAX,KAAsBE,SAAS,CAACF,MADhC,IAEA,EAAEI,UAAU,GAAGT,UAAf,CAFA,IAGA,EAAEQ,SAAS,GAAGP,WAAd,CAJK,EAKL;AACA;AACA,cAAIO,SAAS,GAAGR,UAAhB,EAA4B;AAC1BO,YAAAA,SAAS,CAACL,KAAV,IAAmBM,SAAS,GAAGR,UAA/B;AACAO,YAAAA,SAAS,CAACt/C,CAAV,GAAc++C,UAAd;AACD;;AACD,cAAIS,UAAU,GAAGR,WAAjB,EAA8B;AAC5BM,YAAAA,SAAS,CAACL,KAAV,GAAkBD,WAAW,GAAGO,SAAhC;AACD;;AAEDV,UAAAA,aAAa,CAACc,MAAd,CAAqB/kC,EAArB,EAAwB,CAAxB;AACA;AACD;AACF;AACF;AACF;;AAED,SAAOikC,aAAP;AACD;AAED,AAAO,SAASe,WAAT,CACLlC,QADK,EAELN,SAFK,EAGI;AACT,MAAI,CAACn3C,qBAAL,EAA4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAE3B;;AAED,MAAMsM,IAAI,GAAGkrC,wBAAwB,CAACC,QAAD,CAArC;AACA,MAAMS,cAAc,GAAGD,SAAS,CAAC3rC,IAAD,EAAO6qC,SAAP,CAAhC;AAEA,MAAMjjD,KAAK,GAAG2wB,KAAK,CAACyzB,IAAN,CAAWJ,cAAX,CAAd;AACA,MAAInvC,KAAK,GAAG,CAAZ;;AACA,SAAOA,KAAK,GAAG7U,KAAK,CAAC8S,MAArB,EAA6B;AAC3B,QAAMrL,KAAK,GAAKzH,KAAK,CAAC6U,KAAK,EAAN,CAArB;;AACA,QAAI3I,eAAe,CAACzE,KAAD,CAAnB,EAA4B;AAC1B;AACD;;AACD,QAAIA,KAAK,CAACxC,GAAN,KAAchE,aAAlB,EAAiC;AAC/B,UAAMyG,IAAI,GAAGD,KAAK,CAACc,SAAnB;;AACA,UAAI6D,mBAAmB,CAAC1E,IAAD,CAAvB,EAA+B;AAC7B,eAAO,IAAP;AACD;AACF;;AACD,QAAIuB,KAAK,GAAGxB,KAAK,CAACwB,KAAlB;;AACA,WAAOA,KAAK,KAAK,IAAjB,EAAuB;AACrBjJ,MAAAA,KAAK,CAACkV,IAAN,CAAWjM,KAAX;AACAA,MAAAA,KAAK,GAAGA,KAAK,CAACC,OAAd;AACD;AACF;;AAED,SAAO,KAAP;AACD;AAED,IAAMw8C,WAA4B,GAAG,EAArC;AAEA,AAAO,SAASltC,cAAT,GAA8B;AACnC,MAAI1M,qBAAJ,EAA2B;AACzB45C,IAAAA,WAAW,CAACv9B,OAAZ,CAAoB,UAAAw9B,UAAU;AAAA,aAAIA,UAAU,EAAd;AAAA,KAA9B;AACD;AACF;AAQD,AAAO,SAASC,mBAAT,CACLrC,QADK,EAELN,SAFK,EAGL7/B,QAHK,EAILC,OAJK,EAKuB;AAC5B,MAAI,CAACvX,qBAAL,EAA4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAE3B;;AAED,MAAMq4C,aAAa,GAAGD,YAAY,CAACX,QAAD,EAAWN,SAAX,CAAlC;;AAL4B,8BAOa52C,yBAAyB,CAChE83C,aADgE,EAEhE/gC,QAFgE,EAGhEC,OAHgE,CAPtC;AAAA,MAOrBwiC,UAPqB,yBAOrBA,UAPqB;AAAA,MAOTC,OAPS,yBAOTA,OAPS;AAAA,MAOAC,SAPA,yBAOAA,SAPA;;;AAc5B,MAAMJ,UAAU,GAAG,YAAM;AACvB,QAAMK,iBAAiB,GAAG9B,YAAY,CAACX,QAAD,EAAWN,SAAX,CAAtC;AAEAkB,IAAAA,aAAa,CAACh8B,OAAd,CAAsB,UAAA89B,MAAM,EAAI;AAC9B,UAAID,iBAAiB,CAACpC,OAAlB,CAA0BqC,MAA1B,IAAoC,CAAxC,EAA2C;AACzCF,QAAAA,SAAS,CAACE,MAAD,CAAT;AACD;AACF,KAJD;AAMAD,IAAAA,iBAAiB,CAAC79B,OAAlB,CAA0B,UAAA89B,MAAM,EAAI;AAClC,UAAI9B,aAAa,CAACP,OAAd,CAAsBqC,MAAtB,IAAgC,CAApC,EAAuC;AACrCH,QAAAA,OAAO,CAACG,MAAD,CAAP;AACD;AACF,KAJD;AAKD,GAdD;;AAgBAP,EAAAA,WAAW,CAACxwC,IAAZ,CAAiBywC,UAAjB;AAEA,SAAO;AACLE,IAAAA,UAAU,EAAE,YAAM;AAChB;AACA,UAAMhxC,KAAK,GAAG6wC,WAAW,CAAC9B,OAAZ,CAAoB+B,UAApB,CAAd;;AACA,UAAI9wC,KAAK,IAAI,CAAb,EAAgB;AACd6wC,QAAAA,WAAW,CAACF,MAAZ,CAAmB3wC,KAAnB,EAA0B,CAA1B;AACD,OALe;;;AAQhBgxC,MAAAA,UAAU;AACX;AAVI,GAAP;AAYD;;ACviBD,IAAIK,0BAA0B,GAAG,KAAjC;AACA,IAAIC,eAAe,GAAG,IAAtB;AAEA,AAAe,SAASC,WAAT,CAAqBC,IAArB,EAAuC;AACpD,MAAIF,eAAe,KAAK,IAAxB,EAA8B;AAC5B,QAAI;AACF;AACA;AACA,UAAMG,aAAa,GAAG,CAAC,YAAY3kC,IAAI,CAAC4kC,MAAL,EAAb,EAA4B1iC,KAA5B,CAAkC,CAAlC,EAAqC,CAArC,CAAtB;AACA,UAAM2iC,WAAW,GAAGC,MAAM,IAAIA,MAAM,CAACH,aAAD,CAApC,CAJE;AAMF;;AACAH,MAAAA,eAAe,GAAGK,WAAW,CAAC9lD,IAAZ,CAAiB+lD,MAAjB,EAAyB,QAAzB,EAAmCC,YAArD;AACD,KARD,CAQE,OAAOC,IAAP,EAAa;AACb;AACA;AACA;AACAR,MAAAA,eAAe,GAAG,UAAS/iC,QAAT,EAA+B;AAC/C,QAAa;AACX,cAAI8iC,0BAA0B,KAAK,KAAnC,EAA0C;AACxCA,YAAAA,0BAA0B,GAAG,IAA7B;;AACA,gBAAI,OAAOU,cAAP,KAA0B,WAA9B,EAA2C;AACzC,oBACE,iEACE,+DADF,GAEE,mEAFF,GAGE,gCAJJ;AAMD;AACF;AACF;;AACD,YAAMC,OAAO,GAAG,IAAID,cAAJ,EAAhB;AACAC,QAAAA,OAAO,CAACC,KAAR,CAAcC,SAAd,GAA0B3jC,QAA1B;AACAyjC,QAAAA,OAAO,CAACG,KAAR,CAAcC,WAAd,CAA0B51C,SAA1B;AACD,OAjBD;AAkBD;AACF;;AACD,SAAO80C,eAAe,CAACE,IAAD,CAAtB;AACD;;AC+LD,IAAMa,IAAI,GAAGvlC,IAAI,CAACulC,IAAlB;IAGEl2C,2BAGEzR,qBAHFyR;IACAzJ,sBAEEhI,qBAFFgI;IACA4/C,uBACE5nD,qBADF4nD;AAKF,AAAO,IAAMrT,SAAS;AAAG;AAAkB,CAApC;AACP,IAAMsT,cAAc;AAAG;AAAoB,CAA3C;AACA,IAAMC,YAAY;AAAG;AAAsB,CAA3C;AACA,IAAMC,oBAAoB;AAAG;AAAc,CAA3C;AACA,IAAMC,sBAAsB;AAAG;AAAY,CAA3C;AACA,IAAMC,aAAa;AAAG;AAAqB,EAA3C;AACA,IAAMC,aAAa;AAAG;AAAqB,EAA3C;AACA,AAAO,IAAM5T,eAAe;AAAG;AAAY,EAApC;AAGP,IAAM6T,cAAc,GAAG,CAAvB;AACA,IAAMC,gBAAgB,GAAG,CAAzB;AACA,IAAMC,WAAW,GAAG,CAApB;AACA,IAAMC,aAAa,GAAG,CAAtB;AACA,IAAMC,sBAAsB,GAAG,CAA/B;AACA,IAAMC,aAAa,GAAG,CAAtB;;AAGA,IAAIC,gBAAkC,GAAGlU,SAAzC;;AAEA,IAAImU,kBAAoC,GAAG,IAA3C;;AAEA,IAAIvyC,cAA4B,GAAG,IAAnC;;AAEA,IAAIwyC,6BAAoC,GAAGztC,OAA3C;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIq0B,kBAAyB,GAAGr0B,OAAhC;AACA,IAAM0tC,wBAA4C,GAAGrzC,YAAY,CAAC2F,OAAD,CAAjE;;AAGA,IAAI2tC,4BAA4C,GAAGV,cAAnD;;AAEA,IAAIW,4BAAmC,GAAG,IAA1C;AAEA;AACA;AACA;;AACA,IAAIC,+BAAsC,GAAG7tC,OAA7C;AAEA;;AACA,IAAI8tC,8BAAqC,GAAG9tC,OAA5C;;AAEA,IAAI+tC,8BAAqC,GAAG/tC,OAA5C;;AAEA,IAAIguC,6BAAoC,GAAGhuC,OAA3C;AAEA,IAAIiuC,uBAAyC,GAAG,IAAhD;AAGA;;AACA,IAAIC,4BAAoC,GAAG,CAA3C;AACA,IAAMC,oBAA4B,GAAG,GAArC;AAGA;;AACA,IAAIC,kCAA0C,GAAGC,QAAjD;AAEA;;AACA,IAAMC,iBAAiB,GAAG,GAA1B;;AAEA,SAASC,gBAAT,GAA4B;AAC1BH,EAAAA,kCAAkC,GAAGl+C,KAAG,KAAKo+C,iBAA7C;AACD;;AAED,AAAO,SAASrP,mBAAT,GAAuC;AAC5C,SAAOmP,kCAAP;AACD;AAED,IAAI5xB,UAAwB,GAAG,IAA/B;AACA,IAAIgyB,gBAAgB,GAAG,KAAvB;AACA,IAAIC,kBAAkB,GAAG,IAAzB;AACA,IAAIC,sCAAyD,GAAG,IAAhE;AAEA,IAAIC,0BAAmC,GAAG,KAA1C;AACA,IAAIC,6BAA+C,GAAG,IAAtD;AACA,IAAIC,mCAAuD,GAAGnsC,YAA9D;AACA,IAAIosC,0BAAiC,GAAG9uC,OAAxC;AACA,IAAI+uC,8BAAyD,GAAG,EAAhE;AACA,IAAIC,gCAA2D,GAAG,EAAlE;AACA,AAEA,IAAIC,+BAAsD,GAAG,IAA7D;;AAGA,IAAMC,mBAAmB,GAAG,EAA5B;AACA,IAAIC,iBAAyB,GAAG,CAAhC;AACA,IAAIC,qBAAuC,GAAG,IAA9C;AAEA,IAAMC,2BAA2B,GAAG,EAApC;AACA,IAAIC,wBAAgC,GAAG,CAAvC;AAGA;AACA;AACA;AACA;;AACA,IAAIC,uBAAmD,GAAG,IAA1D;AAGA;AACA;;AACA,IAAIC,gBAAwB,GAAGruC,WAA/B;AACA,IAAIsuC,oBAA2B,GAAGzvC,OAAlC;AACA,IAAI0vC,wBAA+B,GAAG1vC,OAAtC;AAGA;;AACA,IAAI2vC,wBAAwB,GAAG,KAA/B;AAEA,IAAIC,qBAAmC,GAAG,IAA1C;AACA,IAAIC,iCAA0C,GAAG,KAAjD;AAEA,AAAO,SAAS/kB,qBAAT,GAAmD;AACxD,SAAO0iB,kBAAP;AACD;AAED,AAAO,SAASl2B,gBAAT,GAA4B;AACjC,MAAI,CAACi2B,gBAAgB,IAAIR,aAAa,GAAGC,aAApB,CAAjB,MAAyD3T,SAA7D,EAAwE;AACtE;AACA,WAAOnpC,KAAG,EAAV;AACD,GAJgC;;;AAMjC,MAAIs/C,gBAAgB,KAAKruC,WAAzB,EAAsC;AACpC;AACA,WAAOquC,gBAAP;AACD,GATgC;;;AAWjCA,EAAAA,gBAAgB,GAAGt/C,KAAG,EAAtB;AACA,SAAOs/C,gBAAP;AACD;AAED,AAIO,SAASj4B,iBAAT,CAA2BvqB,KAA3B,EAA+C;AACpD;AACA,MAAMugB,IAAI,GAAGvgB,KAAK,CAACugB,IAAnB;;AACA,MAAI,CAACA,IAAI,GAAGtC,YAAR,MAA0BF,MAA9B,EAAsC;AACpC,WAAQ7K,QAAR;AACD,GAFD,MAEO,IAAI,CAACqN,IAAI,GAAGrC,cAAR,MAA4BH,MAAhC,EAAwC;AAC7C,WAAOzC,uBAAuB,OAAOnG,mBAA9B,GACFjC,QADE,GAEFC,eAFL;AAGD,GAJM,AAL6C;AA2BpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAIsvC,oBAAoB,KAAKzvC,OAA7B,EAAsC;AACpCyvC,IAAAA,oBAAoB,GAAG5B,+BAAvB;AACD;;AAED,MAAMiC,YAAY,GAAGvkC,wBAAwB,OAAOD,YAApD;;AACA,MAAIwkC,YAAJ,EAAkB;AAChB,QAAIJ,wBAAwB,KAAK1vC,OAAjC,EAA0C;AACxC0vC,MAAAA,wBAAwB,GACtBzB,uBAAuB,KAAK,IAA5B,GACIA,uBAAuB,CAACprC,YAD5B,GAEI7C,OAHN;AAID;;AACD,WAAOgF,kBAAkB,CAACyqC,oBAAD,EAAuBC,wBAAvB,CAAzB;AACD,GArDmD;AAwDpD;;;AACA,MAAMK,iBAAiB,GAAGznC,uBAAuB,EAAjD,CAzDoD;AA4DpD;AACA;AACA;AACA;AACA;;AACA,MAAI1E,IAAJ;;AACA;AAEE,GAAC2pC,gBAAgB,GAAGV,oBAApB,MAA8CxT,SAA9C,IACA0W,iBAAiB,KAAK3tC,sBAHxB,EAIE;AACAwB,IAAAA,IAAI,GAAGkB,cAAc,CAAC5F,yBAAD,EAA4BuwC,oBAA5B,CAArB;AACD,GAND,MAMO;AACL,QAAMO,qBAAqB,GAAG/tC,+BAA+B,CAC3D8tC,iBAD2D,CAA7D;;AAwBAnsC,IAAAA,IAAI,GAAGkB,cAAc,CAACkrC,qBAAD,EAAwBP,oBAAxB,CAArB;AACD;;AAED,SAAO7rC,IAAP;AACD;;AAED,SAASqsC,gBAAT,CAA0BjjD,KAA1B,EAAwC;AACtC;AACA;AACA;AAEA;AACA,MAAMugB,IAAI,GAAGvgB,KAAK,CAACugB,IAAnB;;AACA,MAAI,CAACA,IAAI,GAAGtC,YAAR,MAA0BF,MAA9B,EAAsC;AACpC,WAAQ7K,QAAR;AACD,GAFD,MAEO,IAAI,CAACqN,IAAI,GAAGrC,cAAR,MAA4BH,MAAhC,EAAwC;AAC7C,WAAOzC,uBAAuB,OAAOnG,mBAA9B,GACFjC,QADE,GAEFC,eAFL;AAGD,GAbqC;;;AAgBtC,MAAIsvC,oBAAoB,KAAKzvC,OAA7B,EAAsC;AACpCyvC,IAAAA,oBAAoB,GAAG5B,+BAAvB;AACD;;AACD,SAAO5oC,aAAa,CAACwqC,oBAAD,CAApB;AACD;;AAED,AAAO,SAASj4B,qBAAT,CACLxqB,KADK,EAEL4W,IAFK,EAGLI,SAHK,EAIL;AACAksC,EAAAA,qBAAqB;AACrBC,EAAAA,gCAAgC,CAACnjD,KAAD,CAAhC;AAEA,MAAM2Q,IAAI,GAAGyyC,6BAA6B,CAACpjD,KAAD,EAAQ4W,IAAR,CAA1C;;AACA,MAAIjG,IAAI,KAAK,IAAb,EAAmB;AACjB0yC,IAAAA,oCAAoC,CAACrjD,KAAD,CAApC;AACA,WAAO,IAAP;AACD,GARD;;;AAWAiZ,EAAAA,eAAe,CAACtI,IAAD,EAAOiG,IAAP,EAAaI,SAAb,CAAf;;AAEA,MAAIrG,IAAI,KAAK6vC,kBAAb,EAAiC;AAC/B;AACA;AACA;AACA;AACA;AACA,IAGE;AACAO,MAAAA,8BAA8B,GAAGtoC,UAAU,CACzCsoC,8BADyC,EAEzCnqC,IAFyC,CAA3C;AAID;;AACD,QAAI+pC,4BAA4B,KAAKN,sBAArC,EAA6D;AAC3D;AACA;AACA;AACA;AACA;AACA;AACAjnC,MAAAA,mBAAiB,CAACzI,IAAD,EAAO8vC,6BAAP,CAAjB;AACD;AACF,GArCD;AAwCA;;;AACA,MAAMzvC,aAAa,GAAGsK,uBAAuB,EAA7C;;AAEA,MAAI1E,IAAI,KAAK1D,QAAb,EAAuB;AACrB;AAEE,KAACqtC,gBAAgB,GAAGT,sBAApB,MAAgDzT,SAAhD;AAEA,KAACkU,gBAAgB,IAAIR,aAAa,GAAGC,aAApB,CAAjB,MAAyD3T,SAJ3D,EAKE;AACA;AACAiX,MAAAA,2BAA2B,CAAC3yC,IAAD,EAAOiG,IAAP,CAA3B,CAFA;AAKA;AACA;;AACA2sC,MAAAA,qBAAqB,CAAC5yC,IAAD,CAArB;AACD,KAbD,MAaO;AACL6yC,MAAAA,qBAAqB,CAAC7yC,IAAD,EAAOqG,SAAP,CAArB;AACAssC,MAAAA,2BAA2B,CAAC3yC,IAAD,EAAOiG,IAAP,CAA3B;;AACA,UAAI2pC,gBAAgB,KAAKlU,SAAzB,EAAoC;AAClC;AACA;AACA;AACA;AACA;AACAkV,QAAAA,gBAAgB;AAChBtlC,QAAAA,sBAAsB;AACvB;AACF;AACF,GA3BD,MA2BO;AACL;AACA,QACE,CAACskC,gBAAgB,GAAGV,oBAApB,MAA8CxT,SAA9C;AAEA;AACCr7B,IAAAA,aAAa,KAAKoE,sBAAlB,IACCpE,aAAa,KAAKmE,mBAJpB,CADF,EAME;AACA;AACA;AACA,UAAI8sC,+BAA+B,KAAK,IAAxC,EAA8C;AAC5CA,QAAAA,+BAA+B,GAAG,IAAI7gC,GAAJ,CAAQ,CAACzQ,IAAD,CAAR,CAAlC;AACD,OAFD,MAEO;AACLsxC,QAAAA,+BAA+B,CAACpgC,GAAhC,CAAoClR,IAApC;AACD;AACF,KAhBI;;;AAkBL6yC,IAAAA,qBAAqB,CAAC7yC,IAAD,EAAOqG,SAAP,CAArB;AACAssC,IAAAA,2BAA2B,CAAC3yC,IAAD,EAAOiG,IAAP,CAA3B;AACD,GA1FD;AA6FA;AACA;AACA;AACA;;;AACAqqC,EAAAA,uBAAuB,GAAGtwC,IAA1B;AACD;AAGD;AACA;AACA;;AACA,SAASyyC,6BAAT,CACEjP,WADF,EAEEv9B,IAFF,EAGoB;AAClB;AACAu9B,EAAAA,WAAW,CAACz/B,KAAZ,GAAoB+D,UAAU,CAAC07B,WAAW,CAACz/B,KAAb,EAAoBkC,IAApB,CAA9B;AACA,MAAIzW,SAAS,GAAGg0C,WAAW,CAACh0C,SAA5B;;AACA,MAAIA,SAAS,KAAK,IAAlB,EAAwB;AACtBA,IAAAA,SAAS,CAACuU,KAAV,GAAkB+D,UAAU,CAACtY,SAAS,CAACuU,KAAX,EAAkBkC,IAAlB,CAA5B;AACD;;AACD,EAAa;AACX,QACEzW,SAAS,KAAK,IAAd,IACA,CAACg0C,WAAW,CAAC9zC,KAAZ,IAAqB9B,SAAS,GAAGW,SAAjC,CAAD,MAAkDb,OAFpD,EAGE;AACAolD,MAAAA,wCAAwC,CAACtP,WAAD,CAAxC;AACD;AACF,GAdiB;;;AAgBlB,MAAIl0C,IAAI,GAAGk0C,WAAX;AACA,MAAIvyC,MAAM,GAAGuyC,WAAW,CAAC7zC,MAAzB;;AACA,SAAOsB,MAAM,KAAK,IAAlB,EAAwB;AACtBA,IAAAA,MAAM,CAAC+iB,UAAP,GAAoBlM,UAAU,CAAC7W,MAAM,CAAC+iB,UAAR,EAAoB/N,IAApB,CAA9B;AACAzW,IAAAA,SAAS,GAAGyB,MAAM,CAACzB,SAAnB;;AACA,QAAIA,SAAS,KAAK,IAAlB,EAAwB;AACtBA,MAAAA,SAAS,CAACwkB,UAAV,GAAuBlM,UAAU,CAACtY,SAAS,CAACwkB,UAAX,EAAuB/N,IAAvB,CAAjC;AACD,KAFD,MAEO;AACL,MAAa;AACX,YAAI,CAAChV,MAAM,CAACvB,KAAP,IAAgB9B,SAAS,GAAGW,SAA5B,CAAD,MAA6Cb,OAAjD,EAA0D;AACxDolD,UAAAA,wCAAwC,CAACtP,WAAD,CAAxC;AACD;AACF;AACF;;AACDl0C,IAAAA,IAAI,GAAG2B,MAAP;AACAA,IAAAA,MAAM,GAAGA,MAAM,CAACtB,MAAhB;AACD;;AACD,MAAIL,IAAI,CAACzC,GAAL,KAAalE,QAAjB,EAA2B;AACzB,QAAMqX,IAAe,GAAG1Q,IAAI,CAACa,SAA7B;AACA,WAAO6P,IAAP;AACD,GAHD,MAGO;AACL,WAAO,IAAP;AACD;AACF;AAGD;AACA;AACA;AACA;;;AACA,SAAS6yC,qBAAT,CAA+B7yC,IAA/B,EAAgDuG,WAAhD,EAAqE;AACnE,MAAMwsC,oBAAoB,GAAG/yC,IAAI,CAACqL,YAAlC,CADmE;AAInE;;AACA5E,EAAAA,yBAAyB,CAACzG,IAAD,EAAOuG,WAAP,CAAzB,CALmE;;AAQnE,MAAMpB,SAAS,GAAGH,YAAY,CAC5BhF,IAD4B,EAE5BA,IAAI,KAAK6vC,kBAAT,GAA8BC,6BAA9B,GAA8DztC,OAFlC,CAA9B,CARmE;;AAanE,MAAM2wC,mBAAmB,GAAGjsC,uBAAuB,EAAnD;;AAEA,MAAI5B,SAAS,KAAK9C,OAAlB,EAA2B;AACzB;AACA,QAAI0wC,oBAAoB,KAAK,IAA7B,EAAmC;AACjC3nC,MAAAA,cAAc,CAAC2nC,oBAAD,CAAd;AACA/yC,MAAAA,IAAI,CAACqL,YAAL,GAAoB,IAApB;AACArL,MAAAA,IAAI,CAACizC,gBAAL,GAAwB9wC,cAAxB;AACD;;AACD;AACD,GAvBkE;;;AA0BnE,MAAI4wC,oBAAoB,KAAK,IAA7B,EAAmC;AACjC,QAAMG,wBAAwB,GAAGlzC,IAAI,CAACizC,gBAAtC;;AACA,QAAIC,wBAAwB,KAAKF,mBAAjC,EAAsD;AACpD;AACA;AACD,KALgC;AAOjC;;;AACA5nC,IAAAA,cAAc,CAAC2nC,oBAAD,CAAd;AACD,GAnCkE;;;AAsCnE,MAAII,eAAJ;;AACA,MAAIH,mBAAmB,KAAK5xC,gBAA5B,EAA8C;AAC5C;AACA;AACA+xC,IAAAA,eAAe,GAAGjoC,oBAAoB,CACpC0nC,qBAAqB,CAAC32C,IAAtB,CAA2B,IAA3B,EAAiC+D,IAAjC,CADoC,CAAtC;AAGD,GAND,MAMO,IAAIgzC,mBAAmB,KAAK3xC,uBAA5B,EAAqD;AAC1D8xC,IAAAA,eAAe,GAAGpoC,gBAAgB,CAChCvG,mBADgC,EAEhCouC,qBAAqB,CAAC32C,IAAtB,CAA2B,IAA3B,EAAiC+D,IAAjC,CAFgC,CAAlC;AAID,GALM,MAKA;AACL,QAAMuE,sBAAsB,GAAGM,+BAA+B,CAC5DmuC,mBAD4D,CAA9D;AAGAG,IAAAA,eAAe,GAAGpoC,gBAAgB,CAChCxG,sBADgC,EAEhC6uC,2BAA2B,CAACn3C,IAA5B,CAAiC,IAAjC,EAAuC+D,IAAvC,CAFgC,CAAlC;AAID;;AAEDA,EAAAA,IAAI,CAACizC,gBAAL,GAAwBD,mBAAxB;AACAhzC,EAAAA,IAAI,CAACqL,YAAL,GAAoB8nC,eAApB;AACD;AAGD;;;AACA,SAASC,2BAAT,CAAqCpzC,IAArC,EAA2C;AACzC;AACA;AACA6xC,EAAAA,gBAAgB,GAAGruC,WAAnB;AACAsuC,EAAAA,oBAAoB,GAAGzvC,OAAvB;AACA0vC,EAAAA,wBAAwB,GAAG1vC,OAA3B;;AALyC,QAQvC,CAACutC,gBAAgB,IAAIR,aAAa,GAAGC,aAApB,CAAjB,MAAyD3T,SARlB;AAAA;AAAA;AAAA;AAAA;AAazC;;;AACA,MAAM2X,oBAAoB,GAAGrzC,IAAI,CAACqL,YAAlC;AACA,MAAMioC,sBAAsB,GAAGC,mBAAmB,EAAlD;;AACA,MAAID,sBAAJ,EAA4B;AAC1B;AACA;AACA,QAAItzC,IAAI,CAACqL,YAAL,KAAsBgoC,oBAA1B,EAAgD;AAC9C;AACA;AACA;AACA,aAAO,IAAP;AACD,KALD;AAQD,GA3BwC;AA8BzC;;;AACA,MAAItvC,KAAK,GAAGiB,YAAY,CACtBhF,IADsB,EAEtBA,IAAI,KAAK6vC,kBAAT,GAA8BC,6BAA9B,GAA8DztC,OAFxC,CAAxB;;AAIA,MAAI0B,KAAK,KAAK1B,OAAd,EAAuB;AACrB;AACA,WAAO,IAAP;AACD;;AAED,MAAImxC,UAAU,GAAGC,oBAAoB,CAACzzC,IAAD,EAAO+D,KAAP,CAArC;;AAEA,MACE4D,gBAAgB,CACduoC,+BADc,EAEdE,8BAFc,CADlB,EAKE;AACA;AACA;AACA;AACA;AACA;AACA;AACAsD,IAAAA,iBAAiB,CAAC1zC,IAAD,EAAOqC,OAAP,CAAjB;AACD,GAbD,MAaO,IAAImxC,UAAU,KAAKlE,cAAnB,EAAmC;AACxC,QAAIkE,UAAU,KAAKhE,WAAnB,EAAgC;AAC9BI,MAAAA,gBAAgB,IAAInU,eAApB,CAD8B;AAI9B;;AACA,UAAIz7B,IAAI,CAACg4B,OAAT,EAAkB;AAChBh4B,QAAAA,IAAI,CAACg4B,OAAL,GAAe,KAAf;AACA9iC,QAAAA,cAAc,CAAC8K,IAAI,CAACugB,aAAN,CAAd;AACD,OAR6B;AAW9B;AACA;AACA;;;AACAxc,MAAAA,KAAK,GAAG8C,mCAAmC,CAAC7G,IAAD,CAA3C;;AACA,UAAI+D,KAAK,KAAK1B,OAAd,EAAuB;AACrBmxC,QAAAA,UAAU,GAAGG,cAAc,CAAC3zC,IAAD,EAAO+D,KAAP,CAA3B;AACD;AACF;;AAED,QAAIyvC,UAAU,KAAKjE,gBAAnB,EAAqC;AACnC,UAAMqE,UAAU,GAAG3D,4BAAnB;AACAyD,MAAAA,iBAAiB,CAAC1zC,IAAD,EAAOqC,OAAP,CAAjB;AACAoG,MAAAA,mBAAiB,CAACzI,IAAD,EAAO+D,KAAP,CAAjB;AACA8uC,MAAAA,qBAAqB,CAAC7yC,IAAD,EAAOzN,KAAG,EAAV,CAArB;AACA,YAAMqhD,UAAN;AACD,KA3BuC;AA8BxC;;;AACA,QAAM17B,YAAmB,GAAIlY,IAAI,CAAChQ,OAAL,CAAaR,SAA1C;AACAwQ,IAAAA,IAAI,CAACkY,YAAL,GAAoBA,YAApB;AACAlY,IAAAA,IAAI,CAAC6zC,aAAL,GAAqB9vC,KAArB;AACA+vC,IAAAA,sBAAsB,CAAC9zC,IAAD,EAAOwzC,UAAP,EAAmBzvC,KAAnB,CAAtB;AACD;;AAED8uC,EAAAA,qBAAqB,CAAC7yC,IAAD,EAAOzN,KAAG,EAAV,CAArB;;AACA,MAAIyN,IAAI,CAACqL,YAAL,KAAsBgoC,oBAA1B,EAAgD;AAC9C;AACA;AACA,WAAOD,2BAA2B,CAACn3C,IAA5B,CAAiC,IAAjC,EAAuC+D,IAAvC,CAAP;AACD;;AACD,SAAO,IAAP;AACD;;AAED,SAAS8zC,sBAAT,CAAgC9zC,IAAhC,EAAsCwzC,UAAtC,EAAkDzvC,KAAlD,EAAyD;AACvD,UAAQyvC,UAAR;AACE,SAAKlE,cAAL;AACA,SAAKC,gBAAL;AAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAEtB;AACD;AACA;AACA;;AACA,SAAKC,WAAL;AAAkB;AAChB;AACA;AACAuE,QAAAA,UAAU,CAAC/zC,IAAD,CAAV;AACA;AACD;;AACD,SAAKyvC,aAAL;AAAoB;AAClBhnC,QAAAA,mBAAiB,CAACzI,IAAD,EAAO+D,KAAP,CAAjB,CADkB;AAIlB;;AAEA,YACEkD,mBAAmB,CAAClD,KAAD,CAAnB;AAEA,SAACiwC,8BAA8B,EAHjC,EAIE;AACA;AACA;AACA,cAAMC,cAAc,GAClB1D,4BAA4B,GAAGC,oBAA/B,GAAsDj+C,KAAG,EAD3D,CAHA;;AAMA,cAAI0hD,cAAc,GAAG,EAArB,EAAyB;AACvB,gBAAM9uC,SAAS,GAAGH,YAAY,CAAChF,IAAD,EAAOqC,OAAP,CAA9B;;AACA,gBAAI8C,SAAS,KAAK9C,OAAlB,EAA2B;AACzB;AACA;AACD;;AACD,gBAAMiD,cAAc,GAAGtF,IAAI,CAACsF,cAA5B;;AACA,gBAAI,CAACsC,eAAe,CAACtC,cAAD,EAAiBvB,KAAjB,CAApB,EAA6C;AAC3C;AACA;AACA;AACA;AACA,kBAAMsC,SAAS,GAAGsT,gBAAgB,EAAlC;AACAjR,cAAAA,cAAc,CAAC1I,IAAD,EAAOsF,cAAP,AAAA,CAAd;AACA;AACD,aAfsB;AAkBvB;AACA;;;AACAtF,YAAAA,IAAI,CAACk0C,aAAL,GAAqB9hD,eAAe,CAClC2hD,UAAU,CAAC93C,IAAX,CAAgB,IAAhB,EAAsB+D,IAAtB,CADkC,EAElCi0C,cAFkC,CAApC;AAIA;AACD;AACF,SA1CiB;;;AA4ClBF,QAAAA,UAAU,CAAC/zC,IAAD,CAAV;AACA;AACD;;AACD,SAAK0vC,sBAAL;AAA6B;AAC3BjnC,QAAAA,mBAAiB,CAACzI,IAAD,EAAO+D,KAAP,CAAjB;;AAEA,YAAImD,uBAAuB,CAACnD,KAAD,CAA3B,EAAoC;AAClC;AACA;AACA;AACA;AACD;;AAED,YAAI,CAACiwC,8BAA8B,EAAnC,EAAuC;AACrC;AACA;AACA;AACA;AACA;AACA;AAEA,cAAM5tC,mBAAmB,GAAGF,sBAAsB,CAAClG,IAAD,EAAO+D,KAAP,CAAlD;AACA,cAAMowC,WAAW,GAAG/tC,mBAApB;AACA,cAAMguC,aAAa,GAAG7hD,KAAG,KAAK4hD,WAA9B;;AACA,cAAMF,eAAc,GAAGI,GAAG,CAACD,aAAD,CAAH,GAAqBA,aAA5C,CAXqC;;;AAcrC,cAAIH,eAAc,GAAG,EAArB,EAAyB;AACvB;AACA;AACAj0C,YAAAA,IAAI,CAACk0C,aAAL,GAAqB9hD,eAAe,CAClC2hD,UAAU,CAAC93C,IAAX,CAAgB,IAAhB,EAAsB+D,IAAtB,CADkC,EAElCi0C,eAFkC,CAApC;AAIA;AACD;AACF,SAjC0B;;;AAoC3BF,QAAAA,UAAU,CAAC/zC,IAAD,CAAV;AACA;AACD;;AACD,SAAK2vC,aAAL;AAAoB;AAClB;AACAoE,QAAAA,UAAU,CAAC/zC,IAAD,CAAV;AACA;AACD;;AACD;AAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAER;AA3GH;AA6GD;;AAED,SAASyI,mBAAT,CAA2BzI,IAA3B,EAAiCsF,cAAjC,EAAiD;AAC/C;AACA;AACA;AACA;AACAA,EAAAA,cAAc,GAAGyC,WAAW,CAACzC,cAAD,EAAiB+qC,6BAAjB,CAA5B;AACA/qC,EAAAA,cAAc,GAAGyC,WAAW,CAACzC,cAAD,EAAiB8qC,8BAAjB,CAA5B;AACAkE,EAAAA,iBAAyC,CAACt0C,IAAD,EAAOsF,cAAP,CAAzC;AACD;AAGD;;;AACA,SAASstC,qBAAT,CAA+B5yC,IAA/B,EAAqC;AAAA,QAEjC,CAAC4vC,gBAAgB,IAAIR,aAAa,GAAGC,aAApB,CAAjB,MAAyD3T,SAFxB;AAAA;AAAA;AAAA;AAAA;;AAMnC6X,EAAAA,mBAAmB;AAEnB,MAAIxvC,KAAJ;AACA,MAAIyvC,UAAJ;;AACA,MACExzC,IAAI,KAAK6vC,kBAAT,IACAloC,gBAAgB,CAAC3H,IAAI,CAACqF,YAAN,EAAoByqC,6BAApB,CAFlB,EAGE;AACA;AACA;AACA/rC,IAAAA,KAAK,GAAG+rC,6BAAR;AACA0D,IAAAA,UAAU,GAAGG,cAAc,CAAC3zC,IAAD,EAAO+D,KAAP,CAA3B;;AACA,QACE4D,gBAAgB,CACduoC,+BADc,EAEdE,8BAFc,CADlB,EAKE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACArsC,MAAAA,KAAK,GAAGiB,YAAY,CAAChF,IAAD,EAAO+D,KAAP,CAApB;AACAyvC,MAAAA,UAAU,GAAGG,cAAc,CAAC3zC,IAAD,EAAO+D,KAAP,CAA3B;AACD;AACF,GAzBD,MAyBO;AACLA,IAAAA,KAAK,GAAGiB,YAAY,CAAChF,IAAD,EAAOqC,OAAP,CAApB;AACAmxC,IAAAA,UAAU,GAAGG,cAAc,CAAC3zC,IAAD,EAAO+D,KAAP,CAA3B;AACD;;AAED,MAAI/D,IAAI,CAACnT,GAAL,KAAaoS,UAAb,IAA2Bu0C,UAAU,KAAKhE,WAA9C,EAA2D;AACzDI,IAAAA,gBAAgB,IAAInU,eAApB,CADyD;AAIzD;;AACA,QAAIz7B,IAAI,CAACg4B,OAAT,EAAkB;AAChBh4B,MAAAA,IAAI,CAACg4B,OAAL,GAAe,KAAf;AACA9iC,MAAAA,cAAc,CAAC8K,IAAI,CAACugB,aAAN,CAAd;AACD,KARwD;AAWzD;AACA;AACA;;;AACAxc,IAAAA,KAAK,GAAG8C,mCAAmC,CAAC7G,IAAD,CAA3C;;AACA,QAAI+D,KAAK,KAAK1B,OAAd,EAAuB;AACrBmxC,MAAAA,UAAU,GAAGG,cAAc,CAAC3zC,IAAD,EAAO+D,KAAP,CAA3B;AACD;AACF;;AAED,MAAIyvC,UAAU,KAAKjE,gBAAnB,EAAqC;AACnC,QAAMqE,UAAU,GAAG3D,4BAAnB;AACAyD,IAAAA,iBAAiB,CAAC1zC,IAAD,EAAOqC,OAAP,CAAjB;AACAoG,IAAAA,mBAAiB,CAACzI,IAAD,EAAO+D,KAAP,CAAjB;AACA8uC,IAAAA,qBAAqB,CAAC7yC,IAAD,EAAOzN,KAAG,EAAV,CAArB;AACA,UAAMqhD,UAAN;AACD,GAlEkC;AAqEnC;;;AACA,MAAM17B,YAAmB,GAAIlY,IAAI,CAAChQ,OAAL,CAAaR,SAA1C;AACAwQ,EAAAA,IAAI,CAACkY,YAAL,GAAoBA,YAApB;AACAlY,EAAAA,IAAI,CAAC6zC,aAAL,GAAqB9vC,KAArB;AACAgwC,EAAAA,UAAU,CAAC/zC,IAAD,CAAV,CAzEmC;AA4EnC;;AACA6yC,EAAAA,qBAAqB,CAAC7yC,IAAD,EAAOzN,KAAG,EAAV,CAArB;AAEA,SAAO,IAAP;AACD;;AAED,AAAO,SAASgiD,SAAT,CAAmBv0C,IAAnB,EAAoC+D,KAApC,EAAkD;AACvD4E,EAAAA,eAAe,CAAC3I,IAAD,EAAO+D,KAAP,CAAf;AACA8uC,EAAAA,qBAAqB,CAAC7yC,IAAD,EAAOzN,KAAG,EAAV,CAArB;;AACA,MAAI,CAACq9C,gBAAgB,IAAIR,aAAa,GAAGC,aAApB,CAAjB,MAAyD3T,SAA7D,EAAwE;AACtEkV,IAAAA,gBAAgB;AAChBtlC,IAAAA,sBAAsB;AACvB;AACF;AAED,AAAO,SAASkwB,mBAAT,GAAiD;AACtD,SAAOoU,gBAAP;AACD;AAED,AAAO,SAAS4E,oBAAT,GAAgC;AACrC;AACA;AACA;AACA;AACA,MACE,CAAC5E,gBAAgB,IAAIZ,cAAc,GAAGI,aAAjB,GAAiCC,aAArC,CAAjB,MACA3T,SAFF,EAGE;AACA,IAAa;AACX,UAAI,CAACkU,gBAAgB,GAAGR,aAApB,MAAuC1T,SAA3C,EAAsD;AACpD,cACE,uEACE,oBAFJ;AAID;AACF,KARD;AAUA;AACA;;;AACA;AACD;;AACD+Y,EAAAA,2BAA2B,GAtBU;AAwBrC;;AACAlB,EAAAA,mBAAmB;AACpB;AAED,AAAO,SAASmB,eAAT,CAA4B/6C,EAA5B,EAA4C;AACjD,EAQO;AACL,WAAOmR,eAAe,CAACpG,gBAAD,EAA0B/K,EAA1B,CAAtB;AACD;AACF;;AAED,SAAS86C,2BAAT,GAAuC;AACrC,MAAInD,+BAA+B,KAAK,IAAxC,EAA8C;AAC5C;AACA;AACA,QAAMqD,KAAK,GAAGrD,+BAAd;AACAA,IAAAA,+BAA+B,GAAG,IAAlC;AACAqD,IAAAA,KAAK,CAAC5kC,OAAN,CAAc,UAAA/P,IAAI,EAAI;AACpB4I,MAAAA,0BAA0B,CAAC5I,IAAD,CAA1B;AACA6yC,MAAAA,qBAAqB,CAAC7yC,IAAD,EAAOzN,KAAG,EAAV,CAArB;AACD,KAHD;AAID,GAVoC;;;AAYrC+Y,EAAAA,sBAAsB;AACvB;;AAED,AAAO,SAASspC,cAAT,CAA8Bj7C,EAA9B,EAA0CnJ,CAA1C,EAAmD;AACxD,MAAMqkD,oBAAoB,GAAGjF,gBAA7B;AACAA,EAAAA,gBAAgB,IAAIZ,cAApB;;AACA,MAAI;AACF,WAAOr1C,EAAE,CAACnJ,CAAD,CAAT;AACD,GAFD,SAEU;AACRo/C,IAAAA,gBAAgB,GAAGiF,oBAAnB;;AACA,QAAIjF,gBAAgB,KAAKlU,SAAzB,EAAoC;AAClC;AACAkV,MAAAA,gBAAgB;AAChBtlC,MAAAA,sBAAsB;AACvB;AACF;AACF;AAED,AAAO,SAASwpC,mBAAT,CAAmCn7C,EAAnC,EAA+CnJ,CAA/C,EAAwD;AAC7D,MAAMqkD,oBAAoB,GAAGjF,gBAA7B;AACAA,EAAAA,gBAAgB,IAAIX,YAApB;;AACA,MAAI;AACF,WAAOt1C,EAAE,CAACnJ,CAAD,CAAT;AACD,GAFD,SAEU;AACRo/C,IAAAA,gBAAgB,GAAGiF,oBAAnB;;AACA,QAAIjF,gBAAgB,KAAKlU,SAAzB,EAAoC;AAClC;AACAkV,MAAAA,gBAAgB;AAChBtlC,MAAAA,sBAAsB;AACvB;AACF;AACF;AAED,AAAO,SAASypC,eAAT,CACLp7C,EADK,EAELnJ,CAFK,EAGLC,CAHK,EAILkK,CAJK,EAKLupC,CALK,EAMF;AACH,MAAM2Q,oBAAoB,GAAGjF,gBAA7B;AACAA,EAAAA,gBAAgB,IAAIV,oBAApB;;AAEA,EAiBO;AACL,QAAI;AACF,aAAOpkC,eAAe,CACpBrG,sBADoB,EAEpB9K,EAAE,CAACsC,IAAH,CAAQ,IAAR,EAAczL,CAAd,EAAiBC,CAAjB,EAAoBkK,CAApB,EAAuBupC,CAAvB,CAFoB,CAAtB;AAID,KALD,SAKU;AACR0L,MAAAA,gBAAgB,GAAGiF,oBAAnB;;AACA,UAAIjF,gBAAgB,KAAKlU,SAAzB,EAAoC;AAClC;AACAkV,QAAAA,gBAAgB;AAChBtlC,QAAAA,sBAAsB;AACvB;AACF;AACF;AACF;AAED,AAAO,SAAS0pC,gBAAT,CAAgCr7C,EAAhC,EAAiDnJ,CAAjD,EAA0D;AAC/D,MAAMqkD,oBAAoB,GAAGjF,gBAA7B;AACAA,EAAAA,gBAAgB,IAAI,CAACZ,cAArB;AACAY,EAAAA,gBAAgB,IAAIT,sBAApB;;AACA,MAAI;AACF,WAAOx1C,EAAE,CAACnJ,CAAD,CAAT;AACD,GAFD,SAEU;AACRo/C,IAAAA,gBAAgB,GAAGiF,oBAAnB;;AACA,QAAIjF,gBAAgB,KAAKlU,SAAzB,EAAoC;AAClC;AACAkV,MAAAA,gBAAgB;AAChBtlC,MAAAA,sBAAsB;AACvB;AACF;AACF;AAED,AAAO,SAAS2pC,SAAT,CAAyBt7C,EAAzB,EAAqCnJ,CAArC,EAA8C;AACnD,MAAMqkD,oBAAoB,GAAGjF,gBAA7B;;AACA,MAAI,CAACiF,oBAAoB,IAAIzF,aAAa,GAAGC,aAApB,CAArB,MAA6D3T,SAAjE,EAA4E;AAC1E,IAAa;AACX,YACE,uEACE,sEADF,GAEE,iCAHJ;AAKD;;AACD,WAAO/hC,EAAE,CAACnJ,CAAD,CAAT;AACD;;AACDo/C,EAAAA,gBAAgB,IAAIZ,cAApB;;AAEA,EAiBO;AACL,QAAI;AACF,UAAIr1C,EAAJ,EAAQ;AACN,eAAOmR,eAAe,CAACtG,mBAAD,EAA6B7K,EAAE,CAACsC,IAAH,CAAQ,IAAR,EAAczL,CAAd,CAA7B,CAAtB;AACD,OAFD,MAEO;AACL,eAAQyI,SAAR;AACD;AACF,KAND,SAMU;AACR22C,MAAAA,gBAAgB,GAAGiF,oBAAnB,CADQ;AAGR;AACA;;AACAvpC,MAAAA,sBAAsB;AACvB;AACF;AACF;AAED,AAAO,SAAS4pC,eAAT,CAAyBv7C,EAAzB,EAAgD;AACrD,MAAMk7C,oBAAoB,GAAGjF,gBAA7B;AACAA,EAAAA,gBAAgB,IAAIZ,cAApB;;AACA,EAeO;AACL,QAAI;AACFlkC,MAAAA,eAAe,CAACtG,mBAAD,EAA6B7K,EAA7B,CAAf;AACD,KAFD,SAEU;AACRi2C,MAAAA,gBAAgB,GAAGiF,oBAAnB;;AACA,UAAIjF,gBAAgB,KAAKlU,SAAzB,EAAoC;AAClC;AACAkV,QAAAA,gBAAgB;AAChBtlC,QAAAA,sBAAsB;AACvB;AACF;AACF;AACF;AAED,AAAO,SAASgrB,eAAT,CAAyBjnC,KAAzB,EAAuC0U,KAAvC,EAAqD;AAC1DoxC,EAAAA,IAAW,CAACpF,wBAAD,EAA2BrZ,kBAA3B,EAA+CrnC,KAA/C,CAAX;AACAqnC,EAAAA,kBAAkB,GAAG5uB,UAAU,CAAC4uB,kBAAD,EAAqB3yB,KAArB,CAA/B;AACAmsC,EAAAA,+BAA+B,GAAGpoC,UAAU,CAC1CooC,+BAD0C,EAE1CnsC,KAF0C,CAA5C;AAID;AAED,AAAO,SAASy9B,cAAT,CAAwBnyC,KAAxB,EAAsC;AAC3CqnC,EAAAA,kBAAkB,GAAGqZ,wBAAwB,CAAC//C,OAA9C;AACAolD,EAAAA,GAAY,CAACrF,wBAAD,EAA2B1gD,KAA3B,CAAZ;AACD;;AAED,SAASqkD,iBAAT,CAA2B1zC,IAA3B,EAA4C+D,KAA5C,EAA0D;AACxD/D,EAAAA,IAAI,CAACkY,YAAL,GAAoB,IAApB;AACAlY,EAAAA,IAAI,CAAC6zC,aAAL,GAAqBxxC,OAArB;AAEA,MAAM6xC,aAAa,GAAGl0C,IAAI,CAACk0C,aAA3B;;AACA,MAAIA,aAAa,KAAK5hD,SAAtB,EAAiC;AAC/B;AACA;AACA0N,IAAAA,IAAI,CAACk0C,aAAL,GAAqB5hD,SAArB,CAH+B;;AAK/BD,IAAAA,aAAa,CAAC6hD,aAAD,CAAb;AACD;;AAED,MAAI52C,cAAc,KAAK,IAAvB,EAA6B;AAC3B,QAAIukC,eAAe,GAAGvkC,cAAc,CAAC3N,MAArC;;AACA,WAAOkyC,eAAe,KAAK,IAA3B,EAAiC;AAC/BD,MAAAA,qBAAqB,CAACC,eAAD,CAArB;AACAA,MAAAA,eAAe,GAAGA,eAAe,CAAClyC,MAAlC;AACD;AACF;;AACDkgD,EAAAA,kBAAkB,GAAG7vC,IAArB;AACA1C,EAAAA,cAAc,GAAG+hB,oBAAoB,CAACrf,IAAI,CAAChQ,OAAN,EAAe,IAAf,CAArC;AACA8/C,EAAAA,6BAA6B,GAAGpZ,kBAAkB,GAAGwZ,+BAA+B,GAAGnsC,KAAvF;AACAisC,EAAAA,4BAA4B,GAAGV,cAA/B;AACAW,EAAAA,4BAA4B,GAAG,IAA/B;AACAE,EAAAA,8BAA8B,GAAG9tC,OAAjC;AACA+tC,EAAAA,8BAA8B,GAAG/tC,OAAjC;AACAguC,EAAAA,6BAA6B,GAAGhuC,OAAhC;;AAEA,EAA4B;AAC1BuvC,IAAAA,uBAAuB,GAAG,IAA1B;AACD;;AAED,EAAa;AACXxiC,IAAAA,uBAAuB,CAACK,sBAAxB;AACD;AACF;;AAED,SAAS4lC,WAAT,CAAqBr1C,IAArB,EAA2Bs1C,WAA3B,EAA8C;AAC5C,KAAG;AACD,QAAIC,WAAW,GAAGj4C,cAAlB;;AACA,QAAI;AACF;AACAwV,MAAAA,wBAAwB;AACxB8X,MAAAA,oBAAoB;AACpB1Y,MAAAA,iBAA2B,GAJzB;AAMF;;AACA/iB,MAAAA,mBAAiB,CAACa,OAAlB,GAA4B,IAA5B;;AAEA,UAAIulD,WAAW,KAAK,IAAhB,IAAwBA,WAAW,CAAC5lD,MAAZ,KAAuB,IAAnD,EAAyD;AACvD;AACA;AACA;AACA;AACAqgD,QAAAA,4BAA4B,GAAGT,gBAA/B;AACAU,QAAAA,4BAA4B,GAAGqF,WAA/B,CANuD;AAQvD;AACA;AACA;AACA;AACA;;AACAh4C,QAAAA,cAAc,GAAG,IAAjB;AACA;AACD;;AAED,UAAIxO,mBAAmB,IAAIymD,WAAW,CAAC3lC,IAAZ,GAAmBpC,WAA9C,EAA2D;AACzD;AACA;AACA;AACAymB,QAAAA,wCAAwC,CAACshB,WAAD,EAAc,IAAd,CAAxC;AACD;;AAEDhS,MAAAA,cAAc,CACZvjC,IADY,EAEZu1C,WAAW,CAAC5lD,MAFA,EAGZ4lD,WAHY,EAIZD,WAJY,EAKZxF,6BALY,CAAd;AAOA0F,MAAAA,kBAAkB,CAACD,WAAD,CAAlB;AACD,KAzCD,CAyCE,OAAOE,qBAAP,EAA8B;AAC9B;AACAH,MAAAA,WAAW,GAAGG,qBAAd;;AACA,UAAIn4C,cAAc,KAAKi4C,WAAnB,IAAkCA,WAAW,KAAK,IAAtD,EAA4D;AAC1D;AACA;AACAA,QAAAA,WAAW,GAAGA,WAAW,CAAC5lD,MAA1B;AACA2N,QAAAA,cAAc,GAAGi4C,WAAjB;AACD,OALD,MAKO;AACLA,QAAAA,WAAW,GAAGj4C,cAAd;AACD;;AACD;AACD,KAvDA;;;AAyDD;AACD,GA1DD,QA0DS,IA1DT;AA2DD;;AAED,SAASo4C,cAAT,GAA0B;AACxB,MAAMrjB,cAAc,GAAGz5B,wBAAsB,CAAC5I,OAA9C;AACA4I,EAAAA,wBAAsB,CAAC5I,OAAvB,GAAiCu6B,qBAAjC;;AACA,MAAI8H,cAAc,KAAK,IAAvB,EAA6B;AAC3B;AACA;AACA;AACA,WAAO9H,qBAAP;AACD,GALD,MAKO;AACL,WAAO8H,cAAP;AACD;AACF;;AAED,SAASsjB,aAAT,CAAuBtjB,cAAvB,EAAuC;AACrCz5B,EAAAA,wBAAsB,CAAC5I,OAAvB,GAAiCqiC,cAAjC;AACD;;AAED,SAASujB,gBAAT,CAA0B51C,IAA1B,EAAgC;AAC9B,EAA4B;AAC1B,QAAM61C,gBAAyC,GAAGj1C,yBAAiB,CAAC5Q,OAApE;AACA4Q,IAAAA,yBAAiB,CAAC5Q,OAAlB,GAA4BgQ,IAAI,CAAC+nC,oBAAjC;AACA,WAAO8N,gBAAP;AACD;AAEF;;AAED,SAASC,eAAT,CAAyBD,gBAAzB,EAA2C;AACzC,EAA4B;AAC1Bj1C,IAAAA,yBAAiB,CAAC5Q,OAAlB,GAA4B6lD,gBAA5B;AACD;AACF;;AAED,AAAO,SAAS7L,wBAAT,GAAoC;AACzCuG,EAAAA,4BAA4B,GAAGh+C,KAAG,EAAlC;AACD;AAED,AAAO,SAASslB,sBAAT,CAAgC5R,IAAhC,EAA0D;AAC/DkqC,EAAAA,8BAA8B,GAAGroC,UAAU,CACzC7B,IADyC,EAEzCkqC,8BAFyC,CAA3C;AAID;AAED,AAAO,SAASpP,gBAAT,GAAkC;AACvC,MAAIiP,4BAA4B,KAAKV,cAArC,EAAqD;AACnDU,IAAAA,4BAA4B,GAAGP,aAA/B;AACD;AACF;AAED,AAAO,SAAS7T,+BAAT,GAAiD;AACtD,MACEoU,4BAA4B,KAAKV,cAAjC,IACAU,4BAA4B,KAAKP,aAFnC,EAGE;AACAO,IAAAA,4BAA4B,GAAGN,sBAA/B;AACD,GANqD;AAStD;;;AACA,MACEG,kBAAkB,KAAK,IAAvB,KACC7oC,mBAAmB,CAACmpC,8BAAD,CAAnB,IACCnpC,mBAAmB,CAACopC,8BAAD,CAFrB,CADF,EAIE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA3nC,IAAAA,mBAAiB,CAAConC,kBAAD,EAAqBC,6BAArB,CAAjB;AACD;AACF;AAED,AAAO,SAAShM,cAAT,GAA0B;AAC/B,MAAIkM,4BAA4B,KAAKL,aAArC,EAAoD;AAClDK,IAAAA,4BAA4B,GAAGR,WAA/B;AACD;AACF;AAGD;;AACA,AAAO,SAASrO,wBAAT,GAA6C;AAClD;AACA;AACA,SAAO6O,4BAA4B,KAAKV,cAAxC;AACD;;AAED,SAASqE,cAAT,CAAwB3zC,IAAxB,EAAyC+D,KAAzC,EAAuD;AACrD,MAAM8wC,oBAAoB,GAAGjF,gBAA7B;AACAA,EAAAA,gBAAgB,IAAIR,aAApB;AACA,MAAM/c,cAAc,GAAGqjB,cAAc,EAArC,CAHqD;AAMrD;;AACA,MAAI7F,kBAAkB,KAAK7vC,IAAvB,IAA+B8vC,6BAA6B,KAAK/rC,KAArE,EAA4E;AAC1E2vC,IAAAA,iBAAiB,CAAC1zC,IAAD,EAAO+D,KAAP,CAAjB;AACAgyC,IAAAA,8BAA8B,CAAC/1C,IAAD,EAAO+D,KAAP,CAA9B;AACD;;AAED,MAAM8xC,gBAAgB,GAAGD,gBAAgB,CAAC51C,IAAD,CAAzC;;AAQA,EAA8B;AAC5B8M,IAAAA,iBAAiB,CAAC/I,KAAD,CAAjB;AACD;;AAED,KAAG;AACD,QAAI;AACFiyC,MAAAA,YAAY;AACZ;AACD,KAHD,CAGE,OAAOV,WAAP,EAAoB;AACpBD,MAAAA,WAAW,CAACr1C,IAAD,EAAOs1C,WAAP,CAAX;AACD;AACF,GAPD,QAOS,IAPT;;AAQAxiC,EAAAA,wBAAwB;;AACxB,EAA4B;AAC1BgjC,IAAAA,eAAe,CAAGD,gBAAH,CAAf;AACD;;AAEDjG,EAAAA,gBAAgB,GAAGiF,oBAAnB;AACAc,EAAAA,aAAa,CAACtjB,cAAD,CAAb;;AAEA,MAAI/0B,cAAc,KAAK,IAAvB,EAA6B;AAC3B;AAD2B;AAAA;AAAA;AAAA;AAAA;AAO5B;;AAQD,EAA8B;AAC5B0P,IAAAA,iBAAiB;AAClB,GAzDoD;;;AA4DrD6iC,EAAAA,kBAAkB,GAAG,IAArB;AACAC,EAAAA,6BAA6B,GAAGztC,OAAhC;AAEA,SAAO2tC,4BAAP;AACD;;AAGD;;;AACA,SAASgG,YAAT,GAAwB;AACtB;AACA,SAAO14C,cAAc,KAAK,IAA1B,EAAgC;AAC9B24C,IAAAA,iBAAiB,CAAC34C,cAAD,CAAjB;AACD;AACF;;AAED,SAASm2C,oBAAT,CAA8BzzC,IAA9B,EAA+C+D,KAA/C,EAA6D;AAC3D,MAAM8wC,oBAAoB,GAAGjF,gBAA7B;AACAA,EAAAA,gBAAgB,IAAIR,aAApB;AACA,MAAM/c,cAAc,GAAGqjB,cAAc,EAArC,CAH2D;AAM3D;;AACA,MAAI7F,kBAAkB,KAAK7vC,IAAvB,IAA+B8vC,6BAA6B,KAAK/rC,KAArE,EAA4E;AAC1E6sC,IAAAA,gBAAgB;AAChB8C,IAAAA,iBAAiB,CAAC1zC,IAAD,EAAO+D,KAAP,CAAjB;AACAgyC,IAAAA,8BAA8B,CAAC/1C,IAAD,EAAO+D,KAAP,CAA9B;AACD;;AAED,MAAM8xC,gBAAgB,GAAGD,gBAAgB,CAAC51C,IAAD,CAAzC;;AAQA,EAA8B;AAC5B8M,IAAAA,iBAAiB,CAAC/I,KAAD,CAAjB;AACD;;AAED,KAAG;AACD,QAAI;AACFmyC,MAAAA,kBAAkB;AAClB;AACD,KAHD,CAGE,OAAOZ,WAAP,EAAoB;AACpBD,MAAAA,WAAW,CAACr1C,IAAD,EAAOs1C,WAAP,CAAX;AACD;AACF,GAPD,QAOS,IAPT;;AAQAxiC,EAAAA,wBAAwB;;AACxB,EAA4B;AAC1BgjC,IAAAA,eAAe,CAAGD,gBAAH,CAAf;AACD;;AAEDF,EAAAA,aAAa,CAACtjB,cAAD,CAAb;AACAud,EAAAA,gBAAgB,GAAGiF,oBAAnB;;;AASA,MAAIv3C,cAAc,KAAK,IAAvB,EAA6B;AAC3B;AACA,IAA8B;AAC5ByP,MAAAA,iBAAiB;AAClB;;AACD,WAAOuiC,cAAP;AACD,GAND,MAMO;AACL;AACA,IAA8B;AAC5BtiC,MAAAA,iBAAiB;AAClB,KAJI;;;AAOL6iC,IAAAA,kBAAkB,GAAG,IAArB;AACAC,IAAAA,6BAA6B,GAAGztC,OAAhC,CARK;;AAWL,WAAO2tC,4BAAP;AACD;AACF;AAED;;;AACA,SAASkG,kBAAT,GAA8B;AAC5B;AACA,SAAO54C,cAAc,KAAK,IAAnB,IAA2B,CAACgN,WAAW,EAA9C,EAAkD;AAChD2rC,IAAAA,iBAAiB,CAAC34C,cAAD,CAAjB;AACD;AACF;;AAED,SAAS24C,iBAAT,CAA2BE,UAA3B,EAAoD;AAClD;AACA;AACA;AACA,MAAMnmD,OAAO,GAAGmmD,UAAU,CAAC3mD,SAA3B;AACAyiB,EAAAA,eAAyB,CAACkkC,UAAD,CAAzB;AAEA,MAAIvhC,IAAJ;;AACA,MAAI9lB,CAAuB,CAACqnD,UAAU,CAACvmC,IAAX,GAAkBpC,WAAnB,MAAoCJ,MAA/D,EAAuE;AACrE0mB,IAAAA,kBAAkB,CAACqiB,UAAD,CAAlB;AACAvhC,IAAAA,IAAI,GAAG2pB,WAAS,CAACvuC,OAAD,EAAUmmD,UAAV,EAAsBzf,kBAAtB,CAAhB;AACAzC,IAAAA,wCAAwC,CAACkiB,UAAD,EAAa,IAAb,CAAxC;AACD,GAJD,MAIO;AACLvhC,IAAAA,IAAI,GAAG2pB,WAAS,CAACvuC,OAAD,EAAUmmD,UAAV,EAAsBzf,kBAAtB,CAAhB;AACD;;AAEDxkB,EAAAA,iBAA2B;AAC3BikC,EAAAA,UAAU,CAACz5B,aAAX,GAA2By5B,UAAU,CAACj5B,YAAtC;;AACA,MAAItI,IAAI,KAAK,IAAb,EAAmB;AACjB;AACA4gC,IAAAA,kBAAkB,CAACW,UAAD,CAAlB;AACD,GAHD,MAGO;AACL74C,IAAAA,cAAc,GAAGsX,IAAjB;AACD;;AAEDzlB,EAAAA,mBAAiB,CAACa,OAAlB,GAA4B,IAA5B;AACD;;AAED,SAASwlD,kBAAT,CAA4BW,UAA5B,EAAqD;AACnD;AACA;AACA,MAAIC,aAAa,GAAGD,UAApB;;AACA,KAAG;AACD;AACA;AACA;AACA,QAAMnmD,OAAO,GAAGomD,aAAa,CAAC5mD,SAA9B;AACA,QAAMkuB,WAAW,GAAG04B,aAAa,CAACzmD,MAAlC,CALC;;AAQD,QAAI,CAACymD,aAAa,CAAC1mD,KAAd,GAAsBf,UAAvB,MAAuCjB,OAA3C,EAAoD;AAClDukB,MAAAA,eAAyB,CAACmkC,aAAD,CAAzB;AACA,UAAIxhC,IAAI,SAAR;;AACA,UACE,CACA,CAACwhC,aAAa,CAACxmC,IAAd,GAAqBpC,WAAtB,MAAuCJ,MAFzC,EAGE;AACAwH,QAAAA,IAAI,GAAG0rB,YAAY,CAACtwC,OAAD,EAAUomD,aAAV,EAAyB1f,kBAAzB,CAAnB;AACD,OALD,MAKO;AACL5C,QAAAA,kBAAkB,CAACsiB,aAAD,CAAlB;AACAxhC,QAAAA,IAAI,GAAG0rB,YAAY,CAACtwC,OAAD,EAAUomD,aAAV,EAAyB1f,kBAAzB,CAAnB,CAFK;;AAILzC,QAAAA,wCAAwC,CAACmiB,aAAD,EAAgB,KAAhB,CAAxC;AACD;;AACDlkC,MAAAA,iBAA2B;;AAE3B,UAAI0C,IAAI,KAAK,IAAb,EAAmB;AACjB;AACAtX,QAAAA,cAAc,GAAGsX,IAAjB;AACA;AACD;;AAEDyhC,MAAAA,eAAe,CAACD,aAAD,CAAf;;AAEA,UACE14B,WAAW,KAAK,IAAhB;AAEA,OAACA,WAAW,CAAChuB,KAAZ,GAAoBf,UAArB,MAAqCjB,OAHvC,EAIE;AACA;AACA;AACA;AACA,YAAIgwB,WAAW,CAACoB,WAAZ,KAA4B,IAAhC,EAAsC;AACpCpB,UAAAA,WAAW,CAACoB,WAAZ,GAA0Bs3B,aAAa,CAACt3B,WAAxC;AACD;;AACD,YAAIs3B,aAAa,CAACx3B,UAAd,KAA6B,IAAjC,EAAuC;AACrC,cAAIlB,WAAW,CAACkB,UAAZ,KAA2B,IAA/B,EAAqC;AACnClB,YAAAA,WAAW,CAACkB,UAAZ,CAAuBC,UAAvB,GAAoCu3B,aAAa,CAACt3B,WAAlD;AACD;;AACDpB,UAAAA,WAAW,CAACkB,UAAZ,GAAyBw3B,aAAa,CAACx3B,UAAvC;AACD,SAZD;AAeA;AACA;AACA;AACA;AACA;;;AACA,YAAMlvB,KAAK,GAAG0mD,aAAa,CAAC1mD,KAA5B,CApBA;AAuBA;AACA;;AACA,YAAIA,KAAK,GAAG/B,aAAZ,EAA2B;AACzB,cAAI+vB,WAAW,CAACkB,UAAZ,KAA2B,IAA/B,EAAqC;AACnClB,YAAAA,WAAW,CAACkB,UAAZ,CAAuBC,UAAvB,GAAoCu3B,aAApC;AACD,WAFD,MAEO;AACL14B,YAAAA,WAAW,CAACoB,WAAZ,GAA0Bs3B,aAA1B;AACD;;AACD14B,UAAAA,WAAW,CAACkB,UAAZ,GAAyBw3B,aAAzB;AACD;AACF;AACF,KA9DD,MA8DO;AACL;AACA;AACA;AACA,UAAMxhC,KAAI,GAAG+sB,UAAU,CAACyU,aAAD,AAAA,CAAvB,CAJK;;;AAQL,UAAIxhC,KAAI,KAAK,IAAb,EAAmB;AACjB;AACA;AACA;AACA;AACAA,QAAAA,KAAI,CAACllB,KAAL,IAAchB,cAAd;AACA4O,QAAAA,cAAc,GAAGsX,KAAjB;AACA;AACD;;AAED,UACE9lB,CACA,CAACsnD,aAAa,CAACxmC,IAAd,GAAqBpC,WAAtB,MAAuCJ,MAFzC,EAGE;AACA;AACA6mB,QAAAA,wCAAwC,CAACmiB,aAAD,EAAgB,KAAhB,CAAxC,CAFA;;AAKA,YAAIhiB,cAAc,GAAGgiB,aAAa,CAAChiB,cAAnC;AACA,YAAIvjC,KAAK,GAAGulD,aAAa,CAACvlD,KAA1B;;AACA,eAAOA,KAAK,KAAK,IAAjB,EAAuB;AACrBujC,UAAAA,cAAc,IAAIvjC,KAAK,CAACujC,cAAxB;AACAvjC,UAAAA,KAAK,GAAGA,KAAK,CAACC,OAAd;AACD;;AACDslD,QAAAA,aAAa,CAAChiB,cAAd,GAA+BA,cAA/B;AACD;;AAED,UAAI1W,WAAW,KAAK,IAApB,EAA0B;AACxB;AACAA,QAAAA,WAAW,CAACoB,WAAZ,GAA0BpB,WAAW,CAACkB,UAAZ,GAAyB,IAAnD;AACAlB,QAAAA,WAAW,CAAChuB,KAAZ,IAAqBf,UAArB;AACD;AACF;;AAED,QAAM2nD,YAAY,GAAGF,aAAa,CAACtlD,OAAnC;;AACA,QAAIwlD,YAAY,KAAK,IAArB,EAA2B;AACzB;AACAh5C,MAAAA,cAAc,GAAGg5C,YAAjB;AACA;AACD,KArHA;;;AAuHDF,IAAAA,aAAa,GAAG14B,WAAhB,CAvHC;;AAyHDpgB,IAAAA,cAAc,GAAG84C,aAAjB;AACD,GA1HD,QA0HSA,aAAa,KAAK,IA1H3B,EAJmD;;;AAiInD,MAAIpG,4BAA4B,KAAKV,cAArC,EAAqD;AACnDU,IAAAA,4BAA4B,GAAGL,aAA/B;AACD;AACF;;AAED,SAAS0G,eAAT,CAAyBD,aAAzB,EAA+C;AAC7C;AAEE;AACA,GAACA,aAAa,CAACvpD,GAAd,KAAsB7C,qBAAtB,IACCosD,aAAa,CAACvpD,GAAd,KAAsB9C,kBADxB,KAEAqsD,aAAa,CAACvgC,aAAd,KAAgC,IAFhC,IAGA,CAAClO,gBAAgB,CAAC+uB,kBAAD,EAAsBnzB,aAAtB,CAHjB,IAIA,CAAC6yC,aAAa,CAACxmC,IAAd,GAAqBrC,cAAtB,MAA0ClL,OAP5C,EAQE;AACA;AACA;AACA;AACD;;AAED,MAAIk0C,aAAa,GAAGl0C,OAApB,CAf6C;;AAkB7C,MAAIvT,CAAuB,CAACsnD,aAAa,CAACxmC,IAAd,GAAqBpC,WAAtB,MAAuCJ,MAAlE,EAA0E;AACxE;AACA;AACA,QAAIgnB,cAAc,GAAGgiB,aAAa,CAAChiB,cAAnC;AACA,QAAI6G,gBAAgB,GAAKmb,aAAa,CAAC/hB,gBAAvC,CAJwE;AAOxE;AACA;AACA;AACA;AACA;AACA;;AACA,QAAMmiB,2BAA2B,GAC/BJ,aAAa,CAAC5mD,SAAd,KAA4B,IAA5B,IACA4mD,aAAa,CAACvlD,KAAd,KAAwBulD,aAAa,CAAC5mD,SAAd,CAAwBqB,KAFlD;AAIA,QAAIA,KAAK,GAAGulD,aAAa,CAACvlD,KAA1B;;AACA,WAAOA,KAAK,KAAK,IAAjB,EAAuB;AACrB0lD,MAAAA,aAAa,GAAGzuC,UAAU,CACxByuC,aADwB,EAExBzuC,UAAU,CAACjX,KAAK,CAACkT,KAAP,EAAclT,KAAK,CAACmjB,UAApB,CAFc,CAA1B;;AAIA,UAAIwiC,2BAAJ,EAAiC;AAC/BpiB,QAAAA,cAAc,IAAIvjC,KAAK,CAACujC,cAAxB;AACD;;AACD6G,MAAAA,gBAAgB,IAAIpqC,KAAK,CAACoqC,gBAA1B;AACApqC,MAAAA,KAAK,GAAGA,KAAK,CAACC,OAAd;AACD;;AAED,QAAM2lD,kBAAkB,GACtBL,aAAa,CAACvpD,GAAd,KAAsBxD,iBAAtB,IACA+sD,aAAa,CAACvgC,aAAd,KAAgC,IAFlC;;AAGA,QAAI4gC,kBAAJ,EAAwB;AACtB;AACA,UAAMrc,oBAAoB,GAAGgc,aAAa,CAACvlD,KAA3C;;AACA,UAAIupC,oBAAoB,KAAK,IAA7B,EAAmC;AACjCa,QAAAA,gBAAgB,IAAMb,oBAAoB,CAACa,gBAA3C;AACD;AACF;;AAEDmb,IAAAA,aAAa,CAAChiB,cAAd,GAA+BA,cAA/B;AACAgiB,IAAAA,aAAa,CAACnb,gBAAd,GAAiCA,gBAAjC;AACD,GA3CD,MA2CO;AACL,QAAIpqC,MAAK,GAAGulD,aAAa,CAACvlD,KAA1B;;AACA,WAAOA,MAAK,KAAK,IAAjB,EAAuB;AACrB0lD,MAAAA,aAAa,GAAGzuC,UAAU,CACxByuC,aADwB,EAExBzuC,UAAU,CAACjX,MAAK,CAACkT,KAAP,EAAclT,MAAK,CAACmjB,UAApB,CAFc,CAA1B;AAIAnjB,MAAAA,MAAK,GAAGA,MAAK,CAACC,OAAd;AACD;AACF;;AAEDslD,EAAAA,aAAa,CAACpiC,UAAd,GAA2BuiC,aAA3B;AACD;;AAED,SAASxC,UAAT,CAAoB/zC,IAApB,EAA0B;AACxB,MAAMuoC,mBAAmB,GAAG59B,uBAAuB,EAAnD;AACAG,EAAAA,eAAe,CACbtG,mBADa,EAEbkyC,cAAc,CAACz6C,IAAf,CAAoB,IAApB,EAA0B+D,IAA1B,EAAgCuoC,mBAAhC,CAFa,CAAf;AAIA,SAAO,IAAP;AACD;;AAED,SAASmO,cAAT,CAAwB12C,IAAxB,EAA8BuoC,mBAA9B,EAAmD;AACjD,KAAG;AACD;AACA;AACA;AACA;AACA;AACA;AACAgL,IAAAA,mBAAmB;AACpB,GARD,QAQStC,6BAA6B,KAAK,IAR3C;;AASA0F,EAAAA,uCAAuC;;AAVU,QAa/C,CAAC/G,gBAAgB,IAAIR,aAAa,GAAGC,aAApB,CAAjB,MAAyD3T,SAbV;AAAA;AAAA;AAAA;AAAA;;AAiBjD,MAAMxjB,YAAY,GAAGlY,IAAI,CAACkY,YAA1B;AACA,MAAMnU,KAAK,GAAG/D,IAAI,CAAC6zC,aAAnB;;AAQA,EAA8B;AAC5B5nC,IAAAA,iBAAiB,CAAClI,KAAD,CAAjB;AACD;;AAED,MAAImU,YAAY,KAAK,IAArB,EAA2B;AACzB;AAMA,IAA8B;AAC5BhM,MAAAA,iBAAiB;AAClB;;AAED,WAAO,IAAP;AACD;;AACDlM,EAAAA,IAAI,CAACkY,YAAL,GAAoB,IAApB;AACAlY,EAAAA,IAAI,CAAC6zC,aAAL,GAAqBxxC,OAArB;;AA5CiD,QA+C/C6V,YAAY,KAAKlY,IAAI,CAAChQ,OA/CyB;AAAA;AAAA;AAAA;AAAA;AAqDjD;;;AACAgQ,EAAAA,IAAI,CAACqL,YAAL,GAAoB,IAApB,CAtDiD;AAyDjD;;AACA,MAAIpC,cAAc,GAAGnB,UAAU,CAACoQ,YAAY,CAACnU,KAAd,EAAqBmU,YAAY,CAAClE,UAAlC,CAA/B;AACAhL,EAAAA,gBAAgB,CAAChJ,IAAD,EAAOiJ,cAAP,CAAhB,CA3DiD;AA8DjD;AACA;;AACA,MAAIqoC,+BAA+B,KAAK,IAAxC,EAA8C;AAC5C,QACE,CAACzoC,gBAAgB,CAACI,cAAD,CAAjB,IACAqoC,+BAA+B,CAACt1C,GAAhC,CAAoCgE,IAApC,CAFF,EAGE;AACAsxC,MAAAA,+BAA+B,CAAC5vB,MAAhC,CAAuC1hB,IAAvC;AACD;AACF;;AAED,MAAIA,IAAI,KAAK6vC,kBAAb,EAAiC;AAC/B;AACAA,IAAAA,kBAAkB,GAAG,IAArB;AACAvyC,IAAAA,cAAc,GAAG,IAAjB;AACAwyC,IAAAA,6BAA6B,GAAGztC,OAAhC;AACD,GALD,AAzEiD;;;AAqFjD,MAAIyc,WAAJ;;AACA,MAAI5G,YAAY,CAACxoB,KAAb,GAAqB/B,aAAzB,EAAwC;AACtC;AACA;AACA;AACA;AACA,QAAIuqB,YAAY,CAAC0G,UAAb,KAA4B,IAAhC,EAAsC;AACpC1G,MAAAA,YAAY,CAAC0G,UAAb,CAAwBC,UAAxB,GAAqC3G,YAArC;AACA4G,MAAAA,WAAW,GAAG5G,YAAY,CAAC4G,WAA3B;AACD,KAHD,MAGO;AACLA,MAAAA,WAAW,GAAG5G,YAAd;AACD;AACF,GAXD,MAWO;AACL;AACA4G,IAAAA,WAAW,GAAG5G,YAAY,CAAC4G,WAA3B;AACD;;AAED,MAAIA,WAAW,KAAK,IAApB,EAA0B;AACxB;AAMA,QAAM+1B,oBAAoB,GAAGjF,gBAA7B;AACAA,IAAAA,gBAAgB,IAAIP,aAApB;AACA,QAAMwG,gBAAgB,GAAGD,gBAAgB,CAAC51C,IAAD,CAAzC,CATwB;;AAYxB7Q,IAAAA,mBAAiB,CAACa,OAAlB,GAA4B,IAA5B,CAZwB;AAexB;AACA;AAEA;AACA;AACA;;AACAiiD,IAAAA,qBAAqB,GAAGrgD,gBAAgB,CAACoO,IAAI,CAACugB,aAAN,CAAxC;AACA2xB,IAAAA,iCAAiC,GAAG,KAApC;AAEArzB,IAAAA,UAAU,GAAGC,WAAb;;AACA,OAAG;AACD,MAAa;AACXqnB,QAAAA,qBAAqB,CAAC,IAAD,EAAOyQ,2BAAP,EAAoC,IAApC,CAArB;;AACA,YAAIxQ,cAAc,EAAlB,EAAsB;AAAA,gBACVvnB,UAAU,KAAK,IADL;AAAA;AAAA;AAAA;AAAA;;AAEpB,cAAMp3B,KAAK,GAAG4+C,gBAAgB,EAA9B;AACAQ,UAAAA,uBAAuB,CAAChoB,UAAD,EAAap3B,KAAb,CAAvB;AACAo3B,UAAAA,UAAU,GAAGA,UAAU,CAACA,UAAxB;AACD;AACF,OARD;AAiBD,KAlBD,QAkBSA,UAAU,KAAK,IAlBxB,EAzBwB;;;AA8CxBozB,IAAAA,qBAAqB,GAAG,IAAxB;;AAEA,IAAyB;AACvB;AACA;AACApe,MAAAA,gBAAgB;AACjB,KApDuB;;;AAuDxBhV,IAAAA,UAAU,GAAGC,WAAb;;AACA,OAAG;AACD,MAAa;AACXqnB,QAAAA,qBAAqB,CACnB,IADmB,EAEnB0Q,qBAFmB,EAGnB,IAHmB,EAInB72C,IAJmB,EAKnBuoC,mBALmB,CAArB;;AAOA,YAAInC,cAAc,EAAlB,EAAsB;AAAA,gBACVvnB,UAAU,KAAK,IADL;AAAA;AAAA;AAAA;AAAA;;AAEpB,cAAMp3B,MAAK,GAAG4+C,gBAAgB,EAA9B;;AACAQ,UAAAA,uBAAuB,CAAChoB,UAAD,EAAap3B,MAAb,CAAvB;AACAo3B,UAAAA,UAAU,GAAGA,UAAU,CAACA,UAAxB;AACD;AACF,OAdD;AAuBD,KAxBD,QAwBSA,UAAU,KAAK,IAxBxB;;AA0BA,QAAIqzB,iCAAJ,EAAuC;AACrC5+C,MAAAA,uBAAuB;AACxB;;AACDzB,IAAAA,gBAAgB,CAACmO,IAAI,CAACugB,aAAN,CAAhB,CArFwB;AAwFxB;AACA;AACA;;AACAvgB,IAAAA,IAAI,CAAChQ,OAAL,GAAekoB,YAAf,CA3FwB;AA8FxB;AACA;;AACA2G,IAAAA,UAAU,GAAGC,WAAb;;AACA,OAAG;AACD,MAAa;AACXqnB,QAAAA,qBAAqB,CAAC,IAAD,EAAO2Q,mBAAP,EAA4B,IAA5B,EAAkC92C,IAAlC,EAAwC+D,KAAxC,CAArB;;AACA,YAAIqiC,cAAc,EAAlB,EAAsB;AAAA,gBACVvnB,UAAU,KAAK,IADL;AAAA;AAAA;AAAA;AAAA;;AAEpB,cAAMp3B,OAAK,GAAG4+C,gBAAgB,EAA9B;;AACAQ,UAAAA,uBAAuB,CAAChoB,UAAD,EAAap3B,OAAb,CAAvB;AACAo3B,UAAAA,UAAU,GAAGA,UAAU,CAACA,UAAxB;AACD;AACF,OARD;AAiBD,KAlBD,QAkBSA,UAAU,KAAK,IAlBxB;;AAoBAA,IAAAA,UAAU,GAAG,IAAb,CArHwB;AAwHxB;;AACAtU,IAAAA,YAAY;;AAEZ,IAA4B;AAC1BurC,MAAAA,eAAe,CAAGD,gBAAH,CAAf;AACD;;AACDjG,IAAAA,gBAAgB,GAAGiF,oBAAnB;AAMD,GApID,MAoIO;AACL;AACA70C,IAAAA,IAAI,CAAChQ,OAAL,GAAekoB,YAAf,CAFK;AAIL;AACA;;AACA,IAAyB;AACvB2b,MAAAA,gBAAgB;AACjB;AACF;;AAED,MAAMkjB,yBAAyB,GAAG/F,0BAAlC;;AAEA,MAAIA,0BAAJ,EAAgC;AAC9B;AACA;AACAA,IAAAA,0BAA0B,GAAG,KAA7B;AACAC,IAAAA,6BAA6B,GAAGjxC,IAAhC;AACAmxC,IAAAA,0BAA0B,GAAGptC,KAA7B;AACAmtC,IAAAA,mCAAmC,GAAG3I,mBAAtC;AACD,GAPD,MAOO;AACL;AACA;AACA;AACA1pB,IAAAA,UAAU,GAAGC,WAAb;;AACA,WAAOD,UAAU,KAAK,IAAtB,EAA4B;AAC1B,UAAMm4B,cAAc,GAAGn4B,UAAU,CAACA,UAAlC;AACAA,MAAAA,UAAU,CAACA,UAAX,GAAwB,IAAxB;;AACA,UAAIA,UAAU,CAACnvB,KAAX,GAAmB3B,QAAvB,EAAiC;AAC/BkpD,QAAAA,uBAAuB,CAACp4B,UAAD,CAAvB;AACD;;AACDA,MAAAA,UAAU,GAAGm4B,cAAb;AACD;AACF,GA3QgD;;;AA8QjD/tC,EAAAA,cAAc,GAAGjJ,IAAI,CAACkF,YAAtB,CA9QiD;;AAiRjD,MAAI+D,cAAc,KAAK5G,OAAvB,EAAgC;AAC9B,IAA4B;AAC1B,UAAIuvC,uBAAuB,KAAK,IAAhC,EAAsC;AACpC,YAAMlrC,eAAe,GAAGkrC,uBAAxB;AACAA,QAAAA,uBAAuB,GAAG,IAA1B;;AACA,aAAK,IAAIvpC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG3B,eAAe,CAAChM,MAApC,EAA4C2N,CAAC,EAA7C,EAAiD;AAC/C6uC,UAAAA,oBAAoB,CAClBl3C,IADkB,EAElB0G,eAAe,CAAC2B,CAAD,CAFG,EAGlBrI,IAAI,CAAC+nC,oBAHa,CAApB;AAKD;AACF;;AACD4K,MAAAA,2BAA2B,CAAC3yC,IAAD,EAAOiJ,cAAP,CAA3B;AACD;AACF,GAfD,MAeO;AACL;AACA;AACA8nC,IAAAA,sCAAsC,GAAG,IAAzC;AACD;;AAED,EAA4B;AAC1B,QAAI,CAACgG,yBAAL,EAAgC;AAC9B;AACA;AACA;AACA;AACAI,MAAAA,yBAAyB,CAACn3C,IAAD,EAAO+D,KAAP,CAAzB;AACD;AACF;;AAED,MAAIkF,cAAc,KAAK1G,QAAvB,EAAiC;AAC/B;AACA;AACA,QAAIvC,IAAI,KAAKyxC,qBAAb,EAAoC;AAClCD,MAAAA,iBAAiB;AAClB,KAFD,MAEO;AACLA,MAAAA,iBAAiB,GAAG,CAApB;AACAC,MAAAA,qBAAqB,GAAGzxC,IAAxB;AACD;AACF,GATD,MASO;AACLwxC,IAAAA,iBAAiB,GAAG,CAApB;AACD;;AAED4F,EAAAA,YAAoB,CAACl/B,YAAY,CAAC/nB,SAAd,EAAyBo4C,mBAAzB,CAApB;;AAEA,EAAa;AACX8O,IAAAA,cAAwB;AACzB,GAjUgD;AAoUjD;;;AACAxE,EAAAA,qBAAqB,CAAC7yC,IAAD,EAAOzN,KAAG,EAAV,CAArB;;AAEA,MAAIs+C,gBAAJ,EAAsB;AACpBA,IAAAA,gBAAgB,GAAG,KAAnB;AACA,QAAMppD,OAAK,GAAGqpD,kBAAd;AACAA,IAAAA,kBAAkB,GAAG,IAArB;AACA,UAAMrpD,OAAN;AACD;;AAED,MAAI,CAACmoD,gBAAgB,GAAGT,sBAApB,MAAgDzT,SAApD,EAA+D;AAC7D;AAMA,IAA8B;AAC5BxvB,MAAAA,iBAAiB;AAClB,KAT4D;AAY7D;AACA;AACA;;;AACA,WAAO,IAAP;AACD,GA9VgD;;;AAiWjDZ,EAAAA,sBAAsB;;AAQtB,EAA8B;AAC5BY,IAAAA,iBAAiB;AAClB;;AAED,SAAO,IAAP;AACD;;AAED,SAAS0qC,2BAAT,GAAuC;AACrC,SAAO/3B,UAAU,KAAK,IAAtB,EAA4B;AAC1B,QAAM7uB,OAAO,GAAG6uB,UAAU,CAACrvB,SAA3B;;AAEA,QAAI,CAAC0iD,iCAAD,IAAsCD,qBAAqB,KAAK,IAApE,EAA0E;AACxE,UAAI,CAACpzB,UAAU,CAACnvB,KAAX,GAAmB3B,QAApB,MAAkCL,OAAtC,EAA+C;AAC7C,YAAI0D,gBAAgB,CAACytB,UAAD,EAAaozB,qBAAb,CAApB,EAAyD;AACvDC,UAAAA,iCAAiC,GAAG,IAApC;AACA7+C,UAAAA,wBAAwB;AACzB;AACF,OALD,MAKO;AACL;AACA,YACEwrB,UAAU,CAAChyB,GAAX,KAAmBxD,iBAAnB,IACA+gD,6BAA6B,CAACp6C,OAAD,EAAU6uB,UAAV,CAD7B,IAEAztB,gBAAgB,CAACytB,UAAD,EAAaozB,qBAAb,CAHlB,EAIE;AACAC,UAAAA,iCAAiC,GAAG,IAApC;AACA7+C,UAAAA,wBAAwB;AACzB;AACF;AACF;;AAED,QAAM3D,KAAK,GAAGmvB,UAAU,CAACnvB,KAAzB;;AACA,QAAI,CAACA,KAAK,GAAGtB,QAAT,MAAuBV,OAA3B,EAAoC;AAClCukB,MAAAA,eAAyB,CAAC4M,UAAD,CAAzB;AAEAy4B,MAAAA,8BAAiC,CAACtnD,OAAD,EAAU6uB,UAAV,CAAjC;AAEA3M,MAAAA,iBAA2B;AAC5B;;AACD,QAAI,CAACxiB,KAAK,GAAGrB,OAAT,MAAsBX,OAA1B,EAAmC;AACjC;AACA;AACA,UAAI,CAACsjD,0BAAL,EAAiC;AAC/BA,QAAAA,0BAA0B,GAAG,IAA7B;AACAjmC,QAAAA,gBAAgB,CAACrG,gBAAD,EAA0B,YAAM;AAC9C6uC,UAAAA,mBAAmB;AACnB,iBAAO,IAAP;AACD,SAHe,CAAhB;AAID;AACF;;AACD10B,IAAAA,UAAU,GAAGA,UAAU,CAACA,UAAxB;AACD;AACF;;AAED,SAASg4B,qBAAT,CACE72C,IADF,EAEEuoC,mBAFF,EAGE;AACA;AACA,SAAO1pB,UAAU,KAAK,IAAtB,EAA4B;AAC1B5M,IAAAA,eAAyB,CAAC4M,UAAD,CAAzB;AAEA,QAAMnvB,KAAK,GAAGmvB,UAAU,CAACnvB,KAAzB;;AAEA,QAAIA,KAAK,GAAG1B,YAAZ,EAA0B;AACxBq8C,MAAAA,sBAAsB,CAACxrB,UAAD,CAAtB;AACD;;AAED,QAAInvB,KAAK,GAAGvB,GAAZ,EAAiB;AACf,UAAM6B,OAAO,GAAG6uB,UAAU,CAACrvB,SAA3B;;AACA,UAAIQ,OAAO,KAAK,IAAhB,EAAsB;AACpBo4C,QAAAA,eAAe,CAACp4C,OAAD,CAAf;AACD;AAQF,KArByB;AAwB1B;AACA;AACA;;;AACA,QAAMunD,YAAY,GAAG7nD,KAAK,IAAI9B,SAAS,GAAGC,MAAZ,GAAqBE,QAArB,GAAgCQ,SAApC,CAA1B;;AACA,YAAQgpD,YAAR;AACE,WAAK3pD,SAAL;AAAgB;AACds7C,UAAAA,eAAe,CAACrqB,UAAD,CAAf,CADc;AAGd;AACA;AACA;;AACAA,UAAAA,UAAU,CAACnvB,KAAX,IAAoB,CAAC9B,SAArB;AACA;AACD;;AACD,WAAKE,kBAAL;AAAyB;AACvB;AACAo7C,UAAAA,eAAe,CAACrqB,UAAD,CAAf,CAFuB;AAIvB;;AACAA,UAAAA,UAAU,CAACnvB,KAAX,IAAoB,CAAC9B,SAArB,CALuB;;AAQvB,cAAMoC,QAAO,GAAG6uB,UAAU,CAACrvB,SAA3B;AACAq6C,UAAAA,UAAU,CAAC75C,QAAD,EAAU6uB,UAAV,CAAV;AACA;AACD;;AACD,WAAKtwB,SAAL;AAAgB;AACdswB,UAAAA,UAAU,CAACnvB,KAAX,IAAoB,CAACnB,SAArB;AACA;AACD;;AACD,WAAKC,kBAAL;AAAyB;AACvBqwB,UAAAA,UAAU,CAACnvB,KAAX,IAAoB,CAACnB,SAArB,CADuB;;AAIvB,cAAMyB,SAAO,GAAG6uB,UAAU,CAACrvB,SAA3B;AACAq6C,UAAAA,UAAU,CAAC75C,SAAD,EAAU6uB,UAAV,CAAV;AACA;AACD;;AACD,WAAKhxB,MAAL;AAAa;AACX,cAAMmC,SAAO,GAAG6uB,UAAU,CAACrvB,SAA3B;AACAq6C,UAAAA,UAAU,CAAC75C,SAAD,EAAU6uB,UAAV,CAAV;AACA;AACD;;AACD,WAAK9wB,QAAL;AAAe;AACb67C,UAAAA,cAAc,CAAC5pC,IAAD,EAAO6e,UAAP,AAAA,CAAd;AACA;AACD;AA1CH;;AA6CA3M,IAAAA,iBAA2B;AAC3B2M,IAAAA,UAAU,GAAGA,UAAU,CAACA,UAAxB;AACD;AACF;;AAED,SAASi4B,mBAAT,CAA6B92C,IAA7B,EAA8C4nC,cAA9C,EAAqE;AACnE;AAMA,EAA8B;AAC5Bl7B,IAAAA,wBAAwB,CAACk7B,cAAD,CAAxB;AACD,GATkE;;;AAYnE,SAAO/oB,UAAU,KAAK,IAAtB,EAA4B;AAC1B5M,IAAAA,eAAyB,CAAC4M,UAAD,CAAzB;AAEA,QAAMnvB,KAAK,GAAGmvB,UAAU,CAACnvB,KAAzB;;AAEA,QAAIA,KAAK,IAAI7B,MAAM,GAAGI,QAAb,CAAT,EAAiC;AAC/B,UAAM+B,OAAO,GAAG6uB,UAAU,CAACrvB,SAA3B;AACAgoD,MAAAA,gBAAyB,CAACx3C,IAAD,EAAOhQ,OAAP,EAAgB6uB,UAAhB,AAAA,CAAzB;AACD;;AAED,IAMO;AACL,UAAInvB,KAAK,GAAGvB,GAAZ,EAAiB;AACf+5C,QAAAA,eAAe,CAACrpB,UAAD,CAAf;AACD;AACF;;AAED3M,IAAAA,iBAA2B;AAC3B2M,IAAAA,UAAU,GAAGA,UAAU,CAACA,UAAxB;AACD;;AAQD,EAA8B;AAC5BlS,IAAAA,wBAAwB;AACzB;AACF;;AAED,AAAO,SAAS4mC,mBAAT,GAAwC;AAC7C;AACA,MAAIrC,mCAAmC,KAAKnsC,YAA5C,EAAiE;AAC/D,QAAM1E,aAAa,GACjB6wC,mCAAmC,GAAGxsC,gBAAtC,GACIA,gBADJ,GAEIwsC,mCAHN;AAIAA,IAAAA,mCAAmC,GAAGnsC,YAAtC;;AACA,IAUO;AACL,aAAO+F,eAAe,CAACzK,aAAD,EAAgBo3C,uBAAhB,CAAtB;AACD;AACF;;AACD,SAAO,KAAP;AACD;AAED,AAaO,SAAShQ,oCAAT,CACLp4C,KADK,EAEL+oB,MAFK,EAGC;AACNg5B,EAAAA,8BAA8B,CAACt0C,IAA/B,CAAoCsb,MAApC,EAA4C/oB,KAA5C;;AACA,MAAI,CAAC2hD,0BAAL,EAAiC;AAC/BA,IAAAA,0BAA0B,GAAG,IAA7B;AACAjmC,IAAAA,gBAAgB,CAACrG,gBAAD,EAA0B,YAAM;AAC9C6uC,MAAAA,mBAAmB;AACnB,aAAO,IAAP;AACD,KAHe,CAAhB;AAID;AACF;AAED,AAAO,SAAS/L,sCAAT,CACLn4C,KADK,EAEL+oB,MAFK,EAGC;AACNi5B,EAAAA,gCAAgC,CAACv0C,IAAjC,CAAsCsb,MAAtC,EAA8C/oB,KAA9C;;AACA,EAAa;AACXA,IAAAA,KAAK,CAACK,KAAN,IAAepB,wBAAf;AACA,QAAMkB,SAAS,GAAGH,KAAK,CAACG,SAAxB;;AACA,QAAIA,SAAS,KAAK,IAAlB,EAAwB;AACtBA,MAAAA,SAAS,CAACE,KAAV,IAAmBpB,wBAAnB;AACD;AACF;;AACD,MAAI,CAAC0iD,0BAAL,EAAiC;AAC/BA,IAAAA,0BAA0B,GAAG,IAA7B;AACAjmC,IAAAA,gBAAgB,CAACrG,gBAAD,EAA0B,YAAM;AAC9C6uC,MAAAA,mBAAmB;AACnB,aAAO,IAAP;AACD,KAHe,CAAhB;AAID;AACF;;AAED,SAASmE,yBAAT,CAAmCt/B,MAAnC,EAA6D;AAC3D,MAAMsW,MAAM,GAAGtW,MAAM,CAACsW,MAAtB;AACAtW,EAAAA,MAAM,CAACuW,OAAP,GAAiBD,MAAM,EAAvB;AACD;;AAED,SAAS+oB,uBAAT,GAAmC;AACjC,MAAIxG,6BAA6B,KAAK,IAAtC,EAA4C;AAC1C,WAAO,KAAP;AACD;;AAED,MAAMjxC,IAAI,GAAGixC,6BAAb;AACA,MAAMltC,KAAK,GAAGotC,0BAAd;AACAF,EAAAA,6BAA6B,GAAG,IAAhC;AACAE,EAAAA,0BAA0B,GAAG9uC,OAA7B;;AARiC,QAW/B,CAACutC,gBAAgB,IAAIR,aAAa,GAAGC,aAApB,CAAjB,MAAyD3T,SAX1B;AAAA;AAAA;AAAA;AAAA;;AAqBjC,EAA8B;AAC5B9uB,IAAAA,yBAAyB,CAAC7I,KAAD,CAAzB;AACD;;AAED,EAAa;AACXiuC,IAAAA,wBAAwB,GAAG,IAA3B;AACD;;AAED,MAAM6C,oBAAoB,GAAGjF,gBAA7B;AACAA,EAAAA,gBAAgB,IAAIP,aAApB;AACA,MAAMwG,gBAAgB,GAAGD,gBAAgB,CAAC51C,IAAD,CAAzC,CA/BiC;AAkCjC;AACA;AACA;AACA;AACA;AAEA;;AACA,MAAM23C,cAAc,GAAGtG,gCAAvB;AACAA,EAAAA,gCAAgC,GAAG,EAAnC;;AACA,OAAK,IAAIhpC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGsvC,cAAc,CAACj9C,MAAnC,EAA2C2N,CAAC,IAAI,CAAhD,EAAmD;AACjD,QAAM+P,OAAM,GAAKu/B,cAAc,CAACtvC,CAAD,CAA/B;AACA,QAAMhZ,KAAK,GAAKsoD,cAAc,CAACtvC,CAAC,GAAG,CAAL,CAA9B;AACA,QAAMsmB,OAAO,GAAGvW,OAAM,CAACuW,OAAvB;AACAvW,IAAAA,OAAM,CAACuW,OAAP,GAAiB11B,SAAjB;;AAEA,IAAa;AACX5J,MAAAA,KAAK,CAACK,KAAN,IAAe,CAACpB,wBAAhB;AACA,UAAMkB,SAAS,GAAGH,KAAK,CAACG,SAAxB;;AACA,UAAIA,SAAS,KAAK,IAAlB,EAAwB;AACtBA,QAAAA,SAAS,CAACE,KAAV,IAAmB,CAACpB,wBAApB;AACD;AACF;;AAED,QAAI,OAAOqgC,OAAP,KAAmB,UAAvB,EAAmC;AACjC,MAAa;AACX1c,QAAAA,eAAyB,CAAC5iB,KAAD,CAAzB;;AACA,QAQO;AACL82C,UAAAA,qBAAqB,CAAC,IAAD,EAAOxX,OAAP,EAAgB,IAAhB,CAArB;AACD;;AACD,YAAIyX,cAAc,EAAlB,EAAsB;AAAA,gBACV/2C,KAAK,KAAK,IADA;AAAA;AAAA;AAAA;AAAA;;AAEpB,cAAM5H,KAAK,GAAG4+C,gBAAgB,EAA9B;AACAQ,UAAAA,uBAAuB,CAACx3C,KAAD,EAAQ5H,KAAR,CAAvB;AACD;;AACDyqB,QAAAA,iBAA2B;AAC5B,OAnBD;AAwCD;AACF,GAnGgC;;;AAqGjC,MAAM0lC,YAAY,GAAGxG,8BAArB;AACAA,EAAAA,8BAA8B,GAAG,EAAjC;;AACA,OAAK,IAAI/oC,EAAC,GAAG,CAAb,EAAgBA,EAAC,GAAGuvC,YAAY,CAACl9C,MAAjC,EAAyC2N,EAAC,IAAI,CAA9C,EAAiD;AAC/C,QAAM+P,QAAM,GAAKw/B,YAAY,CAACvvC,EAAD,CAA7B;AACA,QAAMhZ,MAAK,GAAKuoD,YAAY,CAACvvC,EAAC,GAAG,CAAL,CAA5B;;AACA,IAAa;AACX4J,MAAAA,eAAyB,CAAC5iB,MAAD,CAAzB;;AACA,MAQO;AACL82C,QAAAA,qBAAqB,CAAC,IAAD,EAAOuR,yBAAP,EAAkC,IAAlC,EAAwCt/B,QAAxC,CAArB;AACD;;AACD,UAAIguB,cAAc,EAAlB,EAAsB;AAAA,cACV/2C,MAAK,KAAK,IADA;AAAA;AAAA;AAAA;AAAA;;AAEpB,YAAM5H,OAAK,GAAG4+C,gBAAgB,EAA9B;;AACAQ,QAAAA,uBAAuB,CAACx3C,MAAD,EAAQ5H,OAAR,CAAvB;AACD;;AACDyqB,MAAAA,iBAA2B;AAC5B,KAnBD;AAyCD,GAnJgC;AAsJjC;AACA;;;AACA,MAAIkG,MAAM,GAAGpY,IAAI,CAAChQ,OAAL,CAAa8uB,WAA1B;;AACA,SAAO1G,MAAM,KAAK,IAAlB,EAAwB;AACtB,QAAM4+B,cAAc,GAAG5+B,MAAM,CAACyG,UAA9B,CADsB;;AAGtBzG,IAAAA,MAAM,CAACyG,UAAP,GAAoB,IAApB;;AACA,QAAIzG,MAAM,CAAC1oB,KAAP,GAAe3B,QAAnB,EAA6B;AAC3BkpD,MAAAA,uBAAuB,CAAC7+B,MAAD,CAAvB;AACD;;AACDA,IAAAA,MAAM,GAAG4+B,cAAT;AACD;;AAWD,EAA4B;AAC1BlB,IAAAA,eAAe,CAAGD,gBAAH,CAAf;AACAsB,IAAAA,yBAAyB,CAACn3C,IAAD,EAAO+D,KAAP,CAAzB;AACD;;AAED,EAAa;AACXiuC,IAAAA,wBAAwB,GAAG,KAA3B;AACD;;AAQD,EAA8B;AAC5BnlC,IAAAA,yBAAyB;AAC1B;;AAED+iC,EAAAA,gBAAgB,GAAGiF,oBAAnB;AAEAvpC,EAAAA,sBAAsB,GAjMW;AAoMjC;;AACAqmC,EAAAA,wBAAwB,GACtBV,6BAA6B,KAAK,IAAlC,GAAyC,CAAzC,GAA6CU,wBAAwB,GAAG,CAD1E;AAGA,SAAO,IAAP;AACD;;AAED,AAAO,SAAS5N,kCAAT,CAA4C7zC,QAA5C,EAAsE;AAC3E,SACE6gD,sCAAsC,KAAK,IAA3C,IACAA,sCAAsC,CAAC/0C,GAAvC,CAA2C9L,QAA3C,CAFF;AAID;AAED,AAAO,SAAS+yC,+BAAT,CAAyC/yC,QAAzC,EAA0D;AAC/D,MAAI6gD,sCAAsC,KAAK,IAA/C,EAAqD;AACnDA,IAAAA,sCAAsC,GAAG,IAAItgC,GAAJ,CAAQ,CAACvgB,QAAD,CAAR,CAAzC;AACD,GAFD,MAEO;AACL6gD,IAAAA,sCAAsC,CAAC7/B,GAAvC,CAA2ChhB,QAA3C;AACD;AACF;;AAED,SAAS2nD,2BAAT,CAAqCpwD,KAArC,EAAmD;AACjD,MAAI,CAACopD,gBAAL,EAAuB;AACrBA,IAAAA,gBAAgB,GAAG,IAAnB;AACAC,IAAAA,kBAAkB,GAAGrpD,KAArB;AACD;AACF;;AACD,AAAO,IAAMo7C,eAAe,GAAGgV,2BAAxB;;AAEP,SAASC,6BAAT,CACEC,SADF,EAEEvU,WAFF,EAGE/7C,KAHF,EAIE;AACA,MAAMw6C,SAAS,GAAGH,mBAAmB,CAACr6C,KAAD,EAAQ+7C,WAAR,CAArC;AACA,MAAMhvB,MAAM,GAAGouB,qBAAqB,CAACmV,SAAD,EAAY9V,SAAZ,EAAwB1/B,QAAxB,CAApC;AACAoS,EAAAA,aAAa,CAACojC,SAAD,EAAYvjC,MAAZ,CAAb;AACA,MAAMnO,SAAS,GAAGsT,gBAAgB,EAAlC;AACA,MAAM3Z,IAAI,GAAGyyC,6BAA6B,CAACsF,SAAD,EAAax1C,QAAb,CAA1C;;AACA,MAAIvC,IAAI,KAAK,IAAb,EAAmB;AACjBsI,IAAAA,eAAe,CAACtI,IAAD,EAAOuC,QAAP,EAAiB8D,SAAjB,CAAf;AACAwsC,IAAAA,qBAAqB,CAAC7yC,IAAD,EAAOqG,SAAP,CAArB;AACAssC,IAAAA,2BAA2B,CAAC3yC,IAAD,EAAOuC,QAAP,CAA3B;AACD;AACF;;AAED,AAAO,SAASskC,uBAAT,CAAiCrD,WAAjC,EAAqD/7C,KAArD,EAAmE;AACxE,MAAI+7C,WAAW,CAAC32C,GAAZ,KAAoBlE,QAAxB,EAAkC;AAChC;AACA;AACAmvD,IAAAA,6BAA6B,CAACtU,WAAD,EAAcA,WAAd,EAA2B/7C,KAA3B,CAA7B;AACA;AACD;;AAED,MAAI4H,KAAK,GAAGm0C,WAAW,CAAC7zC,MAAxB;;AAEA,SAAON,KAAK,KAAK,IAAjB,EAAuB;AACrB,QAAIA,KAAK,CAACxC,GAAN,KAAclE,QAAlB,EAA4B;AAC1BmvD,MAAAA,6BAA6B,CAACzoD,KAAD,EAAQm0C,WAAR,EAAqB/7C,KAArB,CAA7B;AACA;AACD,KAHD,MAGO,IAAI4H,KAAK,CAACxC,GAAN,KAAcpE,cAAlB,EAAkC;AACvC,UAAMsS,IAAI,GAAG1L,KAAK,CAAC1C,IAAnB;AACA,UAAMuD,QAAQ,GAAGb,KAAK,CAACc,SAAvB;;AACA,UACE,OAAO4K,IAAI,CAACygB,wBAAZ,KAAyC,UAAzC,IACC,OAAOtrB,QAAQ,CAAC6yC,iBAAhB,KAAsC,UAAtC,IACC,CAACgB,kCAAkC,CAAC7zC,QAAD,CAHvC,EAIE;AACA,YAAM+xC,SAAS,GAAGH,mBAAmB,CAACr6C,KAAD,EAAQ+7C,WAAR,CAArC;AACA,YAAMhvB,MAAM,GAAGsuB,sBAAsB,CACnCzzC,KADmC,EAEnC4yC,SAFmC,EAGlC1/B,QAHkC,CAArC;AAKAoS,QAAAA,aAAa,CAACtlB,KAAD,EAAQmlB,MAAR,CAAb;AACA,YAAMnO,SAAS,GAAGsT,gBAAgB,EAAlC;AACA,YAAM3Z,IAAI,GAAGyyC,6BAA6B,CAACpjD,KAAD,EAASkT,QAAT,CAA1C;;AACA,YAAIvC,IAAI,KAAK,IAAb,EAAmB;AACjBsI,UAAAA,eAAe,CAACtI,IAAD,EAAOuC,QAAP,EAAiB8D,SAAjB,CAAf;AACAwsC,UAAAA,qBAAqB,CAAC7yC,IAAD,EAAOqG,SAAP,CAArB;AACAssC,UAAAA,2BAA2B,CAAC3yC,IAAD,EAAOuC,QAAP,CAA3B;AACD,SAJD,MAIO;AACL;AACA;AACA;AACA;AACA;AACA;AACA,cACE,OAAOrS,QAAQ,CAAC6yC,iBAAhB,KAAsC,UAAtC,IACA,CAACgB,kCAAkC,CAAC7zC,QAAD,CAFrC,EAGE;AACA,gBAAI;AACFA,cAAAA,QAAQ,CAAC6yC,iBAAT,CAA2Bt7C,KAA3B,EAAkCw6C,SAAlC;AACD,aAFD,CAEE,OAAO+V,aAAP,EAAsB;AAEtB;AACD;AACF;AACF;;AACD;AACD;AACF;;AACD3oD,IAAAA,KAAK,GAAGA,KAAK,CAACM,MAAd;AACD;AACF;AAED,AAAO,SAAS2zC,iBAAT,CACLtjC,IADK,EAELsM,QAFK,EAGL/G,WAHK,EAIL;AACA,MAAM49B,SAAS,GAAGnjC,IAAI,CAACmjC,SAAvB;;AACA,MAAIA,SAAS,KAAK,IAAlB,EAAwB;AACtB;AACA;AACAA,IAAAA,SAAS,CAACzhB,MAAV,CAAiBpV,QAAjB;AACD;;AAED,MAAMjG,SAAS,GAAGsT,gBAAgB,EAAlC;AACAjR,EAAAA,cAAc,CAAC1I,IAAD,EAAOuF,WAAP,AAAA,CAAd;;AAEA,MACEsqC,kBAAkB,KAAK7vC,IAAvB,IACA4H,eAAe,CAACkoC,6BAAD,EAAgCvqC,WAAhC,CAFjB,EAGE;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA,QACEyqC,4BAA4B,KAAKN,sBAAjC,IACCM,4BAA4B,KAAKP,aAAjC,IACCxoC,mBAAmB,CAAC6oC,6BAAD,CADpB,IAECv9C,KAAG,KAAKg+C,4BAAR,GAAuCC,oBAJ3C,EAKE;AACA;AACAkD,MAAAA,iBAAiB,CAAC1zC,IAAD,EAAOqC,OAAP,CAAjB;AACD,KARD,MAQO;AACL;AACA;AACAguC,MAAAA,6BAA6B,GAAGvoC,UAAU,CACxCuoC,6BADwC,EAExC9qC,WAFwC,CAA1C;AAID;AACF;;AAEDstC,EAAAA,qBAAqB,CAAC7yC,IAAD,EAAOqG,SAAP,CAArB;AACAssC,EAAAA,2BAA2B,CAAC3yC,IAAD,EAAOuF,WAAP,CAA3B;AACD;;AAED,SAAS0yC,qBAAT,CAA+BC,aAA/B,EAAqDzxB,SAArD,EAAsE;AACpE;AACA;AACA;AACA;AACA,MAAIA,SAAS,KAAKnkB,MAAlB,EAA0B;AACxBmkB,IAAAA,SAAS,GAAG6rB,gBAAgB,CAAC4F,aAAD,CAA5B;AACD,GAPmE;;;AASpE,MAAM7xC,SAAS,GAAGsT,gBAAgB,EAAlC;AACA,MAAM3Z,IAAI,GAAGyyC,6BAA6B,CAACyF,aAAD,EAAgBzxB,SAAhB,CAA1C;;AACA,MAAIzmB,IAAI,KAAK,IAAb,EAAmB;AACjBsI,IAAAA,eAAe,CAACtI,IAAD,EAAOymB,SAAP,EAAkBpgB,SAAlB,CAAf;AACAwsC,IAAAA,qBAAqB,CAAC7yC,IAAD,EAAOqG,SAAP,CAArB;AACAssC,IAAAA,2BAA2B,CAAC3yC,IAAD,EAAOymB,SAAP,CAA3B;AACD;AACF;;AAED,AAAO,SAASqV,+BAAT,CAAyCoc,aAAzC,EAA+D;AACpE,MAAM1xB,aAAmC,GAAG0xB,aAAa,CAACriC,aAA1D;AACA,MAAI4Q,SAAS,GAAGnkB,MAAhB;;AACA,MAAIkkB,aAAa,KAAK,IAAtB,EAA4B;AAC1BC,IAAAA,SAAS,GAAGD,aAAa,CAACC,SAA1B;AACD;;AACDwxB,EAAAA,qBAAqB,CAACC,aAAD,EAAgBzxB,SAAhB,CAArB;AACD;AAED,AAAO,SAASyjB,oBAAT,CAA8BgO,aAA9B,EAAoD5rC,QAApD,EAAwE;AAC7E,MAAIma,SAAS,GAAGnkB,MAAhB,CAD6E;;AAE7E,MAAI2nC,UAAJ;;AACA,EAAkC;AAChC,YAAQiO,aAAa,CAACrrD,GAAtB;AACE,WAAKxD,iBAAL;AACE4gD,QAAAA,UAAU,GAAGiO,aAAa,CAAC/nD,SAA3B;AACA,YAAMq2B,aAAmC,GAAG0xB,aAAa,CAACriC,aAA1D;;AACA,YAAI2Q,aAAa,KAAK,IAAtB,EAA4B;AAC1BC,UAAAA,SAAS,GAAGD,aAAa,CAACC,SAA1B;AACD;;AACD;;AACF,WAAK98B,qBAAL;AACEsgD,QAAAA,UAAU,GAAGiO,aAAa,CAAC/nD,SAA3B;AACA;;AACF;AAAA;AAAA;AAAA;AAAA;AAAA;;AAXF;AAkBD,GAnBD;;AAuBA,MAAI85C,UAAU,KAAK,IAAnB,EAAyB;AACvB;AACA;AACAA,IAAAA,UAAU,CAACvoB,MAAX,CAAkBpV,QAAlB;AACD;;AAED2rC,EAAAA,qBAAqB,CAACC,aAAD,EAAgBzxB,SAAhB,CAArB;AACD;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAAS4tB,GAAT,CAAa8D,WAAb,EAAkC;AAChC,SAAOA,WAAW,GAAG,GAAd,GACH,GADG,GAEHA,WAAW,GAAG,GAAd,GACA,GADA,GAEAA,WAAW,GAAG,IAAd,GACA,IADA,GAEAA,WAAW,GAAG,IAAd,GACA,IADA,GAEAA,WAAW,GAAG,IAAd,GACA,IADA,GAEAA,WAAW,GAAG,IAAd,GACA,IADA,GAEArJ,IAAI,CAACqJ,WAAW,GAAG,IAAf,CAAJ,GAA2B,IAZ/B;AAaD;;AAED,SAAS5F,qBAAT,GAAiC;AAC/B,MAAIf,iBAAiB,GAAGD,mBAAxB,EAA6C;AAC3CC,IAAAA,iBAAiB,GAAG,CAApB;AACAC,IAAAA,qBAAqB,GAAG,IAAxB;;AAF2C;AAAA;AAAA;AAAA;AAAA;AAU5C;;AAED,EAAa;AACX,QAAIE,wBAAwB,GAAGD,2BAA/B,EAA4D;AAC1DC,MAAAA,wBAAwB,GAAG,CAA3B;;AACA,YACE,qEACE,gEADF,GAEE,iEAFF,GAGE,eAJJ;AAMD;AACF;AACF;;AAED,SAASgF,uCAAT,GAAmD;AACjD,EAAa;AACXvnC,IAAAA,uBAAuB,CAACI,yBAAxB;;AAEA,IAAmC;AACjCJ,MAAAA,uBAAuB,CAACE,mCAAxB;AACD;AACF;AACF;;AAED,IAAI8oC,2CAA+D,GAAG,IAAtE;;AACA,SAAStF,wCAAT,CAAkDzjD,KAAlD,EAAyD;AACvD,EAAa;AACX,QAAI,CAACugD,gBAAgB,GAAGR,aAApB,MAAuC1T,SAA3C,EAAsD;AACpD;AACA;AACD;;AAED,QAAI,EAAErsC,KAAK,CAACugB,IAAN,IAActC,YAAY,GAAGC,cAA7B,CAAF,CAAJ,EAAqD;AACnD;AACD;;AAED,QAAM1gB,GAAG,GAAGwC,KAAK,CAACxC,GAAlB;;AACA,QACEA,GAAG,KAAKnE,sBAAR,IACAmE,GAAG,KAAKlE,QADR,IAEAkE,GAAG,KAAKpE,cAFR,IAGAoE,GAAG,KAAKrE,iBAHR,IAIAqE,GAAG,KAAK1D,UAJR,IAKA0D,GAAG,KAAKvD,aALR,IAMAuD,GAAG,KAAKtD,mBANR,IAOAsD,GAAG,KAAK/C,KARV,EASE;AACA;AACA;AACD,KAvBU;AA0BX;;;AACA,QAAMiS,aAAa,GAAGnP,gBAAgB,CAACyC,KAAK,CAAC1C,IAAP,CAAhB,IAAgC,gBAAtD;;AACA,QAAIyrD,2CAA2C,KAAK,IAApD,EAA0D;AACxD,UAAIA,2CAA2C,CAACp8C,GAA5C,CAAgDD,aAAhD,CAAJ,EAAoE;AAClE;AACD;;AACDq8C,MAAAA,2CAA2C,CAAClnC,GAA5C,CAAgDnV,aAAhD;AACD,KALD,MAKO;AACLq8C,MAAAA,2CAA2C,GAAG,IAAI3nC,GAAJ,CAAQ,CAAC1U,aAAD,CAAR,CAA9C;AACD;;AAED,QAAMs8C,aAAa,GAAGC,OAAtB;;AACA,QAAI;AACFrmC,MAAAA,eAAyB,CAAC5iB,KAAD,CAAzB;;AACA,YACE,gFACE,0EADF,GAEE,8EAFF,GAGE,oBAJJ;AAMD,KARD,SAQU;AACR,UAAIgpD,aAAJ,EAAmB;AACjBpmC,QAAAA,eAAyB,CAAC5iB,KAAD,CAAzB;AACD,OAFD,MAEO;AACL6iB,QAAAA,iBAA2B;AAC5B;AACF;AACF;AACF;;AAED,IAAIqmC,uCAA2D,GAAG,IAAlE;;AACA,SAAS7F,oCAAT,CAA8CrjD,KAA9C,EAAqD;AACnD,EAAa;AACX,QAAMxC,GAAG,GAAGwC,KAAK,CAACxC,GAAlB;;AACA,QACEA,GAAG,KAAKlE,QAAR,IACAkE,GAAG,KAAKpE,cADR,IAEAoE,GAAG,KAAKrE,iBAFR,IAGAqE,GAAG,KAAK1D,UAHR,IAIA0D,GAAG,KAAKvD,aAJR,IAKAuD,GAAG,KAAKtD,mBALR,IAMAsD,GAAG,KAAK/C,KAPV,EAQE;AACA;AACA;AACD,KAbU;AAgBX;;;AACA,QAAI,CAACuF,KAAK,CAACK,KAAN,GAAcpB,wBAAf,MAA6CZ,OAAjD,EAA0D;AACxD;AACD,KAnBU;AAsBX;;;AACA,QAAMqO,aAAa,GAAGnP,gBAAgB,CAACyC,KAAK,CAAC1C,IAAP,CAAhB,IAAgC,gBAAtD;;AACA,QAAI4rD,uCAAuC,KAAK,IAAhD,EAAsD;AACpD,UAAIA,uCAAuC,CAACv8C,GAAxC,CAA4CD,aAA5C,CAAJ,EAAgE;AAC9D;AACD;;AACDw8C,MAAAA,uCAAuC,CAACrnC,GAAxC,CAA4CnV,aAA5C;AACD,KALD,MAKO;AACLw8C,MAAAA,uCAAuC,GAAG,IAAI9nC,GAAJ,CAAQ,CAAC1U,aAAD,CAAR,CAA1C;AACD;;AAED,QAAIi2C,wBAAJ,EAA8B,CAA9B,MAcO;AACL,UAAMqG,aAAa,GAAGC,OAAtB;;AACA,UAAI;AACFrmC,QAAAA,eAAyB,CAAC5iB,KAAD,CAAzB;;AACA,cACE,wEACE,qEADF,GAEE,6DAHJ,EAIExC,GAAG,KAAKpE,cAAR,GACI,iCADJ,GAEI,8BANN;AAQD,OAVD,SAUU;AACR,YAAI4vD,aAAJ,EAAmB;AACjBpmC,UAAAA,eAAyB,CAAC5iB,KAAD,CAAzB;AACD,SAFD,MAEO;AACL6iB,UAAAA,iBAA2B;AAC5B;AACF;AACF;AACF;AACF;;AAED,IAAIqsB,WAAJ;;AACA,AAAgE;AAC9D,MAAMia,UAAU,GAAG,IAAnB;;AACAja,EAAAA,WAAS,GAAG,UAACvuC,OAAD,EAAUmmD,UAAV,EAAsBpyC,KAAtB,EAAgC;AAC1C;AACA;AACA;AAEA;AACA;AACA,QAAM00C,0BAA0B,GAAGC,0BAA0B,CAC3DF,UAD2D,EAE3DrC,UAF2D,CAA7D;;AAIA,QAAI;AACF,aAAOwC,SAAiB,CAAC3oD,OAAD,EAAUmmD,UAAV,EAAsBpyC,KAAtB,CAAxB;AACD,KAFD,CAEE,OAAO60C,aAAP,EAAsB;AACtB,UACEA,aAAa,KAAK,IAAlB,IACA,OAAOA,aAAP,KAAyB,QADzB,IAEA,OAAOA,aAAa,CAACnsC,IAArB,KAA8B,UAHhC,EAIE;AACA;AACA,cAAMmsC,aAAN;AACD,OARqB;AAWtB;;;AACA9lC,MAAAA,wBAAwB;AACxB8X,MAAAA,oBAAoB,GAbE;AAetB;AAEA;;AACAgX,MAAAA,qBAAqB,CAACuU,UAAD,CAArB,CAlBsB;;AAqBtBuC,MAAAA,0BAA0B,CAACvC,UAAD,EAAasC,0BAAb,CAA1B;;AAEA,UAAI3pD,CAAuBqnD,UAAU,CAACvmC,IAAX,GAAkBpC,WAA7C,EAA0D;AACxD;AACAsmB,QAAAA,kBAAkB,CAACqiB,UAAD,CAAlB;AACD,OA1BqB;;;AA6BtBhQ,MAAAA,qBAAqB,CACnB,IADmB,EAEnBwS,SAFmB,EAGnB,IAHmB,EAInB3oD,OAJmB,EAKnBmmD,UALmB,EAMnBpyC,KANmB,CAArB;;AASA,UAAIqiC,cAAc,EAAlB,EAAsB;AACpB,YAAMyS,WAAW,GAAGxS,gBAAgB,EAApC,CADoB;AAGpB;;AACA,cAAMwS,WAAN;AACD,OALD,MAKO;AACL;AACA,cAAMD,aAAN;AACD;AACF;AACF,GA7DD;AA8DD,CAhED;;AAoEA,IAAIE,0BAA0B,GAAG,KAAjC;AACA,IAAIC,6CAAJ;;AACA,AAAa;AACXA,EAAAA,6CAA6C,GAAG,IAAItoC,GAAJ,EAAhD;AACD;;AAED,SAAS+hC,gCAAT,CAA0CnjD,KAA1C,EAAiD;AAC/C,EAAa;AACX,QACE2pD,WAAsC,IACtC,CAACpJ,gBAAgB,GAAGR,aAApB,MAAuC1T,SADvC,IAEA,CAAC/J,0CAA0C,EAH7C,EAIE;AACA,cAAQtiC,KAAK,CAACxC,GAAd;AACE,aAAKrE,iBAAL;AACA,aAAKW,UAAL;AACA,aAAKI,mBAAL;AAA0B;AACxB,gBAAM0vD,sBAAsB,GACzB37C,cAAc,IAAI1Q,gBAAgB,CAAC0Q,cAAc,CAAC3Q,IAAhB,CAAnC,IACA,SAFF,CADwB;;AAKxB,gBAAMusD,SAAS,GAAGD,sBAAlB;;AACA,gBAAI,CAACF,6CAA6C,CAAC/8C,GAA9C,CAAkDk9C,SAAlD,CAAL,EAAmE;AACjEH,cAAAA,6CAA6C,CAAC7nC,GAA9C,CAAkDgoC,SAAlD;AACA,kBAAMC,qBAAqB,GACzBvsD,gBAAgB,CAACyC,KAAK,CAAC1C,IAAP,CAAhB,IAAgC,SADlC;;AAEA,oBACE,wDACE,6EADF,GAEE,oFAHJ,EAIEwsD,qBAJF,EAKEF,sBALF,EAMEA,sBANF;AAQD;;AACD;AACD;;AACD,aAAKxwD,cAAL;AAAqB;AACnB,gBAAI,CAACqwD,0BAAL,EAAiC;AAC/B,oBACE,gEACE,oDADF,GAEE,8BAHJ;;AAKAA,cAAAA,0BAA0B,GAAG,IAA7B;AACD;;AACD;AACD;AAlCH;AAoCD;AACF;AACF;;;AAGD,IAAaM,oBAAoB,GAAG;AAACppD,EAAAA,OAAO,EAAG;AAAX,CAA7B;AAEP,AAAO,SAASwiC,8BAAT,CAAwCnjC,KAAxC,EAA4D;AACjE,EAAa;AACX,QACEoD,gBAAgB,KAAK,IAArB,IACAs8C,oBAAoB,CAAC/+C,OAArB,KAAiC,IADjC,IAEAopD,oBAAoB,CAACppD,OAArB,KAAiC,IAHnC,EAIE;AACA,UAAMqoD,aAAa,GAAGC,OAAtB;;AACA,UAAI;AACFrmC,QAAAA,eAAyB,CAAC5iB,KAAD,CAAzB;;AACA,cACE,gFACE,kFADF,GAEE,qBAFF;AAIE,yBAJF,GAKE,8BALF,GAME,UANF,GAOE,qBAPF,GAQE,+BARF;AAUE,gCAVF,GAWE,4BAXF,GAYE,+BAZF,GAaE,UAbF,GAcE,iBAfJ;AAiBD,OAnBD,SAmBU;AACR,YAAIgpD,aAAJ,EAAmB;AACjBpmC,UAAAA,eAAyB,CAAC5iB,KAAD,CAAzB;AACD,SAFD,MAEO;AACL6iB,UAAAA,iBAA2B;AAC5B;AACF;AACF;AACF;AACF;AAED,AAAO,SAASud,oCAAT,CAA8CpgC,KAA9C,EAAkE;AACvE,EAAa;AACX,QACEoD,gBAAgB,KAAK,IAArB,IACA,CAACpD,KAAK,CAACugB,IAAN,GAAavC,UAAd,MAA8BD,MAD9B,IAEA2hC,oBAAoB,CAAC/+C,OAArB,KAAiC,KAFjC,IAGAopD,oBAAoB,CAACppD,OAArB,KAAiC,KAJnC,EAKE;AACA,YACE,wEACE,+DADF,GAEE,4BAFF,GAGE,eAHF,GAIE,yCAJF,GAKE,OALF,GAME,gCANF,GAOE,mEAPF,GAQE,iBARF,GASE,6DAVJ,EAWEpD,gBAAgB,CAACyC,KAAK,CAAC1C,IAAP,CAXlB;AAaD;AACF;AACF;;AAED,SAAS0sD,oCAAT,CAA8ChqD,KAA9C,EAAkE;AAChE,EAAa;AACX,QACEoD,gBAAgB,KAAK,IAArB,IACAm9C,gBAAgB,KAAKlU,SADrB,IAEAqT,oBAAoB,CAAC/+C,OAArB,KAAiC,KAFjC,IAGAopD,oBAAoB,CAACppD,OAArB,KAAiC,KAJnC,EAKE;AACA,UAAMqoD,aAAa,GAAGC,OAAtB;;AACA,UAAI;AACFrmC,QAAAA,eAAyB,CAAC5iB,KAAD,CAAzB;;AACA,cACE,mEACE,+DADF,GAEE,4BAFF,GAGE,eAHF,GAIE,yCAJF,GAKE,OALF,GAME,gCANF,GAOE,mEAPF,GAQE,iBARF,GASE,6DAVJ,EAWEzC,gBAAgB,CAACyC,KAAK,CAAC1C,IAAP,CAXlB;AAaD,OAfD,SAeU;AACR,YAAI0rD,aAAJ,EAAmB;AACjBpmC,UAAAA,eAAyB,CAAC5iB,KAAD,CAAzB;AACD,SAFD,MAEO;AACL6iB,UAAAA,iBAA2B;AAC5B;AACF;AACF;AACF;AACF;;AAED,AAAO,IAAMugB,oCAAoC,GAAG4mB,oCAA7C;;AAGP,IAAIC,6BAA6B,GAAG,KAApC;AAEA;AACA;AACA;;AAEA,AAAO,SAASC,uBAAT,CAAiClqD,KAAjC,EAA+C;AACpD,EAAa;AACX,QACEiqD,6BAA6B,KAAK,KAAlC,IACA34C,2CAAA,KAAgD1H,SAFlD,EAGE;AACA,UAAI5J,KAAK,CAACugB,IAAN,GAAatC,YAAb,IAA6Bje,KAAK,CAACugB,IAAN,GAAarC,cAA9C,EAA8D;AAC5D+rC,QAAAA,6BAA6B,GAAG,IAAhC;;AACA,cACE,4EACE,+DADF,GAEE,4BAFF;AAIE,8CAJF,GAKE,mCALF,GAME,8DAPJ;AASD,OAXD;AAuBD;AACF;AACF;;AAED,SAASE,eAAT,CAAyBx5C,IAAzB,EAA0CiG,IAA1C,EAA8D;AAC5D;AACA;AACA;AACA;AACA,SAAQA,IAAD,GAAc,IAAd,GAAqBjG,IAAI,CAACy5C,mBAAjC;AACD;;AAED,AAAO,SAAShjB,eAAT,CAAyBxwB,IAAzB,EAA6C;AAClD;AAGA,MAAI2rC,uBAAuB,KAAK,IAAhC,EAAsC;AACpCA,IAAAA,uBAAuB,GAAG,CAAC3rC,IAAD,CAA1B;AACD,GAFD,MAEO;AACL2rC,IAAAA,uBAAuB,CAAC90C,IAAxB,CAA6BmJ,IAA7B;AACD;AACF;;AAED,SAASixC,oBAAT,CACEl3C,IADF,EAEEiG,IAFF,EAGEyzC,YAHF,EAIE;AACA;AAIA,MAAIA,YAAY,CAACloC,IAAb,GAAoB,CAAxB,EAA2B;AACzB,QAAMmoC,qBAAqB,GAAG35C,IAAI,CAAC25C,qBAAnC;AACA,QAAMC,mBAAmB,GAAGD,qBAAqB,CAAC1vD,GAAtB,CAA0Bgc,IAA1B,CAA5B;;AACA,QAAI2zC,mBAAmB,IAAI,IAA3B,EAAiC;AAC/BF,MAAAA,YAAY,CAAC3pC,OAAb,CAAqB,UAAA8pC,WAAW,EAAI;AAClC,YAAI,CAACD,mBAAmB,CAAC59C,GAApB,CAAwB69C,WAAxB,CAAL,EAA2C;AACzC;AACAA,UAAAA,WAAW,CAACC,OAAZ;AACD;;AAEDF,QAAAA,mBAAmB,CAAC1oC,GAApB,CAAwB2oC,WAAxB;AACD,OAPD;AAQD,KATD,MASO;AACLF,MAAAA,qBAAqB,CAACvvD,GAAtB,CAA0B6b,IAA1B,EAAgC,IAAIwK,GAAJ,CAAQipC,YAAR,CAAhC,EADK;;AAILA,MAAAA,YAAY,CAAC3pC,OAAb,CAAqB,UAAA8pC,WAAW,EAAI;AAClCA,QAAAA,WAAW,CAACC,OAAZ;AACD,OAFD;AAGD;;AAED,QAAMC,UAAU,GAAGC,uBAAe,CAAChqD,OAAnC;;AACA,QAAI+pD,UAAU,KAAK,IAAnB,EAAyB;AACvB,UAAME,QAAQ,GAAGT,eAAe,CAACx5C,IAAD,EAAOiG,IAAP,CAAhC;AACA8zC,MAAAA,UAAU,CAACG,eAAX,CAA2BR,YAA3B,EAAyCO,QAAzC;AACD;AACF;AACF;;AAED,SAAStH,2BAAT,CAAqC3yC,IAArC,EAAsDiG,IAAtD,EAA0E;AACxE;AAOAixC,EAAAA,oBAAoB,CAACl3C,IAAD,EAAOiG,IAAP,EAAarF,yBAAiB,CAAC5Q,OAA/B,CAApB;AACD;;AAED,SAAS+lD,8BAAT,CAAwC/1C,IAAxC,EAAyD+D,KAAzD,EAAuE;AACrE,AAMA;AACA;;;AACA,MAAM21C,YAA8B,GAAG,IAAIjpC,GAAJ,EAAvC;AACAzQ,EAAAA,IAAI,CAAC25C,qBAAL,CAA2B5pC,OAA3B,CAAmC,UAACoqC,qBAAD,EAAwBC,aAAxB,EAA0C;AAC3E,QAAIzyC,gBAAgB,CAAC5D,KAAD,EAAQq2C,aAAR,CAApB,EAA4C;AAC1CD,MAAAA,qBAAqB,CAACpqC,OAAtB,CAA8B,UAAA8pC,WAAW;AAAA,eACvCH,YAAY,CAACxoC,GAAb,CAAiB2oC,WAAjB,CADuC;AAAA,OAAzC;AAGD;AACF,GAND,EAVqE;AAmBrE;AACA;AACA;AACA;;AACA75C,EAAAA,IAAI,CAAC+nC,oBAAL,GAA4B2R,YAA5B;;AAEA,MAAIA,YAAY,CAACloC,IAAb,GAAoB,CAAxB,EAA2B;AACzB,QAAMuoC,UAAU,GAAGC,uBAAe,CAAChqD,OAAnC;;AACA,QAAI+pD,UAAU,KAAK,IAAnB,EAAyB;AACvB,UAAME,QAAQ,GAAGT,eAAe,CAACx5C,IAAD,EAAO+D,KAAP,CAAhC;;AACA,UAAI;AACFg2C,QAAAA,UAAU,CAACM,aAAX,CAAyBX,YAAzB,EAAuCO,QAAvC;AACD,OAFD,CAEE,OAAOxyD,KAAP,EAAc;AACd;AACAsjB,QAAAA,gBAAgB,CAACvG,mBAAD,EAA6B,YAAM;AACjD,gBAAM/c,KAAN;AACD,SAFe,CAAhB;AAGD;AACF;AACF;AACF;;AAED,SAAS0vD,yBAAT,CAAmCn3C,IAAnC,EAAyC4nC,cAAzC,EAAyD;AACvD;AAIA,MAAM0S,yBAAyB,GAAGt6C,IAAI,CAACkF,YAAvC;AAEA,MAAI60C,UAAJ;;AAEA,MAAI;AACFA,IAAAA,UAAU,GAAGC,uBAAe,CAAChqD,OAA7B;;AACA,QAAI+pD,UAAU,KAAK,IAAf,IAAuB/5C,IAAI,CAAC+nC,oBAAL,CAA0Bv2B,IAA1B,GAAiC,CAA5D,EAA+D;AAC7D;AACA,UAAMyoC,QAAQ,GAAGT,eAAe,CAACx5C,IAAD,EAAO4nC,cAAP,CAAhC;AACAmS,MAAAA,UAAU,CAACQ,aAAX,CAAyBv6C,IAAI,CAAC+nC,oBAA9B,EAAoDkS,QAApD;AACD;AACF,GAPD,CAOE,OAAOxyD,KAAP,EAAc;AACd;AACAsjB,IAAAA,gBAAgB,CAACvG,mBAAD,EAA6B,YAAM;AACjD,YAAM/c,KAAN;AACD,KAFe,CAAhB;AAGD,GAZD,SAYU;AACR;AACA;AACA;AACA,QAAMkyD,qBAAqB,GAAG35C,IAAI,CAAC25C,qBAAnC;AACAA,IAAAA,qBAAqB,CAAC5pC,OAAtB,CAA8B,UAACoqC,qBAAD,EAAwBl0C,IAAxB,EAAiC;AAC7D;AACA;AACA;AACA,UAAI,CAAC0B,gBAAgB,CAAC2yC,yBAAD,EAA4Br0C,IAA5B,CAArB,EAAwD;AACtD0zC,QAAAA,qBAAqB,CAACj4B,MAAtB,CAA6Bzb,IAA7B;AAEAk0C,QAAAA,qBAAqB,CAACpqC,OAAtB,CAA8B,UAAA8pC,WAAW,EAAI;AAC3CA,UAAAA,WAAW,CAACC,OAAZ;;AAEA,cAAIC,UAAU,KAAK,IAAf,IAAuBF,WAAW,CAACC,OAAZ,KAAwB,CAAnD,EAAsD;AACpD,gBAAI;AACFC,cAAAA,UAAU,CAACS,mCAAX,CAA+CX,WAA/C;AACD,aAFD,CAEE,OAAOpyD,KAAP,EAAc;AACd;AACAsjB,cAAAA,gBAAgB,CAACvG,mBAAD,EAA6B,YAAM;AACjD,sBAAM/c,KAAN;AACD,eAFe,CAAhB;AAGD;AACF;AACF,SAbD;AAcD;AACF,KAtBD;AAuBD;AACF;AAGD;AAQA,SAASusD,8BAAT,GAA0C;AACxC;AACA,SAAO7zC,CAAWs6C,uBAAuB,GAAG,CAA5C;AACD;;AAED,IAAMC,kBAAkB,GAAG/5C,2CAA3B;AACA,IAAMg6C,iBAAiB,GAAG,OAAOD,kBAAP,KAA8B,UAAxD;AAGA;;AACA,SAASE,YAAT,GAAiC;AAC/B,MAAIF,kBAAkB,KAAKzhD,SAA3B,EAAsC;AACpC;AAEA,QAAI;AACF,aAAOyhD,kBAAkB,EAAzB;AACD,KAFD,SAEU;AACRG,AACD;AACF,GARD,MAQO;AACL;AAIA,QAAI;AACF,UAAIC,YAAY,GAAG,KAAnB;;AACA,aAAOvH,mBAAmB,EAA1B,EAA8B;AAC5BuH,QAAAA,YAAY,GAAG,IAAf;AACD;;AACD,aAAOA,YAAP;AACD,KAND,SAMU;AACRD,AACD;AACF;AACF;;AAED,SAASE,sBAAT,CAAgCC,MAAhC,EAA+D;AAC7D,MAAI;AACFJ,IAAAA,YAAY;AACZ5M,IAAAA,WAAW,CAAC,YAAM;AAChB,UAAI4M,YAAY,EAAhB,EAAoB;AAClBG,QAAAA,sBAAsB,CAACC,MAAD,CAAtB;AACD,OAFD,MAEO;AACLA,QAAAA,MAAM;AACP;AACF,KANU,CAAX;AAOD,GATD,CASE,OAAO5+C,GAAP,EAAY;AACZ4+C,IAAAA,MAAM,CAAC5+C,GAAD,CAAN;AACD;AACF;AAGD;;;AAEA,IAAIq+C,uBAAuB,GAAG,CAA9B;AACA,AAEO,SAASQ,GAAT,CAAajwC,QAAb,EAA8D;AACnE;AAUA,MAAMkwC,+BAA+B,GAAGT,uBAAxC;AACAA,EAAAA,uBAAuB;AAEvB,MAAMU,4BAA4B,GAAGpM,oBAAoB,CAAC/+C,OAA1D;AACA,MAAMorD,4BAA4B,GAAGhC,oBAAoB,CAACppD,OAA1D;AACA,AACA++C,EAAAA,oBAAoB,CAAC/+C,OAArB,GAA+B,IAA/B;AACAopD,EAAAA,oBAAoB,CAACppD,OAArB,GAA+B,IAA/B;AACAqrD;AAEA,WAASL,MAAT,GAAkB;AAChBP,IAAAA,uBAAuB;AACvB1L,IAAAA,oBAAoB,CAAC/+C,OAArB,GAA+BmrD,4BAA/B;AACA/B,IAAAA,oBAAoB,CAACppD,OAArB,GAA+BorD,4BAA/B;AACAC;AACA,IAAa;AACX,UAAIZ,uBAAuB,GAAGS,+BAA9B,EAA+D;AAC7D;AACA,cACE,sEACE,iEAFJ;AAID;AACF;AACF;;AAED,MAAII,MAAJ;;AACA,MAAI;AACFA,IAAAA,MAAM,GAAG1G,cAAc,CAAC5pC,QAAD,CAAvB;AACD,GAFD,CAEE,OAAOvjB,KAAP,EAAc;AACd;AACAuzD,IAAAA,MAAM;AACN,UAAMvzD,KAAN;AACD;;AAED,MACE6zD,MAAM,KAAK,IAAX,IACA,OAAOA,MAAP,KAAkB,QADlB,IAEA,OAAOA,MAAM,CAAC7uC,IAAd,KAAuB,UAHzB,EAIE;AACA;AACA;AACA,QAAI8uC,MAAM,GAAG,KAAb;;AACA,IAAa;AACX,UAAI,OAAOC,OAAP,KAAmB,WAAvB,EAAoC;AAClC;AACAA,QAAAA,OAAO,CAACC,OAAR,GACGhvC,IADH,CACQ,YAAM,EADd,EAEGA,IAFH,CAEQ,YAAM;AACV,cAAI8uC,MAAM,KAAK,KAAf,EAAsB;AACpB,kBACE,oDACE,6EADF,GAEE,yEAHJ;AAKD;AACF,SAVH;AAWD;AACF,KAnBD;AAsBA;AACA;;;AACA,WAAO;AACL9uC,MAAAA,IADK,YACAgvC,OADA,EACSC,MADT,EACiB;AACpBH,QAAAA,MAAM,GAAG,IAAT;AACAD,QAAAA,MAAM,CAAC7uC,IAAP,CACE,YAAM;AACJ,cACEguC,uBAAuB,GAAG,CAA1B,IACCE,iBAAiB,KAAK,IAAtB,IACCQ,4BAA4B,KAAK,IAHrC,EAIE;AACAH,YAAAA,MAAM;AACNS,YAAAA,OAAO;AACP;AACD,WATG;AAWJ;;;AACAV,UAAAA,sBAAsB,CAAC,UAAC3+C,GAAD,EAAiB;AACtC4+C,YAAAA,MAAM;;AACN,gBAAI5+C,GAAJ,EAAS;AACPs/C,cAAAA,MAAM,CAACt/C,GAAD,CAAN;AACD,aAFD,MAEO;AACLq/C,cAAAA,OAAO;AACR;AACF,WAPqB,CAAtB;AAQD,SArBH,EAsBE,UAAAr/C,GAAG,EAAI;AACL4+C,UAAAA,MAAM;AACNU,UAAAA,MAAM,CAACt/C,GAAD,CAAN;AACD,SAzBH;AA2BD;AA9BI,KAAP;AAgCD,GA5DD,MA4DO;AACL,IAAa;AACX,UAAIk/C,MAAM,KAAKriD,SAAf,EAA0B;AACxB,cACE,8CACE,sDAFJ,EAGEqiD,MAHF;AAKD;AACF,KATI;;;AAYL,QAAI;AACF,UACEb,uBAAuB,KAAK,CAA5B,KACCE,iBAAiB,KAAK,KAAtB,IAA+BQ,4BAA4B,KAAK,KADjE,CADF,EAGE;AACA;AACA;AACAP,QAAAA,YAAY;AACb;;AACDI,MAAAA,MAAM;AACP,KAVD,CAUE,OAAO5+C,GAAP,EAAY;AACZ4+C,MAAAA,MAAM;AACN,YAAM5+C,GAAN;AACD,KAzBI;;;AA4BL,WAAO;AACLqQ,MAAAA,IADK,YACAgvC,OADA,EACS;AACZ,QAAa;AACX,gBACE,mFADF;AAGD;;AACDA,QAAAA,OAAO;AACR;AARI,KAAP;AAUD;AACF;;AAED,SAASxE,uBAAT,CAAiC5nD,KAAjC,EAAqD;AACnDA,EAAAA,KAAK,CAACyB,OAAN,GAAgB,IAAhB;AACAzB,EAAAA,KAAK,CAACc,SAAN,GAAkB,IAAlB;AACD;;ACpnHD,IAAIwrD,aAAoC,GAAG,IAA3C;;AAEA,IAAIC,gBAAuC,GAAG,IAA9C;AAEA,AAAO,IAAMC,iBAAiB,GAAG,UAACC,OAAD,EAA0C;AACzE,EAAa;AACXH,IAAAA,aAAa,GAAGG,OAAhB;AACD;AACF,CAJM;AAMP,AAAO,SAASlmB,8BAAT,CAAwCjpC,IAAxC,EAAwD;AAC7D,EAAa;AACX,QAAIgvD,aAAa,KAAK,IAAtB,EAA4B;AAC1B;AACA,aAAOhvD,IAAP;AACD;;AACD,QAAMovD,MAAM,GAAGJ,aAAa,CAAChvD,IAAD,CAA5B;;AACA,QAAIovD,MAAM,KAAK9iD,SAAf,EAA0B;AACxB,aAAOtM,IAAP;AACD,KARU;;;AAUX,WAAOovD,MAAM,CAAC/rD,OAAd;AACD,GAXD;AAcD;AAED,AAAO,SAAS0oC,2BAAT,CAAqC/rC,IAArC,EAAqD;AAC1D;AACA,SAAOipC,8BAA8B,CAACjpC,IAAD,CAArC;AACD;AAED,AAAO,SAASgsC,gCAAT,CAA0ChsC,IAA1C,EAA0D;AAC/D,EAAa;AACX,QAAIgvD,aAAa,KAAK,IAAtB,EAA4B;AAC1B;AACA,aAAOhvD,IAAP;AACD;;AACD,QAAMovD,MAAM,GAAGJ,aAAa,CAAChvD,IAAD,CAA5B;;AACA,QAAIovD,MAAM,KAAK9iD,SAAf,EAA0B;AACxB;AACA,UACEtM,IAAI,KAAK,IAAT,IACAA,IAAI,KAAKsM,SADT,IAEA,OAAOtM,IAAI,CAACO,MAAZ,KAAuB,UAHzB,EAIE;AACA;AACA;AACA;AACA,YAAM8uD,aAAa,GAAGpmB,8BAA8B,CAACjpC,IAAI,CAACO,MAAN,CAApD;;AACA,YAAIP,IAAI,CAACO,MAAL,KAAgB8uD,aAApB,EAAmC;AACjC,cAAMC,aAAa,GAAG;AACpBnvD,YAAAA,QAAQ,EAAEjC,sBADU;AAEpBqC,YAAAA,MAAM,EAAE8uD;AAFY,WAAtB;;AAIA,cAAIrvD,IAAI,CAACH,WAAL,KAAqByM,SAAzB,EAAoC;AACjCgjD,YAAAA,aAAD,CAAqBzvD,WAArB,GAAmCG,IAAI,CAACH,WAAxC;AACD;;AACD,iBAAOyvD,aAAP;AACD;AACF;;AACD,aAAOtvD,IAAP;AACD,KA7BU;;;AA+BX,WAAOovD,MAAM,CAAC/rD,OAAd;AACD,GAhCD;AAmCD;AAED,AAAO,SAASkwB,iCAAT,CACL7wB,KADK,EAELkM,OAFK,EAGI;AACT,EAAa;AACX,QAAIogD,aAAa,KAAK,IAAtB,EAA4B;AAC1B;AACA,aAAO,KAAP;AACD;;AAED,QAAMO,QAAQ,GAAG7sD,KAAK,CAAC2tB,WAAvB;AACA,QAAMm/B,QAAQ,GAAG5gD,OAAO,CAAC5O,IAAzB,CAPW;;AAUX,QAAIyvD,oBAAoB,GAAG,KAA3B;AAEA,QAAMC,gBAAgB,GACpB,OAAOF,QAAP,KAAoB,QAApB,IAAgCA,QAAQ,KAAK,IAA7C,GACIA,QAAQ,CAACrvD,QADb,GAEI,IAHN;;AAKA,YAAQuC,KAAK,CAACxC,GAAd;AACE,WAAKpE,cAAL;AAAqB;AACnB,cAAI,OAAO0zD,QAAP,KAAoB,UAAxB,EAAoC;AAClCC,YAAAA,oBAAoB,GAAG,IAAvB;AACD;;AACD;AACD;;AACD,WAAK5zD,iBAAL;AAAwB;AACtB,cAAI,OAAO2zD,QAAP,KAAoB,UAAxB,EAAoC;AAClCC,YAAAA,oBAAoB,GAAG,IAAvB;AACD,WAFD,MAEO,IAAIC,gBAAgB,KAAKpxD,eAAzB,EAA0C;AAC/C;AACA;AACA;AACA;AACAmxD,YAAAA,oBAAoB,GAAG,IAAvB;AACD;;AACD;AACD;;AACD,WAAKjzD,UAAL;AAAiB;AACf,cAAIkzD,gBAAgB,KAAKxxD,sBAAzB,EAAiD;AAC/CuxD,YAAAA,oBAAoB,GAAG,IAAvB;AACD,WAFD,MAEO,IAAIC,gBAAgB,KAAKpxD,eAAzB,EAA0C;AAC/CmxD,YAAAA,oBAAoB,GAAG,IAAvB;AACD;;AACD;AACD;;AACD,WAAK9yD,aAAL;AACA,WAAKC,mBAAL;AAA0B;AACxB,cAAI8yD,gBAAgB,KAAKrxD,eAAzB,EAA0C;AACxC;AACA;AACAoxD,YAAAA,oBAAoB,GAAG,IAAvB;AACD,WAJD,MAIO,IAAIC,gBAAgB,KAAKpxD,eAAzB,EAA0C;AAC/CmxD,YAAAA,oBAAoB,GAAG,IAAvB;AACD;;AACD;AACD;;AACD;AACE,eAAO,KAAP;AAvCJ,KAjBW;;;AA4DX,QAAIA,oBAAJ,EAA0B;AACxB;AACA;AACA;AACA;AACA;AACA,UAAME,UAAU,GAAGX,aAAa,CAACO,QAAD,CAAhC;;AACA,UAAII,UAAU,KAAKrjD,SAAf,IAA4BqjD,UAAU,KAAKX,aAAa,CAACQ,QAAD,CAA5D,EAAwE;AACtE,eAAO,IAAP;AACD;AACF;;AACD,WAAO,KAAP;AACD,GAxED;AA2ED;AAED,AAAO,SAASnZ,sCAAT,CAAgD3zC,KAAhD,EAA8D;AACnE,EAAa;AACX,QAAIssD,aAAa,KAAK,IAAtB,EAA4B;AAC1B;AACA;AACD;;AACD,QAAI,OAAOnV,OAAP,KAAmB,UAAvB,EAAmC;AACjC;AACD;;AACD,QAAIoV,gBAAgB,KAAK,IAAzB,EAA+B;AAC7BA,MAAAA,gBAAgB,GAAG,IAAIpV,OAAJ,EAAnB;AACD;;AACDoV,IAAAA,gBAAgB,CAAC1qC,GAAjB,CAAqB7hB,KAArB;AACD;AACF;AAED,AAAO,IAAMktD,eAAgC,GAAG,UAC9Cv8C,IAD8C,EAE9CwU,MAF8C,EAGrC;AACT,EAAa;AACX,QAAImnC,aAAa,KAAK,IAAtB,EAA4B;AAC1B;AACA;AACD;;AAJU,QAKJa,aALI,GAK8BhoC,MAL9B,CAKJgoC,aALI;AAAA,QAKWC,eALX,GAK8BjoC,MAL9B,CAKWioC,eALX;AAMXlJ,IAAAA,mBAAmB;AACnB0B,IAAAA,SAAS,CAAC,YAAM;AACdyH,MAAAA,qCAAqC,CACnC18C,IAAI,CAAChQ,OAD8B,EAEnCysD,eAFmC,EAGnCD,aAHmC,CAArC;AAKD,KANQ,CAAT;AAOD;AACF,CAnBM;AAqBP,AAAO,IAAMG,YAA0B,GAAG,UACxC38C,IADwC,EAExCzE,OAFwC,EAG/B;AACT,EAAa;AACX,QAAIyE,IAAI,CAACjT,OAAL,KAAiBiQ,kBAArB,EAAyC;AACvC;AACA;AACA;AACA;AACD;;AACDu2C,IAAAA,mBAAmB;AACnB0B,IAAAA,SAAS,CAAC,YAAM;AACd2H,MAAAA,eAAe,CAACrhD,OAAD,EAAUyE,IAAV,EAAgB,IAAhB,EAAsB,IAAtB,CAAf;AACD,KAFQ,CAAT;AAGD;AACF,CAhBM;;AAkBP,SAAS08C,qCAAT,CACErtD,KADF,EAEEotD,eAFF,EAGED,aAHF,EAIE;AACA,EAAa;AAAA,QACJhtD,SADI,GACoCH,KADpC,CACJG,SADI;AAAA,QACOqB,KADP,GACoCxB,KADpC,CACOwB,KADP;AAAA,QACcC,OADd,GACoCzB,KADpC,CACcyB,OADd;AAAA,QACuBjE,GADvB,GACoCwC,KADpC,CACuBxC,GADvB;AAAA,QAC4BF,IAD5B,GACoC0C,KADpC,CAC4B1C,IAD5B;AAGX,QAAIkwD,aAAa,GAAG,IAApB;;AACA,YAAQhwD,GAAR;AACE,WAAKrE,iBAAL;AACA,WAAKe,mBAAL;AACA,WAAKd,cAAL;AACEo0D,QAAAA,aAAa,GAAGlwD,IAAhB;AACA;;AACF,WAAKxD,UAAL;AACE0zD,QAAAA,aAAa,GAAGlwD,IAAI,CAACO,MAArB;AACA;AARJ;;AAaA,QAAIyuD,aAAa,KAAK,IAAtB,EAA4B;AAC1B,YAAM,IAAIziD,KAAJ,CAAU,qDAAV,CAAN;AACD;;AAED,QAAI4jD,WAAW,GAAG,KAAlB;AACA,QAAIC,YAAY,GAAG,KAAnB;;AACA,QAAIF,aAAa,KAAK,IAAtB,EAA4B;AAC1B,UAAMd,MAAM,GAAGJ,aAAa,CAACkB,aAAD,CAA5B;;AACA,UAAId,MAAM,KAAK9iD,SAAf,EAA0B;AACxB,YAAIujD,aAAa,CAACxgD,GAAd,CAAkB+/C,MAAlB,CAAJ,EAA+B;AAC7BgB,UAAAA,YAAY,GAAG,IAAf;AACD,SAFD,MAEO,IAAIN,eAAe,CAACzgD,GAAhB,CAAoB+/C,MAApB,CAAJ,EAAiC;AACtC,cAAIlvD,GAAG,KAAKpE,cAAZ,EAA4B;AAC1Bs0D,YAAAA,YAAY,GAAG,IAAf;AACD,WAFD,MAEO;AACLD,YAAAA,WAAW,GAAG,IAAd;AACD;AACF;AACF;AACF;;AACD,QAAIlB,gBAAgB,KAAK,IAAzB,EAA+B;AAC7B,UACEA,gBAAgB,CAAC5/C,GAAjB,CAAqB3M,KAArB,KACCG,SAAS,KAAK,IAAd,IAAsBosD,gBAAgB,CAAC5/C,GAAjB,CAAqBxM,SAArB,CAFzB,EAGE;AACAutD,QAAAA,YAAY,GAAG,IAAf;AACD;AACF;;AAED,QAAIA,YAAJ,EAAkB;AAChB1tD,MAAAA,KAAK,CAACmvC,kBAAN,GAA2B,IAA3B;AACD;;AACD,QAAIue,YAAY,IAAID,WAApB,EAAiC;AAC/BjjC,MAAAA,qBAAqB,CAACxqB,KAAD,EAAQkT,QAAR,EAAkBiB,WAAlB,CAArB;AACD;;AACD,QAAI3S,KAAK,KAAK,IAAV,IAAkB,CAACksD,YAAvB,EAAqC;AACnCL,MAAAA,qCAAqC,CACnC7rD,KADmC,EAEnC4rD,eAFmC,EAGnCD,aAHmC,CAArC;AAKD;;AACD,QAAI1rD,OAAO,KAAK,IAAhB,EAAsB;AACpB4rD,MAAAA,qCAAqC,CACnC5rD,OADmC,EAEnC2rD,eAFmC,EAGnCD,aAHmC,CAArC;AAKD;AACF;AACF;;AAED,AAAO,IAAMQ,2BAAwD,GAAG,UACtEh9C,IADsE,EAEtEi9C,QAFsE,EAGpD;AAClB,EAAa;AACX,QAAMC,aAAa,GAAG,IAAIzsC,GAAJ,EAAtB;AACA,QAAM0sC,KAAK,GAAG,IAAI1sC,GAAJ,CAAQwsC,QAAQ,CAACj1D,GAAT,CAAa,UAAA+zD,MAAM;AAAA,aAAIA,MAAM,CAAC/rD,OAAX;AAAA,KAAnB,CAAR,CAAd;AACAotD,IAAAA,6CAA6C,CAC3Cp9C,IAAI,CAAChQ,OADsC,EAE3CmtD,KAF2C,EAG3CD,aAH2C,CAA7C;AAKA,WAAOA,aAAP;AACD,GATD;AAcD,CAlBM;;AAoBP,SAASE,6CAAT,CACE/tD,KADF,EAEE8tD,KAFF,EAGED,aAHF,EAIE;AACA,EAAa;AAAA,QACJrsD,KADI,GACyBxB,KADzB,CACJwB,KADI;AAAA,QACGC,OADH,GACyBzB,KADzB,CACGyB,OADH;AAAA,QACYjE,GADZ,GACyBwC,KADzB,CACYxC,GADZ;AAAA,QACiBF,IADjB,GACyB0C,KADzB,CACiB1C,IADjB;AAGX,QAAIkwD,aAAa,GAAG,IAApB;;AACA,YAAQhwD,GAAR;AACE,WAAKrE,iBAAL;AACA,WAAKe,mBAAL;AACA,WAAKd,cAAL;AACEo0D,QAAAA,aAAa,GAAGlwD,IAAhB;AACA;;AACF,WAAKxD,UAAL;AACE0zD,QAAAA,aAAa,GAAGlwD,IAAI,CAACO,MAArB;AACA;AARJ;;AAaA,QAAImwD,QAAQ,GAAG,KAAf;;AACA,QAAIR,aAAa,KAAK,IAAtB,EAA4B;AAC1B,UAAIM,KAAK,CAACnhD,GAAN,CAAU6gD,aAAV,CAAJ,EAA8B;AAC5BQ,QAAAA,QAAQ,GAAG,IAAX;AACD;AACF;;AAED,QAAIA,QAAJ,EAAc;AACZ;AACA;AACA;AACAC,MAAAA,kCAAkC,CAACjuD,KAAD,EAAQ6tD,aAAR,CAAlC;AACD,KALD,MAKO;AACL;AACA,UAAIrsD,KAAK,KAAK,IAAd,EAAoB;AAClBusD,QAAAA,6CAA6C,CAC3CvsD,KAD2C,EAE3CssD,KAF2C,EAG3CD,aAH2C,CAA7C;AAKD;AACF;;AAED,QAAIpsD,OAAO,KAAK,IAAhB,EAAsB;AACpBssD,MAAAA,6CAA6C,CAC3CtsD,OAD2C,EAE3CqsD,KAF2C,EAG3CD,aAH2C,CAA7C;AAKD;AACF;AACF;;AAED,SAASI,kCAAT,CACEjuD,KADF,EAEE6tD,aAFF,EAGQ;AACN,EAAa;AACX,QAAMK,kBAAkB,GAAGC,uCAAuC,CAChEnuD,KADgE,EAEhE6tD,aAFgE,CAAlE;;AAIA,QAAIK,kBAAJ,EAAwB;AACtB;AACD,KAPU;;;AASX,QAAIjuD,IAAI,GAAGD,KAAX;;AACA,WAAO,IAAP,EAAa;AACX,cAAQC,IAAI,CAACzC,GAAb;AACE,aAAKhE,aAAL;AACEq0D,UAAAA,aAAa,CAAChsC,GAAd,CAAkB5hB,IAAI,CAACa,SAAvB;AACA;;AACF,aAAKvH,UAAL;AACEs0D,UAAAA,aAAa,CAAChsC,GAAd,CAAkB5hB,IAAI,CAACa,SAAL,CAAeowB,aAAjC;AACA;;AACF,aAAK53B,QAAL;AACEu0D,UAAAA,aAAa,CAAChsC,GAAd,CAAkB5hB,IAAI,CAACa,SAAL,CAAeowB,aAAjC;AACA;AATJ;;AAWA,UAAIjxB,IAAI,CAACK,MAAL,KAAgB,IAApB,EAA0B;AACxB,cAAM,IAAIuJ,KAAJ,CAAU,+BAAV,CAAN;AACD;;AACD5J,MAAAA,IAAI,GAAGA,IAAI,CAACK,MAAZ;AACD;AACF;AACF;;AAED,SAAS6tD,uCAAT,CACEnuD,KADF,EAEE6tD,aAFF,EAGW;AACT,EAAa;AACX,QAAI5tD,IAAW,GAAGD,KAAlB;AACA,QAAIkuD,kBAAkB,GAAG,KAAzB;;AACA,WAAO,IAAP,EAAa;AACX,UAAIjuD,IAAI,CAACzC,GAAL,KAAahE,aAAjB,EAAgC;AAC9B;AACA00D,QAAAA,kBAAkB,GAAG,IAArB;AACAL,QAAAA,aAAa,CAAChsC,GAAd,CAAkB5hB,IAAI,CAACa,SAAvB,EAH8B;AAK/B,OALD,MAKO,IAAIb,IAAI,CAACuB,KAAL,KAAe,IAAnB,EAAyB;AAC9BvB,QAAAA,IAAI,CAACuB,KAAL,CAAWlB,MAAX,GAAoBL,IAApB;AACAA,QAAAA,IAAI,GAAGA,IAAI,CAACuB,KAAZ;AACA;AACD;;AACD,UAAIvB,IAAI,KAAKD,KAAb,EAAoB;AAClB,eAAOkuD,kBAAP;AACD;;AACD,aAAOjuD,IAAI,CAACwB,OAAL,KAAiB,IAAxB,EAA8B;AAC5B,YAAIxB,IAAI,CAACK,MAAL,KAAgB,IAAhB,IAAwBL,IAAI,CAACK,MAAL,KAAgBN,KAA5C,EAAmD;AACjD,iBAAOkuD,kBAAP;AACD;;AACDjuD,QAAAA,IAAI,GAAGA,IAAI,CAACK,MAAZ;AACD;;AACDL,MAAAA,IAAI,CAACwB,OAAL,CAAanB,MAAb,GAAsBL,IAAI,CAACK,MAA3B;AACAL,MAAAA,IAAI,GAAGA,IAAI,CAACwB,OAAZ;AACD;AACF;;AACD,SAAO,KAAP;AACD;;AChYD,IAAI2sD,iBAAJ;;AAEA,AAAa;AACXA,EAAAA,iBAAiB,GAAG,KAApB;;AACA,MAAI;AACF,QAAMC,mBAAmB,GAAGjlD,MAAM,CAACklD,iBAAP,CAAyB,EAAzB,CAA5B;AACA;;AACA,QAAIlkD,GAAJ,CAAQ,CAAC,CAACikD,mBAAD,EAAsB,IAAtB,CAAD,CAAR;AACA,QAAIjtC,GAAJ,CAAQ,CAACitC,mBAAD,CAAR;AACA;AACD,GAND,CAME,OAAOhb,CAAP,EAAU;AACV;AACA+a,IAAAA,iBAAiB,GAAG,IAApB;AACD;AACF;;AAED,IAAIG,YAAY,GAAG,CAAnB;;AAEA,SAASC,SAAT,CACEhxD,GADF,EAEEqwB,YAFF,EAGEhzB,GAHF,EAIE0lB,IAJF,EAKE;AACA;AACA,OAAK/iB,GAAL,GAAWA,GAAX;AACA,OAAK3C,GAAL,GAAWA,GAAX;AACA,OAAK8yB,WAAL,GAAmB,IAAnB;AACA,OAAKrwB,IAAL,GAAY,IAAZ;AACA,OAAKwD,SAAL,GAAiB,IAAjB,CANA;;AASA,OAAKR,MAAL,GAAc,IAAd;AACA,OAAKkB,KAAL,GAAa,IAAb;AACA,OAAKC,OAAL,GAAe,IAAf;AACA,OAAK2L,KAAL,GAAa,CAAb;AAEA,OAAKshB,GAAL,GAAW,IAAX;AAEA,OAAKb,YAAL,GAAoBA,YAApB;AACA,OAAKR,aAAL,GAAqB,IAArB;AACA,OAAKvG,WAAL,GAAmB,IAAnB;AACA,OAAKN,aAAL,GAAqB,IAArB;AACA,OAAKzB,YAAL,GAAoB,IAApB;AAEA,OAAKxE,IAAL,GAAYA,IAAZ,CAtBA;;AAyBA,OAAKlgB,KAAL,GAAahC,OAAb;AACA,OAAKmxB,UAAL,GAAkB,IAAlB;AAEA,OAAKC,WAAL,GAAmB,IAAnB;AACA,OAAKF,UAAL,GAAkB,IAAlB;AAEA,OAAK7a,KAAL,GAAa1B,OAAb;AACA,OAAK2R,UAAL,GAAkB3R,OAAlB;AAEA,OAAK7S,SAAL,GAAiB,IAAjB;;AAEA,EAAyB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAK4kC,cAAL,GAAsB0pB,MAAM,CAACC,GAA7B;AACA,SAAKhqB,eAAL,GAAuB+pB,MAAM,CAACC,GAA9B;AACA,SAAK1pB,gBAAL,GAAwBypB,MAAM,CAACC,GAA/B;AACA,SAAK9iB,gBAAL,GAAwB6iB,MAAM,CAACC,GAA/B,CAhBuB;AAmBvB;AACA;;AACA,SAAK3pB,cAAL,GAAsB,CAAtB;AACA,SAAKL,eAAL,GAAuB,CAAC,CAAxB;AACA,SAAKM,gBAAL,GAAwB,CAAxB;AACA,SAAK4G,gBAAL,GAAwB,CAAxB;AACD;;AAED,EAAa;AACX;AACA,SAAKhC,QAAL,GAAgB2kB,YAAY,EAA5B;AACA,SAAKnvC,YAAL,GAAoB,IAApB;AACA,SAAKD,WAAL,GAAmB,IAAnB;AACA,SAAKgwB,kBAAL,GAA0B,KAA1B;AACA,SAAKvU,eAAL,GAAuB,IAAvB;;AACA,QAAI,CAACwzB,iBAAD,IAAsB,OAAOhlD,MAAM,CAACklD,iBAAd,KAAoC,UAA9D,EAA0E;AACxEllD,MAAAA,MAAM,CAACklD,iBAAP,CAAyB,IAAzB;AACD;AACF;AACF;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAMK,WAAW,GAAG,UAClBnxD,GADkB,EAElBqwB,YAFkB,EAGlBhzB,GAHkB,EAIlB0lB,IAJkB,EAKX;AACP;AACA,SAAO,IAAIiuC,SAAJ,CAAchxD,GAAd,EAAmBqwB,YAAnB,EAAiChzB,GAAjC,EAAsC0lB,IAAtC,CAAP;AACD,CARD;;AAUA,SAAS3U,iBAAT,CAAyBC,SAAzB,EAA8C;AAC5C,MAAM9S,SAAS,GAAG8S,SAAS,CAAC9S,SAA5B;AACA,SAAO,CAAC,EAAEA,SAAS,IAAIA,SAAS,CAAC+S,gBAAzB,CAAR;AACD;;AAED,AAAO,SAASs6B,yBAAT,CAAmC9oC,IAAnC,EAA8C;AACnD,SACE,OAAOA,IAAP,KAAgB,UAAhB,IACA,CAACsO,iBAAe,CAACtO,IAAD,CADhB,IAEAA,IAAI,CAAC0lB,YAAL,KAAsBpZ,SAHxB;AAKD;AAED,AAAO,SAASu/B,uBAAT,CAAiCt9B,SAAjC,EAA+D;AACpE,MAAI,OAAOA,SAAP,KAAqB,UAAzB,EAAqC;AACnC,WAAOD,iBAAe,CAACC,SAAD,CAAf,GAA6BzS,cAA7B,GAA8CD,iBAArD;AACD,GAFD,MAEO,IAAI0S,SAAS,KAAKjC,SAAd,IAA2BiC,SAAS,KAAK,IAA7C,EAAmD;AACxD,QAAMpO,QAAQ,GAAGoO,SAAS,CAACpO,QAA3B;;AACA,QAAIA,QAAQ,KAAKjC,sBAAjB,EAAyC;AACvC,aAAO1B,UAAP;AACD;;AACD,QAAI2D,QAAQ,KAAK9B,eAAjB,EAAkC;AAChC,aAAO1B,aAAP;AACD;;AACD,IAAqB;AACnB,UAAIwD,QAAQ,KAAK5B,gBAAjB,EAAmC;AACjC,eAAOpB,KAAP;AACD;AACF;AACF;;AACD,SAAOpB,sBAAP;AACD;;AAGD,AAAO,SAAS22B,oBAAT,CAA8BrvB,OAA9B,EAA8CktB,YAA9C,EAAwE;AAC7E,MAAI5f,cAAc,GAAGtN,OAAO,CAACR,SAA7B;;AACA,MAAI8N,cAAc,KAAK,IAAvB,EAA6B;AAC3B;AACA;AACA;AACA;AACA;AACAA,IAAAA,cAAc,GAAG0gD,WAAW,CAC1BhuD,OAAO,CAACnD,GADkB,EAE1BqwB,YAF0B,EAG1BltB,OAAO,CAAC9F,GAHkB,EAI1B8F,OAAO,CAAC4f,IAJkB,CAA5B;AAMAtS,IAAAA,cAAc,CAAC0f,WAAf,GAA6BhtB,OAAO,CAACgtB,WAArC;AACA1f,IAAAA,cAAc,CAAC3Q,IAAf,GAAsBqD,OAAO,CAACrD,IAA9B;AACA2Q,IAAAA,cAAc,CAACnN,SAAf,GAA2BH,OAAO,CAACG,SAAnC;;AAEA,IAAa;AACX;AACAmN,MAAAA,cAAc,CAAC27B,QAAf,GAA0BjpC,OAAO,CAACipC,QAAlC;AACA37B,MAAAA,cAAc,CAACmR,YAAf,GAA8Bze,OAAO,CAACye,YAAtC;AACAnR,MAAAA,cAAc,CAACkR,WAAf,GAA6Bxe,OAAO,CAACwe,WAArC;AACAlR,MAAAA,cAAc,CAAC2sB,eAAf,GAAiCj6B,OAAO,CAACi6B,eAAzC;AACD;;AAED3sB,IAAAA,cAAc,CAAC9N,SAAf,GAA2BQ,OAA3B;AACAA,IAAAA,OAAO,CAACR,SAAR,GAAoB8N,cAApB;AACD,GA1BD,MA0BO;AACLA,IAAAA,cAAc,CAAC4f,YAAf,GAA8BA,YAA9B,CADK;;AAGL5f,IAAAA,cAAc,CAAC3Q,IAAf,GAAsBqD,OAAO,CAACrD,IAA9B,CAHK;AAML;;AACA2Q,IAAAA,cAAc,CAAC5N,KAAf,GAAuBhC,OAAvB,CAPK;;AAUL4P,IAAAA,cAAc,CAACuhB,UAAf,GAA4B,IAA5B;AACAvhB,IAAAA,cAAc,CAACwhB,WAAf,GAA6B,IAA7B;AACAxhB,IAAAA,cAAc,CAACshB,UAAf,GAA4B,IAA5B;;AAEA,IAAyB;AACvB;AACA;AACA;AACA;AACAthB,MAAAA,cAAc,CAAC82B,cAAf,GAAgC,CAAhC;AACA92B,MAAAA,cAAc,CAACy2B,eAAf,GAAiC,CAAC,CAAlC;AACD;AACF;;AAEDz2B,EAAAA,cAAc,CAAC0W,UAAf,GAA4BhkB,OAAO,CAACgkB,UAApC;AACA1W,EAAAA,cAAc,CAACyG,KAAf,GAAuB/T,OAAO,CAAC+T,KAA/B;AAEAzG,EAAAA,cAAc,CAACzM,KAAf,GAAuBb,OAAO,CAACa,KAA/B;AACAyM,EAAAA,cAAc,CAACof,aAAf,GAA+B1sB,OAAO,CAAC0sB,aAAvC;AACApf,EAAAA,cAAc,CAACuY,aAAf,GAA+B7lB,OAAO,CAAC6lB,aAAvC;AACAvY,EAAAA,cAAc,CAAC6Y,WAAf,GAA6BnmB,OAAO,CAACmmB,WAArC,CA1D6E;AA6D7E;;AACA,MAAM8nC,mBAAmB,GAAGjuD,OAAO,CAACokB,YAApC;AACA9W,EAAAA,cAAc,CAAC8W,YAAf,GACE6pC,mBAAmB,KAAK,IAAxB,GACI,IADJ,GAEI;AACEl6C,IAAAA,KAAK,EAAEk6C,mBAAmB,CAACl6C,KAD7B;AAEEuQ,IAAAA,YAAY,EAAE2pC,mBAAmB,CAAC3pC;AAFpC,GAHN,CA/D6E;;AAwE7EhX,EAAAA,cAAc,CAACxM,OAAf,GAAyBd,OAAO,CAACc,OAAjC;AACAwM,EAAAA,cAAc,CAACb,KAAf,GAAuBzM,OAAO,CAACyM,KAA/B;AACAa,EAAAA,cAAc,CAACygB,GAAf,GAAqB/tB,OAAO,CAAC+tB,GAA7B;;AAEA,EAAyB;AACvBzgB,IAAAA,cAAc,CAAC+2B,gBAAf,GAAkCrkC,OAAO,CAACqkC,gBAA1C;AACA/2B,IAAAA,cAAc,CAAC29B,gBAAf,GAAkCjrC,OAAO,CAACirC,gBAA1C;AACD;;AAED,EAAa;AACX39B,IAAAA,cAAc,CAACkhC,kBAAf,GAAoCxuC,OAAO,CAACwuC,kBAA5C;;AACA,YAAQlhC,cAAc,CAACzQ,GAAvB;AACE,WAAKnE,sBAAL;AACA,WAAKF,iBAAL;AACA,WAAKe,mBAAL;AACE+T,QAAAA,cAAc,CAAC3Q,IAAf,GAAsBipC,8BAA8B,CAAC5lC,OAAO,CAACrD,IAAT,CAApD;AACA;;AACF,WAAKlE,cAAL;AACE6U,QAAAA,cAAc,CAAC3Q,IAAf,GAAsB+rC,2BAA2B,CAAC1oC,OAAO,CAACrD,IAAT,CAAjD;AACA;;AACF,WAAKxD,UAAL;AACEmU,QAAAA,cAAc,CAAC3Q,IAAf,GAAsBgsC,gCAAgC,CAAC3oC,OAAO,CAACrD,IAAT,CAAtD;AACA;AAXJ;AAeD;;AAED,SAAO2Q,cAAP;AACD;;AAGD,AAAO,SAASulB,mBAAT,CAA6BvlB,cAA7B,EAAoD+L,WAApD,EAAwE;AAC7E;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA/L,EAAAA,cAAc,CAAC5N,KAAf,IAAwB9B,SAAxB,CAX6E;;AAc7E0P,EAAAA,cAAc,CAACuhB,UAAf,GAA4B,IAA5B;AACAvhB,EAAAA,cAAc,CAACwhB,WAAf,GAA6B,IAA7B;AACAxhB,EAAAA,cAAc,CAACshB,UAAf,GAA4B,IAA5B;AAEA,MAAM5uB,OAAO,GAAGsN,cAAc,CAAC9N,SAA/B;;AACA,MAAIQ,OAAO,KAAK,IAAhB,EAAsB;AACpB;AACAsN,IAAAA,cAAc,CAAC0W,UAAf,GAA4B3R,OAA5B;AACA/E,IAAAA,cAAc,CAACyG,KAAf,GAAuBsF,WAAvB;AAEA/L,IAAAA,cAAc,CAACzM,KAAf,GAAuB,IAAvB;AACAyM,IAAAA,cAAc,CAACof,aAAf,GAA+B,IAA/B;AACApf,IAAAA,cAAc,CAACuY,aAAf,GAA+B,IAA/B;AACAvY,IAAAA,cAAc,CAAC6Y,WAAf,GAA6B,IAA7B;AAEA7Y,IAAAA,cAAc,CAAC8W,YAAf,GAA8B,IAA9B;AAEA9W,IAAAA,cAAc,CAACnN,SAAf,GAA2B,IAA3B;;AAEA,IAAyB;AACvB;AACA;AACAmN,MAAAA,cAAc,CAAC+2B,gBAAf,GAAkC,CAAlC;AACA/2B,MAAAA,cAAc,CAAC29B,gBAAf,GAAkC,CAAlC;AACD;AACF,GApBD,MAoBO;AACL;AACA39B,IAAAA,cAAc,CAAC0W,UAAf,GAA4BhkB,OAAO,CAACgkB,UAApC;AACA1W,IAAAA,cAAc,CAACyG,KAAf,GAAuB/T,OAAO,CAAC+T,KAA/B;AAEAzG,IAAAA,cAAc,CAACzM,KAAf,GAAuBb,OAAO,CAACa,KAA/B;AACAyM,IAAAA,cAAc,CAACof,aAAf,GAA+B1sB,OAAO,CAAC0sB,aAAvC;AACApf,IAAAA,cAAc,CAACuY,aAAf,GAA+B7lB,OAAO,CAAC6lB,aAAvC;AACAvY,IAAAA,cAAc,CAAC6Y,WAAf,GAA6BnmB,OAAO,CAACmmB,WAArC,CARK;;AAUL7Y,IAAAA,cAAc,CAAC3Q,IAAf,GAAsBqD,OAAO,CAACrD,IAA9B,CAVK;AAaL;;AACA,QAAMsxD,mBAAmB,GAAGjuD,OAAO,CAACokB,YAApC;AACA9W,IAAAA,cAAc,CAAC8W,YAAf,GACE6pC,mBAAmB,KAAK,IAAxB,GACI,IADJ,GAEI;AACEl6C,MAAAA,KAAK,EAAEk6C,mBAAmB,CAACl6C,KAD7B;AAEEuQ,MAAAA,YAAY,EAAE2pC,mBAAmB,CAAC3pC;AAFpC,KAHN;;AAQA,IAAyB;AACvB;AACA;AACAhX,MAAAA,cAAc,CAAC+2B,gBAAf,GAAkCrkC,OAAO,CAACqkC,gBAA1C;AACA/2B,MAAAA,cAAc,CAAC29B,gBAAf,GAAkCjrC,OAAO,CAACirC,gBAA1C;AACD;AACF;;AAED,SAAO39B,cAAP;AACD;AAED,AAAO,SAAS4gD,mBAAT,CAA6BrxD,GAA7B,EAAkD;AACvD,MAAI+iB,IAAJ;;AACA,MAAI/iB,GAAG,KAAKsS,cAAZ,EAA4B;AAC1ByQ,IAAAA,IAAI,GAAGrC,cAAc,GAAGD,YAAjB,GAAgCD,UAAvC;AACD,GAFD,MAEO,IAAIxgB,GAAG,KAAKqS,YAAZ,EAA0B;AAC/B0Q,IAAAA,IAAI,GAAGtC,YAAY,GAAGD,UAAtB;AACD,GAFM,MAEA;AACLuC,IAAAA,IAAI,GAAGxC,MAAP;AACD;;AAED,MAAIte,CAAuByQ,iBAA3B,EAA8C;AAC5C;AACA;AACA;AACAqQ,IAAAA,IAAI,IAAIpC,WAAR;AACD;;AAED,SAAOwwC,WAAW,CAACr1D,QAAD,EAAW,IAAX,EAAiB,IAAjB,EAAuBinB,IAAvB,CAAlB;AACD;AAED,AAAO,SAASmmB,2BAAT,CACLppC,IADK;AAELzC,GAFK,EAGLgzB,YAHK,EAILntB,KAJK,EAKL6f,IALK,EAML7L,KANK,EAOE;AACP,MAAIo6C,QAAQ,GAAGz1D,sBAAf,CADO;;AAGP,MAAIitC,YAAY,GAAGhpC,IAAnB;;AACA,MAAI,OAAOA,IAAP,KAAgB,UAApB,EAAgC;AAC9B,QAAIsO,iBAAe,CAACtO,IAAD,CAAnB,EAA2B;AACzBwxD,MAAAA,QAAQ,GAAG11D,cAAX;;AACA,MAAa;AACXktC,QAAAA,YAAY,GAAG+C,2BAA2B,CAAC/C,YAAD,CAA1C;AACD;AACF,KALD,MAKO;AACL,MAAa;AACXA,QAAAA,YAAY,GAAGC,8BAA8B,CAACD,YAAD,CAA7C;AACD;AACF;AACF,GAXD,MAWO,IAAI,OAAOhpC,IAAP,KAAgB,QAApB,EAA8B;AACnCwxD,IAAAA,QAAQ,GAAGt1D,aAAX;AACD,GAFM,MAEA;AACLu1D,IAAAA,MAAM,EAAE,QAAQzxD,IAAR;AACN,WAAKnC,mBAAL;AACE,eAAOo2B,uBAAuB,CAAC1D,YAAY,CAACjd,QAAd,EAAwB2P,IAAxB,EAA8B7L,KAA9B,EAAqC7Z,GAArC,CAA9B;;AACF,WAAKqB,6BAAL;AACE4yD,QAAAA,QAAQ,GAAGn1D,IAAX;AACA4mB,QAAAA,IAAI,IAAInC,gBAAR;AACA;;AACF,WAAKhjB,sBAAL;AACE0zD,QAAAA,QAAQ,GAAGn1D,IAAX;AACA4mB,QAAAA,IAAI,IAAIvC,UAAR;AACA;;AACF,WAAK3iB,mBAAL;AACE,eAAO2zD,uBAAuB,CAACnhC,YAAD,EAAetN,IAAf,EAAqB7L,KAArB,EAA4B7Z,GAA5B,CAA9B;;AACF,WAAKY,mBAAL;AACE,eAAOwzD,uBAAuB,CAACphC,YAAD,EAAetN,IAAf,EAAqB7L,KAArB,EAA4B7Z,GAA5B,CAA9B;;AACF,WAAKa,wBAAL;AACE,eAAOwzD,2BAA2B,CAACrhC,YAAD,EAAetN,IAAf,EAAqB7L,KAArB,EAA4B7Z,GAA5B,CAAlC;;AACF,WAAKsB,oBAAL;AACE,eAAOsvC,wBAAwB,CAAC5d,YAAD,EAAetN,IAAf,EAAqB7L,KAArB,EAA4B7Z,GAA5B,CAA/B;;AACF,WAAKuB,wBAAL;AACE,eAAO+yD,2BAA2B,CAACthC,YAAD,EAAetN,IAAf,EAAqB7L,KAArB,EAA4B7Z,GAA5B,CAAlC;;AACF,WAAKmB,gBAAL;AACE;AAGF;;AACA;AAAS;AACP,cAAI,OAAOsB,IAAP,KAAgB,QAAhB,IAA4BA,IAAI,KAAK,IAAzC,EAA+C;AAC7C,oBAAQA,IAAI,CAACG,QAAb;AACE,mBAAKnC,mBAAL;AACEwzD,gBAAAA,QAAQ,GAAGj1D,eAAX;AACA,sBAAMk1D,MAAN;;AACF,mBAAKxzD,kBAAL;AACE;AACAuzD,gBAAAA,QAAQ,GAAGl1D,eAAX;AACA,sBAAMm1D,MAAN;;AACF,mBAAKvzD,sBAAL;AACEszD,gBAAAA,QAAQ,GAAGh1D,UAAX;;AACA,gBAAa;AACXwsC,kBAAAA,YAAY,GAAGgD,gCAAgC,CAAChD,YAAD,CAA/C;AACD;;AACD,sBAAMyoB,MAAN;;AACF,mBAAKpzD,eAAL;AACEmzD,gBAAAA,QAAQ,GAAG70D,aAAX;AACA,sBAAM80D,MAAN;;AACF,mBAAKnzD,eAAL;AACEkzD,gBAAAA,QAAQ,GAAG30D,aAAX;AACAmsC,gBAAAA,YAAY,GAAG,IAAf;AACA,sBAAMyoB,MAAN;;AACF,mBAAKlzD,gBAAL;AACEizD,gBAAAA,QAAQ,GAAGr0D,KAAX;AACA,sBAAMs0D,MAAN;AAvBJ;AAoCD;;AACD,cAAInmD,IAAI,GAAG,EAAX;;AACA,UAAa;AACX,gBACEtL,IAAI,KAAKsM,SAAT,IACC,OAAOtM,IAAP,KAAgB,QAAhB,IACCA,IAAI,KAAK,IADV,IAEC8L,MAAM,CAAC4V,IAAP,CAAY1hB,IAAZ,EAAkB+N,MAAlB,KAA6B,CAJjC,EAKE;AACAzC,cAAAA,IAAI,IACF,+DACA,0DADA,GAEA,gBAHF;AAID;;AACD,gBAAM8gC,SAAS,GAAGhpC,KAAK,GAAGnD,gBAAgB,CAACmD,KAAK,CAACpD,IAAP,CAAnB,GAAkC,IAAzD;;AACA,gBAAIosC,SAAJ,EAAe;AACb9gC,cAAAA,IAAI,IAAI,qCAAqC8gC,SAArC,GAAiD,IAAzD;AACD;AACF;;AAxDM;AAAA;AAAA,8JA8DLpsC,IAAI,IAAI,IAAR,GAAeA,IAAf,GAAsB,OAAOA,IA9DxB,UA+DLsL,IA/DK;AAAA;AAAA;AAiER;AA3FK;AA6FT;;AAED,MAAM5I,KAAK,GAAG2uD,WAAW,CAACG,QAAD,EAAWjhC,YAAX,EAAyBhzB,GAAzB,EAA8B0lB,IAA9B,CAAzB;AACAvgB,EAAAA,KAAK,CAAC2tB,WAAN,GAAoBrwB,IAApB;AACA0C,EAAAA,KAAK,CAAC1C,IAAN,GAAagpC,YAAb;AACAtmC,EAAAA,KAAK,CAAC0U,KAAN,GAAcA,KAAd;;AAEA,EAAa;AACX1U,IAAAA,KAAK,CAACmf,WAAN,GAAoBze,KAApB;AACD;;AAED,SAAOV,KAAP;AACD;AAED,AAAO,SAAS+wB,sBAAT,CACL7kB,OADK,EAELqU,IAFK,EAGL7L,KAHK,EAIE;AACP,MAAIhU,KAAK,GAAG,IAAZ;;AACA,EAAa;AACXA,IAAAA,KAAK,GAAGwL,OAAO,CAACC,MAAhB;AACD;;AACD,MAAM7O,IAAI,GAAG4O,OAAO,CAAC5O,IAArB;AACA,MAAMzC,GAAG,GAAGqR,OAAO,CAACrR,GAApB;AACA,MAAMgzB,YAAY,GAAG3hB,OAAO,CAAClD,KAA7B;AACA,MAAMhJ,KAAK,GAAG0mC,2BAA2B,CACvCppC,IADuC,EAEvCzC,GAFuC,EAGvCgzB,YAHuC,EAIvCntB,KAJuC,EAKvC6f,IALuC,EAMvC7L,KANuC,CAAzC;;AAQA,EAAa;AACX1U,IAAAA,KAAK,CAACof,YAAN,GAAqBlT,OAAO,CAACE,OAA7B;AACApM,IAAAA,KAAK,CAACmf,WAAN,GAAoBjT,OAAO,CAACC,MAA5B;AACD;;AACD,SAAOnM,KAAP;AACD;AAED,AAAO,SAASuxB,uBAAT,CACL69B,QADK,EAEL7uC,IAFK,EAGL7L,KAHK,EAIL7Z,GAJK,EAKE;AACP,MAAMmF,KAAK,GAAG2uD,WAAW,CAACj1D,QAAD,EAAW01D,QAAX,EAAqBv0D,GAArB,EAA0B0lB,IAA1B,CAAzB;AACAvgB,EAAAA,KAAK,CAAC0U,KAAN,GAAcA,KAAd;AACA,SAAO1U,KAAP;AACD;AAED;AA4BA,SAASgvD,uBAAT,CACEnhC,YADF,EAEEtN,IAFF,EAGE7L,KAHF,EAIE7Z,GAJF,EAKS;AACP,EAAa;AACX,QAAI,OAAOgzB,YAAY,CAAC1Q,EAApB,KAA2B,QAA/B,EAAyC;AACvC,YAAc,yCAAd;AACD;AACF;;AAED,MAAMnd,KAAK,GAAG2uD,WAAW,CAAC50D,QAAD,EAAW8zB,YAAX,EAAyBhzB,GAAzB,EAA8B0lB,IAAI,GAAGpC,WAArC,CAAzB,CAPO;;AASPne,EAAAA,KAAK,CAAC2tB,WAAN,GAAoBtyB,mBAApB;AACA2E,EAAAA,KAAK,CAAC1C,IAAN,GAAajC,mBAAb;AACA2E,EAAAA,KAAK,CAAC0U,KAAN,GAAcA,KAAd;;AAEA,EAAyB;AACvB1U,IAAAA,KAAK,CAACc,SAAN,GAAkB;AAChB2mC,MAAAA,cAAc,EAAE,CADA;AAEhBC,MAAAA,qBAAqB,EAAE;AAFP,KAAlB;AAID;;AAED,SAAO1nC,KAAP;AACD;;AAED,AAAO,SAASivD,uBAAT,CACLphC,YADK,EAELtN,IAFK,EAGL7L,KAHK,EAIL7Z,GAJK,EAKL;AACA,MAAMmF,KAAK,GAAG2uD,WAAW,CAAC30D,iBAAD,EAAoB6zB,YAApB,EAAkChzB,GAAlC,EAAuC0lB,IAAvC,CAAzB,CADA;AAIA;AACA;;AACAvgB,EAAAA,KAAK,CAAC1C,IAAN,GAAa7B,mBAAb;AACAuE,EAAAA,KAAK,CAAC2tB,WAAN,GAAoBlyB,mBAApB;AAEAuE,EAAAA,KAAK,CAAC0U,KAAN,GAAcA,KAAd;AACA,SAAO1U,KAAP;AACD;AAED,AAAO,SAASkvD,2BAAT,CACLrhC,YADK,EAELtN,IAFK,EAGL7L,KAHK,EAIL7Z,GAJK,EAKL;AACA,MAAMmF,KAAK,GAAG2uD,WAAW,CAACr0D,qBAAD,EAAwBuzB,YAAxB,EAAsChzB,GAAtC,EAA2C0lB,IAA3C,CAAzB;;AACA,EAAa;AACX;AACA;AACA;AACAvgB,IAAAA,KAAK,CAAC1C,IAAN,GAAa5B,wBAAb;AACD;;AACDsE,EAAAA,KAAK,CAAC2tB,WAAN,GAAoBjyB,wBAApB;AACAsE,EAAAA,KAAK,CAAC0U,KAAN,GAAcA,KAAd;AACA,SAAO1U,KAAP;AACD;AAED,AAAO,SAASyrC,wBAAT,CACL5d,YADK,EAELtN,IAFK,EAGL7L,KAHK,EAIL7Z,GAJK,EAKL;AACA,MAAMmF,KAAK,GAAG2uD,WAAW,CAACj0D,kBAAD,EAAqBmzB,YAArB,EAAmChzB,GAAnC,EAAwC0lB,IAAxC,CAAzB,CADA;AAGA;AACA;;AACA,EAAa;AACXvgB,IAAAA,KAAK,CAAC1C,IAAN,GAAanB,oBAAb;AACD;;AACD6D,EAAAA,KAAK,CAAC2tB,WAAN,GAAoBxxB,oBAApB;AACA6D,EAAAA,KAAK,CAAC0U,KAAN,GAAcA,KAAd;AACA,SAAO1U,KAAP;AACD;AAED,AAAO,SAASmvD,2BAAT,CACLthC,YADK,EAELtN,IAFK,EAGL7L,KAHK,EAIL7Z,GAJK,EAKL;AACA,MAAMmF,KAAK,GAAG2uD,WAAW,CAACh0D,qBAAD,EAAwBkzB,YAAxB,EAAsChzB,GAAtC,EAA2C0lB,IAA3C,CAAzB,CADA;AAGA;AACA;;AACA,EAAa;AACXvgB,IAAAA,KAAK,CAAC1C,IAAN,GAAalB,wBAAb;AACD;;AACD4D,EAAAA,KAAK,CAAC2tB,WAAN,GAAoBvxB,wBAApB;AACA4D,EAAAA,KAAK,CAAC0U,KAAN,GAAcA,KAAd;AACA,SAAO1U,KAAP;AACD;AAED,AAAO,SAAS0wB,mBAAT,CACL2+B,OADK,EAEL9uC,IAFK,EAGL7L,KAHK,EAIE;AACP,MAAM1U,KAAK,GAAG2uD,WAAW,CAACl1D,QAAD,EAAW41D,OAAX,EAAoB,IAApB,EAA0B9uC,IAA1B,CAAzB;AACAvgB,EAAAA,KAAK,CAAC0U,KAAN,GAAcA,KAAd;AACA,SAAO1U,KAAP;AACD;AAED,AAAO,SAAS02B,sCAAT,GAAyD;AAC9D,MAAM12B,KAAK,GAAG2uD,WAAW,CAACn1D,aAAD,EAAgB,IAAhB,EAAsB,IAAtB,EAA4BukB,MAA5B,CAAzB,CAD8D;;AAG9D/d,EAAAA,KAAK,CAAC2tB,WAAN,GAAoB,SAApB;AACA3tB,EAAAA,KAAK,CAAC1C,IAAN,GAAa,SAAb;AACA,SAAO0C,KAAP;AACD;AAED,AAAO,SAASs3B,iCAAT,CACLg4B,cADK,EAEE;AACP,MAAMtvD,KAAK,GAAG2uD,WAAW,CAACt0D,kBAAD,EAAqB,IAArB,EAA2B,IAA3B,EAAiC0jB,MAAjC,CAAzB;AACA/d,EAAAA,KAAK,CAACc,SAAN,GAAkBwuD,cAAlB;AACA,SAAOtvD,KAAP;AACD;AAED,AAAO,SAASoxB,qBAAT,CACLH,MADK,EAEL1Q,IAFK,EAGL7L,KAHK,EAIE;AACP,MAAMmZ,YAAY,GAAGoD,MAAM,CAACrgB,QAAP,KAAoB,IAApB,GAA2BqgB,MAAM,CAACrgB,QAAlC,GAA6C,EAAlE;AACA,MAAM5Q,KAAK,GAAG2uD,WAAW,CAACp1D,UAAD,EAAas0B,YAAb,EAA2BoD,MAAM,CAACp2B,GAAlC,EAAuC0lB,IAAvC,CAAzB;AACAvgB,EAAAA,KAAK,CAAC0U,KAAN,GAAcA,KAAd;AACA1U,EAAAA,KAAK,CAACc,SAAN,GAAkB;AAChBowB,IAAAA,aAAa,EAAED,MAAM,CAACC,aADN;AAEhBuf,IAAAA,eAAe,EAAE,IAFD;AAEO;AACvBtf,IAAAA,cAAc,EAAEF,MAAM,CAACE;AAHP,GAAlB;AAKA,SAAOnxB,KAAP;AACD;;AAGD,AAAO,SAASqpD,0BAAT,CACL7K,MADK,EAEL90C,MAFK,EAGE;AACP,MAAI80C,MAAM,KAAK,IAAf,EAAqB;AACnB;AACA;AACAA,IAAAA,MAAM,GAAGmQ,WAAW,CAACt1D,sBAAD,EAAyB,IAAzB,EAA+B,IAA/B,EAAqC0kB,MAArC,CAApB;AACD,GALM;AAQP;AACA;AACA;AACA;;;AAEAygC,EAAAA,MAAM,CAAChhD,GAAP,GAAakM,MAAM,CAAClM,GAApB;AACAghD,EAAAA,MAAM,CAAC3jD,GAAP,GAAa6O,MAAM,CAAC7O,GAApB;AACA2jD,EAAAA,MAAM,CAAC7wB,WAAP,GAAqBjkB,MAAM,CAACikB,WAA5B;AACA6wB,EAAAA,MAAM,CAAClhD,IAAP,GAAcoM,MAAM,CAACpM,IAArB;AACAkhD,EAAAA,MAAM,CAAC19C,SAAP,GAAmB4I,MAAM,CAAC5I,SAA1B;AACA09C,EAAAA,MAAM,CAACl+C,MAAP,GAAgBoJ,MAAM,CAACpJ,MAAvB;AACAk+C,EAAAA,MAAM,CAACh9C,KAAP,GAAekI,MAAM,CAAClI,KAAtB;AACAg9C,EAAAA,MAAM,CAAC/8C,OAAP,GAAiBiI,MAAM,CAACjI,OAAxB;AACA+8C,EAAAA,MAAM,CAACpxC,KAAP,GAAe1D,MAAM,CAAC0D,KAAtB;AACAoxC,EAAAA,MAAM,CAAC9vB,GAAP,GAAahlB,MAAM,CAACglB,GAApB;AACA8vB,EAAAA,MAAM,CAAC3wB,YAAP,GAAsBnkB,MAAM,CAACmkB,YAA7B;AACA2wB,EAAAA,MAAM,CAACnxB,aAAP,GAAuB3jB,MAAM,CAAC2jB,aAA9B;AACAmxB,EAAAA,MAAM,CAAC13B,WAAP,GAAqBpd,MAAM,CAACod,WAA5B;AACA03B,EAAAA,MAAM,CAACh4B,aAAP,GAAuB9c,MAAM,CAAC8c,aAA9B;AACAg4B,EAAAA,MAAM,CAACz5B,YAAP,GAAsBrb,MAAM,CAACqb,YAA7B;AACAy5B,EAAAA,MAAM,CAACj+B,IAAP,GAAc7W,MAAM,CAAC6W,IAArB;AACAi+B,EAAAA,MAAM,CAACn+C,KAAP,GAAeqJ,MAAM,CAACrJ,KAAtB;AACAm+C,EAAAA,MAAM,CAAChvB,UAAP,GAAoB9lB,MAAM,CAAC8lB,UAA3B;AACAgvB,EAAAA,MAAM,CAAC/uB,WAAP,GAAqB/lB,MAAM,CAAC+lB,WAA5B;AACA+uB,EAAAA,MAAM,CAACjvB,UAAP,GAAoB7lB,MAAM,CAAC6lB,UAA3B;AACAivB,EAAAA,MAAM,CAAC9pC,KAAP,GAAehL,MAAM,CAACgL,KAAtB;AACA8pC,EAAAA,MAAM,CAAC75B,UAAP,GAAoBjb,MAAM,CAACib,UAA3B;AACA65B,EAAAA,MAAM,CAACr+C,SAAP,GAAmBuJ,MAAM,CAACvJ,SAA1B;;AACA,EAAyB;AACvBq+C,IAAAA,MAAM,CAACzZ,cAAP,GAAwBr7B,MAAM,CAACq7B,cAA/B;AACAyZ,IAAAA,MAAM,CAAC9Z,eAAP,GAAyBh7B,MAAM,CAACg7B,eAAhC;AACA8Z,IAAAA,MAAM,CAACxZ,gBAAP,GAA0Bt7B,MAAM,CAACs7B,gBAAjC;AACAwZ,IAAAA,MAAM,CAAC5S,gBAAP,GAA0BliC,MAAM,CAACkiC,gBAAjC;AACD;;AACD4S,EAAAA,MAAM,CAAC5U,QAAP,GAAkBlgC,MAAM,CAACkgC,QAAzB;AACA4U,EAAAA,MAAM,CAACp/B,YAAP,GAAsB1V,MAAM,CAAC0V,YAA7B;AACAo/B,EAAAA,MAAM,CAACr/B,WAAP,GAAqBzV,MAAM,CAACyV,WAA5B;AACAq/B,EAAAA,MAAM,CAACrP,kBAAP,GAA4BzlC,MAAM,CAACylC,kBAAnC;AACAqP,EAAAA,MAAM,CAAC5jB,eAAP,GAAyBlxB,MAAM,CAACkxB,eAAhC;AACA,SAAO4jB,MAAP;AACD;;AC9yBD,SAAS+Q,aAAT,CAAuBr+B,aAAvB,EAAsC1zB,GAAtC,EAA2CmrC,OAA3C,EAAoD;AAClD,OAAKnrC,GAAL,GAAWA,GAAX;AACA,OAAK0zB,aAAL,GAAqBA,aAArB;AACA,OAAKuf,eAAL,GAAuB,IAAvB;AACA,OAAK9vC,OAAL,GAAe,IAAf;AACA,OAAKmzC,SAAL,GAAiB,IAAjB;AACA,OAAKjrB,YAAL,GAAoB,IAApB;AACA,OAAKg8B,aAAL,GAAqB5hD,SAArB;AACA,OAAKvF,OAAL,GAAe,IAAf;AACA,OAAK8qC,cAAL,GAAsB,IAAtB;AACA,OAAKG,OAAL,GAAeA,OAAf;AACA,OAAK3sB,YAAL,GAAoB,IAApB;AACA,OAAK4nC,gBAAL,GAAwB9wC,cAAxB;AACA,OAAKgE,UAAL,GAAkB+B,aAAa,CAAC7F,OAAD,CAA/B;AACA,OAAKqE,eAAL,GAAuBwB,aAAa,CAAC1E,WAAD,CAApC;AAEA,OAAK0B,YAAL,GAAoB7C,OAApB;AACA,OAAKiD,cAAL,GAAsBjD,OAAtB;AACA,OAAKkD,WAAL,GAAmBlD,OAAnB;AACA,OAAKgD,YAAL,GAAoBhD,OAApB;AACA,OAAK0G,gBAAL,GAAwB1G,OAAxB;AACA,OAAKwxC,aAAL,GAAqBxxC,OAArB;AAEA,OAAKyD,cAAL,GAAsBzD,OAAtB;AACA,OAAK0D,aAAL,GAAqBmC,aAAa,CAAC7F,OAAD,CAAlC;;AAEA,MAAIzP,iBAAJ,EAAuB;AACrB,SAAKqlC,+BAAL,GAAuC,IAAvC;AACD;;AAED,EAA4B;AAC1B,SAAKwhB,mBAAL,GAA2BoF,4BAAoB,EAA/C;AACA,SAAK9W,oBAAL,GAA4B,IAAIt3B,GAAJ,EAA5B;AACA,SAAKkpC,qBAAL,GAA6B,IAAIlgD,GAAJ,EAA7B;AACD;;AAKD,EAAa;AACX,YAAQ5M,GAAR;AACE,WAAKqS,YAAL;AACE,aAAK4/C,cAAL,GAAsB,sBAAtB;AACA;;AACF,WAAK3/C,cAAL;AACE,aAAK2/C,cAAL,GAAsB,cAAtB;AACA;;AACF,WAAK7/C,UAAL;AACE,aAAK6/C,cAAL,GAAsB,oBAAtB;AACA;AATJ;AAWD;AACF;;AAED,AAAO,SAASC,eAAT,CACLx+B,aADK,EAEL1zB,GAFK,EAGLmrC,OAHK,EAILgnB,kBAJK,EAKM;AACX,MAAMh/C,IAAe,GAAI,IAAI4+C,aAAJ,CAAkBr+B,aAAlB,EAAiC1zB,GAAjC,EAAsCmrC,OAAtC,CAAzB;AAMA;;;AACA,MAAMinB,kBAAkB,GAAGf,mBAAmB,CAACrxD,GAAD,CAA9C;AACAmT,EAAAA,IAAI,CAAChQ,OAAL,GAAeivD,kBAAf;AACAA,EAAAA,kBAAkB,CAAC9uD,SAAnB,GAA+B6P,IAA/B;AAEA2V,EAAAA,qBAAqB,CAACspC,kBAAD,CAArB;AAEA,SAAOj/C,IAAP;AACD;;ACZD;AACA;AACA;;AACA,AAAO,SAASk/C,iCAAT,CACLl/C,IADK,EAEL0nB,aAFK,EAGC;AACN,MAAMkF,UAAU,GAAGlF,aAAa,CAACmF,WAAjC;AACA,MAAM7E,OAAO,GAAG4E,UAAU,CAAClF,aAAa,CAACjsB,OAAf,CAA1B,CAFM;AAKN;;AACA,MAAIuE,IAAI,CAACi4B,+BAAL,IAAwC,IAA5C,EAAkD;AAChDj4B,IAAAA,IAAI,CAACi4B,+BAAL,GAAuC,CAACvQ,aAAD,EAAgBM,OAAhB,CAAvC;AACD,GAFD,MAEO;AACLhoB,IAAAA,IAAI,CAACi4B,+BAAL,CAAqCn7B,IAArC,CAA0C4qB,aAA1C,EAAyDM,OAAzD;AACD;AACF;;AC9FM,SAASm3B,YAAT,CACLl/C,QADK,EAELsgB,aAFK;AAILC,cAJK,EAMQ;AAAA,MADbt2B,GACa,uEADE,IACF;AACb,SAAO;AACL;AACA4C,IAAAA,QAAQ,EAAEvC,iBAFL;AAGLL,IAAAA,GAAG,EAAEA,GAAG,IAAI,IAAP,GAAc,IAAd,GAAqB,KAAKA,GAH1B;AAIL+V,IAAAA,QAAQ,EAARA,QAJK;AAKLsgB,IAAAA,aAAa,EAAbA,aALK;AAMLC,IAAAA,cAAc,EAAdA;AANK,GAAP;AAQD;;ACgGD,IAAI4+B,yBAAJ;AACA,IAAIC,gCAAJ;;AAEA,AAAa;AACXD,EAAAA,yBAAyB,GAAG,KAA5B;AACAC,EAAAA,gCAAgC,GAAG,EAAnC;AACD;;AAED,SAASC,oBAAT,CACEC,eADF,EAEU;AACR,MAAI,CAACA,eAAL,EAAsB;AACpB,WAAOviD,kBAAP;AACD;;AAED,MAAM3N,KAAK,GAAGgB,GAAW,CAACkvD,eAAD,CAAzB;AACA,MAAMhhD,aAAa,GAAGS,0BAA0B,CAAC3P,KAAD,CAAhD;;AAEA,MAAIA,KAAK,CAACxC,GAAN,KAAcpE,cAAlB,EAAkC;AAChC,QAAMyS,SAAS,GAAG7L,KAAK,CAAC1C,IAAxB;;AACA,QAAI4qC,iBAAuB,CAACr8B,SAAD,CAA3B,EAAwC;AACtC,aAAOoD,mBAAmB,CAACjP,KAAD,EAAQ6L,SAAR,EAAmBqD,aAAnB,CAA1B;AACD;AACF;;AAED,SAAOA,aAAP;AACD;;AAED,SAASihD,gBAAT,CAA0B1vD,SAA1B,EAAoE;AAClE,MAAMT,KAAK,GAAGgB,GAAW,CAACP,SAAD,CAAzB;;AACA,MAAIT,KAAK,KAAK4J,SAAd,EAAyB;AACvB,QAAI,OAAOnJ,SAAS,CAAC5C,MAAjB,KAA4B,UAAhC,EAA4C;AAAA;AAAA;AAAA;AAAA;AAAA;AAE3C,KAFD,MAEO;AAAA;AAAA;AAAA,+EAIHuL,MAAM,CAAC4V,IAAP,CAAYve,SAAZ,CAJG;AAAA;AAAA;AAMN;AACF;;AACD,MAAM2vD,SAAS,GAAGzuD,oBAAoB,CAAC3B,KAAD,CAAtC;;AACA,MAAIowD,SAAS,KAAK,IAAlB,EAAwB;AACtB,WAAO,IAAP;AACD;;AACD,SAAOA,SAAS,CAACtvD,SAAjB;AACD;;AAED,SAASuvD,2BAAT,CACE5vD,SADF,EAEE6vD,UAFF,EAGyB;AACvB,EAAa;AACX,QAAMtwD,KAAK,GAAGgB,GAAW,CAACP,SAAD,CAAzB;;AACA,QAAIT,KAAK,KAAK4J,SAAd,EAAyB;AACvB,UAAI,OAAOnJ,SAAS,CAAC5C,MAAjB,KAA4B,UAAhC,EAA4C;AAAA;AAAA;AAAA;AAAA;AAAA;AAE3C,OAFD,MAEO;AAAA;AAAA;AAAA,iFAIHuL,MAAM,CAAC4V,IAAP,CAAYve,SAAZ,CAJG;AAAA;AAAA;AAMN;AACF;;AACD,QAAM2vD,SAAS,GAAGzuD,oBAAoB,CAAC3B,KAAD,CAAtC;;AACA,QAAIowD,SAAS,KAAK,IAAlB,EAAwB;AACtB,aAAO,IAAP;AACD;;AACD,QAAIA,SAAS,CAAC7vC,IAAV,GAAiBvC,UAArB,EAAiC;AAC/B,UAAMtR,aAAa,GAAGnP,gBAAgB,CAACyC,KAAK,CAAC1C,IAAP,CAAhB,IAAgC,WAAtD;;AACA,UAAI,CAAC0yD,gCAAgC,CAACtjD,aAAD,CAArC,EAAsD;AACpDsjD,QAAAA,gCAAgC,CAACtjD,aAAD,CAAhC,GAAkD,IAAlD;AAEA,YAAMs8C,aAAa,GAAGC,OAAtB;;AACA,YAAI;AACFrmC,UAAAA,eAAyB,CAACwtC,SAAD,CAAzB;;AACA,cAAIpwD,KAAK,CAACugB,IAAN,GAAavC,UAAjB,EAA6B;AAC3B,kBACE,qCACE,8DADF,GAEE,oEAFF,GAGE,2CAHF,GAIE,gDALJ,EAMEsyC,UANF,EAOEA,UAPF,EAQE5jD,aARF;AAUD,WAXD,MAWO;AACL,kBACE,qCACE,qEADF,GAEE,oEAFF,GAGE,2CAHF,GAIE,gDALJ,EAME4jD,UANF,EAOEA,UAPF,EAQE5jD,aARF;AAUD;AACF,SAzBD,SAyBU;AACR;AACA;AACA,cAAIs8C,aAAJ,EAAmB;AACjBpmC,YAAAA,eAAyB,CAAComC,aAAD,CAAzB;AACD,WAFD,MAEO;AACLnmC,YAAAA,iBAA2B;AAC5B;AACF;AACF;AACF;;AACD,WAAOutC,SAAS,CAACtvD,SAAjB;AACD;AAEF;;AAED,AAAO,SAASyvD,eAAT,CACLr/B,aADK,EAEL1zB,GAFK,EAGLmrC,OAHK,EAILgnB,kBAJK,EAKO;AACZ,SAAOD,eAAe,CAACx+B,aAAD,EAAgB1zB,GAAhB,EAAqBmrC,OAArB,AAAA,CAAtB;AACD;AAED,AAAO,SAAS4kB,eAAT,CACLrhD,OADK,EAELqkC,SAFK,EAGL2f,eAHK,EAILv0C,QAJK,EAKC;AACN,EAAa;AACXjL,IAAAA,cAAc,CAAC6/B,SAAD,EAAYrkC,OAAZ,CAAd;AACD;;AACD,MAAMvL,SAAO,GAAG4vC,SAAS,CAAC5vC,OAA1B;AACA,MAAMqW,SAAS,GAAGsT,gBAAgB,EAAlC;;AACA,EAAa;AACX;AACA,QAAI,gBAAgB,OAAO6V,IAA3B,EAAiC;AAC/B+pB,MAAAA,uBAAuB,CAACvpD,SAAD,CAAvB;AACAwiC,MAAAA,8BAA8B,CAACxiC,SAAD,CAA9B;AACD;AACF;;AACD,MAAMiW,IAAI,GAAG2T,iBAAiB,CAAC5pB,SAAD,CAA9B;;AAEA,EAA8B;AAC5Bid,IAAAA,mBAAmB,CAAChH,IAAD,CAAnB;AACD;;AAED,MAAMlZ,OAAO,GAAGuyD,oBAAoB,CAACC,eAAD,CAApC;;AACA,MAAI3f,SAAS,CAAC7yC,OAAV,KAAsB,IAA1B,EAAgC;AAC9B6yC,IAAAA,SAAS,CAAC7yC,OAAV,GAAoBA,OAApB;AACD,GAFD,MAEO;AACL6yC,IAAAA,SAAS,CAAC/H,cAAV,GAA2B9qC,OAA3B;AACD;;AAED,EAAa;AACX,QACE8yD,WAA4B,IAC5BvH,OAAwB,KAAK,IAD7B,IAEA,CAAC8G,yBAHH,EAIE;AACAA,MAAAA,yBAAyB,GAAG,IAA5B;;AACA,YACE,kEACE,kEADF,GAEE,iEAFF,GAGE,gCAJJ,EAKExyD,gBAAgB,CAAC0rD,OAAwB,CAAC3rD,IAA1B,CAAhB,IAAmD,SALrD;AAOD;AACF;;AAED,MAAM6nB,MAAM,GAAGC,YAAY,CAACpO,SAAD,EAAYJ,IAAZ,CAA3B,CA3CM;AA6CN;;AACAuO,EAAAA,MAAM,CAACnnB,OAAP,GAAiB;AAACkO,IAAAA,OAAO,EAAPA;AAAD,GAAjB;AAEAyP,EAAAA,QAAQ,GAAGA,QAAQ,KAAK/R,SAAb,GAAyB,IAAzB,GAAgC+R,QAA3C;;AACA,MAAIA,QAAQ,KAAK,IAAjB,EAAuB;AACrB,IAAa;AACX,UAAI,OAAOA,QAAP,KAAoB,UAAxB,EAAoC;AAClC,cACE,yEACE,iCAFJ,EAGEA,QAHF;AAKD;AACF;;AACDwJ,IAAAA,MAAM,CAACxJ,QAAP,GAAkBA,QAAlB;AACD;;AAED2J,EAAAA,aAAa,CAAC3kB,SAAD,EAAUwkB,MAAV,CAAb;AACAqF,EAAAA,qBAAqB,CAAC7pB,SAAD,EAAUiW,IAAV,EAAgBI,SAAhB,CAArB;AAEA,SAAOJ,IAAP;AACD;AAED,AAcO,SAAS65C,qBAAT,CACLlgB,SADK,EAE8C;AACnD,MAAMmgB,cAAc,GAAGngB,SAAS,CAAC5vC,OAAjC;;AACA,MAAI,CAAC+vD,cAAc,CAAClvD,KAApB,EAA2B;AACzB,WAAO,IAAP;AACD;;AACD,UAAQkvD,cAAc,CAAClvD,KAAf,CAAqBhE,GAA7B;AACE,SAAKhE,aAAL;AACE,aAAO2I,iBAAiB,CAACuuD,cAAc,CAAClvD,KAAf,CAAqBV,SAAtB,CAAxB;;AACF;AACE,aAAO4vD,cAAc,CAAClvD,KAAf,CAAqBV,SAA5B;AAJJ;AAMD;AAED,AAAO,SAAS6vD,2BAAT,CAAqC3wD,KAArC,EAAyD;AAC9D,UAAQA,KAAK,CAACxC,GAAd;AACE,SAAKlE,QAAL;AACE,UAAMqX,IAAe,GAAG3Q,KAAK,CAACc,SAA9B;;AACA,UAAI6P,IAAI,CAACg4B,OAAT,EAAkB;AAChB;AACA,YAAMj0B,KAAK,GAAG6C,8BAA8B,CAAC5G,IAAD,CAA5C;AACAu0C,QAAAA,SAAS,CAACv0C,IAAD,EAAO+D,KAAP,CAAT;AACD;;AACD;;AACF,SAAK1a,iBAAL;AACE,UAAMgd,SAAS,GAAGsT,gBAAgB,EAAlC;AACAs7B,MAAAA,SAAS,CAAC;AAAA,eAAMp7B,qBAAqB,CAACxqB,KAAD,EAAQkT,QAAR,EAAkB8D,SAAlB,CAA3B;AAAA,OAAD,CAAT,CAFF;AAIE;AACA;;AACA,UAAMogB,SAAS,GAAGhkB,0BAAlB;AACAw9C,MAAAA,0BAA0B,CAAC5wD,KAAD,EAAQo3B,SAAR,CAA1B;AACA;AAjBJ;AAmBD;;AAED,SAASy5B,iBAAT,CAA2B7wD,KAA3B,EAAyCo3B,SAAzC,EAA0D;AACxD,MAAMD,aAAmC,GAAGn3B,KAAK,CAACwmB,aAAlD;;AACA,MAAI2Q,aAAa,KAAK,IAAlB,IAA0BA,aAAa,CAAC5B,UAAd,KAA6B,IAA3D,EAAiE;AAC/D4B,IAAAA,aAAa,CAACC,SAAd,GAA0Bxe,kBAAkB,CAC1Cue,aAAa,CAACC,SAD4B,EAE1CA,SAF0C,CAA5C;AAID;AACF;;;AAGD,SAASw5B,0BAAT,CAAoC5wD,KAApC,EAAkDo3B,SAAlD,EAAmE;AACjEy5B,EAAAA,iBAAiB,CAAC7wD,KAAD,EAAQo3B,SAAR,CAAjB;AACA,MAAMj3B,SAAS,GAAGH,KAAK,CAACG,SAAxB;;AACA,MAAIA,SAAJ,EAAe;AACb0wD,IAAAA,iBAAiB,CAAC1wD,SAAD,EAAYi3B,SAAZ,CAAjB;AACD;AACF;;AAED,AAAO,SAAS05B,4BAAT,CAAsC9wD,KAAtC,EAA0D;AAC/D,MAAIA,KAAK,CAACxC,GAAN,KAAcxD,iBAAlB,EAAqC;AACnC;AACA;AACA;AACA;AACA;AACD;;AACD,MAAMgd,SAAS,GAAGsT,gBAAgB,EAAlC;AACA,MAAM1T,IAAI,GAAGxD,0BAAb;AACAoX,EAAAA,qBAAqB,CAACxqB,KAAD,EAAQ4W,IAAR,EAAcI,SAAd,CAArB;AACA45C,EAAAA,0BAA0B,CAAC5wD,KAAD,EAAQ4W,IAAR,CAA1B;AACD;AAED,AAAO,SAASm6C,0BAAT,CAAoC/wD,KAApC,EAAwD;AAC7D,MAAIA,KAAK,CAACxC,GAAN,KAAcxD,iBAAlB,EAAqC;AACnC;AACA;AACA;AACA;AACA;AACD;;AACD,MAAMgd,SAAS,GAAGsT,gBAAgB,EAAlC;AACA,MAAM1T,IAAI,GAAG9C,sBAAb;AACA0W,EAAAA,qBAAqB,CAACxqB,KAAD,EAAQ4W,IAAR,EAAcI,SAAd,CAArB;AACA45C,EAAAA,0BAA0B,CAAC5wD,KAAD,EAAQ4W,IAAR,CAA1B;AACD;AAED,AAAO,SAASo6C,iCAAT,CAA2ChxD,KAA3C,EAA+D;AACpE,MAAIA,KAAK,CAACxC,GAAN,KAAcxD,iBAAlB,EAAqC;AACnC;AACA;AACA;AACD;;AACD,MAAMgd,SAAS,GAAGsT,gBAAgB,EAAlC;AACA,MAAM1T,IAAI,GAAG2T,iBAAiB,CAACvqB,KAAD,CAA9B;AACAwqB,EAAAA,qBAAqB,CAACxqB,KAAD,EAAQ4W,IAAR,EAAcI,SAAd,CAArB;AACA45C,EAAAA,0BAA0B,CAAC5wD,KAAD,EAAQ4W,IAAR,CAA1B;AACD;AAED,AAAO,SAAS6E,iBAAT,CAA4BtE,QAA5B,EAAoD7M,EAApD,EAAiE;AACtE,MAAM2mD,gBAAgB,GAAG58C,4BAA4B,EAArD;;AACA,MAAI;AACFC,IAAAA,4BAA4B,CAAC6C,QAAD,CAA5B;AACA,WAAO7M,EAAE,EAAT;AACD,GAHD,SAGU;AACRgK,IAAAA,4BAA4B,CAAC28C,gBAAD,CAA5B;AACD;AACF;AAED,AAMO,SAASC,6BAAT,CACLlxD,KADK,EAEkB;AACvB,MAAMowD,SAAS,GAAGtuD,iCAAiC,CAAC9B,KAAD,CAAnD;;AACA,MAAIowD,SAAS,KAAK,IAAlB,EAAwB;AACtB,WAAO,IAAP;AACD;;AACD,MAAIA,SAAS,CAAC5yD,GAAV,KAAkBjD,oBAAtB,EAA4C;AAC1C,WAAO61D,SAAS,CAACtvD,SAAV,CAAoBD,QAA3B;AACD;;AACD,SAAOuvD,SAAS,CAACtvD,SAAjB;AACD;;AAED,IAAIqwD,iBAAiB,GAAG,UAAAnxD,KAAK;AAAA,SAAI,KAAJ;AAAA,CAA7B;;AAEA,AAAO,SAASwqC,aAAT,CAAuBxqC,KAAvB,EAA8C;AACnD,SAAOmxD,iBAAiB,CAACnxD,KAAD,CAAxB;AACD;AAED,IAAIoxD,iBAAiB,GAAG,IAAxB;AACA,IAAIC,2BAA2B,GAAG,IAAlC;AACA,IAAIC,2BAA2B,GAAG,IAAlC;AACA,IAAIC,aAAa,GAAG,IAApB;AACA,IAAIC,uBAAuB,GAAG,IAA9B;AACA,IAAIC,uBAAuB,GAAG,IAA9B;AACA,IAAIC,cAAc,GAAG,IAArB;AACA,IAAIC,kBAAkB,GAAG,IAAzB;;AAEA,AAAa;AACX,MAAMC,kBAAkB,GAAG,UACzBC,GADyB,EAEzBC,IAFyB,EAGzB1kD,KAHyB,EAItB;AACH,QAAMvS,GAAG,GAAGi3D,IAAI,CAAC1kD,KAAD,CAAhB;AACA,QAAM2kD,OAAO,GAAG7oC,KAAK,CAACD,OAAN,CAAc4oC,GAAd,IAAqBA,GAAG,CAACz1C,KAAJ,EAArB,eAAuCy1C,GAAvC,CAAhB;;AACA,QAAIzkD,KAAK,GAAG,CAAR,KAAc0kD,IAAI,CAACzmD,MAAvB,EAA+B;AAC7B,UAAI6d,KAAK,CAACD,OAAN,CAAc8oC,OAAd,CAAJ,EAA4B;AAC1BA,QAAAA,OAAO,CAAChU,MAAR,CAAiBljD,GAAjB,EAAqC,CAArC;AACD,OAFD,MAEO;AACL,eAAOk3D,OAAO,CAACl3D,GAAD,CAAd;AACD;;AACD,aAAOk3D,OAAP;AACD,KAVE;;;AAYHA,IAAAA,OAAO,CAACl3D,GAAD,CAAP,GAAe+2D,kBAAkB,CAACC,GAAG,CAACh3D,GAAD,CAAJ,EAAWi3D,IAAX,EAAiB1kD,KAAK,GAAG,CAAzB,CAAjC;AACA,WAAO2kD,OAAP;AACD,GAlBD;;AAoBA,MAAMC,cAAc,GAAG,UACrBH,GADqB,EAErBC,IAFqB,EAGG;AACxB,WAAOF,kBAAkB,CAACC,GAAD,EAAMC,IAAN,EAAY,CAAZ,CAAzB;AACD,GALD;;AAOA,MAAMG,kBAAkB,GAAG,UACzBJ,GADyB,EAEzBK,OAFyB,EAGzBC,OAHyB,EAIzB/kD,KAJyB,EAKtB;AACH,QAAMglD,MAAM,GAAGF,OAAO,CAAC9kD,KAAD,CAAtB;AACA,QAAM2kD,OAAO,GAAG7oC,KAAK,CAACD,OAAN,CAAc4oC,GAAd,IAAqBA,GAAG,CAACz1C,KAAJ,EAArB,eAAuCy1C,GAAvC,CAAhB;;AACA,QAAIzkD,KAAK,GAAG,CAAR,KAAc8kD,OAAO,CAAC7mD,MAA1B,EAAkC;AAChC,UAAMgnD,MAAM,GAAGF,OAAO,CAAC/kD,KAAD,CAAtB,CADgC;;AAGhC2kD,MAAAA,OAAO,CAACM,MAAD,CAAP,GAAkBN,OAAO,CAACK,MAAD,CAAzB;;AACA,UAAIlpC,KAAK,CAACD,OAAN,CAAc8oC,OAAd,CAAJ,EAA4B;AAC1BA,QAAAA,OAAO,CAAChU,MAAR,CAAiBqU,MAAjB,EAAwC,CAAxC;AACD,OAFD,MAEO;AACL,eAAOL,OAAO,CAACK,MAAD,CAAd;AACD;AACF,KATD,MASO;AACL;AACAL,MAAAA,OAAO,CAACK,MAAD,CAAP,GAAkBH,kBAAkB;AAElCJ,MAAAA,GAAG,CAACO,MAAD,CAF+B,EAGlCF,OAHkC,EAIlCC,OAJkC,EAKlC/kD,KAAK,GAAG,CAL0B,CAApC;AAOD;;AACD,WAAO2kD,OAAP;AACD,GA5BD;;AA8BA,MAAMO,cAAc,GAAG,UACrBT,GADqB,EAErBK,OAFqB,EAGrBC,OAHqB,EAIG;AACxB,QAAID,OAAO,CAAC7mD,MAAR,KAAmB8mD,OAAO,CAAC9mD,MAA/B,EAAuC;AACrC,WAAa,mDAAb;;AACA;AACD,KAHD,MAGO;AACL,WAAK,IAAI2N,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGm5C,OAAO,CAAC9mD,MAAR,GAAiB,CAArC,EAAwC2N,CAAC,EAAzC,EAA6C;AAC3C,YAAIk5C,OAAO,CAACl5C,CAAD,CAAP,KAAem5C,OAAO,CAACn5C,CAAD,CAA1B,EAA+B;AAC7B,eACE,0EADF;;AAGA;AACD;AACF;AACF;;AACD,WAAOi5C,kBAAkB,CAACJ,GAAD,EAAMK,OAAN,EAAeC,OAAf,EAAwB,CAAxB,CAAzB;AACD,GAnBD;;AAqBA,MAAMI,eAAe,GAAG,UACtBV,GADsB,EAEtBC,IAFsB,EAGtB1kD,KAHsB,EAItBpS,KAJsB,EAKnB;AACH,QAAIoS,KAAK,IAAI0kD,IAAI,CAACzmD,MAAlB,EAA0B;AACxB,aAAOrQ,KAAP;AACD;;AACD,QAAMH,GAAG,GAAGi3D,IAAI,CAAC1kD,KAAD,CAAhB;AACA,QAAM2kD,OAAO,GAAG7oC,KAAK,CAACD,OAAN,CAAc4oC,GAAd,IAAqBA,GAAG,CAACz1C,KAAJ,EAArB,eAAuCy1C,GAAvC,CAAhB,CALG;;AAOHE,IAAAA,OAAO,CAACl3D,GAAD,CAAP,GAAe03D,eAAe,CAACV,GAAG,CAACh3D,GAAD,CAAJ,EAAWi3D,IAAX,EAAiB1kD,KAAK,GAAG,CAAzB,EAA4BpS,KAA5B,CAA9B;AACA,WAAO+2D,OAAP;AACD,GAdD;;AAgBA,MAAMS,WAAW,GAAG,UAClBX,GADkB,EAElBC,IAFkB,EAGlB92D,KAHkB,EAIM;AACxB,WAAOu3D,eAAe,CAACV,GAAD,EAAMC,IAAN,EAAY,CAAZ,EAAe92D,KAAf,CAAtB;AACD,GAND;;AAQA,MAAMy3D,QAAQ,GAAG,UAACzyD,KAAD,EAAemd,EAAf,EAA8B;AAC7C;AACA;AACA,QAAI8b,WAAW,GAAGj5B,KAAK,CAACwmB,aAAxB;;AACA,WAAOyS,WAAW,KAAK,IAAhB,IAAwB9b,EAAE,GAAG,CAApC,EAAuC;AACrC8b,MAAAA,WAAW,GAAGA,WAAW,CAAC1T,IAA1B;AACApI,MAAAA,EAAE;AACH;;AACD,WAAO8b,WAAP;AACD,GATD,CAvGW;;;AAmHXm4B,EAAAA,iBAAiB,GAAG,UAClBpxD,KADkB,EAElBmd,EAFkB,EAGlB20C,IAHkB,EAIlB92D,KAJkB,EAKf;AACH,QAAMsV,IAAI,GAAGmiD,QAAQ,CAACzyD,KAAD,EAAQmd,EAAR,CAArB;;AACA,QAAI7M,IAAI,KAAK,IAAb,EAAmB;AACjB,UAAM4X,QAAQ,GAAGsqC,WAAW,CAACliD,IAAI,CAACkW,aAAN,EAAqBsrC,IAArB,EAA2B92D,KAA3B,CAA5B;AACAsV,MAAAA,IAAI,CAACkW,aAAL,GAAqB0B,QAArB;AACA5X,MAAAA,IAAI,CAACiW,SAAL,GAAiB2B,QAAjB,CAHiB;AAMjB;AACA;AACA;AACA;;AACAloB,MAAAA,KAAK,CAACqtB,aAAN,eAA0BrtB,KAAK,CAACqtB,aAAhC;AAEA7C,MAAAA,qBAAqB,CAACxqB,KAAD,EAAQkT,QAAR,EAAkBiB,WAAlB,CAArB;AACD;AACF,GArBD;;AAsBAk9C,EAAAA,2BAA2B,GAAG,UAC5BrxD,KAD4B,EAE5Bmd,EAF4B,EAG5B20C,IAH4B,EAIzB;AACH,QAAMxhD,IAAI,GAAGmiD,QAAQ,CAACzyD,KAAD,EAAQmd,EAAR,CAArB;;AACA,QAAI7M,IAAI,KAAK,IAAb,EAAmB;AACjB,UAAM4X,QAAQ,GAAG8pC,cAAc,CAAC1hD,IAAI,CAACkW,aAAN,EAAqBsrC,IAArB,CAA/B;AACAxhD,MAAAA,IAAI,CAACkW,aAAL,GAAqB0B,QAArB;AACA5X,MAAAA,IAAI,CAACiW,SAAL,GAAiB2B,QAAjB,CAHiB;AAMjB;AACA;AACA;AACA;;AACAloB,MAAAA,KAAK,CAACqtB,aAAN,eAA0BrtB,KAAK,CAACqtB,aAAhC;AAEA7C,MAAAA,qBAAqB,CAACxqB,KAAD,EAAQkT,QAAR,EAAkBiB,WAAlB,CAArB;AACD;AACF,GApBD;;AAqBAm9C,EAAAA,2BAA2B,GAAG,UAC5BtxD,KAD4B,EAE5Bmd,EAF4B,EAG5B+0C,OAH4B,EAI5BC,OAJ4B,EAKzB;AACH,QAAM7hD,IAAI,GAAGmiD,QAAQ,CAACzyD,KAAD,EAAQmd,EAAR,CAArB;;AACA,QAAI7M,IAAI,KAAK,IAAb,EAAmB;AACjB,UAAM4X,QAAQ,GAAGoqC,cAAc,CAAChiD,IAAI,CAACkW,aAAN,EAAqB0rC,OAArB,EAA8BC,OAA9B,CAA/B;AACA7hD,MAAAA,IAAI,CAACkW,aAAL,GAAqB0B,QAArB;AACA5X,MAAAA,IAAI,CAACiW,SAAL,GAAiB2B,QAAjB,CAHiB;AAMjB;AACA;AACA;AACA;;AACAloB,MAAAA,KAAK,CAACqtB,aAAN,eAA0BrtB,KAAK,CAACqtB,aAAhC;AAEA7C,MAAAA,qBAAqB,CAACxqB,KAAD,EAAQkT,QAAR,EAAkBiB,WAAlB,CAArB;AACD;AACF,GArBD,CA9JW;;;AAsLXo9C,EAAAA,aAAa,GAAG,UAACvxD,KAAD,EAAe8xD,IAAf,EAA6C92D,KAA7C,EAA4D;AAC1EgF,IAAAA,KAAK,CAAC6tB,YAAN,GAAqB2kC,WAAW,CAACxyD,KAAK,CAACqtB,aAAP,EAAsBykC,IAAtB,EAA4B92D,KAA5B,CAAhC;;AACA,QAAIgF,KAAK,CAACG,SAAV,EAAqB;AACnBH,MAAAA,KAAK,CAACG,SAAN,CAAgB0tB,YAAhB,GAA+B7tB,KAAK,CAAC6tB,YAArC;AACD;;AACDrD,IAAAA,qBAAqB,CAACxqB,KAAD,EAAQkT,QAAR,EAAkBiB,WAAlB,CAArB;AACD,GAND;;AAOAq9C,EAAAA,uBAAuB,GAAG,UAACxxD,KAAD,EAAe8xD,IAAf,EAAgD;AACxE9xD,IAAAA,KAAK,CAAC6tB,YAAN,GAAqBmkC,cAAc,CAAChyD,KAAK,CAACqtB,aAAP,EAAsBykC,IAAtB,CAAnC;;AACA,QAAI9xD,KAAK,CAACG,SAAV,EAAqB;AACnBH,MAAAA,KAAK,CAACG,SAAN,CAAgB0tB,YAAhB,GAA+B7tB,KAAK,CAAC6tB,YAArC;AACD;;AACDrD,IAAAA,qBAAqB,CAACxqB,KAAD,EAAQkT,QAAR,EAAkBiB,WAAlB,CAArB;AACD,GAND;;AAOAs9C,EAAAA,uBAAuB,GAAG,UACxBzxD,KADwB,EAExBkyD,OAFwB,EAGxBC,OAHwB,EAIrB;AACHnyD,IAAAA,KAAK,CAAC6tB,YAAN,GAAqBykC,cAAc,CAACtyD,KAAK,CAACqtB,aAAP,EAAsB6kC,OAAtB,EAA+BC,OAA/B,CAAnC;;AACA,QAAInyD,KAAK,CAACG,SAAV,EAAqB;AACnBH,MAAAA,KAAK,CAACG,SAAN,CAAgB0tB,YAAhB,GAA+B7tB,KAAK,CAAC6tB,YAArC;AACD;;AACDrD,IAAAA,qBAAqB,CAACxqB,KAAD,EAAQkT,QAAR,EAAkBiB,WAAlB,CAArB;AACD,GAVD;;AAYAu9C,EAAAA,cAAc,GAAG,UAAC1xD,KAAD,EAAkB;AACjCwqB,IAAAA,qBAAqB,CAACxqB,KAAD,EAAQkT,QAAR,EAAkBiB,WAAlB,CAArB;AACD,GAFD;;AAIAw9C,EAAAA,kBAAkB,GAAG,UAACe,oBAAD,EAA4C;AAC/DvB,IAAAA,iBAAiB,GAAGuB,oBAApB;AACD,GAFD;AAGD;;AAED,SAASC,uBAAT,CAAiC3yD,KAAjC,EAA+E;AAC7E,MAAMowD,SAAS,GAAGzuD,oBAAoB,CAAC3B,KAAD,CAAtC;;AACA,MAAIowD,SAAS,KAAK,IAAlB,EAAwB;AACtB,WAAO,IAAP;AACD;;AACD,SAAOA,SAAS,CAACtvD,SAAjB;AACD;;AAED,SAAS8xD,4BAAT,CACE/xD,QADF,EAEgB;AACd,SAAO,IAAP;AACD;;AAED,SAASgyD,0BAAT,GAAsC;AACpC,SAAO5J,OAAP;AACD;;AAED,AAAO,SAAS6J,kBAAT,CAA4BC,cAA5B,EAAqE;AAAA,MACnEC,uBADmE,GACxCD,cADwC,CACnEC,uBADmE;AAAA,MAEnEzpD,sBAFmE,GAEzCzR,oBAFyC,CAEnEyR,sBAFmE;AAI1E,SAAO6G,eAAe,CAAC;AACrB6iD,IAAAA,UAAU,EAAEF,cAAc,CAACE,UADN;AAErBt6B,IAAAA,OAAO,EAAEo6B,cAAc,CAACp6B,OAFH;AAGrBu6B,IAAAA,mBAAmB,EAAEH,cAAc,CAACG,mBAHf;AAIrBC,IAAAA,cAAc,EAAEJ,cAAc,CAACI,cAJV;AAKrB/B,IAAAA,iBAAiB,EAAjBA,iBALqB;AAMrBC,IAAAA,2BAA2B,EAA3BA,2BANqB;AAOrBC,IAAAA,2BAA2B,EAA3BA,2BAPqB;AAQrBC,IAAAA,aAAa,EAAbA,aARqB;AASrBC,IAAAA,uBAAuB,EAAvBA,uBATqB;AAUrBC,IAAAA,uBAAuB,EAAvBA,uBAVqB;AAWrBE,IAAAA,kBAAkB,EAAlBA,kBAXqB;AAYrBD,IAAAA,cAAc,EAAdA,cAZqB;AAarB0B,IAAAA,oBAAoB,EAAE7pD,sBAbD;AAcrBopD,IAAAA,uBAAuB,EAAvBA,uBAdqB;AAerBK,IAAAA,uBAAuB,EACrBA,uBAAuB,IAAIJ,4BAhBR;AAiBrB;AACAjF,IAAAA,2BAA2B,EAAE78C,CAAU68C,2BAAH,CAlBf;AAmBrBT,IAAAA,eAAe,EAAEp8C,CAAUo8C,eAAH,CAnBH;AAoBrBI,IAAAA,YAAY,EAAEx8C,CAAUw8C,YAAH,CApBA;AAqBrBd,IAAAA,iBAAiB,EAAE17C,CAAU07C,iBAAH,CArBL;AAsBrB;AACA6G,IAAAA,eAAe,EAAEviD,CAAU+hD,0BAAH;AAvBH,GAAD,CAAtB;AAyBD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}