{"version":3,"file":"react-fetch.node.development.js","sources":["../../../../packages/react-fetch/src/ReactFetchNode.js"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Wakeable} from 'shared/ReactTypes';\n\nimport * as http from 'http';\nimport * as https from 'https';\n\nimport {readCache} from 'react/unstable-cache';\n\ntype FetchResponse = {|\n  // Properties\n  headers: any,\n  ok: boolean,\n  redirected: boolean,\n  status: number,\n  statusText: string,\n  type: 'basic',\n  url: string,\n  // Methods\n  arrayBuffer(): ArrayBuffer,\n  blob(): any,\n  json(): any,\n  text(): string,\n|};\n\nfunction nodeFetch(\n  url: string,\n  options: mixed,\n  onResolve: any => void,\n  onReject: any => void,\n): void {\n  const {hostname, pathname, search, port, protocol} = new URL(url);\n  const nodeOptions = {\n    hostname,\n    port,\n    path: pathname + search,\n    // TODO: cherry-pick supported user-passed options.\n  };\n  const nodeImpl = protocol === 'https:' ? https : http;\n  const request = nodeImpl.request(nodeOptions, response => {\n    // TODO: support redirects.\n    onResolve(new Response(response));\n  });\n  request.on('error', error => {\n    onReject(error);\n  });\n  request.end();\n}\n\nconst Pending = 0;\nconst Resolved = 1;\nconst Rejected = 2;\n\ntype PendingResult = {|\n  status: 0,\n  value: Wakeable,\n|};\n\ntype ResolvedResult<V> = {|\n  status: 1,\n  value: V,\n|};\n\ntype RejectedResult = {|\n  status: 2,\n  value: mixed,\n|};\n\ntype Result<V> = PendingResult | ResolvedResult<V> | RejectedResult;\n\nconst fetchKey = {};\n\nfunction readResultMap(): Map<string, Result<FetchResponse>> {\n  const resources = readCache().resources;\n  let map = resources.get(fetchKey);\n  if (map === undefined) {\n    map = new Map();\n    resources.set(fetchKey, map);\n  }\n  return map;\n}\n\nfunction readResult<T>(result: Result<T>): T {\n  if (result.status === Resolved) {\n    return result.value;\n  } else {\n    throw result.value;\n  }\n}\n\nfunction Response(nativeResponse) {\n  this.headers = nativeResponse.headers;\n  this.ok = nativeResponse.statusCode >= 200 && nativeResponse.statusCode < 300;\n  this.redirected = false; // TODO\n  this.status = nativeResponse.statusCode;\n  this.statusText = nativeResponse.statusMessage;\n  this.type = 'basic';\n  this.url = nativeResponse.url;\n\n  this._response = nativeResponse;\n  this._blob = null;\n  this._json = null;\n  this._text = null;\n\n  const callbacks = [];\n  function wake() {\n    // This assumes they won't throw.\n    while (callbacks.length > 0) {\n      const cb = callbacks.pop();\n      cb();\n    }\n  }\n  const result: PendingResult = (this._result = {\n    status: Pending,\n    value: {\n      then(cb) {\n        callbacks.push(cb);\n      },\n    },\n  });\n  const data = [];\n  nativeResponse.on('data', chunk => data.push(chunk));\n  nativeResponse.on('end', () => {\n    if (result.status === Pending) {\n      const resolvedResult = ((result: any): ResolvedResult<Buffer>);\n      resolvedResult.status = Resolved;\n      resolvedResult.value = Buffer.concat(data);\n      wake();\n    }\n  });\n  nativeResponse.on('error', err => {\n    if (result.status === Pending) {\n      const rejectedResult = ((result: any): RejectedResult);\n      rejectedResult.status = Rejected;\n      rejectedResult.value = err;\n      wake();\n    }\n  });\n}\n\nResponse.prototype = {\n  constructor: Response,\n  arrayBuffer() {\n    const buffer = readResult(this._result);\n    return buffer;\n  },\n  blob() {\n    // TODO: Is this needed?\n    throw new Error('Not implemented.');\n  },\n  json() {\n    const buffer = readResult(this._result);\n    return JSON.parse(buffer.toString());\n  },\n  text() {\n    const buffer = readResult(this._result);\n    return buffer.toString();\n  },\n};\n\nfunction preloadResult(url: string, options: mixed): Result<FetchResponse> {\n  const map = readResultMap();\n  let entry = map.get(url);\n  if (!entry) {\n    if (options) {\n      if (options.method || options.body || options.signal) {\n        // TODO: wire up our own cancellation mechanism.\n        // TODO: figure out what to do with POST.\n        throw Error('Unsupported option');\n      }\n    }\n    const callbacks = [];\n    const wakeable = {\n      then(cb) {\n        callbacks.push(cb);\n      },\n    };\n    const wake = () => {\n      // This assumes they won't throw.\n      while (callbacks.length > 0) {\n        const cb = callbacks.pop();\n        cb();\n      }\n    };\n    const result: Result<FetchResponse> = (entry = {\n      status: Pending,\n      value: wakeable,\n    });\n    nodeFetch(\n      url,\n      options,\n      response => {\n        if (result.status === Pending) {\n          const resolvedResult = ((result: any): ResolvedResult<FetchResponse>);\n          resolvedResult.status = Resolved;\n          resolvedResult.value = response;\n          wake();\n        }\n      },\n      err => {\n        if (result.status === Pending) {\n          const rejectedResult = ((result: any): RejectedResult);\n          rejectedResult.status = Rejected;\n          rejectedResult.value = err;\n          wake();\n        }\n      },\n    );\n    map.set(url, entry);\n  }\n  return entry;\n}\n\nexport function preload(url: string, options: mixed): void {\n  preloadResult(url, options);\n  // Don't return anything.\n}\n\nexport function fetch(url: string, options: mixed): FetchResponse {\n  const result = preloadResult(url, options);\n  return readResult(result);\n}\n"],"names":["nodeFetch","url","options","onResolve","onReject","URL","hostname","pathname","search","port","protocol","nodeOptions","path","nodeImpl","https","http","request","response","Response","on","error","end","Pending","Resolved","Rejected","fetchKey","readResultMap","resources","readCache","map","get","undefined","Map","set","readResult","result","status","value","nativeResponse","headers","ok","statusCode","redirected","statusText","statusMessage","type","_response","_blob","_json","_text","callbacks","wake","length","cb","pop","_result","then","push","data","chunk","resolvedResult","Buffer","concat","err","rejectedResult","prototype","constructor","arrayBuffer","buffer","blob","Error","json","JSON","parse","toString","text","preloadResult","entry","method","body","signal","wakeable","preload","fetch"],"mappings":"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"}