{"version":3,"file":"react-noop-renderer-server.production.min.js","sources":["../../../../packages/react-noop-renderer/src/ReactNoopServer.js"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\n/**\n * This is a renderer of React that doesn't have a render target output.\n * It is useful to demonstrate the internals of the reconciler in isolation\n * and for testing semantics of reconciliation separate from the host\n * environment.\n */\n\nimport ReactFizzServer from 'react-server';\n\ntype Destination = Array<string>;\n\nconst ReactNoopServer = ReactFizzServer({\n  scheduleWork(callback: () => void) {\n    callback();\n  },\n  beginWriting(destination: Destination): void {},\n  writeChunk(destination: Destination, buffer: Uint8Array): void {\n    destination.push(JSON.parse(Buffer.from((buffer: any)).toString('utf8')));\n  },\n  completeWriting(destination: Destination): void {},\n  close(destination: Destination): void {},\n  flushBuffered(destination: Destination): void {},\n  convertStringToBuffer(content: string): Uint8Array {\n    return Buffer.from(content, 'utf8');\n  },\n  formatChunkAsString(type: string, props: Object): string {\n    return JSON.stringify({type, props});\n  },\n  formatChunk(type: string, props: Object): Uint8Array {\n    return Buffer.from(JSON.stringify({type, props}), 'utf8');\n  },\n});\n\nfunction render(children: React$Element<any>): Destination {\n  const destination: Destination = [];\n  const request = ReactNoopServer.createRequest(children, destination);\n  ReactNoopServer.startWork(request);\n  return destination;\n}\n\nexport {render};\n"],"names":["ReactNoopServer","ReactFizzServer","scheduleWork","callback","beginWriting","destination","writeChunk","buffer","push","JSON","parse","Buffer","from","toString","completeWriting","close","flushBuffered","convertStringToBuffer","content","formatChunkAsString","type","props","stringify","formatChunk","render","children","request","createRequest","startWork"],"mappings":";;;;AASA;;;;;;AAWA,MAAMA,eAAe,GAAGC,eAAe,CAAC;AACtCC,EAAAA,YAAY,CAACC,QAAD,EAAuB;AACjCA,IAAAA,QAAQ;AACT,GAHqC;;AAItCC,EAAAA,YAAY,CAACC,WAAD,EAAiC,EAJP;;AAKtCC,EAAAA,UAAU,CAACD,WAAD,EAA2BE,MAA3B,EAAqD;AAC7DF,IAAAA,WAAW,CAACG,IAAZ,CAAiBC,IAAI,CAACC,KAAL,CAAWC,MAAM,CAACC,IAAP,CAAaL,MAAb,EAA2BM,QAA3B,CAAoC,MAApC,CAAX,CAAjB;AACD,GAPqC;;AAQtCC,EAAAA,eAAe,CAACT,WAAD,EAAiC,EARV;;AAStCU,EAAAA,KAAK,CAACV,WAAD,EAAiC,EATA;;AAUtCW,EAAAA,aAAa,CAACX,WAAD,EAAiC,EAVR;;AAWtCY,EAAAA,qBAAqB,CAACC,OAAD,EAA8B;AACjD,WAAOP,MAAM,CAACC,IAAP,CAAYM,OAAZ,EAAqB,MAArB,CAAP;AACD,GAbqC;;AActCC,EAAAA,mBAAmB,CAACC,IAAD,EAAeC,KAAf,EAAsC;AACvD,WAAOZ,IAAI,CAACa,SAAL,CAAe;AAACF,MAAAA,IAAD;AAAOC,MAAAA;AAAP,KAAf,CAAP;AACD,GAhBqC;;AAiBtCE,EAAAA,WAAW,CAACH,IAAD,EAAeC,KAAf,EAA0C;AACnD,WAAOV,MAAM,CAACC,IAAP,CAAYH,IAAI,CAACa,SAAL,CAAe;AAACF,MAAAA,IAAD;AAAOC,MAAAA;AAAP,KAAf,CAAZ,EAA2C,MAA3C,CAAP;AACD;;AAnBqC,CAAD,CAAvC;;AAsBA,SAASG,MAAT,CAAgBC,QAAhB,EAA2D;AACzD,QAAMpB,WAAwB,GAAG,EAAjC;AACA,QAAMqB,OAAO,GAAG1B,eAAe,CAAC2B,aAAhB,CAA8BF,QAA9B,EAAwCpB,WAAxC,CAAhB;AACAL,EAAAA,eAAe,CAAC4B,SAAhB,CAA0BF,OAA1B;AACA,SAAOrB,WAAP;AACD;;;;"}