{"version":3,"file":"react-transport-dom-webpack-server.node.production.min.js","sources":["../../../../packages/shared/formatProdErrorMessage.js","../../../../packages/react-server/src/ReactServerStreamConfigNode.js","../../../../packages/react-server/src/ReactFlightServerConfigStream.js","../../../../packages/react-transport-dom-webpack/src/ReactFlightServerWebpackBundlerConfig.js","../../../../packages/shared/ReactSymbols.js","../../../../packages/shared/ReactSharedInternals.js","../../../../packages/react-server/src/ReactFlightServer.js","../../../../packages/react-transport-dom-webpack/src/ReactFlightDOMServerNode.js"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n// Do not require this module directly! Use normal `invariant` calls with\n// template literal strings. The messages will be replaced with error codes\n// during build.\n\nfunction formatProdErrorMessage(code) {\n  let url = 'https://reactjs.org/docs/error-decoder.html?invariant=' + code;\n  for (let i = 1; i < arguments.length; i++) {\n    url += '&args[]=' + encodeURIComponent(arguments[i]);\n  }\n  return (\n    `Minified React error #${code}; visit ${url} for the full message or ` +\n    'use the non-minified dev environment for full errors and additional ' +\n    'helpful warnings.'\n  );\n}\n\nexport default formatProdErrorMessage;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Writable} from 'stream';\n\ntype MightBeFlushable = {\n  flush?: () => void,\n  // Legacy\n  flushHeaders?: () => void,\n  ...\n};\n\nexport type Destination = Writable & MightBeFlushable;\n\nexport function scheduleWork(callback: () => void) {\n  setImmediate(callback);\n}\n\nexport function flushBuffered(destination: Destination) {\n  // If we don't have any more data to send right now.\n  // Flush whatever is in the buffer to the wire.\n  if (typeof destination.flush === 'function') {\n    // http.createServer response have flush(), but it has a different meaning and\n    // is deprecated in favor of flushHeaders(). Detect to avoid a warning.\n    if (typeof destination.flushHeaders !== 'function') {\n      // By convention the Zlib streams provide a flush function for this purpose.\n      destination.flush();\n    }\n  }\n}\n\nexport function beginWriting(destination: Destination) {\n  // Older Node streams like http.createServer don't have this.\n  if (typeof destination.cork === 'function') {\n    destination.cork();\n  }\n}\n\nexport function writeChunk(\n  destination: Destination,\n  buffer: Uint8Array,\n): boolean {\n  const nodeBuffer = ((buffer: any): Buffer); // close enough\n  return destination.write(nodeBuffer);\n}\n\nexport function completeWriting(destination: Destination) {\n  // Older Node streams like http.createServer don't have this.\n  if (typeof destination.uncork === 'function') {\n    destination.uncork();\n  }\n}\n\nexport function close(destination: Destination) {\n  destination.end();\n}\n\nexport function convertStringToBuffer(content: string): Uint8Array {\n  return Buffer.from(content, 'utf8');\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\n// This file is an intermediate layer to translate between Flight\n// calls to stream output over a binary stream.\n\n/*\nFLIGHT PROTOCOL GRAMMAR\n\nResponse\n- JSONData RowSequence\n- JSONData\n\nRowSequence\n- Row RowSequence\n- Row\n\nRow\n- \"J\" RowID JSONData\n- \"H\" RowID HTMLData\n- \"B\" RowID BlobData\n- \"U\" RowID URLData\n- \"E\" RowID ErrorData\n\nRowID\n- HexDigits \":\"\n\nHexDigits\n- HexDigit HexDigits\n- HexDigit\n\nHexDigit\n- 0-F\n\nURLData\n- (UTF8 encoded URL) \"\\n\"\n\nErrorData\n- (UTF8 encoded JSON: {message: \"...\", stack: \"...\"}) \"\\n\"\n\nJSONData\n- (UTF8 encoded JSON) \"\\n\"\n  - String values that begin with $ are escaped with a \"$\" prefix.\n  - References to other rows are encoding as JSONReference strings.\n\nJSONReference\n- \"$\" HexDigits\n\nHTMLData\n- ByteSize (UTF8 encoded HTML)\n\nBlobData\n- ByteSize (Binary Data)\n\nByteSize\n- (unsigned 32-bit integer)\n*/\n\n// TODO: Implement HTMLData, BlobData and URLData.\n\nimport type {Request, ReactModel} from 'react-server/src/ReactFlightServer';\n\nimport {convertStringToBuffer} from './ReactServerStreamConfig';\n\nexport type {Destination} from './ReactServerStreamConfig';\n\nexport type Chunk = Uint8Array;\n\nconst stringify = JSON.stringify;\n\nfunction serializeRowHeader(tag: string, id: number) {\n  return tag + id.toString(16) + ':';\n}\n\nexport function processErrorChunk(\n  request: Request,\n  id: number,\n  message: string,\n  stack: string,\n): Chunk {\n  const errorInfo = {message, stack};\n  const row = serializeRowHeader('E', id) + stringify(errorInfo) + '\\n';\n  return convertStringToBuffer(row);\n}\n\nexport function processModelChunk(\n  request: Request,\n  id: number,\n  model: ReactModel,\n): Chunk {\n  const json = stringify(model, request.toJSON);\n  let row;\n  if (id === 0) {\n    row = json + '\\n';\n  } else {\n    row = serializeRowHeader('J', id) + json + '\\n';\n  }\n  return convertStringToBuffer(row);\n}\n\nexport {\n  scheduleWork,\n  flushBuffered,\n  beginWriting,\n  writeChunk,\n  completeWriting,\n  close,\n} from './ReactServerStreamConfig';\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\ntype WebpackMap = {\n  [filename: string]: ModuleMetaData,\n};\n\nexport type BundlerConfig = WebpackMap;\n\n// eslint-disable-next-line no-unused-vars\nexport type ModuleReference<T> = string;\n\nexport type ModuleMetaData = {\n  id: string,\n  chunks: Array<string>,\n  name: string,\n};\n\nexport function resolveModuleMetaData<T>(\n  config: BundlerConfig,\n  modulePath: ModuleReference<T>,\n): ModuleMetaData {\n  return config[modulePath];\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\n// ATTENTION\n// When adding new symbols to this file,\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n\n// The Symbol used to tag the ReactElement-like types. If there is no native Symbol\n// nor polyfill, then a plain number is used for performance.\nexport let REACT_ELEMENT_TYPE = 0xeac7;\nexport let REACT_PORTAL_TYPE = 0xeaca;\nexport let REACT_FRAGMENT_TYPE = 0xeacb;\nexport let REACT_STRICT_MODE_TYPE = 0xeacc;\nexport let REACT_PROFILER_TYPE = 0xead2;\nexport let REACT_PROVIDER_TYPE = 0xeacd;\nexport let REACT_CONTEXT_TYPE = 0xeace;\nexport let REACT_FORWARD_REF_TYPE = 0xead0;\nexport let REACT_SUSPENSE_TYPE = 0xead1;\nexport let REACT_SUSPENSE_LIST_TYPE = 0xead8;\nexport let REACT_MEMO_TYPE = 0xead3;\nexport let REACT_LAZY_TYPE = 0xead4;\nexport let REACT_BLOCK_TYPE = 0xead9;\nexport let REACT_SERVER_BLOCK_TYPE = 0xeada;\nexport let REACT_FUNDAMENTAL_TYPE = 0xead5;\nexport let REACT_SCOPE_TYPE = 0xead7;\nexport let REACT_OPAQUE_ID_TYPE = 0xeae0;\nexport let REACT_DEBUG_TRACING_MODE_TYPE = 0xeae1;\nexport let REACT_OFFSCREEN_TYPE = 0xeae2;\nexport let REACT_LEGACY_HIDDEN_TYPE = 0xeae3;\n\nif (typeof Symbol === 'function' && Symbol.for) {\n  const symbolFor = Symbol.for;\n  REACT_ELEMENT_TYPE = symbolFor('react.element');\n  REACT_PORTAL_TYPE = symbolFor('react.portal');\n  REACT_FRAGMENT_TYPE = symbolFor('react.fragment');\n  REACT_STRICT_MODE_TYPE = symbolFor('react.strict_mode');\n  REACT_PROFILER_TYPE = symbolFor('react.profiler');\n  REACT_PROVIDER_TYPE = symbolFor('react.provider');\n  REACT_CONTEXT_TYPE = symbolFor('react.context');\n  REACT_FORWARD_REF_TYPE = symbolFor('react.forward_ref');\n  REACT_SUSPENSE_TYPE = symbolFor('react.suspense');\n  REACT_SUSPENSE_LIST_TYPE = symbolFor('react.suspense_list');\n  REACT_MEMO_TYPE = symbolFor('react.memo');\n  REACT_LAZY_TYPE = symbolFor('react.lazy');\n  REACT_BLOCK_TYPE = symbolFor('react.block');\n  REACT_SERVER_BLOCK_TYPE = symbolFor('react.server.block');\n  REACT_FUNDAMENTAL_TYPE = symbolFor('react.fundamental');\n  REACT_SCOPE_TYPE = symbolFor('react.scope');\n  REACT_OPAQUE_ID_TYPE = symbolFor('react.opaque.id');\n  REACT_DEBUG_TRACING_MODE_TYPE = symbolFor('react.debug_trace_mode');\n  REACT_OFFSCREEN_TYPE = symbolFor('react.offscreen');\n  REACT_LEGACY_HIDDEN_TYPE = symbolFor('react.legacy_hidden');\n}\n\nconst MAYBE_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\nconst FAUX_ITERATOR_SYMBOL = '@@iterator';\n\nexport function getIteratorFn(maybeIterable: ?any): ?() => ?Iterator<*> {\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\n    return null;\n  }\n  const maybeIterator =\n    (MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL]) ||\n    maybeIterable[FAUX_ITERATOR_SYMBOL];\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n  return null;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport * as React from 'react';\n\nconst ReactSharedInternals =\n  React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n\nexport default ReactSharedInternals;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Dispatcher as DispatcherType} from 'react-reconciler/src/ReactInternalTypes';\nimport type {\n  Destination,\n  Chunk,\n  BundlerConfig,\n  ModuleMetaData,\n  ModuleReference,\n} from './ReactFlightServerConfig';\n\nimport {\n  scheduleWork,\n  beginWriting,\n  writeChunk,\n  completeWriting,\n  flushBuffered,\n  close,\n  processModelChunk,\n  processErrorChunk,\n  resolveModuleMetaData,\n} from './ReactFlightServerConfig';\n\nimport {\n  REACT_BLOCK_TYPE,\n  REACT_ELEMENT_TYPE,\n  REACT_DEBUG_TRACING_MODE_TYPE,\n  REACT_FORWARD_REF_TYPE,\n  REACT_FRAGMENT_TYPE,\n  REACT_LAZY_TYPE,\n  REACT_LEGACY_HIDDEN_TYPE,\n  REACT_MEMO_TYPE,\n  REACT_OFFSCREEN_TYPE,\n  REACT_PROFILER_TYPE,\n  REACT_SCOPE_TYPE,\n  REACT_SERVER_BLOCK_TYPE,\n  REACT_STRICT_MODE_TYPE,\n  REACT_SUSPENSE_TYPE,\n  REACT_SUSPENSE_LIST_TYPE,\n} from 'shared/ReactSymbols';\n\nimport * as React from 'react';\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\nimport invariant from 'shared/invariant';\n\ntype ReactJSONValue =\n  | string\n  | boolean\n  | number\n  | null\n  | $ReadOnlyArray<ReactJSONValue>\n  | ReactModelObject;\n\nexport type ReactModel =\n  | React$Element<any>\n  | string\n  | boolean\n  | number\n  | null\n  | Iterable<ReactModel>\n  | ReactModelObject;\n\ntype ReactModelObject = {+[key: string]: ReactModel};\n\ntype Segment = {\n  id: number,\n  query: () => ReactModel,\n  ping: () => void,\n};\n\nexport type Request = {\n  destination: Destination,\n  bundlerConfig: BundlerConfig,\n  nextChunkId: number,\n  pendingChunks: number,\n  pingedSegments: Array<Segment>,\n  completedJSONChunks: Array<Chunk>,\n  completedErrorChunks: Array<Chunk>,\n  flowing: boolean,\n  toJSON: (key: string, value: ReactModel) => ReactJSONValue,\n};\n\nconst ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;\n\nexport function createRequest(\n  model: ReactModel,\n  destination: Destination,\n  bundlerConfig: BundlerConfig,\n): Request {\n  const pingedSegments = [];\n  const request = {\n    destination,\n    bundlerConfig,\n    nextChunkId: 0,\n    pendingChunks: 0,\n    pingedSegments: pingedSegments,\n    completedJSONChunks: [],\n    completedErrorChunks: [],\n    flowing: false,\n    toJSON: function(key: string, value: ReactModel): ReactJSONValue {\n      return resolveModelToJSON(request, this, key, value);\n    },\n  };\n  request.pendingChunks++;\n  const rootSegment = createSegment(request, () => model);\n  pingedSegments.push(rootSegment);\n  return request;\n}\n\nfunction attemptResolveElement(element: React$Element<any>): ReactModel {\n  const type = element.type;\n  const props = element.props;\n  if (typeof type === 'function') {\n    // This is a server-side component.\n    return type(props);\n  } else if (typeof type === 'string') {\n    // This is a host element. E.g. HTML.\n    return [REACT_ELEMENT_TYPE, type, element.key, element.props];\n  } else if (type[0] === REACT_SERVER_BLOCK_TYPE) {\n    return [REACT_ELEMENT_TYPE, type, element.key, element.props];\n  } else if (\n    type === REACT_FRAGMENT_TYPE ||\n    type === REACT_STRICT_MODE_TYPE ||\n    type === REACT_PROFILER_TYPE ||\n    type === REACT_SCOPE_TYPE ||\n    type === REACT_DEBUG_TRACING_MODE_TYPE ||\n    type === REACT_LEGACY_HIDDEN_TYPE ||\n    type === REACT_OFFSCREEN_TYPE ||\n    // TODO: These are temporary shims\n    // and we'll want a different behavior.\n    type === REACT_SUSPENSE_TYPE ||\n    type === REACT_SUSPENSE_LIST_TYPE\n  ) {\n    return element.props.children;\n  } else if (type != null && typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_FORWARD_REF_TYPE: {\n        const render = type.render;\n        return render(props, undefined);\n      }\n      case REACT_MEMO_TYPE: {\n        const nextChildren = React.createElement(type.type, element.props);\n        return attemptResolveElement(nextChildren);\n      }\n    }\n  }\n  invariant(false, 'Unsupported type.');\n}\n\nfunction pingSegment(request: Request, segment: Segment): void {\n  const pingedSegments = request.pingedSegments;\n  pingedSegments.push(segment);\n  if (pingedSegments.length === 1) {\n    scheduleWork(() => performWork(request));\n  }\n}\n\nfunction createSegment(request: Request, query: () => ReactModel): Segment {\n  const id = request.nextChunkId++;\n  const segment = {\n    id,\n    query,\n    ping: () => pingSegment(request, segment),\n  };\n  return segment;\n}\n\nfunction serializeIDRef(id: number): string {\n  return '$' + id.toString(16);\n}\n\nfunction escapeStringValue(value: string): string {\n  if (value[0] === '$' || value[0] === '@') {\n    // We need to escape $ or @ prefixed strings since we use those to encode\n    // references to IDs and as special symbol values.\n    return '$' + value;\n  } else {\n    return value;\n  }\n}\n\nexport function resolveModelToJSON(\n  request: Request,\n  parent: {+[key: string | number]: ReactModel} | $ReadOnlyArray<ReactModel>,\n  key: string,\n  value: ReactModel,\n): ReactJSONValue {\n  // Special Symbols\n  switch (value) {\n    case REACT_ELEMENT_TYPE:\n      return '$';\n    case REACT_SERVER_BLOCK_TYPE:\n      return '@';\n    case REACT_LAZY_TYPE:\n    case REACT_BLOCK_TYPE:\n      invariant(\n        false,\n        'React Blocks (and Lazy Components) are expected to be replaced by a ' +\n          'compiler on the server. Try configuring your compiler set up and avoid ' +\n          'using React.lazy inside of Blocks.',\n      );\n  }\n\n  if (parent[0] === REACT_SERVER_BLOCK_TYPE) {\n    // We're currently encoding part of a Block. Look up which key.\n    switch (key) {\n      case '1': {\n        // Module reference\n        const moduleReference: ModuleReference<any> = (value: any);\n        try {\n          const moduleMetaData: ModuleMetaData = resolveModuleMetaData(\n            request.bundlerConfig,\n            moduleReference,\n          );\n          return (moduleMetaData: ReactJSONValue);\n        } catch (x) {\n          request.pendingChunks++;\n          const errorId = request.nextChunkId++;\n          emitErrorChunk(request, errorId, x);\n          return serializeIDRef(errorId);\n        }\n      }\n      case '2': {\n        // Load function\n        const load: () => ReactModel = (value: any);\n        try {\n          // Attempt to resolve the data.\n          return load();\n        } catch (x) {\n          if (\n            typeof x === 'object' &&\n            x !== null &&\n            typeof x.then === 'function'\n          ) {\n            // Something suspended, we'll need to create a new segment and resolve it later.\n            request.pendingChunks++;\n            const newSegment = createSegment(request, load);\n            const ping = newSegment.ping;\n            x.then(ping, ping);\n            return serializeIDRef(newSegment.id);\n          } else {\n            // This load failed, encode the error as a separate row and reference that.\n            request.pendingChunks++;\n            const errorId = request.nextChunkId++;\n            emitErrorChunk(request, errorId, x);\n            return serializeIDRef(errorId);\n          }\n        }\n      }\n      default: {\n        invariant(\n          false,\n          'A server block should never encode any other slots. This is a bug in React.',\n        );\n      }\n    }\n  }\n\n  if (typeof value === 'string') {\n    return escapeStringValue(value);\n  }\n\n  // Resolve server components.\n  while (\n    typeof value === 'object' &&\n    value !== null &&\n    value.$$typeof === REACT_ELEMENT_TYPE\n  ) {\n    // TODO: Concatenate keys of parents onto children.\n    const element: React$Element<any> = (value: any);\n    try {\n      // Attempt to render the server component.\n      value = attemptResolveElement(element);\n    } catch (x) {\n      if (typeof x === 'object' && x !== null && typeof x.then === 'function') {\n        // Something suspended, we'll need to create a new segment and resolve it later.\n        request.pendingChunks++;\n        const newSegment = createSegment(request, () => value);\n        const ping = newSegment.ping;\n        x.then(ping, ping);\n        return serializeIDRef(newSegment.id);\n      } else {\n        // Something errored. Don't bother encoding anything up to here.\n        throw x;\n      }\n    }\n  }\n\n  return value;\n}\n\nfunction emitErrorChunk(request: Request, id: number, error: mixed): void {\n  // TODO: We should not leak error messages to the client in prod.\n  // Give this an error code instead and log on the server.\n  // We can serialize the error in DEV as a convenience.\n  let message;\n  let stack = '';\n  try {\n    if (error instanceof Error) {\n      message = '' + error.message;\n      stack = '' + error.stack;\n    } else {\n      message = 'Error: ' + (error: any);\n    }\n  } catch (x) {\n    message = 'An error occurred but serializing the error message failed.';\n  }\n\n  const processedChunk = processErrorChunk(request, id, message, stack);\n  request.completedErrorChunks.push(processedChunk);\n}\n\nfunction retrySegment(request: Request, segment: Segment): void {\n  const query = segment.query;\n  let value;\n  try {\n    value = query();\n    while (\n      typeof value === 'object' &&\n      value !== null &&\n      value.$$typeof === REACT_ELEMENT_TYPE\n    ) {\n      // TODO: Concatenate keys of parents onto children.\n      const element: React$Element<any> = (value: any);\n      // Attempt to render the server component.\n      // Doing this here lets us reuse this same segment if the next component\n      // also suspends.\n      segment.query = () => value;\n      value = attemptResolveElement(element);\n    }\n    const processedChunk = processModelChunk(request, segment.id, value);\n    request.completedJSONChunks.push(processedChunk);\n  } catch (x) {\n    if (typeof x === 'object' && x !== null && typeof x.then === 'function') {\n      // Something suspended again, let's pick it back up later.\n      const ping = segment.ping;\n      x.then(ping, ping);\n      return;\n    } else {\n      // This errored, we need to serialize this error to the\n      emitErrorChunk(request, segment.id, x);\n    }\n  }\n}\n\nfunction performWork(request: Request): void {\n  const prevDispatcher = ReactCurrentDispatcher.current;\n  ReactCurrentDispatcher.current = Dispatcher;\n\n  const pingedSegments = request.pingedSegments;\n  request.pingedSegments = [];\n  for (let i = 0; i < pingedSegments.length; i++) {\n    const segment = pingedSegments[i];\n    retrySegment(request, segment);\n  }\n  if (request.flowing) {\n    flushCompletedChunks(request);\n  }\n\n  ReactCurrentDispatcher.current = prevDispatcher;\n}\n\nlet reentrant = false;\nfunction flushCompletedChunks(request: Request): void {\n  if (reentrant) {\n    return;\n  }\n  reentrant = true;\n  const destination = request.destination;\n  beginWriting(destination);\n  try {\n    const jsonChunks = request.completedJSONChunks;\n    let i = 0;\n    for (; i < jsonChunks.length; i++) {\n      request.pendingChunks--;\n      const chunk = jsonChunks[i];\n      if (!writeChunk(destination, chunk)) {\n        request.flowing = false;\n        i++;\n        break;\n      }\n    }\n    jsonChunks.splice(0, i);\n    const errorChunks = request.completedErrorChunks;\n    i = 0;\n    for (; i < errorChunks.length; i++) {\n      request.pendingChunks--;\n      const chunk = errorChunks[i];\n      if (!writeChunk(destination, chunk)) {\n        request.flowing = false;\n        i++;\n        break;\n      }\n    }\n    errorChunks.splice(0, i);\n  } finally {\n    reentrant = false;\n    completeWriting(destination);\n  }\n  flushBuffered(destination);\n  if (request.pendingChunks === 0) {\n    // We're done.\n    close(destination);\n  }\n}\n\nexport function startWork(request: Request): void {\n  request.flowing = true;\n  scheduleWork(() => performWork(request));\n}\n\nexport function startFlowing(request: Request): void {\n  request.flowing = true;\n  flushCompletedChunks(request);\n}\n\nfunction unsupportedHook(): void {\n  invariant(false, 'This Hook is not supported in Server Components.');\n}\n\nconst Dispatcher: DispatcherType = {\n  useMemo<T>(nextCreate: () => T): T {\n    return nextCreate();\n  },\n  useCallback<T>(callback: T): T {\n    return callback;\n  },\n  useDebugValue(): void {},\n  useDeferredValue<T>(value: T): T {\n    return value;\n  },\n  useTransition(): [(callback: () => void) => void, boolean] {\n    return [() => {}, false];\n  },\n  readContext: (unsupportedHook: any),\n  useContext: (unsupportedHook: any),\n  useReducer: (unsupportedHook: any),\n  useRef: (unsupportedHook: any),\n  useState: (unsupportedHook: any),\n  useLayoutEffect: (unsupportedHook: any),\n  useImperativeHandle: (unsupportedHook: any),\n  useEffect: (unsupportedHook: any),\n  useOpaqueIdentifier: (unsupportedHook: any),\n  useMutableSource: (unsupportedHook: any),\n};\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {ReactModel} from 'react-server/src/ReactFlightServer';\nimport type {BundlerConfig} from './ReactFlightServerWebpackBundlerConfig';\nimport type {Writable} from 'stream';\n\nimport {\n  createRequest,\n  startWork,\n  startFlowing,\n} from 'react-server/src/ReactFlightServer';\n\nfunction createDrainHandler(destination, request) {\n  return () => startFlowing(request);\n}\n\nfunction pipeToNodeWritable(\n  model: ReactModel,\n  destination: Writable,\n  webpackMap: BundlerConfig,\n): void {\n  const request = createRequest(model, destination, webpackMap);\n  destination.on('drain', createDrainHandler(destination, request));\n  startWork(request);\n}\n\nexport {pipeToNodeWritable};\n"],"names":["formatProdErrorMessage","code","url","i","arguments","length","encodeURIComponent","scheduleWork","callback","setImmediate","flushBuffered","destination","flush","flushHeaders","beginWriting","cork","writeChunk","buffer","nodeBuffer","write","completeWriting","uncork","close","end","convertStringToBuffer","content","Buffer","from","stringify","JSON","serializeRowHeader","tag","id","toString","processErrorChunk","request","message","stack","errorInfo","row","processModelChunk","model","json","toJSON","resolveModuleMetaData","config","modulePath","REACT_ELEMENT_TYPE","REACT_FRAGMENT_TYPE","REACT_STRICT_MODE_TYPE","REACT_PROFILER_TYPE","REACT_FORWARD_REF_TYPE","REACT_SUSPENSE_TYPE","REACT_SUSPENSE_LIST_TYPE","REACT_MEMO_TYPE","REACT_LAZY_TYPE","REACT_BLOCK_TYPE","REACT_SERVER_BLOCK_TYPE","REACT_SCOPE_TYPE","REACT_DEBUG_TRACING_MODE_TYPE","REACT_OFFSCREEN_TYPE","REACT_LEGACY_HIDDEN_TYPE","Symbol","for","symbolFor","REACT_PORTAL_TYPE","REACT_PROVIDER_TYPE","REACT_FUNDAMENTAL_TYPE","REACT_OPAQUE_ID_TYPE","ReactSharedInternals","React","ReactCurrentDispatcher","createRequest","bundlerConfig","pingedSegments","nextChunkId","pendingChunks","completedJSONChunks","completedErrorChunks","flowing","key","value","resolveModelToJSON","rootSegment","createSegment","push","attemptResolveElement","element","type","props","children","$$typeof","render","undefined","nextChildren","pingSegment","segment","performWork","query","ping","serializeIDRef","escapeStringValue","parent","moduleReference","moduleMetaData","x","errorId","emitErrorChunk","load","then","newSegment","error","Error","processedChunk","retrySegment","prevDispatcher","current","Dispatcher","flushCompletedChunks","reentrant","jsonChunks","chunk","splice","errorChunks","startWork","startFlowing","unsupportedHook","useMemo","nextCreate","useCallback","useDebugValue","useDeferredValue","useTransition","readContext","useContext","useReducer","useRef","useState","useLayoutEffect","useImperativeHandle","useEffect","useOpaqueIdentifier","useMutableSource","createDrainHandler","pipeToNodeWritable","webpackMap","on"],"mappings":"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"}