{"version":3,"file":"SchedulerMock-dev.js","sources":["../../packages/scheduler/src/forks/SchedulerFeatureFlags.www.js","../../packages/scheduler/src/forks/SchedulerHostConfig.mock.js","../../packages/scheduler/src/SchedulerMinHeap.js","../../packages/scheduler/src/SchedulerPriorities.js","../../packages/scheduler/src/SchedulerProfiling.js","../../packages/scheduler/src/Scheduler.js"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nexport const {\n  enableIsInputPending,\n  enableSchedulerDebugging,\n  enableProfiling: enableProfilingFeatureFlag,\n} = require('SchedulerFeatureFlags');\n\nexport const enableProfiling = __PROFILE__ && enableProfilingFeatureFlag;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nlet currentTime: number = 0;\nlet scheduledCallback: ((boolean, number) => void) | null = null;\nlet scheduledTimeout: (number => void) | null = null;\nlet timeoutTime: number = -1;\nlet yieldedValues: Array<mixed> | null = null;\nlet expectedNumberOfYields: number = -1;\nlet didStop: boolean = false;\nlet isFlushing: boolean = false;\nlet needsPaint: boolean = false;\nlet shouldYieldForPaint: boolean = false;\n\nexport function requestHostCallback(callback: boolean => void) {\n  scheduledCallback = callback;\n}\n\nexport function cancelHostCallback(): void {\n  scheduledCallback = null;\n}\n\nexport function requestHostTimeout(callback: number => void, ms: number) {\n  scheduledTimeout = callback;\n  timeoutTime = currentTime + ms;\n}\n\nexport function cancelHostTimeout(): void {\n  scheduledTimeout = null;\n  timeoutTime = -1;\n}\n\nexport function shouldYieldToHost(): boolean {\n  if (\n    (expectedNumberOfYields !== -1 &&\n      yieldedValues !== null &&\n      yieldedValues.length >= expectedNumberOfYields) ||\n    (shouldYieldForPaint && needsPaint)\n  ) {\n    // We yielded at least as many values as expected. Stop flushing.\n    didStop = true;\n    return true;\n  }\n  return false;\n}\n\nexport function getCurrentTime(): number {\n  return currentTime;\n}\n\nexport function forceFrameRate() {\n  // No-op\n}\n\nexport function reset() {\n  if (isFlushing) {\n    throw new Error('Cannot reset while already flushing work.');\n  }\n  currentTime = 0;\n  scheduledCallback = null;\n  scheduledTimeout = null;\n  timeoutTime = -1;\n  yieldedValues = null;\n  expectedNumberOfYields = -1;\n  didStop = false;\n  isFlushing = false;\n  needsPaint = false;\n}\n\n// Should only be used via an assertion helper that inspects the yielded values.\nexport function unstable_flushNumberOfYields(count: number): void {\n  if (isFlushing) {\n    throw new Error('Already flushing work.');\n  }\n  if (scheduledCallback !== null) {\n    const cb = scheduledCallback;\n    expectedNumberOfYields = count;\n    isFlushing = true;\n    try {\n      let hasMoreWork = true;\n      do {\n        hasMoreWork = cb(true, currentTime);\n      } while (hasMoreWork && !didStop);\n      if (!hasMoreWork) {\n        scheduledCallback = null;\n      }\n    } finally {\n      expectedNumberOfYields = -1;\n      didStop = false;\n      isFlushing = false;\n    }\n  }\n}\n\nexport function unstable_flushUntilNextPaint(): void {\n  if (isFlushing) {\n    throw new Error('Already flushing work.');\n  }\n  if (scheduledCallback !== null) {\n    const cb = scheduledCallback;\n    shouldYieldForPaint = true;\n    needsPaint = false;\n    isFlushing = true;\n    try {\n      let hasMoreWork = true;\n      do {\n        hasMoreWork = cb(true, currentTime);\n      } while (hasMoreWork && !didStop);\n      if (!hasMoreWork) {\n        scheduledCallback = null;\n      }\n    } finally {\n      shouldYieldForPaint = false;\n      didStop = false;\n      isFlushing = false;\n    }\n  }\n}\n\nexport function unstable_flushExpired() {\n  if (isFlushing) {\n    throw new Error('Already flushing work.');\n  }\n  if (scheduledCallback !== null) {\n    isFlushing = true;\n    try {\n      const hasMoreWork = scheduledCallback(false, currentTime);\n      if (!hasMoreWork) {\n        scheduledCallback = null;\n      }\n    } finally {\n      isFlushing = false;\n    }\n  }\n}\n\nexport function unstable_flushAllWithoutAsserting(): boolean {\n  // Returns false if no work was flushed.\n  if (isFlushing) {\n    throw new Error('Already flushing work.');\n  }\n  if (scheduledCallback !== null) {\n    const cb = scheduledCallback;\n    isFlushing = true;\n    try {\n      let hasMoreWork = true;\n      do {\n        hasMoreWork = cb(true, currentTime);\n      } while (hasMoreWork);\n      if (!hasMoreWork) {\n        scheduledCallback = null;\n      }\n      return true;\n    } finally {\n      isFlushing = false;\n    }\n  } else {\n    return false;\n  }\n}\n\nexport function unstable_clearYields(): Array<mixed> {\n  if (yieldedValues === null) {\n    return [];\n  }\n  const values = yieldedValues;\n  yieldedValues = null;\n  return values;\n}\n\nexport function unstable_flushAll(): void {\n  if (yieldedValues !== null) {\n    throw new Error(\n      'Log is not empty. Assert on the log of yielded values before ' +\n        'flushing additional work.',\n    );\n  }\n  unstable_flushAllWithoutAsserting();\n  if (yieldedValues !== null) {\n    throw new Error(\n      'While flushing work, something yielded a value. Use an ' +\n        'assertion helper to assert on the log of yielded values, e.g. ' +\n        'expect(Scheduler).toFlushAndYield([...])',\n    );\n  }\n}\n\nexport function unstable_yieldValue(value: mixed): void {\n  // eslint-disable-next-line react-internal/no-production-logging\n  if (console.log.name === 'disabledLog') {\n    // If console.log has been patched, we assume we're in render\n    // replaying and we ignore any values yielding in the second pass.\n    return;\n  }\n  if (yieldedValues === null) {\n    yieldedValues = [value];\n  } else {\n    yieldedValues.push(value);\n  }\n}\n\nexport function unstable_advanceTime(ms: number) {\n  // eslint-disable-next-line react-internal/no-production-logging\n  if (console.log.name === 'disabledLog') {\n    // If console.log has been patched, we assume we're in render\n    // replaying and we ignore any time advancing in the second pass.\n    return;\n  }\n  currentTime += ms;\n  if (scheduledTimeout !== null && timeoutTime <= currentTime) {\n    scheduledTimeout(currentTime);\n    timeoutTime = -1;\n    scheduledTimeout = null;\n  }\n}\n\nexport function requestPaint() {\n  needsPaint = true;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n */\n\ntype Heap = Array<Node>;\ntype Node = {|\n  id: number,\n  sortIndex: number,\n|};\n\nexport function push(heap: Heap, node: Node): void {\n  const index = heap.length;\n  heap.push(node);\n  siftUp(heap, node, index);\n}\n\nexport function peek(heap: Heap): Node | null {\n  const first = heap[0];\n  return first === undefined ? null : first;\n}\n\nexport function pop(heap: Heap): Node | null {\n  const first = heap[0];\n  if (first !== undefined) {\n    const last = heap.pop();\n    if (last !== first) {\n      heap[0] = last;\n      siftDown(heap, last, 0);\n    }\n    return first;\n  } else {\n    return null;\n  }\n}\n\nfunction siftUp(heap, node, i) {\n  let index = i;\n  while (true) {\n    const parentIndex = (index - 1) >>> 1;\n    const parent = heap[parentIndex];\n    if (parent !== undefined && compare(parent, node) > 0) {\n      // The parent is larger. Swap positions.\n      heap[parentIndex] = node;\n      heap[index] = parent;\n      index = parentIndex;\n    } else {\n      // The parent is smaller. Exit.\n      return;\n    }\n  }\n}\n\nfunction siftDown(heap, node, i) {\n  let index = i;\n  const length = heap.length;\n  while (index < length) {\n    const leftIndex = (index + 1) * 2 - 1;\n    const left = heap[leftIndex];\n    const rightIndex = leftIndex + 1;\n    const right = heap[rightIndex];\n\n    // If the left or right node is smaller, swap with the smaller of those.\n    if (left !== undefined && compare(left, node) < 0) {\n      if (right !== undefined && compare(right, left) < 0) {\n        heap[index] = right;\n        heap[rightIndex] = node;\n        index = rightIndex;\n      } else {\n        heap[index] = left;\n        heap[leftIndex] = node;\n        index = leftIndex;\n      }\n    } else if (right !== undefined && compare(right, node) < 0) {\n      heap[index] = right;\n      heap[rightIndex] = node;\n      index = rightIndex;\n    } else {\n      // Neither child is smaller. Exit.\n      return;\n    }\n  }\n}\n\nfunction compare(a, b) {\n  // Compare sort index first, then task id.\n  const diff = a.sortIndex - b.sortIndex;\n  return diff !== 0 ? diff : a.id - b.id;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nexport type PriorityLevel = 0 | 1 | 2 | 3 | 4 | 5;\n\n// TODO: Use symbols?\nexport const NoPriority = 0;\nexport const ImmediatePriority = 1;\nexport const UserBlockingPriority = 2;\nexport const NormalPriority = 3;\nexport const LowPriority = 4;\nexport const IdlePriority = 5;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {PriorityLevel} from './SchedulerPriorities';\nimport {enableProfiling} from './SchedulerFeatureFlags';\n\nlet runIdCounter: number = 0;\nlet mainThreadIdCounter: number = 0;\n\n// Bytes per element is 4\nconst INITIAL_EVENT_LOG_SIZE = 131072;\nconst MAX_EVENT_LOG_SIZE = 524288; // Equivalent to 2 megabytes\n\nlet eventLogSize = 0;\nlet eventLogBuffer = null;\nlet eventLog = null;\nlet eventLogIndex = 0;\n\nconst TaskStartEvent = 1;\nconst TaskCompleteEvent = 2;\nconst TaskErrorEvent = 3;\nconst TaskCancelEvent = 4;\nconst TaskRunEvent = 5;\nconst TaskYieldEvent = 6;\nconst SchedulerSuspendEvent = 7;\nconst SchedulerResumeEvent = 8;\n\nfunction logEvent(entries) {\n  if (eventLog !== null) {\n    const offset = eventLogIndex;\n    eventLogIndex += entries.length;\n    if (eventLogIndex + 1 > eventLogSize) {\n      eventLogSize *= 2;\n      if (eventLogSize > MAX_EVENT_LOG_SIZE) {\n        // Using console['error'] to evade Babel and ESLint\n        console['error'](\n          \"Scheduler Profiling: Event log exceeded maximum size. Don't \" +\n            'forget to call `stopLoggingProfilingEvents()`.',\n        );\n        stopLoggingProfilingEvents();\n        return;\n      }\n      const newEventLog = new Int32Array(eventLogSize * 4);\n      newEventLog.set(eventLog);\n      eventLogBuffer = newEventLog.buffer;\n      eventLog = newEventLog;\n    }\n    eventLog.set(entries, offset);\n  }\n}\n\nexport function startLoggingProfilingEvents(): void {\n  eventLogSize = INITIAL_EVENT_LOG_SIZE;\n  eventLogBuffer = new ArrayBuffer(eventLogSize * 4);\n  eventLog = new Int32Array(eventLogBuffer);\n  eventLogIndex = 0;\n}\n\nexport function stopLoggingProfilingEvents(): ArrayBuffer | null {\n  const buffer = eventLogBuffer;\n  eventLogSize = 0;\n  eventLogBuffer = null;\n  eventLog = null;\n  eventLogIndex = 0;\n  return buffer;\n}\n\nexport function markTaskStart(\n  task: {\n    id: number,\n    priorityLevel: PriorityLevel,\n    ...\n  },\n  ms: number,\n) {\n  if (enableProfiling) {\n    if (eventLog !== null) {\n      // performance.now returns a float, representing milliseconds. When the\n      // event is logged, it's coerced to an int. Convert to microseconds to\n      // maintain extra degrees of precision.\n      logEvent([TaskStartEvent, ms * 1000, task.id, task.priorityLevel]);\n    }\n  }\n}\n\nexport function markTaskCompleted(\n  task: {\n    id: number,\n    priorityLevel: PriorityLevel,\n    ...\n  },\n  ms: number,\n) {\n  if (enableProfiling) {\n    if (eventLog !== null) {\n      logEvent([TaskCompleteEvent, ms * 1000, task.id]);\n    }\n  }\n}\n\nexport function markTaskCanceled(\n  task: {\n    id: number,\n    priorityLevel: PriorityLevel,\n    ...\n  },\n  ms: number,\n) {\n  if (enableProfiling) {\n    if (eventLog !== null) {\n      logEvent([TaskCancelEvent, ms * 1000, task.id]);\n    }\n  }\n}\n\nexport function markTaskErrored(\n  task: {\n    id: number,\n    priorityLevel: PriorityLevel,\n    ...\n  },\n  ms: number,\n) {\n  if (enableProfiling) {\n    if (eventLog !== null) {\n      logEvent([TaskErrorEvent, ms * 1000, task.id]);\n    }\n  }\n}\n\nexport function markTaskRun(\n  task: {\n    id: number,\n    priorityLevel: PriorityLevel,\n    ...\n  },\n  ms: number,\n) {\n  if (enableProfiling) {\n    runIdCounter++;\n\n    if (eventLog !== null) {\n      logEvent([TaskRunEvent, ms * 1000, task.id, runIdCounter]);\n    }\n  }\n}\n\nexport function markTaskYield(task: {id: number, ...}, ms: number) {\n  if (enableProfiling) {\n    if (eventLog !== null) {\n      logEvent([TaskYieldEvent, ms * 1000, task.id, runIdCounter]);\n    }\n  }\n}\n\nexport function markSchedulerSuspended(ms: number) {\n  if (enableProfiling) {\n    mainThreadIdCounter++;\n\n    if (eventLog !== null) {\n      logEvent([SchedulerSuspendEvent, ms * 1000, mainThreadIdCounter]);\n    }\n  }\n}\n\nexport function markSchedulerUnsuspended(ms: number) {\n  if (enableProfiling) {\n    if (eventLog !== null) {\n      logEvent([SchedulerResumeEvent, ms * 1000, mainThreadIdCounter]);\n    }\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n/* eslint-disable no-var */\n\nimport {\n  enableSchedulerDebugging,\n  enableProfiling,\n} from './SchedulerFeatureFlags';\nimport {\n  requestHostCallback,\n  requestHostTimeout,\n  cancelHostTimeout,\n  shouldYieldToHost,\n  getCurrentTime,\n  forceFrameRate,\n  requestPaint,\n} from './SchedulerHostConfig';\nimport {push, pop, peek} from './SchedulerMinHeap';\n\n// TODO: Use symbols?\nimport {\n  ImmediatePriority,\n  UserBlockingPriority,\n  NormalPriority,\n  LowPriority,\n  IdlePriority,\n} from './SchedulerPriorities';\nimport {\n  markTaskRun,\n  markTaskYield,\n  markTaskCompleted,\n  markTaskCanceled,\n  markTaskErrored,\n  markSchedulerSuspended,\n  markSchedulerUnsuspended,\n  markTaskStart,\n  stopLoggingProfilingEvents,\n  startLoggingProfilingEvents,\n} from './SchedulerProfiling';\n\n// Max 31 bit integer. The max integer size in V8 for 32-bit systems.\n// Math.pow(2, 30) - 1\n// 0b111111111111111111111111111111\nvar maxSigned31BitInt = 1073741823;\n\n// Times out immediately\nvar IMMEDIATE_PRIORITY_TIMEOUT = -1;\n// Eventually times out\nvar USER_BLOCKING_PRIORITY_TIMEOUT = 250;\nvar NORMAL_PRIORITY_TIMEOUT = 5000;\nvar LOW_PRIORITY_TIMEOUT = 10000;\n// Never times out\nvar IDLE_PRIORITY_TIMEOUT = maxSigned31BitInt;\n\n// Tasks are stored on a min heap\nvar taskQueue = [];\nvar timerQueue = [];\n\n// Incrementing id counter. Used to maintain insertion order.\nvar taskIdCounter = 1;\n\n// Pausing the scheduler is useful for debugging.\nvar isSchedulerPaused = false;\n\nvar currentTask = null;\nvar currentPriorityLevel = NormalPriority;\n\n// This is set while performing work, to prevent re-entrancy.\nvar isPerformingWork = false;\n\nvar isHostCallbackScheduled = false;\nvar isHostTimeoutScheduled = false;\n\nfunction advanceTimers(currentTime) {\n  // Check for tasks that are no longer delayed and add them to the queue.\n  let timer = peek(timerQueue);\n  while (timer !== null) {\n    if (timer.callback === null) {\n      // Timer was cancelled.\n      pop(timerQueue);\n    } else if (timer.startTime <= currentTime) {\n      // Timer fired. Transfer to the task queue.\n      pop(timerQueue);\n      timer.sortIndex = timer.expirationTime;\n      push(taskQueue, timer);\n      if (enableProfiling) {\n        markTaskStart(timer, currentTime);\n        timer.isQueued = true;\n      }\n    } else {\n      // Remaining timers are pending.\n      return;\n    }\n    timer = peek(timerQueue);\n  }\n}\n\nfunction handleTimeout(currentTime) {\n  isHostTimeoutScheduled = false;\n  advanceTimers(currentTime);\n\n  if (!isHostCallbackScheduled) {\n    if (peek(taskQueue) !== null) {\n      isHostCallbackScheduled = true;\n      requestHostCallback(flushWork);\n    } else {\n      const firstTimer = peek(timerQueue);\n      if (firstTimer !== null) {\n        requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);\n      }\n    }\n  }\n}\n\nfunction flushWork(hasTimeRemaining, initialTime) {\n  if (enableProfiling) {\n    markSchedulerUnsuspended(initialTime);\n  }\n\n  // We'll need a host callback the next time work is scheduled.\n  isHostCallbackScheduled = false;\n  if (isHostTimeoutScheduled) {\n    // We scheduled a timeout but it's no longer needed. Cancel it.\n    isHostTimeoutScheduled = false;\n    cancelHostTimeout();\n  }\n\n  isPerformingWork = true;\n  const previousPriorityLevel = currentPriorityLevel;\n  try {\n    if (enableProfiling) {\n      try {\n        return workLoop(hasTimeRemaining, initialTime);\n      } catch (error) {\n        if (currentTask !== null) {\n          const currentTime = getCurrentTime();\n          markTaskErrored(currentTask, currentTime);\n          currentTask.isQueued = false;\n        }\n        throw error;\n      }\n    } else {\n      // No catch in prod code path.\n      return workLoop(hasTimeRemaining, initialTime);\n    }\n  } finally {\n    currentTask = null;\n    currentPriorityLevel = previousPriorityLevel;\n    isPerformingWork = false;\n    if (enableProfiling) {\n      const currentTime = getCurrentTime();\n      markSchedulerSuspended(currentTime);\n    }\n  }\n}\n\nfunction workLoop(hasTimeRemaining, initialTime) {\n  let currentTime = initialTime;\n  advanceTimers(currentTime);\n  currentTask = peek(taskQueue);\n  while (\n    currentTask !== null &&\n    !(enableSchedulerDebugging && isSchedulerPaused)\n  ) {\n    if (\n      currentTask.expirationTime > currentTime &&\n      (!hasTimeRemaining || shouldYieldToHost())\n    ) {\n      // This currentTask hasn't expired, and we've reached the deadline.\n      break;\n    }\n    const callback = currentTask.callback;\n    if (typeof callback === 'function') {\n      currentTask.callback = null;\n      currentPriorityLevel = currentTask.priorityLevel;\n      const didUserCallbackTimeout = currentTask.expirationTime <= currentTime;\n      if (enableProfiling) {\n        markTaskRun(currentTask, currentTime);\n      }\n      const continuationCallback = callback(didUserCallbackTimeout);\n      currentTime = getCurrentTime();\n      if (typeof continuationCallback === 'function') {\n        currentTask.callback = continuationCallback;\n        if (enableProfiling) {\n          markTaskYield(currentTask, currentTime);\n        }\n      } else {\n        if (enableProfiling) {\n          markTaskCompleted(currentTask, currentTime);\n          currentTask.isQueued = false;\n        }\n        if (currentTask === peek(taskQueue)) {\n          pop(taskQueue);\n        }\n      }\n      advanceTimers(currentTime);\n    } else {\n      pop(taskQueue);\n    }\n    currentTask = peek(taskQueue);\n  }\n  // Return whether there's additional work\n  if (currentTask !== null) {\n    return true;\n  } else {\n    const firstTimer = peek(timerQueue);\n    if (firstTimer !== null) {\n      requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);\n    }\n    return false;\n  }\n}\n\nfunction unstable_runWithPriority(priorityLevel, eventHandler) {\n  switch (priorityLevel) {\n    case ImmediatePriority:\n    case UserBlockingPriority:\n    case NormalPriority:\n    case LowPriority:\n    case IdlePriority:\n      break;\n    default:\n      priorityLevel = NormalPriority;\n  }\n\n  var previousPriorityLevel = currentPriorityLevel;\n  currentPriorityLevel = priorityLevel;\n\n  try {\n    return eventHandler();\n  } finally {\n    currentPriorityLevel = previousPriorityLevel;\n  }\n}\n\nfunction unstable_next(eventHandler) {\n  var priorityLevel;\n  switch (currentPriorityLevel) {\n    case ImmediatePriority:\n    case UserBlockingPriority:\n    case NormalPriority:\n      // Shift down to normal priority\n      priorityLevel = NormalPriority;\n      break;\n    default:\n      // Anything lower than normal priority should remain at the current level.\n      priorityLevel = currentPriorityLevel;\n      break;\n  }\n\n  var previousPriorityLevel = currentPriorityLevel;\n  currentPriorityLevel = priorityLevel;\n\n  try {\n    return eventHandler();\n  } finally {\n    currentPriorityLevel = previousPriorityLevel;\n  }\n}\n\nfunction unstable_wrapCallback(callback) {\n  var parentPriorityLevel = currentPriorityLevel;\n  return function() {\n    // This is a fork of runWithPriority, inlined for performance.\n    var previousPriorityLevel = currentPriorityLevel;\n    currentPriorityLevel = parentPriorityLevel;\n\n    try {\n      return callback.apply(this, arguments);\n    } finally {\n      currentPriorityLevel = previousPriorityLevel;\n    }\n  };\n}\n\nfunction unstable_scheduleCallback(priorityLevel, callback, options) {\n  var currentTime = getCurrentTime();\n\n  var startTime;\n  if (typeof options === 'object' && options !== null) {\n    var delay = options.delay;\n    if (typeof delay === 'number' && delay > 0) {\n      startTime = currentTime + delay;\n    } else {\n      startTime = currentTime;\n    }\n  } else {\n    startTime = currentTime;\n  }\n\n  var timeout;\n  switch (priorityLevel) {\n    case ImmediatePriority:\n      timeout = IMMEDIATE_PRIORITY_TIMEOUT;\n      break;\n    case UserBlockingPriority:\n      timeout = USER_BLOCKING_PRIORITY_TIMEOUT;\n      break;\n    case IdlePriority:\n      timeout = IDLE_PRIORITY_TIMEOUT;\n      break;\n    case LowPriority:\n      timeout = LOW_PRIORITY_TIMEOUT;\n      break;\n    case NormalPriority:\n    default:\n      timeout = NORMAL_PRIORITY_TIMEOUT;\n      break;\n  }\n\n  var expirationTime = startTime + timeout;\n\n  var newTask = {\n    id: taskIdCounter++,\n    callback,\n    priorityLevel,\n    startTime,\n    expirationTime,\n    sortIndex: -1,\n  };\n  if (enableProfiling) {\n    newTask.isQueued = false;\n  }\n\n  if (startTime > currentTime) {\n    // This is a delayed task.\n    newTask.sortIndex = startTime;\n    push(timerQueue, newTask);\n    if (peek(taskQueue) === null && newTask === peek(timerQueue)) {\n      // All tasks are delayed, and this is the task with the earliest delay.\n      if (isHostTimeoutScheduled) {\n        // Cancel an existing timeout.\n        cancelHostTimeout();\n      } else {\n        isHostTimeoutScheduled = true;\n      }\n      // Schedule a timeout.\n      requestHostTimeout(handleTimeout, startTime - currentTime);\n    }\n  } else {\n    newTask.sortIndex = expirationTime;\n    push(taskQueue, newTask);\n    if (enableProfiling) {\n      markTaskStart(newTask, currentTime);\n      newTask.isQueued = true;\n    }\n    // Schedule a host callback, if needed. If we're already performing work,\n    // wait until the next time we yield.\n    if (!isHostCallbackScheduled && !isPerformingWork) {\n      isHostCallbackScheduled = true;\n      requestHostCallback(flushWork);\n    }\n  }\n\n  return newTask;\n}\n\nfunction unstable_pauseExecution() {\n  isSchedulerPaused = true;\n}\n\nfunction unstable_continueExecution() {\n  isSchedulerPaused = false;\n  if (!isHostCallbackScheduled && !isPerformingWork) {\n    isHostCallbackScheduled = true;\n    requestHostCallback(flushWork);\n  }\n}\n\nfunction unstable_getFirstCallbackNode() {\n  return peek(taskQueue);\n}\n\nfunction unstable_cancelCallback(task) {\n  if (enableProfiling) {\n    if (task.isQueued) {\n      const currentTime = getCurrentTime();\n      markTaskCanceled(task, currentTime);\n      task.isQueued = false;\n    }\n  }\n\n  // Null out the callback to indicate the task has been canceled. (Can't\n  // remove from the queue because you can't remove arbitrary nodes from an\n  // array based heap, only the first one.)\n  task.callback = null;\n}\n\nfunction unstable_getCurrentPriorityLevel() {\n  return currentPriorityLevel;\n}\n\nconst unstable_requestPaint = requestPaint;\n\nexport {\n  ImmediatePriority as unstable_ImmediatePriority,\n  UserBlockingPriority as unstable_UserBlockingPriority,\n  NormalPriority as unstable_NormalPriority,\n  IdlePriority as unstable_IdlePriority,\n  LowPriority as unstable_LowPriority,\n  unstable_runWithPriority,\n  unstable_next,\n  unstable_scheduleCallback,\n  unstable_cancelCallback,\n  unstable_wrapCallback,\n  unstable_getCurrentPriorityLevel,\n  shouldYieldToHost as unstable_shouldYield,\n  unstable_requestPaint,\n  unstable_continueExecution,\n  unstable_pauseExecution,\n  unstable_getFirstCallbackNode,\n  getCurrentTime as unstable_now,\n  forceFrameRate as unstable_forceFrameRate,\n};\n\nexport const unstable_Profiling = enableProfiling\n  ? {\n      startLoggingProfilingEvents,\n      stopLoggingProfilingEvents,\n    }\n  : null;\n"],"names":["require","enableIsInputPending","enableSchedulerDebugging","enableProfilingFeatureFlag","enableProfiling","currentTime","scheduledCallback","scheduledTimeout","timeoutTime","yieldedValues","expectedNumberOfYields","didStop","isFlushing","needsPaint","shouldYieldForPaint","requestHostCallback","callback","requestHostTimeout","ms","cancelHostTimeout","shouldYieldToHost","length","getCurrentTime","forceFrameRate","unstable_flushNumberOfYields","count","Error","cb","hasMoreWork","unstable_flushUntilNextPaint","unstable_flushExpired","unstable_flushAllWithoutAsserting","unstable_clearYields","values","unstable_flushAll","unstable_yieldValue","value","console","log","name","push","unstable_advanceTime","requestPaint","heap","node","index","siftUp","peek","first","undefined","pop","last","siftDown","i","parentIndex","parent","compare","leftIndex","left","rightIndex","right","a","b","diff","sortIndex","id","ImmediatePriority","UserBlockingPriority","NormalPriority","LowPriority","IdlePriority","runIdCounter","mainThreadIdCounter","INITIAL_EVENT_LOG_SIZE","MAX_EVENT_LOG_SIZE","eventLogSize","eventLogBuffer","eventLog","eventLogIndex","TaskStartEvent","TaskCompleteEvent","TaskErrorEvent","TaskCancelEvent","TaskRunEvent","TaskYieldEvent","SchedulerSuspendEvent","SchedulerResumeEvent","logEvent","entries","offset","stopLoggingProfilingEvents","newEventLog","Int32Array","set","buffer","startLoggingProfilingEvents","ArrayBuffer","markTaskStart","task","priorityLevel","markTaskCompleted","markTaskCanceled","markTaskErrored","markTaskRun","markTaskYield","markSchedulerSuspended","markSchedulerUnsuspended","maxSigned31BitInt","IMMEDIATE_PRIORITY_TIMEOUT","USER_BLOCKING_PRIORITY_TIMEOUT","NORMAL_PRIORITY_TIMEOUT","LOW_PRIORITY_TIMEOUT","IDLE_PRIORITY_TIMEOUT","taskQueue","timerQueue","taskIdCounter","isSchedulerPaused","currentTask","currentPriorityLevel","isPerformingWork","isHostCallbackScheduled","isHostTimeoutScheduled","advanceTimers","timer","startTime","expirationTime","isQueued","handleTimeout","flushWork","firstTimer","hasTimeRemaining","initialTime","previousPriorityLevel","workLoop","error","didUserCallbackTimeout","continuationCallback","unstable_runWithPriority","eventHandler","unstable_next","unstable_wrapCallback","parentPriorityLevel","apply","arguments","unstable_scheduleCallback","options","delay","timeout","newTask","unstable_pauseExecution","unstable_continueExecution","unstable_getFirstCallbackNode","unstable_cancelCallback","unstable_getCurrentPriorityLevel","unstable_requestPaint","unstable_Profiling"],"mappings":"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"}