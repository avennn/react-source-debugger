{"version":3,"file":"ReactFlightDOMRelayServer-prod.js","sources":["../../packages/shared/formatProdErrorMessage.js","../../packages/react-transport-dom-relay/src/ReactFlightDOMRelayServerHostConfig.js","../../packages/shared/ReactSymbols.js","../../packages/shared/ReactSharedInternals.js","../../packages/react-server/src/ReactFlightServer.js","../../packages/react-transport-dom-relay/src/ReactFlightDOMRelayServer.js"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n// Do not require this module directly! Use normal `invariant` calls with\n// template literal strings. The messages will be replaced with error codes\n// during build.\n\nfunction formatProdErrorMessage(code) {\n  let url = 'https://reactjs.org/docs/error-decoder.html?invariant=' + code;\n  for (let i = 1; i < arguments.length; i++) {\n    url += '&args[]=' + encodeURIComponent(arguments[i]);\n  }\n  return (\n    `Minified React error #${code}; visit ${url} for the full message or ` +\n    'use the non-minified dev environment for full errors and additional ' +\n    'helpful warnings.'\n  );\n}\n\nexport default formatProdErrorMessage;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Request, ReactModel} from 'react-server/src/ReactFlightServer';\n\nimport type {\n  Destination,\n  BundlerConfig,\n  ModuleReference,\n  ModuleMetaData,\n} from 'ReactFlightDOMRelayServerIntegration';\n\nimport {resolveModelToJSON} from 'react-server/src/ReactFlightServer';\n\nimport {\n  emitModel,\n  emitError,\n  resolveModuleMetaData as resolveModuleMetaDataImpl,\n} from 'ReactFlightDOMRelayServerIntegration';\n\nexport type {\n  Destination,\n  BundlerConfig,\n  ModuleReference,\n  ModuleMetaData,\n} from 'ReactFlightDOMRelayServerIntegration';\n\nexport function resolveModuleMetaData<T>(\n  config: BundlerConfig,\n  resource: ModuleReference<T>,\n): ModuleMetaData {\n  return resolveModuleMetaDataImpl(config, resource);\n}\n\ntype JSONValue =\n  | string\n  | number\n  | boolean\n  | null\n  | {+[key: string]: JSONValue}\n  | Array<JSONValue>;\n\nexport type Chunk =\n  | {\n      type: 'json',\n      id: number,\n      json: JSONValue,\n    }\n  | {\n      type: 'error',\n      id: number,\n      json: {\n        message: string,\n        stack: string,\n        ...\n      },\n    };\n\nexport function processErrorChunk(\n  request: Request,\n  id: number,\n  message: string,\n  stack: string,\n): Chunk {\n  return {\n    type: 'error',\n    id: id,\n    json: {\n      message,\n      stack,\n    },\n  };\n}\n\nfunction convertModelToJSON(\n  request: Request,\n  parent: {+[key: string]: ReactModel} | $ReadOnlyArray<ReactModel>,\n  key: string,\n  model: ReactModel,\n): JSONValue {\n  const json = resolveModelToJSON(request, parent, key, model);\n  if (typeof json === 'object' && json !== null) {\n    if (Array.isArray(json)) {\n      const jsonArray: Array<JSONValue> = [];\n      for (let i = 0; i < json.length; i++) {\n        jsonArray[i] = convertModelToJSON(request, json, '' + i, json[i]);\n      }\n      return jsonArray;\n    } else {\n      const jsonObj: {[key: string]: JSONValue} = {};\n      for (const nextKey in json) {\n        jsonObj[nextKey] = convertModelToJSON(\n          request,\n          json,\n          nextKey,\n          json[nextKey],\n        );\n      }\n      return jsonObj;\n    }\n  }\n  return json;\n}\n\nexport function processModelChunk(\n  request: Request,\n  id: number,\n  model: ReactModel,\n): Chunk {\n  const json = convertModelToJSON(request, {}, '', model);\n  return {\n    type: 'json',\n    id: id,\n    json: json,\n  };\n}\n\nexport function scheduleWork(callback: () => void) {\n  callback();\n}\n\nexport function flushBuffered(destination: Destination) {}\n\nexport function beginWriting(destination: Destination) {}\n\nexport function writeChunk(destination: Destination, chunk: Chunk): boolean {\n  if (chunk.type === 'json') {\n    emitModel(destination, chunk.id, chunk.json);\n  } else {\n    emitError(destination, chunk.id, chunk.json.message, chunk.json.stack);\n  }\n  return true;\n}\n\nexport function completeWriting(destination: Destination) {}\n\nexport {close} from 'ReactFlightDOMRelayServerIntegration';\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\n// ATTENTION\n// When adding new symbols to this file,\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n\n// The Symbol used to tag the ReactElement-like types. If there is no native Symbol\n// nor polyfill, then a plain number is used for performance.\nexport let REACT_ELEMENT_TYPE = 0xeac7;\nexport let REACT_PORTAL_TYPE = 0xeaca;\nexport let REACT_FRAGMENT_TYPE = 0xeacb;\nexport let REACT_STRICT_MODE_TYPE = 0xeacc;\nexport let REACT_PROFILER_TYPE = 0xead2;\nexport let REACT_PROVIDER_TYPE = 0xeacd;\nexport let REACT_CONTEXT_TYPE = 0xeace;\nexport let REACT_FORWARD_REF_TYPE = 0xead0;\nexport let REACT_SUSPENSE_TYPE = 0xead1;\nexport let REACT_SUSPENSE_LIST_TYPE = 0xead8;\nexport let REACT_MEMO_TYPE = 0xead3;\nexport let REACT_LAZY_TYPE = 0xead4;\nexport let REACT_BLOCK_TYPE = 0xead9;\nexport let REACT_SERVER_BLOCK_TYPE = 0xeada;\nexport let REACT_FUNDAMENTAL_TYPE = 0xead5;\nexport let REACT_SCOPE_TYPE = 0xead7;\nexport let REACT_OPAQUE_ID_TYPE = 0xeae0;\nexport let REACT_DEBUG_TRACING_MODE_TYPE = 0xeae1;\nexport let REACT_OFFSCREEN_TYPE = 0xeae2;\nexport let REACT_LEGACY_HIDDEN_TYPE = 0xeae3;\n\nif (typeof Symbol === 'function' && Symbol.for) {\n  const symbolFor = Symbol.for;\n  REACT_ELEMENT_TYPE = symbolFor('react.element');\n  REACT_PORTAL_TYPE = symbolFor('react.portal');\n  REACT_FRAGMENT_TYPE = symbolFor('react.fragment');\n  REACT_STRICT_MODE_TYPE = symbolFor('react.strict_mode');\n  REACT_PROFILER_TYPE = symbolFor('react.profiler');\n  REACT_PROVIDER_TYPE = symbolFor('react.provider');\n  REACT_CONTEXT_TYPE = symbolFor('react.context');\n  REACT_FORWARD_REF_TYPE = symbolFor('react.forward_ref');\n  REACT_SUSPENSE_TYPE = symbolFor('react.suspense');\n  REACT_SUSPENSE_LIST_TYPE = symbolFor('react.suspense_list');\n  REACT_MEMO_TYPE = symbolFor('react.memo');\n  REACT_LAZY_TYPE = symbolFor('react.lazy');\n  REACT_BLOCK_TYPE = symbolFor('react.block');\n  REACT_SERVER_BLOCK_TYPE = symbolFor('react.server.block');\n  REACT_FUNDAMENTAL_TYPE = symbolFor('react.fundamental');\n  REACT_SCOPE_TYPE = symbolFor('react.scope');\n  REACT_OPAQUE_ID_TYPE = symbolFor('react.opaque.id');\n  REACT_DEBUG_TRACING_MODE_TYPE = symbolFor('react.debug_trace_mode');\n  REACT_OFFSCREEN_TYPE = symbolFor('react.offscreen');\n  REACT_LEGACY_HIDDEN_TYPE = symbolFor('react.legacy_hidden');\n}\n\nconst MAYBE_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\nconst FAUX_ITERATOR_SYMBOL = '@@iterator';\n\nexport function getIteratorFn(maybeIterable: ?any): ?() => ?Iterator<*> {\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\n    return null;\n  }\n  const maybeIterator =\n    (MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL]) ||\n    maybeIterable[FAUX_ITERATOR_SYMBOL];\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n  return null;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport * as React from 'react';\n\nconst ReactSharedInternals =\n  React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n\nexport default ReactSharedInternals;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Dispatcher as DispatcherType} from 'react-reconciler/src/ReactInternalTypes';\nimport type {\n  Destination,\n  Chunk,\n  BundlerConfig,\n  ModuleMetaData,\n  ModuleReference,\n} from './ReactFlightServerConfig';\n\nimport {\n  scheduleWork,\n  beginWriting,\n  writeChunk,\n  completeWriting,\n  flushBuffered,\n  close,\n  processModelChunk,\n  processErrorChunk,\n  resolveModuleMetaData,\n} from './ReactFlightServerConfig';\n\nimport {\n  REACT_BLOCK_TYPE,\n  REACT_ELEMENT_TYPE,\n  REACT_DEBUG_TRACING_MODE_TYPE,\n  REACT_FORWARD_REF_TYPE,\n  REACT_FRAGMENT_TYPE,\n  REACT_LAZY_TYPE,\n  REACT_LEGACY_HIDDEN_TYPE,\n  REACT_MEMO_TYPE,\n  REACT_OFFSCREEN_TYPE,\n  REACT_PROFILER_TYPE,\n  REACT_SCOPE_TYPE,\n  REACT_SERVER_BLOCK_TYPE,\n  REACT_STRICT_MODE_TYPE,\n  REACT_SUSPENSE_TYPE,\n  REACT_SUSPENSE_LIST_TYPE,\n} from 'shared/ReactSymbols';\n\nimport * as React from 'react';\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\nimport invariant from 'shared/invariant';\n\ntype ReactJSONValue =\n  | string\n  | boolean\n  | number\n  | null\n  | $ReadOnlyArray<ReactJSONValue>\n  | ReactModelObject;\n\nexport type ReactModel =\n  | React$Element<any>\n  | string\n  | boolean\n  | number\n  | null\n  | Iterable<ReactModel>\n  | ReactModelObject;\n\ntype ReactModelObject = {+[key: string]: ReactModel};\n\ntype Segment = {\n  id: number,\n  query: () => ReactModel,\n  ping: () => void,\n};\n\nexport type Request = {\n  destination: Destination,\n  bundlerConfig: BundlerConfig,\n  nextChunkId: number,\n  pendingChunks: number,\n  pingedSegments: Array<Segment>,\n  completedJSONChunks: Array<Chunk>,\n  completedErrorChunks: Array<Chunk>,\n  flowing: boolean,\n  toJSON: (key: string, value: ReactModel) => ReactJSONValue,\n};\n\nconst ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;\n\nexport function createRequest(\n  model: ReactModel,\n  destination: Destination,\n  bundlerConfig: BundlerConfig,\n): Request {\n  const pingedSegments = [];\n  const request = {\n    destination,\n    bundlerConfig,\n    nextChunkId: 0,\n    pendingChunks: 0,\n    pingedSegments: pingedSegments,\n    completedJSONChunks: [],\n    completedErrorChunks: [],\n    flowing: false,\n    toJSON: function(key: string, value: ReactModel): ReactJSONValue {\n      return resolveModelToJSON(request, this, key, value);\n    },\n  };\n  request.pendingChunks++;\n  const rootSegment = createSegment(request, () => model);\n  pingedSegments.push(rootSegment);\n  return request;\n}\n\nfunction attemptResolveElement(element: React$Element<any>): ReactModel {\n  const type = element.type;\n  const props = element.props;\n  if (typeof type === 'function') {\n    // This is a server-side component.\n    return type(props);\n  } else if (typeof type === 'string') {\n    // This is a host element. E.g. HTML.\n    return [REACT_ELEMENT_TYPE, type, element.key, element.props];\n  } else if (type[0] === REACT_SERVER_BLOCK_TYPE) {\n    return [REACT_ELEMENT_TYPE, type, element.key, element.props];\n  } else if (\n    type === REACT_FRAGMENT_TYPE ||\n    type === REACT_STRICT_MODE_TYPE ||\n    type === REACT_PROFILER_TYPE ||\n    type === REACT_SCOPE_TYPE ||\n    type === REACT_DEBUG_TRACING_MODE_TYPE ||\n    type === REACT_LEGACY_HIDDEN_TYPE ||\n    type === REACT_OFFSCREEN_TYPE ||\n    // TODO: These are temporary shims\n    // and we'll want a different behavior.\n    type === REACT_SUSPENSE_TYPE ||\n    type === REACT_SUSPENSE_LIST_TYPE\n  ) {\n    return element.props.children;\n  } else if (type != null && typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_FORWARD_REF_TYPE: {\n        const render = type.render;\n        return render(props, undefined);\n      }\n      case REACT_MEMO_TYPE: {\n        const nextChildren = React.createElement(type.type, element.props);\n        return attemptResolveElement(nextChildren);\n      }\n    }\n  }\n  invariant(false, 'Unsupported type.');\n}\n\nfunction pingSegment(request: Request, segment: Segment): void {\n  const pingedSegments = request.pingedSegments;\n  pingedSegments.push(segment);\n  if (pingedSegments.length === 1) {\n    scheduleWork(() => performWork(request));\n  }\n}\n\nfunction createSegment(request: Request, query: () => ReactModel): Segment {\n  const id = request.nextChunkId++;\n  const segment = {\n    id,\n    query,\n    ping: () => pingSegment(request, segment),\n  };\n  return segment;\n}\n\nfunction serializeIDRef(id: number): string {\n  return '$' + id.toString(16);\n}\n\nfunction escapeStringValue(value: string): string {\n  if (value[0] === '$' || value[0] === '@') {\n    // We need to escape $ or @ prefixed strings since we use those to encode\n    // references to IDs and as special symbol values.\n    return '$' + value;\n  } else {\n    return value;\n  }\n}\n\nexport function resolveModelToJSON(\n  request: Request,\n  parent: {+[key: string | number]: ReactModel} | $ReadOnlyArray<ReactModel>,\n  key: string,\n  value: ReactModel,\n): ReactJSONValue {\n  // Special Symbols\n  switch (value) {\n    case REACT_ELEMENT_TYPE:\n      return '$';\n    case REACT_SERVER_BLOCK_TYPE:\n      return '@';\n    case REACT_LAZY_TYPE:\n    case REACT_BLOCK_TYPE:\n      invariant(\n        false,\n        'React Blocks (and Lazy Components) are expected to be replaced by a ' +\n          'compiler on the server. Try configuring your compiler set up and avoid ' +\n          'using React.lazy inside of Blocks.',\n      );\n  }\n\n  if (parent[0] === REACT_SERVER_BLOCK_TYPE) {\n    // We're currently encoding part of a Block. Look up which key.\n    switch (key) {\n      case '1': {\n        // Module reference\n        const moduleReference: ModuleReference<any> = (value: any);\n        try {\n          const moduleMetaData: ModuleMetaData = resolveModuleMetaData(\n            request.bundlerConfig,\n            moduleReference,\n          );\n          return (moduleMetaData: ReactJSONValue);\n        } catch (x) {\n          request.pendingChunks++;\n          const errorId = request.nextChunkId++;\n          emitErrorChunk(request, errorId, x);\n          return serializeIDRef(errorId);\n        }\n      }\n      case '2': {\n        // Load function\n        const load: () => ReactModel = (value: any);\n        try {\n          // Attempt to resolve the data.\n          return load();\n        } catch (x) {\n          if (\n            typeof x === 'object' &&\n            x !== null &&\n            typeof x.then === 'function'\n          ) {\n            // Something suspended, we'll need to create a new segment and resolve it later.\n            request.pendingChunks++;\n            const newSegment = createSegment(request, load);\n            const ping = newSegment.ping;\n            x.then(ping, ping);\n            return serializeIDRef(newSegment.id);\n          } else {\n            // This load failed, encode the error as a separate row and reference that.\n            request.pendingChunks++;\n            const errorId = request.nextChunkId++;\n            emitErrorChunk(request, errorId, x);\n            return serializeIDRef(errorId);\n          }\n        }\n      }\n      default: {\n        invariant(\n          false,\n          'A server block should never encode any other slots. This is a bug in React.',\n        );\n      }\n    }\n  }\n\n  if (typeof value === 'string') {\n    return escapeStringValue(value);\n  }\n\n  // Resolve server components.\n  while (\n    typeof value === 'object' &&\n    value !== null &&\n    value.$$typeof === REACT_ELEMENT_TYPE\n  ) {\n    // TODO: Concatenate keys of parents onto children.\n    const element: React$Element<any> = (value: any);\n    try {\n      // Attempt to render the server component.\n      value = attemptResolveElement(element);\n    } catch (x) {\n      if (typeof x === 'object' && x !== null && typeof x.then === 'function') {\n        // Something suspended, we'll need to create a new segment and resolve it later.\n        request.pendingChunks++;\n        const newSegment = createSegment(request, () => value);\n        const ping = newSegment.ping;\n        x.then(ping, ping);\n        return serializeIDRef(newSegment.id);\n      } else {\n        // Something errored. Don't bother encoding anything up to here.\n        throw x;\n      }\n    }\n  }\n\n  return value;\n}\n\nfunction emitErrorChunk(request: Request, id: number, error: mixed): void {\n  // TODO: We should not leak error messages to the client in prod.\n  // Give this an error code instead and log on the server.\n  // We can serialize the error in DEV as a convenience.\n  let message;\n  let stack = '';\n  try {\n    if (error instanceof Error) {\n      message = '' + error.message;\n      stack = '' + error.stack;\n    } else {\n      message = 'Error: ' + (error: any);\n    }\n  } catch (x) {\n    message = 'An error occurred but serializing the error message failed.';\n  }\n\n  const processedChunk = processErrorChunk(request, id, message, stack);\n  request.completedErrorChunks.push(processedChunk);\n}\n\nfunction retrySegment(request: Request, segment: Segment): void {\n  const query = segment.query;\n  let value;\n  try {\n    value = query();\n    while (\n      typeof value === 'object' &&\n      value !== null &&\n      value.$$typeof === REACT_ELEMENT_TYPE\n    ) {\n      // TODO: Concatenate keys of parents onto children.\n      const element: React$Element<any> = (value: any);\n      // Attempt to render the server component.\n      // Doing this here lets us reuse this same segment if the next component\n      // also suspends.\n      segment.query = () => value;\n      value = attemptResolveElement(element);\n    }\n    const processedChunk = processModelChunk(request, segment.id, value);\n    request.completedJSONChunks.push(processedChunk);\n  } catch (x) {\n    if (typeof x === 'object' && x !== null && typeof x.then === 'function') {\n      // Something suspended again, let's pick it back up later.\n      const ping = segment.ping;\n      x.then(ping, ping);\n      return;\n    } else {\n      // This errored, we need to serialize this error to the\n      emitErrorChunk(request, segment.id, x);\n    }\n  }\n}\n\nfunction performWork(request: Request): void {\n  const prevDispatcher = ReactCurrentDispatcher.current;\n  ReactCurrentDispatcher.current = Dispatcher;\n\n  const pingedSegments = request.pingedSegments;\n  request.pingedSegments = [];\n  for (let i = 0; i < pingedSegments.length; i++) {\n    const segment = pingedSegments[i];\n    retrySegment(request, segment);\n  }\n  if (request.flowing) {\n    flushCompletedChunks(request);\n  }\n\n  ReactCurrentDispatcher.current = prevDispatcher;\n}\n\nlet reentrant = false;\nfunction flushCompletedChunks(request: Request): void {\n  if (reentrant) {\n    return;\n  }\n  reentrant = true;\n  const destination = request.destination;\n  beginWriting(destination);\n  try {\n    const jsonChunks = request.completedJSONChunks;\n    let i = 0;\n    for (; i < jsonChunks.length; i++) {\n      request.pendingChunks--;\n      const chunk = jsonChunks[i];\n      if (!writeChunk(destination, chunk)) {\n        request.flowing = false;\n        i++;\n        break;\n      }\n    }\n    jsonChunks.splice(0, i);\n    const errorChunks = request.completedErrorChunks;\n    i = 0;\n    for (; i < errorChunks.length; i++) {\n      request.pendingChunks--;\n      const chunk = errorChunks[i];\n      if (!writeChunk(destination, chunk)) {\n        request.flowing = false;\n        i++;\n        break;\n      }\n    }\n    errorChunks.splice(0, i);\n  } finally {\n    reentrant = false;\n    completeWriting(destination);\n  }\n  flushBuffered(destination);\n  if (request.pendingChunks === 0) {\n    // We're done.\n    close(destination);\n  }\n}\n\nexport function startWork(request: Request): void {\n  request.flowing = true;\n  scheduleWork(() => performWork(request));\n}\n\nexport function startFlowing(request: Request): void {\n  request.flowing = true;\n  flushCompletedChunks(request);\n}\n\nfunction unsupportedHook(): void {\n  invariant(false, 'This Hook is not supported in Server Components.');\n}\n\nconst Dispatcher: DispatcherType = {\n  useMemo<T>(nextCreate: () => T): T {\n    return nextCreate();\n  },\n  useCallback<T>(callback: T): T {\n    return callback;\n  },\n  useDebugValue(): void {},\n  useDeferredValue<T>(value: T): T {\n    return value;\n  },\n  useTransition(): [(callback: () => void) => void, boolean] {\n    return [() => {}, false];\n  },\n  readContext: (unsupportedHook: any),\n  useContext: (unsupportedHook: any),\n  useReducer: (unsupportedHook: any),\n  useRef: (unsupportedHook: any),\n  useState: (unsupportedHook: any),\n  useLayoutEffect: (unsupportedHook: any),\n  useImperativeHandle: (unsupportedHook: any),\n  useEffect: (unsupportedHook: any),\n  useOpaqueIdentifier: (unsupportedHook: any),\n  useMutableSource: (unsupportedHook: any),\n};\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {ReactModel} from 'react-server/src/ReactFlightServer';\nimport type {\n  BundlerConfig,\n  Destination,\n} from './ReactFlightDOMRelayServerHostConfig';\n\nimport {createRequest, startWork} from 'react-server/src/ReactFlightServer';\n\nfunction render(\n  model: ReactModel,\n  destination: Destination,\n  config: BundlerConfig,\n): void {\n  const request = createRequest(model, destination, config);\n  startWork(request);\n}\n\nexport {render};\n"],"names":["formatProdErrorMessage","code","url","i","arguments","length","encodeURIComponent","resolveModuleMetaData","config","resource","resolveModuleMetaDataImpl","processErrorChunk","request","id","message","stack","type","json","convertModelToJSON","parent","key","model","resolveModelToJSON","Array","isArray","jsonArray","jsonObj","nextKey","processModelChunk","scheduleWork","callback","writeChunk","destination","chunk","emitModel","emitError","REACT_ELEMENT_TYPE","REACT_FRAGMENT_TYPE","REACT_STRICT_MODE_TYPE","REACT_PROFILER_TYPE","REACT_FORWARD_REF_TYPE","REACT_SUSPENSE_TYPE","REACT_SUSPENSE_LIST_TYPE","REACT_MEMO_TYPE","REACT_LAZY_TYPE","REACT_BLOCK_TYPE","REACT_SERVER_BLOCK_TYPE","REACT_SCOPE_TYPE","REACT_DEBUG_TRACING_MODE_TYPE","REACT_OFFSCREEN_TYPE","REACT_LEGACY_HIDDEN_TYPE","Symbol","for","symbolFor","REACT_PORTAL_TYPE","REACT_PROVIDER_TYPE","REACT_FUNDAMENTAL_TYPE","REACT_OPAQUE_ID_TYPE","ReactSharedInternals","React","ReactCurrentDispatcher","createRequest","bundlerConfig","pingedSegments","nextChunkId","pendingChunks","completedJSONChunks","completedErrorChunks","flowing","toJSON","value","rootSegment","createSegment","push","attemptResolveElement","element","props","children","$$typeof","render","undefined","nextChildren","pingSegment","segment","performWork","query","ping","serializeIDRef","toString","escapeStringValue","moduleReference","moduleMetaData","x","errorId","emitErrorChunk","load","then","newSegment","error","Error","processedChunk","retrySegment","prevDispatcher","current","Dispatcher","flushCompletedChunks","reentrant","beginWriting","jsonChunks","splice","errorChunks","completeWriting","close","startWork","unsupportedHook","useMemo","nextCreate","useCallback","useDebugValue","useDeferredValue","useTransition","readContext","useContext","useReducer","useRef","useState","useLayoutEffect","useImperativeHandle","useEffect","useOpaqueIdentifier","useMutableSource"],"mappings":"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"}